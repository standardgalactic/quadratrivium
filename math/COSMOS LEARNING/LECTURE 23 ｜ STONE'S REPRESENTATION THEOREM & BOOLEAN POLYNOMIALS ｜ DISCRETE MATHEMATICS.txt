Good afternoon everyone. Good afternoon sir. Good afternoon sir. Good afternoon Gaurav.
So what we did last time, if you remember. Representation theorem and some of the theorems
related first. Yes, what was the representation theorem? What was the statement?
The theorem says if B is a Boolean algebra and A is a set of all the atoms, then B is
isomorphic to power set of A. Yes, and after that we did a result very important result.
What was this? The last result that we did.
Every finite Boolean algebra is isomorphic to Boolean isomorphic to
B to the power n where V was the set. 0 1, right? 0 1 to the power n.
Right? Yes.
So we will discuss and then we will move to our next topic on this unit.
So.
So.
Okay, so this whiteboard is visible to everyone. Yes.
Okay, so the theorem we did was that every finite Boolean algebra
B is isomorphic to
B to the power n where B is equal to 0 1, right? For some n belonging to n.
But.
But the same identification
may fail to hold. The same result may not hold, may fail to hold. In case
B is an infinite Boolean algebra. Okay, so as a
so then we have the stones representation theorem for our health stones representation
theorem. We are not going to prove it. We are just going to state it. So what it says is that every
if B is any any Boolean algebra, if
for any Boolean algebra B for any Boolean algebra B finite or infinite,
okay? There exists a set M
and an embed and a Boolean embedding
and a Boolean embedding
5 from B to power set of. So basically every Boolean algebra can be embedded into
some power set. That is every Boolean algebra can be embedded into
power set of some set.
Okay? So this is what stones representation theorem says.
That every Boolean algebra is isomorphic to power set of the set of atoms, right?
But what they are saying here is that every Boolean algebra can be embedded. So there exists
this 5 is Boolean embedding. Okay, so it is what type of function is this?
Join, meet and complement.
Injective. Right? On to me, injective.
Okay? If on to injective and it preserves all the
operations. Okay? Monomorphism, Boolean monomorphism or Boolean embedding? Okay, fine.
Okay. Now we are going to define, okay, so first let us see what, so let us take any Boolean algebra and
so we are going to define notation.
Okay? So let B be any Boolean algebra. Okay? And X be any set. So X is any set, B is any Boolean
algebra. Then
BX, the set of all functions. Then BX, the node, just 0, 1, X, I didn't want to do that.
Remember 0, 1, X? What was this set?
Yes?
Yes, characteristic function of X. Yes, characteristic function of X.
Oh, characteristic function of A, so that A is contained in X. Right?
Set of all characteristic functions. That is, it is nothing but set of all functions
from A to X. Sorry, X to A. X to 0, 1. Okay?
X to 0, 1. Set of all functions from X to 0, 1. Similarly, what BX will denote?
It will denote the set of all mappings from,
denote the set of all mappings from X to B.
Then BX denote the set of all mappings from X to B.
So remark
for any Boolean algebra
B and any set X.
BX is a Boolean algebra with respect to following operations.
So what we have to define cap and cup for all F, G belonging to
BX. So that is F and G are functions from X to B. Okay?
What are the properties? First is F cap G.
F cap G is a function from X to B defined as how we will define it.
So F cap GX will be equal to, how can we define? We can define like this, FX cap GX
for every X in X. Right? FX is an element of B. GX is an element of B. So it preserves B cap.
So cap will be an element of B. So we'll define function. Okay? Similarly, F cap G we will define
from X to B as F cap GX will be equal to FX cap GX for every X in X. Right? And third,
now we need to define complement also. So F dash from X to B defined as how we will define?
F dash X, what should be this?
Compliment of FX. Yes, complement of FX.
Okay? So this is how we define. So cap is defined like this, cup is defined like this,
and complement is defined like this. So then it forms a Boolean algebra.
Okay? And there is a special notation in this. If we take X as B, then what will happen?
So there is another notation.
Okay? Remember this. So for any Boolean algebra B,
B, BN, what will it represent? So we are taking BN instead of X.
Set of all functions, mappings from BN to B. Right? So we denote
B, BN by F and B. Okay? So F and B represents the Boolean algebra of all functions from.
So that is F and B is a Boolean algebra of all mappings
from BN to B. So basically what we are doing is we are replacing
replacing X by BN.
Okay? Is it fine?
Yes.
Okay? So these notations we will use later on. In fact,
we are going to define Boolean polynomials and then we will use them there.
Okay? So remember these notations. This is all there in Boolean algebra.
So now we are going to start with Boolean polynomials.
fx equal to x to the power n plus x square plus x
and fx equal to xn yn plus x square y plus xy square fxy, sorry, and fxy equal to root x
y plus y root x. So which one is polynomial? Which one are polynomial?
First one. So this is polynomial
in X. This is also polynomial.
Bas漂 polynomial xy, xy area are used есть servicio.
So if we take
x to the power n k Cook's combinations, if you take as many variables in these combinations of
combinations, natural powers, then that will be a polynomial.
Okay, so similarly, we define two variables here, we can define a polynomial in n variables as well.
fx1, x2, xn equal to x1, x2, xn. This is the polynomial in n variables.
And similarly, we can have this polynomial also, x1 square plus x2 square plus xn square.
So again, a polynomial in n variables, so any combination.
Okay, but powers that should be natural numbers, x or
variables that should be natural numbers.
Is it fine?
Okay, so this is all there is.
Okay, in reals.
Okay, so find theِّn polynomial.
Okay.
rasiling.
plus or multiplication will represent cap and multiplication will represent cap, so let
x is a set of n objects, n symbols and they are called indeterminates or variables, so
basically we are talking of polynomials in n variables, basically we are defining this
boolean polynomials in n variables, so this is what we are going to define, so we have
taken n symbols x1, x2, xn which are variables and now which does not contain the symbols
0 or 1, so 0 or 1 is not a part of this very symbols, there are some arbitrary variables
they are not 0 or 1, the boolean polynomials in x are the objects which can be obtained
by finitely many successive applications of x1, x2, xn and 0 or 1, and if we have 2 boolean
polynomials then their cap, their cap and their complement will also be boolean polynomials
and p polynomials are equal if their sequence of symbols are identical, and we denote this
set of all boolean polynomials in x1, xk, xn by pn, because pn denotes the set of all
boolean polynomials in n variables x1, x2, xn, x1, x2, xn, 0 and 1, these are all boolean
polynomials, okay, and then the first point is that these are all boolean polynomials,
second is that if we have 2 boolean polynomials, fp and q are 2 boolean polynomials, okay,
then p cap q is also boolean polynomial, p cap q is also boolean polynomial and p
complement is also boolean polynomial, so what does it mean? Equally, say x1 is boolean
polynomial, x2 is boolean polynomial, so this will imply x1 cap x2 is boolean polynomial,
x1 cap x2 is boolean polynomial, x1 complement is also boolean polynomial, or of course is
x1 cap x1 is boolean polynomial, x2 cap x2 is boolean polynomial, x1 cap x1 is, because
x2 cap x2 is boolean polynomial, so this is how we are getting, and then if we
will continue to meet their joint, then whatever expression will be like this, x1 cap x2 cap
x3 cap x4 cap x4 cap x4 cap x4 cap x4 cap x4 cap x4 cap x4 cap x4 cap x4 cap x4 cap x4 cap
any expression, any expression involving x1 x2 xn with cap, cap and complement is a boolean
polynomial, so any, that is in simple words, in simple words, so these are all boolean
polynomials, in simple words, any expression, any expression involving x1 x2 xn 0 1 cap
cap and complement, any expression involving x1 x2 xn 0 1 cap cap or 1, so complement is
a boolean polynomial in n variables x1 x2 xn,
is it fine?
So these are examples of some boolean polynomials in x1 x2, as you can see, so these are all
expressions involving, so as you can see from here, okay, so from here you can see that
x1 x2, so this 0, x1 itself, x1 cap x1, x1 cap x2, x1 cap x2, so
x1 x2 or complement or cap or cap, so that's why they are all boolean polynomials over x1 x2, clear?
Sir, here 0 and 1 are open bottom elements.
Yes, in boolean algebra, 0 and 1 are our top or bottom elements, what is boolean algebra?
B, what is boolean algebra?
B, cap, cap, 0, 1, complement, okay, this is top, bottom element,
this is top element, okay, boolean algebra has this notation, so cap, top, bottom element,
top element and complement, this is not the natural number 0 and 1, this can be anything.
Okay, that's fine, yes, so now we have defined boolean polynomials.
If I have some polynomial, this is some polynomial, a0 xn plus a1 xn minus 1 plus an, if I have some polynomial in Reals,
so p from r to r, what will happen?
Here x is arbitrary, here x is, here x is, if anything, this is not any real number or something,
just note, here x is symbol, right, any symbol, what is this called?
What is this called?
Now we have given x as a notation, we have given it as a domain, what will happen first?
What is this called?
Polynomial function, okay, so this is the difference between polynomial and polynomial function.
Polynomial has x, that is some symbol that can represent anyone, because we don't know anything about it.
Polynomial function has a function from some domain.
So here x represents every real number, whereas in this polynomial, this x has arbitrary representation,
this means there is no symbol, okay, this x represents a real number while this x can be anything.
Similarly, we have boolean polynomial function, so what will happen boolean polynomial function definition?
So we have some variables, right?
We need some variables.
This is a boolean polynomial function.
Just read the definition once, then I will explain it.
So what this definition is saying that b is any boolean algebra, b to the power n is direct product of n copies of b.
p is a boolean polynomial function in pn, okay.
So pn, then what is the set of all boolean polynomials?
So p is some boolean polynomial, so now we are defining, we have defined r to r, here we can do anything, we will define bn to b.
Because we need n variables, right?
We need variables, so we are giving values.
Because n variable, this was one variable function.
If we had to define fxy, remember, if we had to define pxy here, what would happen?
If I have two, just say, if there were two variables, pxy, that would be a function from r squared to r, right?
Because in that, we have to pick up x and y, we have to pick up coordinates.
Similarly, if we had three variables, x1, x2, x3, so r cubed to r.
This is also a polynomial function.
Because all these are functions.
So similarly, up to k, our first n variables have to be bn to b.
The function should be from bn to b, okay.
Okay, so x1, x2, xn are here.
So basically, we are giving different values.
We are giving values x1, x1 are giving a1 value, xn are giving an value.
That's why we denote it like this.
Just see it as this function, this function.
So here we have to define r, because we have to define bn algebra.
So it will become b.
Okay.
Yeah, so this is nothing but, so pb is a Boolean polynomial.
So we will represent a Boolean polynomial, okay.
So in this, our x1, x2, xn are symbols.
X1, x2, xn are symbols.
When we define these symbols in the domain, okay.
Now we will give it a domain.
It will become a Boolean polynomial.
We have given a domain, bn, and our code domain is b.
And that is the same notation, okay.
Fine.
For example, okay.
For example, let us define, let p equal to x1 cap, x2 in p2, okay.
It is a polynomial in two variables in p2, okay.
Then pb, pb what will happen?
pb bar will be a Boolean polynomial function from b2 to b defined as, how will it be defined?
pb bar a1, a2 will be, a1 cap a2.
The same formula here, just replace a1 and a2.
It is a Boolean polynomial function, okay.
So, we are just giving them values.
We are giving them values.
First, x1, x2 were symbols here.
We are just giving them values.
Okay, now clear?
Yes, sir.
This is Boolean polynomial.
So, here they have all the examples.
You can take, see this.
Okay, so as you can see, we are taking n equal to 2.
So, we are talking in two variables.
This is one polynomial, x1 cap, x2.
This is another polynomial, x2 cap, x1.
So, then pb bar is a function from b2.
So, we are taking b as 0, 1.
We are taking Boolean algebra as 0, 1.
So, b2 to b function defined as 0, 0.
What will be 0 cap 0?
0, 0 cap 1 is 0.
1 cap 0 is 0.
1 cap is 1.
So, this is function p.
pb bar is 0, 0 is this.
So, this is...
So, all the values are going to the same.
So, pb bar is equal to pb bar.
Clear?
Okay, there is nothing.
There are all the notation that we have done.
These are all notations.
This is a real valued function.
We will get a cap and a multiplication.
We will get a cap instead of multiplication.
We will get a cap instead of addition.
We will get a cap instead of addition.
We will get a cap instead of subtraction.
We will get a complement.
That's it.
There is no difference.
This is exactly what you were reading in the reals.
It is the same thing.
We have algebraic operations in reals.
We have addition, multiplication, and subtraction.
We have a cap complement here.
Clear?
We just defined the set of all map...
What was fnb representing?
Yes, what was fnb representing?
Yes?
fnb, set of all mappings from bn to b.
What is pnb representing?
Set of all polynomial functions from bn to b.
Sorry.
Arbitrary Boolean algebraic notation.
So fnb represents the set of all mappings from bn to b.
Pnb represents set of all polynomial functions from bn to b.
So clearly, what will be pnb?
It is the set of all polynomial functions.
We denote the polynomial function as pd bar where p is a polynomial in n variable.
So this is your pnb.
Set of all polynomial functions from b to bar and to b.
Clear?
So today we are just going to do notations.
Now we are going to do a result with the notations theorem.
So what this theorem says is that for any Boolean algebra, pnb is a Boolean algebra.
And a sub-algebra of fnb.
So how it will be a Boolean algebra?
If two polynomials take their cap, why it will be again a Boolean polynomial?
What should be the Boolean algebra for a sub-algebra?
This is a Boolean algebra, we know this.
This is a Boolean algebra, we know why it will be a sub-algebra.
Because it is simple.
If we pick two pb bar and qb bar, we pick two in pnb.
So what will happen?
This will imply what does this imply?
pq belongs to pn, two polynomials in n variables.
Corresponding pq is two polynomials.
And if pq is two polynomials, then we have the definition of pn that pcapq is also a polynomial.
And this will imply pcapqb bar belongs to pnb.
Or you can easily show that pcap is made with cap, so this is nothing but pb bar, capqb bar.
This is equal to this.
So pnb is closed.
Keep all the pn is closed.
Because pn is closed with respect to cap, cup and compliments, that's why pnb is also closed with respect to cap, cup and compliment.
So let us try to prove this.
To prove, to prove this theorem,
it is enough to show that pnb is closed with respect to cap, cup and compliment.
Join, meet and compliment.
So cap, join, join this cup.
Cap is meet and compliment.
So we take two functions that pb bar, qb bar belong to pnb.
Then pq belongs to pn and this implies pcapq belongs to pn.
Since pn is closed with respect to cap, cup and compliment.
And p compliment belongs.
Now claim.
So what we have to show?
Claim pcapq.
This boolean polynomial with respect to pcapq is equal to these two caps.
So consider.
Now what is their domain?
These are two functions.
Two functions are equal when they agree on each point of the domain.
Two functions are equal.
Yes, when are two functions equal?
And their values at each point of.
Of the domain are equal, right?
So consider for all a1, a2, an belong to bn.
These are functions from bn to b.
So we'd pick any point in this.
So consider pb bar capqb bar of a1, a2, an.
So.
Now what is the definition of cap?
This is defined like this.
a1, a2, an capqb bar a1, a2, an.
Right.
Now the.
Okay.
Now what can we get from this?
Now if p was x1 cap x2 and q was x1 cap x2.
So what will be pb bar a1, a2?
pb bar a1, a2, a1 cap a2.
And qb bar a1, a2, what was it?
a1 cap a2.
a1 cap a2.
Now what are we writing?
Now we are writing the cap in between.
So the whole expression is the same.
p cap q.
What is p cap q?
x1 cap x2.
cap x1 cap x2.
Okay, so this is the expression.
This is p.
This is p.
This is q.
So pb bar is the same.
A1 cap a2.
cap a1 cap a2.
So this is nothing but what will be this?
So this is nothing but this.
p cap q.
b bar a1, a2.
This is nothing.
All the elements will be written in one line.
Right?
First we will come to p and then we will come to cap q.
So the same notation.
Okay?
So hence pb bar cap qb bar is equal to p cap qb bar which belongs to p and b.
Since p cap q belongs to p and hence p and b is close with respect to meet.
Okay?
Similarly, it can be shown that p and b is closed with respect to join and complement.
Okay?
So this is all in this theorem.
Hence the theorem.
So this is true.
So this is true.
So this is true.
So I think this is enough for today, it is very important that you remember these
results and that you get these notations into your mind because otherwise it will get complicated.
It is not that difficult, but notation wise it becomes very difficult.
If you are not familiar with the notations then it will become very difficult, otherwise
it is nothing but polynomial, but if you do not get the notations then it will get difficult
and it will be difficult.
So revise it once today, it should be related to polynomial and see some results on it.
Okay, so there is some problem with the software, so let's end this class.
Okay, so then we end this class, bye everyone, have a good day, thank you sir.
