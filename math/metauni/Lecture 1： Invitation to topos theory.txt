All right, so on behalf of the co-organizers who are James Clipp and Will Troiani, welcome
to the seminar, so maybe I should first explain the title of the seminar.
Hopefully the next lecture in this series will be devoted to explaining in more detail
what the Currie-Howard correspondence is, but roughly speaking it's one of the key points
of contact between mathematical logic, category theory, and computer science or the theory
of computation, if you like, and I'll say, as I said, more about that next lecture in
a little bit today.
So very much the idea of the seminar series, of which this is the second semester we've
been running it, is to explore topics at the intersection of these three areas.
The aim, more specifically this semester, is to understand how to organize mathematical
knowledge using tau-poi.
Let me put in brackets and adjoint functors.
Okay, so a topos, tau-poi is the plural of topos, a topos is a particular kind of category,
so we're going to have a couple of lectures about category theory later on, and I'll give
a brief definition in 10 minutes or so.
So they're the basic objects that we're going to be using, and this term, organized mathematical
knowledge is of course an informal term, and the point of today's lecture is to move a
bit closer to having an idea of more formally what that might mean.
And of course there are many mathematicians involved in the theory of tau-poi and the
mathematical logic associated to it, and the sorts of ideas we'll be discussing around
organizing knowledge.
But much of this, the key ideas go back to Lovier, in particular the idea that adjoint
functors should be somehow a foundational idea in how we organize mathematics is strongly
emphasized by Lovier.
So let me start with the following sort of picture.
So I mean I guess proto-mathematics, before we sort of introduce concepts, looks like
ordered sets, right?
So things like the integers with some operation, maybe more than one operation, etc.
So I mean this is about as concrete as it gets.
But of course we very rarely sort of just think entirely in terms of ordered lists of
operations on sets.
We have various concepts which organize those into similar, actually let's stick with each
row being its own sort of concept, so maybe let's take polynomials with addition, and
maybe second row is another collection of sets with operations, and those we call rings.
So on the very concrete end we have some ordered sets, sets with operations is what I meant.
This column in the middle I'm going to call theories, so this will acquire a precise meaning
later on.
But for the moment you just think, I mean Abelian groups, the theory of Abelian groups
is that there's some sort of the thing, the Abelian group, there's some operations,
you can do it various ways, but say you could take addition, the negative, and it's constant
zero, and then your axioms are some expressions in those data.
Okay, and then this passage here is of course very familiar to us, abstraction I suppose
if you could call it.
And we organize our knowledge of mathematics in terms of the things in the middle column,
these theories are how we organize mathematics, typically speaking.
So one of the key points in the development of mathematical logic, say at the beginning
of the last century, was the idea of turning these concepts, like Abelian groups, theorems
about them and proofs of those theorems into mathematical objects themselves.
From the vantage point of 2018 it maybe seems a little hard to imagine a time when that
wasn't the case, but of course that was a very important step in doing mathematics carefully.
And it's important because mathematical objects are the objects about which we know how to
reason reliably and how to automate the reasoning about those objects, that's what Mathematica
does for us.
So once theorems and proofs are mathematical objects we have a much more reliable sort
of system of mathematical knowledge.
Okay, so that's sort of a general conceptual story, but this seminar is about somehow another
step beyond that level of organization.
And let me sort of motivate it with a question.
So our theorems, definitions, examples, proofs, et cetera, in the way we typically think about
them as working mathematicians, to use a favorite phrase, I mean they're not organized
into formal mathematical objects strictly speaking, right, I mean our knowledge about
mathematics is organized into things like books, lecture notes, you know, our memories,
et cetera.
So that's obviously a very rich sort of informational object, that system of mathematical knowledge,
right.
And the question we're going to be considering is whether this hierarchical system of mathematical
knowledge, to which I don't assign some formal meaning at the moment, is that itself a mathematical
object.
In the same way that, you know, in the last century we made sense of proofs and theorems
as mathematical objects and the subject of mathematical discourse, what about the system
itself of mathematical knowledge?
Okay, so at a very high conceptual level that's the question that we're concerned with.
Now, I don't propose to answer this question in a one semester seminar, but we're going
to go in that direction and the key concept which we're going to use to understand this
question in a sort of more formal way is, as I said, Topos theory.
Okay, so what's an example of what I would mean by that kind of system, right, so system
needs more than one thing in it, right.
So there's obviously some relation between these two things, right.
So if we, there's various ways to make sense of the theory of Abelian groups as a mathematical
object, we'll discuss one of them, but there's various ones.
So let me call that Ab, thinking of the theory, so this denotes the theory of Abelian groups,
this denotes the theory of rings.
There's obviously some relationship between them, right, because in a ring the, if I just
read off the first two components of a ring thought as an ordered set, sorry, a set with
operations, that's an Abelian group, right.
So there's clearly a connection between those concepts and the question, well, if this ambitious
sort of question can be resolved, we must first resolve a very basic question, which
is, if there's a relationship between theories of that kind, well, what is the relationship
between these mathematical objects, how to make sense of that, right, okay.
So what I'm going to explain today is, one of the approaches to answering that kind of
question, which is based on the theory of Topoi, and then we'll end up with a picture,
which is of the following kind where we have, well, in fact, it's a two category.
I will explain at least what a one category is in a minute, very briefly, okay.
In which these theories will be objects and there will be some canonical morphisms, excuse
me, between these objects, maybe I'll just leave it like this, and this morphism will
express the precise relation between these theories, which is encoded in when I point
to the first two elements of that order, triple, okay, so just write something to that effect.
So every ring is an obedient group, this observation leads us to believe there should
be transformations or morphisms between theories, right, so morphism or homomorphism or transformation
or relation, right, somehow there's a connection between these theories, and obviously if we
want to answer this kind of question, that is represent the system of mathematical knowledge
as some sort of mathematical object, a crucial point will be, first of all, to settle what
we think are morphisms between theories, right, that seems like a straightforward starting point, okay.
And as I said, so the intention of the seminar is to sort of try and be talking about topics
that have some interest to both, to all three of logicians, mathematicians, and computer scientists.
So I'll spend some time during the lecture explaining sort of what the ramifications
are for this sort of picture, I think the logical interest is sort of clear from the
way I motivated it, maybe it's not clear why Topoi, if they resolve this question, whatever
they are, I haven't said yet, if they resolve this question, what interest they would be
outside of logic, nor is it clear what the interest is in computer science, but I'll
try and say something about all of those. Maybe I should, maybe now's a good time to
say briefly what a category is. Okay, so as this lecture is meant to be an overview,
clearly there will be many terms that don't get full definitions, but I hope to at least sketch
and give you the idea of everything that's going on. So a category is just sort of an
algebraic system, a bit like a group or a ring, so it has objects, I can think of a category as
some sort of set, has objects, let's write those uppercase letters, between objects it has morphisms,
and that's the data, but the algebraic operation is a partially defined function called composition.
So not any two morphisms can be composed, they can be composed if and only if they have the
right sort of domain and target for that to make sense. So the composition rule would take a pair
that looks like this, so the pair gf, where the domains and co-domains match up in this way,
and would map it to some new morphism from x to y.
That's not meant to be g and f aren't functions necessarily, often they may be, very often they are not,
they're just, I'm given for every pair of objects some set, and part of the data of the category is
the rule for assigning this composition to each pair, this is not necessarily data that's immediately
obvious beforehand. So that's what a category is, you can think of the category of all sets,
for instance, the objects are sets, well, oh, thank you, yeah, that's right, so dot dot dot,
alright, so maybe I'll just say it out loud, so the composition should be associative and should have
identities, so this is like a monoid with a partially defined composition, yeah, thanks.
So as I said, we'll go through this in more detail in the following lectures. The sort of key
example for the moment is sets, or small sets, let's not worry about sort of foundational issues,
so the objects are sets, the arrows from between the sets are just all functions,
the composition rule is just composition of functions, and I'll give some more examples in a minute.
Okay, so a topos is a kind of category, sets is an example of a topos, in a minute I'll give very
quickly the definition of a topos, but if you'll forgive me, I'll hold off on that for just one
more moment. Okay, so what are we talking about? I'm trying to sketch what it is that topos theory
has to say about, well, this step which I erased, the step two from theories to categories of
theories, so what is the answer topos theory gives to the notion of what amorphism of theories
should be. So first of all, topos theory starts from a theory, this is a first order theory,
which is, okay, there's some adjectives which need to be added to the front of the word theory,
it needs to be so-called geometric theory, these are details I'll get into in a minute. So to some
fairly general class of theories and theory of Abelian groups is an example. There is associated
particular topos, so it's some category with special properties, it's called the classifying
topos, so this word classifying I'll explain in a moment, but the idea is first one constructs this
category, and then if one wants to know what the set of morphisms between two theories should be,
so these are two theories. So HOM is the usual notation in category theory for the set of all
arrows between two objects, so things like F. So when I say HOM TT prime, I mean the set of
morphisms that we're supposed to be thinking about, and I'm making a definition now, so saying
that the right, according to topos theory, notion of morphisms of theories is to first turn your
theories into categories and then take functors between those categories. And again, there's some
adjectives, so one doesn't take all functors, just what are called geometric functors.
Okay, so this is, if you like, a proposal for the right notion of morphisms of theories.
This is actually not just a set, it's even a category in its own right, so there's also a
notion of transformations of morphisms of theories. Okay, so this is what topos theory says, but in
order to motivate a seminar on topos theory, I have to first of all give you some idea of what
these BTs are, why this word classifying, and why this answer is right. Or at least interesting.
So I should say that, of course, this topic of organizing mathematical knowledge using category
theory, there's various approaches, so this is certainly not the only way of thinking about
these topics. Maybe there's a good point to pause for questions if there are any.
I have a question. To build this beta of teeth, do we just need the category T or do we need further
data to get more fun to that kind of stuff? Yeah, good question. So the thing we start with,
I haven't really said what I mean by a theory, so that's maybe a good place to start. So by a
theory, I'm just going to mean some first order language, I'll maybe say more in a minute,
and some formulas in that language which are the axioms. Okay, so it's a purely logical object.
I mean, it's usually called a first order theory. Okay, and to that first order theory,
I'm supposed to attach a category. So as those of you who have sort of seen category theory before
will not be surprised when my definition is universal property. Okay, but there's also a
construction. So I'll say what the universal property is, but you're sort of more asking about
the construction. So the construction is to present this in a sort of syntactic way. It's
very similar to how you construct a Cartesian closed category from a lambda calculus. So the
objects of this category will be certain equivalence classes of formulas, which you think of as
picking out sub-objects. So usually, for example, when you construct a category from a lambda
calculus, your objects are types. So roughly speaking, that's still true here. The objects here
are the types that occur in the language T, but you also have to allow yourself to cut out
sub-objects of Cartesian products of those types using formulas. Roughly speaking, the
objects are types. And the morphisms are equivalence classes of terms in the language. So
it's a syntactic construction. But it's involved, much more involved in the construction of a
Cartesian closed category from a lambda calculus. So for instance, you have to define a growth
and dig topology and take sheaves for that topology. So this construction is sort of intricate. But
it has that syntactic flavor. But to come back to your question, it only depends on the language
and the formulas. It's not universal relative to some base. So it's just the T.
Yeah, you can say that. Right. The problem with sort of that idea is that presupposes that you know
what you mean by morphisms of theories already, which no doubt, I mean, for example, there are
various notions of morphisms of theories, right? Institutions sort of give one, right? So we could
imagine that you made sense of a category of theories in which T and T prime live. And then
these are purely logical objects. So your notion of morphisms of theories would be something involving
the logical data, right? So maybe you need to send every sort here to a sort there and
every, you know, constant there to some constant, et cetera, in a way that sort of matched up
the axioms, perhaps, what the axioms here should go to true statements there. And then,
as you say, you could think of this beta as being a functor, which would send those theories
to categories. And each one of those morphisms define sort of a priori using just the logical
data to an actual functor between categories. That makes sense. Is that what you were getting?
That was what you were getting? Yeah. Yeah, I think so what's interesting about the approach
via topos theory is that there are probably more morphisms between these categories naturally
arising than you would maybe think of to write down in a definition of morphisms of theories.
Actually, that's one of my questions for you guys. So I'm sort of aware of some definitions of
morphisms of theories and they those definitions clearly don't get you all the things that you
could think about here. But then I'm not so sure whether the things left over are very interesting.
So this is a question we can sort of think about. But yeah, this is a good way to think about beta.
Okay, so what is the thing, what is the property that characterizes this B of t?
This will be one of the main theorems. So one of the main things we want to accomplish in the plan
for the semester is a to construct these guys and b to prove this theorem.
Okay, so I'm fully aware I haven't defined what a topos is. But I'm going to do that immediately
after stating this theorem. Okay, so for the statement, just you can think sets. So for any
co-complete topos e, there's an equivalence of categories between sorry, for any co-complete
topos e and geometric theory t. Again, I don't really have time to explain what geometric means.
I can explain afterwards if you want to hear about it. Of course, we'll go into detail later on.
It includes abelian groups, rings, most of these sort of algebraic complexes of abelian groups,
local rings, etc. etc. Okay, so if I've got a theory and a topos, I can look at the, for the
moment, the set of all functors. Let me say what a functor is briefly. So if you think of
categories as being some sort of algebraic object, like a monoid with a partially defined
multiplication, then a functor between categories is just like a homomorphism of
monoids. It's literally what it is. So a functor sends objects. So it has a rule that sends objects
of c to objects f of x of d and morphisms in c to morphisms in d. Let me just say dot,
dot, dot, which preserves the operations in a category. What are the operations in a category?
Well, you have a binary operation, which is composition. So applying f to a composite should
be the composite of f applied to the terms inside. And you have a unary operation if you like the
identity. So f should send the identity to the identity. So that's what a functor is. Sorry,
zero operation. Okay, so if I have a co-complete topos e and this bt, I can look at, again,
so this is some particular kind of functors from e to bt. So a geometric functor, for those of you
in a category theory, this is a functor which has a left adjoint such that the left adjoint
preserves finite limits. That's all that means. Functors from e to bt are in bijective correspondence,
sort of, with models of t in e. Okay, so this is the theorem. There's a few things I should explain.
So at first approximation, you should think of this as a bijection. So functors from any topos,
those things sets, so fix e to be sets. So functors from sets into this new object are the same as
models of t in sets. Well, it's not quite a bijection, it's an equivalence of categories. So
there's some notion of isomorphism of functors, and there's some notion of isomorphism of models,
and what's bijective are isomorphism classes of these two kinds of things.
Okay, and what is a model of t in e? Alright, so I've got my theory, so you could think abelian
groups. So the theory sets out some objects, some operations, and some laws. And I just take a
collection of objects matching all the objects which are described by the theory, some set of
operations with the right arity, and write down diagrams which express the laws, and those diagrams
should commute. Okay, so this is one of the things that needs to be explained in more detail, but
you should just think of reading the definition of the theory inside the topos e. Okay, it's about
the time I defined what a topos is. Okay, so it's a kind of general categorical yoga that
once I've said that BT has this kind of property,
this property characterizes BT uniquely, or as uniquely as categories get,
that is up to canonical equivalence. Okay, so that's what, so the thing we associate to t
is some topos with this property. That is, it sort of knows about all the models of the theory in any topos.
Well, so I guess the theorem has two parts. So first of all, there is a topos which satisfies,
the theorem says, I suppose, that there is a topos which satisfies this
condition, right, and we call that topos b of t.
Okay, so I'm going to tell you what a topos is, some examples of topoi, and then what the words
models of a theory, the theory of a billion groups in those examples looks like, to give this theorem
some context. So a topos is a category with finite limits and co-limits.
So James is going to explain what limits and co-limits are
in two lectures time, but for the moment, it just means, for example, that there's a notion
of Cartesian product of objects in the category. That's what's relevant for this notion of models.
There's an internal notion of function objects.
Of course, if z and y are sets, we know what this means. We're at the set of all functions from
y to z, and in any topos, you can write down the same symbols and it roughly has the same
semantic content. So that is, if I can form Cartesian products of objects in my category,
then I can ask for something which has this sort of relationship to Cartesian products,
just like it does in sets. And this guy here is called the exponential. So this should be natural
in all the variables. And the third thing that it should have is what's called a sub-object
classifier. So a topos is a category E with these conditions.
So what's the last condition? So the last condition says that if I take any object x of my topos,
I can look at the set of sub-objects. So if it's a topos of sets, that's the set of subsets,
that's the power set. And that set of sub-objects in that category should be naturally isomorphic
to the set of all morphisms from x to some particular fixed object, omega. This omega
is playing the role of the two-point set in the category of sets. So this is called the sub-object
classifier. So that's a topos. As I said, sets is an example, and we're familiar with these
structures in the categories of sets. Perhaps the next very important example is sheaves of sets.
So we're going to sheaf theory. I mean, it's unavoidable. So the category BT is a category of
sheaves in some abstract sense, not in a topological space, but on a small category. So sheaf theory
is an important component of the general theory of topoi. But the category of sheaves of sets on a
topological space is an example of a topos. Those of you who have seen the simplicial sets,
the category of simplicial sets is a topos. That's sort of a cheat. The category of simplicial sets
is just... So it's true that for any small category, if I take the category of contravariant
functors from C to sets, again, these words will be explained in more detail in a few lectures.
This category of functors is always a topos. Simplicial sets looks like this if C is the
category of ordinals. So finite ordinals. So those categories also give many examples of topoi.
And from a logical point of view, an important source of examples is the category of types and
terms in any higher order logic. So there's a syntactic way of giving a higher order logic,
and by this I mean the way that it's defined in Lambeck and Scott, for instance.
So how does this govrise to a topos? Well, as I said, the objects are somehow constructed from
the types. Exponentials, well, those are sort of the arrow objects you have in any,
like in simply type lambda calculus. The sub-object classifier, well, this comes from
the type of propositions, right? In any higher order logic, there's a type of propositions.
That's what makes it higher order, and omega is just that type of propositions. Okay, so that's
a way of getting topoi out of logic. I wanted to say what models were. Okay, so for instance,
this topos, this guy, that was implicit, but let me make it explicit. So BT is the classifying
topos of the theory T. And by this theorem, the set of all geometric functors from sets into
the classifying topos of a billion groups, that's equivalent to the category of models of the
theory of a billion groups in sets, that's just a billion groups. If I take models of the theory
of a billion groups in the topos of sheaves, sorry, offsets on a topological space x,
this will give me sheaves of a billion groups. Okay, and well, if I replace the theory of a
billion groups by the theory of rings, then I get rings, sheaves of rings. I can get complexes of
a billion groups, sheaves of complexes of a billion groups, etc. Again, the precise way
that we make sense of the word model of a theory in a topos, roughly you just follow your nose
using what you would write down for sets, but using this categorical terminology. And I'll
explain more about that a bit later. All right, so that's the characterization of
these topoi b of t. Now, what I want to do is go back to this question of how to make sense
of a morphism of theories, right? I sort of have in hand now the key idea to do that.
But let's think about the relation between the theory of a billion groups and the theory of rings,
and which arises from just knowing this theorem. Any questions about this theorem?
Yeah, that's a good question, actually. I don't know.
I don't know the providence of the classifying topoi. I mean, I wouldn't be surprised. Well,
often with lauvier, it's sort of cryptically in some paper somewhere. So maybe I can safely
attribute it to him, but I don't actually know where this, the construction is, I mean, the proof
is not easy. So it's certainly not something that's just sort of, it's not folklore, I think you had
to work to prove that. Yeah,
yeah, you're pointing to an important point, which is that this sort of,
it sort of seems the wrong way around, right? I mean, usually when we think of models of something
in something else, I mean, we think the way my hand just went, right? It's like a map from the thing
to the place where the models exist. And in fact, that's correct. And it's because a geometric
functor has an adjoint, and it's the adjoint that does the work. Yeah, so this is a very good point.
So it's actually my next point. Yeah, you're right. There's something a bit weird about the
direction, which is implied by that theorem. Okay, so
okay, so the first point to make here is that
implicit in this theorem is the fact that there's a universal model of the theory T.
Right, so models, I mean, by model, I mean a model of T in any,
in any topos. So how do I get some very special object on the right hand side? What should I
put on the left hand side? Anybody? Very good. Yes, someone remembers my class.
Right, so if you've got a universal property, you get some special object by always looking
for the identity on one of the sides, right? So if I take E to be BT itself, which,
well, to be fair, I didn't say that was co-complete. So maybe that's,
right, so this is a co-complete topos. So a co-complete means it has all
co-limits. So I can take E equals BT on the left, but then I've got some special functor from BT
to itself. That is the identity functor. So that corresponds to some model,
let's call it UT, the universal model of T, in BT.
So in this topos, there's some, well, for example, abelian group object. So some
object together with a binary operation satisfying the laws of an abelian group.
Okay, so,
okay, and that's called the universal model for the following reasons. So just
the sort of general yoga of the naturality of this isomorphism implies the following
very important fact. So corresponding to any model,
say M of T in E, right? So I think T abelian group. So M is an abelian group in some topos.
Maybe if the topos is sets, it's just an abelian group.
Well, this natural isomorphism means there's a unique geometric morphism, let's call it F sub
M from E to BT. Okay, so F up a star is just typical notation for,
okay, so F is some functor from E to BT.
It, by hypothesis, has a left adjoint, which we denote F up a star. So F up a star sends
objects in BT to objects in E. In particular, it has to send this UT to something and it sends
it precisely, it's isomorphic to the model M. Okay, so this is, I mean, if you're familiar with
classifying spaces, this is where the word classifying comes from.
Okay, so this is in response to this question about the direction. It's right that any geometric
functor from E to BT, how do I get a model in E out of it? Well, I take the universal model here
and then I send it backwards with the adjoint to get something in E and that's how everything
arises and it arises uniquely up to isomorphism. Okay, so basically the point here is that these
classifying topoi, they're a topos, but they come with some model of the theory and that model is
universal. It's like the platonic abelian group, right?
Is there a name for functors or adjoints between metric functors?
Yeah, I know what you mean.
Well, that's just a functor which has a right adjoint in which itself preserves finite limits.
I think given that it's determined by its right adjoint, there's no real need to introduce a
new name. Yeah, I think what you're getting at is it sort of feels like the adjoint is the real
thing, right? Yeah, but the reason it's presented this way is because this is actually an interesting
point. So if X and Y are topological spaces and I take a continuous map, then on the category of
sheaves, I have a push forward and a pull back and this adjoint pair is, so this is a geometric
morphism, but because we tend to think that we're obsessed with sets and functions,
this is the real thing and so the morphism goes that way. So that's sort of why the
right adjoint is prioritized. Okay, so let me take this sort of abstract point and come back
to this question about how to relate the theory of abelian groups and the theory of rings, right?
So interesting exercise. So figure out the separated hypothesis, separatedness hypothesis
you need on X and Y. So there's actually a bijection between continuous maps and geometric morphisms.
So with some mild condition, they're the same thing. So this is sort of a good reason to believe in
geometric morphisms, at least from a topological point of view.
Okay, well, every ring is an abelian group, right? This was the fact that we were
promised would be manifested in sort of fancy categorical language.
So how do we, how does this tell us something about classifying topoi?
Let me consider two theories, the theory of rings, the theory of abelian groups, convert them into
topoi. Then, well, this is my E, right? It's a co-complete topos. So the theorem says that
geometric functors from E to the classifying topos of abelian groups is the same thing as models
of, this is my T, abelian groups in the classifying topos of rings.
Okay, but what is a model of the theory of abelian groups in the classifying topos of the theory
of rings? Well, we know a model of the theory of rings in the classifying topos of rings, right?
So I haven't really spelled out what that means, but so it means that in that topos there's,
for example, all the structure maps of the theory of rings are manifested by morphisms. So in particular,
the addition on the ring is some morphism in this category, making certain diagrams commute
that encode the laws that that addition must satisfy. So if I read out the part of the definition
of rings, which talks about the addition, well, what I've written down is a model of the theory
of abelian groups, right? So the universal ring, because a ring is an abelian group,
the universal ring is, you know, just forgetting about some of the information,
a model of the theory of abelian groups in the classifying topos.
Well, corresponding to that must be some special, let's call it F,
some special geometric morphism from B ring to B abelian groups.
And as sort of alluded to there, as the property that's left adjoint
sends the universal abelian group to the universal ring.
Okay, so this relationship, this logical connection between these two theories has now been
realized, so to speak,
as a geometric morphism between these classifying topoi. And remember,
this was the sort of proposal for the definition of a morphism of theories.
I mean, you can put this around the other way if you like, right?
Okay, but this, we've taken the sort of most elementary connection between these two theories
and realized that there's a geometric morphism between these topoi.
Okay, so the punchline then is the following idea.
Coming back to the original question.
So the idea is to take as the sort of way of organizing mathematical knowledge
this category of theories and morphisms, but really what we're doing is classifying topoi.
And geometric morphisms.
All right, so that's the sort of abstract setting in which we want to pursue these ideas.
I should say, of course, this is not our idea. This is what Topos theory is about for many people.
Okay, so I want to quickly make a few
remaining points. I want to connect this a bit more explicitly to
functional programming, but maybe one observation which will
occupy.
What's the time frame for this thing?
Yeah, well, we should finish in, I mean, when did we start? I think it was 10 past or so.
So I want to finish by then.
But I won't be offended if you leave early.
All right, so one important example which we'll talk about some length is,
so what have I said about these classifying topoi? I sort of said they can be constructed
syntactically. I've given a universal property, but they're still left sort of mysterious, right?
I mean, what is actually one of these categories for some theory of interest? What is the classifying
topos of a billion groups? Is it some category I already know, right? So in fact, they're very
often categories you would have encountered naturally elsewhere. That's part of their interest.
So if I take the theory of local rings, that's actually the Zariski topos.
So this is a very basic object in algebraic geometry. Well, Zariski topos of schemes over Z.
So any schemes of schemes, spaces for algebraic geometries, any scheme is an object in this topos.
So from the point of view of topoi, you just have to say the words local ring and the Zariski
topos springs into existence, right? So it's kind of neat.
Okay.
All right, so one of the
sort of organization of this seminar will be around the following diagram.
So next lecture, so in our first semester, we sort of studied this correspondence
in detail. In the next lecture, I'll give a very brief overview. So it's not really necessary to
understand the things in this, I mean, what we're going to do over the next semester,
but it provides the context which sort of explains why it's interesting, the material we're going to
look at. So the Curry-Howard correspondence gives a series of bijections between various
data associated to particular kinds of intuitionistic logic,
lambda-calculi. So these are extensions of the simply typed lambda calculus
and Cartesian closed categories.
I mean, I can, if you're interested, I can be more technical about exactly what these
isomorphisms are talking about. Roughly speaking, the idea is that the content of
intuitionistic logic, first order, simply typed lambda calculus. So this is sort of a very bare
prototypical functional programming language
and particular categories. These are sort of encoding the same ideas.
And what we're going to be discussing this semester, I've explained the sort of categorical
and logical point of view on it. So I've already indicated there's a connection between higher
order logic and topoi. You can think of these topics as being sort of extending the world of
functional programs with equations.
So if you have some sort of reasoning about or constraints on, say, the input-output behavior
of a functional program. And these three things are also in a sense that needs to be made precise,
sort of the same. Well, adjectives need to be added at various places, but that's the idea.
These arrows meant to mean sort of extension. So adding equations gets you to that column,
adding the type of propositions, right? Gets you from first order logic to higher order logic
and adding a sub-object classifier gets you to topoi. And we'll be trying to look at all three
of those aspects, but sort of primarily these two.
Yeah, actually, I'm not sure to what degree this row has really been studied in these terms.
But what I mean here is, yeah, so what happens over here is that you can think of,
so there's certain kinds of programming languages which are called functional.
So you've heard of Haskell or there's various other ones. So you can organize the data of
such programming languages into categories where the objects are the types in your programming
language and the arrows or morphisms are your programs. That makes a category and then it's
sort of connected to these other objects. And if you add to that picture where you have types and
programs, equations on programs, so maybe a program, you want to say that
you know, if it's a program that eats integers and outputs integers, a constraint would be that for
all integers its output is less than three, something like that. Okay, so that's an equation
in the language which you're using to write your programs. And that's what I mean by this.
But again, I mean, these connections are not meant to be obvious. We'll explore some of them.
Okay, so I'll stop there, but of course there's time for questions.
Yeah, yes, oh, well, yes, it is. But there's the way you might write it down at first is not
geometric. So you have to be a little careful. But yes, it is geometric. Yeah, it's a good question.
I mean, so some parts of Topos theory, I sort of know very well,
but the stuff around geometric, I know less well, so I can tell you the definition.
But I don't think I can really give you a good explanation. I mean,
the reason why, well, you can prove sort of if and only if statements, so certain good things
will happen if and only if your theory is geometric. So if you like, that's what the definition
means. So the good things are that geometric morphisms are sort of the ones that models,
you can pull back models for any, any two topoi. So
so in general, if you have functors between topoi, you can try and take models in one
and pull them back to get models in the other given some morphism between your topoi.
But that sort of doesn't work always unless the theory is geometric. So in a sense,
geometric is the one, those are the kinds of theories for which for any geometric morphism,
models can be moved along geometric. Sorry, for any geometric morphism, you can move models of that
theory along the geometric. But yeah, it's a good question. I don't think I have a really clear
answer to that. So let me just put the schedule up here.
So next week is the Currie-Howard correspondence and the week after that.
Will Triani is going to talk about monads and how they arise in category theory and computer
science. Yeah. Yeah. So
so my higher order logics are all second order.
So in a sense, a topos, the language which I'm talking about in a topos has quantifiers in it.
So but apart from that, it's actually, I mean, this is the interesting aspect really. So how
to think about these in categorical terms is sort of what's interesting in this story. Yeah.
But it's not easy to say very, very briefly as well.
That's what you meant by second order, right? Or did you mean like system F second order?
Yeah. Well, so yeah, the only quantifiers we have is things like that.
So where X is a sort of the language.
Any other questions?
All right. So we'll stop there. Thanks for coming everyone. If you want announcements about the
seminar, please head to my web page. There's a link there to sign up.
