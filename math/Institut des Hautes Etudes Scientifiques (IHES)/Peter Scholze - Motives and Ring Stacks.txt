All right, thanks. It's my great pleasure to speak here in honor of Dustin. All right,
let me start with no pun intended. It's a motivating question. It's to understand in some
sense like what they call wheel type from all the series of algebraic varieties. So these
should be some functions. So throughout the talk, just for simplicity, let me work with schemes
which are separated finite type over the integers just to fix the setting. And they should be some
functions. Go to the derived category of some ring R, some commutative ring. And I mean, one can
wonder what kind of axioms should I want here? Like the minimum here and which I want and which I
want to signify with this kind of wheel type here is that it should satisfy the Cunit formula. So
if you have a product of two varieties, the commodity should be the tensor product derived in
the product. So this is like including like, I mean, there's some kind of absolute commodities
where, I don't know, take guitar commodity, but then also the Galois commodity acting on it. So
some kind of absolute Galois commodity wouldn't satisfy this or like motivic commodity wouldn't
satisfy this because it's some kind of absolute thing that many other things do. So what are
the examples we know and love? So there is spetty, which is like the singular
commodity of the complex points. There's the ROM, which maybe you should assume x is smooth or
something like this and then maybe in characteristic zero to make it well behaved.
There is ethylcormology and then empirically there's also like maybe crystallinecormology
and more recently there's also prismaticcormology, which nicely interpolates between like at least
those three things. So I always like to draw this kind of two-dimensional picture
which finally has almost two spexidirections.
Also one spexidirection is similar about the geometry of the situation.
So there I usually call my prime P and one spexidirection is about the coefficients of the
cormology theory. And so that's the like to call L. And so then you have all the primes here.
Somewhere you might have some infinity, same here.
And so then, sorry, singular cormology is something that's defined with integral
coefficients. So like it has a full spexidirection, but it's really something that only is something
of the complex point. So it's somewhat infinity. So singular cormology would sit here.
Duramcormology, well that's defined in any characteristic, at least for something that
proper maybe. But in any characteristics, the coefficients are the same as the characteristic,
right? If you work with schemes in characteristic p, then Duramcormology also lives in characteristic p.
So this kind of sits diagonally here.
And then conspicuously these two lines meet there. And also this is reflected in
the actual mathematics because like when you have both Archimedian coefficients and, sorry,
when you, like here this signifies that both the geometry and the coefficients are characteristic p.
And there you have the comparison of some of those between Duram and singular cormology.
If you do, next in my list was etalcormology. So this you can do for any, any prime l with the
yellow coefficients. And so for example, if l is 2, this would sit here at l equal to 2 and is
defined away from characteristic 2, not just mod 2, but like mod powers of 2. So some kind of
formal completion here. And again, conspicuously these lines meet and again this is reflected
in the mathematics because what the complex number is like singular cormology tends to zl is
etalcormology. And this were like this for any, for any of these primes.
But you should stick away from the residue characteristic because etalcormology gets bad
there. What else? So there's crystalline cormology. So crystalline cormology,
this is something for a Verizon characteristic p, which somehow deforms Duram cormology and
then some more sticks out a little to the formal completion. And then, but with prismatic cormology
you can somehow fill in all these regions. And this is a picture that I was drawing in my
ICM article in particular in 2018. And basically since then I've been trying to figure out how
to fill in more parts of this diagram, right? Goal, it's like complete the diagram.
Maybe I misremember something, but prismatic cormology, I mean, could it form a slightly more
standard? I mean, I mean, relative to prismatic cormology, not absolute prismatic cormology.
All right. So where to look, where to look or what structure should
what it was? So yeah, I'm looking for ways to fill in this diagram and so where should I look?
And so one kind of empirical observation
is that in many examples, this function can be factorized.
So you have the category of schemes
over Z, always separated or finite type. Let me not write it all this time.
And then you go to some other geometric objects, so some kind of stacks
over your ring R. And whenever you have a stack, you can just take career in cormology,
you can take the cormology just of the structure sheath. Then of course you get,
go to D of R. And under very minor assumptions on the stack, this will automatically take
products here to tensor products. So this is basically automatically the symmetric
monoidal function. And then the symmetric monoidal delta you would want is that this
function should commute to finite products or even all finite limits, as it often does.
So this is some kind of curious function that starts out with one geometric object,
which is just a usual scheme over the integers. And then build something, some other thing,
which is again a geometric object, but now was a completely different base.
Let's call it X question mark, which is living here. And in some sense this procedure should
somehow be geometry preserving, like fiber products go to fiber products and maybe like
open emergence should go to open emergence and so on. So there's some procedure that somehow
switches the base field, but it preserves all the geometry. So such functors,
X goes to X question mark. Bargav Bhatt has introduced the term transmutation for such functions.
All right. And so one thing, okay, so the word motive why it appears in my talk should be clear,
because like Rodnik and Visage, that's a universal such homology theory should be the most
theory of motives. And I'm trying to somehow approach this from the other direction and not
try to build some universal thing by universal properties necessarily, but really try to construct
some something, something explicit, which practically behaves like some universal thing,
just like prismatic homology, somehow periodically behaves like a universal thing because
all the other things you know and love are specializations of it.
All right. So this explains the word motives in the title. Now I can also explain the word
ring stacks. Namely, because this is a function that commutes all finite products,
you can send the fn line here over the integers to some stack here, fn line question mark.
But if this function commutes its finite products and all the algebraic operations we have on the
fn line induce corresponding operations on this thing. So for example, I don't know the addition
map. If you run it through the functor, because it commutes a finite product, it gives you a
corresponding map on a one question mark and summarizes the multiplication and it satisfies
all the relations. So this must be a somewhat a ring object in stacks, i.e. a ring stack.
So what are some examples of this phenomenon?
I think the first one historically is due to Simpson from the 90s.
He observes that let's say, so this is about the Rammkommology and so the Rammkommology works
best if you're in character 6-0. So let me first specifically say that this is like a smooth scheme
of a cube. Then he defines the Ramm stack,
extra Ramm and so usually this is defined in terms of functor of points. I want to rather
like give you the presentation that I usually have in mind when I think about this. So it's a
quotient of x where I identify infinitesimally closed points. So what you do is you somewhat take
the diagonal of x completed by which, so the diagonal of x completed is the completion
of x instead of x times x. So this is a closed stop scheme and you can take its formal
completion as a formal scheme, but really as an in-scheme here.
Do you mean x square?
x times x.
I mean what I've written I think.
I mean maybe it's slightly bad notation, but okay this is my notation. So it's an in-scheme,
it's an inductive union of all the near-potent signings of the diagonal and you can form this
quotient. And then I mean this is very much related like what are vector bundles on this
thing? These are vector bundles on x together with identification of all these formal
neighborhoods. And so by Groten-Dijk's classical perspective on modules with an integral connection,
vector bundles on this thing are exactly vector bundles on x with an integral connection.
And like on the level of coromology, the coherent coromology of this is the Doron
coromology of x. All right, and this has been used in many works after this in particular,
like in this Gay School of Geometric Languages, they use this perspective a whole lot to think
about the modules. There's a slightly more, I mean maybe the next one where like people
really started looking into this was like in Chris Lyon's prismatic coromology.
By the way, here it's actually singular, but it's not trivial theorem that actually this computes
the right algebraic coromology. There are lots of tangents one could go to, but let me not do it.
In the case of Chris Lyon's prismatic coromology,
I mean very soon after like prismatic coromology was introduced in general,
both Dreamfade and Bartend Lyrie realized that it could also be gotten in this form.
So there's what's called the Stecchi approach to prismatic coromology.
Because prismatic coromology kind of moves out a little bit and also has a comparison
to etar coromology, one can also, and this is more or less the subject of Lukas Mann's thesis,
treat at least etar coromology like over periodic fields also in this manner.
Let me make a small arrow to etar by Lukas Mann, but this only works over periodic fields.
Then there's one missing on my list, which is Betty, and this actually also works.
This is slightly more curious and is very much related in one way to this kind of condensed
formalism. So we have X of C, which is some locally compact house of space,
and it turns out that there's a general way to take any locally compact house of space and
produce some kind of stack over the integers whose querying coromology is exactly the
this is the Chech coromology of the sky. So that's the following funny construction.
There exists some kind of canonical functor from locally compact house of spaces
towards stacks over the integers. Let me just write X, X Betty.
How does it work? So if you have a profile net set,
R is the integers.
What do you mean the same? Yes, in the end, let's go from Z to Z, but
I could really start with the scheme of the complex numbers and then produce something
which is a stack over the integers, because X of C obviously only depends on the guy with
the complex numbers. So if you have a profile net set, this is just the limit of finite sets as I,
and I can just take the corresponding limit of like si times spec Z. Each finite set,
I can obviously consider as a scheme over the integers, but the finite distribution union
copies of spec Z. Each of these is an affine scheme. So this limit is also an affine scheme.
So if you want, there's a spectrum of the continuous functions from S to Z,
which is just some discrete ring. But then there is this funny observation that any compact
house of space can be written as a quotient of a profile net set, where the equivalence
relation is also a profile net. And so you can define this in general by covering your,
let's say it's actually compact house of, by profile net set doing this and then the
equivalence relation, you can also do it and then you can pass to stacks again.
Makes sense. Actually you can also write down the function of points of this, and it's precisely
continuous maps on the underlying topological space towards X.
So this is an Fpqc stack.
Fpqc stack.
And maybe I should put some finite dimension out here. It's definitely satisfied in this example,
so let me not worry too much about it. And so then, yeah, you can show that the coherent
commodity of this funny stack is precisely the Czech commodity of this guy. Okay, so that's
some slightly curious example.
All right. So, okay. But,
well, I mean, okay, you just evaluate it and the Fn line and then you get the ring stack.
And it's okay. So then I thought about this perspective more and more and like in particular
in pure decommodgy, like you want to go to the generic fiber and then things become more analytic.
There's also stuff you can do over the complex numbers. I don't know. But
for all of these things, I had the feeling that I need to do more and more,
make things more and more analytic, which feels kind of strange because the motivating question
is certainly like a purely algebraic question. So I'm kind of,
I don't know, the only algebraic objects on the board there. So there's some kind of feeling
that one should look for these things
in analytic geometry.
And the goal of this talk is to somehow, like recently I've realized a little more clearly
why this should be necessary and the goal of this talk is kind of to explain why.
So why analysis? And so evidently the next thing I should talk about is presentable infinity and
categories. Okay, so there's this kind of technical intermission in this talk
because this will be necessary for what I want to say.
Now maybe as a stepping point,
like all these common logic theories, I shouldn't just associate to any x
some common logic, but there should really be some kind of sinx-fungta formalism around and so on.
And so over the last couple of years, someone starting from Lucas Mancilla, I really sought
much more intensely about what's this notion of a six-fungta formalism and how best to encode it.
And so recently I somehow realized that the best way to encode it is to really embrace
infinity to categories. And this is what I'm trying to say next.
But also critical for this, at least for me, was really to have this notion of presentable
ones, which have all core limits. So this is a series that's very recent I think. So there's a
paper from Geman Stefanich from like 2020. And so I also discussed this a lot with some of my
PhD students, particularly my PhD student, Kuaoke. And he explained to me a variant of the definition
of Stefanich that I'm about to give. All right, so let's first recall the story when n is equal to 1.
So then we have Luri's PRL. The PR stands for presentable, the L stands for left to join
function. These are the core limit preserving functions. So what is this?
I will not define what an infinity or infinity one category is here. I refer you to Luri. I want to
single out the ones that I'm allowing in this PRL. So these are the so-called presentable
I mean, Luri just says infinity, but because I care about the case of infinity,
n in the second, let me stress infinity, one where maybe I should also say that infinity
means that there are morphisms of like one morphism, two morphisms, three morphisms, four morphisms,
and so on. The n means that after this level, they are all invertible. So by infinity one,
you can have non-invertible one morphisms, but the two morphisms, three morphisms, and so on,
all the higher morphisms, they are all invertible. It turns out that this seemingly technically
restriction makes the theory much cleaner and much easier in many ways. And the functories are
the core limit preserving function, so they are the ones that admit left to joints, that are left
to joints, that admit right to joints. Like usually all the large categories you ever care about,
the category of all sets, the category of all of being groups, the category of all rings,
the category of anima, the stable infinity category associated to some ring and so on and so forth.
These would all be examples in there.
One beautiful feature of this thing is that you can do algebra within. So this has a so-called
Lyrie tensor product. You can tensor two things together. And for example, if you tensor the
draft category of what ring R was the draft category of some ring S, you get the draft
category of R tensor S over the sphere spectrum. So you can really start to do algebra one level
higher where you don't work with modules and tensor them, but work with categories and tensor
those together. And we might want to go one step higher. The initial object in here is what we
learned this morning is the category of anima, but okay there's also the category of
spectrum inside there and this is actually which is in some sense the draft category of the sphere
spectrum. This is item potent and in general the tensor product you would be getting abstractly over
the sphere spectrum. Ignore please. Right, so we want to go higher. So we need to talk about
like categories of categories and so on. And so usually at this point the theory gets nasty
because you need to fix universes. I want to, I mean one, the zone that for the theory of
presentable things is that it's somehow a way to talk about, to avoid talking about universes,
because in there you really have the full category of sets, not small sets for some fixed
generality. And so the presentation I will give does not choose universes, but as an intermediate
step I need to fix one copper, which is not really a choice of universe but plays a slightly
different role. Let's say you fix a regular cardinal copper and actually in practice the first
like Rf1 would be in some sense good enough.
So if you would choose the first infinite one like omega 0 then you would be reduced to finite
every things, which is not what you want, but as soon as you allow some infinite, countable
infinite things, this is what is good enough in practice. So then you can define a certain
something subcategory of this PRL, which we'll call PRCAPA. So these are the so-called copper
compactly generated presentable ones.
And those columnic preserving functions also preserve
copper contact objects.
So like a copper compact set is just a countable set, then this is Rf1, copper compact
materials is just a countable ambient group, a countable ring and so on. And everything is
somewhat generated freely in some sense from the countable objects, this is what I was saying.
So such a C in here will always be some free construction, some big int category of the
copper compact objects. So what kind of coordinates are preserved? All core limits.
Sorry.
Column preserving functions, but these functions should also preserve copper
compact objects. So if you have a function from c to some d,
this actually just corresponds to a function on the copper compact objects
that preserves copper small codes.
I'm using that, sorry, greater or equal to Rf1 I should say, because otherwise there's
some important completion nonsense. Okay, so then there,
then this whole category is in some sense a union of all these PRCAPAs.
Not quite in the sense of fully faithful embeddings, but in the sense that when you
restrict to underlying group odds, so only regard like the objects with isomorphisms between them,
then there's just more and more and more, and similarly on the morphisms, there's just more
and more morphisms. Okay, any given category will at some point be copper compact generated,
this is precisely what this presentability says, and at some point they will also preserve the
copper compact object. So all the morphisms lie at some stage and so on. And it turns out that in
some sense actually like this one better, in fact in practice
everything that's happening in PRL actually happens in the first stage,
actually happens in PRRF1. So you might as well stick there.
All right, and now here's a curious fact, which is the one that allows you to bypass all universe
issues. PRRCAPA, so that's itself some affinity one category, where I don't allow the two morphisms,
because that's a more difficult theory. It turns out that it itself satisfies the axioms
of being an object there.
It is true!
So this is basically what lets you bypass all universe issues.
Of course the number of generators can go up, or the number of neurons can go up.
Yeah, so it's slightly curious, so like even the most trivial category presentable category,
like the category of all anima, it's a unit object in here, with an all presentable ones,
it's not copper compact for any copper. But if you restrict a copper
presentable one, then it becomes copper compact, and then actually you can basically show that this
and other similar things actually generate the whole thing.
Okay, in fact it's symmetric monoidal, so it's actually a commutative algebra object in PRRCAPA.
Well, and now we can do algebra one level higher,
and define two PRRCAPA, like what you think of as copper presentable infinity two categories,
as being like categories enriched in categories.
Yeah, but I mean like I think there's the first instance where you have a category of categories
that contains itself. Yeah, it exists. Okay, copper presentable on three one categories,
you can just define this to be modules over PRRCAPA in PRRCAPA.
So having this module structure basically means that there is some internal home in particular,
so between any two objects, if you have an object in here, then between any two objects
here, there's an object in here as morphisms. Please use different notation for PRRCAPA, I mean.
No, and I mean it's always true that when you have any algebra object, commutative
algebra objects in a category of modules, there's itself a commutative algebra,
so there's itself a commutative algebra in here, so in particular you can iterate.
And for any n greater or equal to one define a theory of
the great thing about this is that these are like all just like usual presentable infinity one
categories for which you have well-established foundations with some extra structures that's
also of the well-established sources just about commutative algebra in here.
You might object that as I defined it, these n PRRCAPAs, they were just infinity one categories,
but really secretly like between any two n categories there should be an n plus one
category of functors, but I mean each of these is symmetric monoidal, so in particular each of
these is a module over itself, so symmetric monoidal, so it's a module over itself,
so each of these is canonically an object in there which is n plus one PRRCAPA, so each of
these canonically refines to an object infinity n plus one.
All right, and so for me in practice I will probably just stick with kappa equal to all
f1 and everything is already good. Let me state it as a conjecture that when you change kappa,
so you take n PRRCAPA, then again this not in the sense of fully faithful functors,
but in the sense that there are like more objects and more morphisms, it's contained in the next one.
Do you have a map in your? Yes, there's definitely a map,
because like if you have a module in PRRCAPA, like PRRCAPA maps to PR lambda, so you can just
push it forward, but then you can also base change the module structure.
What does the inclusion mean? It means that all isomorphism. Like if you pass to the underlying
infinity group odds, it's fully faithful, if you pass, take functions from delta one into there
and then pass to the underlying group odds, it's fully faithful and so on.
And so if you want, you could then define a completely canonical series that's independent
of any choices as a union in the sense of all the PRRCAPAs. So you just collect more and more
objects which are like more and more difficult presentations and more and more functions and
more and more difficult presentations. All right.
All right, so this gives you a way of thinking about like categories of categories and so on
without worrying about universes and without like and where technically you don't need new
foundations because this is really easy to formalize within the existing framework that
Jacob Levy has provided. So sorry, so here I should instead function as a script,
the next function is whatever I mean, which one is should I think of?
Next functions.
Like if you have two categories and they're,
I'm still confused by higher categories but so let me now try and really try to answer the
question. Like there are different ways to define what a morphism of two categories is and
the question was which kind of morphism does this really correspond to.
All right, so why did I say all that? So because we're really interested in six-fungta formalisms
and I mean there's
and six-fungta formalisms has these pullbacks, these functions, these exceptions push forward,
complex support, homology functions and so on and they should satisfy base change formulas and so on
and so forth and there's a lot of compatibility isomorphisms implicit in this and for a while
I was extremely confused about a good way to to encode this and there has been work on this by
Yifeng Li and Wei Zhejiang and also by Gatesquare and Rosenblum and Lukas Mann has kind of
synthesized these definitions. So let me mention all the names.
Um, a six-fungta, let's say a presentable one.
Is a lexometric monotone function.
From the category of correspondences, like your category you're interested in,
in this case schemes separate a finite type of the integers,
towards Lewis category PRL and so here it takes it, it's just a product of varieties
and here it takes a tensor product. So you send any x to some d of x
and the lexometric monodiality means that there's some kind of exterior tensor product. So the
drive category of x1 tends to the drive category of x2, the absolute drive category of the product.
And I really started to think about this in some detail and turns out that there is a surprising
amount of arguments, that you usually just do an italic homology or something like this that you
can actually carry out in the framework of such an abstract six-fungta formula. In particular,
there's a way to prove punctuality, which usually is like some sort of non-trivial
serial mental homology, where you need to fiber into curves, tata, tata, tata,
prove Delene's fundamental lemma and so on. But Bogdan Zervelov gave a very nice account of this,
where you really just have to do one very simple computation for the F1 line and then you're done.
Everything else is just a category theory.
But then even more recently, as I started to embrace infinity to categories, I realized that
there's actually a better way to think about this using infinity too. That's the following.
So one thing I somehow didn't like about this definition is that it's just lax. And I told
you that I really want series that are of veil type, which satisfy a Q-net formula.
So ideally, I would really like this function here to be an equivalence.
But it isn't, and the tata homology somehow it isn't and so on.
And for motors, the red carpet motors, it certainly isn't. So that's bad.
I think that for things like in the Betty setting, it would actually be true.
In the drum setting, it will also be true. In the prismatic setting, it will also be true.
So yeah, so it's like it's all, it's bad. Motivics, that's bad.
Certainly, we'll now center about this word whether I want lax or stricter.
Right. So it turns out that you can always rescue
being symmetric in order at the expense of going one categorical level up.
So yeah, so here's some kind of correspondence.
I first learned, saw a statement like this in Lurie's paper,
actually on the corbordism hypothesis,
where you can, so let's say C is some symmetric monoidal.
In St. T1 categories.
So the case of interest being probably this one here.
And then here on the one side, you can consider these lax symmetric monoidal factors.
Sorry, yeah, let me call this key here.
2 to the power of the product.
And on the other hand, you can consider strict symmetric monoidal factors.
Let's call them F. From C towards, let me call it C double,
towards some symmetric monoidal presentable in St. T2 category.
And then there's some kind of forgetful function here, which takes any
F to the function D, which takes any X to the homomorphisms from the unit into F of X.
So basically the only thing you're remembering out of your
St. T2 category are like the morphisms from the unit, which are the St. T1 categories.
And it turns out that this has a left adjoint.
Meaning that for whenever you have such a thing, you can build,
you can build in an infinity two category, symmetric monoidal guy,
where the standard formula becomes true, where it becomes symmetric monoidal,
and you can somehow do this in a free way.
All right, so that's my time management.
Maybe I should actually say that.
So this diagram is actually isomorphic to the following diagram.
So there is this, usually when you have a category, you can build the free category
generated under column, it's by your given one, which is exactly by the Yonetta lemma
like functions into sets, or if you work in finitely category, functions into anima.
If you'd use the free infinity two category now on C, then similar you should take the
functor category to PRL. So this is a free infinity two category, presentable infinity two category on C.
And now you map to some guy here, and so then you precisely have the datum of a fiber functor,
and turns out that such lexometric monoidal functors, well they are in particular the
functors of, let me write,
I may have confused some of my ops, okay let me ignore that.
Turns out that while they have some objects here, and to leximating monoidal structure,
precisely gives them the structure of a commutative algebra in this guy, so
these are precisely the commutative algebras in this functor category.
And I should correct this by passing somewhere two ops, but I'm now in confused way I should do that.
And if you have such a guy, then the one case you can just pass to the endomorphisms of the unit
and C, which becomes linear over this guy, and the other case you can pass to modules.
And so this procedure also tells you how to build this, so you regard this datum as a commutative
algebra in the two category of functors, and then pass to the category of modules.
All right, why am I saying all that?
All right, so what's the point here? So we're trying to figure out what the kind of universal
fixed functor formalism or something like this is, and well there's actually already an answer to
this, so there's a theorem that these are the motivic six functions. So this is actually by a
theorem that's essentially together. You can characterize this as the initial fixed functor
formalism. And then you just ask for certain properties such that, for example, you want that
if f is a proper map, then pullback has a right adjoint, which is still in PRL,
so it's called preserving a flow star, satisfying base change in the projection formula.
Or if f is smooth, then it should have a left adjoint,
satisfying base change in projection formula. And then there is, I don't know, there's probably
some excision that you might want, some A1 invariance. I mean, these are all conditions,
A1 invariance and you might also ask that the t-twist is invertible,
but I hope I didn't forget some important condition.
And now you can run this machine and build some symmetric monoidal infinity-2 category.
Of motifs over z, or you could also do this over any base. And so let me
really describe how this is formed. So the generators, that's how to think about this,
so the generators are like, let me draw some bracket x, where x is any separate scheme
finite type over the integers. And
x tends to y is actually identified with x, sorry, x times y is the tensor product of them,
so the tensor product is extending the Cartesian structure on these guys.
But also, like the correspondence is actually mapped towards motifs. There's actually a small
subtle point here, whether I want this as a datum or just as a fact that there is such a thing,
and actually I don't want the datum, I only want the observation that it exists. But this means that
any x is actually dualizable, because it's already dualizable here, and the dual of x is identified
with x. And so this means you can also compute what the homomorphisms are between x and y,
because this is identified with the homomorphisms
from the unit to the dual, but the dual is the thing itself, so it's x times y.
And this should be precisely by the correspondence being given by
the derived category of motifs on x times y as it comes out of the series.
And basically this tells you the structure of the whole category, because everything else is
somewhat generated by these under call limits. No, but I assume excision, so you can always
stratify into smooth things anyways. So you said that the dual of x is dualizable with dual x?
I say that. But in particular, at this level, the quenet formula becomes true again.
And now suddenly there are a lot of fun observations about this.
That actually this can be made more concrete again.
And maybe the most critical observation is that you don't actually need this large, like one,
the thing that makes the usual theory of what gives motifs so difficult
is that the category is generated by like all smooth schemes over the integers.
But I mean, there's a whole lot of them, and so it makes it very difficult to control.
And here, we have the same problem that we need all these schemes as generators, and it's huge.
But it turns out that actually just the ANs generate.
Are you presupposing some kind of stability?
No. I mean, I wouldn't even know what it means at this level. I mean, you can ask
it was morphisms are stable. Okay. I'm sorry, maybe I should say that. Yeah, some morphisms are stable.
Thanks. I missed that.
So why is it? Why is that? Well, certainly the affine ones generate. So maybe by excision or something.
All right, that's a small thing. But then whenever you have an affine thing, you can embed it into AN.
And then there's definitely generate in what sense as a presentable in 32 category.
Actually, under retracks is good enough.
I mean, you have a pullback, but you also have a lower star from X to AN.
I mean, it's a proper map, so it should have this writer joint, which is still
somewhere in this category. And then this means and then I upper star, I lower star
is the identity as a map from X to X. And so you've written X as a retract of AN.
This is great. For example, it implies, what else did I write here?
And you can use it to show that whenever you do the same thing for any other X,
then uproises against some new complicated things that you have to build out of X,
but actually no, relatively it's extremely easy. You can just take the modules over X,
which is a commutative algebra in the motors over Z.
It's relatively just reduces to algebra in this one thing you have to construct.
And this also implies that it's this two categorical level like suddenly the category
of motives satisfies qunits. So if you take motives over X and tensor it with motives over Z,
motives over X prime, this is just motives.
So suddenly all the qunits you've ever wanted becomes true.
And you have an explicit set of generators.
It implies yet more basically this observation on the ANs.
It means that so a priori we define this
as something that's generated by all the schemes here. And then we were just putting conditions.
So in the suitable sense, this is just a localization.
But then we can do the smallest thing where we just generate by all the ANs,
by all the fn lines.
These already generate and if you're careful enough,
you can show that you can trace all the conditions you need just in conditions out of there.
So this is also localization.
All right, so I started five minutes later with a lot,
built five minutes over time already. So I have at least three minutes.
Yes?
How do we convert P1 faster?
I mean, so once you have all the ANs, you can build all the other objects you need.
You can build like all fn schemes as fiber products of fn spaces and then you can glue.
Once you've asked for all your left and so on the joints.
I mean, also inverting P1 is also the same as inverting GMS1.
I mean, you can build all the other ones and ask all the conditions.
All right, so this means we have a new answer to the following question.
What is the realization of motives?
The usual answer would be that, I don't know, you have your derived
category of motives on some x and then you look for some tensor
functor to the derived category of modules over some r.
But actually, you should be looking for much more
because this is where things start to behave well.
They start to behave well once you go one level up.
You should really be asking for realization one level.
So for a tensor functor of symmetric monoidal presentable infinity two categories to the
thing one level up here, which is like a series of d of r linear presentable infinity degrees.
All right, so now I know what I'm looking for.
Finally, I'm looking for such tensor functors to some d of r's.
And finally, I can kind of explain why analysis is needed.
Namely, analysis will be needed because I expect that there are extremely huge
such functions of r as a usual ring.
But my hope is that there will be much more such functions of r as an analytic ring
because then you have some more room to play with.
And why?
So here, expectation, there are few such functors, few such two categorical realizations
for usual rings r.
But hopefully many more.
Can you arrange a tensor functor of r at the root of x and the right?
I mean, this x and this r, they have nothing to do with each other.
What is the subsequent d of r?
Well, d of r is a commutative algebra object and here, so you can take modules.
So maybe I should write that.
But hopefully for analytic rings.
And so to substantiate this hope, let me explain the case of this ROM stack.
And okay, I'm sorry for going over time, but I should at least say that.
So you might hope that if you do motors of a Q, that then you can definitely write down a
functor to Q linear presentable stable infinity categories.
So now suddenly the base and the coefficients are the same, but that's because I'm
someone in the ROM setting and we send any x to the derived category of the ROM stack.
You might think that this should be a functor.
It definitely satisfies the Q-net formula.
So d of x to ROM tends out d of y to ROM is actually d of x times y to ROM.
So this is great.
This is used extensively in the work of gate screens on.
But it's not a functor of infinity two categories.
So it doesn't qualify as a realization.
And what's the issue?
The issue is that in motifs, you have the open immersion from A1 into P1.
And this has a left adjoint.
J lower shriek.
And adjoints are preserved by all functors of two categories.
Like an adjoint is defined in an abstract notion in a two category.
So this must be preserved by the functor.
But J up a star from the derived category of P1 in the ROM.
So the derived category of A1 in the ROM does not have a left adjoint.
I mean, if it had a left adjoint, it must commute with limits.
But here, we're just algebraically inverting a function.
And this doesn't commute with any limits.
Limits.
So this is not a realization.
Instead, what we really need is that after you pass to this world there,
this must be an open immersion in the sense somehow,
as we defined in the course.
It really has a left adjoint satisfying the projection formula and everything.
And so,
yeah.
But if you send any x to, like a first base change to some non-archimedian field k,
or C, or two long series T, or something like this.
And then you take the analytic to ROM stack of that.
The analytic to ROM stack, as it was kind of appearing,
maybe at least implicitly, you know, just as us talk,
what is the analytic to ROM stack?
It is x modulo the over-convergent neighborhood of the diagonal.
So you take functions of converging the small neighborhood of the diagonal and mod that out.
And now it's the case that the map from the fn line to the projective line is really this kind
of analytic open subset of the p1, for which the j upper star does have a left adjoint.
So this works.
And so this is giving you this extremely highly structured two-categorical realization
function on notice. And yeah, to get that you need that open emergence go to actual open
emergence in this categorical sense. This basically never works in algebra,
but it usually works in an analytic geometry.
Thanks a lot, Peter. Are there questions?
You said, I mean, there's this theorem of Krugala that in their pullback formalisms,
this Motivix expand formalism is initial. And how does this construct me to implement two categories?
Well, I mean, you start just with this thing up there, right? You start with a free guy and
generated by all these, and then just enforce all these things. Basically, in the presentable
word, you can just put conditions and it will automatically freely generate a new thing.
I say one thing I forgot to say, by the way.
I said that something is given by ring stakes. So what does it take now to give such a two-categorical
realization? Well, up early again, you need to specify what it does to all the
axis. But again, because the affine spaces generate, really the only thing you have to specify is,
where does A1 go? Because, I mean, then A and go to tensor product. So everything is already
turned by where A1 goes. And A1 goes to the derived category of a ring stack.
I mean, it goes to a commutative algebra object over a Dovr, in the presentable things over Dovr.
Such things usually come from stacks, while some kind of Tanaka duality. And if it does come from
a stack, then the structure you need to put in is precisely that of a ring stack, because you
precisely need to make this factorial like in all the polynomial maps between affine spaces,
which exactly gives it the structure of a ring stack. So such two-categorical
realizations, they are precisely, at least if you take, see here, they are precisely
classifying ring stacks with the properties that are needed, that it actually defines such a
So with your new definition at the end of the day, does this mean that because like the
say solid theory exists, that all of a sudden, usual coherent cohomology of the structure sheath
comes as a vague cohomology theory?
Well, it doesn't satisfy excision and so on.
But I mean, you can be a bit, yeah, you can be a bit more legs about which
Well, okay, so you're wrong about that. I understand. Thanks.
At some point, you fix the carbon IK. I mean, how does it enter in the pictures in this final
part? Not at all. I mean, take any copper, take the union,
stick this copper out of one, it doesn't matter.
All the constructions that are really happening are at most countable here, so it doesn't matter.
So in your last example, if you take k equals to qt, and take the coherent cohomology of this
analytic prime stack, what kind of polynomial theory do you get?
It's just a usual Durant cohomology.
In which sense? In which analytic sense?
Well, I mean, if this is an algebraic variety, then the Durant cohomology doesn't really care about
which precise. Varieties without smoothness?
Even without smoothness, I mean, because this satisfies excision, so yeah.
I mean, so it's a, I'm not sure what the Durant cohomology of singular thing is,
if it's the one that's somewhat defined by passing to a smooth hypercover, then it's...
So this, sorry, this definition maybe affects the smooth, I should have said, yeah.
What do you recover out of the right Durant cohomology of q?
Well, I mean, this construction can be done, I don't know, with this stack of norms, basically,
already, and then the usual q vector space and bed fully faceful into coherent sheaves up there,
so it's kind of determines it.
So I wonder whether Tau is, for example, this higher-homological homology, whatever,
in terms of something like...
Maybe, I don't know.
Well, no, I mean, it will never satisfy excision, yeah.
Can you maybe precise what you mean by, so you had a1 invariant, right?
So how does the Durant stack satisfy any sort of a1 invariant?
Sorry, sorry, I don't enforce it somewhat too categorically.
I mean, I definitely don't want to contract a1 in the two categories.
I mean that if you...
So you have a1, f to the point, and I said that pullback has a left adjoint, right?
And so this in particular allows me to define an F lower streak of a1,
which will be, I mean, something that in the morphism of the unit.
And I asked that, and it's probably mapped to the unit,
and I asked that this is an isomorphism in here.
I mean, it's the usual thing one does when one defines motives, that...
Yeah, I mean, because smooth things have left adjoint,
you can use any smooth guy it defines, and then the morphism of the unit,
which is a usual motivic category.
We want that it's a co-unit for the adjunctions being isomorphism.
Yeah, yeah.
Yeah, I could also ask that, right?
I could also ask that this composite maps here,
maps f to the identity,
but because of the projection formula,
this is actually just tethering with this one.
What's the characteristic of the fluid character in the character?
Yeah, I mean, so the...
I mean, dual arm theory always works better when you're in character 6.0,
that's why I had these examples.
I mean, you might wonder whether they were the integers...
Yeah, I mean, if I really want something on motives,
I should probably stick in character 6.0.
Sorry, another question.
Can you tell, like, if you apply this analytic theorem to A1,
and look at Montreux-Levenet,
can you tell what relation there is to demontrol on A1?
So you should read this paper of Juan Esteban Rodríguez-Camargo about this.
He just last week also put up a paper on archivic,
precisely about this analytic dramstake or, like, computing fields, I guess.
And there's a series of Ardakov and Watzle of, like, these decap modules,
if you know about it,
and it's basically recovering exactly the series of decap modules.
I mean, some bigger version of this,
because there's, like, a large quasi-quadruical category here,
where they consider some kind of finitary objects.
Yeah, question?
So if I understand this construction correctly,
so the idea is to be able to analyze and construct better
cosmology theories for varieties,
and somehow, like, at the end,
we want the only thing we need is somehow how to realize the motives.
And so I got stuck somewhere trying to follow.
So why, what does it go wrong with excision?
Why, what, you said something about this?
Well, I mean, usually what you ask for, like, motives is that whenever you have some variety
X and some open subset U and some closed subset Z,
then the derived category of X has some kind of saving or soganizing composition
into the derived category of U, the derived category of Z,
which is something you can do.
And we were discussing some other examples, what one, what this D of X might be.
For example, you might send it to just the usual series of coherent sheaves on X.
But the usual series of coherent sheaves, this would never,
like, I mean, these are R1 over F modules, these are R mod F modules, but R is some,
like, R mod F to the end is never, it's not part of, like,
I'm just saying that in coherent, like, the derived category of R cannot be recovered
formally from the derived category, it does not admit the same or soganizing composition
into the derived category of R1 over F and the derived category of R mod F, so it doesn't work.
Yeah, but now we don't have any consequences, like, the invariance under no-potion technique.
In particular, there's no invariance under no-potion secondation.
So it suggests that you could allow for more general, I mean, your starting category is schemes,
but if you use an analytic space, as in the course, I mean, you have more rooms, right?
I mean, there are, for example, there are different structures on A1, even over Z.
Yeah, I mean, there's all sorts of variants one could do, but maybe, like, the motivating question
for me was to find realizations for motives over the integers, so, but I mean, of course,
I mean, there's also this work of Ayub and then others that Sani and so on, where they somehow
work with rigid analytic horizons, and then you can play the same game, and that is basically how
always these categories of motives are defined nowadays, that you, and sometimes I think one
can give a cleaner definition of what these things are, if you directly work infinity to
categorically, because then you really just take this functor category, this thing freely generated,
and then enforce all the things you want. Smooth map, sub-spool, left-toe joints, etc, etc, etc.
But, okay, so it's like the excision property somehow falls down to,
I mean, but, I mean, this is, I mean, if you think about the stacks, like, I mean, you now want
some other stack, which, where this U becomes an open subset, and the Z becomes a closed subset,
and this already means that, I mean, this would never be true for the kind of usual algebraic
stacks you would envision, because, I mean, it means that, yeah, basically, open emergence,
that means there must be some J-Lowish weak functor on the level of career in chiefs,
and this virtually never exists in the usual algebra, but it does exist in a lot of cases
in the logic geometry. But it also means that some of Z must be, like, the thing associated
to the closed subset Z must somehow always over-converge, and so, I mean,
it's telling you a lot about how these stacks must look like already,
so I have a much clearer vision for what I'm looking for now.
Thanks for highlighting this again.
So, in this case, there's nothing particular about Velcro models,
like, if we can get something that you can get here, or your models can take everything, right?
I mean, if Valle signifies for you that are the usual rings, then no, I mean, you can take any
infinity ring here, but, yeah, you can take any symmetric monoidal category if you want it.
In the end, like, maybe one expects that motors are something which have a motivic t-structure,
and this should be somehow related to the fact that you can really find many of these
realizations where R actually ends up being a usual ring.
But do you expect somehow that, in that case, it fits the categorical level?
I say, is this categorical level two? Do you expect by growing the categorical level,
you're actually... No, I mean, it won't help going high up.
So, basically, I mean, you could also consider the commutative algebra objects and presentable
infinity n categories for any n, but basically, you can always go from one step to the next by
passing two categories of modules, and this is actually fully faithful embedding.
So, for each one, you can somehow ask whether it secretly was a category of modules already
over something. And so, sometimes you're enlarging the word you're looking at when you increase n.
And then you can wonder, somehow, at which step do you expect things to somehow be already well-behaved,
and I think this discussion is precisely saying that for motives, it's step two where things are already,
like, well-behaved. And after this, you would just get more and more just categories of modules,
and it wouldn't really tell you anything new. I mean, so you could ask
pass the commutative algebra on both sides, but this would just be the same data.
I know, but you could also try to get this more z, a categorical level higher, like...
But I think it would just be modules over this one.
At least I don't see what new thing you could possibly get.
So, you mentioned that this thing, you don't... it doesn't work naively for in algebraic setting,
but what about, I mean, some sort of, I mean, because in a classical situation, I mean,
the link considers some sort of pro-coherent sheet, whatever I mean.
Yeah, so, I mean, there would be a cheaper way you could try to salvage the drum stack business,
which is, like, in some sense, the D-Module6 function looks closer to the usual thing if,
instead of in-coherent sheets, you take pro-coherent sheets.
But then you're leaving the world of presentable categories,
so it will also not define a tensor function. So, if you want a presentable, you should do
something kind of in-pro, but then the tensor product would tensor these pro things together
in an algebraic sense and wouldn't give the right thing. So, there would be a different thing
when you somehow take some kind of solid drum stack there would also be. So, it could actually
define something of a Q. You could take over XQ, there could be some kind of ultra-solid structure,
but you can also define some kind of... somebody didn't know this is box-box.
This is the relives of a Q and has all the properties, so maybe there's a different
question to the question somebody asked. But, yeah, so I don't see any way of, like,
making the drum-commodule into such a function that doesn't involve somewhat using some of our
analytic geometry. Excuse me? Doesn't this work? I mean, I'm not sure how to do it using
the drum stacks, but if you use the usual theory of the modules, does it work if you restrict
your holonomic objects? It's not a presentable category. Does it mean inter-holonomic?
No, but then it doesn't satisfy the Kinect formula, I don't think.
I mean, that's a... usually a TACO module also satisfies the Kinect formula, and the inter-holonomic
would be more like... so to get the usual... to get this usual... where is it? This property
is that you really inter-box big categories of theme modules, but then you don't have to
just left it on anymore. Sorry.
Thank you very much to the four speakers for agreeing to come here and giving those
really nice talks. I want to say thank you to the Tondale for giving the donation that
gave rise to all of this and this nice day that we've had here, and I want to thank everybody
who came for coming and participating.
