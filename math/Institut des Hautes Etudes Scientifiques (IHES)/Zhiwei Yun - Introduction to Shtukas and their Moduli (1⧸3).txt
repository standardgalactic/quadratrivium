So, if you look at the Corvallis volume, the second volume, second to last paper, you'll
find a paper by Karsten with basically the same title, a very inspiring 10-page paper
for a dance with a sketch of the proof of Drimmfeld's theorem for global landlands for
GL2 over a function field.
The only problem is that till the end of the paper, there's no definition of Stuckas.
So I think 45 years have passed, we've made so much progress, at least I'll try to give
a definition today.
Okay, so I'll fix some notations.
So I'll work with a fixed, complete, geometrically connected curve over a finite field Fq, F
denotes its function field and will freely use familiar notations like these completed
local rings and local fields, residue field.
So this is for any place or close point on the curve.
We have these local notation and G will be fixed to the split reductive group, connected
reductive group over K. Okay, so the goal of automorphic form theory for function over
a function field is of course to study how G of Adele's act on functions on this Adele
quotient.
So but we are going to interpret these kind of function theoretic notions in terms of
more geometric language.
This is already, for GLN, this is already mentioned in Pierre Henri's talk this morning.
So let me just restate this various dictionary for split reductive group.
So on the one hand we have this double coset space here K is a product of G of OV, OX,
maximal compact subgroup, standard level structure.
On the other hand we have G bundles on X.
So both sides are groupoids.
So here it has objects, G bundles, and then isomorphisms as morphisms.
Here it's a groupoid made by quotienting a set by a group action.
So we can, if I think of this as the set I'm quotienting by, G of F acts on it with stabilizers
and those stabilizers are the automorphism groups in this groupoid.
So this is an equivalence of groupoids.
Here I'm using that G is split, this statement is extremely clean.
In general right hand side is slightly bigger than left hand side, but let's not worry
about it now.
So when we study functions on this double coset we can naturally interpret them as functions
on G bundles.
For each G bundle I give a number.
So this is the kind of geometric point of view.
But we want to geometrize it a little bit further.
We want to consider not just G bundles as individual objects, but we want them to move
in module line.
So this bun G will appear as a fundamental geometric object in the subject.
This is the module line stack of G bundles on X.
So let me give a more precise definition and this style of definition will appear over
and over again in these lectures.
So to give you a stack I need to tell you its functor of points.
So I take a test scheme, all the schemes in this talk are over FQ.
So then the output will be an S family of G bundles on X.
More precisely an S family of G bundles is just a G bundle on the product over FQ.
I will not write down fiber over FQ.
So it's a G torsor over the product and again viewed as a group point.
So this is the functor points defined by bun G.
And the important fact is that this bun G is an arting stack, an algebraic stack, locally
of finite type and in fact a smooth over spec K.
So it's more or less like our favorite smooth varieties except that points here can have
positive dimensional automorphisms.
For example the trivial bundle here has automorphism by the whole G that's viewed as a continuous
group rather than a discrete one.
So just to be more concrete let's look at some examples of G.
So for GLN of course when we talk about GLM bundle this is just a vector bundle.
So there is a natural correspondence between principle GLM bundles and vector bundles.
So modular stack of vector bundles of rank N.
So dictionary works as we have a vector bundle then C over X then you take the frame bundle.
The frame bundle is just isomorphisms between the trivial bundle, local isomorphisms between
the trivial bundle and your bundle.
This shiftifies over X and becomes a principle bundle for GLN.
And in the other direction you take a principle bundle and there's a construction called associated
bundle to a representation of GLN.
So what it means is you take this total space V cross standard representation V standard.
This is just affine space with GLN action and then you're quotient by the diagonal action
of GLN acting on both sides.
This gives you a vector bundle over X.
For classical groups we can always think of when G is classical group as a vector bundle
with auxiliary structure.
For example, so this SP2N classifies bundles rank 2M bundles together with a symplectic
form.
So this symplectic form means there is a pairing, perfect pairing.
So everything is over X times S. This is an alternating in the usual sense and perfect
pairing.
So again this is not literally the definition but you can use the same idea to pass between
the principle bundle and the vector bundles with extra structure.
So that's the bungee.
Now I will introduce stuccas in several levels of complexity.
So basically first I will introduce stuccas with one lag and no bound.
So I'll explain what these things mean.
And next I will introduce bound, one lag, and then more lags and the variants called
iterated versions.
So I think you should feel very much satisfied if you understand the one lag case with a
bound and the other more complicated versions are not so urgent.
So I need to, before introducing stuccas, we need to talk about hacker modifications.
So the hacker stack is a correspondence between bungee and itself.
And it also maps to the curve.
So in terms of functor points, what it classifies, of course it sends in the maps to all three
guys.
We need at least three pieces of data.
That is a point in X of two bundles.
And then most importantly is the last piece, which is an isomorphism between E restricted
to, so both E and E prime, they live on this product space X times S. I only require an
isomorphism on open subsets of this product by removing the graph of X.
So what this means is X is a map from S to X.
You can think of S as just a spectrum of a field.
This will give a field-valued point in X and then I can talk about its graph.
Is a copy of S but diagonally embedded in S times X using this map.
Again this is just a point if S is a point.
So an isomorphism away from one point.
So this should be familiar to you if you, for example, if you are familiar with modular
curves, at least for fixed point X, this kind of modification is analogous to Pysogony
for fixed P between elliptic curves.
The only little extra thing here is that this X is also varying.
So that's mapping hacker to X.
So this is also a stack but it's not as nice as bun G. In particular it's infinite dimensional.
So this is a kind of not a finite type, not even locally of, well it's, so more precisely
this is an infinite union of algebraic stacks.
It's too big.
Later we will put a bound to cut it into finite dimensional objects.
Right now it's basically a symbol which is convenient to define kind of the essential
part of Shtuka.
So now we can already define Shtuka, Shtuka G, maybe decorate it a little bit by G. With
one lag, is defined by the Cartesian diagram, so hacker G mapping to bun G times bun G and
then I pull back via the graph of Frobenius.
So in this diagram, out of four corners we know three of them already, is bun G and hacker
G. And we have this map P, P prime.
And horizontally we just have the graph of Frobenius.
So any stack over FQ, there's a Frobenius morphism that raises functions to the Qth
power.
Fro S on the level of functions raises everything to the Qth power, so it's FQ linear.
In particular I applied to bun G.
So now this is defined at least as a functor of points.
We know how to calculate Shtuka G using this diagram.
So let's do that calculation.
So S point means a point in hacker G, which in turn means a quadruple of data.
So let me just abbreviate this complement of a point by X, remove X, although this really
is an S family version, not the end.
This is only the data given to you by the hacker part.
And then that automatically gives you two bundles, mapping to the lower right corner.
Then on the lower left corner you have another bundle, which is not a new bundle, it's just
the first bundle here because it's identical to the first one factor.
But another requirement is that Frobenius bun G applied to this first bundle has to
be isomorphic.
You have to give an isomorphism between Frobenius image of E and the second bundle.
So this is just mechanically reading off from that diagram.
We obtain this description of S points.
This last piece is also a data.
This is an isomorphism that you have to give.
Now usually we write it in a slightly different way, equivalently.
We like to write it as a following diagram.
So this dash arrow means it's not defined everywhere.
This is away from the point, this is a small x.
And then the second bundle is already determined by the first bundle.
So as the image under Frobenius morphism.
So I use this left exponent tau to denote image under Frobenius.
But more concretely what it means is if you look at the map from x times S to x times
S, which is identity on x and Frobenius on S, I just pull back the bundle along this
map.
So I'm kind of contracting the data of E prime with this isomorphism.
So I didn't have to introduce E prime.
Now this is the equivalent data, a meromorphic isomorphism between E and its Frobenius pullback
away from one point, one moving point.
So this is relatively easy to define.
Again it does not have good geometric properties, it's still as infinite as that Hecker.
So next let me introduce bounds.
So the bounds are some constraints on this isomorphism.
So we want to say what order of poles this alpha is allowed to have.
So this to introduce bounds I need to review Afangorismanian and its stratification.
So for GLN, Afangorismanian, at least if I just talk about its k points, this as a set
is very easy to describe.
These are just O lattices in let's say, well this is a local, so this is depending on the
local field.
So everything is happening near x.
So this is lambda is an O x sub module of rank n of the full rank sub module inside a
given n dimensional vector space over local field.
So we already heard from Pierre Henry's talk, this can be presented as g of fx mod g of
O x.
So this element g here corresponds to g acting on the standard lattice.
It's a bijection.
And now we introduce stratification, or rather a decomposition of g or g just on the level
of sets.
So g or g lambda, let me be very concrete.
So lambda is a tuple d1 dn, d1 decreasing sequence of integers, and it's easier to define the
case where all of them are non-negative.
And lambda k points classify those lattices that are already contained in the standard
lattice such that if you look at the quotient, so this is some torsion O module.
If I pick a uniformizer t at x, it acts here by a nilpotent operator.
And so the requirement is the Jordan type of this nilpotent operator as Jordan blocks
d1, d2 up to dn.
So that's very concrete description.
And what if one of the dis is negative?
Well, you just shift.
In general, you can add some d to make it positive.
And then g of lambda plus d, so suppose this is totally positive, this will be those lattices
that are of the form t to the minus d times those lattices that are classified by g lambda.
You shift it, enlarge it, this operation, so that these lattices will not necessarily
be in the standard lattice.
And as lambda varies, we do get a decomposition.
So lambda is just all the integer and tuples satisfying this decreasing condition.
So this is what happens for GLN.
So general g, first, girl g is defined as quotient.
So again, I'm working with this.
I'm choosing a uniformizer at one place.
In fact, this result is intrinsic to the local field.
It doesn't depend on the choice of the uniformizer.
But it's convenient to choose one and think of this as an infinite dimensional group where
matrix entries, say g is a matrix group, matrix entries are formal Laurent series in t.
And then it has a subgroup where entries are a formal power series.
And you carefully make a quotient in...
So the data base is t double bracket t is qk double bracket t?
Yeah.
So this is a group functor whose k points is k bar double bracket t.
But this can be defined for when k is replaced by k algebra, you just replace here as well.
And there's some technicalities going into defining the quotient and to show this really
is a reasonable object.
So I'll just say stated as a fact, at least if you only care about reduced structure,
this is a union, a countable, but infinite union of projective varieties.
Okay.
The question is why the affine-grasmanian is called affine.
So affine comes from replacing usual the base field by formal Laurent series.
This is following the kind of tradition, following the convention in, say, the algebras.
We have affine-catsmoody, the algebra, which is an infinite dimensional version of finite
dimensional the algebras.
And from passing from finite dimensional the algebras to affine-catsmoody, algebras means
you're adding double brackets that comes from...
It does not mean that this variety is affine.
So indeed it's a union of projective varieties.
And we can already see it from this GLN case maybe here.
If I look at this more concrete description, you can easily recognize it as some sub-variety
in a grasmanian variety because implicitly this lambda will have to contain t to the
d1, some rescaling of the standard lattice because the longest Jordan block has size
d1.
So lambda is between these two lattices.
There's only finite dimensional degree of freedom over the residue field for lambda.
So the choice of lambda is some subspace in a fixed finite dimensional vector space.
So it's a sub-variety in the usual grasmanian.
Sub-variety in the usual grasmanian and therefore a projective variety.
Okay, so now the decomposition into lambda generalizes also to arbitrary g.
And the level of varieties, this is a stratification indexed by dominant co-weights.
So here I choose a maximal torus and it has a co-character lattice and this plus means
dominant.
So I'm only looking at those lambda whose pairing with any simple root is non-negative.
So this is a stratification, not a disjoint union of varieties.
Okay so it makes sense to talk about less than equal to lambda.
This is by definition the closure, of course, let me subtract g now, so just closure.
And this contains, this is the union of lambda prime such that the lambda prime is in the
negative obtuse cone of lambda.
So this is the, you subtract from lambda some linear combination of positive coroutes.
So that's the partial order put on this set.
So this is a projective variety, projective variety of dimension two-row paired with lambda.
So now we can talk about the bounded version of HECA.
Roughly speaking, this HECA will map to Garzmanian, alpha and Garzmanian, it's not literally true,
but let me try to make sense of this map.
So according to the modular meaning, HECA classifies x, let's fix a point first.
Then this point is not in the data anymore, so it's just meromorphic isomorphism of two
bundles away from x.
From this data, we want to get some local data, which is, I can just restrict e to the
formal disk around x, again restrict alpha to the formal puncture disk.
This is on the, alpha is only on the puncture disk.
So here puncture disk is a spec of fx, dx is a spec of ox.
Again I'm, this is a little bit sloppy because I didn't input a test scheme here.
I'm pretending, I'm just describing k points.
So from the global data we restrict to the formal disk, we get two g bundles on the disk
together with an isomorphism away from the center of the disk.
And this thing is very close to Afangrassmanian already.
In fact, let's, since it's so important, let's give it a name, just queue some quotient
version of Afangrassmanian.
This is the definition of quotient Afangrassmanian.
Say what it is, is instead of quotienting the group g power series t on one side, I
quotient on two sides.
So this may look like a bad idea at first because we are, we have some infinite dimensional
variety which is already a little bit scary.
And now I quotient it by infinite dimensional group.
And it's, so not even clear what this, what the dimension of this guy is.
Now, but in fact, this is, in many aspects, this is more natural than Afangrassmanian.
For example, later we'll talk about geometric Sataki.
It's better to think of those sheaves in geometric Sataki as living from, living here, which
is more symmetric.
Okay, so, so there's a map from Hecker-X to some quotient version of Guarassmanian.
And, yeah, so the question was, is it possible to give a definition of this map?
No?
Oh, as a functor, okay, the double quotient as a functor, yeah, so you have to sheafify,
but before you sheafify, it's just, so let's say evaluate on a K-algebra, it's just naive
quotient as a, as a, a groupoid.
And then you, you kind of sheafify.
I don't know how much this helps.
Okay, but so what it, the canonical recipient of this kind of desirable map is some quotient
version of Afangrassmanian.
So this is good now because our stratification, yeah, I forgot to say actually the most basic
thing about stratification, this is, each piece is in fact left orbit, it's orbit for
the left action of G square bracket T. So in that definition also here, there is a left
action by the whole loop group, but if you look at just
definition by G square bracket T, orbits are exactly parameterized by dominant co-weights.
So this stratification is a very natural one, and certainly it descends to the quotient
because those are, those are just points on this quotient.
So I can talk about Q girl less than or equal to lambda, for example.
This makes sense.
And I can, so I have this evaluation map at X, as I call it, evaluation or restriction.
Just restrict to the formal disk.
I can define HECA X less than or equal to lambda to be the preimage of Q, Guassmanian
less than or equal to lambda.
So what does, yeah, okay, so this is the case where X is fixed.
Little, little point X.
We also have a version where X moves, but I, I, I don't want to go into the details.
There's also a, can you say it a little bit louder?
Yes, yes, the question was whether the strata on the Afanguassmanian are finite dimensional.
Yes, the answer is the dimension is precisely this number.
Oh, dimension of HECA stack, so you want to know dimension of HECA X less than or equal
to lambda.
So this is dimension of Banji plus that extra dimension coming from girl lambda.
And this is also very concrete is dimension of G times genus of the curve minus one.
So if we let X move, there's still a way to produce an evaluation kind of universal evaluation
map.
Now, now I can't say Q girl X, because X is moving.
But so to make sense of it, you have to pass to a further quotient of it where to, to make
it independent of the point.
So this is a, well, divided by another infinite dimensional group to make it canonical.
This is the automorphisms of the formal disk.
So this is not, not, not essential.
So you should just accept that there is a version HECA less than or equal to lambda that looks
like HECA sub X less than or equal to lambda over every point X.
So let me give an example.
Again for GLN and lambda is this simplest co-dominant co-eight.
Then what we are talking about, it classifies a pair of, so a point X, a pair of vector
bundles V and V prime.
And their relative position is that the second bundle is slightly smaller than the first.
So the condition is that this is a map alpha and the co-kernel of alpha is supported on
the graph of X and is free of rank one, locally free of rank one there.
So it's a skyscraper sheath, the co-kernel skyscraper at X.
That's the, in some sense, most common kind of modification that you see in automorphic
forms.
Okay, so now we can define bounded version of Shtuka, okay, so I reserve subscripts for
something else and put it in the superscript.
This again is just defined by the same Cartesian diagram except you put a bound on HECA.
Okay, so that's definition.
Now if you compute what happens to this example, try to compute what Shtuka less than equal
to lambda is, you end up with, so moving point X then V and then V prime is the Frobenius
pullback of V and it's required to be a sub bundle, sub coherent sheath whose degree is
one less than V.
So that's given by this Cartesian diagram, well, it's more precise but in particular
the degree is one less, the co-kernel has to be supported on X.
But then you quickly find a contradiction, how could Frobenius pullback of a bundle change
the degree?
So this is not Frobenius on the curve, this is Frobenius on the test scheme, on the coefficients.
So this is impossible, which means for this particular lambda, if you put the bound, the
Shtuka modular space is empty, so that's not very exciting.
So that, the reason for that is our choice of, well, there are two ways to fix this issue.
One is you choose another lambda, for example, it will not be empty if you work with this
lambda.
The point is the sum of these integers should be zero in order for this bundle and this bundle
to have the same degree, in order not to violate this constancy of degree.
Before you can introduce iterated version, you can have some intermediate bundle between
V and Frobenius pullback of V, that is, let's say, degree one smaller than both.
That also works.
So let me introduce the iterated version.
Again this is not the most general iterated version.
We start with Hacker iterated version.
Let me just, iterated means I make r steps of modifications.
So this means, first I need to specify r points and then I have g bundles r plus one
g bundles and they are related by these isomorphisms away from the corresponding point.
This is on x, remove x1.
This is on x, remove x2, isomorphism on this complement and alpha r.
So this is the unbounded iterated Hacker stack.
And then it's easy to define the bounded version.
So you just need to put a bound in each step.
So you need to specify some lambda.
Now it's a tuple of dominant cohates.
So that gives some iterated version of Hacker.
And then using the same Cartesian diagram we get Stuka.
Okay, so let me give an example, simplest example in GL1 for the iterated version.
So for GL1, what is the choice of lambda i is just an integer.
And then Stuka, well, under the partial order on this co-character lattice is trivial.
There's no way to compare any two of them.
So I just write lambda.
So that means I'm considering our points and line bundles.
And the last one is, I'm given an isomorphism between the last one and the Frobenius pullback
of the first one.
So this is the unbounded version of Stuka.
Now I put a bound to each of these maps.
So this alpha one has to, for a map between line bundles I can talk about its divisor.
It records the order of zeros and poles.
Here divisor of alpha one should be, I mean maybe negative of it should be lambda one
up to sign, should be lambda one times x1, etc.
Okay, well, but this is extremely concrete because we are working with line bundles.
For line bundles, if you fix the modification type, so this lambda i, your next line bundles
uniquely determined, so you just twist your original bundle by some multiple of the point.
So you can inductively determine all these bundles.
So LR is isomorphic to, I think there's a minus sign here.
To L0, twisted by a divisor.
And then in the end you impose an equation that this last guy, L0, twisted by divisor
is isomorph, you're given isomorphism with its own Frobenius pullback.
So all in all, you can rewrite this stack in terms of the following Cartesian diagram.
You have r points on the curve.
It gives you a divisor, it's linear combination, so these lambda i's are fixed.
So you get a divisor that in particular gives you a line bundle.
So the O of that divisor.
And then you want to solve the equation that tau of L0 tensor L0 inverse, their difference
is equal to this divisor.
So your choices of L0 is the solution to this equation, which is fibers of this lanisogyny.
So here it sends L0 to tau L0 tensor L0 inverse.
To any algebraic group, there is such an operation, it's called lanisogyny.
And then you just base change, you get stuka, bounded iterated version for stuka, gl1.
So from this diagram, we see, we can read off some geometric property of gl1 stuka.
The question is whether this definition depends on all the points being k points, the answer
is no.
You can work with, well, so these points, it doesn't even make sense to ask whether they
are rational points because these are moving, so these are s points of x, they're part
of the modular problem.
So yeah, it's, anyway, okay, so we get some corollary.
First, this land map sends whatever line bundle to a line bundle of degree zero because tau
of L0 and L0, they have the same degree.
So since this land map lands in pick zero, it will not meet the image of x to the r unless
the sum of the coefficients is equal to zero, unless you make up a degree zero divisor which
would land in pick zero.
So if this sum is not equal to zero, then we conclude this fiber product is empty.
So this is a similar phenomenon to the emptiness here, okay.
We did not choose the correct lambda.
Now on the other hand, if their sum is zero, and r is at least one, then, well, even r,
so when the sum is zero, we can see this is non-empty, it's non-empty because the land
isogeny actually surjects onto pick zero.
And more precisely, land isogeny is just a finite tau cover of, it's a universal abelian
cover of Picard.
So we get that the map from Shtuka to x to the r, by the way, these x-eyes are called
the legs, so I didn't mention this.
This map is actually a torsor for the transformation group of the land isogeny which is of fq points
of Picard, x.
And this has a little bit of automorphism, fq star, this itself is a groupoid, and each
fiber of this map is isomorphic to a copy of this discrete groupoid.
Okay, I stop here.
The question is whether all Frobenius maps are absolute Frobenius.
So yeah, so absolute you mean, well, I said exactly what they are, they're just raising
all functions to the q-th power, it is because k is fq, q is a power of prime, so raising
f to the q-th power, not p-th power.
Other questions?
Yes.
Oh, okay.
Can you say something about why the Hecker stack is called Hecker?
Why the Hecker stack is what?
Why doesn't he have the name Hecker, what does it have to do with the operators?
Maybe let's leave it to the q and a.
Ah, this I can do it more quickly.
So the question is when lambda is equal to 1, 1, 1, 0, 0, minus 1, what does a modification
of that type looks like?
So such a modification means at the level of just point wise, it means, so bounded by
lambda means if you intersect them, well, this is a sub-shef in both, then you look
at how much this degree decreases.
This is by at most 1, so it may be they are equal, that's allowed, that's the less than
or equal to part, the equal part, when it's strictly type lambda, then this intersection
will have exactly one degree, one less than each of them.
Okay.
Okay.
I think there's a less time to do it again.
