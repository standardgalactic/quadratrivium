Not a scary, really.
I gave an abstract line far too much in.
So I will just cover the idea of a quantum game
instead of more general things.
And then you get the idea of
the more generalisations that can
look at at the papers
I will start with, by the way, I should say this is mainly on work with Aiden Cabello,
Giannicholo, Scarpa and Simono Severini. This is to be on the exclusivity graphs and
then I may have time to talk about mixed graph generalisations at the end. How long have I
cafes i mor Hwyl. Yng Nghymru, fel y cyllideb, chi'n造 i fel chi?
o'i system ag yr oedd yn i gwneud, ble ei fod yn digad yn gwieisgol bob
L Azer iawn, ahau o bai fy operated yn ddigon i'r th 되는.
Edryf yn wneud cael ei wneud y j Forum, ac rwy'n wedi ei pinnwyd a gaf i'r
Bueno Cymru. Wrth beth güzb chi ddwy ddod o organ ar y slides peirio arusan
Gallwch i fynd
dymbag o dnyaid wedi ein
sillion i alleslenollaeth
yn bobi allon ni
dda mor
phellwg dda'r dda
dda bobi allon ni
ra illness
i各位
mae'r modd
rry� Devan
nid ei ddechiw
wrth gyd
F Charlie
Abertodramatic, dyma yw bai dron, bydd sy'n bryd.
Maith gynn iawn, mor chael��haf am hyd yn Lly繼續
chydwy'r睡 wdeit, a gyydol gôl ar Fyll
�r Iol Cro diy Caerdydd, Iol Cro cyd questions
Ac awdetsyn bob nos i gynnwys gydag fifth yma.
Felly, mae'n by fancy, a número 10 i chi'n dilli Sauce
fe allwch o ar � pearls i ni.
Ac byddai'r rhywbeth gweithio ythburworth iawn oed d Cincinnati, ac gof yn dda i ddim dwy powered
i ni i��엔iai Gwyrdd A余len I gade neim – gof yn son oale.
Wojn apron yma, mae'r Scog Llyw Cymru Mael sydd yn oall yn cael rhan.
Felly next year y mae'r cam yn cael wneud.
Felly Alistair yn oedd Ars Sam Bob.
Alistair yn oed yn bwysig cyngloedau Gymraeg.
Well, clearly it depends what game you're playing, but that's a general scenario.
Can I cooperate?
No, absolutely not.
No, absolutely not.
At the same team.
They may be on the same team but they don't talk to each other.
A bit like the English football players.
So they're not allowed to talk to each other.
In fact it's a non-local game, maybe this answers.
Oh yeah, okay thank you, I forget these things.
Thank you.
Thank you, yeah. Let's just check it works. Yeah, thank you. So to answer your question, it's a non-local game.
Alice and Bob are non-local to each other. They can't communicate instruction or result to each other.
They can't say, well, I got an X and I got a Y and what results they get in a sense once they give the results of the
reference too late anyway so maybe that's not an issue. And then the question is can Alice and Bob
always win? Well, this question is a general question but we haven't said what the game is.
So what I will spend most of the talk doing is describing the game to you, yeah.
And then I'll show you how if Alice and Bob are just playing this normal game they can never win
all the time but if they share a quantum resource then they can always win.
So that's the idea of the game. So this is just another way of saying the same thing with few more words on the slide, yeah.
So it looks a bit more scary but it's saying the same thing. The referee has a set of instructions taken from a probability distribution pi.
So, you know, maybe he chooses X with some probability and Y with some probability.
So there's an alphabet for Alice and an alphabet of instructions for Bob. For the game we will choose Alice and Bob will have the same alphabet in fact.
But this is more general than that.
And then Alice and Bob take their instructions, compute their results, send them to the referee and they compute the answer.
So it's the same slide as before with just a bit of words on. If Alice and Bob don't always win classically then and if we have a quantum resource
so that they always win then we call it a pseudo telepathy game. It's not really telepathy, it's just that if you don't accept the rules of quantum mechanics in your understanding of physics then it will look like telepathy.
Okay, hence the name telepathy. It's supposed to be provocative.
So here's a classical version. Classical, by the way, for those of you who don't know, just means not using quantum resources.
If you have a quantum computer or quantum particles then it's non-classical, it's quantum. If you don't have quantum resources it's classical.
So what most of us do most of the time as far as we know is classical although that's debatable.
So referee sends the instruction x to Alice. Alice has to do something with x. She computes a function of x.
So Alice has a choice of choosing some function and Bob has some function as well, SB and then that's how the referee will compute the overall result.
So if you like Alice and Bob's freedom is that they can choose their SA and SB to try and win all the time. That's what they're trying to do, to try to win.
Now in the quantum version, right, okay, first thing is before you get all scared by this stuff is when if you get scared of that think of it as vector.
Yeah, with some numbers in. A, B, C, D such that the magnitude squared x of g plus g equals 1.
So it's a normalised complex vector. That's all. So when you see that I just write that like that because I was thinking using, quantum physicists will use that but when they do that they just mean this and it's just a vector so don't be worried by the notation.
So it means that the difference here is referee still sends instructions to x and y but these instructions are measure.
So what Alice and Bob have Alice will have one qubit and Bob will have one qubit and then when the referee says measure Alice will measure and Bob will measure.
But the way they measure depends on the instruction. This says measure this way or measure x is this way and measure y is this way. It's a different type of measurement.
So each of Alice and Bob share, of course it doesn't say just qubits, it could be qubits or whatever or larger particles but this is two state particles.
So Alice's got the instruction to measure x, do an x measurement on her qubit. Bob has the instruction from the referee to do a y measurement on her qubit and their measurement gives the result back.
So this notation means just what I just said. So you don't have to worry about that too much. What it means is they are instructed to measure and then they get the results A and B back.
So instead of the classical version being function inputs we have measurement instruction.
And the trickiest of course is Alice and Bob have before they've gone out met in Gangnam or somewhere like that and shared two quantum bits and entangled them together and then gone off separately.
So as far as anyone who doesn't know they have a quantum resource, they are not talking to each other but they each hold a quantum bit and these two quantum bits are entangled, i.e. they're correlated.
Their measurement results will be correlated. So the trick is that they're saying well because our measurement results are correlated can we make sure we always win this game?
So if you were the referee and you didn't know Alice and Bob shared a quantum result, quantum pair of particles, you would be surprised to find that they always win the game because you can probably prove that classically without a quantum game, quantum particles, they can't always win.
So the aim is to show that with a quantum system you can always win with a classical system you can't.
So what I will do is describe a particular example of a game where the quantum version always wins.
To understand the notation P, the P reference kind of projection like of x onto A.
The projection in this case is that yes that's exactly right. The projection is an x projection so it's a type of measurement projection and the A result for all these are the different results you can get.
There may be many A results or a dash A, maybe it's poor.
The small A is really one particular output?
Yes, exactly. It's poor notation for me. This is one output from here. So there are many outputs.
But what you do is you arrange the game so that the same outputs are obtainable from here and here.
In fact for our game the outputs will be one or minus one. So it will be very simple.
So let's look at the two, compare them. They look the same, very similar except that one of them for the quantum one they share quantum particles and the results is not dependent.
Alice and Bob don't have to prepare two functions. They don't have to choose function. All they have is their particles which they're prepared in a known state.
I should say that these particles are prepared in a state that Alice and Bob know.
So if you like there's a trick here, cheat because Alice and Bob had to collaborate before the game.
So the classical game, the referee distributes function inputs to the players and the quantum game, the referee distributes measurement instructions to the players.
What about the winning probabilities? OK, well we haven't said what the game is but what is the probability of winning?
Well for the classical system we have the probabilities of the distribution of the instructions, referee's probabilities and then this is summed up only over when V is one.
When V is one they win. So that tells you the probability over all possible functions.
So that's a lot of functions.
The maximum winning probability, a quantum winning probability is the probability of getting A and B, two particular outputs given measurements X and Y times one or zero times the probability of those measurements being distributed.
And you take that over all possible measurements and over all possible shared quantum vectors, so completely general still.
What we'll do I'll take a particular example of a game but this is obviously a very general setup.
OK, there is this physicist in the, well a few years ago, 1950 I guess, 60, 50 something called Bell, a quantum physicist was saying OK we don't know how to show that quantum mechanics is real, how do we prove it by experiment.
And they said well if we can devise an experiment so that if we win with our experiment more than we'd win if we didn't share a quantum resource and we can show that is true then we demonstrate that quantum mechanics is real.
And this was called a bell inequality because basically you should devise an experiment so that the probability of you winning was upper bounded by T if you had a classical system and if your quantum system to do the same thing probability was greater than T then you'd shown to within some noise that your system must be quantum it can't be classical.
OK, so the idea of a bell inequality is to show that the experiment you're doing has to be quantum because if it was classical you couldn't win with that probability.
And in the extreme case if you always win like in the example we can have they called it a Tosudo telepathic game.
OK, so bell inequality are very well known in quantum information in quantum mechanics because they were initially done to show experimentally that you can do better with quantum mechanics than you can with classical to show the existence of quantum mechanics.
But you can turn it round and say well we can play a game and if you can play a game then maybe we can use this as a resource in networks in various practical issues in the future.
So the game I'm going to describe is not Alice and Bob but it's Alice, Bob and Charlie but exactly the same principles hold, yeah?
So we're going to have a three player game. In fact the game I will tell you, oops, the game I will tell you is an example of a more general game.
You'll see how it generalises. But the example I will give you is three player. So exactly the same holds.
OK, and what function am I going to choose? That looks complicated and I try to make it look simpler than it could but that's really what it is.
It's basically saying well our functions are going to return one and minus one. So our functions for Alice, Bob and Charlie are going to return one and minus one and then the instructions, I'm going to have a function of the instructions which will return one and minus one.
So the instructions of the referee gives out to Alice, Bob and Charlie are x, y and z and for every x, y and z there will be an output of one and minus one.
So this is a one minus one times one minus one times one minus one times one minus one. So the result is one or minus one, log is zero or one.
That's my way round it. It's a bit naughty really but I couldn't think of any other way round it. So apologies for that.
The result is for v is zero one. If this product is one then v is one. If this product is minus one then v is zero.
So that's much more complicated than these people. There we go.
And then the instructions or measurements for Alice and Bob will be taken from four in different instructions, i, x, y and z.
Do not confuse those i, x, y and z with this x, y and z. That's poor notation from me. The capitals are nothing to do, well not directly to do with the non-capitals.
So there'll be four instructions and in this case i means just return one or in the quantum case don't do anything, don't measure.
So if you don't measure then you'll just return one.
Of course I should say in the quantum version there's no functions here, there's just x, y and z.
I should have made that notation clear.
And the particular game I will choose will have, the referee is only allowed to send out those seven instructions.
We should look a bit weird but they'll become more justifiable later on.
Each with probability of seventh, it doesn't have to be equal probabilities but we'll keep it that way for simplification sake.
So in this case Alice the referee would send instruction x to Alice, instruction z to Bob and instruction z to Charlie.
In this case z to Alice x to Bob and i to Charlie, which means Charlie does nothing, just returns one.
Okay and so on.
And we'll choose q such that given if you send this instructions then the q function will be one.
But the only one is when we have x, y, y being sent, i.e. when you send x to Alice, y to Bob and y to Charlie then we return minus one.
So the classical challenge, if you're doing this classically, if you have no quantum resource, can we, given those set of instructions, choose our function so that v is always one?
And of course because this system doesn't work out, the answer is already there, it says impossible.
Impossible, you can try it yourself.
So I actually think I did, I know a bother, I think I thought about this later at night and I thought this is a bit silly, a visual thing.
Okay imagine Alice has x, y, x and, oh that's Bob's and that's Bob's and that's Charlie's, that's Charlie's, that's Alice's, that's probably Charlie's.
And that's Bob's.
So they've got three instructions the referee gives them and you can write one or minus one on the other side, right?
Well the point is if you write choose one or minus one, you can't change it.
So whenever you send the instruction to Bob, y is one or minus one.
The point is in the quantum game when you pick it up, depending on what you pick up here, it can be one or minus one, it can be not fixed.
Okay, so there's the advantage.
So it's impossible classically.
So another way of saying this particular visual thing is what numbers do you put here, one or minus one, so that you always win.
And you find that it's impossible to get, it equal that product equal to one always.
Given these values for Q and SA when x is sent, what do you get?
It's impossible to get one every time.
But because the quantum one can change the number, depending on what these are, the quantum one can always win.
As I will show you.
Okay, I will use a particular quantum system which has got three qubits and they will be called a graph slate.
It's this particular type of quantum system of three qubits.
And now I'll tell you what in the quantum system the instructions mean.
The instructions are actually something called Pauli matrices.
Because when you say a measurement, you can measure by projecting.
And these measurements are related to things called Pauli measurements, Pauli matrices.
So if you send an X measurement, a Z measurement or Y measurement, then you get certain results back.
So for the classical system, you don't use this for the quantum system, you don't have to worry about how to use that, you just know it relates to matrices.
Because we have a vector, we have a quantum state and when we project onto that vector we get results back, eigenvalues in fact.
So it's to do with the eigenvalues of, related to these matrices.
So our graph state, which is this G, which is this vector, is a joint eigenvector of these three operations.
This is tensor product, so this is a 2 by 2, a 2 by 2, a 2 by 2, so this is an 8 by 8 matrix.
And what we mean is that if this is an eigenvector, this thing times that thing equals that thing, where the eigenvalues 1.
So, because we have a nice system like this, we have these three, we only have one vector, which is a joint eigenvector of this, this and this together.
So we can represent it by a matrix.
But if you notice that matrix looks very much like an adjacency matrix.
If you get rid of that x and just put, instead of z, put 1s, you have an adjacency matrix for a graph.
So we have a graph state.
That's why it's called a graph state.
OK.
So Alice will have one qubit, Bob will have one qubit and Charlie, they met somewhere beforehand, before the game, to share their three qubits and to entangle them in the right way and now they're playing the game.
How do you represent y, if there is a y?
Y is, y is i times xz, so x times z, and then i is the square root of minus 1.
So in this side.
Oh, sorry.
If you have a y somewhere.
If you have a y, for instance, if you have x tensor z tensor z times z x i, then you get x z is minus i y, z x is i y and z i is z minus i times i is 1.
So that equals y, maybe this is answering your question, I don't know.
So if you get the product of these two rows, you get this.
So this is also, so we also have this.
Yeah, because it's an eigenvector.
So it's not represented here because I chose not to, but I could have done.
It's like having omega squared in F4.
Yeah, yeah.
So there's our graph and our G, our unique vector G is this thing at the bottom.
If you try it, if you try those matrices, you'll find that this vector here is precisely the joint eigenvector of those three, therefore any product of them as well.
I've not normalized it.
I should normalize it by 1 over root 8 because it's a quantum state, but in order to get this, but I have done here.
That should go there.
And because, well, yeah, it's also I have this, you have this Boolean function notation, but that's useful.
OK, any questions so far?
This is our state.
So all I've done is Bob and Charlie have chosen their state and what's nice is we relate it to graphs.
We call it an operator code because we have, if you look back here, we have a matrix of three rows, but because if you see we had a product here, any combination of the rows.
Multiplicative combination will also be a valid operator.
So this is really just repeating what this said.
But notice one thing, when we have the three rows multiplied together for this example, we get a minus sign.
That minus sign is very important. That's what makes a quantum game win.
The minus sign comes because remember that we have an I here and that can cause a minus 1 to appear when you multiply things out.
And in this case it does.
Every other case you don't get a minus sign, just this case.
So g is stabilised by those eight operators.
Notice the minus sign.
And if you remember, the game we chose had exactly those seven.
It didn't include II because II means do nothing.
So if the referee sends i to everyone, it just tells Alice, Bob and Charlie don't do anything.
So waste of time.
But this is exactly the instructions that we just proposed for the game.
And now you see why we chose them.
Because if you have a quantum state like this, three cubic quantum state, and they share those instructions, then we'll stabilise the state.
So you can see where it may be going.
So remember our game, we choose Q in that way to reflect the coefficients.
Of those operators.
And just as an aside, if you're interested in F4, our self-dual F4 additive codes, like many people are,
we can replace X with omega and Z with one and identity with zero.
And we have an F4 self-dual additive code.
So it relates to code.
In theory as well, where this is F4, so omega is a generator of F4.
OK.
So when we measure at graph states, we say, well, OK, if the referee gives instructions X to Alice, what does Alice deal with X?
Well, she measures her particular qubit.
Remember Alice is a particular qubit.
I can't remember how they're connected.
Alice, Bob and Charlie.
So if we sent an X to Alice, how is she going to measure her qubit?
I can't remember how they're connected.
Alice, Bob and Charlie.
So if we sent an X to Alice, how is she going to measure her qubit?
Well, what she does mathematically, you don't have to worry about the physics,
is basically say, well, OK, if I'm given X, basically I apply my X measurement to my qubit
and I'll get the eigenvalue one or minus one back.
And I'll fix my qubit into one, one or one minus one,
because these are the eigenvectors of X with eigenvalues one or minus one.
So the eigenvectors of X, remember X is zero, one, one, zero.
So the eigenvectors are one, one and one minus one with eigenvalues one and minus one.
So when Alice measures with X on her qubit, she'll get back one or minus one
and fix her qubit into one, one or one minus one.
Similarly, if Alice measures Z, then the eigenvectors are one, zero to zero one
with eigenvalues one and minus one.
If she measures Y, the eigenvectors are Y plus and Y minus,
which have real numbers but we won't talk about it,
and eigenvalues one and minus one.
So in all cases Alice, Bob and Charlie will measure one or minus one,
which is what we want.
But remember it relates to the eigenvalues.
OK, so let's just summarising it to the bottom.
So now to measure a graph state, if Alice, Bob and Charlie share that graph state,
which is stabilised by these, measuring X, Z, Z.
So if the referee sends X to Alice, Z to Bob and Z to Charlie,
then each of them can get one and minus one from our eigenvalues
and their system collapses to one of these joint eigenstates,
this one of these vectors, because this is the eigenstate of X
and this is the other eigenstate of X.
This is the eigenstate of Z, this is the eigenstate of Z,
and so on, this is the other one.
So this clearly, if there's one and minus one eigenvalues,
then we have four choices, because the total system,
and this is very important, has to collapse to an eigenvalue of one.
So here we have eigenvalue one, eigenvalue one, eigenvalue one,
so one times one times one is one.
Here we have minus one times minus one times one, which is one.
Here we have minus one times one times minus one, which is one,
and here we have one times minus one times minus one, which is one.
So we don't have eight choices, we only have four choices,
because we fix it to one.
So Alice knows, Alice, Bob and Charlie know that whatever they do,
the total eigenvalue is one, and there's the trick of the game,
because when Alice, Bob and Charlie measure, they may get one to minus one's back,
but if Alice measures a minus one and Bob measures a minus one,
then Charlie has to measure a one.
But if Alice measured a one and Bob measured a minus one,
then Charlie has to measure a minus one, even though it may be the same.
So it forces a connection, and that's the trick.
It's not really a trick.
By the way, these four results are pairwise orthogonal,
and all four cases are products of the cubic eigenvalues is one.
So if we measure, we get one of these four events.
This is just repeating what I just said.
And what I did notation, what we did in the paper,
is said one, one, one, minus one, minus one, one, minus one, one, minus one, minus one, minus one, minus one, minus one,
just as their results.
So we have four events that can take place.
Either this event happens when we measure,
or this event happens when we measure,
or this event happens when we measure,
or this event happens when we measure.
But classically, if we don't have a quantum system,
it's not possible that if I measure something, if I pick this up and it says one,
then next time I pick it up, it says minus one.
That's not possible.
It's exclusive, so we can't get that and that if it's just a classical system.
So what we will do, we'll build a big graph where this is a vertex,
and this is another vertex, and put an edge between them,
because they're not both possible.
OK.
So this is just repeated.
It is impossible for both scenarios to be true,
but quantum knit is possible.
So what we will do, we'll make a big graph
whose vertices are all possible events.
Here we have four vertices.
There are more events that can take place.
And put edges between exclusive events.
So there's an edge between X, Z, Z and X bar, Z bar, Z.
OK.
So we have, don't get confused between graphs,
we have our small graph here, which is our quantum,
three qubit quantum state,
but we're going to do measurements on it,
and from that we're going to build a big graph.
And what we'll show is that from that big graph,
we can say some things.
So these are all possible events that can take place.
Notice here the I means do nothing,
so we only have two events.
For the coding theorist people around,
this is a weight three codeword,
so there's four events,
this is a weight two codeword,
so there's two events.
So it's related to the code.
So this particular graph,
remember our small graph had three vertices,
now we've got 22 vertices.
And edges between mutually exclusive events, right?
So an edge between X, Z, Z and X bar, Z bar, Z.
So an edge between these two,
but also we can have edges between,
see this edge is between all four of those, right?
So this is a clique.
There's edges between all four of those,
so that's a clique, to clique there, right?
But then there's also edges between that and that one,
because this is X bar and that's X.
So we have connected cliques.
And that doesn't help.
So I'll show you the next one first, okay?
There's a clique, there's a clique, there's a clique,
there's a clique, there's a clique.
This is two disjoint graphs,
in general they're not disjoint,
this is just a particularly small example.
Actually the codewords here
are actually different from the previous ones,
because this was a different code,
and I realised afterwards,
but the principle's very clear, yeah?
So basically you've got cliques
and then they're sort of connected,
like here we have a Z bar,
and here, let's find another example.
Here we have Z,
and here we have Z bar,
so there'll be an edge there.
And when we make it look pretty,
it looks like the previous slide.
But that's just a particular example.
These examples do not have two disjoint graphs.
Actually that's less helpful than this, though.
So what we will say is, okay,
we know we're going to win,
because we make sure the product that I advise is one,
but how can we show that on this graph?
What property of this graph displays this fact?
Well, one thing I should mention is that
there's this graph operation called local complementation,
which takes one graph to another.
Here, if we do LC,
here we complement the neighbourhood,
so we add an edge here.
But both graphs will generate the same...
So this is if I complement here,
if I do an LC here, I put an edge here.
I get a different graph state.
But both graphs will generate the same big graph
to within relabeling.
So therefore, all members of the LC orbit of the small graphs
will generate the same big graph.
So if you enter graph theory,
then you'll be aware of that.
So the pseudo telepathic game
is a property of the LC orbit of G.
And it can also be seen as a property
of the F4 active code associated with G.
So it's a coded property.
So this is just a reminder.
I've put these slides up before,
but just to give you the reminder.
This is the game we're playing.
The classical version has functions of the instructions.
The quantum version shares particles.
We have a three-particle game, not two-particle.
And we have measurements instead of instructions.
And then there's a probability for quantum winning
and classical winning.
In this particular example of our game,
this will be one and this will be less than one.
So our pseudo telepathic graph will use this big graph
given that we had the small graph like this.
Even though I think this is 0-1-1-2
and I think the one here was 0-1-0-2.
So this is why this is a different graph.
It's equivalent.
And these are instructions
and the product of the three measurement results
times Q will always give 1 in the quantum case.
So what's our strategy?
I said, well, OK, can't I just put 1s and minus 1s here
for the functions and always win?
Well, no, you can't.
If you tried to do that, it would always fail.
The best you can do is find a maximum independent setting, H.
So you can win six of the times, six times,
but the seventh time you'll lose.
So for instance, you could have that assignment for SA,
SB and SC.
And you'll always win.
But if you sent, if the instruction was Z, Y, Y,
you get minus 1 as a result, therefore you'd lose.
So it turns out that the big graph,
if you look at the independent set,
maximum independent set in the big graph,
it tells you how many times you can win
classically without quantum resources.
By the way, if you do it quantumly, you'll always win.
Because the joint eigenvalue is always 1.
Product of the eigenvalue is always 1
and you can therefore always win.
So therefore, the classical probability is upper bounded by 6 over 7.
It doesn't matter what functions you choose,
you can never win with more probabilities than 6 over 7.
So Alice and Bob and Charlie can do what they like.
If they can't talk, they can only win with probability 6 sevenths.
However, if they share this quantum state,
they win with probability 7 over 7, which is 1.
So if you imagine doing this game
and you didn't know they shared a quantum resource,
you'd think they were telepathic.
Hence the game.
And it then demonstrates the advantage of a quantum resource.
You could then imagine what you should do is generalise it.
Well, okay, if you've got a bigger graph on a big network,
what can we use that for?
So there are important properties.
What we're talking about, this big graph associated with this small graph,
the independent set that tells you
the maximum classical winning probability.
What turns out to be the low-vash number of the graph,
which is you take your vertices of your graph
and for every vertex in your graph,
you have a vector and you maximise overall choices of unit vectors.
Again, I've written in this Brockett notation,
that means a vector like this, that means a vector like that.
So you're taking the inner product of vectors.
That's all you're doing there.
And taking the square of it.
A low-vash, you can see in information to your classical anyway
in shalling capacity and things like that.
So a low-vash number, the orthogonal,
you map adjacent vectors together.
They are adjacent.
There's an edge between them if the two vectors are orthogonal.
You try and maximise that.
So it's quite a big thing to do,
but a low-vash number will be related to the quantum success probability.
And we can prove that this low-vash number is
upper bounded by 2 to the n minus 1,
using some decomposition of the quantum state,
which I won't go into, but it's sort of straightforward.
You can show an upper bound for low-vash.
What we will then do is show that the fractional packing number is also 2 to the n minus 1.
And the fractional packing number is an upper bound for low-vash,
so therefore they must both be 2 to the n minus 1.
So the fractional packing number of the graph is that you take a clique in your graph,
you assign numbers to your clique,
so that some of the numbers in the clique are always upper bounded by 1,
and you do this for all cliques in your graph.
And what you want to do is try and make that number as big as possible,
and you basically sum up all those numbers,
make it as big as possible given this bound for all cliques,
and that's a fractional packing number.
So these are very much graphical graph theory parameters.
They're not to do with quantum theory or anything else.
At least they don't seem to be, but apparently they are.
So we have that the number of vertices is n,
so therefore we get that this is true,
so we can show, because if you imagine we have a clique here,
we have connected cliques,
so we can only get this 1, 2, 3, 4, 5, 6, 7.
That's the maximum.
It's upper bounded by 7.
In fact, it turns out that you can get 7.
And because the fractional packing number is an upper bound for Lovash,
which is also lower bounded by 2 to the n minus 1,
therefore must both be 2 to the n minus 1.
So this is what this says here.
It says that this is strictly a lower bound,
sorry, a less than sign because we have three vertex graph.
Two vertex graph, it'll be less than or equal.
So the independence number is less than the Lovash number,
which is equal to the fractional packing number, which is 2tn minus 1.
And that means, for instance, our graph here,
this is 6 and this is 7 because n is 3 because we have three players.
And therefore we win classically with probability 6 over 7,
but quantumly with 7 over 7.
I haven't really argued strongly why this relates to the quantum,
but I think I will refer you to the paper for a stronger argument
because Lovash showed this bound.
We've shown that this must be 2tn minus 1,
this must be lower bounded by 2tn minus 1,
therefore it's 2tn minus 1, which is what this says.
So for these particular special graphs,
it's not always true that the Lovash number is equal to the fractional packing number,
but for these graphs it is true.
And for n greater than 2, the independence number is less,
so we have a gap between the independence number and the Lovash.
And what is interesting is how this then translates into classical success
of your game to quantum success.
So of course we've just taken a 3 vertex graph,
we can generalise it and it's been done to bigger graphs.
I had some table in my papers of bigger graphs where we have a bigger gap,
this is 6, this is 7,
but we can make the gap bigger for stronger graphs, bigger graphs.
And this property explains why we have a nonlocality gain for g
because the independence number is less than the Lovash number.
We have a game, a nonlocality game means we win more likely to win
with the quantum system than the classical system.
And then the property of these two being the same is we can't do better,
we always win.
We win with probability 1, so then it's a pseudo telepathy game.
So what I'm trying to emphasise here is that we have a quantum physics game,
an experiment that relates to networks, but it also relates to graphs.
And because of this construction we can be sure that we have a game
that wins more with quantum than classical.
And I've got 8 minutes and I don't think I'll go into great detail with this
because we haven't got time.
But basically the whole system here is based on the fact that we have a graph
which is stabilised by our matrix.
If you go back to this graph, here we have x, z, z, x, z, i, x, z, i.
So these are our operators, these stabilise our vector, but they also commute.
So you can have x, z, z, tensor, tensor, z, tensor x, tensor i is equal to z, tensor x, tensor i times x, tensor z, tensor z.
They commute.
An example of matrices that don't commute is x, z equals z, x.
Well that's not true, there's a minus one here.
They don't commute, they're anti-commuting.
And the commuting property comes because we have a symmetric matrix, i.e. we have a graph.
So what I did in coding theory before is work out what about if we don't have a symmetric matrix.
Well that's symmetric, that one there.
Well this is just saying what I said up here, I forgot.
And it's symmetric.
What about when it's not symmetric?
Well here's an example of a non-symmetric graph.
You see you've got a z here and an identity here, so it's not symmetric.
So we have an arrowed graph, we have a mixed graph or directed graph.
And you see that the first two rows here and here, they don't, they anti-commute.
So this means physically we don't have a quantum state.
So I did this in classical systems in coding theory and using four out of codes.
And I thought well I don't have any application in the quantum domain.
But we do.
We can embed this non-commuting matrix in a larger commuting matrix.
What do I mean?
We take this three by three, put it in the top left here and border it.
In this case we only need one column.
And I put one row to make it like a graph.
And then we can then turn that into this graph form.
So what we're saying is we have a system like this.
Whereas in fact we've extended it to this graph where this is environment.
So now if you're a physicist what you say is okay this is my laboratory.
I've got Alice Bob and Charlie in my laboratory.
Maybe it's a big laboratory so they can't speak to each other.
And then somehow there's some noise with the environment which we can model by another qubit, a graph state.
And in a sense this graph state is then related to this directed graph or mixed graph.
And we can then play the game with Alice Bob and Charlie but not where they don't know what this is.
And to be continued I thought that probably that was a good place to stop but I was just trying to explain something.
So the Alice and Bob and Charlie receive instructions from the non-commuting operator code like this.
The instructions are this because what we do there are two types of game.
We can either have the game with all four or the game without that row because we say it's just these three.
If it's just those three these are the instructions with one of them giving minus one.
And the point is if I take this example here where we say well we want it commuting so therefore if we have those three we should have one, one, one or minus one, minus one, one as measurements.
But because we don't know what this is because we're not measuring this it's only Alice Bob and Charlie these can be anything.
So if you imagine we just had a system like that we'd have either the result x, z or x, z bar.
We just have a clique of size two in our big graph.
But because of this we don't know what this is.
So this could be anything, could be one, one, one minus one, minus one, one or minus one, one.
So the clique has gone from size two to size four.
So now it has all four possibilities.
So what happens in our big graph is we can do exactly the same game but some of the cliques get bigger.
That won't change the independent set.
But what does it do to Lavash and for actual packing we haven't worked out yet.
So that's why I put to be continued because there's another game we can play with all four.
So what I'm saying is really we can play with these directed graphs as well and do generalisations basically where we don't know the whole system.
And then do we get better games, worse games?
Okay and this is interesting in many contexts.
And I think that's probably a good place to stop.
Thank you.
