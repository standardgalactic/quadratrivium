Welcome to what's the penultimate lecture of this series on understanding electronics.
And in this lecture, we're going to build the most sophisticated circuits we'll work
with in the course. They will combine material from all the way back to the beginning, operational
amplifiers, counters, D to A converters, you name it, we're going to put them all together
because we're going to be working on analog to digital conversion, the other and harder
part of that process of getting from the analog world into digital electronics. And then as
we saw in the previous lecture, back to analog again.
So let me remind you of some examples of where we need to do this, inputting information
into the phone, that is, analog sound coming in, going through various processes, and then
hitting an analog to digital converter. Similarly, when we took music and put it in the online
store or whatever, we took the music and analog sound, we had to convert it to digital. We
did it with an analog to digital converter. Many, many, many other situations use analog
to digital conversion. It's not necessary, but most of our instruments these days are
digital. We have digital fever thermometers. We have digital speedometers in our car. We
step on digital scales. By the way, it doesn't mean they're more accurate or anything. It
means they use digital electronics and digital displays. I have a scale at home that reads
to a tenth of a pound, but it says it's only accurate to two pounds. And I have a thermometer
that reads to a tenth of a degree, but it's only accurate to two degrees. Not, doesn't
make a lot of sense, but we like things digital, and in many cases we have to have them digital.
So here's a digital thermometer, a digital speedometer, a digital scale. We need analog
to digital conversions to make these things work. So let's talk a little bit about analog
to digital conversion, what we want to talk about when we're trying to specify what we
want out of an analog to digital converter and ADC. What do we want? Well, one thing
we want is speed. How much time does it take to look at an analog input voltage? And it's
almost always a voltage. We've converted whatever it is, sound intensity, temperature,
whatever, into a voltage. How much time does it take to convert that analog voltage into
a digital number, a digital binary representation of a number? Equivalently, how many conversions
can we make every second? And a slightly more subtle related concept is, are these times
or rates fixed, or if you put five volts in, does it take a different time to convert it
than if you put 10 volts in? You probably don't want that latter situation. You probably
want to know how long it's going to take when you're going to get the output. Let me give
you one example of the speed of a digital circuit. Here we have the oscilloscope I've
been using throughout this course. And there's a little number up here, actually two numbers,
that are specifications for the scope. And one of them says one ghz, one gigahertz, which
means that this oscilloscope can look at signals that are oscillating about a billion times
a second. The more interesting number is the number underneath. That number says five
gs per s. Now what does that mean? It means five giga samples per second. That means this
oscilloscope can convert five billion analog values applied at its inputs to digital numbers
every second and it stores them in its internal memory and process them and displays them and
does whatever we want. So this is a five giga sample per second oscilloscope. That's fast.
Five billion conversions every second. Now the other question we have about these conversions
is how precise are they? How many digits does the analog to digital converter produce? Does
it produce only four bits of binary, which would be one decimal digit? Does it produce
five decimal digits? What does it do? Well that depends on the application. A CD for
example is a 16-bit medium. Every sound intensity is recorded as one of two to the 16 possible
values. Two to the 16 is about 64,000, 65,000 and so that is a lot of levels of gradation.
That's for a CD. A typical camera has three colors and each color is recorded to eight
bits of precision. What's the intensity of red? What's the intensity of blue? What's
the intensity of green? Eight bits each. So two to the eight is 256, so 256 levels there.
That's a typical camera. 24 bits total for the camera. Here's a digital scale. It's
reading 148.6, so it has a precision of four decimal digits. Three to four digits in this
case, whether that last one goes six or six-eight-ten or just six-seven-eight-nine depends. So we
can specify the speed of an analog to digital converter. We can also specify the precision.
How many gradations of digital numbers does it give us? Now there's a big caveat in trying
to do analog to digital conversion and it's something called the Nyquist criterion. It
says the following. It says if you want to represent an analog signal that is varying
with time, and typically we do or are interested in things that vary, you talk into your phone
and your voice level is varying with time, otherwise you wouldn't be saying anything,
you wouldn't be sending any information. So here I have a picture of a yellow sine curve
that represents some varying voltage on the horizontal axis's time and I'd like to represent
that by digitizing it at periodic intervals because again, digital information is not
continuous. We have the sound intensity or the voltage level now, we have it a little
bit later, we have it a little bit later, we have it a little bit later. And here's
what happens if I don't sample fast enough. So I've shown you a series of white dots
along there and those white dots represent the individual times I'm going to sample.
It's once every time unit. I don't care whether it's a second or a millisecond or whatever.
But the point is if I sample the voltage at each of those times and then I say, okay,
these are my voltages, let me connect them by a nice smooth curve, I get that red curve
which has nothing to do with the yellow curve. It is not the yellow curve at all. And that's
a mistake in sampling, it's called aliasing. And we end up with something that doesn't
look even remotely like the signal we're trying to sample. And the Nyquist criterion says
to get an accurate representation, you've got a sample at least twice the highest frequency
of interest. You've got to pick off at least in the case of a sine wave, but two samples
per cycle. So you'll be sampling at twice the frequency of the sine wave. And if you
go higher, you're better off. For example, a CD samples at 44.1 kilohertz, 44,100 times
a second and 44,100 times a second, the analog to digital converter in something that is
recording information to a CD records one of two to the 16, one of 65,000 roughly possible
levels for the sound wave, digitizes it as a binary number and stores it or does whatever
it wants to do with it. That 44,000 is chosen because the upper limit of your ear is on
the order of 20 kilohertz, 20,000 cycles per second. And so we're digitizing at a bit more
than twice that speed so we can capture accurately the highest audible frequencies. So that's
something to bear in mind with analog to digital conversion. How fast you need your
ADC or analog to digital converter to be, that depends on how rapidly varying is the
signal you're looking at. You've got to have an ADC that converts at least twice as fast
as the signal varies. Now there are many, many, many ways to make ADCs in the stable
of electronic instruments and I'm just going to show you three just to give you a sense
of how it's done. We're going to build one of them as the project and I will demonstrate
one on my board, the same one, but I will talk about two others in some detail. So let's
begin with the easiest. And before I begin with the easiest, I have to introduce a new
device. It's not really a new device. It looks just like an op amp. It's a logic level comparator.
I actually used it in that counting circuit that I built for you before and here it is.
It looks just like a regular op amp except it runs off a 5 volt power supply if you're
using TTL logic with it. And the other end of the power supply is not minus 15, but ground
and as a result its output swings between 0 and 5 and if you run it open loop that is
with no feedback, you get 0 at the output if V plus is less than V minus and 5 volts
or logic level 1 at the output if V plus is greater than V minus and there's some latitude
in those numbers, but they are good enough to determine definitively whether it's a
logic 0 at the output or a logic 1. And we're going to make use of this logic level
comparator in several of the analog to digital converter designs I'm going to show you.
So there's a logic level comparator. So let's talk first about a flash A to D converter.
What the flash A to D converter does is to compare the analog input against a range of
discrete voltages that are built into the converter and I'll show you in a minute how
we make them using techniques from the very first few lectures. A flash A to D converter
is called that because it's very fast. The process of conversion is almost instantaneous
but for the propagation time through a few gates and things. So it's very fast. It doesn't
take time to do some complicated processes. You put in an analog input and bingo you get
a digital output and if there are just a few bits, if you don't need a lot of precision
it's pretty simple. But if you need a lot of precision it gets complicated very fast,
exponentially fast because it requires very complicated decoding circuitry to make it
work. So let's see how a flash A to D converter works. By the way, before I show you the flash
A to D converter which is going to have several comparators in it, the comparator I just showed
you, you could even think of the comparator as the simplest A to D converter. It's a one
bit converter. It just says is the voltage bigger than the voltage at the plus input
of the comparator or is it less? That's all the information it gives you with a one or
zero at its output but that is in principle an analog to digital conversion. Not a very
precise one. So here I'm going to consider a situation where I have a four volt supply,
four volt power supply and I'm going to put four identical resistors between that power
supply and ground. That constitutes a voltage divider. The middle point in that divider
is going to be at two volts. The lower point, the junction between the lower two resistors
is going to be at one volt and the junction between the upper two resistors is going to
be at three volts because they're equal resistances. They've got the same current flowing through
them. They've got the same voltage across them and no matter what those resistors are,
they divide the four volts into four steps and so we have one, two and three volts. Those
are the discrete voltages that are built into this converter. Now I'm going to add three
comparators, the logic level comparator I had before and I'm going to connect their plus
inputs to an unknown analog input voltage, the voltage I want to convert to a digital
quantity and what each comparator is doing is comparing that input voltage against the
voltage it's connected to in that string of resistors. So the lower comparator asks
the question, is the input voltage greater or less than one volt? If it's less than
one volt, it outputs a zero. If it's greater than one volt, it outputs a one. The middle
comparator asks, is the input voltage greater or less than two volts? If it's greater than
two volts, it outputs a one. If it's less than two volts, it outputs a zero and the
upper one asks the same question about three volts. So we have, coming out of these comparators,
the binary digits which tell us whether the input voltage is greater or less than the
threshold voltage for that particular comparator. So in some sense, we already have in these
comparators which I've labeled A, B and C some sort of digital representation of the
analog voltage. The trouble is it's not in nice convenient binary form to work with and
there's where the hard work comes in. So what we have to do is add some kind of logic circuit
that decodes that information. And for this simple three comparator circuit which is going
to give us a two-bit digital output, here's the truth table we have to have. If A, B and
C are all zero, we've got to have Q1 and Q2, the two bits of our digital output both be
zero. If the input voltage is between one volt and two volts, we're going to get comparator
number C, the lower one giving us a one and the other two giving us zeros. And we've got
to develop logic that will make that into the binary number zero one and so on. And
so we go through the possible values. If we are above three volts, all three of them are
giving ones that has to convert into one, one, three volts. Now again, this is not precise
because it's only got two bits. We know that if it's above three, it's somewhere between
three and four. We only know it's above three actually. If it's giving us a binary two,
it's telling us that it's somewhere between two volts and three volts and so on. But this
is a flash A to D converter and it works very fast. And you could imagine building one with
ten bits or whatever, but that decoding logic is going to get extraordinarily complicated,
extraordinarily fast. So flash A to D converters are used either where you've got a lot of money
and you really need speed or where you don't need a lot of precision and can get away with
just a few bits and the relatively easy decoding logic that's involved in that case. So that's
a flash A to D converter. Let's take a look now at a second class of A to D converter.
Let's look at integrating A to D converters. The process of integrating is the process
of adding things up. We talked about integrators when we put capacitors together with operational
amplifiers and in particular, if we applied a steady voltage to an integrator, we got
a voltage at the output of the op amp that rose at a steady rating. And so what integrating
A to D converters do fundamentally is to charge a capacitor at a steady rate. And they may
do it using a known reference voltage or they may do it using an unknown analog voltage.
It doesn't matter, we'll see several examples, but basically if we charge the capacitor at
a steady rate using a known reference voltage and we run a counter while the capacitor is
charging and we have a comparator that says to the counter stop when the capacitor voltage
reaches the analog input, then the time that the counter has been running, counting some
steady clock signal, will be proportional to that analog input voltage. Make the analog
input voltage bigger and it takes more time for the capacitor to charge to that voltage
and for the counter to stop. You'll remember on some of the counters I developed in the
lecture on counters, I was able to build what was called an enable input that you had to
set to one or maybe zero, it depends in order for the counter to count at all. We're going
to exploit that in a circuit like this. So let's take a look at a diagram of a simple
integrating A to D converter. On the left I've got an integrator, it's a circuit with
a resistor at the input and a capacitor in the feedback that we talked about before when
we put capacitors with op-amps. I'm putting a negative reference voltage, some fixed voltage
which is negative at the input to that resistor and when I open this switch across the capacitor
I'll keep the switch initially closed. As soon as I open it, the capacitor voltage starts
to rise, it rises because this is a negative reference voltage and we're in an inverting
configuration. And what happens is that voltage rises at a steady rate, I have the output
of that comparator connected to the enable of the counter and I have the analog input
coming into the plus input of the comparator and let's now figure out what happens. So
initially the counter is counting, it's counting a fixed rate clock, the counter is enabled
to count and on we go. On the graph I show you the voltage at the output of the integrator
is the curve that is rising steadily, the unknown analog input voltage that I'm trying
to convert to a digital signal is shown as a straight horizontal line because it isn't
changing and at the time the capacitor voltage gets above the voltage, the unknown voltage,
the comparator now has a bigger voltage at its minus input and its output goes to zero
and that disables the counter and I've shown the logic level of the enable on the counter
up above. If we went to a higher voltage it would take more time before the capacitor
voltage reached the analog voltage, the counter would be enabled for longer and we would end
up with a bigger count. And so that is the simple integrating A to D converter, it doesn't
really work very well and the reason it doesn't is because it's very sensitive to the values
of the capacitor, the resistor and the clock rate. And so if you actually have integrating
A to D converters and you often do they may well be built into the digital volt meters
I've been using in this course because a very nice technique uses something like integration
but it's called dual slope and I'm not going to spend a lot of time on this but I'm simply
going to say this device uses the same basic technique that is integrating but it integrates
first the unknown voltage until the counter is completely full and then it switches and
integrates a reference voltage and the time it takes to do that depends on what that initial
input voltage was and the count that comes out at the end of that is therefore proportional
to the input voltage. And the beautiful thing about this circuit if you look at it closely
is it doesn't matter to a first approximation what the values of R and C and the clock rate
are if they change slightly the way this circuit works by integrating that reference voltage
by integrating the input voltage until the counter is full at its maximum state and then
integrating the negative reference voltage to go the other way until you get to zero
you'll find cancels out the effects of small variations in the resistor and the capacitor
and the clock rate and so this is called a dual slope because we integrate one way and
then we integrate the other way and dual slope integrators are widely used where you need
precision they do take time to make the conversion because they've got to run the counter through
full counts and the more precision you want the more counters you have to have strung together
to make a high precision counter. So that's a better version of the integrating A to D
converter and now I'm going to get to my favorite A to D converter I will say right at the
outset this is not a good one it's not one you would actually use although I'll show you
at the end a variant of it that does work but the reason I like this one so much and
the reason I use it at the culmination of my electronics courses that I teach at Middlebury
College is because it really ties together everything we've done and so this is a feedback
A to D converter because we're going to put in the feedback loop of an op amp basically
D to A converter whoa we're going to make an analog to digital converter by putting
a D to A converter in the feedback loop so let's look at what we've got here we see the
analog input coming into the minus input of a comparator or to the plus input of a comparator
and nothing else is connected yet we see in this case a four bit counter with its digital
outputs a clock coming in and this is an up down counter I mentioned when I talked about
counters in the counter lecture that you could make counters that went either up or down
and if you did the project for that lecture you actually built an up down counter and
by changing a particular bit you could count either up or down this particular up down
counter that I'm talking about goes up if it's a one and down if it's a zero the counters
I'm actually using are the opposite but that doesn't matter at all now we haven't put this
thing together yet we need feedback so first thing we're going to do is take the output
of the comparator it's a logic level comparator it's either a zero or a one logically it's
either zero volts or five volts if it's a one the counter counts up if it's a zero
the counter counts down then we're going to take a D to A converter and put it in the
feedback loop of the op amp and we're going to connect part of the feedback circuitry
is the digital output of that counter going in to the inputs the digital inputs of the
D to A converter the binary inputs and the analog output of that D to A converter comes
out and goes to the minus input of the comparator and here we have the complete feedback A to
D converter wow now before you get lost in this circuit let's think about sort of what
it looks like it's a circuit that has digital feedback we've built circuits or seen circuits
that have other kinds of feedback for example this circuit should remind you a lot of the
very simple voltage follower we developed in which we took the output of an op amp and
connected it directly electronic feedback to the minus input of the op amp and the output
voltage followed the input voltage and if you remember the op amp rules they kept the
two voltages at the plus and minus essentially the same well this more complicated circuit
I have for my A to D converter does essentially that it has an op amp that is a comparator
it has a feedback loop which is a digital feedback loop but if we believe in the magic
of negative feedback without going into the details but we will go into the details we
would guess that maybe this circuit tries to keep the minus input that is the output
of the D to A converter at the same voltage as the unknown voltage we're bringing in and
for that to happen the input to the D to A converter needs to be the binary equivalent
of that analog input voltage so we ought to have on the output of those of that counter
a binary representation of the analog input voltage wow now before we go on and look at
detail at how that circuit works let me show you something that this should also remind
you of so let's take a break and set up a little circuit over here okay way back when
I was introducing this idea of negative feedback I showed you this crazy makeshift servo voltmeter
I built remember how it worked it had an op amp or comparator the output of the op amp
drove the motor and it drove it one way if the output was plus 15 volts and the other
way if it was minus 15 volts and the feedback consisted of a mechanical linkage between that
motor and a potentiometer that dialed off some voltage and sent that voltage in to one of
the inputs of the op amp the unknown went into the other input of the op amp and what
happened ultimately without going into every tiny bit of detail is the circuit strove to
keep the two inputs of the op amp the same and in the process it ran the motor the right
way to make that happen so if I for instance turn up the voltage the needle goes for a
while it's driven in the clockwise direction until the potentiometer turns enough to tap
off a voltage that gets a little bit above the voltage at the unknown input the voltage
I'm supplying here and then the motor goes the other way but as soon as it goes the other
way it's too low and it goes back and so this thing is bobbling back and forth all the time
about what's basically the correct voltage something a needle position that corresponds
to the voltage I'm inputting to the circuit I want you to keep that meter that voltmeter
in mind and the idea that it bobbles back and forth throughout the rest of this lecture
I would love to have been able to do that while I showed you the circuit I'm actually
going to build the analog to digital converter but it turns out the switching on and off
of that motor kicks up some electrical noise that messes up my digital circuits and that's
a good lesson in when you build digital circuits things can go wrong and things like spurious
pulses associated with things like motors turning on and off can send extra pulses into
the counter and the counter gets all screwed up so I couldn't do that so I'm showing you
this now and I'm now going to turn it off and disconnect it from my circuitry and we'll
talk more about the feedback A to D converter and then I'll demonstrate it.
Okay so keeping that crazy servo voltmeter in mind with it's bobbling back and forth
it's comparing two voltages and running the motor one way if one is higher and the other
way if the other is higher let's look in detail at the workings of our feedback A to D converter.
So let's focus on the left hand end there where the minus input of the op amp is connected
to the output of the DAC and the plus input is connected to the voltage the unknown voltage
the input voltage that we want to convert to a digital number.
Well if V minus is less than V in the minus input of the op amp the comparator is less
than the plus input then the plus input rules and the comparator outputs five volts or a
logic one well this particular counter counts up on a logic one so V minus is less than
V plus we count up.
Well as we count up up goes the binary number at the output of the counter that binary number
is fed back into the D to A converter and so the analog output goes up also and eventually
it goes up enough that V minus is greater than V in and that takes the comparator and
says oh oh the minus input is now bigger that drives the comparator output to zero that
disabled doesn't disable the counter that switches the counters up down to down and
the counter counts down and so the counter counts up until its output digital number
when converted back to analog is just above the input that you want to convert to a digital
number and as soon as it gets there it counts down and as soon as it counts down it's a
little too low so it counts up and so it is doing digitally exactly what that crazy needle
was doing when it bobbled back and forth the motor went this way then it went that way
then it went this way then it went that way and I tell you that to prepare you for what
you're going to see when you see this device in operation in just a moment.
But let me end with this visual description of this circuit by pointing out that what's
going to happen is that V minus and V plus are going to be essentially equal.
They aren't going to be instantaneously equal like they were in an electronic feedback
circuit and they aren't instantaneously equal in my crazy voltmeter because it's always
a little too high or a little too low so I put a little caveat on there that they're
going to be equal within one bit.
That's the closest we can do.
Okay so let's now take a look at this circuit as it actually operates.
So what do I have here?
Stuff that I've had on the board for a long time but let me show you what it is in particular.
So here I have the 74190 counter, it's an up-down decade counter.
Here I have that same quad comparator with digital logic output levels.
Here I have the D to A converter that we used in the last lecture, the D to A converter
and the D to A converter inputs are coming from the four bits of output of that counter.
Now here's the output of the D to A converter.
The output voltage goes to one input of the comparator.
The other input of the comparator comes from this potentiometer which I'm simply using
as a variable voltage source.
So I'm going to turn this circuit on and I just chose for convenience to use the built-in
display that this board has.
I could have easily hooked it up to my own display that I'd already wired.
And so let's see what happens as we run this thing.
Well right now when I turn it on, the voltage which is reading off this voltmeter, the input
voltage is toggling between zero and one.
That's the bobbling back and forth, just like this thing did.
We get too high, we get too low, we get too high, we get too low, we get too high.
The counter counts up, the counter counts down.
What if I bring the voltage up a little bit?
Well bring it up a while and for a little while the counter just counts up until it
starts bobbling between two other voltages, in this case four and five, and that tells
me we're somewhere between four and five volts.
I've got to run the clock slow enough by the way that you can see those numbers.
I'll slow it down a little bit just to make it a little bit easier to see that bobbling.
If I turn the clock up to a high, you won't see anything because the numbers will be just
going back and forth all the time.
But there's four and five bouncing back and forth.
I'll turn up the voltage a little bit more and there's eight and nine bobbling back and
forth so it's somewhere between eight and nine.
Turn it down a little bit and I've got, what have I got?
Four and six, like reading it upside down, having a little trouble reading it, but there
it is, four and is that five, yes.
And I can crank it up and I've got eight and nine and six and seven is in there somewhere
if I'm careful.
Okay, so there is a rather crude analog to digital converter using the magic of negative
feedback.
It is exactly analogous to this servo voltmeter and it's almost exactly analogous to the electronic
feedback simple voltage follower except that it doesn't, that one doesn't bobble back
and forth because it's so fast.
Now I'm not going to do it, but one way to avoid that digit bobble would be to add an
extra bit which I don't bother to display, an even less significant bit than the lowest
significant bit that's being displayed and then most of the time that bit would change
without actually affecting the output of the four bits of the later counter, actually wired
a second counter in there but things are a little dicey and I'm not going to try to
bother to hook it in.
So that would be the way to get rid of that digit bobble.
Now having said that, this is not the ideal A to D converter.
It's great for teaching though because it brings all these concepts we worked with in
feedback, D to A converters, counters, comparators, op amps, the whole gamut.
One of its problems is the amount of time it takes to do the conversion depends on the
voltage that you put in.
It has to count up to that voltage before it starts bobbling up and down.
So a better A to D converter, an improved feedback A to D converter is what's called
a successive approximations converter and these are actually in use.
It works very similarly except what it has is some control logic that instead of just
counting up and down keeps adding an extra bit, first the least significant of the most
and it keeps adding extra bits and it keeps trying which bit is going to make it too big.
So it starts by setting the eighth bit to one, for example, it's too big so it resets
to zero.
Otherwise the fourth bit, it's too small, it keeps it and so on and it has a fixed conversion
time and it actually works quite well and the logic behind that successive approximations
register is not terribly difficult to construct.
Okay, well let me wrap up.
You've seen a number of types of analog to digital converters.
The crude ones I've showed you don't work great but there are improvements on them.
There are many others.
For example, the whole Delta Sigma process I showed you for DAX can also be made to work
in reverse for ADCs and you may have a Delta Sigma ADC in your phone, for example.
Well if you want to do the project, this is the most sophisticated project for the course,
you can move on and simulate a 3-bit version of the feedback ADC described in this lecture.
You'll need to use a 3-bit DAC but you built one if you built the DAC in the previous lecture.
You'll need to use a 3-bit counter and you'll have one if you built one in the counter lecture.
You'll need to add a comparator.
If you're using circuit lab, you'll need to add that comparator under digital gates.
It's got a digital comparator that has logic level outputs.
You'll need to plot the DAC output on one graph and the Q123 on another.
I tend to add 6 and 12 volts to Q2 and 4, I'm sorry that's Q12 and 4 on another graph.
I tend to add the 6 and 12 volts so you can see the graphs displaced in circuit lab display.
You can verify the operation for several input voltages and if you want a real challenge,
change the input to AC very slow and make the clock a lot faster and watch what happens
and you'll see the operation of the circuit as the digital signal tries to follow the
analog signal.
Now unfortunately at the time I'm recording this series, due circuits does not yet work
for combining analog and digital which is what's needed in this circuit.
They probably will soon and they may well by the time you're doing this and if you use
due circuits you will be able to add their decoder and display and you'll actually have
a nice 7-segment display of the voltage.
So there's the most sophisticated circuit you'll have built in this project in this
course.
Well here we are at the very last project, the most complicated and the most sophisticated.
I'd like you to simulate a 3-bit version of the feedback A to D converter that I described
in lecture 23.
You can use your DAC and 3-bit counter combination if you built that in lecture 22.
You'll need to add the comparator which in circuit lab is under digital gates.
You can't use the off-amps here, you have to use the comparator with the digital logic
output levels.
By the way you can really only do this project in circuit lab at the point I'm recording
this because we really do have to combine analog and digital and due circuits at the
point of this recording doesn't have that capability so you have to do this in circuit
lab.
Maybe that's changed by the time you're doing this project.
I'd like you to plot the DAC output on one graph and the Q outputs of the counter, Q1,
Q2 and Q4 on another.
It's helpful to add 6 and 12 volts to Q2 and Q4 to displace their graphs, again just
for clarity in the display.
Verify the operation for several DC input voltages and then if you want a real challenge
change the input to AC, make sure you offset it so it swings positive only because this
thing can only convert positive voltages and you can do that by adjusting the parameters
of your AC signal source.
Adjust the clock frequency and I'll let you think about what value you want the clock
frequency to be compared with the AC input frequency and verify that the digital output
follows the AC input.
Okay let's get right to it.
Here is the circuit in circuit lab.
It's the circuit we saw in the previous lecture, the 3-bit synchronous counter coupled with
the DAC and the only thing I've added is that digital feedback loop, the comparator with
an analog input to one of its inputs to the plus input in this case and the DAC output
going to the minus input and I have connected a DC voltage of 3.4 volts to the analog input
and let's see what happens if I simulate this.
Now you might say I have to do a DC simulation because it's measuring a DC voltage but no,
this counter has to be counting up and down, this still has to be an AC simulation so I'm
going to run a time domain simulation and we'll see what we get.
And there's the result and you see what happens.
Initially the counter and this is actually the output of the DAC, the counter starts
counting up and the DAC is reproducing the upward count and when we reach 4 volts we're
a little bit too high and so that tells the counter now switch counting direction.
This is why we needed an up-down counter and count down so the counter counts down I guess
to 3 volts but 3 volts is too low because remember the input voltage is 3.4 volts in
this case and so it up-down, up-down, up-down, up-down.
What's the output doing?
Well the output starts at 0, the binary, the decimal, I'm sorry the binary output, the
digital output, the conversion to digital starts at 0, runs up to 1, there's a 2, 0,
1, 0, there's a 3 and then it gets to 4, 1, 0, 0.
4 is too big so it goes back down to the next thing down which is 0, 1, 1 which is 3.
It's too small so it goes up to 4, 1, 0, 0 and it keeps bobbling back and forth and
the output of the DAC bobbles back and forth around the input voltage.
You can build the same circuit and you can experiment with different DC input voltages
and you will find it bobbling back and forth, back and forth.
If you want to do a real challenge add an extra hole counter or maybe just one bit for
a flip-flop and you can look at the changes in the bits connected to the counter but not
that earlier one you may be able to reduce this digit bobble.
Well that's the easy part, let's do the real challenge next.
Let's go to the same circuit but now let's use an AC input so here I have an AC input
here and if you look in detail at that I've offset it so it's swinging between 0 and some
voltage and that's going to be the V and that's the only change from the previous version
I've now connected a time varying voltage and now I asked you the question what should
the clock frequency be?
Well if I want to sample this time varying voltage and convert it to digital values and
I want to do that fairly frequently over the slowly varying cycle I'd better have the clock
frequency a lot faster.
So my clock frequency is actually 50 hertz and this input sine wave is going to go at
1 hertz and let's see what happens when we run the simulation.
So here we go, we're going for 2 seconds with a time step of .01 seconds, we'll run the
simulation and there we have it.
We could do the same analysis down on the bottom here that we did with the DC input
and we could see what the output was and we could read it off at each time.
So for example at this moment here the output is 1, 1, 1 that's the highest it can be with
our 3-bit counter and indeed we have the highest level in the sine wave.
Here's the lowest level and at that low level we're at 0, 0 and either 0 or 1 we're bobbling
back and forth between 0 and 1 and intermediate levels we're at intermediate values and we're
always bobbling back and forth but here's the beauty of it.
I turn the thing on and it takes a few cycles for the counter to catch up with the input
voltage after that the counter begins bobbling its digital output right around the analog
input and as the analog input changes because the clock is running at 50 hertz you can see
we're doing a fairly good job of tracking that sine wave.
Turn the clock rate up by a factor of 10 and you do an even better job of following it.
So here's a really sophisticated circuit, a complete analog to digital converter that
takes an input voltage which in this case is varying with time and converts it to an
output voltage.
The digital volt meters I used in this course did that, the oscilloscope I used in this
course did that, your cell phone does that when it analyzes the time-varying intensity
of the sound you're talking about and sends it into a digital signal.
This is a really sophisticated circuit and if you've made this one work you're a pretty
good electrical engineer.
