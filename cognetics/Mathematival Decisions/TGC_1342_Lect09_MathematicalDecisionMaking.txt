There's a lot of money to be made in the flowering plant business.
If you know what you're doing, dealing with living plants causes its own share of risk,
of course.
They only grow in certain places, and in some of those places only at certain times of the
year.
Leave them untended, and they may die.
You can't get them to grow faster by working overtime, and if you cut them, they're perishable.
You can't just stick them in a warehouse until someone wants to buy them.
The Gen2Wit company knows all about the challenges of raising and selling lilies.
Buying bulbs in Holland and growing lilies in Brazil, they raise and sell about 420,000
pots and 220,000 bunches of lilies per year, making the Brazil's largest grower of Oriental
and Asian lilies.
No, they're not the same thing.
In a country that really loves its flowers, Brazilian consumers spend about $1.1 billion
a year on them.
But with an operation so large, Gen2Wit faces a serious planting problem.
Their rich plot of land is relatively small, only about 5 acres.
But on this, they have to plant different patches of bulbs.
Bulbs come in many different kinds, and different bulbs need different kinds of greenhouses,
different kinds of soil, different spacing, different amounts of time to grow.
And cut flowers are handled differently than potted flowers.
Gen2Wit needs to get the right kind of flowers in the right quantities, processed in the
right ways, to market at the right times, all with the obvious restriction that they
can't use the same patch of earth to grow two different patches of lilies at the same
time.
So how should they set their production levels and schedule their planting and harvesting
if they want to maximize their profit?
This is a wonderful example of a problem where planting extends over time.
It's also a scheduling problem.
In this case, the job is to figure out what batches of bulbs should be planted and where
and when they should be planted.
Obviously, the situation Gen2Wit faces at any given point in time depends on its earlier
decisions.
This is typical of a whole class of problems called multi-period planting problems.
In multi-period planting problems, you generally need to make, essentially, the same kind of
decisions repeated over and over over time.
What do I plant today and where and what do I harvest and sell?
You don't have to be in lily businesses to care about multi-period planting.
Think of any firm that deals with production and inventory.
It has a certain production capacity over time, perhaps somewhat supplemented by some possibilities
of overtime, and it can produce units for the market.
But it's possible that the firm may be able to produce more units than the market wants
and so the extra units go into inventory for later sale.
But storing units costs money too, of course.
If nothing else, it ties up your capital.
So how can you decide the best balance between production and inventory costs?
Or continue, consider staff issues.
Your situation could be as simple as needing a certain number of people to be working during
each of a collection of time windows or it could be much more complicated.
You have a number of people who work for you, maybe with differing skill sets and need to
assemble a schedule so that the teams of people working at the same time cover all of the
requisite skills.
Like diocese of West Texas had a problem like this, scheduling clergy in light of the language
needs of the various churches.
And believe it or not, even they use linear programming on the problem to handle it.
Or how about personal financial planning?
Given a number of different financial instruments and an anticipated schedule of inflow and
outflow of cash, how can you plan an investment strategy that leaves you in the best position
for retirement?
In today's lecture, we're going to look at how we can approach problems like these with
linear programming.
One thing that a lot of them will have in common is a reliance on conservation constraints.
You remember we talked about these in the last lecture, as constraints that say that
if you count the same thing in two different ways, you have to get the same answer in both
counts.
For our network models, this often took us to mean total in equals total out.
And this perspective will be useful today too.
Another way to think about a conservation constraint though is as a definition of an auxiliary
variable.
To get a handle on what this means, let's think about production and inventory.
We have a business where we make stuff each month.
There's a demand for our product each month too, and we'll sell whatever we have on hand
to satisfy that much of the demand as we can.
If we have more stuff than they want, what we don't sell goes into inventory.
Now there might be more involved, of course.
Sometimes we're contractually required to meet demand.
Sometimes we pay a penalty if we can't.
And we may be making multiple products with the same equipment.
And so on.
But let's think about the simple transaction that occurs in any given months in terms of
total in equals total out.
I start with my leftover inventory from last month.
I take the stuff that I make this month, and I'll add it to the pile.
There.
That's my total in.
Where does it go?
Well, some of it gets sold to meet demand.
And whatever's left, I stack up, and I put an inventory for next month.
So old inventory plus current production equals current sales plus new inventory.
But if I subtract my current sales from both sides, I get old inventory plus current sales
plus print production minus current sales equals new inventory, which says exactly the
same thing, but can be looked at as an equation that tells you how to compute new inventory
from the other three quantities.
If you like, of these four quantities in this equation, only three of them are independent.
If you tell me the values of any three of them, I can tell you the value of the fourth.
So I don't really need all four variables.
We see that the fourth variable is a dependent variable or an auxiliary variable.
It's the one that you might choose to use, but you don't really need it in the sense
that its value is completely determined by the value of the other variables.
You can make up these unnecessary variables anytime you want to, but the caveat is that
every one of them has to appear in an equality constraint that essentially defines it, like
new inventory was defined in our example of a minute ago.
The production and inventory kind of problem is part of what Jan DeWitt has to worry about.
In fact, they have two phases of it for the purchasing department, making really turns
into buying, and so they have to make sure that their bulb inventory satisfies the demand
for the bulbs required by their planting operation.
Then of course, there's the plant business itself, making sure you grow enough plants
of each type to meet whatever contractual agreements that you've committed yourself
to for the wholesaler, but not so many that you have a lot of excess inventory.
I don't know how well Jan DeWitt could store potted plants, but I think that maintaining
an inventory of cut flowers, at least, would be problematic.
Of course, Jan DeWitt had another kind of multi-period concern too, a scheduling problem.
For them, it was setting up a planting and harvesting schedule that didn't dedicate the
same plot of land to different batches at the same time.
In other scheduling problems, the situation might be exactly reversed, making sure you
have enough staff to cover your needs at different times.
This kind of problem isn't usually considered a multi-period problem in spite of the fact
that it evolves over time.
Most people would class it as a covering problem, making sure you have enough coverage over
each region in your domain of your problem.
The easiest way to see how to formulate a problem like this is often with a timeline.
Let me give you an example.
Suppose you run a 24-hour emergency room, and we've decided we need a certain number
of nurses on duty during each 4-hour period through the day, like this.
Let's suppose each nurse works an 8-hour shift and starts at either midnight, 4am, 8am, noon,
4pm, or 8pm.
Our goal is to make sure that we have sufficient staffing at all times of day, but not to pay
more than we have to, to do so.
We could add all kinds of bells and whistles to this problem, like people being paid more
for working less desirable shifts, or nurses getting lunch breaks, and so on, but let's
keep this simple.
In that case, spending as little money as possible on staffing means minimizing the number of
nurses used.
So my goal is to minimize the number of nurses used.
My constraints.
Well, six quota constraints.
Every 4-hour interval has to have at least as many nurses on duty as my timeline requires.
Okay.
What are my decision variables?
Well, I have to decide how many nurses work in each possible shift, how many start at
midnight, 4am, 8am, and so on.
So let's make the variables for that.
I'll call the shift that starts at midnight, shift 1, the one that starts at 4am, shift
2, and so on.
Remember, each shift is 8 hours long.
So a shift 6 nurse comes on duty at 8pm, and works until 4am on the next day.
I'll let x of i be the number of nurses working shift i, like this.
So there are x1 nurses working in shift 1, which runs from midnight to 8am, and so on.
You can see that shift 6 wraps around from one end of the timeline to the other, since
it starts at 8pm today, and ends in the wee hours of tomorrow at 4am.
Okay.
So what's my objective?
The total number of nurses hired.
That means that the objective is just the sum of the six variables, x1 plus x2 plus
x3 plus x4 plus x5 plus x6.
The coefficients of all the variables are 1, which in terms of our question game from
the last lecture just says hire one more nurse for any shift, and the total number of nurses
hired goes up by 1.
And of course the constant term is 0, since if you set all your variables to 0, you haven't
hired any nurses at all.
Okay.
How about the constraints?
Well the first constraint talks about the first four hour interval, and it says number
of nurses working during the 12am to 4am interval is less than or equal to, I'm sorry greater
than or equal to, number of nurses needed for that interval, which is a straightforward
quota constraint.
The right side is the number of nurses that we need from midnight to 4am, and we're told
that this is just 5 from our timeline.
How about the left hand side, the number of nurses on duty from midnight to 4am?
Well, if we increase a single variable by 1, like x1, that means that we're hiring one
more nurse for that shift.
And if you look at the picture, you can see that one more nurse working shift 1 will affect
the number of nurses working between midnight and 4am, because the shift 1 runs from midnight
all the way to 8am.
So in particular, the shift 1 nurses are on duty during the midnight to 4am interval.
On the other hand, the shift 2 nurses don't start until 4am, so increasing x2 by 1 doesn't
help us at all in terms of staffing the midnight to 4am interval.
That means that x2, the number of nurses working shift 2, doesn't appear on the left hand side
of this constraint.
Well, a quick look at the timeline will show you that only two groups of nurses are on
duty during the midnight to 4am window, shift 1 and shift 6.
Midnight to 4am is the first four hour shift of shift 1, and it's the last four hours of
shift 6.
So the midnight to 4am constraint is x1 plus x6 greater than or equal to 5.
And once you see this, all the other constraints are very much the same.
They each say, add the number of nurses on the two shifts that do include this four hour
interval.
That total has to be enough to cover the demand for that four hour interval.
So here's the whole formulation.
To sum it up, minimize the total number of nurses hired, but require that the nurses
working in any four hour window is at least what we need for that window.
Make sense?
By the way, you might wonder why I said greater than or equal to in these constraints.
Why not just say equal to?
Why use more nurses than you need?
Well, we're not going to use more nurses than we need.
That's what the objective is all about.
But that doesn't mean that for some four hour window, we might not have it overstaffed.
Let's imagine changing our staffing requirements for the moment.
Imagine that, for example, we needed only one nurse in the first four hour window, four
nurses in the second one, and only one nurse again in the third four hour window.
We can certainly have only one nurse on duty doing the first and third windows, but those
nurses are the only people that could possibly be on duty during the second window, since
each nurse works eight hours to successive windows.
So if we have to have four nurses in interval two, then we have to have more nurses than
we need, either in interval one or interval three or both.
And our program allows for this possibility.
All right, we've seen a couple of programs now, the train shipping one from last time
and the nurse scheduling one from this time, where a lot of the coefficients were just
one.
I'll be giving you a very false impression if I let you think this was usually the case.
So let's look at one more multi-period problem, a financial one, where you can see a little
different use of a timeline and develop a more interesting program.
So imagine this, you've received a half a million dollars, an inheritance from a rich
relative, and you want to invest it so at the end of four years, you've increased its
value to as high an amount as you can.
Being conservative, you're only going to put money into very safe investments where the
return is essentially guaranteed.
To keep it simple, let's suppose that you've decided to limit yourself to four investment
options.
Here are three of them.
At the end of each year, what have you paid?
What's this table telling us?
Well, we've got investments A, B, and C. For each $100 you put in investment A, you get
$2 a year from now, another $2 at the end of year two, another two at the end of year
three, and at the end of year four the investment matures and you're paid back your $100 as
well as $10 more.
You've made a total of $16 spread out over four years.
Investment B is less complicated.
It's only available right now, but at the end of year two, it pays $105 for each $100
that you invested in it, your original investment plus five bucks.
Investment C is only available at the end of year two, but a $100 investment in it will
pay you $53 at the end of year three and $53 more at the end of year four.
The final investment option is the money market, which is available every year and always pays
a fixed 2% interest per year.
At the end of the year, the money comes out, but you can do what you want with it.
These interest rates aren't great, but remember that you've decided to stick with safe investments.
One more thing about this problem.
You want to take a vacation in year four, so you want to withdraw $10,000 from the investments
at the end of year three for that purpose.
So how should you allocate your money?
A problem like this looks complicated, but you already know everything you need to set
it up.
By the way, this kind of problem sometimes turned on its head when people want to settle
up a future debt stream by making one lump sum payment now like a divorce settlement settlement.
It lets you figure out how to minimize the current cash needed to generate the payments
over time, assuming various investment options are going to be available.
Again, the problem is easier if we look at a timeline, but this one will look a little
different from the last one.
Take a look.
At the top, we've just got the timeline, but the arrows show for each investment when
the money goes in and when the money comes out.
A gives money for all four years, for example, while each money market investment at the
bottom is pays off after only one year.
I'll add some numbers to this picture showing how much money comes out of each point for
each $1 invested.
I'll also show the original cash available for the investment and indicate the withdrawal
at the end of year three from the vacation.
$50,000 in on the left, $500,000, I'm sorry, in on the left, and $10,000 coming out at
the end of year three, with all the other arrows showing you the returns from $1 of
the investment over time.
So investment C, for example, has you investing at the end of year two and gives you $0.53
on the dollar both at the end of year three and at the end of year four.
The timeline was actually pretty easy to draw, and once you have it, the formulation of this
program is a piece of cake.
Let's follow our usual procedure.
First, what's the goal?
Easy.
Invest cash on hand at the end of year four.
Constraints.
What rules do we have to obey?
Well, we have a limited resource constraint on our original money.
We can't invest more than a half a million dollars at the beginning of year one.
On the other hand, it glances at the program shows that it's silly to leave any money uninvested
in year one.
It'd be better off in the money market.
So we have to invest $500,000 at the beginning of year one.
We also need to have $10,000 cash available at the end of year three.
That's a minimum performance constraint.
We have to meet that quota.
What else?
Well, if you remember the examples from last time with networks and our discussion today
of conservation constraints, you may have a good idea.
At the end of each year and the beginning of the next, some funds become available and
they need to be reinvested since even the money market's better than just stuffing the
cash in your mattress.
So at each year break, the total cash coming into that year has to be the total cash going
out of it.
And really?
That's it?
Okay.
How about decision variables?
What do we have to decide?
What do we get to decide?
Or if you like, what does something like our final cash on hand depend on?
Well, it depends on the investments that we choose to make.
Since variables are always number of something, let's sharpen that.
The number of dollars that we put into an investment opportunity.
Looking at our timeline, there are seven of these, A, B, C, and the four different years
of money market funds.
Okay.
We've flushed out the model.
Now let's do the math.
I'll let A be the number of dollars that I invest in investment A, B be the number of
dollars invested in B, and so on.
My objective is to maximize my cash on hand at the end of the four years.
What's that look like mathematically?
Actually, a lot of people get this wrong.
They include too much.
Remember the question we're supposed to ask?
Suppose this one variable only goes up by one.
How much does the thing underneath increase?
Here the thing underneath is the quantity of interest, which is how much cash we have
at the end of year four.
Look at the timeline again.
You can see that if I put one more dollar in investment A and do nothing else, I do
indeed affect how much cash I have in year four, and investment A dumps $1.10 into the
end of year four for each $1.00 invested now.
Yes, yes, it also drops money in other years, but that money is going to be reinvested.
The only direct impact on final cash from investment A is that buck 10 return per buck
invested.
And in the same sense, B doesn't directly contribute to the final cash at all.
If the only variable I changed was B, there'd be more money at the end of year two, but
it wouldn't go anywhere.
That money from B will show up at the end as a reinvestment, saying it simply.
My final cash is just the money associated with all the arrows that dump out at the end
of year four.
So my final cash is maximize $1.1 A plus $0.53 C plus $1.02 M4 and that is it.
If it feels to some of you like I pulled a fast one, imagine that there was an investment
that paid no interest.
If I put a dollar in now, I'd have a dollar at the end of year one, a dollar at the end
of year two, a dollar at the end of year three, and a dollar at the end of year four.
That doesn't mean that I now have four or five dollars.
It's just $1.00 that I looked at at different points in time.
The only one that really counts through my final cash is the last one, the one that dumps
into the end of year four.
And all of the constraints run on the same reasoning.
At any year's break, the total money in has to equal the total money out.
So at the start of year one, total money in, which is just the half a million dollars,
has to equal the total money out.
Where can this money go?
To three different places.
I can put it in A, I can put it in B, or I can put it in the first year money market.
So 500,000 equals A plus B plus M1.
Easy, huh?
When you see that first equation, that equals sign, it lets you know that you actually
have an auxiliary variable, and this is true.
If I told you how much of the half a million I put in A and B, you'd know how much was
left, and that all goes in M1.
Okay, how about the end of year one beginning of year two?
What's this constraint look like?
It's this, 0.02A plus 1.02M1 equals M2.
Take a second to see why this makes sense.
The left-hand side records all of the arrows dumping into the end of year one.
Each dollar in A gives 0.02 dollars of cash at the end of year one, just two cents.
Each dollar in M1 gives you the dollar back plus two cents more.
So the left-hand side tells us how much cash shows up at the end of year one, and that's
equal to the cash going out of year one.
Where can it go?
There's only one arrow that starts at the end of year one, M2.
So the cash that we got from A and M1 at the end of year one is the same as the money that
we invest in the money market for year two, okay?
And once you see this, you have it all.
We keep playing the same game.
Look at the timeline and remember total in equals total out, and you get this for the
end of year two.
Money coming in from A, money coming in from B, finishing off, and money coming in from
money market two, finishing off.
And where can it go?
The two investments available at the end of year two, beginning of year three, C and
M3.
So let's move on to the end of year three.
This is slightly different because of the withdrawal of $10,000 for the well-deserved
vacation, but that doesn't cause us any troubles.
The constraint looks like this.
It still just says total in equals total out.
Money is still dribbling in from A, which won't be done for another year.
C is making a healthy contribution, and money market three is finishing up, giving back
each dollar invested in it plus two cents per dollar interest.
This money is going out, and it only includes one possible investment, M4, and the $10,000
that you need for the vacation.
And those are all of our conservation constraints.
And of course, we have non-negativity constraints again, as we usually do.
You can't invest a negative amount in anything.
This was actually a pretty sophisticated problem, but I hope you see that once you start to
understand how linear programs are put together, you can model the problem with almost ridiculous
ease.
Wait, am I really done?
I said before that I had a limited resource constraint, that I can't spend too much.
I also said that I had to have at least $10,000 cash available at the end of year three.
That was a quota constraint.
What happened to them?
Well, you can certainly include them if you want.
But believe it or not, we've already covered those bases.
For example, the first constraint actually says you have to invest exactly $500,000.
500,000 equals A plus B plus M1.
So we don't need a second constraint saying that we can't invest more than $500,000.
And how about the requirement of at least $10,000 cash on hand at the end of year three?
Well, the end of year three constraint was 0.02A plus 0.53C plus 1.02M3 equals M4 plus
10,000.
Where the left-hand side is the money coming in, and the right-hand side was the money
going out.
If the money coming in were less than 10,000, then to make the equation work, M4 over on
the right would have to be negative.
But our non-negativity constraints say that none of our variables can be negative.
So our conservation constraints actually are all that we need.
This program has a pile of auxiliary variables, four of them in fact, one for each equality
constraint in our program.
Another way of saying this is that if you knew the values of A, B, and C, you'd know
everything.
Because whatever you don't put into one of these funds gets dumped into the money market.
We might not have needed the money market variables.
We never need auxiliary variables.
But they can make formulation a lot easier to create and interpret.
As they did here, we cannot sell them like roses, or lilies.
Speaking of which, let's get back to Jan DeWitt.
How did things go for Jan DeWitt Company and their operations?
Well, let's compare the performance in 1999 to the performance in 2000.
1999 was before the implementation of the linear program solution, and 2000 was right
after it.
Revenue, up 26% to about 1.6 million.
About sales, up 14.8%.
Bunch sales, up 29.3%.
And of course, the formulation could be used year after year just by changing the parameters
like demand.
With confidence in the new procedures, Jan DeWitt decided in 2001 to depart from its
previous market limitations and take on its main competitor in the market for Oriental
cut lilies.
Of course, the higher revenues don't mean much if your costs are out of control.
How did Jan DeWitt fare on costs?
Costs dropped from 64% of sales in 1999 to 62% of sales in 2000.
And with the expectation of getting them to only 54% in 2001, total sales minus variable
cost increased 32% in a single year from 1999 to 2000.
Not bad, especially considering that the Brazilian flower market had considerable excess supply
in 2000.
And the new system let Jan DeWitt better anticipate its upcoming bulb needs, allowing them to
sign longer-term contracts with suppliers and lock in better prices.
Quality.
Hmm.
Well, the percentage of first quality potted plants stayed the same in both years.
An impressive 93%.
But cut lilies jumped from 11% best quality in 1999 to 61% best quality in 2000.
Bulb quality improved too.
And pre-planting bulb losses were cut to about a third of their 1999 rates.
The linear program did more than determine how to schedule the planting of the lilies
that Jan DeWitt had already decided upon.
It also considered what mix of products would be most productive given the demands of the
market.
That is, in addition to where and when to plant each of the batches of bulbs, it also
had variables for how many of each bulb type should be planted.
Only six of the top 10 varieties in 2000 had been on the top 10 list in 1999.
The model found both what to do and how to do it.
It was a big problem, with about 420,000 decision variables and about 120,000 constraints.
But in spite of this size, the model could be summarized on one sheet of paper.
There were 25 different families of constraints and 15 different families of variables.
So while the program was mechanically huge, conceptually, it's quite reasonable.
And Jan DeWitt's success shows that computationally it was both possible and well worth doing.
They didn't guild the lily.
They turned the lily into gold.
I hope I've been able to convince you of the usefulness of linear programming, both
that it can be applied to problems of practical importance and that it can often help find
answers that are far superior to those obtained by human trial and error.
But maybe you've noticed that our discussion so far has had one big gap.
Namely, how do you solve the darn things?
In these last two lectures, we've seen how practical problems given in English can be
reformulated into a mathematical model, a linear program.
Hopefully you're starting to feel comfortable with that.
But once you have the formulation, once you have, as it were, translated the original
problem into the language of mathematics, then how do you go about finding the best solution
to the problem?
Before 1947, no one really had a very good answer to that.
But in that year, George Danzig, the guy with the bouillon cube diet, remember?
George Danzig came up with the simplex method, a fairly straightforward approach that would
find the optimal solution to any linear program that had an optimal solution.
It's essentially his algorithm that's implemented in many computer environments that can solve
linear programs, including spreadsheet programs like Excel or Calc.
We're going to fill this gap in our discussion of linear programs, the solution part, because
I'm going to show you how to enter any reasonably sized linear program into a spreadsheet and
quickly and easily find its optimal solution.
But before we get to this general solution procedure, we're going to take a little detour
into an alternative, easier to visualize way of solving linear programs, solving them by
essentially drawing the appropriate picture.
There are some significant limitations to this graphical approach, but the detour is
worth making, since one picture really can be worth a thousand words.
Most of us process images much better than numbers and equations, and this pictorial approach
is going to let us get a more concrete feel for some of the key characteristics of linear
programs and their solutions.
And surprisingly, the key to solving linear programs is going to be linked to a practical
survival skill.
Where should you go when the floodwaters rise?
