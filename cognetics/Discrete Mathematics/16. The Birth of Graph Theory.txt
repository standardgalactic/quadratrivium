Music
We now begin our last major component of this course, graph theory.
Although the first theorem of graph theory goes back to 1736, it's a very modern subject.
Its first textbook appeared in 1958 and research journals in graph theory are under 40 years old.
We usually think of a graph by its picture. Here is a typical graph.
Now, the formal definition of a graph is it's a finite vertex set V and an edge set E containing size 2 subsets of V,
which is very hard to digest, but I have to give it out because it's the official definition.
So, for example, the graph you're looking at, your computer, if it were staring at the graph,
would see eight vertices labeled with the numbers 1 through 8, so that's the vertex set,
and it would see seven edges, and the edges would be the set 1, 4, 1, 5, 2, 3, 2, 5, 3, 5, 4, 5, and 6, 7.
Those would be the edges represented. See, it's not that bad a definition.
By our definition, a graph does not contain any loops or multiple edges between two vertices.
So, here's a non-example of a graph. Here, for instance, is a loop that begins and ends at 2.
That's not allowed, and here between vertices 3 and 4, I have three edges, so those would be multiple edges.
That's not allowed in our graph either. If we want to allow multiple edges to exist between some vertices,
then we call it a multigraph instead of a graph. We'll use multigraphs occasionally in this course.
For example, an airline may have several flights that go between the same pair of cities.
For such a situation, we may prefer to use a multigraph.
As a matter of fact, the formal definition of multigraph is the same as the definition for a graph,
but instead of using a subset of edges, we're using a multi-subset of edges.
If an edge exists between x and y, then we say that the vertices x and y are adjacent.
So, for example, in our graph G, just looking at the picture, the vertices 3 and 5 are adjacent.
The number of vertices adjacent to a vertex v is called the degree of v, and it's denoted by d of v.
So, for example, the degree of vertex 1 is 2 because it's adjacent to vertices 4 and 5.
The degree of 5 is 4, and the degree of vertex 8 sitting all by itself is 0.
In this lecture, we will encounter the oldest theorem in graph theory, which is over 270 years old.
Yet, since most of the research on the subject of graph theory has only been conducted in the last several decades,
the definitions often have a friendly, modern sound to them.
For instance, in this lecture, we'll encounter definitions like walks, paths, trails, and cycles.
In later lectures, we'll encounter such things as tournaments, trees, forests, leaves, and proper colorings.
So, how would you define a walk on a graph?
So, again, here's our graph. What would a walk be?
We'll define a walk on a graph to be a sequence of adjacent vertices where repetition is allowed.
But I just think of it as bopping from one point to another with no restrictions given whatsoever.
So, we can start at 1, and then go to 5, and then go to 2, and then go to 3, and then to 5, then to 3 again, then to 5 again.
That's a walk. It's a walk of length 6 because I took 6 steps along the way. Anything goes.
That's a walk from 1 to 5.
On the other hand, a path is a walk where no vertices are allowed to be repeated.
For example, here, the path that goes from 1 to 5 to 2 to 3, this is a path from vertex 1 to vertex 3.
Here's an observation. If a walk exists from x to y, then a path must exist from x to y.
Right? For instance, in this graph here, here was a walk from vertex 1 to vertex 4.
It went from 1 to 5 to 2 to 3 to 5 to 4, but any walk that includes repeated vertices can still get to its destination without using repeated vertices.
You just cut out that cycle as soon as you enter it. So, here would be a shorter walk from 1 to 4.
A graph is connected if, for all vertices, x and y, there is a path that gets us from x to y.
Right? It's the intuitive definition. If you looked at this graph here in the picture, and I asked, is this graph connected?
Looking at it, you'd say yes. Whereas the next graph, the graph G here, is that connected? No, because there is no path from, say, vertex 1 to vertex 8.
And though that graph is not connected, but it has, here I'm inserting a new definition, three different connected components.
That would be the three connected components in the graph. And yes, that single point, consisting of vertex 8, is considered to be connected.
It's its own connected component.
Next we'll define a trail, which is a walk with no repeated edges.
So a path is a walk with no repeated vertices. A trail is a walk with no repeated edges.
So, for example, the trail that goes from 1 to 5, 5 to 2, 2 to 3, 3 to 5 again, and 5 to 4, though that wouldn't be a path, because the vertex 5 was repeated, it is a trail because none of the edges were repeated.
A trail is closed if it begins and ends at the same vertex. So if I took that same trail, 1 to 5 to 2 to 3 to 5 to 4, and I insert one more step that goes from 4 to 1, that would be a closed trail.
Here's another example of a closed trail in this graph G that goes from 5 to 2 to 3 to 5. That would be a special kind of closed trail, which we call a cycle.
So a cycle looks like a polygon or it can be straightened out to look like a polygon. Here's the official definition.
A cycle of length K is a closed trail that goes v0 to v1 up until vk, and since it's a closed trail, vk has to be the same as v0.
With the property that until you took that last step, you had a path that is v0, v1 up through vk minus 1 is a path.
So here are some examples of cycles. In fact, these are graphs that are themselves cycle graphs. So here's what we might call C4, looks like a square, C5, which looks like a pentagon, or even this star graph is also a cycle.
It doesn't look like a polygon, but it could be straightened out so that we would have a polygon.
Here's a question, new question for you. Can you draw this graph without lifting your pen off the paper and you're not allowed to retrace any of the edges?
This puzzle you might have seen as a child. They give you this picture and say draw this graph without lifting your pencil off the paper.
And can you do it? Maybe I shouldn't spoil the fun for you, but the answer is yes, you can draw this graph if you're careful.
Starting at vertex 3, you can go from 3 to 6, 6 to 5, 5 to 2, 2 to 6, and then to 4, to 5, to 1, to 2, to 3, and then to 4.
We call a graph like this drawable. So here's the official definition. A graph G is drawable if it's connected and G contains a trail that uses every edge exactly once.
So for example, is this graph drawable? Same graph without the little roof on top of it.
You can try all you'd like, but the answer is no. This graph is not drawable. If you wanted to draw every edge in the graph, you would have to retrace an edge somehow.
But how do we prove it?
So here's the key observation to all proofs about drawable graphs. If G is drawable as a trail from X to Y, then that graph G has to be connected and every vertex, except maybe you're starting in endpoints, X and Y, must have even degree.
I'll say that again. In a drawable graph, if you can draw it as a trail from X to Y, everything has to have even degree, except maybe for the vertices X and Y.
Y is that. Well, let's look at a vertex that's not X or Y. Then every time the trail enters V with an edge, then it must exit V using a different edge.
Since every time we enter a vertex, we have to leave it with a different edge. That proves that there must be an even number of edges that are attached to V.
In other words, the degree of V must be even. Consequently, if my graph has any hope of being drawable, then it has to have at most two vertices of odd degree.
And since the graph in our picture has what, the degree of two is three, the degree of three is three, the degree of four is three, and the degree of five is three, since I have four vertices, the degree of six is four. That's fine.
But I've got four vertices of odd degree. And our last observation said, in order to be drawable, you must have at most two vertices of odd degree. So the above graph is not drawable.
Now let's take a look at this graph. This was the graph we saw earlier. If we look at the degrees of the vertices here, we say that the degree of one is two, the degree of two is four, the degree of three is three, the degree of four is three, the degree of five is four, and the degree of six is four.
So here we have two vertices of odd degree, vertices three and four. So is it drawable? Well, we knew it was drawable from before, but now what we know is that any trail that draws G would have to have endpoints three and four, because we know everything other than the endpoints must have even degree.
So if you had trouble figuring out how to draw that graph before, it's because you were starting from the wrong point.
Can the graph that we just saw be drawn in such a way that it begins and ends at the same vertex?
Well, no, because if it begins and ends at the same vertex, that would mean in particular it might have to begin and end at three, or begin and end at four, or begin and end anywhere else. That would require that every vertex have even degree.
So if you want to draw your graph as a closed trail, then every vertex has to have even degree. Let's take a look at, if we modify our graph by inserting a new vertex seven and connecting vertices three and four, now every vertex has even degree.
Every vertex has even degree, including three, including four, including this new vertex seven, and can we draw the graph as a closed trail?
Sure, we could start at three and do the same thing we did before and end at four, and then we take our two new edges, we go from four to seven and seven to three, and we've drawn our graph this time as a closed trail.
Or we could modify our graph by just adding an edge that goes from three to four. We would no longer have a graph anymore, technically we would have a multi-graph, but nevertheless we would be able to draw it as a closed trail.
Again, it would be drawable and begin and end where it started. These kinds of graphs are called Eulerian.
The official definition is that a graph or multi-graph G is Eulerian if it's connected and G contains a closed trail that uses every edge.
So every Eulerian graph is drawable, but not every drawable graph is Eulerian because to be Eulerian, not only do you have to be drawable, you have to be drawable in such a way that you end at the same place that you started.
So for example, the first drawable graph that we saw, though that's drawable, it's not Eulerian because I can't begin and end at the same point, nor is this other graph.
So here's an important observation about Eulerian graphs. If a graph is Eulerian, you can start and end at any vertex.
There's no special starting and ending point of an Eulerian graph. It's like a continuous piece of rope.
So for instance, to take a trivial Eulerian graph, this little square, this cycle, you could draw this as A, B, C, D, A, or you could start at B and go B, C, D, A, B, or C, D, A, B, C, and so on.
So there would be, there's no place that has to be a starting point, any place can be a starting point in an Eulerian graph.
These graphs, by the way, are called Eulerian because Euler, whom we've met before, invented graph theory in 1736 to solve the following problem.
This is known as the Bridges of Königsberg problem. In the Prussian town of Königsberg, now the Russian town of Kaliningrad just north of Poland, the Pregel river flows through the town, which included an island and seven bridges, as illustrated.
The question that they were interested in was, is it possible to walk around the city, crossing each bridge exactly once, and if possible, return to their starting point?
Euler invented the concepts of graph theory to solve this problem. By representing each vertex as a region and each bridge as an edge, we get the following multigraph.
And you can look at this multigraph, and since this multigraph clearly has four vertices of odd degree, right, the degree of A is five, the degree of B is three, the degree of C is three, and the degree of D is three, then it has four vertices of odd degree.
This graph is not drawable, and it's certainly, if it's not drawable, it's not Eulerian. Hence, there is no way to tour the city crossing each bridge once.
So far, we've shown that if G is an Eulerian graph or multigraph, then G must be connected and every vertex must have even degree.
But what about the converse? What is the converse? Is it true that if the graph is connected and every vertex has even degree, then must the graph be Eulerian?
Must you then be able to draw the graph without retracing any edges and end up where you started?
You might be surprised to know that the answer is yes. If a graph is connected and every vertex has even degree, then G is Eulerian.
We'll prove this theorem using strong induction. What are we inducting on here? We're going to induct on the number of edges.
We begin by looking at a graph that's connected and every vertex has even degree where the number of edges is zero. How many graphs are like that?
Just one. A pretty boring graph looks like a single point. We've proved the theorem beyond a shadow of a doubt when the number of edges is zero.
Now we state our strong induction hypothesis. Suppose the theorem is true for all graphs with fewer than E edges and now let G be a graph with E edges and we have to show that it is Eulerian.
We know the graph is connected. That means it doesn't have any vertices of degree zero. It doesn't have any of those isolated points because it wouldn't be connected then.
Since every vertex has degree at least two, then I claim that G must have a cycle. Why is that?
Well, if every vertex has degree at least two, then you start at a vertex, you walk to a new vertex and if you've only been there, walked into it once, there has to be a place to go because it has degree two.
Eventually you will have, because there are only a finite number of vertices in our graph, then you have to eventually go back to a vertex that you were already at and once you've done that, you will have created a cycle.
Okay, so a graph with where every vertex has even degree at least two must have a cycle. Let's call such a cycle C.
If C uses every edge of G, then congratulations, you've just drawn your graph G as one big cycle and G would therefore be Eulerian and we'd be done.
Otherwise, if you're not so lucky, what do you do? Let's create the graph G minus C. Let's remove the cycle from the graph and look at what we get.
So for instance, take a look at this fishy graph here in this picture. It's a connected graph, every vertex has even degree, every vertex has degree two or four and in it we must have a cycle.
There's a cycle C. Let's remove the cycle C from our graph. Now when I'm removing that cycle, I'm leaving the vertices in place, I'm just getting rid of the edges. That gives me this new graph G minus C.
Now what happens when you remove a cycle from a graph? What happens to the degrees of the vertices? Well, every vertex in that cycle is going to lose two of its edges.
So every vertex in the cycle, the degree goes down by two. Every vertex that's not in the cycle, the degree doesn't change at all.
So every vertex has its degree reduced by zero or two, reduced by an even number. So since the parity doesn't change, every vertex of G minus C still has even degree.
Now if this graph G minus C is connected, like here in our picture, then by the induction hypothesis, G minus C, since it has fewer edges than G did, has to be Eulerian.
Hence we can draw the graph G as a closed tour. The original graph G is a closed tour by drawing C and then drawing G minus C.
If G minus C is not connected, then by the induction hypothesis, each of its connected components, which have fewer edges than the original graph did, is itself Eulerian.
And since G is connected, each of these components of G minus C had to make contact with C somewhere. If they didn't, the original graph G wouldn't have been connected.
So here we go around the cycle C and anytime we're at a new connected component, we tour that component, we draw that component before continuing on C, as shown in our illustration.
As an exercise, you might want to try the problem. If G is a connected graph or multigraph with exactly two vertices of odd degree, say vertices X and Y, then G can be drawn as a trail from X to Y.
Hint, insert an edge from X to Y and apply the previous theorem.
Now we present an application of Eulerian graphs that doesn't sound like a problem from graph theory. Here are the binary words of length two.
0 0 0 1 1 1 and 1 0. Notice that the sequence 0 0 1 1 includes every one of these code words exactly once as a consecutive pair.
That is, that 0 0 1 1, it starts off with 0 0 and then if I slide over, we have 0 1, then if I slide over, we have 1 1 and then if I slide over and wrap around, we have 1 0.
So we efficiently created all the code words in that sequence.
Here are the binary words of length three. We know there are eight of them and all eight of those are contained in the sequence 0 0 0 1 0 1 1.
Check it out for yourself, allowing yourself to wrap around. This includes every one of these code words exactly once as a consecutive triple, allowing wrap around.
This allows us to efficiently list all eight code words in one sequence. Such a sequence is called a de Bruyne sequence.
Whether I'm using two code words, four code words, eight, sixteen, thirty-two, that's a de Bruyne sequence.
The question is, can a de Bruyne sequence be created for all of the two to the n binary words of length n?
The answer is yes, and it's based on an Eulerian graph where every vertex represents a word of length n minus one and every word has two edges entering it and two edges leaving it like the one in the picture here.
This is, let me explain this graph here. This is a directed graph where every vertex has two edges leaving it and two edges entering it.
And I've got two vertices that have a loop that does double duty.
We can use this graph here to create a de Bruyne sequence for all sixteen code words of length four.
Notice I have eight vertices here. Each one represents a different triple.
From the vertex a, b, c, we have an edge that's labeled zero that goes to the word b, c, zero and an edge labeled one that goes to the word b, c, one.
Okay, so it's like moving our slider over one space, a, b, c is going to look like, after I move my slider, b, c, zero or b, c, one.
So take a look at this graph. We see that every vertex has even in degree and even out degree.
And therefore, by the same reasoning, this graph is Eulerian.
And so when you draw the Eulerian circuit, that gives you the de Bruyne sequence.
Eulerian graphs, by the way, are sometimes confused with Hamiltonian graphs, which are entirely different objects.
A graph is Hamiltonian if it contains a cycle that goes through every vertex.
Okay, whereas an Eulerian graph, you could draw the whole graph and use up every edge.
A Hamiltonian graph doesn't have to use every edge, it just has to go through every vertex.
So for example, this graph is not Eulerian, we've seen that before, it has four vertices of odd degree,
but it is Hamiltonian since it contains this cycle.
We can visit every vertex exactly once and get back to where we started.
While there is a simple test to see if a graph is Eulerian, just check that it's connected
and that the degree of each vertex is even, there's no simple test to see if a graph is Hamiltonian.
We'll have more to say about this situation when we talk about algorithms and complexity in lecture 23.
In our next lecture, we combine graph theory with combinatorics using another fundamental tool of mathematics,
matrices, where we'll answer the question, how do I walk to thee?
Let me count the ways.
