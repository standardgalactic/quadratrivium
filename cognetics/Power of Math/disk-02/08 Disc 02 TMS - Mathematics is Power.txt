So these bytes, which are eight bits, there's 256 possible bytes.
These are called the ASCII symbols. It's another code book, if you will.
It's all letters, smalls and capitals, ten digits, a whole bunch of other symbols.
It's letters that have accents, it's letters that have cedillas and tildas.
The ASCII symbols cover most different letter symbols, digits, and some old computer commands.
And so now we have an even bigger code book.
If we want to say the word the in English and represent it in bytes, the is three letters.
So that's three ASCII symbols.
And so it's going to be a total of 24 zeros and one strung together.
It's possible to write a book in binary.
In fact, anytime you read something on the computer, in some sense, it's a book that's been written in binary.
But there's an even neater example that I wanted to talk about,
which we could have all possible books in binary in one number that goes on forever.
So if we think of that number as an irrational number, and instead of 0110111 moving to the left,
if we think of it as a point and then those same numbers moving to the right instead,
we will have a single irrational number that contains all possible books in any language today currently written.
How do we construct it?
We're going to use ASCII symbols.
I'm going to just say bytes from now on.
And here's how it goes.
I'm going to give you a list of instructions of how to put down bytes.
So first run through all possible bytes.
There's 256 of them.
It would start with eight zeros.
It would end with eight ones.
And in between would be scattered zeros and ones.
So if you will, that's all single letter books.
Now, since we're going to go on running forever to the right,
we're going to now go through all two byte combinations.
So there's 256 bytes, two byte combinations.
It's going to be 256 times 256, which is a big number around 65,000 or so.
But if we write down starting with all zeros followed by all zeros,
and all the different possibilities and end up with eight ones followed by eight more ones,
we've run through 65,000 possible different ways of putting down the bytes.
We have a huge strand of zeros and ones, and we have all possible two letter things.
Now we do that again, and we do all possible three letter combinations.
In other words, putting three bytes together.
This will be a very long sequence of zeros and ones, and we can keep going.
Any book, any book written in English is a finite number of letters.
The longest book is maybe a few thousand pages.
Or if you want to talk about things like encyclopedia, it's multi-volume.
But sooner or later, it could be thought of as just a whole bunch of bytes stuck together.
And in our list, as we take larger and larger combinations of bytes,
that will appear somewhere in the list.
So this singular rational number, which contains all possible combinations of bytes,
contains all possible books of any length.
Now, there's going to be a lot of junk in there, too, that would make no sense at all.
But like islands in the ocean, or tiny gems floating in the ocean,
there will be the entire encyclopedia Britannica.
There'll be your favorite novel somewhere amidst the collection of junk.
And things that are nearby to it, and the single irrational number of zeros and ones going on forever and ever,
will be books that are similar to yours, but only slightly different.
So there's an interesting fact about this single irrational number that contains all possible books.
This number is computable, and by that I mean a computer could print it out.
Now, it would take way too much paper, and it wouldn't be very interesting,
because it would be all zeros and ones.
But I've given you a description of what you would tell the computer to do that would print it out.
One can ask, what kinds of numbers can one come up with instructions for?
The number one third, very easy, just print out 3333 forever.
The number pi, as we talked about a bit the first lecture, much more complicated.
You need a formula that keeps producing numbers for you,
and it gets harder and harder and harder to find the next digit.
