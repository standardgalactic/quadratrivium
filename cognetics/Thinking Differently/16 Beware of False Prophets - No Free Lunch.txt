Hi, welcome back. In the previous few lectures, we've talked about the importance of diverse
ideas and tools, and we've seen how groups of people who have more tools are likely to
perform better at solving problems. And we even saw how tools and ideas can recombine
to drive growth and innovation. So in this lecture, we're going to return to talking
about these tools, specifically heuristics, but we're going to talk about their ubiquity
and their contingency. Now, among nonfiction books, two of the best-selling categories
include business books and self-help books. Now, the latter category includes things like
diet books and fitness books, you know, like the 10 easy steps to follow so that your children
achieve great success, or your dog has perfect manners, or maybe you get perfect abs, right?
Okay, now the books in both of these categories are chock full of heuristics. Now, in these
cases, the heuristics are procedures that you follow to try to improve performance or
to find better solutions to problems. So for example, a business book might say the following.
When you're negotiating, think in terms of your interest and not in terms of position.
So that's a heuristic you use when you're negotiating. Or here's another one. When innovating,
try the opposite. Remember we had that heuristic do the opposite? It'll say try the opposite.
Instead of reaching out to your customers, get them to reach out to you. Or instead of
having a complaints link, have a compliments link. So again, it's do the opposite. These
are heuristics. Now, a book on improving your health might encourage you to eat grapefruit
in the morning, or to take naps in the afternoon, or even to increase your speed of walking
by 10%. Each one of these later examples might seem more like activities than heuristics.
But think about it for a second. If you think about improving your health as a problem,
then these can be thought of techniques for attaining better solutions to that problem.
Now, in this course, I've talked about how we can think of people as having toolboxes
of skills, and how it can be really helpful to think of those skills being arranged on
things like ladders or trees. Now, some of the things that I've called skills, such as
being able to do calculus, can also be thought of as heuristics. Now, what I want to do here
is I want to try and draw a somewhat bright line of possible between two types of heuristics,
what I'm going to call formal heuristics. So these are sort of like the mathematical,
algorithmic things, like calculus, like regression, and informal heuristics, like eating grapefruit,
walking a little bit faster. Now, it's not going to be perfectly bright, right? It's
not going to be easy to draw a perfect bright line between those two things. But I'm going
to come close, and I'm going to do so by showing you some examples. Now, some of the first
heuristics we learn relate to mathematics in specific multiplication. In addition, it's
pretty straightforward. Now, let's suppose we want to multiply two numbers together.
How do we do it? What we do is we're taught a fairly straightforward heuristic, and it
goes something like this. We basically say, okay, we've got 18 times 16, so first I'm
going to multiply the 8 by the 6, and I'll get 48. Then I'm going to multiply the 8 by
the 10, but I put a 0 here, and I get 80. And then I multiply the 10 times the 16, and
I get 160. And I can add all of this up, and I get 8. I get another 8. I carry the 1, and
I get 288. So that's how I would typically solve this sort of problem. And you notice
there's a lot of work there. Now, this is sort of the old school way of doing it. So
when you're like in third grade, and they're teaching you how to multiply, this is how
they teach you how to do it. It's pretty old school. Well, we can do better than that.
We can develop more sophisticated heuristics to solve a problem like this. So what I want
to do is I want to try and channel my inner art, Benjamin. Now, if you've never seen art,
he's sometimes called the math magician, and he does some awesome courses for the great
courses, and he figures out much, much better heuristics for solving this sort of problem.
Let me show you two of those sort of heuristics. So the first one is going to say, well, look,
we've got this thing we're trying to solve that's 16 times 18. Well, maybe what I should
do is think of that as 16 times 16 plus 16 times 2. Now, why would I do this? I do this
because 16 times 16 is something that probably I know. I remember my squares up to 20, and
I know 16 times 16 is just 256. So if I know my squares, and I look at something like 16
times 18, I can say, well, you know what? That's just 16 times 16, which is 256. And
then I've got a 16 times 2 left over. Now, 16 times 2, that's easy. That's just 32. And
so I can add these things up and get 288. Well, what's funny is 16 times 18, I probably
couldn't do in my head. But if I think of it this way, I can, because I can say 16 times
16, that's 256. I add 32, 288. I get to the answer much more quickly. But you know what?
We can even do better. So Art would say, wait, that's good, but watch this one. So now I
can think of 16 times 18. Well, that has the general form of x minus 1 times x plus 1,
where here x is equal to 17. So we can think of this as 17 minus 1, right, times 17 plus
1. Now, why would we want to do that? The reason we want to do that is if we remember
from algebra, x plus 1 times x minus 1 is just equal to x squared minus 1. So that means
17 minus 1 times 17 plus 1 is just going to equal 17 squared minus 1. And again, if we
remember our squares, 17 squared is 289. And so we just have 289 minus 1, which is going
to be 288. So this was sort of amazing. Someone could say, what's 16 times 18? And you could
say, oh, you know what? That's 17 minus 1 times 17 plus 1. So that's 289 minus 1. Really
easy. So let's take another one, 21 times 19. Well, that seems pretty hard. You've got
to multiply everything out. But you realize, look, that's just 20 times 20 minus 1, so
it's 399. Or let's go really extreme, 999 times 1001. Well, that would be really hard
to multiply out. You can say, you know what? That's just a million minus 1. So all three
of these heuristics that I've just used, adding it all out, taking 16 times 16 plus
2 times 16, or x minus 1 times x plus 1, those are formal heuristics, they're algorithms,
rules that we can follow that arrive at new solutions for mathematical problems. Now,
formal heuristics can be much more complicated than these, right? These were really simple.
So for example, linear regression is a heuristic. In this case, it's a heuristic for identifying
patterns and data and relationships between variables. Now, regression won't verify whether
the relationship is causal. It's just going to tell us the magnitude of the relationship
and its significance. So by that I mean it's going to tell us sort of the likelihood we've
got the right direction or the right sign on some sort of relationship. So for example,
suppose I wanted to determine whether people take into account fuel efficiency when they
buy a car. So what I could do is apply the regression model heuristic, gather a whole
bunch of data on car sales, and then run a regression and see if, in fact, it's true.
Are people more likely to buy cars that get better mileage, and to see if cars with better
mileage sell at a higher price? And that would tell me, in fact, is it the case, at least
empirically, that people pay more money or prefer cars with better mileage? Now, this
approach isn't going to tell us for sure because the data could be misleading or it could
be correlated in some funky way, but it's going to be informative. It's going to help
us figure things out. So regression is a formal heuristic, and by that I mean it has a mathematical
representation. There's a formula that's used to come up with the answer, and it's really,
it's not something we can do in our head, right, at least not easily. Now mathematicians
and physicists and computer scientists use a whole bunch of different heuristics to solve
problems. In fact, when I went to graduate school in mathematics, one of the things we
learned was a lot of different ways to try and solve hard mathematical problems. Well,
now you can go to a website. It's called Tricky, and this is a site that's maintained by professional
mathematicians, and it's got a huge list of general problem solving heuristics. There's
a whole bunch of them. Now, what does this include? Well, one of them is this, don't
start from scratch. So the idea here is you build from something you already know. Think
back to our example of multiplying 16 by 18. What did we already know? We already knew
16 times 16. That was 256. So we used something we already knew to get to the answer. Another
one is hunt for analogies. This is also a good heuristic. Look for problems that you
already know how to solve. So oftentimes mathematicians, suppose you're trying to fit something that's
nonlinear while they might first fit a linear function and then build from there. Another
heuristic, be a metamathematician. What does that mean? Well, this one's pretty subtle.
It means what you do is you think about what the successful proof would look like. So try
and carve out what the proof would have to look like and then fill in the gaps. And then
another one, this is kind of funny. This is on the mathematician's website. It's one we've
already talked about. It's prove the opposite again. It's do the opposite. So it says, look,
see if the opposite holds. And then if what you're trying to prove can't hold, maybe you
learn something else about the problem. So you often learn what you want when you try
to prove the opposite of what you want. And then one final one, which I thought was interesting,
work on clusters of problems. So it says, if you work on a collection of similar problems,
what you're going to do is you're going to develop techniques, heuristics, they're going
to help you solve the problem you first worked on. So by working on clusters, you're going
to build up a set of tools that helps you solve the problems you want. I mentioned these
mathematical heuristics because they're sort of an interesting mix of formal and informal.
Prove the opposite is actually fairly formal. Work on clusters is informal. I mean, what
is a cluster? That's not fully specified. So when you think about informal heuristics,
these are things we often do in our head. And the rules that are, you know, are a little
bit more vague. So most of the sort of rules and guidelines we used to get around in the
world are informal heuristics. Now, there's a professor, Geert Gigerrenzer, who's a German
academic who wrote a book called Simple Heuristics That Make Us Smart. Now, Gigerrenzer argues,
and I think quite persuasively, that people accumulate collections of heuristics over
their lives. It's what we've been calling toolboxes. And that we abandon those that
don't work. And we sort of figure out which ones do work and do those more often. And
eventually, we're armed with a bunch of simple rules that work pretty darn well. He sometimes
actually does call this the adaptive toolbox. Now, the accuracy of a heuristic, its usefulness,
need not be correlated in any way with how sophisticated it is. So think of the stock
market, right, in the housing bubbles that collapsed. In each case, people who have made
sophisticated arguments about why the bubble isn't really a bubble. But in each case, a
simple heuristic, right, markets can't consistently go up by X percent a year unless the economy
is going by X percent a year. Some people call this long-term market efficiency is going
to perform pretty well. It's going to let you realize, you know what, maybe prices are
a little bit too high.
So let me return to these business books again. You know, like, Who Moved My Cheese, Made
to Stick. There's even a book called The No Asshole Rule, The Innovator's Dilemma,
another best-selling book. First of all, let me say, I love these books. They're great.
The reason I love them is because they introduce us to a whole bunch of heuristics. So they
give, you know, me and you ways to think about improvements in what we do, both in our personal
lives and in our work lives.
I want to go back now for a second. Remember our rugged landscape model. Now, at any point
in time, we may be stuck on local optima. That's true in our home lives. That's true
in our work lives. It's true in our social lives. And how do we get off those local
peaks, right, to higher peaks? Remember, we talked about two ways. One is a new perspective,
which rearranging all the possibilities so that once a peak may not be a peak. And the
second was having a new heuristic that let us jump on our landscape to get to a new,
you know, to a new higher point.
So when I read one of these management books, what I'm looking for is heuristics to help
me get off peaks. So recently, I read a book by a guy named David Allen about how to be
better organized, which is something that I need some help with. And what he suggests
to do is creating project files. Now, this is an interesting heuristic. And, you know,
when I read it, I thought, I wonder if this will work for me. And so I tried it. So one
of the things he says to do is create a folder, right, for each project and keep track of
what needs to be done in each project, and also write down the expected time to complete
the tasks. So then when you've got like 10 minutes or an hour, or imagine this an entirely
open Thursday afternoon, you can know which tasks require which amounts of time and you
can do those tasks. So I know I've got 10 minutes. I can do that 10 minutes, 10 minute
task on project five, everything's organized for you.
So Allen's heuristics helped me do better. They helped me get off a local optimum. Now,
another book, and this isn't a management book that's filled with useful heuristics,
is Christopher Alexander's A Pattern Language. In this book, he describes patterns that produce
beauty in physical spaces. So these patterns can be seen as heuristics for design. Indulge
me in just two. Trust me on this. You'll thank me. So the first one is when you're building
a house, you want rooms that have light from two sides. So think about the rooms you've
been in that make you most happy, that bring you the most joy. How many sides led in light?
Zero? Like a cave? I doubt it. Unless you like developing film or watching movies in
the dark, it probably has, it doesn't probably have light from no sides. One side? Perhaps.
But when you have light with one side, they just leaves a lot of dark spaces. But think
about two sides. Two sides seem just about perfect. They can be on opposite sides or
adjacent sides. It sort of fills the room without making one feel totally exposed, which
is true when there's three or four sides that have light coming in. So I found this heuristic
so powerful that when my wife and I designed our house, we made yeoman efforts to get light
in from two sides in nearly every room. And as a result, we love our home. But that's
not the only reason because Alexander's book is filled with a bunch of patterns and we
used other ones. So what's another pattern? Different chairs. So Alexander demonstrates
through pictures and logic that if you have diverse chairs in a room, it's just more fun.
It brings you joy. It allows a diversity of moods and purposes. If you don't believe me,
next time you're in a room in someone's house that you particularly like, look around. I'll
bet it has different chairs. And I'll bet it's also true that there's light shining on them
from two sides. Now one note that I can't fail to mention. Christopher Alexander is a landscape
architect. And he's a regular architect as well. He builds buildings and cities and parks. And he
had a cult following within the architectural community. But he also became a darling of the
open source programming community. Now you might think designing buildings is rather different
from structuring computer code and true, right? I've yet to encounter software that has light
from two sides or different chairs. Nevertheless, the core principles that Alexander had, the idea
of having a set of patterns, which when you follow those patterns led to good designs,
found incredibly widespread support within the computer programming community. Now this
shouldn't be a surprise because think back to our last lecture when bacon ice cream, right? We're
recombining. So no one would think that an architect's rules would have much to say about
computer programming, but they did because ideas, especially heuristics, they often combine. Okay,
enough examples. I wanted to sort of set the stage. Here's what I want you to be thinking. Heuristics
are good. We want a lot of them. They help guide us. We want to amass as many as we possibly can.
But at the same time, I want you to be a little bit skeptical because is it really going to be
the case that these simple heuristics are always going to work? And the answer is no, they can't.
And this is what I want to get to the second part. So we've talked about the ubiquity of
heuristics. Now I want to talk about the conditionality of heuristics.
So here's the funny thing. They work in some cases, they don't work in others. Now to explain
the conditionality, when I try to do this to my undergrads, when I say, look, these heuristics
are great, but they're conditional, I actually asked them to go to a website that's called
opposite proverbs. I talked about this in the opening lecture, but here's some of my favorites.
He who hesitates is lost. Look before you leap. They contradict each other. Nothing ventured,
nothing gained. Better, safe than sorry. And two heads are better than one. Too many cooks
blow the broth. Okay, one more. Actions speak louder than words. The pen is mightier than
the sword. These things all contradict each other. Now these opposite proverbs might be
called oxymoronic heuristics. They're sort of the jumbo shrimp of the advice world. So
we're loaded down with these opposite proverbs. And if I am, I might not be able to take an
action. I mean, somebody says, why don't you quit your job for this exciting new opportunity?
What do I think? Do I think nothing ventured, nothing gained? Or do I say, nope, better,
safe than sorry. It's hard to tell. That's why we should think of proverbs and heuristics
as not just rules to follow, but as conditional rules. And again, this is one huge reason why
scientists construct formal models and don't just tell stories. It's why we do all that
in mathematics. Because the model makes formal assumptions so that we can understand the
conditions under which a result holds and a condition under which it doesn't. So as
this course focuses on diversity, right, we've talked about how sometimes two heads are better
than one and sometimes too many cooks blow the broth. Now we could think of these as sort
of heuristics. Do I put a diverse team together or do I not? And they're contradictory heuristics.
So one of the reasons for doing this course, right, has been to help us understand when
in fact we want more heads and when we want fewer cooks. And so we talked about when we're
making predictions, more heads are almost always better. We've also talked about how
on irreversible projects, diversity can create problems. Remember my story about me adding
chicken broth to the vegetarian soups, right? That's a problem. So to quote the Bard, what's
done cannot be undone. Cooking is irreversible. Now it's for the ideas that two heads are
better than one, right? We've saw cases where that holds. I guess talking about predictive
tasks with the diversity prediction theorem, which says that two equally good diverse predictions
are going to be more accurate than either prediction alone. And we also saw the diversity
Trump stability theorem that when solving problems, we'd rather have two heads than
one. Again, provided certain conditions are met, right, the calculus condition and that
sort of stuff. So what we can do as we sort of mature in our wisdom is we can perform
similar unpackings of all the pairs of opposite proverbs. We can't wait until all the uncertain
is gone away before taking an action. He who hesitates really is lost. At the same time,
you must look before you leap. And by that I mean you should not take a huge action,
a leap, without understanding some of the consequences. So no one except a really hesitant
person who probably loses quite often says look before you take a cautious small step.
There's a reason we say look before you leap, not look before you take a tiny baby step.
So this idea of the conditionality of heuristics, the fact that they only work given certain
conditions, provides a lead in to something that's known as the no free lunch theorem.
Now this theorem, which was developed by David Wolpert and William McCready, states that
any two heuristics that look at the same number of possible answers or solutions are going
to be equally good across all problems. Let me say this another way. If I look across all
possible problems, if I know nothing about the problem, no heuristic is any better than
any other, provided they look at the same number of possible solutions. What does that
mean? Suppose I've got a mathematical function that's defined over the negative and positive
numbers. And I don't know anything about this function. I'm just told that it's this function
f of x, but it's in this sort of like computer. So if I give it a number like seven, it'll
give me the number back. What I want to show you is how the no free lunch theorem works
in this sort of setting. I've got this function, I know nothing about it.
So let's suppose I've plugged in five, and I'm told that five has a value of 14. I write
this in mathematical, it's just f of five equals 14. This is my sort of box or my function
that tells me the value of different solutions. Well, one heuristic might be, well, just increase
x by one. And so then I would compute f of six. And you may say, well, boy, that's just
a really good heuristic. Well, another heuristic could be to decrease x by one, and I could
try f of four. That's another heuristic. A third thing I could do is I could try negative
x. Remember, because you've heard do the opposite is a good thing. So I could just compute f
of negative five. And then the last thing I might do is try a random x. So I could just
try f of 137. These would all be heuristics, increase by one, decrease by one, choose a
negative, do the opposite, or choose something random. If I don't know anything about f,
they're all equally good. So what the no free lunch tells us, theorem tells us, if we don't
know the function f, then I have no reason to choose any one of these over any other.
Doing the opposite, doing random, increasing by one, decreasing by one, they're all just
the same. Now this makes logical sense, right? If I don't think about the function, I shouldn't
know anything about the heuristic. But how does it play out in the real world?
Well, let's employ the logic of the no free lunch theorem to the advice books to these
business books. I'm going to take two of the most famous ones ever written. The first is
Stephen Covey's, the seven signs, the seven habits of highly effective people. The second
is Jim Collins, good to great. Let me be clear, I'm not picking on these two people far from
it. Both did really good work. It's strong work. It's interesting. And I really like
both works. And I'm going to advocate reading both. Let me start with Covey. One of his
heuristics is big rocks first. Here's what he means. Suppose you've got a task of filling
a bucket, and you've got big rocks and small rocks, and you've got to get all these rocks
in the bucket. How do you do it? Well, you should put the big rocks in first. Why do
you do that? Well, if you put the big rocks in first, and then the small ones, the small
ones are just filling the gaps. But if you put the small ones in first, you're going
to fill up the bottom of the bucket, and you can't put the big ones in. This is basically
saying, deal with the big problems first. And it seems like good advice. But it has
an opposite proverb, right? And it goes something like this. Take care of the little things
and the big things will take care of themselves. And in fact, there's a lot of cases where
you should do little rocks first. So if you've ever dug fence post holes, and I've actually
done a lot of that, you realize that there it's little rocks first. You've got to get
the little stones out of the way before you get the big rocks out. So does this mean Covey's
wrong? No, it doesn't. Does it mean that he doesn't understand the no-free lunch theorem?
No, it doesn't mean that either. Let's think about what he's saying. He's saying, look,
I know a lot about the business world. I spent my life studying the business world. And so
if you don't know anything about the problem you're facing, then there's an equal number
of big rocks first problems and little rocks first problems. So in theory, those aren't
equal numbers. But in practice, I, Steve and Covey, have been in the business world. And
if you look at the problems that you're going to encounter, you're going to find there's
a lot more big rocks first problems. And he may be well. He may be right. But that's
an empirical question. I think he is right. But what we should learn is big rocks first
is a good heuristic to have in our toolbox. But we also should be a little bit skeptical
before we just apply it in every single case. And I think Covey would agree with me.
Now, let's go to Jim Collins' good degree. At one point, this was the best-selling business
book of all time. Collins devoted huge amounts of time and effort determining what makes
a successful company. And here's the list of features of great companies that he came
up with. And a lot of these features are heuristics. So one is humble leaders. And others get the
right people on the bus, have the right team. A third one is confront facts. Now, that's
a nice heuristic. Fourth, focus. Focus on money and ability. Again, heuristic. Another
one, rinse your cottage cheese. I'm going to come back to that. Then think about technology
and look for synergies for supereditivity. In other words, leverage diversity. Okay,
let's go back to this rinse your cottage cheese. What is that? Who refers to a guy
named Dave Scott, who won the Ironman Triathlon six times? So in training, Dave would bike
75 miles, that's a lot, swim 20,000 meters, that's 12 miles, and run 17 miles. He did
that every day, every day, 75 miles on the bike, 12 miles swimming, and 17 miles running.
That's, I mean, think about that. But he still felt his optimal performance, depending on
a low fat diet. So after doing all that exercise, he would still rinse his cottage cheese to
get the fat off it. No, really, I mean, he would rinse his cottage cheese in a strainer
after all that exercise. Okay, that's intense. And it's a pretty good heuristic because Dave
Scott did really well. Now, in his book, Collins took a really bold step. You've got to applaud
him for this. He identified 11 companies that adhered to his principles. Let's look at how
they did in the decade following the publication of his book. Now, during this period, it's
important to know that the market was flat, zero. So the market didn't move at all. So
let's look at his companies. Abbott Laboratories, flat, went up 0%. Circuit City, he went bankrupt.
Fannie Mae, Pleist and Conservership. Gillette, got bought out by P&G. Kimberly Clark, stock
went up a little bit less than 1%. Kroger, stock up 0%. Newcore, stock went up four-fold
finally. Philip Morris, stock down 20%. Pitney Bowes, stock down 20%. And then the last two,
Walgreens, Wells Fargo, stocks flat. Not very good, right? Lousy, in fact. So was Collins
wrong? I don't think so. Here's what happened. What he found were heuristics that worked
well from 1990 to 2000. The same ones need not work well in the next 10 years, especially
if other companies start following them. So later in this course, we're going to talk
about how the world changes. So we can think of the rugged landscape as dancing. It's going
to see that what worked then may not work now. So we're going to cover that in two lectures.
And so it may well be that he identified what worked from 1990 to 2000, but that didn't
necessarily work from 2000 to 2010. This is why it's so important to accumulate heuristics
and to recognize their conditionality. Because sometimes, restriction time really can save
time. Save nine. That is, if you haven't already lost, because you hesitated. So let's summarize
some of what we've learned in this lecture. So we've learned a lot about the books that
we love, these management books, these self-help books, and even architecture books. What they
do is they provide us with heuristics to help us find better solutions to problems, to get
unstuck from our landscape. So things like light from two sides is a really valuable
heuristic for thinking about how we design a room. We've also seen how fields like mathematics
have file drawers full of heuristics. And the more heuristics you accumulate, the better
you are as a mathematician. We've also seen that it can be the case that a heuristic from
one domain can jump category and apply in other domains. So thus, we can have an architect
who ends up being idolized by software designers for his ideas. Now, remember, this is an observation
we saw in the previous lecture about bacon ice cream. We saw that we can often recombine
ideas from one place and put them with another to get something new and really exciting.
Now, perhaps most important, if you take one thing away from this lecture, should be this.
These heuristics are conditional. Across all problems, if I don't know anything about
the problem, no heuristic is going to perform better than any other. That's the no-free
lunch there. Now, this doesn't mean there won't be good heuristics. There will be, but
you have to know something about the class of problems. That's why we turn to people
like Stephen Covey who says, look, I've looked at business problems, and I can tell you there's
more big rocks problems than there are little rocks problems. Now, this doesn't mean we
always do big rocks first, but it means we may have a bias towards at least thinking
about big rocks first. What it means, what Covey means, what Alan means, what Christopher
Alexander means, what all these people mean, is that if you face a hard problem, you want
to have lots of heuristics available, and you want to bias things towards heuristics
that have worked on similar problems. So ideally what you'd have, you'd have this huge crowd
of heuristics at the ready, this giant toolbox. Now, the thing is, we're only so big. The
pumpkin on my shoulders is only so big. Look, it's a pumpkin. So I can only have so many
heuristics, but what we'd like to have as a society is whole crowds of heuristics, huge
tool sets, because if we could do that, we could do some really amazing things. Well,
that's where we're going to go in the next lecture. We're going to talk about something
called crowd sourcing, and we're going to see how we can use modern technology to tap
into everyone's toolbox, and by using crowds, we can find solutions to problems that no
one person could ever find the solution to alone. All right, thank you.
