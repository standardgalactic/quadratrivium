In data analysis, this interacts with the data and gets its input there.
The second layer is known as the hidden layer.
It contains the artificial neurons.
They receive multiple inputs from the input layer.
Sometimes there is more than one hidden layer.
Then, the artificial neurons summarize their inputs and pass the results to the output layer.
So, you give the network training inputs.
For 20 questions, this is many, many people playing the game.
You want it to generalize the results.
For 20 questions, what in general do you ask to get a watch as the object?
Keep in mind, the computer is learning.
So, it can be hard if a neural network doesn't work to fiddle with it.
Neural networks are good for prediction and estimation when the inputs are well understood.
You have a pretty good idea of what is important, but not how to combine them.
The output is well understood.
You know what you are trying to model.
Experience is available.
You have plenty of examples to train the data.
A black box model is okay.
You don't need to interpret or explain the model.
Why did it get what it got?
You may not need to know, but it will predict from what it learned.
Let's return to 20 questions.
After the online version of 20Q was played 1 million games,
the neural network had built up 10 million synaptic connections.
How did they fire and communicate when asking questions?
That's what you won't know, but clearly, if you've played the game, it does pretty well.
Now, there's a lot of connections.
Keep in mind, it's still connections in a computer program.
It isn't a biological neural network.
An ant has 10,000 neurons, not 10 million like the online 20Q game.
But an ant can do many things a computer isn't good at.
An ant with 1,000th of the neurons of that 20Q game
can find a dropped crumb and relay that location to other neural networks in other ants.
So what type of questions have neural networks tackled?
Have you been called as a juror, taken time off from work, showed up,
