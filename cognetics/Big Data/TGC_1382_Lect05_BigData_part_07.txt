Was it linear, exponential?
Neither?
Well, it wasn't either.
It looks like parabolic growth, but with slowing toward the end.
But then, notice what happens as digital cameras became widely available.
By 2011, we took more than 380 billion photos in a year.
You may have deleted more digital photos than some people took in their entire lives.
So what about digital photography?
Has the growth become steep but linear?
Maybe not.
It also doesn't look truly exponential.
It's not like our unsingable make-it-stop song.
We would want more data to decide, but interestingly, the growth of digital photography looks like
a continuation of the parabolic curve that we saw for non-digital photography.
It's just that now we are on a steeper portion of that same curve.
Clearly, digital libraries of things like photographs are going to be a large and a very imposing
dataset.
So let's return to complexity.
Having a bigger and faster computer just isn't enough.
If you have an inefficient algorithm, it may take literally thousands of years to solve
certain styles of problems.
They are simply that difficult.
No quick algorithm is known.
In fact, some problems can be shown to be computationally intensive.
Our encryption problem for credit cards is that type of problem.
Earlier, we searched through Les Mis using a technique called binary search.
Searching is one big thing to do with data.
Another is sorting.
One way to sort is to put everything in a pile and take the items one by one and insert
them into their proper place.
It works, but for large datasets, that can be very slow.
Let's see another technique.
It is faster, which usually means it's a bit more complicated.
This method uses the idea of divide and conquer, which we were using to search through Les
Mis.
The idea is to split the array into two lists.
One list contains items less than some value, and the other list contains items greater
than or equal to some value.
Sort both lists and then recombine, which we will see is quite easy.
This is called, appropriately enough, quick sort.
It's quick.
Okay, so suppose our list, we'll start small, is 5, 3, 7, 4, 6.
So we pick the value that will determine what goes into the two piles.
We call this the pivot.
