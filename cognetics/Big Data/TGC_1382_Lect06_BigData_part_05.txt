than for transaction processing.
Let's dig a bit deeper into that sentence, as there is a lot of things going on there
that describe a data warehouse.
As we mentioned, a data warehouse often has multiple sources feeding into it.
For example, there may be multiple branches of a bank in several countries with millions
of customers in various lines of business from savings to loan.
Each bank's database may have been developed or tweaked internally with each application
designer making individual decisions as to how an application and its associated database
should be built.
As we mentioned, these sources are combined in a data warehouse.
A smaller subset of the data warehouse aimed at end users might be called a data marked.
The key, though, is that the data sources are also accessible.
That's the relational database part of it.
A relational database is a type of database that organizes data into tables and links
them based on defined relationships.
These relationships enable you to retrieve and combine data from one or more tables with
a single query.
Let's see this play itself out.
Amazingly, we don't have to have big data to see how a relational database can help.
Let's take a database of five people in an organization.
Here's our organization listed by their employee number.
This is easy enough, but what if we make changes?
If you remove the two employees from purchasing, Jim Harris and Abigail Smith, then the purchasing
department doesn't appear to exist, at least in the database.
But purchasing may simply be in transition, only temporarily without employees at the
moment.
Or what if marketing gets renamed advertising?
Every entry has to be changed.
Keep in mind, these are issues with storing five elements.
Remember the Library of Congress?
It has millions.
Relational databases would break this into separate tables.
We want to remove all repetitive information.
This can be achieved by creating a table for the department and another table for the employees.
The department table only has the department number and department name.
The table for the employees would contain the employee number and a name.
So we have two independent tables.
Now what?
We want to retrieve data, and so we want to have meaningful links between the tables.
