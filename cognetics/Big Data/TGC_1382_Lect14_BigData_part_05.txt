So, we wrote a computer program that simulated a shuffled deck,
basically randomizing the numbers from 1 to 52. Then we had the program simulate picking cards
and the magic trick. We ran the computer program 10,000 times and saw it worked just under half the
time. You were more likely for the trick not to work than to work. The code took about 10 to 15
minutes to write, a few seconds to run, and boom, we had our answer. Then we wondered how that claim
came about. Searching through the internet, one of my students found that the person that did the
trick only did it about 100 times. And it happened to work just over 70 times. At one level, it's
understandable why he thought this. If you flipped a coin 100 times, then the chance of getting 70 or
more heads is just under 4,000th of a percent. But even so, sometimes the improbable can happen.
He did his trials 100 times and only once, and nobody else replicated his results. Here is an
example of needing more experiments to ensure the estimated probability matches the underlying one.
Simulation is easy and you can run it many times to check your results.
What else can simulation do? Have you been in a fast food drive-through and seen that they time
how long it takes to fill the order? Such information can be quite important and helpful.
This branch of simulation is called queuing theory. If we know the rate at which customers arrive
and the length of time it takes to fill the order, we can simulate queuing up or lining up
under different scenarios. When should you have the cashier take orders only and leave the filling
of orders to someone else? Simulation can help you determine the impact of such choices.
Similar concepts allow one to model emergency room intake to reduce waiting times. In traffic
studies you can model the difference between a roundabout and an intersection with a stoplight.
Simulation is a great tool when you might change parameters in the problem.
Suppose you want to test different densities of traffic. Maybe you'll even change the road
from one lane to two lanes. If you know you may be changing these parameters then if you can
you write your simulation code so these parameters can be changed easily. Sometimes you write computer
code so you literally change a variable from one representing one lane to two which would
represent two lanes. Simulation is ideal because you can quickly test ideas without having to do
