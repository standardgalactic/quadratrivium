Every March, the United States goes entirely mad.
Why?
Simply put, March Madness.
How crazed could things be in an NCAA Division I basketball tournament?
Come on, each tournament only has a few dozen college teams.
Each game has two nets and one ball.
But other numbers tell a different tale.
In 2012, the Week.com estimated that 86% of employees devote part of a workday in March
to the tournament.
11% of employees admit spending at least five hours of their workday following games.
An estimated $175 million in salary is paid to workers for their time distracted by the
tournament.
And all that was before Warren Buffett offered a billion-dollar prize to whoever could correctly
predict the entire tournament.
Let's see what the madness is all about.
Using what I call March Mathness, our tool of choice is Bracketology, where we use math
to fill in a diagram of brackets that looks like this.
For an NCAA basketball, things begin on Selection Sunday in March with the announcement of which
teams are in the tournament and the first-round matchups.
There are men's and women's tournaments.
Then it's your turn.
Who do you predict will win the first-round games?
From there, you choose who in your predicted second-round matchups will win.
You keep selecting winners from each round until you have selected a national champion.
This creates your bracket for the tournament.
If you're in a pool, how do you know who wins?
It really depends on how you keep score.
Some pools award each correct prediction the same number of points.
Others give more for the correct predictions in later rounds of the tournament.
Those predictions are given more weight.
This is what the sports network ESPN does.
How many brackets are possible?
It can be hard to believe, but there are more than 9 times 10 to the 18th power brackets.
That's a 9 followed by 18 zeros, or more than 9 quintillion brackets.
How big is that number?
It's more than huge.
It's much bigger than all 5-card poker probabilities, which are big, but merely in the trillions.
So we can't simply pick a random bracket and hope for the best.
Well, we can, but the chances are against us.
If we wanted to win just by guessing, our chances would be better in a lottery, with
odds of just a billion to one.
So we'll create math-generated brackets, and then see how they do in the ESPN online
tournament challenge, in which millions of brackets are submitted each year.
So how can we do better than mere chance when we predict our winners?
Simply put, the math we'll learn will rate every team in the tournament, from the best
to the worst.
We'll follow the math and predict the team with the better rating always wins.
In fact, we'll use methods previously used to rank teams in NCAA college football, which
historically has had holiday bowl games instead of a full tournament.
To visually represent the outcome of games, we'll draw an arrow from the winning team
to the losing team.
For instance, in December 2012, Davidson College beat the University of Kansas in men's basketball.
So we draw an arrow from Davidson to Kansas.
Such a picture is called a graph.
The teams are called vertices of the graph.
The arrows are called edges, or directed edges.
I often think of this as a poor sportsmanship graph.
The winning team is pointing at the losing team and noting, I beat you.
Let's look at some of the real data from 2012-2013.
How will we rank?
For now, let's look with winning percentage.
Simply take a team's total number of wins and divide by the total number of games.
If a team won 2 and lost 3, then that team has a rating of 2 divided by 5 or .4.
The higher the rating, the better the team is predicted to perform.
So let's look at the outcome of every game between two Division 1 men's basketball teams.
What does that graph look like?
Here it is for 2012-13.
How would you rank this?
It's hard to say.
Let's take a closer look.
Still pretty hard to say.
That's precisely why we need data analysis.
We'll use the result of every game between Division 1 men's basketball teams leading
up to March Madness.
Even though we will only rank the 64 teams in the first round, we will see how they played
against everyone to find our rankings.
How much data is this?
About 5,000 games.
Since we look at every game, we actually rank every Division 1 team which is about 350 teams.
And how do we get all this data?
It's gathered together and made available on websites such as massieradings.com.
This is game by game data.
Every site gives you the date of the game, who played, if the team played at home, since
sometimes games are played at a neutral location, and the score of the game.
To rank the teams, as we'll learn in this lecture, we have to convert raw data like
this into a linear system.
But you probably won't do this by hand.
My students and I write computer programs that read the data line by line and accumulate
that information into the linear system.
Here's a shortcut.
On my web page, I periodically post tools that allow you to experiment with versions
of these ideas if you don't program.
Then you need only to download game data in my programs to convert it into the linear
systems and solve them for you.
Okay, so back to ranking.
Let's look at winning percentage.
Even with 5,000 games, we can quickly and easily create a bracket.
How good of a bracket do we create?
To evaluate our bracket, we'll submit it to the ESPN online tournament challenge.
How do we do?
Our bracket scores 320 points in 2013.
A perfect score, which no one has ever gotten, would be 1,920.
So we've only gotten 1 sixth of a perfect score.
And more surprising, we are outscored by over 98% of the brackets submitted.
What happened?
That's horrible.
In fact, if I flipped the coin to the side who won, I happen to produce brackets scoring
320, 320, 220, and 280 points.
My data analytics really isn't that encouraging at the moment.
And remember, even if you've gathered all the data and performed lots of computations,
that doesn't mean you've produced insight.
So what's wrong?
Winning percentage doesn't take into account the strength or quality of two teams playing.
It's not just whether you win or lose, but who you play against.
So can we design mathematical methods that integrate strength of schedule?
Sure, we can add weights to rank each team.
It will help us to learn a method used by Professor Kenneth Massey of Carson Newman
College to rank NCAA college football teams.
How does it work?
Let's see how it works with football since that's where Massey created the method.
Only in the 2012 season, team A beats B by 14 points.
Team B beats C by 3 points.
Can we now predict that team A will beat C by 14 plus 3 or 17 points?
Of course not.
If you could, scores would be what is called transitive.
In fact, given that we're carrying the scores through here, it would even be additively
transitive.
So if transitivity doesn't always hold, what do we do and what do we do now?
We assume it holds approximately.
If a team wins one game by 61 points and another by 59, then we can approximate with 60.
This is an important point.
It's another lesson of data analytics that I often bring up to students and my researchers.
In data analytics, assumptions are often made.
You assume a property and as long as it is close to holding, insightful information emerges.
Let's see how this assumption leads to a linear system that produces rankings of teams.
Let's look at three teams.
We need a rating for each.
Call team 1x, call team 2y, and call team 3z.
Assume team 1 beats team 2 by 10 points.
The Massey method, as it has become known, writes this as x minus y equals 10.
This means x wins, y loses, and 10 was how much x won by.
So if team 1 has a rating of 13, then x equals 13.
If team 2 has a rating of 3, then y equals 3.
So team 1 would be predicted to beat team 2 by 13 minus 3 or 10 points, which we write
as x minus y, which equals 13 minus 3, equals 10.
Now we don't know the ratings of the teams.
That's what we're trying to find.
But we do know the difference in the points in the games.
So if we have a game where team 1 beat team 2 by 10, then we form the system x minus y
equals 10.
Additionally, team 2 beat team 3 by 5 points, which would give us y minus z equals 5.
Finally, suppose z minus x equals 1.
Who won that game?
Yes, team 3.
We can quickly see that transitivity didn't hold.
Team 1 beat team 2 by 10.
Team 2 beat team 3 by 5.
But team 1 didn't even beat team 3, but instead lost by 1.
So transitivity didn't hold.
That means we won't be able to find values for x, y, and z that exactly solve the linear
system.
In fact, we're going to have quite a few more games than the number of teams.
And for March Madness, we have around 5,000 games and about 350 teams.
This means we have more equations than variables.
If we look at the earlier example from women's basketball, we could say x equals 59 and x
equals 61.
We have two equations with only one variable.
What's x?
What?
We can't satisfy both equations and have an answer to that question.
Earlier, we handled this by finding an answer that approximated the equations.
We said x equals 60.
For our type of problem, we can approximate using what is called the least squares.
Instead of averages, we square each of our numbers, add them up, and take the square
root.
It's like a giant Pythagorean problem, but computers quickly and easily solve such problems.
So it is literally a matter of entering numbers into a computer and pressing enter.
Remember, this is going to be a system.
In the case of March Madness, with 5,000 equations, one for each game.
We can, though, form a smaller system with only 350 rows, one for each team.
That's still a lot, but it's quicker, and it's also how Massey has done it.
Let's see how.
Now, we are using the version of the Massey method that considers scores.
But you don't have to include scores.
In fact, when NCAA football used Massey's method, they didn't do it with scores due
to their concern that weights based on scores could encourage blowouts.
Well, you will be using scores to create our brackets.
Let's see how to set up the linear system for a fictional series of games in the South
Division of the NFL.
You can see a weighted directed graph for four teams during the season.
We'll represent the records by the teams by a weighted directed graph.
In this case, the number or weight associated with an edge is the difference in the scores
of the game.
You may not know the teams, but the graph makes it easy to see who won and lost.
Starting in the upper left, we see the New Orleans Saints beat the Tampa Bay Buccaneers
by 7, and lost to the Atlanta Falcons by 3.
In the lower right, the Carolina Panthers beat Tampa Bay by 3, and Atlanta to the left
by 10.
We are now ready to set up the linear system.
We could write these as equations, but for work in a computer, it's easier to use matrix
shorthand.
For example, if we have x minus y equals 9, and x minus y equals 1, that becomes a matrix
where on the first row we have the elements 1 and negative 1, and in the second row we
have the elements 1 and negative 1 again.
Let's do the same thing to make a matrix of our four teams.
We have four teams, so we will make a matrix with four rows and four columns.
The next step is to assign each team to a row.
Let's go left to right in our diagram, and have row 1 be the Saints, row 2 be the Buccaneers,
row 3 be the Panthers, and the last row the Falcons.
The columns have the same ordering as the rows.
Now we want to fill in the matrix.
We will take this in two steps.
First, there are the entries along the main diagonal.
These are the elements in the same row and column, such as row 1, column 1, or row 2,
column 2.
Looking at the element in the first row, first column, we're working with the team assigned
to that row, which for this is the Saints.
Now we simply put the total number of games that team has played in the season.
The Saints played 2.
The Buccaneers 3, so the element in row 1, column 1 is 2.
The element in row 2, column 2 is 3.
Now we have all the elements on the main diagonal.
Let's work with the first row.
This corresponds to the Saints.
We already have the first row, first column element assigned.
Let's move to row 1, column 2.
The teams correspond to this row in column would be the Saints and the Buccaneers.
How many games did they play?
One.
So we put a minus 1 into the row 1, column 2 entry.
So each off diagonal element equals negative 1 multiplied by the number of times the corresponding
teams played.
That's it.
We now know how to fill in all the matrix entries.
Let's look at the matrix.
You may wish to verify all the entries.
Let's look a bit more at row 1.
The entry in the third column is 0 since the Saints and Panthers didn't play.
There is a minus 1 in the last column since the Saints and the Falcons played once.
Now wait a moment.
We mentioned this method takes final scores into account.
Such information is placed in a separate column of numbers called a vector on the right hand
side.
Each row in that vector corresponds to the same team that it did in the matrix.
So the first entry corresponds again to the Saints.
We fill in the entry with the sum of the point differentials where a win gives a positive
differential and a loss a negative one.
That's a mouthful so let's see this computation in action.
The Saints played two games and won one by seven and lost the other by three.
So the right hand side entry associated with this team would be seven minus three which
equals four.
Now the Buccaneers won a game by 17, lost a game by seven and lost another by three.
So the second element of the right hand side vector will be 17 minus seven minus three
which equals seven.
The Panthers won by 10 and by three so that entry is 13.
Finally the Falcons lost by 17 and 10 and won their other game by three so that entry
would be three minus 17 minus 10 which equals negative 24.
We filled in the entries for the entire linear system now.
A matrix times a vector equals a vector but there is one more step.
You can think of this as centering the ratings around zero.
It turns out that there are infinitely many solutions to the linear system that we have
up to this point.
This is easily fixed by replacing any row by ones in the matrix and a zero on the right
hand side.
That row says that the sum of the ratings should equal zero.
This essentially locks things down and moves us beyond having infinitely many solutions.
That's it.
We have our linear system.
We have a four by four matrix times a vector equaling a right hand side vector.
Moving forward how do we do this for more teams?
For March Madness we aren't talking four teams we're talking about 350 teams since
that's how many NCAA Division I teams there are in men's basketball.
So now rather than four rows we will have 350 rows and 350 columns too.
What does the data look like?
Again I grab it from massyradings.com.
Here are three lines of the data.
How do we get from that to the matrix?
The key is understanding the data.
It simply tells us the tale of the season in data.
Take just the first row.
That first number 735181 is the number of days since January 1st in the year zero.
Of course this is not because we can trace NCAA basketball all the way back to the time
of Jesus Christ.
This merely gives us an easy consistent way to compare days to know which is before the
other.
The second number 20121109 is the date given in year month and day format.
Now comes the team data.
The number 345 is team 345 in the data.
Next comes a one telling us that team 345 played at home and they scored 117 points.
They played team 85 who was visiting which is the minus one and they scored 75 points.
So team 345 played team 85 and won.
We can quickly integrate this into the linear system.
Again team 345 played team 85.
So we now go to row 345 and column 85 in our square matrix with 350 rows and decrease that
elements value by one.
When we move to the right hand side vector we increase the value in row 345 by we increase
it because they won by 117 minus 75 which equals 42.
Since team 345 beat team 85 by that 42 points.
We also decrease the value in row 85 by 42 since they lost.
So that's how it's done.
The idea is to go line by line and accumulate everything into a linear system.
When we've processed every line we have our linear system ready.
Now we simply need to solve it.
Even a four by four system like the one we had earlier takes time to solve by hand.
So even a system of this size is nice to solve on a computer or with a calculator.
The function we're looking for solves a linear system.
Many programming languages have a function that performs a linear solve directly but
even in a spreadsheet like Excel this can be done.
You would compute the inverse of the square matrix on the left hand side then we would
multiply our square matrix by the tall vector on the right hand side.
So let's go back to the linear system formed by the four NFL teams we saw earlier.
When we solve that system we find the Saints have a rating of negative point one two five.
The Buccaneers one point seven five.
The Panthers four point three seven five in the Falcons negative six.
We rank by sorting the ratings in descending order.
So we rank the teams as the Panthers, Buccaneers, Saints and Falcons.
Now remember there is another helpful piece of information in the ratings.
We can predict teams that didn't play one another.
If the Saints in the upper left of our diagram played the Panthers in the bottom right this
method predicts the Panthers will win by the rating of the Panthers minus the ratings for
the Saints.
This equals four point three seven five minus negative zero point one two five which equals
four point five points.
Clearly we're not going to see a half a point scored.
This can be thought of as an expected value related to the score.
As I said earlier this method can reward blowouts.
A big win in one game against a weak team can increase a team's overall rating.
Remember that 17 point win played an important role in the results.
The method can be adapted to look only at wins or to dampen the reward for large wins.
For example you might dampen large wins by capping them at 15.
This does two important things.
First you aren't rewarded for big blowouts winning by 40 or 50 points.
Now you also aren't penalized if you only win by 25 and your rating compared to your
opponents rating says you should have won by 40.
Any time you see a score bigger than 15 you simply make it a 15 point win.
Now we know how to take a season of data and create a linear system.
For March Madness that system will have about 350 equations and 350 unknowns.
So we'll need a computer to solve it.
We might use a command called something like linear solve on the website Wolfram Alpha
or linalg.solve in Python.
I do this using mathematical software called MATLAB.
You can use Excel though this is a large rather large system.
Sage is a free mathematical software that my students have used.
It is often described as a combination of MATLAB and Mathematica.
I've also coded it in Java but Java doesn't solve linear systems as easily as other languages.
An advantage with Java is that it does allow me to post codes on web pages.
My students often use Python that's also a free programming language.
Python is good at many aspects of data analytics from scraping information off the web to
solving linear systems to computing statistical measures.
The good news is that a computer solves this system very quickly.
So we can take all the data from a complete season of Division 1 men's or women's basketball
and create the ratings.
Once we have the ratings it's easy.
The higher the rating the better the team.
Then we create a bracket by choosing the higher rated team in every matchup.
If we submit this score weighted bracket to the ESPN tournament challenge we find it
scores 850 points and beats over 73% of the over 8 million brackets submitted.
This is a very very stark increase over our winning percentage bracket that only beat
1.8% of the brackets and was competing with coin flipping.
Can we do anything else?
We've added weights based on scores but we haven't yet decided how much to weight each
game.
The key is determining the importance of a game.
Let's think of breaking a season into four parts.
The choice now is how much to count a game in each part.
Now if you and I play ping pong and you win, you might say that you get half a win and
I get half a loss.
By doing this we're saying that this game is less important, possibly less predictive.
Or you could get 1.5 wins and I get 1.5 losses.
Such a game is more important.
There are many many ways to weight the games in a season.
You can weight games higher if the team won the previous game.
This weights a team's ability to win consistently, to sustain a winning streak.
You can weight games that are won on the road, since essentially every game in March Madness
is on the road.
Another option many of my students have used successfully is breaking the season into parts
like we did earlier by using four.
Then we decide how to weight each part.
For instance if we had four parts, we could count the games in the first quarter of the
season as half a win and loss for the respective teams.
In the second quarter of the season the games could count as .75 a game.
How do we weight the games in the third and fourth pieces of the season?
Is the last part of the season leading into the tournament the most predictive of a team's
success?
If so, you maybe could weight it as one game or even two.
How do we use this when we form the linear system?
It's pretty straightforward.
You simply count the number of weighted games.
If I played three games, I keep track of their weighted value.
I might have played half a game, a full game, and 1.25 games.
So in all, I played .5 plus 1 plus 1.25 or 2.75 games.
In the same way, I keep track of the number of weighted wins and losses.
So once we determine our weighting, we can form a revised linear system.
Once that's formed, a computer can produce the ratings and we are ready to form a bracket.
In years past, my students both in classes and my research team have created brackets
using these ideas.
They've weighted the recency of games using the intervals or even with functions like
a log function.
Others added in weighting away wins and capping the size of a win.
A key is that they created their own bracket with their own mathematical thinking.
Their work has resulted in brackets that have outscored 97% and even 99% of the millions
of brackets submitted to the ESPN challenge.
If you try it, after you create a bracket with weights for scores and for games overall,
you may want to override some of its decisions with additional information.
It's really up to you.
Now, the madness of March basketball is only the most popular application for what we're
doing.
A book called The Enlightened Bracketologist presents 101 whimsical brackets across all
sorts of areas, cheeses, red wines, inventions, investment strategies, on and on.
There's really no limit.
Once you know how to create brackets driven by data and appropriate weighting, you can
do that for any subject and come up with a winner that may surprise you.
So use the ideas of bracketology to alleviate some of the madness of March and then see
what else you can do with it.
Good luck.
