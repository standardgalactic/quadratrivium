We have a pretty small data set, so there the relationship or relation between the databases
is pretty clear.
The employees work in the different departments.
So we simply need a key that links data.
So our employee table becomes what we see.
Now if both Harris and Smith leave purchasing, the department isn't gone from the database.
Similarly, changing the name of a department is a very quick change.
To be sure we understand this type of approach, let's try another example.
We'll create a database of flight information of an airline.
So we will store flights and pilots for the various flights.
Each flight has a unique number, a departure city, a destination city, a departure and
arrival time.
Each pilot has a unique company ID, a name, and experience level.
So we will have two tables similar to what we did before.
We will have one for the flights and one for the pilots.
Now we think of the attributes for each data set.
For the flights, we have the flight number, a departure city, a destination city, departure
time and arrival time.
Now we ask an additional question.
Which entry should we search on?
The flight number is the unique attribute for flights.
So this becomes what is known as the primary key.
For the pilots, they have the company ID, name, and experience level.
The primary key is the company ID, since again it is unique to each pilot.
Right in our earlier example, the department number and employee ID were the primary keys.
Finally, for this example, we get one more table.
We need a way to link the tables.
Here we have an assigned to table.
Here we have each pilot's company ID, the flight number that was assigned to the pilot
and the date of the flight.
Now what if we had all the flights for say US Airways?
That's a lot.
How can one computing device possibly manage it?
It doesn't have to.
Parallel computing and parallel processing is one of the cornerstones behind modern-day
very large-scale data analysis.
In particular, Apache Hadoop is a free programming framework that supports the processing of large
data sets over multiple computers.
So what is Hadoop exactly?
