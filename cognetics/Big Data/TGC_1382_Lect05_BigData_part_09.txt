the big job done in little jobs of manageable size.
Try this the next time you need to sort through a pile.
I've used the same method to sort exams into alphabetical order.
Computers make this much faster, of course, but it's the algorithm that's the key.
The algorithm is what makes it easier to manage complexity, whether it slips of paper or big
data on a computer.
So keep this in mind.
Sometimes we can work with small data sets and gain great insight, but we also want to
keep in mind what can change when we work to large data sets, especially the even larger
data sets that might follow.
Else, what we do today may become obsolete tomorrow and beware of thinking that bigger
computers alone can make up the difference.
Imagine if Google's search algorithm didn't scale.
The number of web pages has grown at an alarming rate, a genuinely exponential rate.
If they could not find or develop scalable algorithms, then Google may have been great
with millions of web pages, but failed to keep up with billions of web pages, or failed
to keep up today when the number of web pages is estimated in the trillions.
By scaling up by a hundred or a million in size, the time needed could have suddenly
become problematic.
Imagine if, a year from now, given the growth in the size of the web, it suddenly didn't
take a second or less to get a search result from Google.
Now it took an hour, or overnight.
Google as we know it wouldn't be Google.
Part of Google's success was its ability to adapt its algorithms to the growing size
and complexity of the web.
Today's developers of applications and services must think ahead.
There may be 10,000 users now, but if things go well in today's age, there could be several
million users.
Can the current methods deal with huge, even nonlinear increases in scale?
Sometimes faster algorithms have a more complex design, with some details that enable increased
speed.
More complexity in the algorithm can mean simplifying what your computer needs to do
to finish the job.
Algorithms are the key to managing complexity.
It is algorithms that can make one person or company's intractable problem become another's
wave of innovation.
