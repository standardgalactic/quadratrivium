The science of information is also a science of secrets.
Thus far in these lectures we have focused on communication, how we can use codes to
communicate information efficiently and to defend information from errors in transmission.
These are the questions addressed by Shannon's first and second fundamental theorems.
But codes can have another purpose as well, to conceal information, to protect the privacy
of the messages we transmit.
That is the concern of one of the main branches of the science of information, the field of
cryptography.
The theory encompasses all those situations in which the usefulness of information depends
on its secrecy, the fact that some people have it and other people do not.
Passwords, which we have already discussed in lecture 3, are the simplest example.
The whole point of a password is that the right people know it, and outsiders do not.
In effect, a password is a kind of key, and only people who possess the key can open the
lock and be granted access.
The strength of that lock is determined by how many possible keys there are, which in
turn is measured by the entropy of the password.
If the entropy is low, that means there are relatively few possible passwords, so a determined
adversary might be able to guess the right one in a relatively short time.
On the other hand, a password with high entropy is chosen from a gigantic set of possibilities,
so we are confident that the adversary will not be able to guess the right one.
The same ideas apply to an actual physical key that operates a mechanical lock.
I have one right here.
Such keys and the locks that go with them have existed for many thousands of years.
The ancient Egyptians had them.
But the principles on which they work are essentially information principles, just like
computer passwords.
Let me explain what I mean.
This key fits a common type of door lock called a pin tumbler lock.
The key is a piece of metal machined into a particular shape.
There are grooves along the sides, and there is a pattern of high and low places along
the top edge.
That pattern encodes the essential information in the key, the password that opens the lock.
To see what I mean, you have to know how a pin tumbler lock works.
There is an outer casing with a cylinder in it called the plug.
Turning the plug would unlock the door, but it can't usually turn.
That's because there is a series of five or six holes in the casing, and at the top
of the cylinder, which line up when the door is locked, and there are metal pins in those
holes that prevent the cylinder from turning.
Each pin, however, is broken into two separate pieces.
The bottom part is called the tumbler, and the upper part is called the driver.
Behind the driver there is a little spring that pushes them both downward.
Each tumbler pin has a different length.
When you put a key into the lock, it lifts the pins up.
If the key has the right shape, each pin is pushed up the right amount, so that the divide
between the tumbler and the driver, called the shear point, will be lined up with the
outside surface of the cylinder.
Since the driver and tumbler pins are separate pieces, the plug and tumblers can now rotate,
and we can unlock the mechanism.
From the outside of a lock, anyone can see what pattern of side grooves is needed for
a key that fits the lock.
But the lengths of the tumbler pins inside the lock cannot be seen, so a potential intruder
cannot know the key shape required to line up the shear points and open the lock.
It is that hidden information, that secret password, which makes a lock secure.
How many bits of password information are in a door key?
We can make an estimate.
Let's say the lock has six tumbler pins.
Each tumbler could have a range of possible lengths, any value between five and ten millimeters
say.
That's like the analog information in an electrical voltage.
As we learned in the last lecture, analog variables are always subject to noise.
In a mechanical lock, the keys and the pins can wiggle around a little bit, and two keys
made for the same lock will also have microscopic differences.
The lock mechanism still has to work, even so.
That means we only have to consider a finite number of really distinct tumbler pin lengths.
How many different possible lengths might we use?
After studying several keys, I conclude that as a practical matter, this number is not
much more than eight.
So eight possibilities means an entropy of log two of eight or three bits for each pin,
and so a key for the whole six pin lock system has eighteen bits of entropy.
That's not too bad.
The four-digit code that unlocks my phone only has thirteen bits of entropy.
Furthermore, to try all possible keys on a locked door would be highly impractical.
An intruder would have to bring along a quarter of a million different possible keys, and
it would take months to try them all.
The subject of cryptography goes far beyond locking your front door or your phone.
It is also about keeping messages secret.
The adversary is not an intruder, but an eavesdropper, an outside person who is trying
to intercept and read communications that we wish to keep private.
This sort of cryptography, the cryptography of secret communication, is tremendously important.
The outcomes of wars and the fate of nations have depended on it, and we rely on it for
our daily lives.
Credit commerce depends on our ability to send sensitive financial data, our banking
and credit card information, over communication networks that we do not completely control
and so cannot completely trust.
We rely on cryptography to keep that information safe.
So let us suppose that our old friends Alice and Bob want to communicate privately, but
an outside eavesdropper, call her Eve, may be listening in.
What can Alice and Bob do to protect their messages from Eve?
Well they could agree on a private code, a code that they both know, but Eve does not.
Even if Eve does intercept and examine one of their messages, she will not be able to
understand what it means.
And any sort of code will do.
Alice and Bob could simply learn another language, Mongolian or Esperanto.
They might use numbers to represent words, or they might give private meanings to ordinary
words and phrases.
Like the cake might mean meet tonight, or flee the country.
In a code, the association between the code word and the meaning is arbitrary.
So even if Eve knows that a secret code is being used, if she does not know the code
itself, the messages remain secret.
Codes can conceal as well as communicate.
Cryptography mostly considers codes of a special type called ciphers.
So we begin with a message in some ordinary, readily understood English form.
English text, say.
This is called the plain text, and it is what Alice wants to send to Bob and not to Eve.
A cipher is a mathematical rule by which the plain text is converted to a form that Eve
cannot easily read.
This form of the message is called the cipher text.
The process of transforming the plain text into the cipher text is called encryption
or incypherment.
Eve, intercepting only the cipher text, finds it meaningless.
Bob, receiving the cipher text and knowing the cipher rule, can convert the cipher text
back to plain text, that's called decryption, or decipherment.
One of the earliest ciphers we know about was the Caesar cipher, so-called because it
was used by the Roman general and dictator Julius Caesar for his private correspondence.
The Caesar cipher is very simple.
First, write the letters of the alphabet in a circle.
We're using the modern English alphabet of 26 letters, of course Caesar himself would
have had the old Latin alphabet, which did not include separate letters for J, U, or W,
but the principle is the same.
In the Caesar cipher, each letter of the plain text message is replaced with the letter that
is three places counterclockwise on the circle.
A becomes X, B becomes Y, and so on.
So consider the plain text phrase alea iachta est, that is, the die is cast, which is what
Caesar said when he crossed the Rubicon with his troops to march on Rome.
Alea iachta est becomes the cipher text XIBX, FXZQX, BPQ.
Decrypting the message by shifting cipher text letters the other direction is equally
easy.
As someone who does not know the cipher, the encrypted message seems like gibberish.
The Roman historian Sotonius, from whom we learn all this, also tells us that Caesar's
great-nephew, the emperor Augustus Caesar, used a similar cipher.
Augustus shifted his letter one place clockwise on the circle.
Our plain text alea iachta est becomes BMFBJBDUBFTU.
The Caesar shift cipher is more than 2,000 years old, but a version of it is still used
today on the internet.
So suppose you are participating in an online discussion about a movie.
You want to make a comment about the ending of the movie, but you don't want to spoil
that ending for anyone in the discussion who has not yet seen it.
So you encrypt your comment using a simple cipher that everyone knows, and the most common
cipher for this purpose is called rote 13.
What rote 13 stands for, rotate by 13.
You replace each letter with the one that is 13 places around the alphabet circle.
Exactly on the opposite side, A becomes N, B becomes O, C becomes P, and so on.
The word rosebud becomes E-B-F-R-O-H-Q.
This cipher is especially neat because you can use exactly the same procedure replacing
each letter with its opposite to decrypt the message as well.
There are websites that will do the work for you, automatically turning your plain text
into cipher text or vice versa.
Of course, since everyone knows about rote 13, its only actual use is to conceal information
from people who do not want to read it.
It relies on their cooperation, like a door that can be shut for privacy, but stays unlocked.
If you want to defend your privacy from an adversary, you will need to have a lock on
that door, so that only people with a key can open it.
In information terms, that lock is a code, and the key is information.
Information that Eve lacks about which code Alice and Bob are using.
To decide how secure a cipher is, we must make an assumption about how much the eavesdropper
knows.
The standard assumption in cryptography is called Kerkoffs principle after the 19th century
cryptographer August Kerkoffs, who first recommended it.
To be on the safe side, Kerkoffs said we should assume that the eavesdropper knows in a general
way what type of cipher is actually being used.
Eve, for instance, might know that Alice and Bob are using a Caesar shift cipher of
some kind, but not how many places the letters are shifted.
If you've come this far in our lectures, you will be unsurprised to learn that Claude
Shannon was very interested in cryptography.
He worked on cryptography during the Second World War, and that work was one of the inspirations
for information theory.
We'll say more about Shannon's wartime work and the ideas that came from it later
on.
Shannon rediscovered Kerkoffs principle and gave it an especially piffy form that we
now call Shannon's maxim.
The enemy knows the system.
In Shannon's terms, a cryptographic system is a whole set of possible codes that Alice
and Bob might use.
Eve does not know which code they are using at the moment, but we must assume that she
does know what the possibilities are.
The information that Eve does not have, the choice of code within the system, is called
the key to the code.
And just like a mechanical lock, a cryptographic system is secure if the entropy of the key
is high enough so that Eve would have a hard time guessing it.
If our cryptographic system is a Caesar shift cipher, the key is the amount by which we
shift each letter.
We can simply note how the plain text letter A is to be encrypted.
All of the other letters follow from that.
Julius Caesar's original cipher has the key X since A is shifted to X.
Augustus' cipher had the key B since A is shifted to B.
Rote 13 has the key N since A is shifted to N.
There are only 26 possible keys.
The entropy of the key is very low, log 2 of 26 which is 4.7 bits.
So the Caesar shift cipher is not a very secure cryptographic system.
It would not be too difficult for Eve just to try all 26 possible keys on some cipher
text.
Most of these would yield nonsense, but one would result in a meaningful message.
We need a system with more possibilities, more key information.
A Caesar shift cipher is a type of substitution cipher in which we replace letters by other
letters or other symbols according to a constant rule.
But there are many more ways to do that than a simple shift around the alphabet circle.
We can represent this more general sort of code by a table with the plain text letters
along the top and the corresponding cipher text letters below.
The bottom row is a reordering or permutation of the top row.
So how many permutations of 26 letters are there?
As we fill in the bottom row we have 26 possible choices for the first letter, then, since
we've already used one letter, 25 choices for the second, 24 choices for the third,
and so on.
The total number of permutations is 26 factorial, 26 times 25 times 24, etc., etc., times 2
times 1.
This number is represented by a 26 followed by an exclamation point, and it is huge, roughly
a 4 followed by 26 zeros, or 400 trillion trillion.
That's the number of possible substitution ciphers.
In this system the entropy of the key, the amount of key information, is therefore log
2 of 26 factorial, which is 88 bits.
So a general substitution cipher is much more secure than a Caesar shift.
But cryptography tells us that a substitution cipher is not all that secure.
You see, cryptography is not only about using codes to keep your own messages private, it
is also about figuring out the codes that other people are using to conceal their secrets.
This is called cryptanalysis, and we can think of it as the Eve branch of cryptography.
If Alice and Bob use a simple substitution cipher, and if their message is not too short,
then Eve can use the techniques of cryptanalysis to break their code and read the plain text.
The cryptanalysis of a substitution cipher is the subject of at least two famous short
stories from the 19th century.
The first is The Gold Bug by Edgar Allen Poe, in which the protagonist decrypts an enciphered
message to find the location of a buried pirate treasure.
The second, and my favorite, is The Adventure of the Dancing Men by Sir Arthur Conan Doyle.
In this story, Sherlock Holmes is presented with a series of messages written in a code
in which each letter is represented by a stick figure in one position or another.
The Adventure of the Dancing Men is one of the stories collected in the book The Return
of Sherlock Holmes.
That was the book we used in lecture 4 to analyze the statistical properties of English,
and that is appropriate, because the way that Holmes unlocks the Dancing Men cipher, and
that post-protagonist finds the treasure, is by using those statistical properties,
the fact that different letters occur with different frequencies, and that not all combinations
of letters are real English words.
Breaking a substitution cipher is fun, and you may already have experience of it.
Puzzles of this kind are sometimes printed in the daily newspaper right next to the crossword.
The technique for solving them is instructive, so let's work through an example.
We begin with a cipher text.
I've left the spaces in to make things easier.
We know that the plain text is an English phrase or sentence, and that the code used
is one of the 400 trillion trillion possible substitution ciphers.
Our first step to break the code is to examine the frequencies of letters in the cipher text.
The most common letter by far is W, which occurs seven times, so W probably means the
letter E, which is the most common letter in English.
The next two most common cipher text letters are V and L, which each occur four times,
and the next most common English letters are T, A, and O. These are all good candidates,
and it is a little hard to say which letters are which.
Looking at the message, though, I like the hypothesis that cipher text L stands for T.
That's because we have a three-letter word T-something-E, which could easily be T-H-E,
the most common English word, so we'll tentatively put that in.
We also note a two-letter word T-something, which is almost certainly T-O.
That would mean that cipher text V represents O, which fits in with the letter frequencies,
and it also helps to confirm our previous guess about T.
The two words at the beginning, something O, something OT, look like do not.
That isn't certain.
It could be no dot, but the other possibilities don't make as much sense.
So we hypothesize that S represents D and X represents N.
The last word, E-in-E, something-something, in English there are very few words of that
pattern.
Almost certainly it means enemy.
What's left?
The most common letter in the cipher text that we have not yet decrypted is P, which occurs
three times, so it most likely stands for a common English letter.
But which one?
The next most common plain text letters we haven't yet seen are A and I and S, but when
we try each of these for P, we get stuck.
Nothing seems to make sense.
After that, the next most frequent letter is R, which works much better.
That word O-something R is probably R, and the word something E-something-R-E-T looks
a lot like secret.
Once we begin to understand the sense of the message, we can quickly fill in the remaining
pieces.
Our cryptanalysis is complete.
In this sort of problem, we proceed by a series of guesses, guided by the frequencies of the
letters and the combinations of letters that make words.
And sometimes we guess wrong, but when that happens, we soon find ourselves at a dead
end unable to continue.
Then we go back and try something else.
The correct guesses reinforce each other and do not lead to dead ends.
The basic technique we've used to break the substitution cipher is called frequency
analysis.
It has been around quite a long time.
The Arab philosopher al-Kindi described it a thousand years before Sherlock Holmes.
Since it depends on the statistics of the plain text, it only works if the message is
long enough.
A short message can be far from average.
In the plain text, go to London, only 10 letters long, the most common letter is O, and E does
not even appear.
If our only cipher text were the encrypted form of this message, we'd be hard pressed
to figure it out.
Since a substitution cipher is vulnerable to frequency analysis at least for long messages,
cryptographers have spent centuries finding ways to make better, less vulnerable ciphers.
One of the most significant of these was the Viginaire cipher, named after the 16th century
French diplomat Blaise de Viginaire, though he was not quite the first to describe it.
The Viginaire cipher is straightforward to use and it is much harder to break than a
simple substitution cipher.
Indeed, it became known as the chiffre en des chiffrables, the indecipherable cipher.
The indecipherable cipher was used by the Confederate army during the American Civil
War.
Both sides in that war used many different codes, military couriers carrying orders and
situation reports were often captured.
And even worse, teams of enemy scouts with portable telegraph sets could infiltrate
your territory and tap into your military telegraph lines.
I say that's worse because if that happens, you have no way of knowing that your messages
have been intercepted.
Therefore, even messages sent by telegraph needed to be encrypted.
Now here is a replica of a Confederate army cipher disc, which would have been carried
by a signal officer.
The replica is made of wood rather than brass, but is otherwise completely faithful.
CSA stands for Confederate States of America, and the smaller SS below it probably means
Secret Service.
The two wheels have alphabet circles like we used for the Caesar cipher.
The inner wheel, which is fixed, corresponds to the plain text of the message, and the
outer wheel, which rotates, corresponds to the cipher text.
The cipher disc makes a Caesar shift cipher very easy.
Caesar's original used the key letter X, so we can rotate the outer wheel to make X line
up with the A. Now all the plain text letters are nicely lined up with the corresponding
cipher text letters, and we can quickly encrypt or decrypt our messages.
A Caesar cipher has only a single letter as its key.
The key to a visionary cipher is a whole word or phrase, a sequence of letters.
To illustrate, let's suppose the key word is victory.
We write the key word over and over on one line, victory, victory, victory.
Underneath it we write the letters of our plain text message, attack at dawn.
Notice that we are leaving out the spaces, no need to make things any easier for the
enemy.
Now we use the cipher disc to encipher each letter in the plain text, using the key phrase
to decide how to shift the wheel.
So the first letter uses the V shift, so A is lined up with V.
And plain text A becomes cipher text V. The second letter uses the I shift, so A is lined
up with I.
And plain text T becomes cipher text B. And so on.
For convenience in transmission, we can break the cipher text in groups of four, VBVT, QBYO,
LCPG, that's the message we send in Morse code over the telegraph.
Because the Vigenere cipher uses a phrase of many letters for its key, it has lots more
possible keys than a Caesar cipher.
A higher key entropy makes the code more secure.
Our example was the seven letter word victory, but we could choose a key as long as we like.
The only limit is our imagination.
The analysis is hopeless for breaking the Vigenere cipher.
The same letter is enciphered several different ways, depending on where it appears in the
message.
In our short message, plain text A appears as cipher text V, T, Y, and C. Cipher text
B represents plain text T, K, and N.
Therefore the statistical regularities of English text are continually hidden by the
continually shifting cipher.
The Confederate army had at its disposal a very good cryptosystem, more or less state
of the art for the mid-19th century.
However, they used it very poorly.
They reused the same handful of key phrases over and over again throughout the war.
And some of those phrases were pretty easy to guess.
One common key was actually complete victory.
As a consequence, the Union was often able to break the Confederate code and read intercepted
messages.
As any cryptanalyst can tell you, no cryptosystem is better than the people who use it.
By the time of the Civil War, however, there already existed a technique for breaking la
chifra on the chifrable.
It had been devised by none other than Charles Babbage, the English inventor of mechanical
computers.
Though Babbage did not publish his method, it was rediscovered later and published by
the German Friedrich Kasiski.
To use the Babbage-Kasiski method, we need a long ciphertext, much longer than the key
phrase.
And our first task is to deduce how long that key phrase is.
So we begin with an intercepted ciphertext message.
Now English is full of short sequences of letters that occur very frequently.
The common words T-H-E and A-N-D are such sequences.
And there are also others.
These common sequences will probably occur many times in the message, and sometimes,
by chance, they will line up with the key phrase in exactly the same way several times.
That means they will be encoded in exactly the same way.
So we search through the ciphertext to find groups of letters that repeat.
Now here the four-letter sequence R-D-W-P appears three times.
That might be coincidence, but the odds are that this represents the same four letters
in the plaintext repeated in three places, lined up in exactly the same way with the
key phrase.
The first two are separated by 21 letters, and the next jump is 28 letters.
So that suggests that the key has 7 letters, because 7 evenly divides both 21 and 28.
So we break the ciphertext up into 7-letter chunks.
If we are right about the key length, each column is encrypted using the same key letter.
So we can use frequency analysis on each column separately to figure that letter out.
And as usual, our cryptanalysis proceeds by a series of plausible guesses.
In correct guesses, quickly lead to dead ends.
Correct guesses open up further possibilities.
And in the end, we can solve the plaintext and figure out the key word, victory.
That repeated four-letter sequence turns out to be T-I-O-N, a common letter group in English.
The long struggle between encryption and cryptanalysis between concealing secrets and uncovering
them poses a fundamental question for the science of information.
Is it true that any cipher can be broken by a clever enough analysis?
Or might we find a true La Cifra on the Cifrable, a secret code that is perfectly secure?
That's the question we will begin to answer next time.
The man who discovered the answer was Claude Shannon.
His amazing study of cryptography, begun during World War II, was one of the sources of, and
one of the first applications of, the ideas of information theory.
His work profoundly changed the way we think about secrecy, and his insights lie at the
mathematical heart of every method of cryptanalysis.
