Compsci 201
Collections, Hashing, Objects

Glitchy App?

Susan Rodger
February 5, 2020

2/5/2020

CompSci 201, Spring 2020

1

2/5/2020

CompSci 201, Spring 2020

2

Glitchy App?

H is for …

• Hashing

• What better way to have a bucket list?

• Hexadecimal

• ABC is 10,11,12
• Base 16 > Base 2?

2/5/2020

CompSci 201, Spring 2020

3

2/5/2020

CompSci 201, Spring 2020

4

Announcements

PFWBVDW

• Assignment P2 out later this week
• APT-3 due Tues, Feb 4, Extended to Thurs Feb 6

• Last chance to turn in Friday til 11:59pm

• Interfaces: List, Set, and Map

• When it makes sense to use general type
• Empirical and Analytical measures of efficiency

• Discussion 5 on Feb 10
• Prepare for exam
• Exam next week, Feb 14

• Maps: API and Problem Solving

• Keys and Values 

• Big-Oh and O-Notation

• Building a mathematical formalism with intuition

2/5/2020

CompSci 201, Spring 2020

5

2/5/2020

CompSci 201, Spring 2020

6

Midterm Coming Feb 14
• How much code have you written with paper and a 

writing utensil?
• Tests should measure what you've practiced
• Practice writing code on paper! 

• Midterm review and previous tests

• These are the best practice available
• Will practice in Discussion

• Logistics

• Start on time, end on time, accommodations
• 1 page front and back of notes you bring and leave

Breakfast 201 was yummy!

• Wed. Feb 5 9:30am
• 30 minutes, discuss whatever with me
• Enjoy breakfast
• More breakfasts comingl…

2/5/2020

CompSci 201, Spring 2020

7

2/5/2020

CompSci 201, Spring 2020

8

The hashCode contract

When Strings Collide

• Every object has .hashCode() method

• Inherited from Object, but typically overridden
• Use @Override and read online

• Must respect .equals(): If a.equals(b) ?
• a.hashCode() == b.hashCode()
• Converse not true! There will be collisions

• Generate strings that will collide
• Find such strings in the wild

String

hashCode

String

hashCode

ayay

ayBZ

bZay

bZbZ

3009136

3009136

3009136

3009136

buzzards

-931102253

righto

snitz

-931102253

109586548

unprecludible 109586548

2/5/2020

CompSci 201, Spring 2020

9

2/5/2020

CompSci 201, Spring 2020

10

Default: Object.equals, .hashCode
When you do not override…

• For Objects p and q:

• p.equals(q) is the same as p == q
• Do p and q reference/point to same object

• For Object p

• For Object p

• p.hashCode() is location in memory of object

• Thus: if p == q then 

• p.hashCode() == q.hashCode()

Default: Object.equals, .hashCode
When you do not override…

• For Objects p and q:

• p.equals(q) is the same as p == q
• Do p and q reference/point to same object

BE SURE 
TO

• p.hashCode() is location in memory of object

• Thus: if p == q then 

• p.hashCode() == q.hashCode()

OVERRIDE

2/5/2020

CompSci 201, Spring 2020

11

2/5/2020

CompSci 201, Spring 2020

12

Summary: ArrayList and HashSet

When Strings Collide

• Both have .add, .addAll,  and more

• Both iterable:for(Elt e : collection)

• Both have .contains leveraging .equals

• HashSet also uses .hashCode to reduce the 

collection iterated over: locker collisions

• Object hygiene when developing your classes

• .toString(), .equals(), .hashCode()

https://www.youtube.com/watch?v=HeTShE2PiQI

2/5/2020

CompSci 201, Spring 2020

13

2/5/2020

CompSci 201, Spring 2020

14

When Strings Collide

Concept: Inheritance

• Generate strings that will collide
• Find such strings in the wild

String

hashCode

String

hashCode

ayay

ayBZ

bZay

bZbZ

3009136

3009136

3009136

3009136

buzzards

-931102253

righto

snitz

-931102253

109586548

unprecludible 109586548

• In Java, every class extends Object

• Gets methods by default: .toString, .hashCode, 

.equals, and more

• Inherit method + implementation

• Subclasscan overridebase class methods

• Make .equals work for Point class

2/5/2020

CompSci 201, Spring 2020

15

2/5/2020

CompSci 201, Spring 2020

16

Work in 201

Alphabetical Order

• How important are APTs?

• How important are APT quizzes?

• How important are assignments?

• Earlier assignments, later assignments?

• How important: reading and WOTO in-class

• How important is reading?

• Encryption? Maybe not

• https://www2.cs.duke.edu/csed/newapt/encryption.html
• Think about high-level algorithm
• Apply your algorithm to: "pop", "array", "deeds"

• What do we need to do to code algorithm?

• Recall: 'b' + 1 == 'c'
• Recall: array['h'] is allowed, 'h' can be index

2/5/2020

CompSci 201, Spring 2020

17

2/5/2020

CompSci 201, Spring 2020

18

Idea with Encryption APT

Idea with Encryption APT

int[] allchars = new int[256];
int nextLet is    'a'
String answer = "";

message is  feed
answer is 

ch is 

96
97
98
99
100
101
102
103

0
0
0
0
0
0
0
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

Iterate over chars in message

int[] allchars = new int[256];
int nextLet is    'a'
String answer = "";

message is  feed
answer is 

ch is

96
97
98
99
100
101
102
103

0
0
0
0
0
0
0
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

2/5/2020

CompSci 201, Spring 2020

19

2/5/2020

CompSci 201, Spring 2020

20

Idea with Encryption APT

Iterate over chars in message

Idea with Encryption APT
Update nextLet

int[] allchars = new int[256];
int nextLet is    'a'
String answer = "";

message is  feed
answer is

“a”

ch is 

‘f’

96
97
97
98
98
99
99
100
100
101
101
1021
102
103
1

0
0
0
0
0
0
0
0
‘a’
0
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

int[] allchars = new int[256];
int nextLet is    ‘b'
String answer = "";

message is  feed
answer is

“a”

ch is 

‘f’

96
97
98
99
100
101
102
103

0
0
0
0
0
0
‘a’

0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

2/5/2020

CompSci 201, Spring 2020

21

2/5/2020

CompSci 201, Spring 2020

22

Idea with Encryption APT

Idea with Encryption APT

Process next character

Process next character

int[] allchars = new int[256];
int nextLet is    ‘b'
String answer = "";

message is  feed
answer is

“a”

ch is 

‘e’

96
97
98
99
100
101
102
103

0
0
0
0
0
0
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

int[] allchars = new int[256];
int nextLet is    ‘b'
String answer = "";

message is  feed
answer is

“a”

ch is 

‘e’

96
97
97
98
98
99
99
100
100
1011
101
1
102
103
1

0
0
0
0
0
0
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

2/5/2020

CompSci 201, Spring 2020

23

2/5/2020

CompSci 201, Spring 2020

24

Idea with Encryption APT
Update answer

Idea with Encryption APT
Update nextLet

int[] allchars = new int[256];
int nextLet is    ‘b'
String answer = "";

message is  feed
answer is

“ab”

ch is 

‘e’

96
97
98
99
100
101
102
103

0
0
0
0
0
‘b’
‘a’

0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";

message is  feed
answer is

“ab”

ch is 

‘e’

96
97
98
99
100
101
102
103

0
0
0
0
0
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

2/5/2020

CompSci 201, Spring 2020

25

2/5/2020

CompSci 201, Spring 2020

26

Idea with Encryption APT

Idea with Encryption APT

Process next character

‘e’ already has a value, use it

int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";

message is  feed
answer is

“ab”

ch is 

‘e’

96
97
98
99
100
101
102
103

0
0
0
0

0
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";

message is  feed
answer is

“ab”

ch is 

‘e’

96
97
98
99
100
1
101
1
102
103
1

0
0
0
0

0
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

2/5/2020

CompSci 201, Spring 2020

27

2/5/2020

CompSci 201, Spring 2020

28

Idea with Encryption APT
Update answer

Idea with Encryption APT

Don’t update nextLet

int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";

message is  feed
“abb”
answer is

ch is 

‘e’

96
97
98
99
100
101
102
103

0
0
0
0

0
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";

message is  feed
“abb”
answer is

ch is 

‘e’

96
97
98
99
100
101
102
103

0
0
0
0

0
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

2/5/2020

CompSci 201, Spring 2020

29

2/5/2020

CompSci 201, Spring 2020

30

Idea with Encryption APT

Idea with Encryption APT

Process next character

Process next character

int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";

message is  feed
“abb”
answer is

ch is 

‘d’

96
97
98
99
100
101
102
103

0
0
0
0

0
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";

message is  feed
ed
b”
“abb”
answer is

ch is 

‘d’

96
97
97
98
98
99
99
0010
100
10
101
10
102
103
10

0
0
0
0
‘c’
0
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

2/5/2020

CompSci 201, Spring 2020

31

2/5/2020

CompSci 201, Spring 2020

32

Idea with Encryption APT
Update answer

Idea with Encryption APT

Word translated, Update nextLet

int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";

message is  feed
“abbc”
answer is

ch is 

‘d’

96
97
98
99
100
101
102
103

0
0
0
0
‘c’
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

int[] allchars = new int[256];
int nextLet is    ‘d'
String answer = "";

message is  feed
“abbc”
answer is

ch is 

‘d’

96
97
98
99
100
101
102
103

0
0
0
0
‘c’
‘b’
‘a’
0

‘a’
‘b’
‘c’
‘d’
‘e’
‘f’

‘g’

2/5/2020

CompSci 201, Spring 2020

33

2/5/2020

CompSci 201, Spring 2020

34

How often does a string occur?

How often does a string occur?

• Strings stored in ArrayList?

• Call 

• Strings stored in ArrayList?

• Call 

Collections.frequency(list,word)

Collections.frequency(list,word)

• If in array a rather than ArrayList?

• If in array a rather than ArrayList?

Collections.frequency(Arrays.asList(a), word)

Collections.frequency(Arrays.asList(a), word)

ArrayList<String> list is
[“cat”, “cat”, “dog”, “fish”, “dog”, “cat”]

ArrayList<String> list is
[“cat”, “cat”, “dog”, “fish”, “dog”, “cat”]

Collections.frequency(list, “dog”) is
Collections.frequency(list, “cat”) is 

Collections.frequency(list, “dog”) is
Collections.frequency(list, “cat”) is 

2
3

2/5/2020

CompSci 201, Spring 2020

36

2/5/2020

CompSci 201, Spring 2020

37

How often does a string occur?

WOTO (correctness counts)

• Is Collections.frequency efficient? Does it matter?

• Use Collections.frequency
• Can create parallel arrays or use HashMap
• Keep count[k] # occurrences of word[k]

• Use HashMap if you know that

http://bit.ly/201spring20-0205-1

2/5/2020

CompSci 201, Spring 2020

38

2/5/2020

CompSci 201, Spring 2020

39

Shafi Goldwasser

Why use an interface?

2012 Turing Award Winner

•
• RCS professor of computer science 

at MIT
• Twice Godel Prize winner
• Grace Murray Hopper Award
• National Academy
• Co-inventor of zero-knowledge 

proof protocols

Work on what you like, what 
feels right, I know of no other 
way to end up doing creative 
work

2/5/2020

CompSci 201, Spring 2020

40

2/5/2020

CompSci 201, Spring 2020

41

Why use an interface?

What is a Java Interface?

Bluetooth

• An enforceable abstraction: methods required

• Set, Map, List interfaces

• Can implement more than one interface
• Can extend only one base-class!

HDMI

Application
Programming
Interface

• Arguable: Mammal is an interface

• Do NOT inherit method implementations
• Do inherit methods (names, types, etc.)

2/5/2020

CompSci 201, Spring 2020

42

2/5/2020

CompSci 201, Spring 2020

43

Analogy: Mammals

Analogy: Mammals

• Dragon? 

• Dragon? 

• Mammals

• Birth to live young
• Hair
• Warm-blooded
• Like an interface!

• Mammals

• Birth to live young
• Hair
• Warm-blooded
• Like an interface!

X

2/5/2020

CompSci 201, Spring 2020

44

2/5/2020

CompSci 201, Spring 2020

45

Why use an Interface?

There are two kinds …

• Work with frameworks, e.g., java.util.Collection

• Iterable, Serializable, and more – use with Java

• ArrayList, LinkedList, TreeSet, HashSet all …

• .clear(), .contains(o), 

.addAll(..), .size(), … .toArray()

https://docs.oracle.com/en/java/javase/11/docs/api/j
ava.base/java/util/Collection.html

• There are 10 kinds of people in the world …
• Those who understand binary and …
• Is this funny?

• HashSet/HashMap and TreeSet/TreeMap
• Tradeoffs in efficiency, organization

• LinkedList/ArrayList

• Tradeoffs in efficiency, organization

2/5/2020

CompSci 201, Spring 2020

46

2/5/2020

CompSci 201, Spring 2020

47

Link v Array

• Getting between two elements
• Unsnap/Snap v Shift/Insert

Preliminaries

• List<..> is an interface in java.util

• LinkedList<..> and ArrayList<..>
• Implement the interface

• What is null?

• Variable value
• No object 
referenced

2/5/2020

CompSci 201, Spring 2020

48

2/5/2020

CompSci 201, Spring 2020

49

Benchmark: Empirical Analysis

list.remove(0)

• What is “faster”? LinkedList or ArrayList

• https://coursework.cs.duke.edu/201spring20/classcode/
• In class ListSplicer, method removeFirst

• List<String> parameter 
• ArrayList<String> argument passed
• LinkedList<String> argument passed

• Only call List<..> interface methods

• At runtime, call the actual object method
• LinkedList.add v ArrayList.add

2/5/2020

CompSci 201, Spring 2020

50

2/5/2020

CompSci 201, Spring 2020

51

list.remove(0) – where 
called

list.remove(0)

• What is “faster”? LinkedList or ArrayList

1.4

1.2

1

0.8

0.6

0.4

0.2

0

RemoveFirst

y = 0.0064x2 - 0.0156x + 0.0238
R² = 0.9984

y = -4E-05x + 0.0009

linked

array

Linear (linked)

Poly. (array)

2/5/2020

CompSci 201, Spring 2020

52

2/5/2020

CompSci 201, Spring 2020

53

Access all elements randomly

Access all elements randomly

• What is “faster”? LinkedList or ArrayList

• What is “faster”? LinkedList or ArrayList

25

20

15

10

5

0

Random Access

y = 0.1292x2 - 0.7137x + 1.3337
R² = 0.9889

10000 20000 30000 40000 50000 60000 70000 80000 90000 100000110000120000130000140000150000

linked

array

Poly. (linked)

Linear (array)

y = 0.0002x + 5E-05
R² = 0.8169

2/5/2020

CompSci 201, Spring 2020

54

2/5/2020

CompSci 201, Spring 2020

55

