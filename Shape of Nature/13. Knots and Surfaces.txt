Welcome back, and thanks for joining me again.
So far, we have completely classified surfaces.
Now remember, surfaces appear all around us.
Even though we live in a three-dimensional world,
what we see, what we perceive, are just surfaces of objects.
So thus, if we have a good understanding of surfaces,
the usefulness of this shows up in nature all the time.
The usefulness of this is important for scientists, engineers, and mathematicians.
Well, we have used colors, numbers, and polynomials
to try to distinguish one-dimensional objects, knots, and links many lectures ago.
And today, we are going to bring our understanding of surfaces and its classification
to help us attack the problem about knots from a higher-dimensional perspective.
We have, from the previous lecture, a complete classification of surfaces,
and for our invariance, we have, for knots and links, associated values of yes and no
for colorability, numbers, like crossing number, unknotting number on the right,
and polynomials, like the Jones polynomials to knots.
Well, today, using our classification of surfaces and our invariant ideas for knots,
we're going to bring them together to try to associate surfaces to knots.
Instead of giving it a number or a polynomial,
we're going to give the knot an entire surface and see what we can do.
Well, given a knot, our new goal is to find an orientable surface whose boundary is the knot.
Let's think about that. Given a knot, our new goal is to find an orientable surface
whose boundary of that surface is exactly the knot that you're given.
Remember, we want to worry about orientable surfaces
because when we got into the non-orientable case, like the Klein bottle or the projective plane,
things got not intuitive at all. It left our sense of comfort zone.
So let's stick with the orientable case, and this is a classic problem that mathematicians have struggled with.
Now, let's consider the trefoil. How can we build a surface whose boundary is this trefoil?
Well, one thing we can do is we can start shading the regions between the strands of the trefoil.
And as we do so for this particular projection, we get this surface.
Now, notice it's a surface. It's two-dimensional with boundary.
What is the boundary of the surface? Where can you fall off on the surface?
Well, it's everywhere where these lines are.
And as you walk around these strands, you see the boundary is exactly the trefoil, what we started off with.
Well, we have done what we wanted to do, create a surface whose boundary is the knot, but we wanted orientability.
So let's just check to make sure this surface is orientable, and then we'll be set.
The beautiful coloring, the shading trick of these knot projections seems to give surfaces for us.
So let's check orientability in this case.
Well, let's start by coloring this particular region, this particular region of my surface, red, and let's walk around.
Well, if this is red and I want it to be orientable, then as it twists, I need to reveal the underside of the surface, which must be blue.
Great. I'm going to twist again and make this red. That's great.
Now I twist back and make this blue, but this was red to start off with.
So thus, I can't shade it two different colors. There's only one color I can use, which means the surface is not orientable.
So although we have a surface whose boundary is the knot, it's not an orientable surface.
It's not a nice surface that we can really work with and understand.
So let's try another trick.
Let's take the same projection that we have and look at the complement of the shading.
Instead of shading the regions we started off with, let's shade the other regions that we missed.
Here's what it would look like.
It looks like a Halloween pumpkin.
Look what I've done. I've shaded everything, but the regions I shaded earlier.
But I wanted a finite surface with finite area, so notice that it's this sphere with this trough oil kind of carved out in the middle of it.
Now let's check if this surface is orientable.
Is it orientable? Well, we can color the entire sphere red, and as I come to the central region of this pumpkin-like object,
I need to twist, which means it becomes blue in the middle.
But then as I leave and go back to the sphere again, it twists back and becomes red.
So anytime I'm on the outside it's red, I come back in it's blue, it works beautifully.
I can actually use two colors.
And let's see if the boundary of this object is the sphere.
Although the entire object is a sphere except for this place, which is exactly the trough oil.
So we see it is an orientable surface with boundary to be the trough oil, just like we wanted.
Now what happens if I pick a different projection of the trough oil?
Remember how we started with a simple elegant three branch projection?
Let's pick a different one.
Let's take a look at this.
Now we've seen the surface before.
Let's color the left side of this trough oil projection red and the right side blue.
And as I go from the left to the right, I go from red and I twist over to blue,
and I go from blue and I can twist over to red again.
It is orientable.
This surface we've seen from the previous lecture is a surface that's homeomorphic to a genus one surface,
a torus with one boundary component, just exactly the trough oil.
So we've found this orientable surface on this case with this projection
and another orientable surface over here with this projection.
Fantastic.
Let's try it for another knot.
Let's see what we get.
For this figure eight knot, which is our next complicated kind of knot because it has crossing number four,
we see that if I start shading at one region, let's start with the left side.
I'm going to shade red.
And as I walk around, I need to twist to make it blue.
And I need to twist again to make it red on top.
And then I twist again.
And as I twist this last one, I need to make it blue again.
We started with red.
Now it's forced to be blue.
It's not orientable.
All right.
Great.
It's not orientable.
It wasn't over yet last time.
Let's try this complement trick, this pumpkin trick.
So I'm going to take my figure eight knot, put it in the same way I did before,
except I'm going to draw a sphere around it.
I'm going to take the sphere, carve the figure eight knot out.
And here I'm going to shade the entire sphere red.
And as I walk in from the bottom, it becomes blue.
And then I twist again to become red.
And I twist to go back into the sphere and it becomes blue.
But it was red in the first place.
This is not orientable either.
So it turns out for the figure eight knot, for this particular projection,
it's a quick fix of finding the surface, of just shading it in one color.
And then maybe if that didn't work, looking at the complement of this pumpkin trick,
if that didn't work, then maybe is there a different projection of the figure eight I need to use?
And are we just relegated to a case by case study for this,
based on trial and error and considering different projections?
Well, it turns out that this is not the end of the problem.
The power of a cipher algorithm is introduced.
Let me explain to you what I mean.
Herbert Cipher, a mathematician in 1934,
came up with an algorithm to create an orientable surface whose boundary is the knot you give it.
What is an algorithm?
Well, this is just a machine.
You feed this machine, you're not projection.
And it spits out for you from the machine the surface whose boundary is the knot diagram you gave it.
This is Cipher's amazing contribution.
So let's start by understanding what Cipher algorithm does.
The first thing we need to do is given any knot diagram, given any knot projection,
you begin by orienting the knot.
Let's take a look.
So here, let's start with a trough oil, because it's my simplest case to work with.
And we already know an answer to the trough oil.
Let's see what this algorithm does for us.
So here's my trough oil projection as given, and I've picked an orientation.
It doesn't matter what orientation I pick, I've just picked one.
Now, the first step was to pick the orientation.
The second step is to look at every crossing.
Remember, we always point our arrows up at every crossing, like we did before.
For when we consider the right.
Here we point our arrows up, and what I'm going to do is I'm going to just split,
regardless if it's an over crossing or an under crossing,
regardless if it's a positive slope or a negative slope,
I'm still going to split it right down the middle,
and I'm going to pull these crossings apart.
But I want to remember this crossing information for the future.
Don't throw it away, just keep that on the side of what really happened,
but I'm going to cut every crossing apart.
Now, what happens if I do this at every crossing?
If every crossing I've replaced it with a split,
it leaves us with a collection of disjoint circles.
It would look like, in this particular case, two circles.
All the crossings in the middle were split right through the center.
Now, what do we do with these circles?
These circles, by the way, are called ciphered circles,
because they're coming from ciphered's algorithm.
Well, I take these circles and I shade each one of them,
and I get discs.
These are the surfaces I'm going to build from.
So this is what cipher did.
He takes your projection, he cuts it up into circles,
he shades each one of them, he gets the surface,
but now this is not the surface you're looking for.
They're just a collection of discs.
The last step to go from this one-dimensional object
to two-dimensional object that we want
is we need to attach strips of paper to these circles.
We need to attach strips of surfaces to these circles
to form the completed surface.
So here are the ways we can do it.
If you have a crossing like this,
then the strips could look, for example, like this,
where there's a twist in your two-dimensional strip.
Or if your crossings look like this,
then here's another twist to this two-dimensional strip going this way.
Now, what happens if we put these strips back on?
Well, the way we put it back on
depends on the crossing information.
Remember how we took our crossings,
whether it was positive slope or negative slope, and split it?
Well, now we need to go back and remember
which it was in the first place.
So if it was a positive crossing,
we would put a strip that had a positive crossing on it.
And if it was a negative crossing,
we would put a strip that had a negative crossing on it.
So in this particular trefoil picture,
we would get a surface with two discs on either side.
And in the center,
we would have to remember the crossing information
and attach these strips.
So when I do so,
I get a strip in the bottom, a strip in the middle,
and a strip on top, attached perfectly.
And the crossing information that I originally had
in the diagram you gave me
is now preserved again.
So now I have a surface.
Fantastic. Its boundary is the knot.
Perfect.
And is it orientable?
Well, we've seen the surface before.
This is the surface we've just looked at earlier.
We can color the left side red
and the right side blue.
And as we twist,
we go from one to the other perfectly.
Now, let's consider some examples
of this procedure.
We've talked about how this works
for the trefoil,
but trefoil we already had an understanding of.
Our old shading trick actually worked.
The classic figure 8 knot,
which did not have an orientable surface,
is a more exciting object
to think about.
Let's take a look at what that would look like.
Here we have my figure 8 knot
with an orientation.
The first thing I do for Cypher's algorithm,
for Cypher's machine,
so the first thing I do is draw these arrows
and then I look at every arrow,
make sure they're both pointing up,
and I slice it. If they're both pointing up,
I slice it right through the middle
and have this vertical split every time.
And in this particular case, I need to slice it here,
here, here, and here.
And when I do this,
I end up with
three circles.
Now these circles, if you notice,
there's one in the bottom,
and there's two, one inside the other.
These are actually nested circles.
One is nested inside the other one.
But what that visually means is
one disc, remember we have to shade
these Cypher's circles and make them
discs to go from one dimension to two dimension.
These discs are actually sitting on top
of one another. So there's this big
disc in the bottom,
and another one is floating right on top.
This is a two-dimensional way of thinking
about what's going on in this flat two-dimensional paper.
Let's actually take a look now
to see how we would glue these
surfaces back.
When we glue the strips back
to get our full surface, it would look
something like this.
Remember our crossing information.
At each one of the four places I cut,
I have to re-glue my strips
again.
Now instead of showing it to you in terms
of a picture, let's actually build
it and see what happens. These are just pieces
of discs and pieces of strips
that I can glue the way I had
exactly to get the crossing information
I started with.
So let's look at this demo.
So here's what I have.
I have the central
Cypher's circle, which I've
shaded it in into a blue region.
And there is another circle
right here that's actually
nested, but remember in three dimensions
here, the surface is actually floating
on top of this. Now all of my circles
have two sides just to make sure
whether this is going to be orientable or not.
Remember I need to check that everything is two-sided
and my coloring works out perfectly.
Now that's two of my circles, my third
circle is over here, and I'm going to shade
this one red.
So here's what happens. I have one circle,
two circle, three circles. Now I need to attach
these strips exactly the same
way I did. Now I've shown you
what that picture looks like visually
in terms of what's on the screen, but let's
try to build it. So here I take
a strip and I glue it
to this part of my
surface, and I want to make sure the colors match up
to make it orientable. Instead of gluing, I'm just going to use
just a bunch of staples
to hold it together. And now notice the twist.
I need to twist it this way.
And notice as I twist it this way,
this is where the crossing information
appears from the figure eight knot.
So I twist it this way, and now I need to glue it
after I make this one
complete twist. I need to glue it to this
object. Here, that's exactly
what my figure eight knot tells me to do.
So here's my twisted version,
but notice so far the coloring works out beautifully.
It's blue here, and as it
twists, it becomes blue to the guy
under it. Perfect. That's one
of my guys. Well, the second thing I need
to do is I need to make a, make an object
that glues from this
part to this part with the strip.
So let me start here.
I start
with this strip here, and now I need to twist
it this way, exactly the way
the figure eight wants me to do it.
And as I twist it this way, I need to
glue it under here.
This is the tricky stapling
part.
And I glue it under here. Great.
So notice here's the three-dimensional
part of this. It's actually nested
above this object, right?
So now I have this third object
over here. That's in the front.
That's the third circle I have to work with.
And I have two strips again. One strip
attaches from this circle, which I glue
here.
And it attaches to this one.
And here the twist
looks like this.
Here I have this object, and this
thing twists over this other one.
It's great.
And now I have
this object right here
with another strip I'm going to attach.
And this strip
twists this way.
Notice how the crossing comes in.
This crossing comes over this to get to
the figure eight knot that I'm building.
Push it in a little bit.
And here's my surface.
So here's my entire surface.
It's a flat
two-dimensional surface that's in three
dimensions. And notice the coloring
works perfectly.
And if you trace the boundary of the surface
as you walk around
the boundary of the surface, this thing
comes here, it twists down,
and it reappears here. Here's my boundary.
And I'm tracing my boundary out.
You get exactly the figure eight knot
that we wanted. And notice,
it's orientable. I've made it so.
Here's blue. And the blue, although
twisted strip, stays blue perfectly.
And the blue goes to the blue.
Here the blue again, twists
under here. Remember, it was red
to begin with here. And it comes back
and becomes blue again. This is my surface.
You can actually build it at home
to say that this is Seifert's algorithm.
It's a physical, constructive
procedure, and not a theoretical
procedure at all.
The classic
trough oil projection also
has a different
Seifert procedure working on it.
Here we have this trough oil projection.
Remember how previously we used the Seifert algorithm
for a different trough oil projection.
Here's the classic one with
the three weaves that gave us the name
trough oil. So if I take these three
crossings we get from the trough
oil, after I orient them,
I cut the crossings, this vertical
splits for each one of them. I get
two different surfaces.
Remember, this nesting again is one on top
of the other one. And I get these three
lines in advance. I can glue
these three strips up
exactly the way I want it to
and get, again, a surface.
Now, is the
Seifert surface I get here orientable?
We see it for the figure eight knot.
We actually built it for the figure eight knot.
But what about for this particular
projection of the trough oil?
Well, we can see that the top region
can be colored blue. And then
as you twist it becomes blue
on the inside, but it becomes red
on the outside. In fact, this particular
projection we get
gives us the surface that the
Seifert algorithm produces, which is
exactly that Halloween
sphere-like object with the trough
oil cutout. That's exactly this
if you do some rubber sheet
geometry deformation.
So we see that the algorithm
produces surfaces whose boundary
is the knot. And in all
the cases we've tried, we see that it
always becomes orientable.
So we have something that works.
But why must
they always be orientable?
It's easy to convince ourselves
that they're always going to produce
the boundary of the surface
being the knot, because we cut
the surface up into pieces, and then we
reglue exactly the way we cut.
So of course the boundary is going to be the knot
you started off with. But why must
they be orientable? What is the reasoning?
Let's take a look.
Here we see
an example of why it must work
for the figure eight knot. Now
we built this, so we know it works.
But here's the reason why going on
behind the scenes. Now
recall that our knot begins with an orientation
as you see here. And
notice every time I cut this into
pieces, the Seifert circle
inherits the orientation
from the knot. Each Seifert
circle gets its own orientation
based on the orientation of the knot itself.
It depends on the way we cut
the circle right down the middle.
Now if the circle is clockwise
oriented, let's color it blue
here and here.
And if it's counterclockwise oriented,
let's color it red
like here.
Now by the way we have designed
our cuts of our crossings to get the
circles in the first place, it turns out
that if a circle is adjacent
to another one, if they're next to each
other, they must have opposite
orientations. And if a circle
is on top of another one, if it's nested
they must have the same orientations.
You can check that this is always going to be the case.
Now what does
adding in strips give us?
It gives us a consistency
of colors.
So if something is next to one, look what happens
again in this demonstration.
If this object is next to something
then when you put this strip twist
since it's next to it, it goes from blue
and it switches to red.
The strips behave perfectly.
On the other hand, if it's on top of something
then the strip twists
and it goes under perfectly
so the colorings match up.
Thus we see that orientation
is preserved according
to Seifert's algorithm.
Now based on this elegant procedure
how do surfaces
help us better understand knots?
Well each
of our orientable surface has
one boundary component.
If you give a knot projection
to Seifert's algorithm
it spits out a surface
whose boundary is the knot
and we know that this surface that you have
is orientable and it has one boundary component.
What we're going to do
is we're going to cap off this boundary component
and when we cap off
we glue a face
onto the entire boundary.
Now it might seem like it's going to intersect
but this is a homeomorphic gluing.
This is a topological gluing.
So I'm just going to pretend
there's an entire thing off.
There's one boundary and we're just going to cap it off
and we get at the end of the day
an orientable surface
without boundary.
But from our previous lecture
we know that surfaces have fully been classified.
Thus if it's an orientable surface
it has no boundary
then genus completely determines it.
Or in other words, Euler characteristic
completely determines it.
That's what our previous theorem told us.
So we can associate
not this genus of the surface.
So given a knot
you feed it into Cypher's algorithm
it gives you a surface that's orientable.
You cap off this surface
now you have a surface
without boundary and that's orientable.
So it must have a genus.
So I'm going to take this genus
and give it to my knot and say
now I have a knot invariant.
Now I have something associated to my knot
that's the genus of this surface
that you get from building the knot.
That's a beautiful idea.
Now this is just make-believe so far.
This is my dream.
I hope I can give this genus to this knot.
I haven't shown a thing about being invariant at all.
That's my dream.
Let's see what we can do.
Consider the unknot.
If I take a look at the picture of the unknot
here I start with a circle.
I shade it in, I get a disk.
Now I can cap the disk off and I get a sphere.
The sphere has genus 0.
So to the unknot I'm going to give it the value 0.
That's good.
Intuitively it makes sense.
It turns out that the unknot is the only knot
that you can possibly make into a sphere.
Any other knot is going to be more complicated than this.
Let's take a look at the trough oil.
The trough oil here,
like we did earlier,
will give us a genus 1.
Exactly like we calculated last time.
It's going to be a torus
with one boundary component.
So to the trough oil I can give it genus 1.
I can give it the value 1
as trying to make it into an invariant.
Now since we have
Euler characteristic with us,
there's a quick way to find the genus of a surface
based on Seifert's algorithm.
And here's the quick way.
Instead of worrying about cutting the surface up
into pieces, vertices, edges and faces
and trying to find the Euler characteristic,
there's a beautiful method
which is actually not too hard to show.
If C is the number of
crossings in your knot
projection
and D is the number of shaded
discs we get,
then the genus of the surface
must be given by
C minus D plus 1
divided by 2.
And it's not too hard to see because
the way we're constructing it using Seifert's algorithm
breaks our object into
pieces anyway, into these faces.
So we might as well just count the faces
and the way they glue and this result
quite immediately falls out.
Let's consider some examples
to see what we have looked at.
Look at this first example of the trefoil.
We've seen this before.
Well, the number of crossings in this projection is 3
and the number of discs we have
here is 2.
We have 2 Seifert discs
and thus the genus, according to our formula
is going to be 3
minus 2 plus 1
divided by 2, which is 1.
Now let's look at this projection
here of the figure 8 knot that we built.
Here it might see the number of
crossings you see is 4, so C is 4,
D is 3 because you get
3 discs that we glued together
in our demonstration to build
our object and thus
our genus has to be 1.
And what about this last object here?
The trefoil, the classic projection
of the trefoil. Here we see the crossing
is 3, the disc,
the number of discs we get is 2
and the genus is 1. In all
these objects we get the genus to be 1.
That's great. It looks fine so far.
And when we look at these pictures,
now they don't look like surfaces
of genus 1 again.
Remember that's because of our intrinsic
extrinsic issues. Intrinsically
intrinsically
all are going to be surfaces of genus 1.
But extrinsically we're emphasizing
the boundary and not the genus.
But here again
let's look at this next example.
What happens
when we look at a different projection
of the same knot? We've considered
two different projections of the trefoil.
But let's look at a different projection
of the trefoil again.
Here I take my trefoil
and I'm going to do a right-of-myster 3 move.
Just pull the strand right under here.
Now notice that after I
do this and after I take an orientation
I can cut this up into pieces by my Cyphords algorithm.
Now to compute my genus
I don't even have to finish drawing the surface.
I know what my C is. I have
seven crossings in this new
projection of the trefoil. I have four
disks from my Cyphords algorithm
and so my genus has
to be 2 from the formula
we had earlier.
But wait, we always got
genus to be 1.
Remember the previous two examples of the trefoil
gave me genus 1. No matter which
way I had previously drawn the trefoil
I got genus 1.
And now you see that I get genus to be 2.
So we see
that surface, the surface
that we're giving to the knot
genus is not a knot invariant.
It depends on the projection
you give it.
Well this is sad news.
But a mathematician tries
to salvage whatever he or she
can get. Remember the trick with the rife.
So we perform an old
trick we did earlier with the crossing number
and the knotting number. And here's
what the official definition
of the genus of a knot is.
The genus of a knot
is the lowest genus
of any orientable surface
bounding the knot.
So no matter what surface you pick
no matter how you find
a surface whose boundary is the knot
you can use Cybert's algorithm
you can come up with your own algorithm. It doesn't matter.
No matter how you do this
if you find a surface whose boundary is the knot
and the surface is orientable
find its genus. Do this for every
possible projection of the knot
and take the smallest one.
This is clearly an invariant
because you're picking the smallest one.
Same reason why the crossing number
was an invariant. So for instance
we see that the genus is one
for the trefoil and the figure eight
because we found it to be value one
and we know we can't get a genus any lower
than one or else we'll end up with the unknot.
So what are the properties
of the genus of the surface?
Well we know Cybert's algorithm
gives an orientable surface. We know this.
We proved this. Will it
always be able to give a surface
a minimal genus for some projection
of the knot? In other words
for any knot I want
can I find a projection of the knot
such that if I put it into Cybert's algorithm
the answer it gives me
is that minimal genus surface?
Amazingly
and unfortunately this was proven
to be false by Yoav Mariah
in 1987.
That is there are
knots for which the minimal
genus surface
cannot be obtained
by the Cybert algorithm for any
projection possible.
You need to find another way of constructing
these minimal genus surfaces
other than Cybert's algorithm.
Thus the Cybert algorithm is great
for orientable surfaces
but not necessarily for orientable
surfaces of minimal genus.
Now consider
another powerful theorem.
We have been struggling with how addition
of knots and invariance are related.
Remember we talked about the crossing number
and how the crossing number of two knots
added together is related to the crossing number
of each knot. This is one of the great
unsolved problems in math.
Well we have a theorem, not just
a conjecture about genus.
The theorem says that genus of knot one
plus the genus of knot two
must equal
the genus of knot one plus knot two.
We weren't able to prove this for crossing
number or unknotting number
but we can actually prove this for genus.
It is a beautiful proof
and it's actually not too
difficult to follow.
Well this genus theorem
answers a question we asked
in one of our earliest lectures.
We asked the question,
can two complicated knots
be added together to form the unknot?
Can you have
subtractions of knots?
Can they be so complicated that each one
magically cancels out to get the unknot?
Well by this theorem
we are guaranteed that this cannot happen.
Since the genus of the
two knots must be added together
to get this new genus.
If knot one and knot two
somehow when you added them together
gave you the unknot
then the genus of the unknot
we already know to be zero.
Then the genus of knot one
and genus of knot two must both be zero
to satisfy the formula
genus of knot one plus genus of knot two
equals the genus of knot one plus knot two.
This is zero if these guys have to be zero.
You can't have negative genus.
Thus the knots
knot one and knot two must be
unknot themselves.
We close with another remarkable
use of genus.
David Gabay was able to show
that the two mutant knots, the
kinoshita terasaka knots
have different genus.
This is how we were able to tell those apart.
Although so many other invariants fail
genus is strong enough to succeed.
We have brought the power of surfaces to knots.
Although it doesn't give us a
quite easy enough invariant
to understand and to calculate
fast it is powerful enough
to tell many knots apart.
Even better than the Jones polynomial
in some case.
It has helped us answer some of the questions that have been challenging us.
Addition makes knotting more
complicated and the distinction
between the classic mutant knots.
Well in the next lecture
we still focus on surfaces
but we switch gears from using surfaces for
1D into talking about wind
flows and hurricanes on surfaces.
Stay tuned.
