{"text": " So it was in the news that there's a 50 pound note coming out with Alan Turing on it. Now Alan Turing has been featured from time to time on our channel and rightly so. Dave's done some fabulous videos on all the work that he and a lot of others were doing at Bletchley Park, you know, cracking enigma. And it got me thinking, you know, now that we're in the 21st century and I've got a laptop that's much more powerful than all the chewing bombs put together, how easy is it to break enigma like today? But let's code it up and find out. The first thing I should say is Dave's done some really interesting videos on the history of enigma and do go and watch those. And it'll give you an idea of the sort of things they were doing to try and break enigma back during the 40s. Not to trivialise it, but it's really difficult, isn't it? It's really, really difficult. You know, this isn't something one does by hand, right? Not quickly. The enigma machine is not a stupid idea, right? It's well designed. The only thing that we've got now is much, much more processing power. And so things that we couldn't possibly brute force back then, maybe we can start to begin to brute force now, and that's what we're looking at today. So let's look very briefly at what an enigma machine is, and then we'll have a go at actually breaking one and see whether it holds up. If you recall, it has some lights on some letters and it has, this is my technical description, has some buttons that you press, keys are they called sometimes? So you press an A, right? You press an A and it goes into the machine and it goes through something called a plug board. And the plug board will swap it. So this is the plug board here. Now plugs just swap certain letters in pairs. So maybe this A comes out as A and F, right? Or something like that. Then this goes into the first rotor. And so that maybe comes out as a Q or something like that. So, you know, it sort of just wiggles around in here. And then this comes in, this comes out as maybe, you know, a P making this up. And then this goes into the next rotor. So stick to three rotor enigmas for today, hey? Comes out as a sort of an S. And then it goes through something called a reflector. So this is getting quite complicated, but this is all mechanical, right? These rotors literally physically turn around and they just have wires soldered from one end to the other that connect up. So the reflector just bounces, S goes to something else. I can't remember which letter it is. And then it goes back through this, like this. And then it comes around through the plug board again. So maybe that D goes to, I mean, A's over here. That was a bit silly of me, wasn't it? For the purposes of this, it's all absolutely fine. And this comes out as a Z, right? So in my weird botched enigma diagram, the A went in and it came out as a Z. It was an encrypted as a Z. Now, what's hard about this problem? Well, you can take these rotors out, right? Each rotor has different wiring. There's usually five or eight rotors to choose from and you can put them in any position you like. The next one is that every time you press a letter, one of the rotors rotates and sometimes it rotates the next rotors along. And that means that this mapping, this transformation changes every time you press a character. So you press A, it's not going to do the same thing again? No, actually, if you press A, the rotor first turns and then lights up a letter, right? So it's not going to do the same thing again. If you press A, A, A, A, A, A, the only thing you're guaranteed due to one of the quirks of enigmas is you won't get any A's back, but you'll get a lot of random letters. Back during the war, they solved this by trying to find possible rotor configurations that definitely couldn't work or could work based on some guest plain text. So maybe they had this idea that the first part of the message contained the word weather report and so if they put that in and then they could find all the encryptions that couldn't possibly have come out as weather report and so on and they could start to narrow down what their options were. Now, that's called a known plain text attack, but during the war, if they hadn't known the plain text, they wouldn't be able to crack a enigma bit. They didn't have the brute force power to do it. Nowadays, we have pretty fast laptops, right? And, you know, beyond my laptop, other computers are even faster than that, would you believe? So theoretically, we could start to try out some of these combinations, even if we didn't know any plain text. What we're going to be looking at, at least to begin with, is a cipher text-only attack. That's an attack where we've only got the cipher text. We don't have any idea what the plain text is and we want to see if we can guess what some of these settings would be. There's a few interesting weaknesses of enigma that make it a little bit practical to brute force, but not actually as much as you think. We talk a lot about how a letter doesn't encrypt ever to itself and that's quite relevant for plain text attacks, known plain text, because you can then work out where plain text definitely can't or could be. We're not doing that today, so I'm less worried about that particular property of enigma. More interesting to me is the fact that if you get some of the settings right, like you get this row to correct but these two wrong, that will often be better at decrypting than if you get them all wrong. So as we start to move slowly towards a solution, we get a little hint that maybe this cipher text isn't quite as good as it was and we can start measuring it. So really what we need to do is find some way of putting some cipher text into an enigma machine with some configuration and then reading the output and saying is that a plausible sentence or not. And preferably we'd like to do it really, really quickly because otherwise this could take a long time. So we're not going to be doing any deep learning, can't be bothered with that. We're going to use very simple statistical properties of text to try and measure whether one sentence is better as English than another sentence. And there's a few of these and I've implemented all of them because I thought well, let's just test them out. The first one is something called indexive coincidence. So let's suppose you have a cipher text. So for example, here it is. I'm just looking at random text, right? So yeah, okay. I'm just going to copy some random cipher text from here. So why can't I just randomize my own cipher text? I don't know. But I feel more comfortable copying it than I do just thinking up clever, interesting letters on my own. Well, so isn't there a number of files on the fact that I don't pick as random as I think and stuff like that? Z, E, B, H, W. This is some actual cipher text that we'll be breaking later. Does it honestly start with zoos as in Conrad's zoos? Yeah. In the reality of random, is it? Yeah, yeah, yeah, yeah. You see all kinds of words in the random cipher text and they mean absolutely nothing because it hasn't been decrypted yet. Oh, gee, yeah. Well, exactly. E, U. So let's suppose we have some cipher text like this. We guess some rotor settings and we put it through our enigma machine and that will decrypt it. Now, it will probably decrypt it incorrectly. But where we accidentally stumble upon the right plugs or we stumble upon the right rotor configuration, even for a briefly, we'll find that this decryption is slightly better than completely random, right? Because actually, mostly, this is completely random, right? Yes, we have this stipulation that letters can't turn to themselves. But generally speaking, it looks completely random. So this is what we get out. H, F. My writing is bad today. V, V, F, L, I, N, G. Now, the interesting thing about this is, I mean, it's complete nonsense, right? I'm not cracking any words on this, but I do recognise ING. Now, ING is a fairly common trigram or set of three characters in the English language, right? Now, that doesn't necessarily mean this is correct, but it's slightly more English, should we say, than this one, right? If we're measuring some amount of how English is this sentence, then it's a little bit closer than this. So maybe one of our rotors is in the right position and the others are wrong, right? Or our rotors are in the correct position, but our plugs are wrong, or something like this, right? And the idea is that we slowly go through different configurations of our enigma machine, I say slowly as fast as we can, right? And we measure statistical properties of these output sentences to find the ones that most closely resemble correct, decrypted text, right? And we can do this without looking at them. We don't have to look at them and say, well, that's a real word. We just measure statistical properties. So what are some of these statistical properties? Well, the first one is called the index of coincidence, or IOC. This is the probability that when you pick two letters at random, they'll be the same. So for example, if we randomly pick P and then we randomly pick P, that's versus the same. If we pick P and then L, they're not the same. You know, we won't write the form out. The form is not that complicated. So what you have to do is go through and count every single character and how many of each one there are. You produce a histogram and then you can calculate the index of coincidence based on this. Now, for random text, that is text that's been put through an enigma machine and not decrypted, the index of coincidence is usually something like 0.038, right? Which is basically everything's evenly distributed. There's nothing interesting going on there at all. But for decrypted English text, we usually get a higher index of coincidence about 0.067. And I think it's something like 0.072 for German text. One way of looking at it is it measures the fact that some characters have more higher probabilities than others. If everything's equally likely, you get something like this. If some characters are quite common and so they tend to come up in pairs, it starts to look a little bit higher, right? It never goes higher than this. So, well, you're not really. What we can do is we can work through our rotors, different rotors, different positions, different settings, and we can calculate our index of coincidence and we take the best scoring texts, right? So where our output has a higher index of coincidence, we think maybe we've got the rotor settings correct, right? And that's basically how it works. There's been a number file, right, where they actually got to use an enigma machine and I'm super jealous. They talked about the number of different combinations. So it's all very well saying, OK, we'll just go through all the rotor settings and work out, you know, what the best one is, right? Maybe if I have, you know, a super, super, super computer. But actually, enigma has a nifty weakness in this sense, right? Which is that if you get some of the settings correct, this will improve, right? If I get the rotor positions correct, even though the rotors are in slightly the wrong position, the result will be better than if I've got the wrong rotors in place, right? If I get one of the plug board settings, right, the results will be better than if I've got none of the plug board settings, right? Because basically fewer characters will be incorrect, right? Suthily. So you've got three out of, let's say, five rotors or eight rotors. So that's physically the three that happen to be in the machine at the time. Yeah, and you've got very different positions, right? So if for today we just talk about five rotors just because I've always been sitting here a little bit longer, then we've got 60 possible positions. One, we've got to choose three out of five, and then they can all go in any slot. You don't tend to have the same rotor twice, right? Because, I mean, they didn't have those duplicates of rotors. One set of them. Yeah, yeah, yeah. Yeah. So we've got that. Then for each of these, we have a start position from one to 26, which is, you know, what letter is showing on the top, right? Basically how rotated it is. So you've got the start position or the indicator setting. So there's, you know, times, I said, 26 of those times by three of the different rotors, right? Then you've got the ring setting. Now, the ring setting is essentially rotating the internals of the rotor. Now, actually, if we ignore the notch for a minute, which I'll talk about, if you rotate the ring and you rotate the actual whole rotor, they kind of cancel each other out. So it's about the notch position, really. The notch is when the rotor turns, it turns the next one along. And so the combination of your start position and your ring setting will mean where your notch is and then when it turns around. So you've got the ring settings, right? Which is going to be 26 times three again. Then we've got the plug board, which, as you know, swaps random characters, and that's got something like 10 different pairs out of 13 possible pairs. That's 150 trillion, I think, different combinations. That's, you know, out of reach of my laptop. Certainly when I'm doing all these decryptions as well and we're multiplied by all these things, right? The number file goes into much better detail on this. We're looking at five today because, again, I don't want to be here all day. It does get harder to solve and we'll talk about that. So this is a lot of combinations. It's too many combinations for me to go through, even with this nice little indictical coincidence thing, right? Even though when I get this exactly right, I will just get the plain text out and it will have a very nice indictical coincidence and I might be able to find it. So what do we do? Well, the weakness of enigma is that if we get some of these things right, even if the others are wrong, we get a little bit closer to the answer, usually. So, for example, if you get the correct three rotors in the correct positions and you get their start positions roughly correct, if your ring settings are wrong, all that will do is mess around with the notches. So you'll get bits of your plain text correct and then bits of cypher text and then bits of plain text and you get these kind of pockets of valid characters coming out of into the decryption. It will still score better on IOC or any other metric. So that's what we're going to do. And this is the same with the plugs. If we get the rotors and the start positions and the ring settings correct, then we can start to guess plugs. And generally speaking, if we guess one correctly, the output would be better and we can then move towards a solution. There's a lot of possible variations, but the fact that we can deal with some of them at a time makes this practical. If we had to brute force through all the different variations, it wouldn't be possible. That's the idea. So I've written some code to do this. If you want to have a go, I'll make my code available, but also there's a really good online tool called Crypto, which lets you do this in a visual way. We'll put a link to that in the description. But I've written some pretty simple code here. I implemented enigma machine because it was fun. And then I implemented a number of different fitness functions, which is how good is our decryption. Index of coincidence is one. I also maybe can talk about some others another time. So you were kind of sending some cypher text. I don't know what it is. And it's been encrypted by some enigma configuration with, I think, five plugs. The first thing I do is I go through all the different rotor configurations. And I find the one that has the highest index of coincidence score when it decrypts that message. So this is five different rotors, each one tried in each position and each starting position. So that's 26 for each one. So that's quite a few combinations, about 17,000. But 17,000 for a laptop in 2021, not such a big deal. It takes somewhere around 10 seconds or something like that. So you can see what it's doing now is it's stepping through the different rotors. So one, two, three, one, two, four, one, two, five. And we've done about 10 or 15 configurations already. And for each of these, it's going through all the different starting positions. But we're not looking at ring settings and we're not looking at plug board because that would just multiply this astronomically by the number of things we have to do. So we're already on rotor three in the left-hand side. We're keeping going. This same thing works exactly the same for eight rotors. It doesn't really change anything. It just takes slightly longer and I'm a bit lazy. So I have actually coded up the other rotors as well. Interestingly enough, some of the later rotors have two notches on, right? Which is not, it doesn't make any difference in terms of the cracking because... So that just means it turns the next one twice as often, right? Yeah, yeah, twice as often. Only really affects the first two rotors. The last one doesn't ever really turn that often. And it doesn't have any other rotors to turn. So here what we've got is we've got a list of the top performing rotor configurations. So two, five, three is the best performing rotor configuration. We start positions at 21, three, and 25. I'm using zero indexing, right? Which is not how you would normally do it in Enigma, but it's easier for my ray indexing to do this, right? And that has an index of, for instance, of 0.043, which is a lot higher than 38. I say it's a lot higher. It's a little bit higher. Good enough. So that suggests to me, I mean, we actually, I listed the top 10 here because sometimes you might not get the one on the top one. You might get the next rotor configuration or something like this. It's worth maybe, if you were trying to really actually pay attention to this, what you would do is maybe start doing further attacks on the top three rotor configurations just to keep your options open. So we're going to fix at two, five, and three because, you know, it saves time, right? So given rotors two, five, three from left to right and their starting positions, what we now can do is we can start to brute force through the ring settings. So we can find the best possible ring settings, right? Now, this is almost instant because there's now only a 600 or so of those, right? We don't need to try the left-hand rotor because it doesn't really rotate. And so we do that and it's already happened. And the best ring positions were 0, 3, 23. Right. Now, for zero, we ignore because it's not the ring possessing, remember, affects where the notch is and the left rotor doesn't turn anything over. It doesn't have any effect. So given that, this is the ciphertext we've got out. This was our original ciphertext and this is our slightly better ciphertext. Now, it still looks like total nonsense, right? But it has a much higher index of coincidence score than the original, which means in some sense it's less random. So if you look, you might start to see groups of letters that might be a real word. They might not. I don't know, right? But some of the real letters are going to come out here. We might not be able to see what they are. So given this, we can finally start addressing this really problematic plug board situation. Remember, there's far too many plug board combinations to realistically just try them all. But again, we have this wonderful benefit that if we get one of the plugs correct, the result will probably be better than if we got none of them right. So all we do is we go through each of the first 300 and so different possible plugs, just one at a time, and we see which the best one is. And then we fix it, and we do the next for the next one, and that's two plugs. And then we do for the next for the next one, and that's three plugs, right? And so on. And if we do that, we very quickly come up with a few sets of plugs. And our ciphertext is starting to look a lot better. So this is our ciphertext here. The first letters are nonsense, but then it's proposed to consider the quest. Consider the quest. Can machines think? See, now I'm starting to guess what this might be. I see what you've done here. This is the Alan Turing paper. So some of the letters are wrong, right? So it should be I propose to consider, and it's J propose to consider, right? And we're nearly there. But that's because when we optimize the rotor configuration, we fix the rings at 0000. So it was never going to find the exact correct thing. So essentially the turnover is slightly wrong. Everything's slightly wrong, but it's still pretty good. Now, if we go back to our original question as to how secure is Enigma, the answer is not very secure, right? The reason is not because it's trivial to break, right? This took me a little bit of effort. And for short messages where these fitness functions start to break down because you don't have enough information, they're actually very robust, right? For a 50 character message, very, very difficult to break using something like an index of coincidence. Because even if some of the letters start to appear right, there's not very many of them. The index is just noise. In the war, they limited or they attempted to limit messages to something like 200, 250 characters for this reason, because index of coincidence was already known, right? And there's now more powerful metrics like trigram scores and quadram scores, which I've also implemented, which often work better, particularly for the plug board. And so if you have a short message, you don't get very much information on the different frequencies of different groups of letters. And so there's really no way to know what's going on at all. And you get very lucky where you don't, and most likely you don't. But the other issue is, of course, the number of plugs. I've only done five plugs here, so I've cheated a bit, right? For most German messages that are sent using 10 plugs, you're going to need 1200 to 1500 characters before fitness functions are going to start to give you something, right? If you know what the plain text might be, this becomes much, much easier, right? Because if you can fix these characters have to be exactly this, your fitness function is much less noisy, right? And actually, I've implemented that as well. And it just starts breaking it like nobody's business, right? So it is crackable, right? If you can guess what plain text is. And of course, modern cryptography assumes you know what the plain text is, right? At least for some of the message. For example, whenever you send an HTTP message to a web server, the beginning bit always says HTTP get or something similar, right? But there's a very known structure to these things. You can start to guess what they would be. We can't assume that you wouldn't know what any of the plain text was. But even if we don't, you can see that these index of coincidence and trigam scores and things can start to tease out some information. So, going back to the beginning. Enigma is actually harder to crack than I thought, right? People always talk about how hard it was to crack during the war. And that's absolutely fine. But you just kind of assume that now it's 2021. Laptops should be able to just click, go through all the settings, find yourself the ciphertext. It doesn't really work that way, right? You have to try and stumble your way towards it. And often it doesn't work. And there's noise in the output. And so you have to try and work out whether what you're seeing is actually improvement or not, and so on, which I think is quite interesting. Modern ciphers don't have this problem. If you have a 128-bit AES key, you can't brute-force the first bit because the zero or one won't give you any better or worse plain text. It will just be nonsense each time. And that's true of any amount. So you can't do the first half of the key and then the second half of the key, which is kind of what we're doing here. So modern ciphers don't have this problem. And so on. We can't do a lot of interesting things with this image after just one set of convolutions, but we're getting there. So this one is starting to be transformed. Some of them are noisier than others. Some of them were paint associated with it, showing which was the proper setting with A at the top and A against the dot of paint.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 4.0, "text": " So it was in the news that there's a 50 pound note coming out with Alan Turing on it.", "tokens": [50364, 407, 309, 390, 294, 264, 2583, 300, 456, 311, 257, 2625, 12013, 3637, 1348, 484, 365, 16442, 314, 1345, 322, 309, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1584421841066275, "compression_ratio": 1.627831715210356, "no_speech_prob": 0.019984446465969086}, {"id": 1, "seek": 0, "start": 4.0, "end": 8.0, "text": " Now Alan Turing has been featured from time to time on our channel and rightly so.", "tokens": [50564, 823, 16442, 314, 1345, 575, 668, 13822, 490, 565, 281, 565, 322, 527, 2269, 293, 32879, 370, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1584421841066275, "compression_ratio": 1.627831715210356, "no_speech_prob": 0.019984446465969086}, {"id": 2, "seek": 0, "start": 8.0, "end": 13.0, "text": " Dave's done some fabulous videos on all the work that he and a lot of others were doing at Bletchley Park,", "tokens": [50764, 11017, 311, 1096, 512, 17692, 2145, 322, 439, 264, 589, 300, 415, 293, 257, 688, 295, 2357, 645, 884, 412, 2177, 7858, 3420, 4964, 11, 51014], "temperature": 0.0, "avg_logprob": -0.1584421841066275, "compression_ratio": 1.627831715210356, "no_speech_prob": 0.019984446465969086}, {"id": 3, "seek": 0, "start": 13.0, "end": 19.0, "text": " you know, cracking enigma. And it got me thinking, you know, now that we're in the 21st century", "tokens": [51014, 291, 458, 11, 25229, 465, 16150, 13, 400, 309, 658, 385, 1953, 11, 291, 458, 11, 586, 300, 321, 434, 294, 264, 5080, 372, 4901, 51314], "temperature": 0.0, "avg_logprob": -0.1584421841066275, "compression_ratio": 1.627831715210356, "no_speech_prob": 0.019984446465969086}, {"id": 4, "seek": 0, "start": 19.0, "end": 23.0, "text": " and I've got a laptop that's much more powerful than all the chewing bombs put together,", "tokens": [51314, 293, 286, 600, 658, 257, 10732, 300, 311, 709, 544, 4005, 813, 439, 264, 31444, 19043, 829, 1214, 11, 51514], "temperature": 0.0, "avg_logprob": -0.1584421841066275, "compression_ratio": 1.627831715210356, "no_speech_prob": 0.019984446465969086}, {"id": 5, "seek": 0, "start": 23.0, "end": 26.0, "text": " how easy is it to break enigma like today?", "tokens": [51514, 577, 1858, 307, 309, 281, 1821, 465, 16150, 411, 965, 30, 51664], "temperature": 0.0, "avg_logprob": -0.1584421841066275, "compression_ratio": 1.627831715210356, "no_speech_prob": 0.019984446465969086}, {"id": 6, "seek": 2600, "start": 26.0, "end": 30.0, "text": " But let's code it up and find out.", "tokens": [50364, 583, 718, 311, 3089, 309, 493, 293, 915, 484, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13795749636462135, "compression_ratio": 1.688135593220339, "no_speech_prob": 0.016099773347377777}, {"id": 7, "seek": 2600, "start": 30.0, "end": 34.0, "text": " The first thing I should say is Dave's done some really interesting videos on the history of enigma", "tokens": [50564, 440, 700, 551, 286, 820, 584, 307, 11017, 311, 1096, 512, 534, 1880, 2145, 322, 264, 2503, 295, 465, 16150, 50764], "temperature": 0.0, "avg_logprob": -0.13795749636462135, "compression_ratio": 1.688135593220339, "no_speech_prob": 0.016099773347377777}, {"id": 8, "seek": 2600, "start": 34.0, "end": 38.0, "text": " and do go and watch those. And it'll give you an idea of the sort of things they were doing", "tokens": [50764, 293, 360, 352, 293, 1159, 729, 13, 400, 309, 603, 976, 291, 364, 1558, 295, 264, 1333, 295, 721, 436, 645, 884, 50964], "temperature": 0.0, "avg_logprob": -0.13795749636462135, "compression_ratio": 1.688135593220339, "no_speech_prob": 0.016099773347377777}, {"id": 9, "seek": 2600, "start": 38.0, "end": 41.0, "text": " to try and break enigma back during the 40s.", "tokens": [50964, 281, 853, 293, 1821, 465, 16150, 646, 1830, 264, 3356, 82, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13795749636462135, "compression_ratio": 1.688135593220339, "no_speech_prob": 0.016099773347377777}, {"id": 10, "seek": 2600, "start": 41.0, "end": 43.0, "text": " Not to trivialise it, but it's really difficult, isn't it?", "tokens": [51114, 1726, 281, 26703, 908, 309, 11, 457, 309, 311, 534, 2252, 11, 1943, 380, 309, 30, 51214], "temperature": 0.0, "avg_logprob": -0.13795749636462135, "compression_ratio": 1.688135593220339, "no_speech_prob": 0.016099773347377777}, {"id": 11, "seek": 2600, "start": 43.0, "end": 48.0, "text": " It's really, really difficult. You know, this isn't something one does by hand, right? Not quickly.", "tokens": [51214, 467, 311, 534, 11, 534, 2252, 13, 509, 458, 11, 341, 1943, 380, 746, 472, 775, 538, 1011, 11, 558, 30, 1726, 2661, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13795749636462135, "compression_ratio": 1.688135593220339, "no_speech_prob": 0.016099773347377777}, {"id": 12, "seek": 2600, "start": 48.0, "end": 52.0, "text": " The enigma machine is not a stupid idea, right? It's well designed.", "tokens": [51464, 440, 465, 16150, 3479, 307, 406, 257, 6631, 1558, 11, 558, 30, 467, 311, 731, 4761, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13795749636462135, "compression_ratio": 1.688135593220339, "no_speech_prob": 0.016099773347377777}, {"id": 13, "seek": 5200, "start": 52.0, "end": 55.0, "text": " The only thing that we've got now is much, much more processing power.", "tokens": [50364, 440, 787, 551, 300, 321, 600, 658, 586, 307, 709, 11, 709, 544, 9007, 1347, 13, 50514], "temperature": 0.0, "avg_logprob": -0.09544656778636731, "compression_ratio": 1.7926829268292683, "no_speech_prob": 0.017967496067285538}, {"id": 14, "seek": 5200, "start": 55.0, "end": 61.0, "text": " And so things that we couldn't possibly brute force back then, maybe we can start to begin to brute force now,", "tokens": [50514, 400, 370, 721, 300, 321, 2809, 380, 6264, 47909, 3464, 646, 550, 11, 1310, 321, 393, 722, 281, 1841, 281, 47909, 3464, 586, 11, 50814], "temperature": 0.0, "avg_logprob": -0.09544656778636731, "compression_ratio": 1.7926829268292683, "no_speech_prob": 0.017967496067285538}, {"id": 15, "seek": 5200, "start": 61.0, "end": 63.0, "text": " and that's what we're looking at today.", "tokens": [50814, 293, 300, 311, 437, 321, 434, 1237, 412, 965, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09544656778636731, "compression_ratio": 1.7926829268292683, "no_speech_prob": 0.017967496067285538}, {"id": 16, "seek": 5200, "start": 63.0, "end": 68.0, "text": " So let's look very briefly at what an enigma machine is, and then we'll have a go at actually breaking one", "tokens": [50914, 407, 718, 311, 574, 588, 10515, 412, 437, 364, 465, 16150, 3479, 307, 11, 293, 550, 321, 603, 362, 257, 352, 412, 767, 7697, 472, 51164], "temperature": 0.0, "avg_logprob": -0.09544656778636731, "compression_ratio": 1.7926829268292683, "no_speech_prob": 0.017967496067285538}, {"id": 17, "seek": 5200, "start": 68.0, "end": 69.0, "text": " and see whether it holds up.", "tokens": [51164, 293, 536, 1968, 309, 9190, 493, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09544656778636731, "compression_ratio": 1.7926829268292683, "no_speech_prob": 0.017967496067285538}, {"id": 18, "seek": 5200, "start": 69.0, "end": 73.0, "text": " If you recall, it has some lights on some letters and it has, this is my technical description,", "tokens": [51214, 759, 291, 9901, 11, 309, 575, 512, 5811, 322, 512, 7825, 293, 309, 575, 11, 341, 307, 452, 6191, 3855, 11, 51414], "temperature": 0.0, "avg_logprob": -0.09544656778636731, "compression_ratio": 1.7926829268292683, "no_speech_prob": 0.017967496067285538}, {"id": 19, "seek": 5200, "start": 73.0, "end": 76.0, "text": " has some buttons that you press, keys are they called sometimes?", "tokens": [51414, 575, 512, 9905, 300, 291, 1886, 11, 9317, 366, 436, 1219, 2171, 30, 51564], "temperature": 0.0, "avg_logprob": -0.09544656778636731, "compression_ratio": 1.7926829268292683, "no_speech_prob": 0.017967496067285538}, {"id": 20, "seek": 5200, "start": 76.0, "end": 79.0, "text": " So you press an A, right? You press an A and it goes into the machine", "tokens": [51564, 407, 291, 1886, 364, 316, 11, 558, 30, 509, 1886, 364, 316, 293, 309, 1709, 666, 264, 3479, 51714], "temperature": 0.0, "avg_logprob": -0.09544656778636731, "compression_ratio": 1.7926829268292683, "no_speech_prob": 0.017967496067285538}, {"id": 21, "seek": 7900, "start": 79.0, "end": 81.0, "text": " and it goes through something called a plug board.", "tokens": [50364, 293, 309, 1709, 807, 746, 1219, 257, 5452, 3150, 13, 50464], "temperature": 0.0, "avg_logprob": -0.10202000492302947, "compression_ratio": 1.904564315352697, "no_speech_prob": 0.028794310986995697}, {"id": 22, "seek": 7900, "start": 81.0, "end": 83.0, "text": " And the plug board will swap it. So this is the plug board here.", "tokens": [50464, 400, 264, 5452, 3150, 486, 18135, 309, 13, 407, 341, 307, 264, 5452, 3150, 510, 13, 50564], "temperature": 0.0, "avg_logprob": -0.10202000492302947, "compression_ratio": 1.904564315352697, "no_speech_prob": 0.028794310986995697}, {"id": 23, "seek": 7900, "start": 83.0, "end": 86.0, "text": " Now plugs just swap certain letters in pairs.", "tokens": [50564, 823, 33899, 445, 18135, 1629, 7825, 294, 15494, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10202000492302947, "compression_ratio": 1.904564315352697, "no_speech_prob": 0.028794310986995697}, {"id": 24, "seek": 7900, "start": 86.0, "end": 90.0, "text": " So maybe this A comes out as A and F, right? Or something like that.", "tokens": [50714, 407, 1310, 341, 316, 1487, 484, 382, 316, 293, 479, 11, 558, 30, 1610, 746, 411, 300, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10202000492302947, "compression_ratio": 1.904564315352697, "no_speech_prob": 0.028794310986995697}, {"id": 25, "seek": 7900, "start": 90.0, "end": 93.0, "text": " Then this goes into the first rotor.", "tokens": [50914, 1396, 341, 1709, 666, 264, 700, 26847, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10202000492302947, "compression_ratio": 1.904564315352697, "no_speech_prob": 0.028794310986995697}, {"id": 26, "seek": 7900, "start": 93.0, "end": 97.0, "text": " And so that maybe comes out as a Q or something like that.", "tokens": [51064, 400, 370, 300, 1310, 1487, 484, 382, 257, 1249, 420, 746, 411, 300, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10202000492302947, "compression_ratio": 1.904564315352697, "no_speech_prob": 0.028794310986995697}, {"id": 27, "seek": 7900, "start": 97.0, "end": 99.0, "text": " So, you know, it sort of just wiggles around in here.", "tokens": [51264, 407, 11, 291, 458, 11, 309, 1333, 295, 445, 261, 19469, 926, 294, 510, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10202000492302947, "compression_ratio": 1.904564315352697, "no_speech_prob": 0.028794310986995697}, {"id": 28, "seek": 7900, "start": 99.0, "end": 105.0, "text": " And then this comes in, this comes out as maybe, you know, a P making this up.", "tokens": [51364, 400, 550, 341, 1487, 294, 11, 341, 1487, 484, 382, 1310, 11, 291, 458, 11, 257, 430, 1455, 341, 493, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10202000492302947, "compression_ratio": 1.904564315352697, "no_speech_prob": 0.028794310986995697}, {"id": 29, "seek": 10500, "start": 105.0, "end": 107.0, "text": " And then this goes into the next rotor.", "tokens": [50364, 400, 550, 341, 1709, 666, 264, 958, 26847, 13, 50464], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 30, "seek": 10500, "start": 107.0, "end": 110.0, "text": " So stick to three rotor enigmas for today, hey?", "tokens": [50464, 407, 2897, 281, 1045, 26847, 465, 328, 3799, 337, 965, 11, 4177, 30, 50614], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 31, "seek": 10500, "start": 110.0, "end": 112.0, "text": " Comes out as a sort of an S.", "tokens": [50614, 47290, 484, 382, 257, 1333, 295, 364, 318, 13, 50714], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 32, "seek": 10500, "start": 112.0, "end": 114.0, "text": " And then it goes through something called a reflector.", "tokens": [50714, 400, 550, 309, 1709, 807, 746, 1219, 257, 36549, 1672, 13, 50814], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 33, "seek": 10500, "start": 114.0, "end": 117.0, "text": " So this is getting quite complicated, but this is all mechanical, right?", "tokens": [50814, 407, 341, 307, 1242, 1596, 6179, 11, 457, 341, 307, 439, 12070, 11, 558, 30, 50964], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 34, "seek": 10500, "start": 117.0, "end": 122.0, "text": " These rotors literally physically turn around and they just have wires soldered from one end to the other that connect up.", "tokens": [50964, 1981, 4297, 830, 3736, 9762, 1261, 926, 293, 436, 445, 362, 15537, 3718, 4073, 490, 472, 917, 281, 264, 661, 300, 1745, 493, 13, 51214], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 35, "seek": 10500, "start": 122.0, "end": 125.0, "text": " So the reflector just bounces, S goes to something else.", "tokens": [51214, 407, 264, 36549, 1672, 445, 46901, 11, 318, 1709, 281, 746, 1646, 13, 51364], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 36, "seek": 10500, "start": 125.0, "end": 126.0, "text": " I can't remember which letter it is.", "tokens": [51364, 286, 393, 380, 1604, 597, 5063, 309, 307, 13, 51414], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 37, "seek": 10500, "start": 126.0, "end": 128.0, "text": " And then it goes back through this, like this.", "tokens": [51414, 400, 550, 309, 1709, 646, 807, 341, 11, 411, 341, 13, 51514], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 38, "seek": 10500, "start": 128.0, "end": 130.0, "text": " And then it comes around through the plug board again.", "tokens": [51514, 400, 550, 309, 1487, 926, 807, 264, 5452, 3150, 797, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 39, "seek": 10500, "start": 130.0, "end": 133.0, "text": " So maybe that D goes to, I mean, A's over here.", "tokens": [51614, 407, 1310, 300, 413, 1709, 281, 11, 286, 914, 11, 316, 311, 670, 510, 13, 51764], "temperature": 0.0, "avg_logprob": -0.0940005023305009, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.013210791163146496}, {"id": 40, "seek": 13300, "start": 133.0, "end": 135.0, "text": " That was a bit silly of me, wasn't it?", "tokens": [50364, 663, 390, 257, 857, 11774, 295, 385, 11, 2067, 380, 309, 30, 50464], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 41, "seek": 13300, "start": 135.0, "end": 140.0, "text": " For the purposes of this, it's all absolutely fine.", "tokens": [50464, 1171, 264, 9932, 295, 341, 11, 309, 311, 439, 3122, 2489, 13, 50714], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 42, "seek": 13300, "start": 140.0, "end": 143.0, "text": " And this comes out as a Z, right?", "tokens": [50714, 400, 341, 1487, 484, 382, 257, 1176, 11, 558, 30, 50864], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 43, "seek": 13300, "start": 143.0, "end": 149.0, "text": " So in my weird botched enigma diagram, the A went in and it came out as a Z.", "tokens": [50864, 407, 294, 452, 3657, 10592, 19318, 465, 16150, 10686, 11, 264, 316, 1437, 294, 293, 309, 1361, 484, 382, 257, 1176, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 44, "seek": 13300, "start": 149.0, "end": 151.0, "text": " It was an encrypted as a Z.", "tokens": [51164, 467, 390, 364, 36663, 382, 257, 1176, 13, 51264], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 45, "seek": 13300, "start": 151.0, "end": 153.0, "text": " Now, what's hard about this problem?", "tokens": [51264, 823, 11, 437, 311, 1152, 466, 341, 1154, 30, 51364], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 46, "seek": 13300, "start": 153.0, "end": 156.0, "text": " Well, you can take these rotors out, right?", "tokens": [51364, 1042, 11, 291, 393, 747, 613, 4297, 830, 484, 11, 558, 30, 51514], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 47, "seek": 13300, "start": 156.0, "end": 157.0, "text": " Each rotor has different wiring.", "tokens": [51514, 6947, 26847, 575, 819, 27520, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 48, "seek": 13300, "start": 157.0, "end": 162.0, "text": " There's usually five or eight rotors to choose from and you can put them in any position you like.", "tokens": [51564, 821, 311, 2673, 1732, 420, 3180, 4297, 830, 281, 2826, 490, 293, 291, 393, 829, 552, 294, 604, 2535, 291, 411, 13, 51814], "temperature": 0.0, "avg_logprob": -0.07713251185596437, "compression_ratio": 1.637037037037037, "no_speech_prob": 0.001079983776435256}, {"id": 49, "seek": 16200, "start": 162.0, "end": 166.0, "text": " The next one is that every time you press a letter, one of the rotors rotates", "tokens": [50364, 440, 958, 472, 307, 300, 633, 565, 291, 1886, 257, 5063, 11, 472, 295, 264, 4297, 830, 42133, 50564], "temperature": 0.0, "avg_logprob": -0.053878281333229756, "compression_ratio": 2.0242214532871974, "no_speech_prob": 0.0004304131434764713}, {"id": 50, "seek": 16200, "start": 166.0, "end": 168.0, "text": " and sometimes it rotates the next rotors along.", "tokens": [50564, 293, 2171, 309, 42133, 264, 958, 4297, 830, 2051, 13, 50664], "temperature": 0.0, "avg_logprob": -0.053878281333229756, "compression_ratio": 2.0242214532871974, "no_speech_prob": 0.0004304131434764713}, {"id": 51, "seek": 16200, "start": 168.0, "end": 174.0, "text": " And that means that this mapping, this transformation changes every time you press a character.", "tokens": [50664, 400, 300, 1355, 300, 341, 18350, 11, 341, 9887, 2962, 633, 565, 291, 1886, 257, 2517, 13, 50964], "temperature": 0.0, "avg_logprob": -0.053878281333229756, "compression_ratio": 2.0242214532871974, "no_speech_prob": 0.0004304131434764713}, {"id": 52, "seek": 16200, "start": 174.0, "end": 176.0, "text": " So you press A, it's not going to do the same thing again?", "tokens": [50964, 407, 291, 1886, 316, 11, 309, 311, 406, 516, 281, 360, 264, 912, 551, 797, 30, 51064], "temperature": 0.0, "avg_logprob": -0.053878281333229756, "compression_ratio": 2.0242214532871974, "no_speech_prob": 0.0004304131434764713}, {"id": 53, "seek": 16200, "start": 176.0, "end": 181.0, "text": " No, actually, if you press A, the rotor first turns and then lights up a letter, right?", "tokens": [51064, 883, 11, 767, 11, 498, 291, 1886, 316, 11, 264, 26847, 700, 4523, 293, 550, 5811, 493, 257, 5063, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.053878281333229756, "compression_ratio": 2.0242214532871974, "no_speech_prob": 0.0004304131434764713}, {"id": 54, "seek": 16200, "start": 181.0, "end": 183.0, "text": " So it's not going to do the same thing again.", "tokens": [51314, 407, 309, 311, 406, 516, 281, 360, 264, 912, 551, 797, 13, 51414], "temperature": 0.0, "avg_logprob": -0.053878281333229756, "compression_ratio": 2.0242214532871974, "no_speech_prob": 0.0004304131434764713}, {"id": 55, "seek": 16200, "start": 183.0, "end": 187.0, "text": " If you press A, A, A, A, A, A, the only thing you're guaranteed due to one of the quirks of enigmas", "tokens": [51414, 759, 291, 1886, 316, 11, 316, 11, 316, 11, 316, 11, 316, 11, 316, 11, 264, 787, 551, 291, 434, 18031, 3462, 281, 472, 295, 264, 35645, 1694, 295, 465, 328, 3799, 51614], "temperature": 0.0, "avg_logprob": -0.053878281333229756, "compression_ratio": 2.0242214532871974, "no_speech_prob": 0.0004304131434764713}, {"id": 56, "seek": 16200, "start": 187.0, "end": 190.0, "text": " is you won't get any A's back, but you'll get a lot of random letters.", "tokens": [51614, 307, 291, 1582, 380, 483, 604, 316, 311, 646, 11, 457, 291, 603, 483, 257, 688, 295, 4974, 7825, 13, 51764], "temperature": 0.0, "avg_logprob": -0.053878281333229756, "compression_ratio": 2.0242214532871974, "no_speech_prob": 0.0004304131434764713}, {"id": 57, "seek": 19000, "start": 190.0, "end": 195.0, "text": " Back during the war, they solved this by trying to find possible rotor configurations", "tokens": [50364, 5833, 1830, 264, 1516, 11, 436, 13041, 341, 538, 1382, 281, 915, 1944, 26847, 31493, 50614], "temperature": 0.0, "avg_logprob": -0.08676417120571794, "compression_ratio": 1.8523985239852399, "no_speech_prob": 0.007574575487524271}, {"id": 58, "seek": 19000, "start": 195.0, "end": 201.0, "text": " that definitely couldn't work or could work based on some guest plain text.", "tokens": [50614, 300, 2138, 2809, 380, 589, 420, 727, 589, 2361, 322, 512, 8341, 11121, 2487, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08676417120571794, "compression_ratio": 1.8523985239852399, "no_speech_prob": 0.007574575487524271}, {"id": 59, "seek": 19000, "start": 201.0, "end": 206.0, "text": " So maybe they had this idea that the first part of the message contained the word weather report", "tokens": [50914, 407, 1310, 436, 632, 341, 1558, 300, 264, 700, 644, 295, 264, 3636, 16212, 264, 1349, 5503, 2275, 51164], "temperature": 0.0, "avg_logprob": -0.08676417120571794, "compression_ratio": 1.8523985239852399, "no_speech_prob": 0.007574575487524271}, {"id": 60, "seek": 19000, "start": 206.0, "end": 209.0, "text": " and so if they put that in and then they could find all the encryptions", "tokens": [51164, 293, 370, 498, 436, 829, 300, 294, 293, 550, 436, 727, 915, 439, 264, 17972, 9799, 51314], "temperature": 0.0, "avg_logprob": -0.08676417120571794, "compression_ratio": 1.8523985239852399, "no_speech_prob": 0.007574575487524271}, {"id": 61, "seek": 19000, "start": 209.0, "end": 212.0, "text": " that couldn't possibly have come out as weather report and so on", "tokens": [51314, 300, 2809, 380, 6264, 362, 808, 484, 382, 5503, 2275, 293, 370, 322, 51464], "temperature": 0.0, "avg_logprob": -0.08676417120571794, "compression_ratio": 1.8523985239852399, "no_speech_prob": 0.007574575487524271}, {"id": 62, "seek": 19000, "start": 212.0, "end": 214.0, "text": " and they could start to narrow down what their options were.", "tokens": [51464, 293, 436, 727, 722, 281, 9432, 760, 437, 641, 3956, 645, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08676417120571794, "compression_ratio": 1.8523985239852399, "no_speech_prob": 0.007574575487524271}, {"id": 63, "seek": 19000, "start": 214.0, "end": 218.0, "text": " Now, that's called a known plain text attack,", "tokens": [51564, 823, 11, 300, 311, 1219, 257, 2570, 11121, 2487, 2690, 11, 51764], "temperature": 0.0, "avg_logprob": -0.08676417120571794, "compression_ratio": 1.8523985239852399, "no_speech_prob": 0.007574575487524271}, {"id": 64, "seek": 21800, "start": 218.0, "end": 222.0, "text": " but during the war, if they hadn't known the plain text, they wouldn't be able to crack a enigma bit.", "tokens": [50364, 457, 1830, 264, 1516, 11, 498, 436, 8782, 380, 2570, 264, 11121, 2487, 11, 436, 2759, 380, 312, 1075, 281, 6226, 257, 465, 16150, 857, 13, 50564], "temperature": 0.0, "avg_logprob": -0.0992643415927887, "compression_ratio": 1.7724550898203593, "no_speech_prob": 0.0019259871914982796}, {"id": 65, "seek": 21800, "start": 222.0, "end": 224.0, "text": " They didn't have the brute force power to do it.", "tokens": [50564, 814, 994, 380, 362, 264, 47909, 3464, 1347, 281, 360, 309, 13, 50664], "temperature": 0.0, "avg_logprob": -0.0992643415927887, "compression_ratio": 1.7724550898203593, "no_speech_prob": 0.0019259871914982796}, {"id": 66, "seek": 21800, "start": 224.0, "end": 227.0, "text": " Nowadays, we have pretty fast laptops, right?", "tokens": [50664, 28908, 11, 321, 362, 1238, 2370, 27642, 11, 558, 30, 50814], "temperature": 0.0, "avg_logprob": -0.0992643415927887, "compression_ratio": 1.7724550898203593, "no_speech_prob": 0.0019259871914982796}, {"id": 67, "seek": 21800, "start": 227.0, "end": 231.0, "text": " And, you know, beyond my laptop, other computers are even faster than that, would you believe?", "tokens": [50814, 400, 11, 291, 458, 11, 4399, 452, 10732, 11, 661, 10807, 366, 754, 4663, 813, 300, 11, 576, 291, 1697, 30, 51014], "temperature": 0.0, "avg_logprob": -0.0992643415927887, "compression_ratio": 1.7724550898203593, "no_speech_prob": 0.0019259871914982796}, {"id": 68, "seek": 21800, "start": 231.0, "end": 235.0, "text": " So theoretically, we could start to try out some of these combinations, even if we didn't know any plain text.", "tokens": [51014, 407, 29400, 11, 321, 727, 722, 281, 853, 484, 512, 295, 613, 21267, 11, 754, 498, 321, 994, 380, 458, 604, 11121, 2487, 13, 51214], "temperature": 0.0, "avg_logprob": -0.0992643415927887, "compression_ratio": 1.7724550898203593, "no_speech_prob": 0.0019259871914982796}, {"id": 69, "seek": 21800, "start": 235.0, "end": 240.0, "text": " What we're going to be looking at, at least to begin with, is a cipher text-only attack.", "tokens": [51214, 708, 321, 434, 516, 281, 312, 1237, 412, 11, 412, 1935, 281, 1841, 365, 11, 307, 257, 269, 21240, 2487, 12, 25202, 2690, 13, 51464], "temperature": 0.0, "avg_logprob": -0.0992643415927887, "compression_ratio": 1.7724550898203593, "no_speech_prob": 0.0019259871914982796}, {"id": 70, "seek": 21800, "start": 240.0, "end": 242.0, "text": " That's an attack where we've only got the cipher text.", "tokens": [51464, 663, 311, 364, 2690, 689, 321, 600, 787, 658, 264, 269, 21240, 2487, 13, 51564], "temperature": 0.0, "avg_logprob": -0.0992643415927887, "compression_ratio": 1.7724550898203593, "no_speech_prob": 0.0019259871914982796}, {"id": 71, "seek": 21800, "start": 242.0, "end": 245.0, "text": " We don't have any idea what the plain text is", "tokens": [51564, 492, 500, 380, 362, 604, 1558, 437, 264, 11121, 2487, 307, 51714], "temperature": 0.0, "avg_logprob": -0.0992643415927887, "compression_ratio": 1.7724550898203593, "no_speech_prob": 0.0019259871914982796}, {"id": 72, "seek": 24500, "start": 245.0, "end": 248.0, "text": " and we want to see if we can guess what some of these settings would be.", "tokens": [50364, 293, 321, 528, 281, 536, 498, 321, 393, 2041, 437, 512, 295, 613, 6257, 576, 312, 13, 50514], "temperature": 0.0, "avg_logprob": -0.03956386986679918, "compression_ratio": 1.6688524590163933, "no_speech_prob": 0.002284922869876027}, {"id": 73, "seek": 24500, "start": 248.0, "end": 254.0, "text": " There's a few interesting weaknesses of enigma that make it a little bit practical to brute force,", "tokens": [50514, 821, 311, 257, 1326, 1880, 24381, 295, 465, 16150, 300, 652, 309, 257, 707, 857, 8496, 281, 47909, 3464, 11, 50814], "temperature": 0.0, "avg_logprob": -0.03956386986679918, "compression_ratio": 1.6688524590163933, "no_speech_prob": 0.002284922869876027}, {"id": 74, "seek": 24500, "start": 254.0, "end": 256.0, "text": " but not actually as much as you think.", "tokens": [50814, 457, 406, 767, 382, 709, 382, 291, 519, 13, 50914], "temperature": 0.0, "avg_logprob": -0.03956386986679918, "compression_ratio": 1.6688524590163933, "no_speech_prob": 0.002284922869876027}, {"id": 75, "seek": 24500, "start": 256.0, "end": 260.0, "text": " We talk a lot about how a letter doesn't encrypt ever to itself", "tokens": [50914, 492, 751, 257, 688, 466, 577, 257, 5063, 1177, 380, 17972, 662, 1562, 281, 2564, 51114], "temperature": 0.0, "avg_logprob": -0.03956386986679918, "compression_ratio": 1.6688524590163933, "no_speech_prob": 0.002284922869876027}, {"id": 76, "seek": 24500, "start": 260.0, "end": 263.0, "text": " and that's quite relevant for plain text attacks, known plain text,", "tokens": [51114, 293, 300, 311, 1596, 7340, 337, 11121, 2487, 8122, 11, 2570, 11121, 2487, 11, 51264], "temperature": 0.0, "avg_logprob": -0.03956386986679918, "compression_ratio": 1.6688524590163933, "no_speech_prob": 0.002284922869876027}, {"id": 77, "seek": 24500, "start": 263.0, "end": 267.0, "text": " because you can then work out where plain text definitely can't or could be.", "tokens": [51264, 570, 291, 393, 550, 589, 484, 689, 11121, 2487, 2138, 393, 380, 420, 727, 312, 13, 51464], "temperature": 0.0, "avg_logprob": -0.03956386986679918, "compression_ratio": 1.6688524590163933, "no_speech_prob": 0.002284922869876027}, {"id": 78, "seek": 24500, "start": 267.0, "end": 271.0, "text": " We're not doing that today, so I'm less worried about that particular property of enigma.", "tokens": [51464, 492, 434, 406, 884, 300, 965, 11, 370, 286, 478, 1570, 5804, 466, 300, 1729, 4707, 295, 465, 16150, 13, 51664], "temperature": 0.0, "avg_logprob": -0.03956386986679918, "compression_ratio": 1.6688524590163933, "no_speech_prob": 0.002284922869876027}, {"id": 79, "seek": 27100, "start": 271.0, "end": 277.0, "text": " More interesting to me is the fact that if you get some of the settings right,", "tokens": [50364, 5048, 1880, 281, 385, 307, 264, 1186, 300, 498, 291, 483, 512, 295, 264, 6257, 558, 11, 50664], "temperature": 0.0, "avg_logprob": -0.06659500122070312, "compression_ratio": 1.7509025270758123, "no_speech_prob": 0.014944449998438358}, {"id": 80, "seek": 27100, "start": 277.0, "end": 279.0, "text": " like you get this row to correct but these two wrong,", "tokens": [50664, 411, 291, 483, 341, 5386, 281, 3006, 457, 613, 732, 2085, 11, 50764], "temperature": 0.0, "avg_logprob": -0.06659500122070312, "compression_ratio": 1.7509025270758123, "no_speech_prob": 0.014944449998438358}, {"id": 81, "seek": 27100, "start": 279.0, "end": 283.0, "text": " that will often be better at decrypting than if you get them all wrong.", "tokens": [50764, 300, 486, 2049, 312, 1101, 412, 979, 627, 662, 278, 813, 498, 291, 483, 552, 439, 2085, 13, 50964], "temperature": 0.0, "avg_logprob": -0.06659500122070312, "compression_ratio": 1.7509025270758123, "no_speech_prob": 0.014944449998438358}, {"id": 82, "seek": 27100, "start": 283.0, "end": 287.0, "text": " So as we start to move slowly towards a solution,", "tokens": [50964, 407, 382, 321, 722, 281, 1286, 5692, 3030, 257, 3827, 11, 51164], "temperature": 0.0, "avg_logprob": -0.06659500122070312, "compression_ratio": 1.7509025270758123, "no_speech_prob": 0.014944449998438358}, {"id": 83, "seek": 27100, "start": 287.0, "end": 291.0, "text": " we get a little hint that maybe this cipher text isn't quite as good as it was", "tokens": [51164, 321, 483, 257, 707, 12075, 300, 1310, 341, 269, 21240, 2487, 1943, 380, 1596, 382, 665, 382, 309, 390, 51364], "temperature": 0.0, "avg_logprob": -0.06659500122070312, "compression_ratio": 1.7509025270758123, "no_speech_prob": 0.014944449998438358}, {"id": 84, "seek": 27100, "start": 291.0, "end": 293.0, "text": " and we can start measuring it.", "tokens": [51364, 293, 321, 393, 722, 13389, 309, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06659500122070312, "compression_ratio": 1.7509025270758123, "no_speech_prob": 0.014944449998438358}, {"id": 85, "seek": 27100, "start": 293.0, "end": 300.0, "text": " So really what we need to do is find some way of putting some cipher text into an enigma machine with some configuration", "tokens": [51464, 407, 534, 437, 321, 643, 281, 360, 307, 915, 512, 636, 295, 3372, 512, 269, 21240, 2487, 666, 364, 465, 16150, 3479, 365, 512, 11694, 51814], "temperature": 0.0, "avg_logprob": -0.06659500122070312, "compression_ratio": 1.7509025270758123, "no_speech_prob": 0.014944449998438358}, {"id": 86, "seek": 30000, "start": 300.0, "end": 304.0, "text": " and then reading the output and saying is that a plausible sentence or not.", "tokens": [50364, 293, 550, 3760, 264, 5598, 293, 1566, 307, 300, 257, 39925, 8174, 420, 406, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1461165291922433, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.007686797529459}, {"id": 87, "seek": 30000, "start": 304.0, "end": 308.0, "text": " And preferably we'd like to do it really, really quickly because otherwise this could take a long time.", "tokens": [50564, 400, 45916, 321, 1116, 411, 281, 360, 309, 534, 11, 534, 2661, 570, 5911, 341, 727, 747, 257, 938, 565, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1461165291922433, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.007686797529459}, {"id": 88, "seek": 30000, "start": 308.0, "end": 311.0, "text": " So we're not going to be doing any deep learning, can't be bothered with that.", "tokens": [50764, 407, 321, 434, 406, 516, 281, 312, 884, 604, 2452, 2539, 11, 393, 380, 312, 22996, 365, 300, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1461165291922433, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.007686797529459}, {"id": 89, "seek": 30000, "start": 311.0, "end": 315.0, "text": " We're going to use very simple statistical properties of text", "tokens": [50914, 492, 434, 516, 281, 764, 588, 2199, 22820, 7221, 295, 2487, 51114], "temperature": 0.0, "avg_logprob": -0.1461165291922433, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.007686797529459}, {"id": 90, "seek": 30000, "start": 315.0, "end": 319.0, "text": " to try and measure whether one sentence is better as English than another sentence.", "tokens": [51114, 281, 853, 293, 3481, 1968, 472, 8174, 307, 1101, 382, 3669, 813, 1071, 8174, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1461165291922433, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.007686797529459}, {"id": 91, "seek": 30000, "start": 319.0, "end": 324.0, "text": " And there's a few of these and I've implemented all of them because I thought well, let's just test them out.", "tokens": [51314, 400, 456, 311, 257, 1326, 295, 613, 293, 286, 600, 12270, 439, 295, 552, 570, 286, 1194, 731, 11, 718, 311, 445, 1500, 552, 484, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1461165291922433, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.007686797529459}, {"id": 92, "seek": 30000, "start": 324.0, "end": 327.0, "text": " The first one is something called indexive coincidence.", "tokens": [51564, 440, 700, 472, 307, 746, 1219, 8186, 488, 22137, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1461165291922433, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.007686797529459}, {"id": 93, "seek": 32700, "start": 327.0, "end": 329.0, "text": " So let's suppose you have a cipher text.", "tokens": [50364, 407, 718, 311, 7297, 291, 362, 257, 269, 21240, 2487, 13, 50464], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 94, "seek": 32700, "start": 329.0, "end": 331.0, "text": " So for example, here it is.", "tokens": [50464, 407, 337, 1365, 11, 510, 309, 307, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 95, "seek": 32700, "start": 331.0, "end": 333.0, "text": " I'm just looking at random text, right?", "tokens": [50564, 286, 478, 445, 1237, 412, 4974, 2487, 11, 558, 30, 50664], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 96, "seek": 32700, "start": 333.0, "end": 335.0, "text": " So yeah, okay.", "tokens": [50664, 407, 1338, 11, 1392, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 97, "seek": 32700, "start": 335.0, "end": 337.0, "text": " I'm just going to copy some random cipher text from here.", "tokens": [50764, 286, 478, 445, 516, 281, 5055, 512, 4974, 269, 21240, 2487, 490, 510, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 98, "seek": 32700, "start": 337.0, "end": 339.0, "text": " So why can't I just randomize my own cipher text?", "tokens": [50864, 407, 983, 393, 380, 286, 445, 4974, 1125, 452, 1065, 269, 21240, 2487, 30, 50964], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 99, "seek": 32700, "start": 339.0, "end": 340.0, "text": " I don't know.", "tokens": [50964, 286, 500, 380, 458, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 100, "seek": 32700, "start": 340.0, "end": 344.0, "text": " But I feel more comfortable copying it than I do just thinking up clever, interesting letters on my own.", "tokens": [51014, 583, 286, 841, 544, 4619, 27976, 309, 813, 286, 360, 445, 1953, 493, 13494, 11, 1880, 7825, 322, 452, 1065, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 101, "seek": 32700, "start": 344.0, "end": 349.0, "text": " Well, so isn't there a number of files on the fact that I don't pick as random as I think and stuff like that?", "tokens": [51214, 1042, 11, 370, 1943, 380, 456, 257, 1230, 295, 7098, 322, 264, 1186, 300, 286, 500, 380, 1888, 382, 4974, 382, 286, 519, 293, 1507, 411, 300, 30, 51464], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 102, "seek": 32700, "start": 349.0, "end": 354.0, "text": " Z, E, B, H, W.", "tokens": [51464, 1176, 11, 462, 11, 363, 11, 389, 11, 343, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 103, "seek": 32700, "start": 354.0, "end": 356.0, "text": " This is some actual cipher text that we'll be breaking later.", "tokens": [51714, 639, 307, 512, 3539, 269, 21240, 2487, 300, 321, 603, 312, 7697, 1780, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13937225574400366, "compression_ratio": 1.729903536977492, "no_speech_prob": 0.025121519342064857}, {"id": 104, "seek": 35600, "start": 356.0, "end": 359.0, "text": " Does it honestly start with zoos as in Conrad's zoos?", "tokens": [50364, 4402, 309, 6095, 722, 365, 5721, 329, 382, 294, 2656, 6206, 311, 5721, 329, 30, 50514], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 105, "seek": 35600, "start": 359.0, "end": 360.0, "text": " Yeah.", "tokens": [50514, 865, 13, 50564], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 106, "seek": 35600, "start": 360.0, "end": 361.0, "text": " In the reality of random, is it?", "tokens": [50564, 682, 264, 4103, 295, 4974, 11, 307, 309, 30, 50614], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 107, "seek": 35600, "start": 361.0, "end": 362.0, "text": " Yeah, yeah, yeah, yeah.", "tokens": [50614, 865, 11, 1338, 11, 1338, 11, 1338, 13, 50664], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 108, "seek": 35600, "start": 362.0, "end": 368.0, "text": " You see all kinds of words in the random cipher text and they mean absolutely nothing because it hasn't been decrypted yet.", "tokens": [50664, 509, 536, 439, 3685, 295, 2283, 294, 264, 4974, 269, 21240, 2487, 293, 436, 914, 3122, 1825, 570, 309, 6132, 380, 668, 979, 627, 25383, 1939, 13, 50964], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 109, "seek": 35600, "start": 368.0, "end": 370.0, "text": " Oh, gee, yeah.", "tokens": [50964, 876, 11, 24105, 11, 1338, 13, 51064], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 110, "seek": 35600, "start": 370.0, "end": 371.0, "text": " Well, exactly.", "tokens": [51064, 1042, 11, 2293, 13, 51114], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 111, "seek": 35600, "start": 371.0, "end": 373.0, "text": " E, U.", "tokens": [51114, 462, 11, 624, 13, 51214], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 112, "seek": 35600, "start": 373.0, "end": 375.0, "text": " So let's suppose we have some cipher text like this.", "tokens": [51214, 407, 718, 311, 7297, 321, 362, 512, 269, 21240, 2487, 411, 341, 13, 51314], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 113, "seek": 35600, "start": 375.0, "end": 381.0, "text": " We guess some rotor settings and we put it through our enigma machine and that will decrypt it.", "tokens": [51314, 492, 2041, 512, 26847, 6257, 293, 321, 829, 309, 807, 527, 465, 16150, 3479, 293, 300, 486, 979, 627, 662, 309, 13, 51614], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 114, "seek": 35600, "start": 381.0, "end": 383.0, "text": " Now, it will probably decrypt it incorrectly.", "tokens": [51614, 823, 11, 309, 486, 1391, 979, 627, 662, 309, 42892, 13, 51714], "temperature": 0.0, "avg_logprob": -0.17243883856411638, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.003701243083924055}, {"id": 115, "seek": 38300, "start": 383.0, "end": 391.0, "text": " But where we accidentally stumble upon the right plugs or we stumble upon the right rotor configuration, even for a briefly,", "tokens": [50364, 583, 689, 321, 15715, 41302, 3564, 264, 558, 33899, 420, 321, 41302, 3564, 264, 558, 26847, 11694, 11, 754, 337, 257, 10515, 11, 50764], "temperature": 0.0, "avg_logprob": -0.1037451880318778, "compression_ratio": 1.7735042735042734, "no_speech_prob": 0.0049020759761333466}, {"id": 116, "seek": 38300, "start": 391.0, "end": 395.0, "text": " we'll find that this decryption is slightly better than completely random, right?", "tokens": [50764, 321, 603, 915, 300, 341, 979, 627, 1695, 307, 4748, 1101, 813, 2584, 4974, 11, 558, 30, 50964], "temperature": 0.0, "avg_logprob": -0.1037451880318778, "compression_ratio": 1.7735042735042734, "no_speech_prob": 0.0049020759761333466}, {"id": 117, "seek": 38300, "start": 395.0, "end": 399.0, "text": " Because actually, mostly, this is completely random, right?", "tokens": [50964, 1436, 767, 11, 5240, 11, 341, 307, 2584, 4974, 11, 558, 30, 51164], "temperature": 0.0, "avg_logprob": -0.1037451880318778, "compression_ratio": 1.7735042735042734, "no_speech_prob": 0.0049020759761333466}, {"id": 118, "seek": 38300, "start": 399.0, "end": 403.0, "text": " Yes, we have this stipulation that letters can't turn to themselves.", "tokens": [51164, 1079, 11, 321, 362, 341, 37001, 2776, 300, 7825, 393, 380, 1261, 281, 2969, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1037451880318778, "compression_ratio": 1.7735042735042734, "no_speech_prob": 0.0049020759761333466}, {"id": 119, "seek": 38300, "start": 403.0, "end": 405.0, "text": " But generally speaking, it looks completely random.", "tokens": [51364, 583, 5101, 4124, 11, 309, 1542, 2584, 4974, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1037451880318778, "compression_ratio": 1.7735042735042734, "no_speech_prob": 0.0049020759761333466}, {"id": 120, "seek": 38300, "start": 405.0, "end": 406.0, "text": " So this is what we get out.", "tokens": [51464, 407, 341, 307, 437, 321, 483, 484, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1037451880318778, "compression_ratio": 1.7735042735042734, "no_speech_prob": 0.0049020759761333466}, {"id": 121, "seek": 40600, "start": 406.0, "end": 408.0, "text": " H, F.", "tokens": [50364, 389, 11, 479, 13, 50464], "temperature": 0.0, "avg_logprob": -0.09941600036621094, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.23909099400043488}, {"id": 122, "seek": 40600, "start": 408.0, "end": 410.0, "text": " My writing is bad today.", "tokens": [50464, 1222, 3579, 307, 1578, 965, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09941600036621094, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.23909099400043488}, {"id": 123, "seek": 40600, "start": 410.0, "end": 414.0, "text": " V, V, F, L, I, N, G.", "tokens": [50564, 691, 11, 691, 11, 479, 11, 441, 11, 286, 11, 426, 11, 460, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09941600036621094, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.23909099400043488}, {"id": 124, "seek": 40600, "start": 414.0, "end": 418.0, "text": " Now, the interesting thing about this is, I mean, it's complete nonsense, right?", "tokens": [50764, 823, 11, 264, 1880, 551, 466, 341, 307, 11, 286, 914, 11, 309, 311, 3566, 14925, 11, 558, 30, 50964], "temperature": 0.0, "avg_logprob": -0.09941600036621094, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.23909099400043488}, {"id": 125, "seek": 40600, "start": 418.0, "end": 422.0, "text": " I'm not cracking any words on this, but I do recognise ING.", "tokens": [50964, 286, 478, 406, 25229, 604, 2283, 322, 341, 11, 457, 286, 360, 23991, 6892, 38, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09941600036621094, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.23909099400043488}, {"id": 126, "seek": 40600, "start": 422.0, "end": 429.0, "text": " Now, ING is a fairly common trigram or set of three characters in the English language, right?", "tokens": [51164, 823, 11, 6892, 38, 307, 257, 6457, 2689, 504, 33737, 420, 992, 295, 1045, 4342, 294, 264, 3669, 2856, 11, 558, 30, 51514], "temperature": 0.0, "avg_logprob": -0.09941600036621094, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.23909099400043488}, {"id": 127, "seek": 40600, "start": 429.0, "end": 435.0, "text": " Now, that doesn't necessarily mean this is correct, but it's slightly more English, should we say, than this one, right?", "tokens": [51514, 823, 11, 300, 1177, 380, 4725, 914, 341, 307, 3006, 11, 457, 309, 311, 4748, 544, 3669, 11, 820, 321, 584, 11, 813, 341, 472, 11, 558, 30, 51814], "temperature": 0.0, "avg_logprob": -0.09941600036621094, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.23909099400043488}, {"id": 128, "seek": 43500, "start": 435.0, "end": 440.0, "text": " If we're measuring some amount of how English is this sentence, then it's a little bit closer than this.", "tokens": [50364, 759, 321, 434, 13389, 512, 2372, 295, 577, 3669, 307, 341, 8174, 11, 550, 309, 311, 257, 707, 857, 4966, 813, 341, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10865303241845334, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.04385368898510933}, {"id": 129, "seek": 43500, "start": 440.0, "end": 444.0, "text": " So maybe one of our rotors is in the right position and the others are wrong, right?", "tokens": [50614, 407, 1310, 472, 295, 527, 4297, 830, 307, 294, 264, 558, 2535, 293, 264, 2357, 366, 2085, 11, 558, 30, 50814], "temperature": 0.0, "avg_logprob": -0.10865303241845334, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.04385368898510933}, {"id": 130, "seek": 43500, "start": 444.0, "end": 448.0, "text": " Or our rotors are in the correct position, but our plugs are wrong, or something like this, right?", "tokens": [50814, 1610, 527, 4297, 830, 366, 294, 264, 3006, 2535, 11, 457, 527, 33899, 366, 2085, 11, 420, 746, 411, 341, 11, 558, 30, 51014], "temperature": 0.0, "avg_logprob": -0.10865303241845334, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.04385368898510933}, {"id": 131, "seek": 43500, "start": 448.0, "end": 456.0, "text": " And the idea is that we slowly go through different configurations of our enigma machine, I say slowly as fast as we can, right?", "tokens": [51014, 400, 264, 1558, 307, 300, 321, 5692, 352, 807, 819, 31493, 295, 527, 465, 16150, 3479, 11, 286, 584, 5692, 382, 2370, 382, 321, 393, 11, 558, 30, 51414], "temperature": 0.0, "avg_logprob": -0.10865303241845334, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.04385368898510933}, {"id": 132, "seek": 43500, "start": 456.0, "end": 464.0, "text": " And we measure statistical properties of these output sentences to find the ones that most closely resemble correct, decrypted text, right?", "tokens": [51414, 400, 321, 3481, 22820, 7221, 295, 613, 5598, 16579, 281, 915, 264, 2306, 300, 881, 8185, 36870, 3006, 11, 979, 627, 25383, 2487, 11, 558, 30, 51814], "temperature": 0.0, "avg_logprob": -0.10865303241845334, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.04385368898510933}, {"id": 133, "seek": 46400, "start": 464.0, "end": 468.0, "text": " And we can do this without looking at them. We don't have to look at them and say, well, that's a real word.", "tokens": [50364, 400, 321, 393, 360, 341, 1553, 1237, 412, 552, 13, 492, 500, 380, 362, 281, 574, 412, 552, 293, 584, 11, 731, 11, 300, 311, 257, 957, 1349, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08320908199082937, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.002147554885596037}, {"id": 134, "seek": 46400, "start": 468.0, "end": 471.0, "text": " We just measure statistical properties.", "tokens": [50564, 492, 445, 3481, 22820, 7221, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08320908199082937, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.002147554885596037}, {"id": 135, "seek": 46400, "start": 471.0, "end": 473.0, "text": " So what are some of these statistical properties?", "tokens": [50714, 407, 437, 366, 512, 295, 613, 22820, 7221, 30, 50814], "temperature": 0.0, "avg_logprob": -0.08320908199082937, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.002147554885596037}, {"id": 136, "seek": 46400, "start": 473.0, "end": 478.0, "text": " Well, the first one is called the index of coincidence, or IOC.", "tokens": [50814, 1042, 11, 264, 700, 472, 307, 1219, 264, 8186, 295, 22137, 11, 420, 286, 30087, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08320908199082937, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.002147554885596037}, {"id": 137, "seek": 46400, "start": 478.0, "end": 483.0, "text": " This is the probability that when you pick two letters at random, they'll be the same.", "tokens": [51064, 639, 307, 264, 8482, 300, 562, 291, 1888, 732, 7825, 412, 4974, 11, 436, 603, 312, 264, 912, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08320908199082937, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.002147554885596037}, {"id": 138, "seek": 46400, "start": 483.0, "end": 487.0, "text": " So for example, if we randomly pick P and then we randomly pick P, that's versus the same.", "tokens": [51314, 407, 337, 1365, 11, 498, 321, 16979, 1888, 430, 293, 550, 321, 16979, 1888, 430, 11, 300, 311, 5717, 264, 912, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08320908199082937, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.002147554885596037}, {"id": 139, "seek": 46400, "start": 487.0, "end": 489.0, "text": " If we pick P and then L, they're not the same.", "tokens": [51514, 759, 321, 1888, 430, 293, 550, 441, 11, 436, 434, 406, 264, 912, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08320908199082937, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.002147554885596037}, {"id": 140, "seek": 46400, "start": 489.0, "end": 491.0, "text": " You know, we won't write the form out. The form is not that complicated.", "tokens": [51614, 509, 458, 11, 321, 1582, 380, 2464, 264, 1254, 484, 13, 440, 1254, 307, 406, 300, 6179, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08320908199082937, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.002147554885596037}, {"id": 141, "seek": 49100, "start": 491.0, "end": 497.0, "text": " So what you have to do is go through and count every single character and how many of each one there are.", "tokens": [50364, 407, 437, 291, 362, 281, 360, 307, 352, 807, 293, 1207, 633, 2167, 2517, 293, 577, 867, 295, 1184, 472, 456, 366, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09030257430032035, "compression_ratio": 1.6370106761565837, "no_speech_prob": 0.025160284712910652}, {"id": 142, "seek": 49100, "start": 497.0, "end": 501.0, "text": " You produce a histogram and then you can calculate the index of coincidence based on this.", "tokens": [50664, 509, 5258, 257, 49816, 293, 550, 291, 393, 8873, 264, 8186, 295, 22137, 2361, 322, 341, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09030257430032035, "compression_ratio": 1.6370106761565837, "no_speech_prob": 0.025160284712910652}, {"id": 143, "seek": 49100, "start": 501.0, "end": 510.0, "text": " Now, for random text, that is text that's been put through an enigma machine and not decrypted, the index of coincidence is usually something like 0.038, right?", "tokens": [50864, 823, 11, 337, 4974, 2487, 11, 300, 307, 2487, 300, 311, 668, 829, 807, 364, 465, 16150, 3479, 293, 406, 979, 627, 25383, 11, 264, 8186, 295, 22137, 307, 2673, 746, 411, 1958, 13, 11592, 23, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.09030257430032035, "compression_ratio": 1.6370106761565837, "no_speech_prob": 0.025160284712910652}, {"id": 144, "seek": 49100, "start": 510.0, "end": 515.0, "text": " Which is basically everything's evenly distributed. There's nothing interesting going on there at all.", "tokens": [51314, 3013, 307, 1936, 1203, 311, 17658, 12631, 13, 821, 311, 1825, 1880, 516, 322, 456, 412, 439, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09030257430032035, "compression_ratio": 1.6370106761565837, "no_speech_prob": 0.025160284712910652}, {"id": 145, "seek": 51500, "start": 515.0, "end": 522.0, "text": " But for decrypted English text, we usually get a higher index of coincidence about 0.067.", "tokens": [50364, 583, 337, 979, 627, 25383, 3669, 2487, 11, 321, 2673, 483, 257, 2946, 8186, 295, 22137, 466, 1958, 13, 12791, 22, 13, 50714], "temperature": 0.0, "avg_logprob": -0.05679620698440906, "compression_ratio": 1.6501650165016502, "no_speech_prob": 0.25359147787094116}, {"id": 146, "seek": 51500, "start": 522.0, "end": 524.0, "text": " And I think it's something like 0.072 for German text.", "tokens": [50714, 400, 286, 519, 309, 311, 746, 411, 1958, 13, 16231, 17, 337, 6521, 2487, 13, 50814], "temperature": 0.0, "avg_logprob": -0.05679620698440906, "compression_ratio": 1.6501650165016502, "no_speech_prob": 0.25359147787094116}, {"id": 147, "seek": 51500, "start": 524.0, "end": 530.0, "text": " One way of looking at it is it measures the fact that some characters have more higher probabilities than others.", "tokens": [50814, 1485, 636, 295, 1237, 412, 309, 307, 309, 8000, 264, 1186, 300, 512, 4342, 362, 544, 2946, 33783, 813, 2357, 13, 51114], "temperature": 0.0, "avg_logprob": -0.05679620698440906, "compression_ratio": 1.6501650165016502, "no_speech_prob": 0.25359147787094116}, {"id": 148, "seek": 51500, "start": 530.0, "end": 532.0, "text": " If everything's equally likely, you get something like this.", "tokens": [51114, 759, 1203, 311, 12309, 3700, 11, 291, 483, 746, 411, 341, 13, 51214], "temperature": 0.0, "avg_logprob": -0.05679620698440906, "compression_ratio": 1.6501650165016502, "no_speech_prob": 0.25359147787094116}, {"id": 149, "seek": 51500, "start": 532.0, "end": 537.0, "text": " If some characters are quite common and so they tend to come up in pairs, it starts to look a little bit higher, right?", "tokens": [51214, 759, 512, 4342, 366, 1596, 2689, 293, 370, 436, 3928, 281, 808, 493, 294, 15494, 11, 309, 3719, 281, 574, 257, 707, 857, 2946, 11, 558, 30, 51464], "temperature": 0.0, "avg_logprob": -0.05679620698440906, "compression_ratio": 1.6501650165016502, "no_speech_prob": 0.25359147787094116}, {"id": 150, "seek": 51500, "start": 537.0, "end": 538.0, "text": " It never goes higher than this.", "tokens": [51464, 467, 1128, 1709, 2946, 813, 341, 13, 51514], "temperature": 0.0, "avg_logprob": -0.05679620698440906, "compression_ratio": 1.6501650165016502, "no_speech_prob": 0.25359147787094116}, {"id": 151, "seek": 51500, "start": 538.0, "end": 540.0, "text": " So, well, you're not really.", "tokens": [51514, 407, 11, 731, 11, 291, 434, 406, 534, 13, 51614], "temperature": 0.0, "avg_logprob": -0.05679620698440906, "compression_ratio": 1.6501650165016502, "no_speech_prob": 0.25359147787094116}, {"id": 152, "seek": 54000, "start": 540.0, "end": 545.0, "text": " What we can do is we can work through our rotors, different rotors, different positions, different settings,", "tokens": [50364, 708, 321, 393, 360, 307, 321, 393, 589, 807, 527, 4297, 830, 11, 819, 4297, 830, 11, 819, 8432, 11, 819, 6257, 11, 50614], "temperature": 0.0, "avg_logprob": -0.08035966384509378, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.025141486898064613}, {"id": 153, "seek": 54000, "start": 545.0, "end": 551.0, "text": " and we can calculate our index of coincidence and we take the best scoring texts, right?", "tokens": [50614, 293, 321, 393, 8873, 527, 8186, 295, 22137, 293, 321, 747, 264, 1151, 22358, 15765, 11, 558, 30, 50914], "temperature": 0.0, "avg_logprob": -0.08035966384509378, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.025141486898064613}, {"id": 154, "seek": 54000, "start": 551.0, "end": 556.0, "text": " So where our output has a higher index of coincidence, we think maybe we've got the rotor settings correct, right?", "tokens": [50914, 407, 689, 527, 5598, 575, 257, 2946, 8186, 295, 22137, 11, 321, 519, 1310, 321, 600, 658, 264, 26847, 6257, 3006, 11, 558, 30, 51164], "temperature": 0.0, "avg_logprob": -0.08035966384509378, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.025141486898064613}, {"id": 155, "seek": 54000, "start": 556.0, "end": 558.0, "text": " And that's basically how it works.", "tokens": [51164, 400, 300, 311, 1936, 577, 309, 1985, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08035966384509378, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.025141486898064613}, {"id": 156, "seek": 54000, "start": 558.0, "end": 562.0, "text": " There's been a number file, right, where they actually got to use an enigma machine and I'm super jealous.", "tokens": [51264, 821, 311, 668, 257, 1230, 3991, 11, 558, 11, 689, 436, 767, 658, 281, 764, 364, 465, 16150, 3479, 293, 286, 478, 1687, 13805, 13, 51464], "temperature": 0.0, "avg_logprob": -0.08035966384509378, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.025141486898064613}, {"id": 157, "seek": 54000, "start": 562.0, "end": 564.0, "text": " They talked about the number of different combinations.", "tokens": [51464, 814, 2825, 466, 264, 1230, 295, 819, 21267, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08035966384509378, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.025141486898064613}, {"id": 158, "seek": 56400, "start": 564.0, "end": 570.0, "text": " So it's all very well saying, OK, we'll just go through all the rotor settings and work out, you know, what the best one is, right?", "tokens": [50364, 407, 309, 311, 439, 588, 731, 1566, 11, 2264, 11, 321, 603, 445, 352, 807, 439, 264, 26847, 6257, 293, 589, 484, 11, 291, 458, 11, 437, 264, 1151, 472, 307, 11, 558, 30, 50664], "temperature": 0.0, "avg_logprob": -0.0837588762714915, "compression_ratio": 1.7859649122807018, "no_speech_prob": 0.06845153123140335}, {"id": 159, "seek": 56400, "start": 570.0, "end": 573.0, "text": " Maybe if I have, you know, a super, super, super computer.", "tokens": [50664, 2704, 498, 286, 362, 11, 291, 458, 11, 257, 1687, 11, 1687, 11, 1687, 3820, 13, 50814], "temperature": 0.0, "avg_logprob": -0.0837588762714915, "compression_ratio": 1.7859649122807018, "no_speech_prob": 0.06845153123140335}, {"id": 160, "seek": 56400, "start": 573.0, "end": 578.0, "text": " But actually, enigma has a nifty weakness in this sense, right?", "tokens": [50814, 583, 767, 11, 465, 16150, 575, 257, 297, 37177, 12772, 294, 341, 2020, 11, 558, 30, 51064], "temperature": 0.0, "avg_logprob": -0.0837588762714915, "compression_ratio": 1.7859649122807018, "no_speech_prob": 0.06845153123140335}, {"id": 161, "seek": 56400, "start": 578.0, "end": 583.0, "text": " Which is that if you get some of the settings correct, this will improve, right?", "tokens": [51064, 3013, 307, 300, 498, 291, 483, 512, 295, 264, 6257, 3006, 11, 341, 486, 3470, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.0837588762714915, "compression_ratio": 1.7859649122807018, "no_speech_prob": 0.06845153123140335}, {"id": 162, "seek": 56400, "start": 583.0, "end": 587.0, "text": " If I get the rotor positions correct, even though the rotors are in slightly the wrong position,", "tokens": [51314, 759, 286, 483, 264, 26847, 8432, 3006, 11, 754, 1673, 264, 4297, 830, 366, 294, 4748, 264, 2085, 2535, 11, 51514], "temperature": 0.0, "avg_logprob": -0.0837588762714915, "compression_ratio": 1.7859649122807018, "no_speech_prob": 0.06845153123140335}, {"id": 163, "seek": 56400, "start": 587.0, "end": 591.0, "text": " the result will be better than if I've got the wrong rotors in place, right?", "tokens": [51514, 264, 1874, 486, 312, 1101, 813, 498, 286, 600, 658, 264, 2085, 4297, 830, 294, 1081, 11, 558, 30, 51714], "temperature": 0.0, "avg_logprob": -0.0837588762714915, "compression_ratio": 1.7859649122807018, "no_speech_prob": 0.06845153123140335}, {"id": 164, "seek": 59100, "start": 591.0, "end": 596.0, "text": " If I get one of the plug board settings, right, the results will be better than if I've got none of the plug board settings, right?", "tokens": [50364, 759, 286, 483, 472, 295, 264, 5452, 3150, 6257, 11, 558, 11, 264, 3542, 486, 312, 1101, 813, 498, 286, 600, 658, 6022, 295, 264, 5452, 3150, 6257, 11, 558, 30, 50614], "temperature": 0.0, "avg_logprob": -0.13136646109567562, "compression_ratio": 1.8547297297297298, "no_speech_prob": 0.0014991561183705926}, {"id": 165, "seek": 59100, "start": 596.0, "end": 600.0, "text": " Because basically fewer characters will be incorrect, right?", "tokens": [50614, 1436, 1936, 13366, 4342, 486, 312, 18424, 11, 558, 30, 50814], "temperature": 0.0, "avg_logprob": -0.13136646109567562, "compression_ratio": 1.8547297297297298, "no_speech_prob": 0.0014991561183705926}, {"id": 166, "seek": 59100, "start": 600.0, "end": 607.0, "text": " Suthily. So you've got three out of, let's say, five rotors or eight rotors.", "tokens": [50814, 318, 2910, 953, 13, 407, 291, 600, 658, 1045, 484, 295, 11, 718, 311, 584, 11, 1732, 4297, 830, 420, 3180, 4297, 830, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13136646109567562, "compression_ratio": 1.8547297297297298, "no_speech_prob": 0.0014991561183705926}, {"id": 167, "seek": 59100, "start": 607.0, "end": 610.0, "text": " So that's physically the three that happen to be in the machine at the time.", "tokens": [51164, 407, 300, 311, 9762, 264, 1045, 300, 1051, 281, 312, 294, 264, 3479, 412, 264, 565, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13136646109567562, "compression_ratio": 1.8547297297297298, "no_speech_prob": 0.0014991561183705926}, {"id": 168, "seek": 59100, "start": 610.0, "end": 612.0, "text": " Yeah, and you've got very different positions, right?", "tokens": [51314, 865, 11, 293, 291, 600, 658, 588, 819, 8432, 11, 558, 30, 51414], "temperature": 0.0, "avg_logprob": -0.13136646109567562, "compression_ratio": 1.8547297297297298, "no_speech_prob": 0.0014991561183705926}, {"id": 169, "seek": 59100, "start": 612.0, "end": 616.0, "text": " So if for today we just talk about five rotors just because I've always been sitting here a little bit longer,", "tokens": [51414, 407, 498, 337, 965, 321, 445, 751, 466, 1732, 4297, 830, 445, 570, 286, 600, 1009, 668, 3798, 510, 257, 707, 857, 2854, 11, 51614], "temperature": 0.0, "avg_logprob": -0.13136646109567562, "compression_ratio": 1.8547297297297298, "no_speech_prob": 0.0014991561183705926}, {"id": 170, "seek": 59100, "start": 616.0, "end": 619.0, "text": " then we've got 60 possible positions.", "tokens": [51614, 550, 321, 600, 658, 4060, 1944, 8432, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13136646109567562, "compression_ratio": 1.8547297297297298, "no_speech_prob": 0.0014991561183705926}, {"id": 171, "seek": 61900, "start": 619.0, "end": 622.0, "text": " One, we've got to choose three out of five, and then they can all go in any slot.", "tokens": [50364, 1485, 11, 321, 600, 658, 281, 2826, 1045, 484, 295, 1732, 11, 293, 550, 436, 393, 439, 352, 294, 604, 14747, 13, 50514], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 172, "seek": 61900, "start": 622.0, "end": 625.0, "text": " You don't tend to have the same rotor twice, right?", "tokens": [50514, 509, 500, 380, 3928, 281, 362, 264, 912, 26847, 6091, 11, 558, 30, 50664], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 173, "seek": 61900, "start": 625.0, "end": 628.0, "text": " Because, I mean, they didn't have those duplicates of rotors.", "tokens": [50664, 1436, 11, 286, 914, 11, 436, 994, 380, 362, 729, 17154, 1024, 295, 4297, 830, 13, 50814], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 174, "seek": 61900, "start": 628.0, "end": 629.0, "text": " One set of them.", "tokens": [50814, 1485, 992, 295, 552, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 175, "seek": 61900, "start": 629.0, "end": 631.0, "text": " Yeah, yeah, yeah.", "tokens": [50864, 865, 11, 1338, 11, 1338, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 176, "seek": 61900, "start": 631.0, "end": 633.0, "text": " Yeah. So we've got that.", "tokens": [50964, 865, 13, 407, 321, 600, 658, 300, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 177, "seek": 61900, "start": 633.0, "end": 637.0, "text": " Then for each of these, we have a start position from one to 26,", "tokens": [51064, 1396, 337, 1184, 295, 613, 11, 321, 362, 257, 722, 2535, 490, 472, 281, 7551, 11, 51264], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 178, "seek": 61900, "start": 637.0, "end": 640.0, "text": " which is, you know, what letter is showing on the top, right?", "tokens": [51264, 597, 307, 11, 291, 458, 11, 437, 5063, 307, 4099, 322, 264, 1192, 11, 558, 30, 51414], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 179, "seek": 61900, "start": 640.0, "end": 642.0, "text": " Basically how rotated it is.", "tokens": [51414, 8537, 577, 42146, 309, 307, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 180, "seek": 61900, "start": 642.0, "end": 645.0, "text": " So you've got the start position or the indicator setting.", "tokens": [51514, 407, 291, 600, 658, 264, 722, 2535, 420, 264, 16961, 3287, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13218590911005584, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.0019839920569211245}, {"id": 181, "seek": 64500, "start": 645.0, "end": 650.0, "text": " So there's, you know, times, I said, 26 of those times by three of the different rotors, right?", "tokens": [50364, 407, 456, 311, 11, 291, 458, 11, 1413, 11, 286, 848, 11, 7551, 295, 729, 1413, 538, 1045, 295, 264, 819, 4297, 830, 11, 558, 30, 50614], "temperature": 0.0, "avg_logprob": -0.08787608513465295, "compression_ratio": 1.818867924528302, "no_speech_prob": 0.00101456546690315}, {"id": 182, "seek": 64500, "start": 650.0, "end": 652.0, "text": " Then you've got the ring setting.", "tokens": [50614, 1396, 291, 600, 658, 264, 4875, 3287, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08787608513465295, "compression_ratio": 1.818867924528302, "no_speech_prob": 0.00101456546690315}, {"id": 183, "seek": 64500, "start": 652.0, "end": 656.0, "text": " Now, the ring setting is essentially rotating the internals of the rotor.", "tokens": [50714, 823, 11, 264, 4875, 3287, 307, 4476, 19627, 264, 2154, 1124, 295, 264, 26847, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08787608513465295, "compression_ratio": 1.818867924528302, "no_speech_prob": 0.00101456546690315}, {"id": 184, "seek": 64500, "start": 656.0, "end": 660.0, "text": " Now, actually, if we ignore the notch for a minute, which I'll talk about,", "tokens": [50914, 823, 11, 767, 11, 498, 321, 11200, 264, 26109, 337, 257, 3456, 11, 597, 286, 603, 751, 466, 11, 51114], "temperature": 0.0, "avg_logprob": -0.08787608513465295, "compression_ratio": 1.818867924528302, "no_speech_prob": 0.00101456546690315}, {"id": 185, "seek": 64500, "start": 660.0, "end": 666.0, "text": " if you rotate the ring and you rotate the actual whole rotor, they kind of cancel each other out.", "tokens": [51114, 498, 291, 13121, 264, 4875, 293, 291, 13121, 264, 3539, 1379, 26847, 11, 436, 733, 295, 10373, 1184, 661, 484, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08787608513465295, "compression_ratio": 1.818867924528302, "no_speech_prob": 0.00101456546690315}, {"id": 186, "seek": 64500, "start": 666.0, "end": 669.0, "text": " So it's about the notch position, really.", "tokens": [51414, 407, 309, 311, 466, 264, 26109, 2535, 11, 534, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08787608513465295, "compression_ratio": 1.818867924528302, "no_speech_prob": 0.00101456546690315}, {"id": 187, "seek": 64500, "start": 669.0, "end": 673.0, "text": " The notch is when the rotor turns, it turns the next one along.", "tokens": [51564, 440, 26109, 307, 562, 264, 26847, 4523, 11, 309, 4523, 264, 958, 472, 2051, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08787608513465295, "compression_ratio": 1.818867924528302, "no_speech_prob": 0.00101456546690315}, {"id": 188, "seek": 67300, "start": 673.0, "end": 678.0, "text": " And so the combination of your start position and your ring setting will mean where your notch is and then when it turns around.", "tokens": [50364, 400, 370, 264, 6562, 295, 428, 722, 2535, 293, 428, 4875, 3287, 486, 914, 689, 428, 26109, 307, 293, 550, 562, 309, 4523, 926, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 189, "seek": 67300, "start": 678.0, "end": 680.0, "text": " So you've got the ring settings, right?", "tokens": [50614, 407, 291, 600, 658, 264, 4875, 6257, 11, 558, 30, 50714], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 190, "seek": 67300, "start": 680.0, "end": 682.0, "text": " Which is going to be 26 times three again.", "tokens": [50714, 3013, 307, 516, 281, 312, 7551, 1413, 1045, 797, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 191, "seek": 67300, "start": 682.0, "end": 685.0, "text": " Then we've got the plug board, which, as you know, swaps random characters,", "tokens": [50814, 1396, 321, 600, 658, 264, 5452, 3150, 11, 597, 11, 382, 291, 458, 11, 1693, 2382, 4974, 4342, 11, 50964], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 192, "seek": 67300, "start": 685.0, "end": 690.0, "text": " and that's got something like 10 different pairs out of 13 possible pairs.", "tokens": [50964, 293, 300, 311, 658, 746, 411, 1266, 819, 15494, 484, 295, 3705, 1944, 15494, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 193, "seek": 67300, "start": 690.0, "end": 693.0, "text": " That's 150 trillion, I think, different combinations.", "tokens": [51214, 663, 311, 8451, 18723, 11, 286, 519, 11, 819, 21267, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 194, "seek": 67300, "start": 693.0, "end": 696.0, "text": " That's, you know, out of reach of my laptop.", "tokens": [51364, 663, 311, 11, 291, 458, 11, 484, 295, 2524, 295, 452, 10732, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 195, "seek": 67300, "start": 696.0, "end": 700.0, "text": " Certainly when I'm doing all these decryptions as well and we're multiplied by all these things, right?", "tokens": [51514, 16628, 562, 286, 478, 884, 439, 613, 979, 627, 9799, 382, 731, 293, 321, 434, 17207, 538, 439, 613, 721, 11, 558, 30, 51714], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 196, "seek": 67300, "start": 700.0, "end": 702.0, "text": " The number file goes into much better detail on this.", "tokens": [51714, 440, 1230, 3991, 1709, 666, 709, 1101, 2607, 322, 341, 13, 51814], "temperature": 0.0, "avg_logprob": -0.08224566878786513, "compression_ratio": 1.753541076487252, "no_speech_prob": 0.0010640801629051566}, {"id": 197, "seek": 70200, "start": 702.0, "end": 706.0, "text": " We're looking at five today because, again, I don't want to be here all day.", "tokens": [50364, 492, 434, 1237, 412, 1732, 965, 570, 11, 797, 11, 286, 500, 380, 528, 281, 312, 510, 439, 786, 13, 50564], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 198, "seek": 70200, "start": 706.0, "end": 708.0, "text": " It does get harder to solve and we'll talk about that.", "tokens": [50564, 467, 775, 483, 6081, 281, 5039, 293, 321, 603, 751, 466, 300, 13, 50664], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 199, "seek": 70200, "start": 708.0, "end": 709.0, "text": " So this is a lot of combinations.", "tokens": [50664, 407, 341, 307, 257, 688, 295, 21267, 13, 50714], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 200, "seek": 70200, "start": 709.0, "end": 714.0, "text": " It's too many combinations for me to go through, even with this nice little indictical coincidence thing, right?", "tokens": [50714, 467, 311, 886, 867, 21267, 337, 385, 281, 352, 807, 11, 754, 365, 341, 1481, 707, 1016, 985, 804, 22137, 551, 11, 558, 30, 50964], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 201, "seek": 70200, "start": 714.0, "end": 717.0, "text": " Even though when I get this exactly right, I will just get the plain text out", "tokens": [50964, 2754, 1673, 562, 286, 483, 341, 2293, 558, 11, 286, 486, 445, 483, 264, 11121, 2487, 484, 51114], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 202, "seek": 70200, "start": 717.0, "end": 720.0, "text": " and it will have a very nice indictical coincidence and I might be able to find it.", "tokens": [51114, 293, 309, 486, 362, 257, 588, 1481, 1016, 985, 804, 22137, 293, 286, 1062, 312, 1075, 281, 915, 309, 13, 51264], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 203, "seek": 70200, "start": 720.0, "end": 722.0, "text": " So what do we do?", "tokens": [51264, 407, 437, 360, 321, 360, 30, 51364], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 204, "seek": 70200, "start": 722.0, "end": 726.0, "text": " Well, the weakness of enigma is that if we get some of these things right,", "tokens": [51364, 1042, 11, 264, 12772, 295, 465, 16150, 307, 300, 498, 321, 483, 512, 295, 613, 721, 558, 11, 51564], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 205, "seek": 70200, "start": 726.0, "end": 730.0, "text": " even if the others are wrong, we get a little bit closer to the answer, usually.", "tokens": [51564, 754, 498, 264, 2357, 366, 2085, 11, 321, 483, 257, 707, 857, 4966, 281, 264, 1867, 11, 2673, 13, 51764], "temperature": 0.0, "avg_logprob": -0.0725872328787139, "compression_ratio": 1.7593123209169055, "no_speech_prob": 0.006484941579401493}, {"id": 206, "seek": 73000, "start": 730.0, "end": 735.0, "text": " So, for example, if you get the correct three rotors in the correct positions", "tokens": [50364, 407, 11, 337, 1365, 11, 498, 291, 483, 264, 3006, 1045, 4297, 830, 294, 264, 3006, 8432, 50614], "temperature": 0.0, "avg_logprob": -0.08508040248483852, "compression_ratio": 1.8692579505300353, "no_speech_prob": 0.004900653846561909}, {"id": 207, "seek": 73000, "start": 735.0, "end": 739.0, "text": " and you get their start positions roughly correct, if your ring settings are wrong,", "tokens": [50614, 293, 291, 483, 641, 722, 8432, 9810, 3006, 11, 498, 428, 4875, 6257, 366, 2085, 11, 50814], "temperature": 0.0, "avg_logprob": -0.08508040248483852, "compression_ratio": 1.8692579505300353, "no_speech_prob": 0.004900653846561909}, {"id": 208, "seek": 73000, "start": 739.0, "end": 741.0, "text": " all that will do is mess around with the notches.", "tokens": [50814, 439, 300, 486, 360, 307, 2082, 926, 365, 264, 406, 3781, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08508040248483852, "compression_ratio": 1.8692579505300353, "no_speech_prob": 0.004900653846561909}, {"id": 209, "seek": 73000, "start": 741.0, "end": 746.0, "text": " So you'll get bits of your plain text correct and then bits of cypher text and then bits of plain text", "tokens": [50914, 407, 291, 603, 483, 9239, 295, 428, 11121, 2487, 3006, 293, 550, 9239, 295, 3185, 79, 511, 2487, 293, 550, 9239, 295, 11121, 2487, 51164], "temperature": 0.0, "avg_logprob": -0.08508040248483852, "compression_ratio": 1.8692579505300353, "no_speech_prob": 0.004900653846561909}, {"id": 210, "seek": 73000, "start": 746.0, "end": 751.0, "text": " and you get these kind of pockets of valid characters coming out of into the decryption.", "tokens": [51164, 293, 291, 483, 613, 733, 295, 16491, 295, 7363, 4342, 1348, 484, 295, 666, 264, 979, 627, 1695, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08508040248483852, "compression_ratio": 1.8692579505300353, "no_speech_prob": 0.004900653846561909}, {"id": 211, "seek": 73000, "start": 751.0, "end": 754.0, "text": " It will still score better on IOC or any other metric.", "tokens": [51414, 467, 486, 920, 6175, 1101, 322, 286, 30087, 420, 604, 661, 20678, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08508040248483852, "compression_ratio": 1.8692579505300353, "no_speech_prob": 0.004900653846561909}, {"id": 212, "seek": 73000, "start": 754.0, "end": 755.0, "text": " So that's what we're going to do.", "tokens": [51564, 407, 300, 311, 437, 321, 434, 516, 281, 360, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08508040248483852, "compression_ratio": 1.8692579505300353, "no_speech_prob": 0.004900653846561909}, {"id": 213, "seek": 73000, "start": 755.0, "end": 757.0, "text": " And this is the same with the plugs.", "tokens": [51614, 400, 341, 307, 264, 912, 365, 264, 33899, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08508040248483852, "compression_ratio": 1.8692579505300353, "no_speech_prob": 0.004900653846561909}, {"id": 214, "seek": 75700, "start": 757.0, "end": 761.0, "text": " If we get the rotors and the start positions and the ring settings correct,", "tokens": [50364, 759, 321, 483, 264, 4297, 830, 293, 264, 722, 8432, 293, 264, 4875, 6257, 3006, 11, 50564], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 215, "seek": 75700, "start": 761.0, "end": 763.0, "text": " then we can start to guess plugs.", "tokens": [50564, 550, 321, 393, 722, 281, 2041, 33899, 13, 50664], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 216, "seek": 75700, "start": 763.0, "end": 767.0, "text": " And generally speaking, if we guess one correctly, the output would be better", "tokens": [50664, 400, 5101, 4124, 11, 498, 321, 2041, 472, 8944, 11, 264, 5598, 576, 312, 1101, 50864], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 217, "seek": 75700, "start": 767.0, "end": 769.0, "text": " and we can then move towards a solution.", "tokens": [50864, 293, 321, 393, 550, 1286, 3030, 257, 3827, 13, 50964], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 218, "seek": 75700, "start": 769.0, "end": 773.0, "text": " There's a lot of possible variations, but the fact that we can deal with some of them at a time", "tokens": [50964, 821, 311, 257, 688, 295, 1944, 17840, 11, 457, 264, 1186, 300, 321, 393, 2028, 365, 512, 295, 552, 412, 257, 565, 51164], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 219, "seek": 75700, "start": 773.0, "end": 775.0, "text": " makes this practical.", "tokens": [51164, 1669, 341, 8496, 13, 51264], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 220, "seek": 75700, "start": 775.0, "end": 778.0, "text": " If we had to brute force through all the different variations, it wouldn't be possible.", "tokens": [51264, 759, 321, 632, 281, 47909, 3464, 807, 439, 264, 819, 17840, 11, 309, 2759, 380, 312, 1944, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 221, "seek": 75700, "start": 778.0, "end": 779.0, "text": " That's the idea.", "tokens": [51414, 663, 311, 264, 1558, 13, 51464], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 222, "seek": 75700, "start": 779.0, "end": 781.0, "text": " So I've written some code to do this.", "tokens": [51464, 407, 286, 600, 3720, 512, 3089, 281, 360, 341, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 223, "seek": 75700, "start": 781.0, "end": 784.0, "text": " If you want to have a go, I'll make my code available,", "tokens": [51564, 759, 291, 528, 281, 362, 257, 352, 11, 286, 603, 652, 452, 3089, 2435, 11, 51714], "temperature": 0.0, "avg_logprob": -0.07107871770858765, "compression_ratio": 1.7605177993527508, "no_speech_prob": 0.011491945013403893}, {"id": 224, "seek": 78400, "start": 784.0, "end": 788.0, "text": " but also there's a really good online tool called Crypto, which lets you do this in a visual way.", "tokens": [50364, 457, 611, 456, 311, 257, 534, 665, 2950, 2290, 1219, 34809, 78, 11, 597, 6653, 291, 360, 341, 294, 257, 5056, 636, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 225, "seek": 78400, "start": 788.0, "end": 790.0, "text": " We'll put a link to that in the description.", "tokens": [50564, 492, 603, 829, 257, 2113, 281, 300, 294, 264, 3855, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 226, "seek": 78400, "start": 790.0, "end": 792.0, "text": " But I've written some pretty simple code here.", "tokens": [50664, 583, 286, 600, 3720, 512, 1238, 2199, 3089, 510, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 227, "seek": 78400, "start": 792.0, "end": 794.0, "text": " I implemented enigma machine because it was fun.", "tokens": [50764, 286, 12270, 465, 16150, 3479, 570, 309, 390, 1019, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 228, "seek": 78400, "start": 794.0, "end": 798.0, "text": " And then I implemented a number of different fitness functions,", "tokens": [50864, 400, 550, 286, 12270, 257, 1230, 295, 819, 15303, 6828, 11, 51064], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 229, "seek": 78400, "start": 798.0, "end": 801.0, "text": " which is how good is our decryption.", "tokens": [51064, 597, 307, 577, 665, 307, 527, 979, 627, 1695, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 230, "seek": 78400, "start": 801.0, "end": 803.0, "text": " Index of coincidence is one.", "tokens": [51214, 33552, 295, 22137, 307, 472, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 231, "seek": 78400, "start": 803.0, "end": 806.0, "text": " I also maybe can talk about some others another time.", "tokens": [51314, 286, 611, 1310, 393, 751, 466, 512, 2357, 1071, 565, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 232, "seek": 78400, "start": 806.0, "end": 808.0, "text": " So you were kind of sending some cypher text.", "tokens": [51464, 407, 291, 645, 733, 295, 7750, 512, 3185, 79, 511, 2487, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 233, "seek": 78400, "start": 808.0, "end": 809.0, "text": " I don't know what it is.", "tokens": [51564, 286, 500, 380, 458, 437, 309, 307, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 234, "seek": 78400, "start": 809.0, "end": 813.0, "text": " And it's been encrypted by some enigma configuration with, I think, five plugs.", "tokens": [51614, 400, 309, 311, 668, 36663, 538, 512, 465, 16150, 11694, 365, 11, 286, 519, 11, 1732, 33899, 13, 51814], "temperature": 0.0, "avg_logprob": -0.09482730518687855, "compression_ratio": 1.6656976744186047, "no_speech_prob": 0.018498465418815613}, {"id": 235, "seek": 81300, "start": 813.0, "end": 818.0, "text": " The first thing I do is I go through all the different rotor configurations.", "tokens": [50364, 440, 700, 551, 286, 360, 307, 286, 352, 807, 439, 264, 819, 26847, 31493, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10954402527719173, "compression_ratio": 1.6487603305785123, "no_speech_prob": 0.0021131441462785006}, {"id": 236, "seek": 81300, "start": 818.0, "end": 823.0, "text": " And I find the one that has the highest index of coincidence score when it decrypts that message.", "tokens": [50614, 400, 286, 915, 264, 472, 300, 575, 264, 6343, 8186, 295, 22137, 6175, 562, 309, 979, 627, 39280, 300, 3636, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10954402527719173, "compression_ratio": 1.6487603305785123, "no_speech_prob": 0.0021131441462785006}, {"id": 237, "seek": 81300, "start": 823.0, "end": 830.0, "text": " So this is five different rotors, each one tried in each position and each starting position.", "tokens": [50864, 407, 341, 307, 1732, 819, 4297, 830, 11, 1184, 472, 3031, 294, 1184, 2535, 293, 1184, 2891, 2535, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10954402527719173, "compression_ratio": 1.6487603305785123, "no_speech_prob": 0.0021131441462785006}, {"id": 238, "seek": 81300, "start": 830.0, "end": 832.0, "text": " So that's 26 for each one.", "tokens": [51214, 407, 300, 311, 7551, 337, 1184, 472, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10954402527719173, "compression_ratio": 1.6487603305785123, "no_speech_prob": 0.0021131441462785006}, {"id": 239, "seek": 81300, "start": 832.0, "end": 835.0, "text": " So that's quite a few combinations, about 17,000.", "tokens": [51314, 407, 300, 311, 1596, 257, 1326, 21267, 11, 466, 3282, 11, 1360, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10954402527719173, "compression_ratio": 1.6487603305785123, "no_speech_prob": 0.0021131441462785006}, {"id": 240, "seek": 81300, "start": 835.0, "end": 839.0, "text": " But 17,000 for a laptop in 2021, not such a big deal.", "tokens": [51464, 583, 3282, 11, 1360, 337, 257, 10732, 294, 7201, 11, 406, 1270, 257, 955, 2028, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10954402527719173, "compression_ratio": 1.6487603305785123, "no_speech_prob": 0.0021131441462785006}, {"id": 241, "seek": 83900, "start": 839.0, "end": 843.0, "text": " It takes somewhere around 10 seconds or something like that.", "tokens": [50364, 467, 2516, 4079, 926, 1266, 3949, 420, 746, 411, 300, 13, 50564], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 242, "seek": 83900, "start": 843.0, "end": 846.0, "text": " So you can see what it's doing now is it's stepping through the different rotors.", "tokens": [50564, 407, 291, 393, 536, 437, 309, 311, 884, 586, 307, 309, 311, 16821, 807, 264, 819, 4297, 830, 13, 50714], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 243, "seek": 83900, "start": 846.0, "end": 849.0, "text": " So one, two, three, one, two, four, one, two, five.", "tokens": [50714, 407, 472, 11, 732, 11, 1045, 11, 472, 11, 732, 11, 1451, 11, 472, 11, 732, 11, 1732, 13, 50864], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 244, "seek": 83900, "start": 849.0, "end": 852.0, "text": " And we've done about 10 or 15 configurations already.", "tokens": [50864, 400, 321, 600, 1096, 466, 1266, 420, 2119, 31493, 1217, 13, 51014], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 245, "seek": 83900, "start": 852.0, "end": 855.0, "text": " And for each of these, it's going through all the different starting positions.", "tokens": [51014, 400, 337, 1184, 295, 613, 11, 309, 311, 516, 807, 439, 264, 819, 2891, 8432, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 246, "seek": 83900, "start": 855.0, "end": 858.0, "text": " But we're not looking at ring settings and we're not looking at plug board", "tokens": [51164, 583, 321, 434, 406, 1237, 412, 4875, 6257, 293, 321, 434, 406, 1237, 412, 5452, 3150, 51314], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 247, "seek": 83900, "start": 858.0, "end": 862.0, "text": " because that would just multiply this astronomically by the number of things we have to do.", "tokens": [51314, 570, 300, 576, 445, 12972, 341, 26302, 984, 538, 264, 1230, 295, 721, 321, 362, 281, 360, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 248, "seek": 83900, "start": 862.0, "end": 865.0, "text": " So we're already on rotor three in the left-hand side.", "tokens": [51514, 407, 321, 434, 1217, 322, 26847, 1045, 294, 264, 1411, 12, 5543, 1252, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 249, "seek": 83900, "start": 865.0, "end": 866.0, "text": " We're keeping going.", "tokens": [51664, 492, 434, 5145, 516, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07781789126812212, "compression_ratio": 1.7955974842767295, "no_speech_prob": 0.013813923113048077}, {"id": 250, "seek": 86600, "start": 866.0, "end": 869.0, "text": " This same thing works exactly the same for eight rotors.", "tokens": [50364, 639, 912, 551, 1985, 2293, 264, 912, 337, 3180, 4297, 830, 13, 50514], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 251, "seek": 86600, "start": 869.0, "end": 870.0, "text": " It doesn't really change anything.", "tokens": [50514, 467, 1177, 380, 534, 1319, 1340, 13, 50564], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 252, "seek": 86600, "start": 870.0, "end": 873.0, "text": " It just takes slightly longer and I'm a bit lazy.", "tokens": [50564, 467, 445, 2516, 4748, 2854, 293, 286, 478, 257, 857, 14847, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 253, "seek": 86600, "start": 873.0, "end": 876.0, "text": " So I have actually coded up the other rotors as well.", "tokens": [50714, 407, 286, 362, 767, 34874, 493, 264, 661, 4297, 830, 382, 731, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 254, "seek": 86600, "start": 876.0, "end": 880.0, "text": " Interestingly enough, some of the later rotors have two notches on, right?", "tokens": [50864, 30564, 1547, 11, 512, 295, 264, 1780, 4297, 830, 362, 732, 406, 3781, 322, 11, 558, 30, 51064], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 255, "seek": 86600, "start": 880.0, "end": 883.0, "text": " Which is not, it doesn't make any difference in terms of the cracking because...", "tokens": [51064, 3013, 307, 406, 11, 309, 1177, 380, 652, 604, 2649, 294, 2115, 295, 264, 25229, 570, 485, 51214], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 256, "seek": 86600, "start": 883.0, "end": 886.0, "text": " So that just means it turns the next one twice as often, right?", "tokens": [51214, 407, 300, 445, 1355, 309, 4523, 264, 958, 472, 6091, 382, 2049, 11, 558, 30, 51364], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 257, "seek": 86600, "start": 886.0, "end": 888.0, "text": " Yeah, yeah, twice as often.", "tokens": [51364, 865, 11, 1338, 11, 6091, 382, 2049, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 258, "seek": 86600, "start": 888.0, "end": 891.0, "text": " Only really affects the first two rotors.", "tokens": [51464, 5686, 534, 11807, 264, 700, 732, 4297, 830, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 259, "seek": 86600, "start": 891.0, "end": 893.0, "text": " The last one doesn't ever really turn that often.", "tokens": [51614, 440, 1036, 472, 1177, 380, 1562, 534, 1261, 300, 2049, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 260, "seek": 86600, "start": 893.0, "end": 895.0, "text": " And it doesn't have any other rotors to turn.", "tokens": [51714, 400, 309, 1177, 380, 362, 604, 661, 4297, 830, 281, 1261, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10417443779623432, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.008046498522162437}, {"id": 261, "seek": 89500, "start": 895.0, "end": 898.0, "text": " So here what we've got is we've got a list of the top performing rotor configurations.", "tokens": [50364, 407, 510, 437, 321, 600, 658, 307, 321, 600, 658, 257, 1329, 295, 264, 1192, 10205, 26847, 31493, 13, 50514], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 262, "seek": 89500, "start": 898.0, "end": 901.0, "text": " So two, five, three is the best performing rotor configuration.", "tokens": [50514, 407, 732, 11, 1732, 11, 1045, 307, 264, 1151, 10205, 26847, 11694, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 263, "seek": 89500, "start": 901.0, "end": 904.0, "text": " We start positions at 21, three, and 25.", "tokens": [50664, 492, 722, 8432, 412, 5080, 11, 1045, 11, 293, 3552, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 264, "seek": 89500, "start": 904.0, "end": 906.0, "text": " I'm using zero indexing, right?", "tokens": [50814, 286, 478, 1228, 4018, 8186, 278, 11, 558, 30, 50914], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 265, "seek": 89500, "start": 906.0, "end": 908.0, "text": " Which is not how you would normally do it in Enigma,", "tokens": [50914, 3013, 307, 406, 577, 291, 576, 5646, 360, 309, 294, 2193, 16150, 11, 51014], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 266, "seek": 89500, "start": 908.0, "end": 910.0, "text": " but it's easier for my ray indexing to do this, right?", "tokens": [51014, 457, 309, 311, 3571, 337, 452, 18592, 8186, 278, 281, 360, 341, 11, 558, 30, 51114], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 267, "seek": 89500, "start": 910.0, "end": 914.0, "text": " And that has an index of, for instance, of 0.043,", "tokens": [51114, 400, 300, 575, 364, 8186, 295, 11, 337, 5197, 11, 295, 1958, 13, 14565, 18, 11, 51314], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 268, "seek": 89500, "start": 914.0, "end": 916.0, "text": " which is a lot higher than 38.", "tokens": [51314, 597, 307, 257, 688, 2946, 813, 12843, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 269, "seek": 89500, "start": 916.0, "end": 917.0, "text": " I say it's a lot higher.", "tokens": [51414, 286, 584, 309, 311, 257, 688, 2946, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 270, "seek": 89500, "start": 917.0, "end": 918.0, "text": " It's a little bit higher.", "tokens": [51464, 467, 311, 257, 707, 857, 2946, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 271, "seek": 89500, "start": 918.0, "end": 919.0, "text": " Good enough.", "tokens": [51514, 2205, 1547, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 272, "seek": 89500, "start": 919.0, "end": 923.0, "text": " So that suggests to me, I mean, we actually, I listed the top 10 here", "tokens": [51564, 407, 300, 13409, 281, 385, 11, 286, 914, 11, 321, 767, 11, 286, 10052, 264, 1192, 1266, 510, 51764], "temperature": 0.0, "avg_logprob": -0.11572097870240729, "compression_ratio": 1.722397476340694, "no_speech_prob": 0.0005354707827791572}, {"id": 273, "seek": 92300, "start": 923.0, "end": 925.0, "text": " because sometimes you might not get the one on the top one.", "tokens": [50364, 570, 2171, 291, 1062, 406, 483, 264, 472, 322, 264, 1192, 472, 13, 50464], "temperature": 0.0, "avg_logprob": -0.07429398172269992, "compression_ratio": 1.8145454545454545, "no_speech_prob": 0.0014534135116264224}, {"id": 274, "seek": 92300, "start": 925.0, "end": 928.0, "text": " You might get the next rotor configuration or something like this.", "tokens": [50464, 509, 1062, 483, 264, 958, 26847, 11694, 420, 746, 411, 341, 13, 50614], "temperature": 0.0, "avg_logprob": -0.07429398172269992, "compression_ratio": 1.8145454545454545, "no_speech_prob": 0.0014534135116264224}, {"id": 275, "seek": 92300, "start": 928.0, "end": 931.0, "text": " It's worth maybe, if you were trying to really actually pay attention to this,", "tokens": [50614, 467, 311, 3163, 1310, 11, 498, 291, 645, 1382, 281, 534, 767, 1689, 3202, 281, 341, 11, 50764], "temperature": 0.0, "avg_logprob": -0.07429398172269992, "compression_ratio": 1.8145454545454545, "no_speech_prob": 0.0014534135116264224}, {"id": 276, "seek": 92300, "start": 931.0, "end": 935.0, "text": " what you would do is maybe start doing further attacks on the top three rotor configurations", "tokens": [50764, 437, 291, 576, 360, 307, 1310, 722, 884, 3052, 8122, 322, 264, 1192, 1045, 26847, 31493, 50964], "temperature": 0.0, "avg_logprob": -0.07429398172269992, "compression_ratio": 1.8145454545454545, "no_speech_prob": 0.0014534135116264224}, {"id": 277, "seek": 92300, "start": 935.0, "end": 937.0, "text": " just to keep your options open.", "tokens": [50964, 445, 281, 1066, 428, 3956, 1269, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07429398172269992, "compression_ratio": 1.8145454545454545, "no_speech_prob": 0.0014534135116264224}, {"id": 278, "seek": 92300, "start": 937.0, "end": 943.0, "text": " So we're going to fix at two, five, and three because, you know, it saves time, right?", "tokens": [51064, 407, 321, 434, 516, 281, 3191, 412, 732, 11, 1732, 11, 293, 1045, 570, 11, 291, 458, 11, 309, 19155, 565, 11, 558, 30, 51364], "temperature": 0.0, "avg_logprob": -0.07429398172269992, "compression_ratio": 1.8145454545454545, "no_speech_prob": 0.0014534135116264224}, {"id": 279, "seek": 92300, "start": 943.0, "end": 950.0, "text": " So given rotors two, five, three from left to right and their starting positions,", "tokens": [51364, 407, 2212, 4297, 830, 732, 11, 1732, 11, 1045, 490, 1411, 281, 558, 293, 641, 2891, 8432, 11, 51714], "temperature": 0.0, "avg_logprob": -0.07429398172269992, "compression_ratio": 1.8145454545454545, "no_speech_prob": 0.0014534135116264224}, {"id": 280, "seek": 95000, "start": 950.0, "end": 953.0, "text": " what we now can do is we can start to brute force through the ring settings.", "tokens": [50364, 437, 321, 586, 393, 360, 307, 321, 393, 722, 281, 47909, 3464, 807, 264, 4875, 6257, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 281, "seek": 95000, "start": 953.0, "end": 956.0, "text": " So we can find the best possible ring settings, right?", "tokens": [50514, 407, 321, 393, 915, 264, 1151, 1944, 4875, 6257, 11, 558, 30, 50664], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 282, "seek": 95000, "start": 956.0, "end": 961.0, "text": " Now, this is almost instant because there's now only a 600 or so of those, right?", "tokens": [50664, 823, 11, 341, 307, 1920, 9836, 570, 456, 311, 586, 787, 257, 11849, 420, 370, 295, 729, 11, 558, 30, 50914], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 283, "seek": 95000, "start": 961.0, "end": 965.0, "text": " We don't need to try the left-hand rotor because it doesn't really rotate.", "tokens": [50914, 492, 500, 380, 643, 281, 853, 264, 1411, 12, 5543, 26847, 570, 309, 1177, 380, 534, 13121, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 284, "seek": 95000, "start": 965.0, "end": 967.0, "text": " And so we do that and it's already happened.", "tokens": [51114, 400, 370, 321, 360, 300, 293, 309, 311, 1217, 2011, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 285, "seek": 95000, "start": 967.0, "end": 970.0, "text": " And the best ring positions were 0, 3, 23.", "tokens": [51214, 400, 264, 1151, 4875, 8432, 645, 1958, 11, 805, 11, 6673, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 286, "seek": 95000, "start": 970.0, "end": 971.0, "text": " Right.", "tokens": [51364, 1779, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 287, "seek": 95000, "start": 971.0, "end": 975.0, "text": " Now, for zero, we ignore because it's not the ring possessing, remember,", "tokens": [51414, 823, 11, 337, 4018, 11, 321, 11200, 570, 309, 311, 406, 264, 4875, 17490, 278, 11, 1604, 11, 51614], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 288, "seek": 95000, "start": 975.0, "end": 979.0, "text": " affects where the notch is and the left rotor doesn't turn anything over.", "tokens": [51614, 11807, 689, 264, 26109, 307, 293, 264, 1411, 26847, 1177, 380, 1261, 1340, 670, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1147906862456223, "compression_ratio": 1.743421052631579, "no_speech_prob": 0.006467283703386784}, {"id": 289, "seek": 97900, "start": 979.0, "end": 981.0, "text": " It doesn't have any effect.", "tokens": [50364, 467, 1177, 380, 362, 604, 1802, 13, 50464], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 290, "seek": 97900, "start": 981.0, "end": 985.0, "text": " So given that, this is the ciphertext we've got out.", "tokens": [50464, 407, 2212, 300, 11, 341, 307, 264, 269, 21240, 25111, 321, 600, 658, 484, 13, 50664], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 291, "seek": 97900, "start": 985.0, "end": 991.0, "text": " This was our original ciphertext and this is our slightly better ciphertext.", "tokens": [50664, 639, 390, 527, 3380, 269, 21240, 25111, 293, 341, 307, 527, 4748, 1101, 269, 21240, 25111, 13, 50964], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 292, "seek": 97900, "start": 991.0, "end": 994.0, "text": " Now, it still looks like total nonsense, right?", "tokens": [50964, 823, 11, 309, 920, 1542, 411, 3217, 14925, 11, 558, 30, 51114], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 293, "seek": 97900, "start": 994.0, "end": 997.0, "text": " But it has a much higher index of coincidence score than the original,", "tokens": [51114, 583, 309, 575, 257, 709, 2946, 8186, 295, 22137, 6175, 813, 264, 3380, 11, 51264], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 294, "seek": 97900, "start": 997.0, "end": 999.0, "text": " which means in some sense it's less random.", "tokens": [51264, 597, 1355, 294, 512, 2020, 309, 311, 1570, 4974, 13, 51364], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 295, "seek": 97900, "start": 999.0, "end": 1004.0, "text": " So if you look, you might start to see groups of letters that might be a real word.", "tokens": [51364, 407, 498, 291, 574, 11, 291, 1062, 722, 281, 536, 3935, 295, 7825, 300, 1062, 312, 257, 957, 1349, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 296, "seek": 97900, "start": 1004.0, "end": 1005.0, "text": " They might not.", "tokens": [51614, 814, 1062, 406, 13, 51664], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 297, "seek": 97900, "start": 1005.0, "end": 1006.0, "text": " I don't know, right?", "tokens": [51664, 286, 500, 380, 458, 11, 558, 30, 51714], "temperature": 0.0, "avg_logprob": -0.0774524917602539, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.0021815511863678694}, {"id": 298, "seek": 100600, "start": 1006.0, "end": 1009.0, "text": " But some of the real letters are going to come out here.", "tokens": [50364, 583, 512, 295, 264, 957, 7825, 366, 516, 281, 808, 484, 510, 13, 50514], "temperature": 0.0, "avg_logprob": -0.06147950132128219, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.0012055812403559685}, {"id": 299, "seek": 100600, "start": 1009.0, "end": 1011.0, "text": " We might not be able to see what they are.", "tokens": [50514, 492, 1062, 406, 312, 1075, 281, 536, 437, 436, 366, 13, 50614], "temperature": 0.0, "avg_logprob": -0.06147950132128219, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.0012055812403559685}, {"id": 300, "seek": 100600, "start": 1011.0, "end": 1015.0, "text": " So given this, we can finally start addressing this really problematic plug board situation.", "tokens": [50614, 407, 2212, 341, 11, 321, 393, 2721, 722, 14329, 341, 534, 19011, 5452, 3150, 2590, 13, 50814], "temperature": 0.0, "avg_logprob": -0.06147950132128219, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.0012055812403559685}, {"id": 301, "seek": 100600, "start": 1015.0, "end": 1020.0, "text": " Remember, there's far too many plug board combinations to realistically just try them all.", "tokens": [50814, 5459, 11, 456, 311, 1400, 886, 867, 5452, 3150, 21267, 281, 40734, 445, 853, 552, 439, 13, 51064], "temperature": 0.0, "avg_logprob": -0.06147950132128219, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.0012055812403559685}, {"id": 302, "seek": 100600, "start": 1020.0, "end": 1024.0, "text": " But again, we have this wonderful benefit that if we get one of the plugs correct,", "tokens": [51064, 583, 797, 11, 321, 362, 341, 3715, 5121, 300, 498, 321, 483, 472, 295, 264, 33899, 3006, 11, 51264], "temperature": 0.0, "avg_logprob": -0.06147950132128219, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.0012055812403559685}, {"id": 303, "seek": 100600, "start": 1024.0, "end": 1027.0, "text": " the result will probably be better than if we got none of them right.", "tokens": [51264, 264, 1874, 486, 1391, 312, 1101, 813, 498, 321, 658, 6022, 295, 552, 558, 13, 51414], "temperature": 0.0, "avg_logprob": -0.06147950132128219, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.0012055812403559685}, {"id": 304, "seek": 100600, "start": 1027.0, "end": 1032.0, "text": " So all we do is we go through each of the first 300 and so different possible plugs,", "tokens": [51414, 407, 439, 321, 360, 307, 321, 352, 807, 1184, 295, 264, 700, 6641, 293, 370, 819, 1944, 33899, 11, 51664], "temperature": 0.0, "avg_logprob": -0.06147950132128219, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.0012055812403559685}, {"id": 305, "seek": 100600, "start": 1032.0, "end": 1035.0, "text": " just one at a time, and we see which the best one is.", "tokens": [51664, 445, 472, 412, 257, 565, 11, 293, 321, 536, 597, 264, 1151, 472, 307, 13, 51814], "temperature": 0.0, "avg_logprob": -0.06147950132128219, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.0012055812403559685}, {"id": 306, "seek": 103500, "start": 1035.0, "end": 1039.0, "text": " And then we fix it, and we do the next for the next one, and that's two plugs.", "tokens": [50364, 400, 550, 321, 3191, 309, 11, 293, 321, 360, 264, 958, 337, 264, 958, 472, 11, 293, 300, 311, 732, 33899, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 307, "seek": 103500, "start": 1039.0, "end": 1042.0, "text": " And then we do for the next for the next one, and that's three plugs, right?", "tokens": [50564, 400, 550, 321, 360, 337, 264, 958, 337, 264, 958, 472, 11, 293, 300, 311, 1045, 33899, 11, 558, 30, 50714], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 308, "seek": 103500, "start": 1042.0, "end": 1043.0, "text": " And so on.", "tokens": [50714, 400, 370, 322, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 309, "seek": 103500, "start": 1043.0, "end": 1048.0, "text": " And if we do that, we very quickly come up with a few sets of plugs.", "tokens": [50764, 400, 498, 321, 360, 300, 11, 321, 588, 2661, 808, 493, 365, 257, 1326, 6352, 295, 33899, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 310, "seek": 103500, "start": 1048.0, "end": 1051.0, "text": " And our ciphertext is starting to look a lot better.", "tokens": [51014, 400, 527, 269, 21240, 25111, 307, 2891, 281, 574, 257, 688, 1101, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 311, "seek": 103500, "start": 1051.0, "end": 1052.0, "text": " So this is our ciphertext here.", "tokens": [51164, 407, 341, 307, 527, 269, 21240, 25111, 510, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 312, "seek": 103500, "start": 1052.0, "end": 1058.0, "text": " The first letters are nonsense, but then it's proposed to consider the quest.", "tokens": [51214, 440, 700, 7825, 366, 14925, 11, 457, 550, 309, 311, 10348, 281, 1949, 264, 866, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 313, "seek": 103500, "start": 1058.0, "end": 1059.0, "text": " Consider the quest.", "tokens": [51514, 17416, 264, 866, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 314, "seek": 103500, "start": 1059.0, "end": 1061.0, "text": " Can machines think?", "tokens": [51564, 1664, 8379, 519, 30, 51664], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 315, "seek": 103500, "start": 1061.0, "end": 1063.0, "text": " See, now I'm starting to guess what this might be.", "tokens": [51664, 3008, 11, 586, 286, 478, 2891, 281, 2041, 437, 341, 1062, 312, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 316, "seek": 103500, "start": 1063.0, "end": 1064.0, "text": " I see what you've done here.", "tokens": [51764, 286, 536, 437, 291, 600, 1096, 510, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13199354602444557, "compression_ratio": 1.911439114391144, "no_speech_prob": 0.0028423534240573645}, {"id": 317, "seek": 106400, "start": 1064.0, "end": 1065.0, "text": " This is the Alan Turing paper.", "tokens": [50364, 639, 307, 264, 16442, 314, 1345, 3035, 13, 50414], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 318, "seek": 106400, "start": 1065.0, "end": 1067.0, "text": " So some of the letters are wrong, right?", "tokens": [50414, 407, 512, 295, 264, 7825, 366, 2085, 11, 558, 30, 50514], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 319, "seek": 106400, "start": 1067.0, "end": 1073.0, "text": " So it should be I propose to consider, and it's J propose to consider, right?", "tokens": [50514, 407, 309, 820, 312, 286, 17421, 281, 1949, 11, 293, 309, 311, 508, 17421, 281, 1949, 11, 558, 30, 50814], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 320, "seek": 106400, "start": 1073.0, "end": 1074.0, "text": " And we're nearly there.", "tokens": [50814, 400, 321, 434, 6217, 456, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 321, "seek": 106400, "start": 1074.0, "end": 1078.0, "text": " But that's because when we optimize the rotor configuration, we fix the rings at 0000.", "tokens": [50864, 583, 300, 311, 570, 562, 321, 19719, 264, 26847, 11694, 11, 321, 3191, 264, 11136, 412, 7143, 628, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 322, "seek": 106400, "start": 1078.0, "end": 1081.0, "text": " So it was never going to find the exact correct thing.", "tokens": [51064, 407, 309, 390, 1128, 516, 281, 915, 264, 1900, 3006, 551, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 323, "seek": 106400, "start": 1081.0, "end": 1083.0, "text": " So essentially the turnover is slightly wrong.", "tokens": [51214, 407, 4476, 264, 37137, 307, 4748, 2085, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 324, "seek": 106400, "start": 1083.0, "end": 1086.0, "text": " Everything's slightly wrong, but it's still pretty good.", "tokens": [51314, 5471, 311, 4748, 2085, 11, 457, 309, 311, 920, 1238, 665, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 325, "seek": 106400, "start": 1086.0, "end": 1090.0, "text": " Now, if we go back to our original question as to how secure is Enigma,", "tokens": [51464, 823, 11, 498, 321, 352, 646, 281, 527, 3380, 1168, 382, 281, 577, 7144, 307, 2193, 16150, 11, 51664], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 326, "seek": 106400, "start": 1090.0, "end": 1093.0, "text": " the answer is not very secure, right?", "tokens": [51664, 264, 1867, 307, 406, 588, 7144, 11, 558, 30, 51814], "temperature": 0.0, "avg_logprob": -0.13007229358166247, "compression_ratio": 1.6955128205128205, "no_speech_prob": 0.005995398852974176}, {"id": 327, "seek": 109300, "start": 1093.0, "end": 1095.0, "text": " The reason is not because it's trivial to break, right?", "tokens": [50364, 440, 1778, 307, 406, 570, 309, 311, 26703, 281, 1821, 11, 558, 30, 50464], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 328, "seek": 109300, "start": 1095.0, "end": 1097.0, "text": " This took me a little bit of effort.", "tokens": [50464, 639, 1890, 385, 257, 707, 857, 295, 4630, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 329, "seek": 109300, "start": 1097.0, "end": 1100.0, "text": " And for short messages where these fitness functions start to break down", "tokens": [50564, 400, 337, 2099, 7897, 689, 613, 15303, 6828, 722, 281, 1821, 760, 50714], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 330, "seek": 109300, "start": 1100.0, "end": 1104.0, "text": " because you don't have enough information, they're actually very robust, right?", "tokens": [50714, 570, 291, 500, 380, 362, 1547, 1589, 11, 436, 434, 767, 588, 13956, 11, 558, 30, 50914], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 331, "seek": 109300, "start": 1104.0, "end": 1109.0, "text": " For a 50 character message, very, very difficult to break using something like an index of coincidence.", "tokens": [50914, 1171, 257, 2625, 2517, 3636, 11, 588, 11, 588, 2252, 281, 1821, 1228, 746, 411, 364, 8186, 295, 22137, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 332, "seek": 109300, "start": 1109.0, "end": 1113.0, "text": " Because even if some of the letters start to appear right, there's not very many of them.", "tokens": [51164, 1436, 754, 498, 512, 295, 264, 7825, 722, 281, 4204, 558, 11, 456, 311, 406, 588, 867, 295, 552, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 333, "seek": 109300, "start": 1113.0, "end": 1114.0, "text": " The index is just noise.", "tokens": [51364, 440, 8186, 307, 445, 5658, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 334, "seek": 109300, "start": 1114.0, "end": 1119.0, "text": " In the war, they limited or they attempted to limit messages to something like 200, 250 characters", "tokens": [51414, 682, 264, 1516, 11, 436, 5567, 420, 436, 18997, 281, 4948, 7897, 281, 746, 411, 2331, 11, 11650, 4342, 51664], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 335, "seek": 109300, "start": 1119.0, "end": 1122.0, "text": " for this reason, because index of coincidence was already known, right?", "tokens": [51664, 337, 341, 1778, 11, 570, 8186, 295, 22137, 390, 1217, 2570, 11, 558, 30, 51814], "temperature": 0.0, "avg_logprob": -0.08638263548780607, "compression_ratio": 1.8405797101449275, "no_speech_prob": 0.007798859383910894}, {"id": 336, "seek": 112200, "start": 1122.0, "end": 1126.0, "text": " And there's now more powerful metrics like trigram scores and quadram scores,", "tokens": [50364, 400, 456, 311, 586, 544, 4005, 16367, 411, 504, 33737, 13444, 293, 10787, 2356, 13444, 11, 50564], "temperature": 0.0, "avg_logprob": -0.09660885858197585, "compression_ratio": 1.7292993630573248, "no_speech_prob": 0.002112125512212515}, {"id": 337, "seek": 112200, "start": 1126.0, "end": 1130.0, "text": " which I've also implemented, which often work better, particularly for the plug board.", "tokens": [50564, 597, 286, 600, 611, 12270, 11, 597, 2049, 589, 1101, 11, 4098, 337, 264, 5452, 3150, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09660885858197585, "compression_ratio": 1.7292993630573248, "no_speech_prob": 0.002112125512212515}, {"id": 338, "seek": 112200, "start": 1130.0, "end": 1135.0, "text": " And so if you have a short message, you don't get very much information", "tokens": [50764, 400, 370, 498, 291, 362, 257, 2099, 3636, 11, 291, 500, 380, 483, 588, 709, 1589, 51014], "temperature": 0.0, "avg_logprob": -0.09660885858197585, "compression_ratio": 1.7292993630573248, "no_speech_prob": 0.002112125512212515}, {"id": 339, "seek": 112200, "start": 1135.0, "end": 1138.0, "text": " on the different frequencies of different groups of letters.", "tokens": [51014, 322, 264, 819, 20250, 295, 819, 3935, 295, 7825, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09660885858197585, "compression_ratio": 1.7292993630573248, "no_speech_prob": 0.002112125512212515}, {"id": 340, "seek": 112200, "start": 1138.0, "end": 1141.0, "text": " And so there's really no way to know what's going on at all.", "tokens": [51164, 400, 370, 456, 311, 534, 572, 636, 281, 458, 437, 311, 516, 322, 412, 439, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09660885858197585, "compression_ratio": 1.7292993630573248, "no_speech_prob": 0.002112125512212515}, {"id": 341, "seek": 112200, "start": 1141.0, "end": 1144.0, "text": " And you get very lucky where you don't, and most likely you don't.", "tokens": [51314, 400, 291, 483, 588, 6356, 689, 291, 500, 380, 11, 293, 881, 3700, 291, 500, 380, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09660885858197585, "compression_ratio": 1.7292993630573248, "no_speech_prob": 0.002112125512212515}, {"id": 342, "seek": 112200, "start": 1144.0, "end": 1146.0, "text": " But the other issue is, of course, the number of plugs.", "tokens": [51464, 583, 264, 661, 2734, 307, 11, 295, 1164, 11, 264, 1230, 295, 33899, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09660885858197585, "compression_ratio": 1.7292993630573248, "no_speech_prob": 0.002112125512212515}, {"id": 343, "seek": 112200, "start": 1146.0, "end": 1149.0, "text": " I've only done five plugs here, so I've cheated a bit, right?", "tokens": [51564, 286, 600, 787, 1096, 1732, 33899, 510, 11, 370, 286, 600, 28079, 257, 857, 11, 558, 30, 51714], "temperature": 0.0, "avg_logprob": -0.09660885858197585, "compression_ratio": 1.7292993630573248, "no_speech_prob": 0.002112125512212515}, {"id": 344, "seek": 114900, "start": 1149.0, "end": 1155.0, "text": " For most German messages that are sent using 10 plugs, you're going to need 1200 to 1500 characters", "tokens": [50364, 1171, 881, 6521, 7897, 300, 366, 2279, 1228, 1266, 33899, 11, 291, 434, 516, 281, 643, 29139, 281, 22671, 4342, 50664], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 345, "seek": 114900, "start": 1155.0, "end": 1158.0, "text": " before fitness functions are going to start to give you something, right?", "tokens": [50664, 949, 15303, 6828, 366, 516, 281, 722, 281, 976, 291, 746, 11, 558, 30, 50814], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 346, "seek": 114900, "start": 1158.0, "end": 1163.0, "text": " If you know what the plain text might be, this becomes much, much easier, right?", "tokens": [50814, 759, 291, 458, 437, 264, 11121, 2487, 1062, 312, 11, 341, 3643, 709, 11, 709, 3571, 11, 558, 30, 51064], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 347, "seek": 114900, "start": 1163.0, "end": 1166.0, "text": " Because if you can fix these characters have to be exactly this,", "tokens": [51064, 1436, 498, 291, 393, 3191, 613, 4342, 362, 281, 312, 2293, 341, 11, 51214], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 348, "seek": 114900, "start": 1166.0, "end": 1168.0, "text": " your fitness function is much less noisy, right?", "tokens": [51214, 428, 15303, 2445, 307, 709, 1570, 24518, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 349, "seek": 114900, "start": 1168.0, "end": 1170.0, "text": " And actually, I've implemented that as well.", "tokens": [51314, 400, 767, 11, 286, 600, 12270, 300, 382, 731, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 350, "seek": 114900, "start": 1170.0, "end": 1173.0, "text": " And it just starts breaking it like nobody's business, right?", "tokens": [51414, 400, 309, 445, 3719, 7697, 309, 411, 5079, 311, 1606, 11, 558, 30, 51564], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 351, "seek": 114900, "start": 1173.0, "end": 1175.0, "text": " So it is crackable, right?", "tokens": [51564, 407, 309, 307, 6226, 712, 11, 558, 30, 51664], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 352, "seek": 114900, "start": 1175.0, "end": 1176.0, "text": " If you can guess what plain text is.", "tokens": [51664, 759, 291, 393, 2041, 437, 11121, 2487, 307, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1292584363151999, "compression_ratio": 1.755700325732899, "no_speech_prob": 0.013616949319839478}, {"id": 353, "seek": 117600, "start": 1176.0, "end": 1181.0, "text": " And of course, modern cryptography assumes you know what the plain text is, right?", "tokens": [50364, 400, 295, 1164, 11, 4363, 9844, 5820, 37808, 291, 458, 437, 264, 11121, 2487, 307, 11, 558, 30, 50614], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 354, "seek": 117600, "start": 1181.0, "end": 1183.0, "text": " At least for some of the message.", "tokens": [50614, 1711, 1935, 337, 512, 295, 264, 3636, 13, 50714], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 355, "seek": 117600, "start": 1183.0, "end": 1186.0, "text": " For example, whenever you send an HTTP message to a web server,", "tokens": [50714, 1171, 1365, 11, 5699, 291, 2845, 364, 33283, 3636, 281, 257, 3670, 7154, 11, 50864], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 356, "seek": 117600, "start": 1186.0, "end": 1190.0, "text": " the beginning bit always says HTTP get or something similar, right?", "tokens": [50864, 264, 2863, 857, 1009, 1619, 33283, 483, 420, 746, 2531, 11, 558, 30, 51064], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 357, "seek": 117600, "start": 1190.0, "end": 1192.0, "text": " But there's a very known structure to these things.", "tokens": [51064, 583, 456, 311, 257, 588, 2570, 3877, 281, 613, 721, 13, 51164], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 358, "seek": 117600, "start": 1192.0, "end": 1194.0, "text": " You can start to guess what they would be.", "tokens": [51164, 509, 393, 722, 281, 2041, 437, 436, 576, 312, 13, 51264], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 359, "seek": 117600, "start": 1194.0, "end": 1198.0, "text": " We can't assume that you wouldn't know what any of the plain text was.", "tokens": [51264, 492, 393, 380, 6552, 300, 291, 2759, 380, 458, 437, 604, 295, 264, 11121, 2487, 390, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 360, "seek": 117600, "start": 1198.0, "end": 1201.0, "text": " But even if we don't, you can see that these index of coincidence", "tokens": [51464, 583, 754, 498, 321, 500, 380, 11, 291, 393, 536, 300, 613, 8186, 295, 22137, 51614], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 361, "seek": 117600, "start": 1201.0, "end": 1205.0, "text": " and trigam scores and things can start to tease out some information.", "tokens": [51614, 293, 35386, 335, 13444, 293, 721, 393, 722, 281, 30444, 484, 512, 1589, 13, 51814], "temperature": 0.0, "avg_logprob": -0.06742115701947893, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005896529648452997}, {"id": 362, "seek": 120500, "start": 1206.0, "end": 1209.0, "text": " So, going back to the beginning.", "tokens": [50414, 407, 11, 516, 646, 281, 264, 2863, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 363, "seek": 120500, "start": 1209.0, "end": 1212.0, "text": " Enigma is actually harder to crack than I thought, right?", "tokens": [50564, 2193, 16150, 307, 767, 6081, 281, 6226, 813, 286, 1194, 11, 558, 30, 50714], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 364, "seek": 120500, "start": 1212.0, "end": 1215.0, "text": " People always talk about how hard it was to crack during the war.", "tokens": [50714, 3432, 1009, 751, 466, 577, 1152, 309, 390, 281, 6226, 1830, 264, 1516, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 365, "seek": 120500, "start": 1215.0, "end": 1216.0, "text": " And that's absolutely fine.", "tokens": [50864, 400, 300, 311, 3122, 2489, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 366, "seek": 120500, "start": 1216.0, "end": 1219.0, "text": " But you just kind of assume that now it's 2021.", "tokens": [50914, 583, 291, 445, 733, 295, 6552, 300, 586, 309, 311, 7201, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 367, "seek": 120500, "start": 1219.0, "end": 1221.0, "text": " Laptops should be able to just click, go through all the settings,", "tokens": [51064, 441, 2796, 3370, 820, 312, 1075, 281, 445, 2052, 11, 352, 807, 439, 264, 6257, 11, 51164], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 368, "seek": 120500, "start": 1221.0, "end": 1223.0, "text": " find yourself the ciphertext.", "tokens": [51164, 915, 1803, 264, 269, 21240, 25111, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 369, "seek": 120500, "start": 1223.0, "end": 1225.0, "text": " It doesn't really work that way, right?", "tokens": [51264, 467, 1177, 380, 534, 589, 300, 636, 11, 558, 30, 51364], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 370, "seek": 120500, "start": 1225.0, "end": 1227.0, "text": " You have to try and stumble your way towards it.", "tokens": [51364, 509, 362, 281, 853, 293, 41302, 428, 636, 3030, 309, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 371, "seek": 120500, "start": 1227.0, "end": 1228.0, "text": " And often it doesn't work.", "tokens": [51464, 400, 2049, 309, 1177, 380, 589, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 372, "seek": 120500, "start": 1228.0, "end": 1230.0, "text": " And there's noise in the output.", "tokens": [51514, 400, 456, 311, 5658, 294, 264, 5598, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 373, "seek": 120500, "start": 1230.0, "end": 1232.0, "text": " And so you have to try and work out whether what you're seeing", "tokens": [51614, 400, 370, 291, 362, 281, 853, 293, 589, 484, 1968, 437, 291, 434, 2577, 51714], "temperature": 0.0, "avg_logprob": -0.11371642664859169, "compression_ratio": 1.6853582554517135, "no_speech_prob": 0.0011875160271301866}, {"id": 374, "seek": 123200, "start": 1232.0, "end": 1235.0, "text": " is actually improvement or not, and so on,", "tokens": [50364, 307, 767, 10444, 420, 406, 11, 293, 370, 322, 11, 50514], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 375, "seek": 123200, "start": 1235.0, "end": 1236.0, "text": " which I think is quite interesting.", "tokens": [50514, 597, 286, 519, 307, 1596, 1880, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 376, "seek": 123200, "start": 1236.0, "end": 1238.0, "text": " Modern ciphers don't have this problem.", "tokens": [50564, 19814, 269, 24595, 433, 500, 380, 362, 341, 1154, 13, 50664], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 377, "seek": 123200, "start": 1238.0, "end": 1241.0, "text": " If you have a 128-bit AES key,", "tokens": [50664, 759, 291, 362, 257, 29810, 12, 5260, 316, 2358, 2141, 11, 50814], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 378, "seek": 123200, "start": 1241.0, "end": 1243.0, "text": " you can't brute-force the first bit", "tokens": [50814, 291, 393, 380, 47909, 12, 5156, 264, 700, 857, 50914], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 379, "seek": 123200, "start": 1243.0, "end": 1249.0, "text": " because the zero or one won't give you any better or worse plain text.", "tokens": [50914, 570, 264, 4018, 420, 472, 1582, 380, 976, 291, 604, 1101, 420, 5324, 11121, 2487, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 380, "seek": 123200, "start": 1249.0, "end": 1251.0, "text": " It will just be nonsense each time.", "tokens": [51214, 467, 486, 445, 312, 14925, 1184, 565, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 381, "seek": 123200, "start": 1251.0, "end": 1252.0, "text": " And that's true of any amount.", "tokens": [51314, 400, 300, 311, 2074, 295, 604, 2372, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 382, "seek": 123200, "start": 1252.0, "end": 1254.0, "text": " So you can't do the first half of the key", "tokens": [51364, 407, 291, 393, 380, 360, 264, 700, 1922, 295, 264, 2141, 51464], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 383, "seek": 123200, "start": 1254.0, "end": 1255.0, "text": " and then the second half of the key,", "tokens": [51464, 293, 550, 264, 1150, 1922, 295, 264, 2141, 11, 51514], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 384, "seek": 123200, "start": 1255.0, "end": 1257.0, "text": " which is kind of what we're doing here.", "tokens": [51514, 597, 307, 733, 295, 437, 321, 434, 884, 510, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 385, "seek": 123200, "start": 1257.0, "end": 1260.0, "text": " So modern ciphers don't have this problem.", "tokens": [51614, 407, 4363, 269, 24595, 433, 500, 380, 362, 341, 1154, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08489241764463228, "compression_ratio": 1.7259786476868328, "no_speech_prob": 0.0033216001465916634}, {"id": 386, "seek": 126200, "start": 1262.0, "end": 1263.0, "text": " And so on.", "tokens": [50364, 400, 370, 322, 13, 50414], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}, {"id": 387, "seek": 126200, "start": 1263.0, "end": 1266.0, "text": " We can't do a lot of interesting things with this image", "tokens": [50414, 492, 393, 380, 360, 257, 688, 295, 1880, 721, 365, 341, 3256, 50564], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}, {"id": 388, "seek": 126200, "start": 1266.0, "end": 1268.0, "text": " after just one set of convolutions,", "tokens": [50564, 934, 445, 472, 992, 295, 3754, 15892, 11, 50664], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}, {"id": 389, "seek": 126200, "start": 1268.0, "end": 1269.0, "text": " but we're getting there.", "tokens": [50664, 457, 321, 434, 1242, 456, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}, {"id": 390, "seek": 126200, "start": 1269.0, "end": 1271.0, "text": " So this one is starting to be transformed.", "tokens": [50714, 407, 341, 472, 307, 2891, 281, 312, 16894, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}, {"id": 391, "seek": 126200, "start": 1271.0, "end": 1272.0, "text": " Some of them are noisier than others.", "tokens": [50814, 2188, 295, 552, 366, 572, 271, 811, 813, 2357, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}, {"id": 392, "seek": 126200, "start": 1272.0, "end": 1274.0, "text": " Some of them were paint associated with it,", "tokens": [50864, 2188, 295, 552, 645, 4225, 6615, 365, 309, 11, 50964], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}, {"id": 393, "seek": 126200, "start": 1274.0, "end": 1277.0, "text": " showing which was the proper setting with A at the top", "tokens": [50964, 4099, 597, 390, 264, 2296, 3287, 365, 316, 412, 264, 1192, 51114], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}, {"id": 394, "seek": 126200, "start": 1277.0, "end": 1279.0, "text": " and A against the dot of paint.", "tokens": [51114, 293, 316, 1970, 264, 5893, 295, 4225, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09653990467389424, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.012601787224411964}], "language": "en"}