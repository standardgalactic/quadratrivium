WEBVTT

00:00.000 --> 00:28.000
As I said yesterday, I swapped the talks around, so this is the more philosophical talk.

00:29.000 --> 00:46.000
I had some multiple titles. I couldn't decide. Some of them were semi-cranky in those moments.

00:47.000 --> 00:54.000
Then Mort gave me a great feeder line. This is about step one.

00:58.000 --> 01:06.000
This is just an experience report. It's not advocacy. There's no methodology here or science or anything else.

01:07.000 --> 01:15.000
I'd like you to try to think about when was the last time that you thought about something for an entire hour.

01:15.000 --> 01:20.000
Nobody bothered you and you had an idea and you sat for an hour and thought about it.

01:22.000 --> 01:30.000
How about for a whole day? Does everybody remember last time I sat and thought about something for a whole day?

01:30.000 --> 01:45.000
How about over a course of a month? We had something you were working on and obviously you're not spending all the time every day when you start saying it to a month or a year.

01:46.000 --> 01:55.000
These are tremendously valuable moments if you get to have them at all.

01:55.000 --> 02:06.000
I consider myself extremely lucky to have had the ability to think about probably three different things for a year or more.

02:06.000 --> 02:14.000
One of them was closure. There's nothing I prize more than that kind of time.

02:14.000 --> 02:21.000
The other thing I'd ask is when was the last time that you felt confident trying to do something you had never done before?

02:21.000 --> 02:28.000
What do you think it takes to become confident in doing something you'd never done before?

02:28.000 --> 02:36.000
Obviously software developers, a lot of times we're doing the umpteenth application that takes something out of a database and puts it on the web.

02:36.000 --> 02:43.000
But the luckier you are, the more likely you are to encounter problems you've never done before.

02:43.000 --> 02:52.000
How do you start doing that and not feel incredibly at risk?

02:53.000 --> 02:59.000
We'll start by talking about some software development, things we all know to be true.

02:59.000 --> 03:03.000
We hate bugs in our programs. We're trying to write quality programs.

03:03.000 --> 03:14.000
We know if we let the programs reach the field, it's incredibly expensive to fix inadequacies in the program.

03:14.000 --> 03:19.000
So we say, okay, we'll have a big testing process and quality assurance.

03:19.000 --> 03:28.000
And even that we know is not so great because it sort of has this removal, this distance from the development effort, which is not good.

03:28.000 --> 03:38.000
So now we know what to do in this area. We fix bugs while we're coding by testing and development.

03:38.000 --> 03:46.000
And this is the best way to avoid bugs in our applications, right?

03:46.000 --> 03:48.000
No.

03:48.000 --> 03:56.000
Did you notice that I learned how to make each bullet happen one at a time?

03:56.000 --> 04:02.000
So now you don't know what I'm going to say.

04:02.000 --> 04:04.000
It's awesome.

04:04.000 --> 04:07.000
Not this menu item before.

04:07.000 --> 04:10.000
No, definitely, absolutely, positively not.

04:10.000 --> 04:21.000
The least expensive place to fix bugs is when you're designing your software, which everybody does, yes?

04:21.000 --> 04:27.000
I will contend of all the things I'm saying here, which are very, very extremely fuzzy,

04:27.000 --> 04:33.000
that without a doubt most of the big problems we have with software are problems of misconception.

04:33.000 --> 04:38.000
We don't have a good idea of what we're doing before we do it, and then go, go, go, go.

04:38.000 --> 04:45.000
And we do everything, you know, we have practices and all kinds of stuff, and we feel really good about ourselves after that point.

04:45.000 --> 04:52.000
But if you mess it up, you know, as Mark said, and step one is not going to turn out well.

04:52.000 --> 04:54.000
There are not problems of implementation.

04:54.000 --> 04:59.000
There are problems of implementation, obviously, and testing and other things help with those.

04:59.000 --> 05:10.000
But problems of misconception are not generally addressed by testing or type systems or the things we use to correct defects and implementation.

05:10.000 --> 05:22.000
There aren't really type systems that can tell us if we've got a good idea or what we're doing addresses that idea.

05:22.000 --> 05:26.000
So I'm going to talk a little bit about analysis and design.

05:26.000 --> 05:37.000
I know that's so 90s and ugly and was rightfully, you know, criticized and really dropped.

05:37.000 --> 05:46.000
Because, you know, when people considered it to be about process and drawing pictures and, you know, knowing everything about everything and making comprehensive plans

05:46.000 --> 05:52.000
and the waterfall model, and there was amazing amounts of stuff that was terrible about this.

05:52.000 --> 06:00.000
But that doesn't mean that the step before go do it is not an important step.

06:00.000 --> 06:07.000
And I think we don't spend enough time and energy or make enough time or get allocated time.

06:07.000 --> 06:09.000
You know, it may not be a matter of our choice.

06:09.000 --> 06:13.000
We'd say, well, we'd like to spend some time thinking about it, but, you know, we have to ship something next week.

06:13.000 --> 06:17.000
But we are definitely suffering in quality because we don't spend time here.

06:17.000 --> 06:23.000
And so what I'd like to do is sort of just whatever you think analysis and design is, I'd like you to just forget for the moment.

06:23.000 --> 06:26.000
And let's try to make a really simple definition.

06:26.000 --> 06:29.000
Analysis and design is about two things.

06:29.000 --> 06:40.000
Identifying some problem that we're trying to solve and assessing our proposed solution in terms of whether or not it solves that problem.

06:40.000 --> 06:42.000
That's really what it's about.

06:42.000 --> 06:45.000
Not about anything else.

06:45.000 --> 06:48.000
We should be solving problems.

06:48.000 --> 06:51.000
We should not be building features.

06:51.000 --> 06:53.000
There's nothing about feature.

06:53.000 --> 06:54.000
What is feature?

06:54.000 --> 06:56.000
Feature is just an attribute of something.

06:56.000 --> 07:00.000
It's the shiny chrome knob on something.

07:00.000 --> 07:04.000
It's not the purpose of the car.

07:04.000 --> 07:12.000
There's no guarantee if you put together a feature list, even if it comes from the customer, that it's going to solve their own problem.

07:12.000 --> 07:14.000
Or that it solves any problem.

07:14.000 --> 07:18.000
Or that the features when you put them together don't introduce a whole ton of other problems.

07:18.000 --> 07:25.000
So programming and writing software is not about completing lists of features.

07:25.000 --> 07:34.000
In particular, features provided by users, in spite of their best efforts to satisfy themselves, are often really not good ideas.

07:34.000 --> 07:39.000
And you've got to dig underneath it and figure out what problem they have and what's the best solution to it.

07:39.000 --> 07:43.000
And then reconcile it with whatever they ask for.

07:43.000 --> 07:51.000
We also have a tendency because we're all smart and we love being smart and figuring out how to make things go.

07:51.000 --> 07:57.000
Figuring out how to make something go is good no matter what it took to do it.

07:57.000 --> 08:01.000
So if we can find a way to get around a problem, we're like, that's great.

08:01.000 --> 08:02.000
And it's not great.

08:02.000 --> 08:08.000
Avoiding problems, which we're all capable of doing, very capable of doing, isn't the same as solving them.

08:08.000 --> 08:11.000
So we should really try to work on solving problems.

08:11.000 --> 08:22.000
And the thing I'm going to talk about today is really that there's a bunch of technique and skill to solving problems.

08:22.000 --> 08:33.000
And the first one is just to make an effort to understand the problem you're working on, to recognize, identify it, put it somewhere, and talk about it.

08:33.000 --> 08:35.000
So problem solving is definitely a skill.

08:35.000 --> 08:43.000
I think you shouldn't take away from this talk that there's a certain kind of person who's like good at problem solving and they get to do this part of the job.

08:43.000 --> 08:46.000
And then we can practice these other things.

08:46.000 --> 08:48.000
You can practice this part.

08:48.000 --> 08:57.000
Paya wrote this amazing book called How to Solve It in 1945 or something, which is about how to practice.

08:57.000 --> 09:02.000
And what are the techniques of solving math problems in this case?

09:02.000 --> 09:05.000
And it's a terrific book full of great insight.

09:05.000 --> 09:12.000
And if you've never read it, go on to Amazon right after my talk and order yourself a copy.

09:12.000 --> 09:16.000
One of the things that's not so great about the book is that it is in the math space.

09:16.000 --> 09:20.000
And in that space, there's this really nice thing that happens.

09:20.000 --> 09:27.000
When you're done and you think you have an answer, you have all the techniques of mathematical proof to determine if you actually have.

09:27.000 --> 09:31.000
Whereas as software developers, we don't have that.

09:31.000 --> 09:37.000
There's no way to prove that you have a good solution to somebody's e-commerce site problem.

09:37.000 --> 09:42.000
There's no mathematical techniques and there's not going to be any anytime soon.

09:42.000 --> 09:44.000
That will let us do that.

09:44.000 --> 09:48.000
But it is a skill and it is something you can practice, it's something you can learn about.

09:48.000 --> 09:51.000
And it's worth doing, right?

09:51.000 --> 09:54.000
Because as human beings, we get good at what we practice.

09:54.000 --> 09:58.000
It doesn't matter what it is, it's amazing examples of people practicing things

09:58.000 --> 10:06.000
that they seem to have no potential hope to become good at and they get good at it because they practiced it.

10:06.000 --> 10:11.000
If you practice problem solving, really practice problem solving, you will get good at it.

10:11.000 --> 10:18.000
If you practice methodology X, you will get good at that.

10:18.000 --> 10:23.000
And I'd like you to ask yourself, where do you think there's more leverage?

10:23.000 --> 10:27.000
I don't care what X is, pick any X you want.

10:27.000 --> 10:34.000
Would you rather be good at it or the general skill of solving problems?

10:34.000 --> 10:37.000
So what do we need to do if we're going to work on solving problems?

10:37.000 --> 10:40.000
What is the activity like?

10:40.000 --> 10:43.000
The first thing is to actually say, I am solving this problem.

10:43.000 --> 10:48.000
This problem is this, blah, blah, blah, blah, blah, and therefore blah.

10:48.000 --> 10:52.000
I have seen so much software made where no one ever said that.

10:52.000 --> 10:54.000
No one ever wrote that down.

10:54.000 --> 10:59.000
And then we have a whole system and no one said what problem is supposed to solve.

10:59.000 --> 11:03.000
If we're not solving problems, I have no idea why we're in this room.

11:03.000 --> 11:09.000
We absolutely should be working on solving problems, which means we should be enumerating what they are.

11:09.000 --> 11:12.000
And then from the mental standpoint, which I'll talk about a little bit later,

11:12.000 --> 11:15.000
it is actually important to say them out loud.

11:15.000 --> 11:18.000
As the person is trying to solve a problem, say it.

11:18.000 --> 11:22.000
Have a conversation with somebody in your group and say, we need to solve this.

11:22.000 --> 11:28.000
The problem is, blah, blah, blah, you know, rant or talk and have a little conversation or write it down.

11:28.000 --> 11:33.000
But just like you used the practice of repeating somebody's name or introducing them as a mnemonic

11:33.000 --> 11:37.000
to help you remember their name, it's the same thing.

11:37.000 --> 11:42.000
This is the seed of solving the problem is stating it.

11:42.000 --> 11:46.000
So the next part, which is definitely a trickier, and Paulia's book is great,

11:46.000 --> 11:51.000
and it's got a lot of practical things, many of these are overlap, what he said,

11:51.000 --> 11:53.000
is to understand the problem.

11:53.000 --> 11:55.000
So we said, we have this problem.

11:55.000 --> 11:59.000
I think we need a no-SQL database.

11:59.000 --> 12:03.000
There's something missing.

12:03.000 --> 12:07.000
We have this problem, we need a no-SQL database.

12:07.000 --> 12:14.000
We haven't actually said, you know, why, what are the characteristics of this problem that lead us to this solution space?

12:14.000 --> 12:19.000
And this is where all the interesting work is, I think, in software development.

12:19.000 --> 12:22.000
And so the first step is, what do you know about what you're trying to do?

12:22.000 --> 12:24.000
There's definitely going to be a bunch of facts.

12:24.000 --> 12:27.000
There will be customer requirements, there'll be other things.

12:27.000 --> 12:32.000
There'll be context, you know, the system has to run on this kind of box, has to run for this long.

12:32.000 --> 12:37.000
It can't consume more than this many watts or has to support 10 million users, whatever it is.

12:37.000 --> 12:40.000
There are those kinds of things and constraints.

12:40.000 --> 12:43.000
All this stuff are facts you know about what you're supposed to do.

12:43.000 --> 12:49.000
There will be things that right away you know you don't know.

12:49.000 --> 12:58.000
I wonder where we're going to get the data as an input to this thing.

12:58.000 --> 13:03.000
What we're going to do when our main data source is not available, do we have a secondary thing?

13:03.000 --> 13:05.000
There will be things like that.

13:05.000 --> 13:08.000
Of course, there will be things that you don't know or you don't know.

13:08.000 --> 13:10.000
Well, that's fair.

13:10.000 --> 13:15.000
But if there's things you don't know, you should think about them now.

13:15.000 --> 13:22.000
The other thing to do is to say, you know, everybody says, you know, I have this great idea for excellence.

13:22.000 --> 13:28.000
You're the only person in the world that ever had this problem, so that's very, very unlikely.

13:28.000 --> 13:32.000
So go find some other solutions to similar problems.

13:32.000 --> 13:37.000
Are there any others that you know about and what can you find out about them?

13:37.000 --> 13:43.000
Because looking at other solutions to the same problem is the number one way to get up to speed really quickly

13:43.000 --> 13:48.000
and start working ahead of, you know, the best known solutions in this space.

13:48.000 --> 13:54.000
And then because what you'll have to do then will just be an incremental step above what the last guy did.

13:54.000 --> 13:58.000
But if you're ignoring what the last guy did, you're starting from scratch.

13:58.000 --> 14:02.000
So you definitely want to look around in the space.

14:02.000 --> 14:05.000
All right, now I'm not advocating a methodology or anything.

14:05.000 --> 14:09.000
But if you're going to bother to do all this work, you should write it down.

14:09.000 --> 14:14.000
Somehow, some way. I don't care about it.

14:14.000 --> 14:19.000
The other thing you have to do is you have to be discerning. You have to be critical.

14:19.000 --> 14:26.000
And where it's sort of in this world, because it's all this community stuff, and it's like, I just hear awesome.

14:26.000 --> 14:30.000
It's like awesome happens. I just hear it like 50 times a day.

14:30.000 --> 14:35.000
Not everything is awesome.

14:35.000 --> 14:39.000
And so it's hard to talk about other people's stuff not being awesome.

14:39.000 --> 14:42.000
So just mainly focus on your own stuff.

14:42.000 --> 14:47.000
In particular, as you're finding solutions, as you're trying to enumerate a solution to a problem,

14:47.000 --> 14:50.000
look for defects in your own solution.

14:50.000 --> 14:55.000
And of course, you can have a whole talk about this because there will be technical errors,

14:55.000 --> 15:01.000
there'll be errors in logic, there'll also be errors of taste and judgment and abstraction

15:01.000 --> 15:03.000
and all those kinds of things that all feeds into this.

15:03.000 --> 15:06.000
And there's an entire talk in this area.

15:06.000 --> 15:15.000
But whatever issues you can find in your own solutions, try to solve those too right away up front.

15:15.000 --> 15:20.000
So the other thing you see is, oh, we're going to do this.

15:21.000 --> 15:27.000
Oh, that's great. It has these 10 attributes. It's awesome.

15:27.000 --> 15:30.000
It's really easy to get excited about the good parts of what you do,

15:30.000 --> 15:33.000
but you should be looking for trade-offs.

15:33.000 --> 15:39.000
The chances of there being no trade-offs in any solution are slim.

15:39.000 --> 15:43.000
The other thing is just this, again, this what don't you know thing.

15:43.000 --> 15:47.000
If there's stuff you know you don't know, there are questions you should be asking

15:47.000 --> 15:52.000
in order to find out what you don't know.

15:52.000 --> 15:54.000
You don't know everything.

15:54.000 --> 15:59.000
So there should be question marks on whatever it is you want to use

15:59.000 --> 16:01.000
that you're going to write all this stuff down.

16:01.000 --> 16:03.000
There should be question marks on that page.

16:03.000 --> 16:09.000
If there are no question marks, you're missing the step.

16:09.000 --> 16:16.000
The other thing is to think about none of us are born knowing how to write software.

16:16.000 --> 16:21.000
None of us are born knowing about SQL or the characteristics of the web

16:21.000 --> 16:24.000
or protocols or anything else.

16:24.000 --> 16:28.000
And if you're trying to solve a problem, especially in a space where you haven't done it before,

16:28.000 --> 16:32.000
you're going to have a very limited ability to come up with solutions.

16:32.000 --> 16:37.000
If you don't have a lot of input, you're going to need to get a lot of different inputs

16:37.000 --> 16:40.000
so that you can let your brain go around between them and say,

16:40.000 --> 16:43.000
oh, yeah, this idea and that idea are connected to each other,

16:43.000 --> 16:45.000
and therefore I can do this other thing.

16:45.000 --> 16:50.000
If you only take a really narrow slice of, I see exactly what I'm doing right now,

16:50.000 --> 16:52.000
right this second, to deliver next week.

16:52.000 --> 16:56.000
You're not going to have enough inputs to make decisions.

16:56.000 --> 17:01.000
So you want to read about the kind of space that you're in, widely.

17:01.000 --> 17:04.000
Very specifically, oh, there's other people trying to do exactly the same thing,

17:04.000 --> 17:07.000
and then broadly, these other characteristic problems,

17:07.000 --> 17:12.000
and maybe even if you want, go try to find research papers that are kind of in the same space.

17:12.000 --> 17:18.000
It's amazing the cool things you can find by searching something like ACM for papers about the kind of,

17:18.000 --> 17:22.000
it's like, oh, I wonder if we could get a certain kind of hash code that does whatever.

17:22.000 --> 17:26.000
You go into Google and type hash code that does whatever, enter,

17:26.000 --> 17:30.000
and if there's some scholarly and ACM references, grab those papers.

17:30.000 --> 17:33.000
Even if you only understand like a tiny fraction of the paper,

17:33.000 --> 17:37.000
it's likely to contribute to your ability to think about your problem.

17:37.000 --> 17:40.000
The other thing is, even if you're not going to tell the other guy,

17:40.000 --> 17:44.000
when you're looking at other solutions, be extremely critical.

17:44.000 --> 17:48.000
I can't tell you how often you're going to find the next best idea

17:48.000 --> 17:51.000
by completely crucifying the last guy's idea.

17:51.000 --> 17:56.000
At least in your own head, right, take it apart.

17:56.000 --> 17:59.000
Because when you take it apart, you're going to find a couple of things

17:59.000 --> 18:04.000
maybe they didn't write down when they were doing it.

18:04.000 --> 18:08.000
So, everybody says designs about trade-offs.

18:08.000 --> 18:12.000
Everybody knows this, right?

18:12.000 --> 18:14.000
Usually when they're talking about trade-offs and their software,

18:14.000 --> 18:19.000
they're talking about the parts of their software that suck.

18:19.000 --> 18:22.000
I had to make these trade-offs.

18:22.000 --> 18:26.000
That is not what a trade-off is, right?

18:26.000 --> 18:32.000
You have to look at at least two solutions to your problem, at least two.

18:32.000 --> 18:37.000
And you have to figure out what's good and bad about those things, right?

18:37.000 --> 18:42.000
Before you can say, I made a trade-off.

18:42.000 --> 18:45.000
So, I really recommend that you do that.

18:45.000 --> 18:51.000
And when you do it, you might want to write that down somewhere.

18:52.000 --> 18:56.000
Okay, so let's talk a little bit more about practice.

18:56.000 --> 19:02.000
A big part of trying to do this work is maintaining your focus.

19:02.000 --> 19:05.000
We had a really nice talk yesterday about flow,

19:05.000 --> 19:10.000
and that is a kind of a focus-related concept.

19:10.000 --> 19:13.000
And when you're trying to do design work, you also need,

19:13.000 --> 19:18.000
I think some of the most extreme focus you're going to ever need.

19:18.000 --> 19:21.000
And so there's some cool aspects to the hammock.

19:21.000 --> 19:25.000
One of the cool aspects to a hammock is that you can go on a hammock,

19:25.000 --> 19:29.000
and you can close your eyes, and no one knows that you're not sleeping.

19:29.000 --> 19:33.000
But they won't bother you because they think you might be sleeping.

19:33.000 --> 19:37.000
So it's very cool.

19:37.000 --> 19:40.000
Computers are bad, bad sources of distraction.

19:40.000 --> 19:43.000
They're so bad, especially for people like us.

19:43.000 --> 19:45.000
It's just like, wow.

19:45.000 --> 19:49.000
Something else, besides what I'm trying to think about,

19:49.000 --> 19:53.000
you desperately need to get away from the computer if you're trying to focus.

19:53.000 --> 19:57.000
It's almost impossible to focus sitting on a computer.

19:57.000 --> 20:01.000
The other thing about focus is that you're going to be making trade-offs

20:01.000 --> 20:04.000
when you try to focus really intensely.

20:04.000 --> 20:09.000
You're going to drop balls, you're going to miss calling people back

20:09.000 --> 20:14.000
and responding to emails and doing your slides for conferences

20:14.000 --> 20:21.000
until the airport on the way there, and things like that.

20:21.000 --> 20:25.000
That's just the game.

20:25.000 --> 20:29.000
The one thing, though, is that you should communicate to people

20:29.000 --> 20:32.000
that you care about about this process,

20:32.000 --> 20:37.000
and the fact that when you're doing it, you're going to seem pretty far away.

20:37.000 --> 20:42.000
And that's not a comment about the person that you care about.

20:42.000 --> 20:45.000
It's just the nature of doing this kind of work.

20:45.000 --> 20:47.000
So it is important to sort of do it.

20:47.000 --> 20:50.000
A lot of people will not get time to do this all day, every day,

20:50.000 --> 20:52.000
or over the course of an entire week,

20:52.000 --> 20:55.000
but if you're going to get some focus time, define what that is.

20:55.000 --> 20:58.000
Everybody knows about time-out time for little kids.

20:58.000 --> 21:00.000
What programmers need this focus time?

21:00.000 --> 21:03.000
They're like, little kids that need to go sit on the hammock

21:03.000 --> 21:07.000
and have nobody bother them.

21:07.000 --> 21:15.000
So for me personally, I think that the process involves two parts of your mind.

21:15.000 --> 21:16.000
And this is stuff that you're seeing.

21:16.000 --> 21:18.000
There's books written about this and whatever.

21:18.000 --> 21:23.000
I haven't read them, but they seem to correspond to my personal experience,

21:23.000 --> 21:27.000
which is that you sort of have this waking mind and background mind.

21:27.000 --> 21:31.000
And your waking mind is really good at that criticizing part.

21:31.000 --> 21:37.000
It's extremely analytical and it's very, very good at tactics.

21:37.000 --> 21:40.000
Right now, we need to make a decision.

21:40.000 --> 21:43.000
The lion is chasing after us, jumped left.

21:43.000 --> 21:45.000
We are really good at that.

21:45.000 --> 21:48.000
That's what our waking mind is about, keeping us alive

21:48.000 --> 21:52.000
and making short-term decisions

21:52.000 --> 21:55.000
and looking at the immediately present information

21:55.000 --> 21:57.000
and doing something about it.

21:57.000 --> 22:02.000
Or if you think you're going to sit down and look at a problem for the first time

22:02.000 --> 22:04.000
and stare at your computer and do whatever

22:04.000 --> 22:09.000
and have a conversation for 10 minutes and make a really great decision,

22:09.000 --> 22:10.000
I don't think so.

22:10.000 --> 22:12.000
I know I can't do that.

22:12.000 --> 22:13.000
Definitely not.

22:13.000 --> 22:17.000
The problem with this kind of thing is it tends to push uphill.

22:17.000 --> 22:18.000
Ooh, I see this.

22:18.000 --> 22:19.000
Ooh, I see that.

22:19.000 --> 22:21.000
Okay, here I have a choice left and right.

22:21.000 --> 22:22.000
Okay, I can go right.

22:22.000 --> 22:23.000
That's more up.

22:23.000 --> 22:24.000
Left and right.

22:24.000 --> 22:25.000
Left, that's more up.

22:25.000 --> 22:26.000
More up.

22:26.000 --> 22:31.000
This part of your thinking is really good at finding the local maximum.

22:31.000 --> 22:35.000
But it's not very good at getting off the track.

22:35.000 --> 22:38.000
It's on and finding the fact that there's another hill over there

22:38.000 --> 22:42.000
that really takes you higher.

22:42.000 --> 22:45.000
But there's a very, very critical activity that you have to engage in,

22:45.000 --> 22:48.000
I think, if you want to use your entire brain

22:48.000 --> 22:50.000
and become very good at problem solving.

22:50.000 --> 22:53.000
And that is to think about using your waking time

22:53.000 --> 22:58.000
to assign tasks to your background line.

22:58.000 --> 23:01.000
To actually think hard about something

23:01.000 --> 23:05.000
and create work for your background line.

23:05.000 --> 23:08.000
That really is the point of the hammock and all this listening

23:08.000 --> 23:11.000
and all this working and talking about that you're going to do when you're awake

23:11.000 --> 23:15.000
is actually to give the other half of you stuff to do.

23:15.000 --> 23:18.000
The other good thing about your waking mind is when you do think

23:18.000 --> 23:22.000
you have a great idea that you've caught up with in your background mind,

23:22.000 --> 23:25.000
your waking mind is good at picking the other part.

23:25.000 --> 23:28.000
Saying, you know, you thought you woke up with this brilliant idea,

23:28.000 --> 23:33.000
but now I'm seeing this characteristic of it that seems not so brilliant.

23:33.000 --> 23:35.000
So let's talk about the background mind.

23:35.000 --> 23:38.000
I'm not going to directly equate it with the sleeping mind,

23:38.000 --> 23:42.000
but the sleeping mind is the number one instance of the background mind.

23:42.000 --> 23:47.000
You can find access to your background mind during the day while you're awake,

23:47.000 --> 23:50.000
but it's tricky.

23:50.000 --> 23:54.000
It's good at making connections, right?

23:54.000 --> 24:00.000
The kind of thing like, if I make a hut out of mud and it rains hard,

24:00.000 --> 24:03.000
it will disintegrate.

24:03.000 --> 24:06.000
It's not necessarily the kind of thing that you can tactically figure out.

24:06.000 --> 24:10.000
Your background mind is going to know sort of aspects of all those different components

24:10.000 --> 24:12.000
that make the connections and synthesize them.

24:12.000 --> 24:16.000
Even when you think you're really hot at making decisions on the fly,

24:16.000 --> 24:21.000
you're almost always just regurgitating something your background mind has already figured out.

24:21.000 --> 24:23.000
So the background mind is good at synthesizing things.

24:23.000 --> 24:26.000
It's good about strategy, right?

24:26.000 --> 24:30.000
And so when Mark talks about, you know, abstractions and things like that,

24:30.000 --> 24:34.000
abstractions are our software strategy, right?

24:34.000 --> 24:38.000
Because the idea there is you're making some super global decision

24:38.000 --> 24:41.000
that's going to need to be corrected in a whole bunch of contexts

24:41.000 --> 24:44.000
in which you can't make tactical decisions yet.

24:44.000 --> 24:49.000
What does it mean to make an abstraction you're going to derive libraries from?

24:49.000 --> 24:51.000
What does it mean to put something in a programming language

24:51.000 --> 24:55.000
where I had no idea what you guys were going to do with it?

24:55.000 --> 24:58.000
It's a more strategic kind of thing.

24:58.000 --> 25:00.000
You don't build a programming language and say,

25:00.000 --> 25:04.000
how will this programming language deal with HTTP requests?

25:04.000 --> 25:09.000
What you want to do is give Mark something that he can use

25:09.000 --> 25:13.000
when he's got a tactical decision to make about HTTP requests.

25:13.000 --> 25:16.000
And that's a strategic kind of thinking.

25:16.000 --> 25:19.000
And your background mind is good at strategic thinking.

25:19.000 --> 25:23.000
If you want to do abstraction, you have to find time to do this thinking

25:23.000 --> 25:26.000
because that's the part your brain comes from, right?

25:26.000 --> 25:30.000
It does abstraction, it draws analogies, right?

25:30.000 --> 25:36.000
I think this is where you solve most non-trivial problems, okay?

25:36.000 --> 25:39.000
You can make good decisions in the moment otherwise,

25:39.000 --> 25:41.000
but if you're really trying to solve something hard,

25:41.000 --> 25:45.000
you've got to engage the other half of your head.

25:45.000 --> 25:49.000
So I'm not just saying a scientific American.

25:49.000 --> 25:55.000
Say that when we're sleeping, we process the information during the day

25:55.000 --> 25:58.000
because that's pretty obvious.

25:58.000 --> 26:01.000
But that sleep reinforces memory, which is good.

26:01.000 --> 26:04.000
I mean, it is important to remember what you're working on.

26:04.000 --> 26:09.000
But more importantly, it is a great sorter out of things.

26:09.000 --> 26:11.000
So we had this whole...

26:11.000 --> 26:14.000
I just advocated taking a lot of input, right?

26:14.000 --> 26:18.000
Taking a lot of input, doing all this analysis of the requirements in the space, right?

26:18.000 --> 26:24.000
Doing all the reading, looking at competitive solutions and tearing them apart.

26:24.000 --> 26:26.000
There's this ton of stuff.

26:26.000 --> 26:30.000
When are you going to decide what about that is important and what isn't?

26:30.000 --> 26:32.000
When you're asleep.

26:32.000 --> 26:34.000
That's what happens.

26:34.000 --> 26:37.000
Evolution has solved this problem for us.

26:37.000 --> 26:40.000
And that's the solution it came up with.

26:40.000 --> 26:42.000
We can't ignore it.

26:42.000 --> 26:45.000
We have to use it.

26:45.000 --> 26:49.000
But the most critical thing is this one.

26:49.000 --> 26:56.000
Finding hidden relations and solving problems we were working on.

26:56.000 --> 26:58.000
So imagine somebody says,

26:58.000 --> 27:03.000
I have this problem, this, that, that, that, that, that, that.

27:03.000 --> 27:05.000
And you look at it for 10 minutes and say,

27:05.000 --> 27:08.000
okay, I'm going to go out to the movies and do something else.

27:08.000 --> 27:10.000
Then you go to sleep.

27:10.000 --> 27:13.000
Are you going to solve that problem when you're asleep?

27:13.000 --> 27:14.000
Sure.

27:14.000 --> 27:16.000
No.

27:16.000 --> 27:20.000
Or you didn't think about it, did you?

27:20.000 --> 27:22.000
No, you didn't think about it.

27:22.000 --> 27:24.000
You didn't think about it hard enough while you were awake

27:24.000 --> 27:27.000
for it to become important to your mind when you were asleep.

27:27.000 --> 27:30.000
And this goes back to that feeding your background mind thing.

27:30.000 --> 27:32.000
You really do have to work hard.

27:32.000 --> 27:34.000
Just think, not typing it in.

27:34.000 --> 27:37.000
Just thinking about a problem during the day

27:37.000 --> 27:41.000
so that it becomes an agenda item for your background mind.

27:41.000 --> 27:44.000
That's how it works, right?

27:44.000 --> 27:46.000
It's when people are out there and they're like,

27:46.000 --> 27:48.000
oh my God, how am I going to find food?

27:48.000 --> 27:50.000
And this is happening there.

27:50.000 --> 27:52.000
But I know I saw an elk over there.

27:52.000 --> 27:54.000
They seem to be by the water sometimes or whatever.

27:54.000 --> 27:56.000
That's when you wake up as a caveman and say,

27:56.000 --> 28:01.000
let's go hunt for the animals by the water.

28:01.000 --> 28:04.000
It's not a logical deduction.

28:04.000 --> 28:07.000
It seems like that when your foreground mind is sort of analyzing it.

28:07.000 --> 28:10.000
But there's no logic for that necessarily.

28:10.000 --> 28:13.000
It's really a process of this very parallel kind of thinking.

28:13.000 --> 28:16.000
So this is very important.

28:16.000 --> 28:20.000
So we have a problem in general because we write,

28:20.000 --> 28:22.000
and we're just being asked to write stuff for this,

28:22.000 --> 28:26.000
more and more complex as time goes by.

28:26.000 --> 28:33.000
And we know there's a 7 plus or minus 2 sort of working memory limit.

28:33.000 --> 28:38.000
And as smart as any of us are, we all suffer from the same limit.

28:38.000 --> 28:42.000
But the problems that we're called upon to solve

28:42.000 --> 28:44.000
are much bigger than that normally.

28:44.000 --> 28:45.000
So what do we do?

28:45.000 --> 28:48.000
If we can't fit the whole thing in our head at the same time,

28:48.000 --> 28:56.000
how can we work on a problem with more than nine components?

28:56.000 --> 29:00.000
What I'm going to recommend is that you write all the bits down.

29:00.000 --> 29:04.000
Especially now, you've written a lot down about the problem.

29:04.000 --> 29:10.000
What the problem is, a lot of facts about it, constraints about where it runs.

29:10.000 --> 29:13.000
You don't know, you've asked yourself those questions, you wrote them down.

29:13.000 --> 29:16.000
I wish I knew a blog.

29:16.000 --> 29:18.000
You looked at competitive things and said,

29:18.000 --> 29:21.000
that works great over here, but that part of that competitive thing sucks.

29:21.000 --> 29:23.000
I hate that.

29:23.000 --> 29:25.000
I wish that wasn't there.

29:25.000 --> 29:28.000
You gave this huge agenda to your background line.

29:28.000 --> 29:35.000
And when you're trying to load it up, you need to survey.

29:35.000 --> 29:38.000
And that's the point of writing it all down before.

29:38.000 --> 29:43.000
If you've written all this stuff down, including some sketch of how you want to solve the problem,

29:43.000 --> 29:47.000
you can go and jump around and look at that.

29:47.000 --> 29:50.000
It's sort of like, how many balls can you juggle?

29:50.000 --> 29:52.000
Well, you can only juggle so many.

29:52.000 --> 29:53.000
I can't juggle at all.

29:53.000 --> 29:57.000
But if we look at the 7 plus or minus 2 thing, we can juggle 7 to 9 balls.

29:57.000 --> 30:00.000
But if you can imagine having an assistant,

30:00.000 --> 30:04.000
who every now and then could take one of those out and put a different color in,

30:04.000 --> 30:07.000
then you could juggle balls of 20 different colors at the same time,

30:07.000 --> 30:11.000
as long as there were only 9 in the air at any one point in time.

30:11.000 --> 30:12.000
And that's what you're doing.

30:12.000 --> 30:18.000
You're going to sort of look around at all these pieces and shift arbitrary shapes of 7

30:18.000 --> 30:24.000
into your head at different points in time.

30:24.000 --> 30:27.000
Maybe you'll draw pictures.

30:27.000 --> 30:29.000
Don't use the UML tool to do this.

30:29.000 --> 30:30.000
Damn.

30:30.000 --> 30:32.000
It's not a methodology.

30:32.000 --> 30:34.000
So go over and over.

30:34.000 --> 30:39.000
But then you must, again, step away from the computer.

30:39.000 --> 30:42.000
There's another really important part of doing this,

30:42.000 --> 30:47.000
which is to go and sit somewhere and have no input.

30:47.000 --> 30:50.000
And close your eyes and not go to sleep.

30:50.000 --> 30:51.000
Close your eyes.

30:51.000 --> 30:53.000
Because we have this other thing.

30:53.000 --> 30:55.000
Everybody knows what it is.

30:55.000 --> 30:56.000
It's really hard to describe.

30:56.000 --> 30:59.000
But does everybody have a concept of their mind's eye?

30:59.000 --> 31:02.000
What you see when you close your eyes and you start thinking about something,

31:02.000 --> 31:05.000
it's this weird, I mean, it's not actually technically visual,

31:05.000 --> 31:07.000
although some people are really vibrantly visual.

31:07.000 --> 31:10.000
I know for me, it's, I don't know.

31:10.000 --> 31:14.000
I can't describe it, but it's not very realistic.

31:14.000 --> 31:16.000
But you need to do that.

31:16.000 --> 31:18.000
That part is important for your brain.

31:18.000 --> 31:23.000
Because at that point, you're switching out of sort of an input reception mode.

31:23.000 --> 31:26.000
If you're just looking at your list, you're sort of in the mode of,

31:26.000 --> 31:27.000
I'm getting input.

31:27.000 --> 31:32.000
But when you're sitting and contemplating something and hashing it over in your head,

31:32.000 --> 31:36.000
you don't have any other input, which means you're exercising the recall.

31:36.000 --> 31:38.000
I looked at those 20 points.

31:38.000 --> 31:39.000
Let's say it was just 20.

31:39.000 --> 31:42.000
I looked at those 20 points over and over and over again.

31:42.000 --> 31:44.000
And I jumped around with input between them.

31:44.000 --> 31:50.000
Now I close my eyes and I'm trying to recall them and think about them a little bit more in my head.

31:50.000 --> 31:54.000
And you're going to find if you've done the last step going over and over,

31:54.000 --> 31:57.000
you will actually be able to sit on a hammock and pull all the different parts

31:57.000 --> 32:01.000
of a fairly large problem in and out of your head, admittedly, maybe one at a time.

32:01.000 --> 32:03.000
And think about them that way.

32:03.000 --> 32:05.000
That exercise is really, really important.

32:05.000 --> 32:09.000
I don't know why it just is because it forces this recall thing

32:09.000 --> 32:14.000
that definitely makes those things agenda items for your background mind.

32:14.000 --> 32:18.000
So we'll call that mind's eye time.

32:18.000 --> 32:19.000
Now you're done.

32:19.000 --> 32:21.000
Cake is in the oven.

32:21.000 --> 32:24.000
You just have to wait.

32:24.000 --> 32:28.000
It's so good.

32:28.000 --> 32:32.000
And one of the things I would say is at least wait overnight.

32:32.000 --> 32:38.000
No matter how ill you and your buddies talked about it and you just feel like such a hot shot today,

32:38.000 --> 32:41.000
I have got this thing.

32:41.000 --> 32:50.000
Sleep on it at least one night, at least if it's an important decision.

32:50.000 --> 32:58.000
Now, how many people woke up this morning with the answer to a hard problem?

32:58.000 --> 33:00.000
You see, it's science.

33:00.000 --> 33:02.000
Science at work.

33:02.000 --> 33:04.000
No, it's really kind of an unfortunate thing.

33:04.000 --> 33:07.000
If you're not thinking about this, do you think what happened?

33:07.000 --> 33:09.000
I worked hard all day.

33:09.000 --> 33:12.000
I'm done working.

33:12.000 --> 33:14.000
Time to relax.

33:14.000 --> 33:18.000
Unfortunately, if you believe in what I'm saying today,

33:18.000 --> 33:23.000
you're actually doing something kind of important when you're sleeping.

33:23.000 --> 33:28.000
So occasionally, you really have to give your brain a chance to do that other part of the job.

33:28.000 --> 33:34.000
If you always deny it, I don't think you're going to have the best results.

33:34.000 --> 33:37.000
Unfortunately, sometimes overnight is not enough.

33:37.000 --> 33:42.000
Some big problems, especially finding really good abstractions,

33:42.000 --> 33:46.000
are finding answers to things that satisfy a bunch of simultaneous constraints,

33:46.000 --> 33:48.000
take a long time.

33:48.000 --> 33:50.000
It just does.

33:50.000 --> 33:54.000
And I know everybody has to ship and everything else,

33:54.000 --> 33:57.000
and in that case, I'll have what I'm saying doesn't apply.

33:57.000 --> 34:01.000
And like I said before, I consider it a huge opportunity

34:01.000 --> 34:04.000
when I get an extended amount of time to think about a problem,

34:04.000 --> 34:07.000
because I know I'll come up with a better answer.

34:07.000 --> 34:10.000
But one of the ways you can deal with this and not get stymied by,

34:10.000 --> 34:13.000
well, let me just think about that for three months,

34:13.000 --> 34:21.000
because most managers are not incredibly receptive to that sentence.

34:21.000 --> 34:24.000
So to just work on more than one thing,

34:24.000 --> 34:27.000
not inside one day,

34:27.000 --> 34:30.000
try to work on one thing each day.

34:30.000 --> 34:34.000
But if over the course of time, you have like three projects,

34:34.000 --> 34:38.000
it's quite possible to load one up and work on it for three days,

34:38.000 --> 34:43.000
and finding answers to any of your question mark items

34:43.000 --> 34:46.000
are able to enumerate new possibilities.

34:46.000 --> 34:48.000
So you kind of stuck a little bit,

34:48.000 --> 34:51.000
you switch to another project and do that for a few days.

34:51.000 --> 34:53.000
You have to amortize the loading up time,

34:53.000 --> 34:57.000
it can take between an hour and an entire day to load up something.

34:57.000 --> 35:00.000
So once you've done that, you try to get at least the rest of the day,

35:00.000 --> 35:03.000
or three days or more on it.

35:03.000 --> 35:08.000
But don't get hung up about the stuck thing, just switch.

35:08.000 --> 35:11.000
Don't stay stuck, switch.

35:11.000 --> 35:14.000
Or get more input, talk about it more,

35:14.000 --> 35:19.000
or keep stimulating the pathway, don't stay stuck on it.

35:19.000 --> 35:22.000
But yeah, then eventually cake comes out of the oven.

35:22.000 --> 35:24.000
You wake up and you have a great idea,

35:24.000 --> 35:27.000
you think you know the answer to your problem,

35:27.000 --> 35:31.000
or you have a good idea for a solution.

35:31.000 --> 35:35.000
Unfortunately, sometimes you have an answer to,

35:35.000 --> 35:37.000
not the problem you were working on,

35:37.000 --> 35:40.000
you were working on three projects and you loaded up the project C

35:40.000 --> 35:43.000
and you woke up with the answer to project A.

35:43.000 --> 35:46.000
That has to be okay.

35:46.000 --> 35:50.000
You just switch and take advantage of it, at least capture it.

35:50.000 --> 35:52.000
If you wake up with an answer to some other thing

35:52.000 --> 35:54.000
that you can't work on that day,

35:54.000 --> 35:57.000
capture the results of this background process,

35:57.000 --> 36:00.000
they're really useful.

36:00.000 --> 36:04.000
Finally, you do have to take your great ideas

36:04.000 --> 36:06.000
and figure out if they're actually great

36:06.000 --> 36:09.000
by either analyzing them more, which is certainly important,

36:09.000 --> 36:13.000
but sometimes you have to write them and type them into your computer.

36:13.000 --> 36:15.000
Actually, we all have to do this.

36:15.000 --> 36:18.000
So you do eventually have to code.

36:18.000 --> 36:20.000
It's fun, Stu has this great sense,

36:20.000 --> 36:23.000
he's seen some of my design sheets,

36:23.000 --> 36:25.000
and I don't know what it says,

36:25.000 --> 36:27.000
document of despair or something.

36:27.000 --> 36:29.000
It seems to be all like,

36:29.000 --> 36:31.000
we can't do this, this doesn't work like that,

36:31.000 --> 36:34.000
the question marks, blah, blah, blah.

36:34.000 --> 36:37.000
It's all negative, but it's all challenges

36:37.000 --> 36:39.000
to the problem-solving process.

36:39.000 --> 36:41.000
It's not despairing, it's positive,

36:41.000 --> 36:44.000
it's saying, I know what my challenges are,

36:44.000 --> 36:46.000
and therefore I can work on it.

36:46.000 --> 36:48.000
But you spit this thing out,

36:48.000 --> 36:54.000
now you have something, so you try to avoid a lot of typing.

36:54.000 --> 36:56.000
I know I do.

36:56.000 --> 36:59.000
Because if I think I've got an answer

36:59.000 --> 37:01.000
and the answer is small,

37:01.000 --> 37:05.000
that's one of the most telling attributes

37:06.000 --> 37:08.000
that is probably good.

37:10.000 --> 37:14.000
And what I would hope from doing this whole process

37:14.000 --> 37:17.000
is that you gain confidence in it

37:17.000 --> 37:19.000
after you've seen it work for you,

37:19.000 --> 37:21.000
so that you say, you know what,

37:21.000 --> 37:23.000
I have never done this before,

37:23.000 --> 37:25.000
but I really have thought about it,

37:25.000 --> 37:28.000
and this solution I came up with overnight feels awesome,

37:28.000 --> 37:30.000
and woo, let's go.

37:30.000 --> 37:32.000
It is important to look at what you did

37:32.000 --> 37:34.000
and to run it and see

37:34.000 --> 37:36.000
and find out new things about the solution

37:36.000 --> 37:38.000
and say, you know what, I had this supposition,

37:38.000 --> 37:40.000
it's not correct, I thought it would have this characteristic,

37:40.000 --> 37:42.000
it doesn't, et cetera, et cetera,

37:42.000 --> 37:44.000
I am not advocating the waterfall model,

37:44.000 --> 37:46.000
you're going to try stuff and go back,

37:46.000 --> 37:48.000
that's fine.

37:48.000 --> 37:51.000
But don't lean on this, right?

37:51.000 --> 37:53.000
Test-driven dentistry,

37:53.000 --> 37:55.000
I don't think I can come up with a better thing.

37:58.000 --> 38:00.000
We can't really do that.

38:00.000 --> 38:02.000
The last thing is

38:02.000 --> 38:05.000
you are going to be wrong.

38:05.000 --> 38:08.000
I am frequently wrong.

38:08.000 --> 38:10.000
That's part of the game.

38:10.000 --> 38:12.000
You're going to think of better ideas.

38:12.000 --> 38:14.000
I think that's one of the most exciting things.

38:14.000 --> 38:16.000
I think no matter what I've ever thought of,

38:16.000 --> 38:19.000
the fact that I know I'm going to think of something better,

38:19.000 --> 38:21.000
as much as it will suck a little bit

38:21.000 --> 38:23.000
because I know I delivered something that was not the best,

38:23.000 --> 38:27.000
means that I'm still going.

38:27.000 --> 38:29.000
It's still working.

38:29.000 --> 38:31.000
So you will think of better ideas.

38:31.000 --> 38:34.000
Also, the facts change.

38:34.000 --> 38:36.000
They can change because of two reasons, right?

38:36.000 --> 38:39.000
One, you missed some of them early on,

38:39.000 --> 38:41.000
so they're new to you because you skipped them.

38:41.000 --> 38:43.000
What else do we have?

38:43.000 --> 38:46.000
Changing requirements, right?

38:46.000 --> 38:48.000
It's just, you know, we all know this.

38:48.000 --> 38:50.000
The facts will change.

38:50.000 --> 38:53.000
When the facts change, do not dig in.

38:53.000 --> 38:57.000
Do it over again and see if your answer is still valid

38:57.000 --> 38:59.000
in the context of the new requirements and new facts.

38:59.000 --> 39:05.000
And if it isn't, change your mind and don't apologize.

39:05.000 --> 39:07.000
Sometimes you'll just make mistakes,

39:07.000 --> 39:12.000
errors in logic or, you know, you just get it wrong.

39:12.000 --> 39:14.000
That's fine.

39:14.000 --> 39:18.000
If I can advocate anything, it's do not be afraid,

39:18.000 --> 39:23.000
especially do not be afraid of being wrong.

39:23.000 --> 39:28.000
So, in summary, this was a rant.

39:28.000 --> 39:31.000
There's no summary.

39:45.000 --> 39:47.000
I have two minutes for questions.

39:47.000 --> 39:49.000
Yes.

