1
00:00:00,000 --> 00:00:03,320
Hej alla! Det här är Fontes.

2
00:00:03,320 --> 00:00:06,880
I dag ska jag försöka köpa.

3
00:00:06,880 --> 00:00:10,780
Och det är för att det är att jag har sett mycket om köp.

4
00:00:10,780 --> 00:00:14,540
Att vara, vad det kallar,

5
00:00:14,540 --> 00:00:19,080
att vara fördelad nu i New Jersey eller något sådant.

6
00:00:19,080 --> 00:00:20,880
Låt oss se vad Twitter säger.

7
00:00:23,880 --> 00:00:26,300
Jag tror att jag har sett köp trenden.

8
00:00:27,020 --> 00:00:30,660
Det här är nån av de här.

9
00:00:32,660 --> 00:00:33,860
Och Kobol.

10
00:00:37,700 --> 00:00:41,780
Så det ser ut som att världen är i en djur nivå för folk att förstå Kobol.

11
00:00:42,100 --> 00:00:44,660
Så förstås jag ska försöka förstå Kobol.

12
00:00:48,980 --> 00:00:52,660
Kobol är en av de här länge som jag har hört om hela mitt liv.

13
00:00:53,660 --> 00:00:56,620
Men jag vet inte vad det ser ut som.

14
00:00:56,620 --> 00:01:03,580
Så jag tänkte att jag ska försöka och lära lite Kobol nu från en absolut skratch.

15
00:01:03,580 --> 00:01:09,860
Så i den här episodeen ser du mig att jag har kämpat.

16
00:01:09,860 --> 00:01:12,540
Jag vet inte om det kan röra på Windows.

17
00:01:12,540 --> 00:01:14,340
Jag vet inte vad det gör.

18
00:01:14,340 --> 00:01:18,180
Jag har en seriöst seriös erfarenhet med det.

19
00:01:18,940 --> 00:01:24,300
Så jag tror att vi ska börja och se vad som händer när jag lär Kobol.

20
00:01:27,700 --> 00:01:30,740
Målet kan göra en liten människa från att lära det.

21
00:01:30,740 --> 00:01:32,460
Hur vet du så?

22
00:01:32,460 --> 00:01:35,220
Let's create a blank slate här och.

23
00:01:37,060 --> 00:01:40,260
Get started with Kobol Windows.

24
00:01:43,500 --> 00:01:45,060
Microfokus dot kom.

25
00:01:45,220 --> 00:01:46,100
Never been there.

26
00:01:49,860 --> 00:01:51,580
This looks like a good tutorial.

27
00:01:53,340 --> 00:01:55,140
Let's just go in here and see what happens.

28
00:01:56,380 --> 00:01:56,900
OK.

29
00:01:59,620 --> 00:02:03,020
Well, this looks classic.

30
00:02:04,620 --> 00:02:05,780
As soon as in a bit.

31
00:02:08,660 --> 00:02:11,860
OK, common business oriented language.

32
00:02:12,580 --> 00:02:17,020
Good from 1959 older than me nice.

33
00:02:21,100 --> 00:02:25,220
What else does it say here in the website to help you learn Kobol.

34
00:02:25,260 --> 00:02:26,780
Microfokus provides a range.

35
00:02:26,780 --> 00:02:29,580
OK, who is who are microfokus by the way.

36
00:02:31,580 --> 00:02:34,540
Per standard learning practice.

37
00:02:34,540 --> 00:02:36,700
I'm not gonna invest too much time in anything.

38
00:02:36,940 --> 00:02:40,500
I'm just gonna try to find the gist of everything.

39
00:02:42,140 --> 00:02:48,820
OK, this looks like some typing person wrote this lot of text.

40
00:02:49,100 --> 00:02:50,660
Probably useless.

41
00:02:52,620 --> 00:02:54,060
Calling a Kobol program.

42
00:02:57,020 --> 00:02:58,660
Special in going to be called.

43
00:02:58,740 --> 00:03:00,220
What the hell is this?

44
00:03:00,540 --> 00:03:03,020
OK, let's go to the hello world thing.

45
00:03:04,900 --> 00:03:06,420
This is what I'm talking about.

46
00:03:08,340 --> 00:03:08,820
OK.

47
00:03:09,820 --> 00:03:20,580
This tutorial walks you through the steps to create your first hello Kobol world application and demonstrates the basic features of the Visual Studio integrated.

48
00:03:20,900 --> 00:03:22,340
I have to use Visual Studio.

49
00:03:24,460 --> 00:03:26,460
Oh, this is gonna be a long episode.

50
00:03:26,460 --> 00:03:38,780
I might have it installed so let's see Visual Studio 2017.

51
00:03:41,060 --> 00:03:42,660
Hey, hey, hey.

52
00:03:44,860 --> 00:03:47,340
Welcome all you connected developers.

53
00:03:47,540 --> 00:03:50,820
Yeah, I know that was not at all what it said.

54
00:03:51,100 --> 00:03:52,020
Connect all you do.

55
00:03:52,180 --> 00:03:53,220
I don't want to do that.

56
00:03:53,460 --> 00:03:53,900
I have to.

57
00:03:54,620 --> 00:03:56,980
Not now, maybe later.

58
00:03:57,180 --> 00:03:59,220
This is the feeling right there.

59
00:04:01,420 --> 00:04:02,500
A familiar environment.

60
00:04:02,700 --> 00:04:03,420
Dark.

61
00:04:04,740 --> 00:04:05,620
Dread and settings.

62
00:04:05,700 --> 00:04:06,260
General.

63
00:04:07,580 --> 00:04:09,900
I cannot pick Kobol here.

64
00:04:09,980 --> 00:04:10,380
OK.

65
00:04:12,140 --> 00:04:14,220
Let's take a look at this again here.

66
00:04:14,940 --> 00:04:15,980
Windows 10 and later.

67
00:04:16,060 --> 00:04:16,700
That's me.

68
00:04:16,940 --> 00:04:17,940
From your Windows desktop.

69
00:04:17,980 --> 00:04:18,620
Click start.

70
00:04:18,700 --> 00:04:20,140
Visual Studio 2007.

71
00:04:20,500 --> 00:04:21,220
I did that.

72
00:04:22,220 --> 00:04:29,140
If this is the first time you have started Visual Studio in your machine, you're prompted to specify default environment settings.

73
00:04:29,220 --> 00:04:30,940
Ah, general development settings.

74
00:04:31,020 --> 00:04:31,660
That's where we are.

75
00:04:31,740 --> 00:04:32,100
Good.

76
00:04:33,340 --> 00:04:34,820
The windows is open.

77
00:04:35,460 --> 00:04:36,620
I guess I'm going to continue.

78
00:04:38,060 --> 00:04:39,620
Let's tab in to Visual Studio here.

79
00:04:41,660 --> 00:04:42,300
General.

80
00:04:45,260 --> 00:04:46,540
I'm just going to double check that.

81
00:04:47,300 --> 00:04:49,460
OK, it's not exactly the same, but.

82
00:04:49,860 --> 00:04:52,020
It's probably what they mean.

83
00:04:58,780 --> 00:05:00,580
Let me resize this.

84
00:05:00,660 --> 00:05:01,780
Humongous window.

85
00:05:03,300 --> 00:05:05,420
OK, don't want to sign in all accounts.

86
00:05:10,020 --> 00:05:12,140
My evaluation period has ended.

87
00:05:13,540 --> 00:05:16,500
OK, I guess it ended in 2017.

88
00:05:17,900 --> 00:05:18,860
What do you do now?

89
00:05:20,460 --> 00:05:23,020
What options do I have here?

90
00:05:25,100 --> 00:05:26,580
What options do I have here?

91
00:05:32,660 --> 00:05:33,820
OK, what is this?

92
00:05:39,460 --> 00:05:43,900
OK, I'm going to write cobalt in VS code.

93
00:05:49,460 --> 00:05:56,580
OK, looks like it doesn't support cobalt by default, at least.

94
00:05:58,620 --> 00:05:59,900
I guess it's not cool.

95
00:06:02,300 --> 00:06:04,340
Why does this page look broken, by the way?

96
00:06:05,060 --> 00:06:05,940
Not a good sign.

97
00:06:06,380 --> 00:06:07,580
The end times is coming.

98
00:06:12,940 --> 00:06:18,020
But I just want to get started, but why do you have to use Visual Studio normal?

99
00:06:19,620 --> 00:06:20,700
Cobalt plusback.

100
00:06:21,380 --> 00:06:23,700
These things are so alien to me.

101
00:06:24,140 --> 00:06:25,420
It's quite interesting, actually.

102
00:06:27,460 --> 00:06:29,380
Is this maybe a virus?

103
00:06:31,780 --> 00:06:33,300
That icon looks so virusy.

104
00:06:36,500 --> 00:06:39,140
Cobalt, acrobalt, cobalt.

105
00:06:40,340 --> 00:06:40,660
Ja.

106
00:06:42,540 --> 00:06:43,820
Wait a minute.

107
00:06:45,180 --> 00:06:46,980
Cobalt on Linux.

108
00:06:50,220 --> 00:06:53,180
OK, schnellt ändå.

109
00:07:00,140 --> 00:07:05,940
Can you make a note that I'll be talking.

110
00:07:09,860 --> 00:07:10,700
Are you fine?

111
00:07:13,060 --> 00:07:14,380
No, I'm fine.

112
00:07:15,820 --> 00:07:17,740
That was all off Cuba.

113
00:07:17,740 --> 00:07:20,740
Let's have a open two window here.

114
00:07:22,740 --> 00:07:25,740
I probably need to resize it a little bit like that.

115
00:07:25,740 --> 00:07:26,740
It's easy to see.

116
00:07:27,740 --> 00:07:28,740
Let's install it.

117
00:07:33,740 --> 00:07:34,740
Hoppsam.

118
00:07:37,740 --> 00:07:38,740
Yes.

119
00:07:39,740 --> 00:07:41,740
Let's see where this gets us.

120
00:07:43,740 --> 00:07:45,740
I'm gonna continue read this.

121
00:07:46,740 --> 00:07:47,740
This looks boring.

122
00:07:48,740 --> 00:07:49,740
Package management.

123
00:07:49,740 --> 00:07:50,740
You should find it.

124
00:07:50,740 --> 00:07:51,740
Once installed.

125
00:07:52,740 --> 00:07:56,740
Is this what the code program looks like?

126
00:07:58,740 --> 00:08:00,740
I guess we don't need vicious studio then.

127
00:08:00,740 --> 00:08:02,740
So let's just goodbye.

128
00:08:04,740 --> 00:08:06,740
And open vicious studio code.

129
00:08:10,740 --> 00:08:12,740
Add workspace folder.

130
00:08:13,740 --> 00:08:14,740
And...

131
00:08:16,740 --> 00:08:19,740
I'm gonna add a folder called cobble hello world.

132
00:08:20,740 --> 00:08:22,740
There's cobble in it.

133
00:08:23,740 --> 00:08:24,740
Let's call it that.

134
00:08:25,740 --> 00:08:26,740
That's a good folder.

135
00:08:27,740 --> 00:08:28,740
It's an update.

136
00:08:28,740 --> 00:08:29,740
I don't need this.

137
00:08:32,740 --> 00:08:34,740
Let's see what happens if I just...

138
00:08:37,740 --> 00:08:40,740
Copy and paste this into a cobble file.

139
00:08:42,740 --> 00:08:44,740
I need to find code test.cbl.

140
00:08:45,740 --> 00:08:46,740
So a new file.

141
00:08:46,740 --> 00:08:47,740
I paste that in.

142
00:08:48,740 --> 00:08:50,740
I'm gonna save this as test.cbl.

143
00:08:51,740 --> 00:08:53,740
Let's see if it's .txt.

144
00:08:54,740 --> 00:08:55,740
No thank you.

145
00:08:58,740 --> 00:08:59,740
Aha.

146
00:09:00,740 --> 00:09:03,740
The marketplace has extension and help with cbl files.

147
00:09:04,740 --> 00:09:06,740
Let's see what we can do.

148
00:09:08,740 --> 00:09:09,740
Okay, very nice.

149
00:09:12,740 --> 00:09:16,740
This is the one we had up on the page here I think.

150
00:09:19,740 --> 00:09:23,740
Why does this page look so silly?

151
00:09:23,740 --> 00:09:25,740
Okay, let's just not use that.

152
00:09:25,740 --> 00:09:28,740
It was a good lead, so thank you page.

153
00:09:28,740 --> 00:09:30,740
But this is what we want to push.

154
00:09:30,740 --> 00:09:31,740
Bam, install.

155
00:09:33,740 --> 00:09:36,740
So this is just a source colorizer.

156
00:09:43,740 --> 00:09:47,740
Let's just look through this quickly and see if there's something that we obviously want.

157
00:09:48,740 --> 00:09:51,740
Autocomplete highlighting diagnostics.

158
00:09:51,740 --> 00:09:53,740
We'll see what happens.

159
00:09:53,740 --> 00:09:54,740
Okay, nice.

160
00:09:54,740 --> 00:09:56,740
We have colors.

161
00:09:56,740 --> 00:10:00,740
By the way, why are these lines there in the middle?

162
00:10:01,740 --> 00:10:02,740
Sorry.

163
00:10:02,740 --> 00:10:03,740
Okay.

164
00:10:04,740 --> 00:10:07,740
Can I run my code program now?

165
00:10:08,740 --> 00:10:10,740
Let's go in here.

166
00:10:10,740 --> 00:10:15,740
We have installed all the things from Cobol and Fink.

167
00:10:15,740 --> 00:10:22,740
So let's go in to this folder that we created and find out test.cbl.

168
00:10:25,740 --> 00:10:27,740
Where do you have these things?

169
00:10:32,740 --> 00:10:33,740
Development.

170
00:10:34,740 --> 00:10:35,740
Method.

171
00:10:37,740 --> 00:10:39,740
Cobol in it.

172
00:10:39,740 --> 00:10:41,740
There it is.

173
00:10:41,740 --> 00:10:45,740
And let's go and find what does this opencobol provide.

174
00:10:45,740 --> 00:10:48,740
It probably provides a compiler of some sort.

175
00:10:48,740 --> 00:10:54,740
So it looks here like we can write cobxhello.cob.

176
00:10:54,740 --> 00:11:02,740
And then we get an executable called dot slash hello, or yes, called hello, that is executable.

177
00:11:02,740 --> 00:11:04,740
Let's try that out.

178
00:11:04,740 --> 00:11:05,740
Cob C.

179
00:11:05,740 --> 00:11:07,740
No input files.

180
00:11:07,740 --> 00:11:08,740
Like we have this command.

181
00:11:08,740 --> 00:11:10,740
Let's clear the window.

182
00:11:10,740 --> 00:11:14,740
And we write cobc minus xhello.cob.

183
00:11:14,740 --> 00:11:18,740
But our file is called test.cbl.

184
00:11:18,740 --> 00:11:20,740
I guess that works.

185
00:11:20,740 --> 00:11:22,740
Cob C.

186
00:11:22,740 --> 00:11:24,740
Cob C.

187
00:11:24,740 --> 00:11:26,740
X as I think is.

188
00:11:26,740 --> 00:11:28,740
Let's see what it says there.

189
00:11:28,740 --> 00:11:30,740
Wow, lots of options.

190
00:11:32,740 --> 00:11:35,740
X means build an executable program.

191
00:11:35,740 --> 00:11:36,740
Okay.

192
00:11:36,740 --> 00:11:37,740
Nice.

193
00:11:37,740 --> 00:11:38,740
Clear this again.

194
00:11:38,740 --> 00:11:42,740
Cob C minus x and test.cbl.

195
00:11:42,740 --> 00:11:45,740
Was there something else we needed?

196
00:11:45,740 --> 00:11:53,740
No, it looks like, I guess it will compile it to the executable dot hello if it's called hello.

197
00:11:53,740 --> 00:11:56,740
So our executable is probably going to be called test.

198
00:11:59,740 --> 00:12:02,740
Syntax error already.

199
00:12:03,740 --> 00:12:05,740
Okay.

200
00:12:05,740 --> 00:12:09,740
Well, that's not even a column.

201
00:12:09,740 --> 00:12:13,740
Yeah, there is a line one column seven.

202
00:12:13,740 --> 00:12:15,740
This doesn't look good.

203
00:12:15,740 --> 00:12:18,740
One, two, three, four, five, seven.

204
00:12:18,740 --> 00:12:23,740
Oh, this is where I discover those lines that I don't know what they are.

205
00:12:23,740 --> 00:12:26,740
I wonder what that means.

206
00:12:27,740 --> 00:12:29,740
Oh.

207
00:12:29,740 --> 00:12:31,740
Hmm.

208
00:12:32,740 --> 00:12:34,740
This was interesting.

209
00:12:34,740 --> 00:12:39,740
So apparently everything is fine until here.

210
00:12:39,740 --> 00:12:41,740
No, can't write F there.

211
00:12:41,740 --> 00:12:43,740
Interesting.

212
00:12:45,740 --> 00:12:48,740
I don't understand this.

213
00:12:48,740 --> 00:12:55,740
Is this compiler not compatible with this tutorial?

214
00:12:58,740 --> 00:13:01,740
What is going on here?

215
00:13:02,740 --> 00:13:06,740
What is the first line here?

216
00:13:06,740 --> 00:13:07,740
Hello, Cob.

217
00:13:07,740 --> 00:13:10,740
Is that from the editor or what?

218
00:13:10,740 --> 00:13:14,740
No, this is the full program, right?

219
00:13:20,740 --> 00:13:22,740
Okay, it doesn't look good.

220
00:13:22,740 --> 00:13:25,740
We wrote test.cbl, right?

221
00:13:26,740 --> 00:13:29,740
We're going to display Chow.

222
00:13:31,740 --> 00:13:33,740
Okay.

223
00:13:39,740 --> 00:13:43,740
Okay, yes, some interesting things here we'll learn.

224
00:13:43,740 --> 00:13:47,740
But it's not good that we can't even go past this step.

225
00:13:47,740 --> 00:13:50,740
What could this be?

226
00:13:56,740 --> 00:13:58,740
Okay.

227
00:13:58,740 --> 00:14:02,740
We can Google this error too.

228
00:14:06,740 --> 00:14:10,740
Okay, it looks like somebody had this same problem.

229
00:14:10,740 --> 00:14:12,740
Go away.

230
00:14:14,740 --> 00:14:17,740
Okay, I have a simple code program that is not compiling.

231
00:14:17,740 --> 00:14:19,740
Can someone tell me what is wrong?

232
00:14:19,740 --> 00:14:21,740
Okay, that's me.

233
00:14:22,740 --> 00:14:25,740
What?

234
00:14:25,740 --> 00:14:28,740
Seriously, I hate webpages.

235
00:14:28,740 --> 00:14:30,740
Go away.

236
00:14:30,740 --> 00:14:32,740
I have a very simple, yes, that's me.

237
00:14:32,740 --> 00:14:36,740
I have purged and installed libcob1, an opencob2no effect.

238
00:14:36,740 --> 00:14:39,740
Error in value index F at column 7.

239
00:14:39,740 --> 00:14:41,740
Okay, that's me.

240
00:14:41,740 --> 00:14:43,740
Identification division.

241
00:14:43,740 --> 00:14:45,740
Let's see if that is what we had.

242
00:14:45,740 --> 00:14:47,740
Yes.

243
00:14:47,740 --> 00:14:49,740
What does that mean by the way?

244
00:14:49,740 --> 00:14:52,740
I should probably find out.

245
00:14:53,740 --> 00:14:56,740
Try this slight mod due to syntax from a limerick site.

246
00:14:56,740 --> 00:14:59,740
Okay, I don't...

247
00:14:59,740 --> 00:15:04,740
That is completely alien to me.

248
00:15:04,740 --> 00:15:07,740
Okay, a limerick site.

249
00:15:07,740 --> 00:15:13,740
Probably something that you know about when you write code.

250
00:15:13,740 --> 00:15:16,740
What is the mod exactly?

251
00:15:19,740 --> 00:15:22,740
Let's...

252
00:15:22,740 --> 00:15:25,740
I'm just going to copy-paste this in.

253
00:15:25,740 --> 00:15:28,740
I'll see what happens.

254
00:15:28,740 --> 00:15:32,740
Oh, it's so good to feel like a complete beginner.

255
00:15:32,740 --> 00:15:35,740
That's the exact same problem.

256
00:15:35,740 --> 00:15:39,740
Let's make sure that this is actually the file that I expected to be.

257
00:15:39,740 --> 00:15:41,740
Okay, yeah.

258
00:15:41,740 --> 00:15:43,740
That is what we pasted.

259
00:15:43,740 --> 00:15:46,740
And apparently the syntax there are here.

260
00:15:46,740 --> 00:15:48,740
Really, really.

261
00:15:48,740 --> 00:15:50,740
Is that it?

262
00:15:50,740 --> 00:15:52,740
Ah, this is silly.

263
00:15:52,740 --> 00:15:55,740
Should I add this too?

264
00:15:55,740 --> 00:15:57,740
Source format free.

265
00:15:57,740 --> 00:15:59,740
Maybe it is.

266
00:15:59,740 --> 00:16:01,740
What do I know?

267
00:16:01,740 --> 00:16:03,740
I mean JavaScript has used strict.

268
00:16:03,740 --> 00:16:06,740
Let's save this, see what happens.

269
00:16:06,740 --> 00:16:09,740
Okay, interesting.

270
00:16:09,740 --> 00:16:11,740
Interesting.

271
00:16:11,740 --> 00:16:13,740
Seem to work.

272
00:16:13,740 --> 00:16:16,740
We have an executable here.

273
00:16:16,740 --> 00:16:20,740
Why not test it and execute the test.

274
00:16:20,740 --> 00:16:23,740
And the first number.

275
00:16:23,740 --> 00:16:28,740
I don't know what the program does, but I'm going to enter the first number.

276
00:16:28,740 --> 00:16:33,740
And everybody knows that the first number is one.

277
00:16:33,740 --> 00:16:36,740
And the second number, that's two.

278
00:16:36,740 --> 00:16:39,740
Result is zero two.

279
00:16:39,740 --> 00:16:41,740
Okay.

280
00:16:41,740 --> 00:16:43,740
Nice.

281
00:16:43,740 --> 00:16:45,740
I know COBOL now.

282
00:16:45,740 --> 00:16:48,740
I wonder what this program does.

283
00:16:48,740 --> 00:16:51,740
Let's see if we can figure this out.

284
00:16:51,740 --> 00:16:57,740
Example program using accept display and multiply to get.

285
00:16:57,740 --> 00:17:01,740
Two single digit numbers from the user and multiply them together.

286
00:17:01,740 --> 00:17:04,740
Well, you sure did do that.

287
00:17:04,740 --> 00:17:07,740
The output was a little bit unexpected.

288
00:17:07,740 --> 00:17:10,740
I didn't expect that leading zero.

289
00:17:10,740 --> 00:17:14,740
But let's try something else.

290
00:17:14,740 --> 00:17:16,740
And the first number.

291
00:17:16,740 --> 00:17:18,740
What should we pick?

292
00:17:18,740 --> 00:17:20,740
Three.

293
00:17:20,740 --> 00:17:22,740
And second number.

294
00:17:22,740 --> 00:17:24,740
Twelve.

295
00:17:24,740 --> 00:17:27,740
We should see 36, right?

296
00:17:27,740 --> 00:17:31,740
Oh, it can only be one digit.

297
00:17:31,740 --> 00:17:33,740
Okay.

298
00:17:33,740 --> 00:17:38,740
So three and nine should be 27, I think.

299
00:17:38,740 --> 00:17:40,740
Yeah.

300
00:17:40,740 --> 00:17:42,740
You go program.

301
00:17:42,740 --> 00:17:44,740
You're a good program.

302
00:17:44,740 --> 00:17:46,740
Okay.

303
00:17:46,740 --> 00:17:49,740
So this was interesting.

304
00:17:49,740 --> 00:17:54,740
That's something probably everybody knows in COBOL world.

305
00:17:54,740 --> 00:17:59,740
That you have to write that in the top otherwise you will get a very confusing error.

306
00:17:59,740 --> 00:18:04,740
It looks like this person did something similar.

307
00:18:04,740 --> 00:18:06,740
Okay.

308
00:18:06,740 --> 00:18:13,740
I will never again, which I stopped doing a long time ago, complain about somebody that doesn't know a specific thing in a language.

309
00:18:13,740 --> 00:18:15,740
But this was interesting.

310
00:18:15,740 --> 00:18:20,740
This feels just like when I was younger and I was just, what is this for?

311
00:18:20,740 --> 00:18:22,740
I don't understand what this thing is for.

312
00:18:22,740 --> 00:18:24,740
Why did they do it like that?

313
00:18:24,740 --> 00:18:26,740
This sucks.

314
00:18:26,740 --> 00:18:28,740
But now I suck.

315
00:18:28,740 --> 00:18:30,740
It feels good.

316
00:18:30,740 --> 00:18:32,740
Okay.

317
00:18:32,740 --> 00:18:37,740
Let's go back to a tutorial and see if we can rewrite, get this to work now.

318
00:18:37,740 --> 00:18:41,740
When we know this magic trick of COBOL world.

319
00:18:41,740 --> 00:18:46,740
So we can do math.

320
00:18:46,740 --> 00:18:48,740
That was pretty impressive.

321
00:18:48,740 --> 00:18:52,740
Now we're gonna see if we can print.

322
00:18:52,740 --> 00:18:53,740
Ciao!

323
00:18:53,740 --> 00:18:54,740
Which is fitting.

324
00:18:54,740 --> 00:18:56,740
Italy is a nice place.

325
00:18:56,740 --> 00:18:58,740
We'd love to go there.

326
00:18:58,740 --> 00:19:00,740
Let's compile that.

327
00:19:00,740 --> 00:19:02,740
It worked.

328
00:19:02,740 --> 00:19:04,740
You know what?

329
00:19:04,740 --> 00:19:09,740
This source format 3 is my favorite thing in COBOL.

330
00:19:09,740 --> 00:19:12,740
But I'm back here in the micro focus tutorial.

331
00:19:12,740 --> 00:19:20,740
And I'm gonna continue with this one because I noticed, oh now I remember what was so funny.

332
00:19:21,740 --> 00:19:26,740
I isn't there supposed to be a history menu item here somewhere.

333
00:19:26,740 --> 00:19:28,740
Or they just remove that for no reason.

334
00:19:28,740 --> 00:19:30,740
Okay this makes so much sense.

335
00:19:30,740 --> 00:19:34,740
Thanks Google for being annoying.

336
00:19:34,740 --> 00:19:37,740
Okay, I guess I can't find that page easily.

337
00:19:37,740 --> 00:19:40,740
So let's just continue with this project here.

338
00:19:40,740 --> 00:19:42,740
So we solved the compiling program.

339
00:19:42,740 --> 00:19:47,740
And here is the reminisced remnants of what I did before.

340
00:19:47,740 --> 00:19:49,740
Let's clear that out so this makes sense.

341
00:19:51,740 --> 00:19:52,740
Okay.

342
00:19:52,740 --> 00:19:53,740
Add a source file.

343
00:19:53,740 --> 00:19:54,740
We can do that.

344
00:19:54,740 --> 00:19:56,740
Because we know how to compile.

345
00:19:56,740 --> 00:19:59,740
So I'm gonna create a source file called helloworld.cbl.

346
00:19:59,740 --> 00:20:02,740
Just keep in line with this tutorial.

347
00:20:02,740 --> 00:20:04,740
Copping that.

348
00:20:04,740 --> 00:20:06,740
Creating a new file here.

349
00:20:06,740 --> 00:20:07,740
Saving it.

350
00:20:07,740 --> 00:20:12,740
Add hello world.cbl.

351
00:20:12,740 --> 00:20:14,740
Plam, pasting this in.

352
00:20:14,740 --> 00:20:17,740
No, that's not what I'm pasting in.

353
00:20:17,740 --> 00:20:21,740
You can delete the skeleton problem that's created when you created a project.

354
00:20:21,740 --> 00:20:23,740
We don't need to do that.

355
00:20:23,740 --> 00:20:26,740
But in the code within the new file.

356
00:20:26,740 --> 00:20:29,740
Navigate to the line that contains procedure division.

357
00:20:29,740 --> 00:20:34,740
So since we have created it not with Witcher Studio.

358
00:20:34,740 --> 00:20:38,740
We didn't get any of the skeleton things.

359
00:20:38,740 --> 00:20:40,740
So I'm gonna copy that from our test file.

360
00:20:40,740 --> 00:20:42,740
Into helloworld.cbl.

361
00:20:42,740 --> 00:20:45,740
And looking at here.

362
00:20:45,740 --> 00:20:48,740
Procedure division.

363
00:20:48,740 --> 00:20:50,740
Oops.

364
00:20:50,740 --> 00:20:52,740
It's here.

365
00:20:52,740 --> 00:20:54,740
So it looks like this.

366
00:20:54,740 --> 00:20:56,740
There's two parts of this source file.

367
00:20:56,740 --> 00:21:00,740
One is this statement.

368
00:21:00,740 --> 00:21:07,740
That just, I guess it tells the compiler what source file is formatted like.

369
00:21:11,740 --> 00:21:14,740
Oh, source format free.

370
00:21:14,740 --> 00:21:20,740
Is that the same as using this?

371
00:21:24,740 --> 00:21:27,740
Let's save this and see if we can compile it.

372
00:21:29,740 --> 00:21:32,740
If you compile this with x, it compiles.

373
00:21:32,740 --> 00:21:35,740
Can we remove that?

374
00:21:35,740 --> 00:21:38,740
I get that error we had in the beginning.

375
00:21:38,740 --> 00:21:40,740
But if I add dash free.

376
00:21:40,740 --> 00:21:43,740
Oh, it makes it work.

377
00:21:44,740 --> 00:21:50,740
So it looks like this statement.

378
00:21:50,740 --> 00:21:54,740
And that one is the same.

379
00:21:54,740 --> 00:21:57,740
Okay, that's good to know.

380
00:22:01,740 --> 00:22:03,740
Okay, good to know.

381
00:22:03,740 --> 00:22:05,740
I wonder why that is.

382
00:22:05,740 --> 00:22:09,740
And what is non free format?

383
00:22:10,740 --> 00:22:13,740
I will never know.

384
00:22:13,740 --> 00:22:15,740
May we find out later.

385
00:22:15,740 --> 00:22:17,740
But let's get in line with this.

386
00:22:17,740 --> 00:22:20,740
We should find the procedure division.

387
00:22:20,740 --> 00:22:27,740
And then we press enter at the line of the file.

388
00:22:27,740 --> 00:22:29,740
Let's do this.

389
00:22:29,740 --> 00:22:31,740
There we go.

390
00:22:31,740 --> 00:22:37,740
This creates a new line in the file and the cursor position right after the gray margin area.

391
00:22:37,740 --> 00:22:40,740
I don't think we have the gray margin area.

392
00:22:40,740 --> 00:22:43,740
And what is the AB area?

393
00:22:43,740 --> 00:22:45,740
I don't know.

394
00:22:48,740 --> 00:22:50,740
But anyway, let's go down to number six here.

395
00:22:50,740 --> 00:22:53,740
Type the code to write some text in the console.

396
00:22:53,740 --> 00:22:56,740
Copping this out.

397
00:22:56,740 --> 00:22:58,740
Boom.

398
00:22:59,740 --> 00:23:01,740
Compile.

399
00:23:02,740 --> 00:23:05,740
And run.

400
00:23:06,740 --> 00:23:08,740
It works. Fantastic.

401
00:23:08,740 --> 00:23:15,740
I'm actually going to combine the compiling and the run stage with the double ampersons there.

402
00:23:15,740 --> 00:23:21,740
That way I can just press up and run it.

403
00:23:21,740 --> 00:23:24,740
And compile it at the same time.

404
00:23:27,740 --> 00:23:29,740
Okay, build application.

405
00:23:29,740 --> 00:23:31,740
We can do that.

406
00:23:31,740 --> 00:23:33,740
Run hello world.

407
00:23:33,740 --> 00:23:35,740
We have done that.

408
00:23:35,740 --> 00:23:37,740
Okay, what's next?

409
00:23:37,740 --> 00:23:41,740
Continue with the next tutorial, configuring the hellocobalworld application.

410
00:23:41,740 --> 00:23:43,740
Okay.

411
00:23:43,740 --> 00:23:45,740
Copybooks.

412
00:23:45,740 --> 00:23:47,740
Okay, let's see what this is.

413
00:23:47,740 --> 00:23:53,740
Tutorial configuring the hellocobalworld application.

414
00:23:53,740 --> 00:23:59,740
Cobal application often consists of cobalt source files and of copybooks.

415
00:23:59,740 --> 00:24:02,740
Files that include code that is copied into other programs.

416
00:24:03,740 --> 00:24:05,740
That's the new concept to me.

417
00:24:05,740 --> 00:24:08,740
Or at least the name copybooks.

418
00:24:08,740 --> 00:24:14,740
Copybooks might not be stored in the same location as the source files.

419
00:24:14,740 --> 00:24:20,740
This tutorial demonstrates how to configure a project to locate any copybooks that are not in the project directory.

420
00:24:20,740 --> 00:24:22,740
This is strange to me.

421
00:24:22,740 --> 00:24:25,740
Why would this be the first thing you want to learn about?

422
00:24:25,740 --> 00:24:27,740
But let's just continue.

423
00:24:28,740 --> 00:24:32,740
You're now going to modify and configure a hellocobalworld application,

424
00:24:32,740 --> 00:24:35,740
which you created in the tutorial hellocobalworld application.

425
00:24:35,740 --> 00:24:37,740
To use a copybook,

426
00:24:37,740 --> 00:24:40,740
which is an external to the project.

427
00:24:40,740 --> 00:24:46,740
It still feels very strange to me that this is the second thing you do when you learn a cobalt.

428
00:24:46,740 --> 00:24:49,740
But who am I to judge?

429
00:24:49,740 --> 00:24:52,740
This is what you're going to do as part of this tutorial.

430
00:24:52,740 --> 00:24:56,740
Create a project in the same solution that only contains a copybook.

431
00:24:56,740 --> 00:25:01,740
Move a part of the code from the hellocobalprogram in the lower.

432
00:25:01,740 --> 00:25:06,740
Replace the original code and hellocobalworld with a copy statement.

433
00:25:06,740 --> 00:25:09,740
The changes you make to your project will cause some build issues.

434
00:25:09,740 --> 00:25:12,740
Modify the project's properties to add a path to the copybook.

435
00:25:12,740 --> 00:25:17,740
In file in order to resolve these build issues.

436
00:25:19,740 --> 00:25:23,740
I wonder what this is if you're not the vicious studio code.

437
00:25:23,740 --> 00:25:26,740
Let's just try to figure it out.

438
00:25:29,740 --> 00:25:33,740
They want to create a console application that probably doesn't apply to us.

439
00:25:39,740 --> 00:25:41,740
Create a copybook.

440
00:25:41,740 --> 00:25:44,740
Copybook, project, solution, add new item.

441
00:25:44,740 --> 00:25:47,740
Click copybook. What is a copybook?

442
00:25:48,740 --> 00:25:53,740
I'm going to create a new file called hello.cpy and click add.

443
00:25:53,740 --> 00:25:57,740
This crazy file in the project opens it in the editor.

444
00:25:59,740 --> 00:26:04,740
You're now going to add some code to the file from the hellocobalworld project.

445
00:26:04,740 --> 00:26:08,740
Copy the following line from the file.

446
00:26:08,740 --> 00:26:12,740
Let's try this.

447
00:26:23,740 --> 00:26:26,740
I think we have one thing missing here.

448
00:26:26,740 --> 00:26:33,740
Hello.cpy probably requires some scaffolding before we can make it work.

449
00:26:34,740 --> 00:26:39,740
By scaffolding, I mean this part, the identification division, the procedure division.

450
00:26:39,740 --> 00:26:44,740
Let's follow it blindly and see what problems we get.

451
00:26:44,740 --> 00:26:48,740
They want us to call it hello.cpy.

452
00:26:48,740 --> 00:26:52,740
I am going to create a new file.

453
00:26:52,740 --> 00:26:55,740
The first copy is a new file, paste it in.

454
00:26:55,740 --> 00:26:58,740
Call it hello.cpy.

455
00:26:58,740 --> 00:27:01,740
That seems to be a cobalt thing.

456
00:27:01,740 --> 00:27:05,740
That's it recognized by Visual Studio.

457
00:27:07,740 --> 00:27:10,740
I just have this literally in that file.

458
00:27:10,740 --> 00:27:14,740
And then I'm supposed to...

459
00:27:14,740 --> 00:27:17,740
What was it?

460
00:27:17,740 --> 00:27:20,740
Run this, copy hello.cpy.

461
00:27:20,740 --> 00:27:23,740
To here.

462
00:27:23,740 --> 00:27:27,740
Is that supposed to be like that?

463
00:27:27,740 --> 00:27:29,740
Let's see what happens.

464
00:27:29,740 --> 00:27:34,740
I did that, noted the line for the copy statement in noworld.cbl.

465
00:27:34,740 --> 00:27:38,740
It's now underlined with the red wave line in the editor.

466
00:27:38,740 --> 00:27:42,740
No, it's not.

467
00:27:42,740 --> 00:27:47,740
But that's just because we're not using Visual Studio.

468
00:27:47,740 --> 00:28:02,740
Okay, this looks boring. This is not programming. This is product setup.

469
00:28:02,740 --> 00:28:06,740
Interesting tutorial. I want to compile this to see what happens.

470
00:28:06,740 --> 00:28:09,740
What? No.

471
00:28:09,740 --> 00:28:12,740
Did that actually work?

472
00:28:12,740 --> 00:28:14,740
Looks like it did, right?

473
00:28:14,740 --> 00:28:19,740
Let's just write something else to make sure that we're actually running what we think we're running.

474
00:28:19,740 --> 00:28:21,740
Here we are.

475
00:28:21,740 --> 00:28:26,740
So I guess that whole part was useless for us.

476
00:28:26,740 --> 00:28:32,740
And this looks like an import statement to me.

477
00:28:32,740 --> 00:28:37,740
Looks like a very flaky way to import something.

478
00:28:37,740 --> 00:28:41,740
But whatever.

479
00:28:42,740 --> 00:28:45,740
Okay, but so we know what copybooks are.

480
00:28:45,740 --> 00:28:48,740
They are pretty boring and shit.

481
00:28:48,740 --> 00:28:53,740
So let's continue debugging the helloCovol world application.

482
00:28:53,740 --> 00:28:56,740
Come on.

483
00:28:56,740 --> 00:28:59,740
This is not fun.

484
00:28:59,740 --> 00:29:02,740
I want to create a function or something.

485
00:29:02,740 --> 00:29:05,740
Maybe that doesn't even exist in Covol. What do I know?

486
00:29:05,740 --> 00:29:10,740
So add the following code on a new line immediately at the line for code.

487
00:29:10,740 --> 00:29:15,740
I don't want to do that. I don't want to debug right now.

488
00:29:15,740 --> 00:29:18,740
Creating a native Covol application. Let's start something else.

489
00:29:18,740 --> 00:29:24,740
Running unitest. What the hell is this tutorial?

490
00:29:24,740 --> 00:29:29,740
Here's all the boring things that doesn't make the program do what you want to do that you need to learn first.

491
00:29:29,740 --> 00:29:34,740
I understand why I hate taking programming classes in school because they were exactly like this.

492
00:29:34,740 --> 00:29:39,740
First we need to understand everything perfectly before the program does anything.

493
00:29:39,740 --> 00:29:44,740
And I was more like, I'd rather do something first.

494
00:29:44,740 --> 00:29:49,740
What else could you do here?

495
00:29:53,740 --> 00:29:57,740
Delta file editor. I want to do something fun.

496
00:29:57,740 --> 00:30:01,740
What is a native Covol application then?

497
00:30:01,740 --> 00:30:06,740
Now this website starts to work. No, it works again.

498
00:30:07,740 --> 00:30:10,740
Visual Covol.

499
00:30:10,740 --> 00:30:13,740
We're back in from start. I'm going to have to find something more fun.

500
00:30:13,740 --> 00:30:17,740
Microfokus. What's focus? Two micro for me.

501
00:30:17,740 --> 00:30:19,740
Let's dump this.

502
00:30:19,740 --> 00:30:23,740
We know how to write a Covol program, so let's start something else.

503
00:30:23,740 --> 00:30:28,740
Covol tutorial.

504
00:30:28,740 --> 00:30:32,740
Add tutorials point.

505
00:30:32,740 --> 00:30:35,740
React all the cookies.

506
00:30:35,740 --> 00:30:39,740
Overview. What can we get there?

507
00:30:43,740 --> 00:30:46,740
History and evolution of Covol.

508
00:30:46,740 --> 00:30:49,740
Environment setup.

509
00:30:49,740 --> 00:30:53,740
Not really interested in that right now.

510
00:30:56,740 --> 00:31:00,740
I know how to compile it.

511
00:31:00,740 --> 00:31:04,740
What else can we do? Program structure.

512
00:31:04,740 --> 00:31:09,740
Program, division, sections, paragraph, sentence, statements, and characters.

513
00:31:09,740 --> 00:31:12,740
Nice.

514
00:31:15,740 --> 00:31:18,740
Interesting.

515
00:31:23,740 --> 00:31:28,740
This part here looks a little bit like assembler to me.

516
00:31:28,740 --> 00:31:33,740
Specially with this move10 to WSID.

517
00:31:34,740 --> 00:31:37,740
Okej.

518
00:31:39,740 --> 00:31:45,740
You can tell that this tutorial is written by somebody that hates the world.

519
00:31:51,740 --> 00:31:55,740
Is this the code?

520
00:31:55,740 --> 00:32:02,740
Environment division, input, output, section, file control, select, file, and the organization is sequential.

521
00:32:03,740 --> 00:32:06,740
This is interesting.

522
00:32:06,740 --> 00:32:09,740
Am I going to write a program like this today?

523
00:32:09,740 --> 00:32:11,740
We'll see.

524
00:32:11,740 --> 00:32:14,740
Let me just do something funny now.

525
00:32:14,740 --> 00:32:17,740
Damn you tutorial, you suck.

526
00:32:17,740 --> 00:32:20,740
Basic syntax.

527
00:32:20,740 --> 00:32:25,740
Who is going to remember this when you start learning something?

528
00:32:25,740 --> 00:32:31,740
This is such a strange way to teach something.

529
00:32:32,740 --> 00:32:36,740
Okej, nu vet jag vad det är.

530
00:32:39,740 --> 00:32:45,740
Det här är att kolla en film och först kolla på alla kastor för att veta vilka personer existerar i den.

531
00:32:45,740 --> 00:32:49,740
Det är inte hur vi presentar information.

532
00:32:56,740 --> 00:32:59,740
Det här är inte en tutorial.

533
00:32:59,740 --> 00:33:03,740
Det här är en teknisk data sheet.

534
00:33:03,740 --> 00:33:07,740
Okej, let's go back, I give up.

535
00:33:15,740 --> 00:33:18,740
Vad kan vi se?

536
00:33:20,740 --> 00:33:23,740
Kanske kan vi se Cobaltborn.

537
00:33:23,740 --> 00:33:25,740
Låt oss se på den här.

538
00:33:25,740 --> 00:33:28,740
Vill du läsa hur man ska byta ditt första webbpagel?

539
00:33:28,740 --> 00:33:31,740
Nej, jag vill läsa Cobalt.

540
00:33:31,740 --> 00:33:34,740
Jag vill bara tacka till en av våra sponsor.

541
00:33:34,740 --> 00:33:36,740
Tack, bror.

542
00:33:36,740 --> 00:33:39,740
Du ska gå och checka dem ut, linken är i beskrivningen.

543
00:33:39,740 --> 00:33:43,740
De är en kodingbubkamp och de kan läsa dig webbdevelopment i Iowa i veckan.

544
00:33:43,740 --> 00:33:46,740
Jag har en fråga om hur man ska läsa Cobaltborn.

545
00:33:46,740 --> 00:33:51,740
Jag var på en artikel som talade om USA-banknaderna i att använda Cobaltborn.

546
00:33:52,740 --> 00:33:54,740
Jag har träffat nya människor för att läsa Cobaltborn

547
00:33:54,740 --> 00:33:57,740
och hålla de äldre legacysystemen.

548
00:33:57,740 --> 00:34:02,740
Jag frågar om Cobaltborn är en bra nyheter

549
00:34:02,740 --> 00:34:05,740
och om man ska läsa det.

550
00:34:05,740 --> 00:34:08,740
Jag tänkte att jag skulle ge min opinion om det.

551
00:34:08,740 --> 00:34:10,740
Jag har aldrig hört om det.

552
00:34:10,740 --> 00:34:13,740
Det är lite intressant.

553
00:34:13,740 --> 00:34:15,740
Men du har två saker som jag vill säga

554
00:34:15,740 --> 00:34:18,740
som kommer att gå mot dig.

555
00:34:18,740 --> 00:34:20,740
Det är svårt.

556
00:34:24,740 --> 00:34:26,740
Vi ska se vad det har att offer.

557
00:34:38,740 --> 00:34:40,740
Det mest funnande i så länge

558
00:34:40,740 --> 00:34:42,740
var det program som kalkulat.

559
00:34:42,740 --> 00:34:44,740
Det var en multiplikation.

560
00:34:45,740 --> 00:34:47,740
Jag har en tietäädivision

561
00:34:48,740 --> 00:34:50,740
med en börs långa del.

562
00:34:53,740 --> 00:34:55,740
Vi ska se om det funnande.

563
00:34:59,740 --> 00:35:05,740
J rust Championsð

564
00:35:05,740 --> 00:35:08,740
Du har en psycho三a

565
00:35:08,740 --> 00:35:12,740
Ska vi se vad som händer om vi förberederar data-divisionen?

566
00:35:12,740 --> 00:35:14,740
Ska programmen krascha?

567
00:35:14,740 --> 00:35:16,740
Ja.

568
00:35:18,740 --> 00:35:20,740
Jag tror att data-divisionen är nivån.

569
00:35:20,740 --> 00:35:23,740
Jag tror att det här är vad de kallar en section.

570
00:35:23,740 --> 00:35:25,740
Eller vad var det?

571
00:35:26,740 --> 00:35:29,740
Vill vi ha en övergivning sådär?

572
00:35:31,740 --> 00:35:35,740
Låt oss se om det var en section eller en paragraf eller något.

573
00:35:35,740 --> 00:35:38,740
Det här var en division och det här var en section.

574
00:35:38,740 --> 00:35:41,740
Så det här är egentligen en klipp eller en section.

575
00:35:41,740 --> 00:35:43,740
Eller vad vill du säga?

576
00:35:44,740 --> 00:35:46,740
En header för det här.

577
00:35:47,740 --> 00:35:49,740
Jag tror att det betyder att det här...

578
00:35:50,740 --> 00:35:52,740
Jag vet att det inte verkar, men...

579
00:35:53,740 --> 00:35:55,740
Okej, det sker en sak.

580
00:35:55,740 --> 00:35:57,740
Så det verkar en storlekare.

581
00:35:57,740 --> 00:35:59,740
Det är egentligen att reservera människan.

582
00:36:00,740 --> 00:36:02,740
Det sker en sak.

583
00:36:02,740 --> 00:36:06,740
0-1, num 1, pick 9.

584
00:36:06,740 --> 00:36:12,740
Jag tror att det här är hur jag reserverar människan.

585
00:36:14,740 --> 00:36:16,740
Låt oss ta fram programmet.

586
00:36:17,740 --> 00:36:19,740
För att...

587
00:36:20,740 --> 00:36:22,740
För att...

588
00:36:22,740 --> 00:36:25,740
För att ta fram tre nummer samtidigt.

589
00:36:26,740 --> 00:36:28,740
Låt oss göra en lördekollegang här.

590
00:36:28,740 --> 00:36:31,740
Kopie den här linjen, namn num 3.

591
00:36:31,740 --> 00:36:33,740
Och den första nummeren, 1-1.

592
00:36:33,740 --> 00:36:35,740
Vi har ingen avgång!

593
00:36:35,740 --> 00:36:37,740
Okej.

594
00:36:41,740 --> 00:36:44,740
Dritt nummer, num 3.

595
00:36:44,740 --> 00:36:46,740
Multi-by, by.

596
00:36:46,740 --> 00:36:50,740
By, num 3, resulta.

597
00:36:50,740 --> 00:36:52,740
Resulta är resulta.

598
00:36:52,740 --> 00:36:54,740
Låt oss se om det här verkar.

599
00:36:56,740 --> 00:36:58,740
Syntexerat, undanvisade by.

600
00:36:59,740 --> 00:37:01,740
Okej, jag kan inte göra det.

601
00:37:01,740 --> 00:37:05,740
Jag tror att det betyder att multipla kan bara multipla två nummer.

602
00:37:05,740 --> 00:37:08,740
Låt oss se vad som händer om vi googlar.

603
00:37:09,740 --> 00:37:11,740
Kobol.

604
00:37:15,740 --> 00:37:18,740
Kobol, multipla.

605
00:37:22,740 --> 00:37:24,740
Wow, dessa webbplatser.

606
00:37:25,740 --> 00:37:27,740
Låt oss se.

607
00:37:28,740 --> 00:37:30,740
Multi-by, multipla nummer.

608
00:37:30,740 --> 00:37:32,740
Format 1.

609
00:37:32,740 --> 00:37:34,740
Literal 1, data item.

610
00:37:34,740 --> 00:37:36,740
By, data item 2.

611
00:37:39,740 --> 00:37:41,740
Okej.

612
00:37:41,740 --> 00:37:44,740
Kan vi multipla tre saker...

613
00:37:45,740 --> 00:37:48,740
...utan att ha en extra...

614
00:37:48,740 --> 00:37:50,740
...inbetween variable?

615
00:37:51,740 --> 00:37:53,740
Låt oss se om vi kan...

616
00:37:55,740 --> 00:37:57,740
Jag ska experimentera lite här.

617
00:37:58,740 --> 00:38:00,740
Låt oss ha resulta.

618
00:38:03,740 --> 00:38:05,740
Låt oss kolla det här...

619
00:38:05,740 --> 00:38:07,740
...inbetween.

620
00:38:11,740 --> 00:38:13,740
Och utan att ge dig resulta här,

621
00:38:13,740 --> 00:38:15,740
vi ger till inbetween.

622
00:38:15,740 --> 00:38:17,740
Man kan ta ut det här.

623
00:38:17,740 --> 00:38:19,740
Man kan multipla...

624
00:38:19,740 --> 00:38:21,740
...num3

625
00:38:21,740 --> 00:38:23,740
...by, inbetween.

626
00:38:25,740 --> 00:38:27,740
Och ge det två resulta.

627
00:38:28,740 --> 00:38:30,740
Kan vi kompilera det här?

628
00:38:30,740 --> 00:38:31,740
Okej.

629
00:38:31,740 --> 00:38:33,740
Det kompileras åtminstone.

630
00:38:33,740 --> 00:38:35,740
Så vi multiplar två...

631
00:38:35,740 --> 00:38:36,740
...byr tre...

632
00:38:36,740 --> 00:38:38,740
...byr fyra.

633
00:38:38,740 --> 00:38:39,740
Ja.

634
00:38:39,740 --> 00:38:41,740
Det jobbade.

635
00:38:41,740 --> 00:38:43,740
Men det här var lite annorlunda.

636
00:38:43,740 --> 00:38:45,740
Vad händer?

637
00:38:45,740 --> 00:38:48,740
Kan vi multipla in till nummer 1 här?

638
00:38:50,740 --> 00:38:52,740
Jag vet inte om det verkar.

639
00:38:53,740 --> 00:38:55,740
Två, tre, fyra.

640
00:38:55,740 --> 00:38:57,740
Det har fungerat.

641
00:38:57,740 --> 00:39:00,740
Det betyder att jag har överrott en av den här.

642
00:39:03,740 --> 00:39:05,740
Det här är intressant.

643
00:39:05,740 --> 00:39:07,740
Jag ska rejala programmet...

644
00:39:07,740 --> 00:39:09,740
...och se om jag kan åka ut...

645
00:39:09,740 --> 00:39:11,740
...för att bara ha resultat...

646
00:39:11,740 --> 00:39:13,740
...och input.

647
00:39:18,740 --> 00:39:21,740
Och idé är att jag alltid multiplar...

648
00:39:21,740 --> 00:39:23,740
...det nästa input...

649
00:39:23,740 --> 00:39:26,740
...med resultat och ta den till resultat.

650
00:39:26,740 --> 00:39:28,740
Så...

651
00:39:28,740 --> 00:39:29,740
Först här...

652
00:39:29,740 --> 00:39:31,740
...jag kommer att läsa input.

653
00:39:31,740 --> 00:39:33,740
Det är kanske en reserve ord...

654
00:39:33,740 --> 00:39:35,740
...för att jag frågar det...

655
00:39:35,740 --> 00:39:37,740
...för att det inte är vit.

656
00:39:37,740 --> 00:39:38,740
Så...

657
00:39:38,740 --> 00:39:40,740
Okej, jag kan inte läsa input.

658
00:39:40,740 --> 00:39:42,740
Så jag kommer att läsa...

659
00:39:42,740 --> 00:39:44,740
...nummer.

660
00:39:44,740 --> 00:39:46,740
Ah, num, då.

661
00:39:47,740 --> 00:39:49,740
Num, num, num.

662
00:39:49,740 --> 00:39:51,740
Så jag alltid läser input...

663
00:39:51,740 --> 00:39:53,740
...till den nummervarivalen.

664
00:39:54,740 --> 00:39:56,740
Och direkt efter...

665
00:39:56,740 --> 00:39:58,740
...jag...

666
00:39:58,740 --> 00:40:00,740
...multiplar det med resultat...

667
00:40:01,740 --> 00:40:03,740
...och ta den till resultat.

668
00:40:06,740 --> 00:40:07,740
Och...

669
00:40:07,740 --> 00:40:08,740
Där går vi.

670
00:40:08,740 --> 00:40:09,740
Där går vi.

671
00:40:09,740 --> 00:40:11,740
Och då kan vi ta resultat.

672
00:40:11,740 --> 00:40:13,740
Se hur det fungerar.

673
00:40:14,740 --> 00:40:16,740
Två, tre, fyra.

674
00:40:16,740 --> 00:40:18,740
Ha, nej.

675
00:40:19,740 --> 00:40:21,740
Jag frågar, varför?

676
00:40:23,740 --> 00:40:24,740
Ah...

677
00:40:25,740 --> 00:40:27,740
...att ta nummervarivalen...

678
00:40:27,740 --> 00:40:29,740
...och ta resultat.

679
00:40:29,740 --> 00:40:31,740
Det kanske är...

680
00:40:31,740 --> 00:40:33,740
...att jag tror att vi...

681
00:40:33,740 --> 00:40:35,740
...hade ett switch tidigare.

682
00:40:35,740 --> 00:40:37,740
Jag frågar om det har en effekt.

683
00:40:41,740 --> 00:40:42,740
Vi ser.

684
00:40:43,740 --> 00:40:45,740
Två, tre, fyra.

685
00:40:45,740 --> 00:40:46,740
Nej.

686
00:40:46,740 --> 00:40:48,740
Okej, det gör lite mer mer.

687
00:40:48,740 --> 00:40:51,740
Så vad har det gjort tidigare när vi hade alla dessa nummer?

688
00:40:51,740 --> 00:40:54,740
Jag trodde att det här var en ekonomi av vad vi gjorde...

689
00:40:54,740 --> 00:40:56,740
...i början.

690
00:40:58,740 --> 00:41:00,740
Kanske gjorde vi faktiskt överrättat här...

691
00:41:00,740 --> 00:41:03,740
...men det har hänt med samma effekt...

692
00:41:05,740 --> 00:41:08,740
...för nummer ett var två.

693
00:41:08,740 --> 00:41:10,740
Jag är inte säker.

694
00:41:14,740 --> 00:41:16,740
Så här nummer ett blir två.

695
00:41:16,740 --> 00:41:19,740
Nummer två blir tre.

696
00:41:19,740 --> 00:41:21,740
Och vi tar det.

697
00:41:21,740 --> 00:41:23,740
Det här blir sikt här.

698
00:41:24,740 --> 00:41:26,740
Och vi gör det här.

699
00:41:27,740 --> 00:41:29,740
Jag är inte säker vad det här displayet är...

700
00:41:29,740 --> 00:41:30,740
...att exakt exakt.

701
00:41:30,740 --> 00:41:33,740
Det kanske inte är möjligt att göra vad jag gjorde där.

702
00:41:39,740 --> 00:41:40,740
Okej.

703
00:41:41,740 --> 00:41:43,740
Låt oss inte försöka det igen...

704
00:41:43,740 --> 00:41:44,740
...eller ska vi?

705
00:41:44,740 --> 00:41:46,740
Det är ganska skönt.

706
00:41:47,740 --> 00:41:49,740
Låt oss ta det ibaka.

707
00:41:50,740 --> 00:41:52,740
Jag är ibaka bara påbörjande i länge nu...

708
00:41:52,740 --> 00:41:54,740
...och försöker försöka få ut vad det är som det är.

709
00:41:56,740 --> 00:41:57,740
Så det verkar.

710
00:41:57,740 --> 00:41:58,740
Två, tre, fyra.

711
00:41:58,740 --> 00:41:59,740
Det är 24.

712
00:42:00,740 --> 00:42:03,740
Och kan jag gå ut med att inte använda nummer tre?

713
00:42:03,740 --> 00:42:04,740
Låt oss se.

714
00:42:04,740 --> 00:42:05,740
Låt oss använda nummer en här igen.

715
00:42:05,740 --> 00:42:07,740
Nej, vi kan definitivt göra det.

716
00:42:07,740 --> 00:42:09,740
Men låt oss använda den här.

717
00:42:11,740 --> 00:42:15,740
Och sen kan vi reusesa nummer en.

718
00:42:16,740 --> 00:42:17,740
Nummer en.

719
00:42:23,740 --> 00:42:25,740
Nej, vi har råd det till där.

720
00:42:27,740 --> 00:42:30,740
Så jag vill skriva det till resultatet där.

721
00:42:32,740 --> 00:42:35,740
Okej, nu kommer jag inte att skriva det.

722
00:42:35,740 --> 00:42:38,740
Nu kommer jag inte att skriva en ideell kod.

723
00:42:38,740 --> 00:42:41,740
Jag är bara att följa runt lite.

724
00:42:44,740 --> 00:42:47,740
Jag har lost track av vad jag tänkte där.

725
00:42:48,740 --> 00:42:50,740
Men jag ville gå ner.

726
00:42:50,740 --> 00:42:51,740
Jag vill bara ha...

727
00:42:51,740 --> 00:42:54,740
...så jag tar en input och multipliserar den med resultatet.

728
00:42:54,740 --> 00:42:55,740
Jag tar en input igen.

729
00:42:59,740 --> 00:43:01,740
Resultatet börjar med 0.

730
00:43:01,740 --> 00:43:04,740
Så jag kan inte, obviously, multipla den där.

731
00:43:04,740 --> 00:43:07,740
I the beginning I need at least two numbers to do that.

732
00:43:09,740 --> 00:43:12,740
Så let's see if we can get away with two and still have three.

733
00:43:14,740 --> 00:43:15,740
Så that makes sense.

734
00:43:15,740 --> 00:43:17,740
So we have to have at least two numbers.

735
00:43:18,740 --> 00:43:20,740
There are none zero.

736
00:43:21,740 --> 00:43:23,740
Before we multiply.

737
00:43:23,740 --> 00:43:26,740
And if we multiply with one of them there is zero.

738
00:43:26,740 --> 00:43:28,740
It will always be zero, obviously.

739
00:43:29,740 --> 00:43:32,740
So let's see if we multiply this into result.

740
00:43:32,740 --> 00:43:39,740
Not wait a minute.

741
00:43:41,740 --> 00:43:45,740
I feel like we should be able to do this in a smart clever way.

742
00:43:49,740 --> 00:43:52,740
If the first one we put into the result.

743
00:43:56,740 --> 00:43:59,740
Or what is it called in multiplication?

744
00:43:59,740 --> 00:44:00,740
The product.

745
00:44:03,740 --> 00:44:16,740
And let's look up with what are parts of multiplication called.

746
00:44:21,740 --> 00:44:23,740
There are the multipliers.

747
00:44:23,740 --> 00:44:24,740
Recall that.

748
00:44:24,740 --> 00:44:26,740
They are called factors.

749
00:44:27,740 --> 00:44:30,740
So I'm going to have a factor.

750
00:44:30,740 --> 00:44:33,740
And I'm going to have a product.

751
00:44:35,740 --> 00:44:38,740
And the product is actually this one.

752
00:44:40,740 --> 00:44:44,740
And then on the first input we input it into the product.

753
00:44:44,740 --> 00:44:48,740
Because one multiplied by one is always one.

754
00:44:48,740 --> 00:44:51,740
Or one multiplied by itself.

755
00:44:51,740 --> 00:44:54,740
The first number is always the product.

756
00:44:54,740 --> 00:44:56,740
If I only have one number.

757
00:44:56,740 --> 00:44:59,740
Then the second number we put in the factor.

758
00:44:59,740 --> 00:45:04,740
And then we multiply the factor with the product.

759
00:45:04,740 --> 00:45:06,740
Giving it a new product.

760
00:45:06,740 --> 00:45:12,740
Then we overwrite the factor and we do this thing again.

761
00:45:13,740 --> 00:45:16,740
Now I think we can run a program.

762
00:45:16,740 --> 00:45:18,740
At least that's what I'm hoping for.

763
00:45:18,740 --> 00:45:20,740
Result undefined.

764
00:45:20,740 --> 00:45:22,740
We need to print the product.

765
00:45:25,740 --> 00:45:27,740
2, 3, 4.

766
00:45:27,740 --> 00:45:28,740
Yes!

767
00:45:28,740 --> 00:45:29,740
That worked.

768
00:45:30,740 --> 00:45:33,740
So now I understand this a little bit better.

769
00:45:33,740 --> 00:45:36,740
But I would like to have a loop here.

770
00:45:36,740 --> 00:45:40,740
So that we can enter how many numbers we should multiply.

771
00:45:40,740 --> 00:45:44,740
Let's see if there is such a thing as a loop in cobalt.

772
00:45:47,740 --> 00:45:49,740
Loop statements.

773
00:45:50,740 --> 00:45:51,740
Nice.

774
00:45:51,740 --> 00:45:53,740
Perform through.

775
00:45:53,740 --> 00:45:57,740
Perform through is used to execute a series of paragraphs

776
00:45:57,740 --> 00:46:01,740
by giving the first and last paragraph names in the sequence.

777
00:46:03,740 --> 00:46:04,740
Okay.

778
00:46:04,740 --> 00:46:09,740
After executing the last paragraph the control is returned back.

779
00:46:09,740 --> 00:46:10,740
Okay.

780
00:46:10,740 --> 00:46:12,740
Inline perform.

781
00:46:12,740 --> 00:46:18,740
Statements inside the perform will be executed till end of the paragraph.

782
00:46:19,740 --> 00:46:21,740
And perform is reached.

783
00:46:21,740 --> 00:46:22,740
Syntax.

784
00:46:22,740 --> 00:46:26,740
The following syntax is a syntax of inline perform.

785
00:46:28,740 --> 00:46:29,740
Okay.

786
00:46:30,740 --> 00:46:32,740
Out of line perform.

787
00:46:32,740 --> 00:46:34,740
Here a statement is executed in one paragraph.

788
00:46:34,740 --> 00:46:38,740
And then the control is transferred to other paragraph or section.

789
00:46:38,740 --> 00:46:39,740
Okay.

790
00:46:39,740 --> 00:46:43,740
Perform paragraph one through paragraph two.

791
00:46:43,740 --> 00:46:45,740
Okay, interesting.

792
00:46:45,740 --> 00:46:52,740
They have a really interesting way of giving away execution context in this language.

793
00:46:52,740 --> 00:46:53,740
Okay.

794
00:46:53,740 --> 00:46:55,740
Perform display and perform.

795
00:46:55,740 --> 00:46:56,740
Okay.

796
00:46:56,740 --> 00:46:59,740
This looks a little bit like what we want to do.

797
00:46:59,740 --> 00:47:02,740
I guess these are paragraphs.

798
00:47:03,740 --> 00:47:04,740
No.

799
00:47:04,740 --> 00:47:13,740
Hmm.

800
00:47:13,740 --> 00:47:16,740
A para is the first paragraph, I guess.

801
00:47:16,740 --> 00:47:19,740
Perform display in a para.

802
00:47:19,740 --> 00:47:21,740
And perform.

803
00:47:21,740 --> 00:47:24,740
Perform see para through e para.

804
00:47:24,740 --> 00:47:28,740
I guess it just runs this, this and that.

805
00:47:28,740 --> 00:47:29,740
Okay.

806
00:47:29,740 --> 00:47:31,740
This is interesting.

807
00:47:31,740 --> 00:47:33,740
Hmm.

808
00:47:35,740 --> 00:47:36,740
Hmm.

809
00:47:36,740 --> 00:47:37,740
Okay.

810
00:47:37,740 --> 00:47:40,740
This looks more like something we should want to be doing.

811
00:47:40,740 --> 00:47:45,740
In perform until a paragraph is executed until a given condition becomes true.

812
00:47:45,740 --> 00:47:48,740
Sounds like a while loop.

813
00:47:48,740 --> 00:47:50,740
Or a for loop.

814
00:47:50,740 --> 00:47:59,740
With test before is a default condition and it indicates that condition is checked before the execution of statements in a paragraph.

815
00:48:01,740 --> 00:48:03,740
Okay.

816
00:48:04,740 --> 00:48:08,740
I think that I want to have two variables here.

817
00:48:08,740 --> 00:48:12,740
One call step and one call steps.

818
00:48:12,740 --> 00:48:15,740
I'm writing zero one here without knowing why.

819
00:48:15,740 --> 00:48:20,740
But the idea is that I want to have a number count up until another number.

820
00:48:20,740 --> 00:48:25,740
So imagine a for loop where you have i and length.

821
00:48:25,740 --> 00:48:33,740
So step is going to be this one, peak nine.

822
00:48:33,740 --> 00:48:36,740
I think that is a single digit number.

823
00:48:36,740 --> 00:48:39,740
And the value of that.

824
00:48:42,740 --> 00:48:46,740
I don't know, but I want to set it to zero and increment it.

825
00:48:46,740 --> 00:48:51,740
So zero one and is step last.

826
00:48:51,740 --> 00:48:58,740
Let's call it step current to be even more clear what I want to be doing.

827
00:48:58,740 --> 00:49:04,740
Pick nine value zeros.

828
00:49:04,740 --> 00:49:11,740
But I want this step last to be contained nine.

829
00:49:15,740 --> 00:49:22,740
I guess before we continue too long here we should probably see if we can put a number in step current.

830
00:49:22,740 --> 00:49:25,740
Or step last.

831
00:49:25,740 --> 00:49:32,740
Oh, I could ask how many numbers I want to multiply.

832
00:49:32,740 --> 00:49:45,740
So let's add a statement here and say how many numbers should be.

833
00:49:45,740 --> 00:49:50,740
Let's just ask how many numbers that's easier.

834
00:49:50,740 --> 00:49:56,740
And we accept that in the step last.

835
00:49:56,740 --> 00:50:05,740
Then let's just write out display.

836
00:50:05,740 --> 00:50:11,740
We will multiply.

837
00:50:11,740 --> 00:50:16,740
Can I write that numbers.

838
00:50:16,740 --> 00:50:20,740
And the step last will be here.

839
00:50:20,740 --> 00:50:24,740
Is that how you concatenate things.

840
00:50:24,740 --> 00:50:27,740
Oh, three.

841
00:50:27,740 --> 00:50:31,740
Oh, we will multiply four numbers that works. Nice.

842
00:50:31,740 --> 00:50:36,740
Okay, and we know the rest of the program works, but now how to use the for loop.

843
00:50:36,740 --> 00:50:43,740
I think let's output also a step.

844
00:50:43,740 --> 00:50:47,740
So I'm going to say.

845
00:50:47,740 --> 00:50:50,740
Enter.

846
00:50:50,740 --> 00:50:56,740
And then the step current.

847
00:50:56,740 --> 00:50:58,740
Enter.

848
00:50:58,740 --> 00:51:01,740
Number.

849
00:51:01,740 --> 00:51:03,740
Step current.

850
00:51:03,740 --> 00:51:08,740
And then slash off step last.

851
00:51:09,740 --> 00:51:12,740
One digit.

852
00:51:12,740 --> 00:51:16,740
With no advancing.

853
00:51:16,740 --> 00:51:24,740
And see what happens.

854
00:51:24,740 --> 00:51:26,740
Okay, good.

855
00:51:26,740 --> 00:51:30,740
We are at step one there, but we call it zero because it's zero based.

856
00:51:30,740 --> 00:51:32,740
Okay, interesting.

857
00:51:32,740 --> 00:51:37,740
We had an extra line here we don't need.

858
00:51:37,740 --> 00:51:40,740
And I guess can we concatenate this immediately.

859
00:51:40,740 --> 00:51:43,740
Can we add a one to the step current here.

860
00:51:43,740 --> 00:51:45,740
Like this in COBOL.

861
00:51:45,740 --> 00:51:47,740
Let's try it out.

862
00:51:47,740 --> 00:51:52,740
No, I cannot.

863
00:51:52,740 --> 00:51:55,740
So let's see.

864
00:51:55,740 --> 00:51:57,740
What should I do here?

865
00:51:57,740 --> 00:51:59,740
Should I?

866
00:51:59,740 --> 00:52:06,740
The cheap way of doing that is to just start the step at one.

867
00:52:07,740 --> 00:52:14,740
Okay, let's see how I assign a variable in COBOL.

868
00:52:14,740 --> 00:52:23,740
Assign variable in COBOL.

869
00:52:23,740 --> 00:52:28,740
Okay, this is going to be interesting.

870
00:52:29,740 --> 00:52:37,740
Okay, this is not just going to be too long declaring data.

871
00:52:37,740 --> 00:52:42,740
Actually, let's see, war loop in COBOL.

872
00:52:42,740 --> 00:52:46,740
How what we will learn from this loop statement.

873
00:52:46,740 --> 00:52:48,740
Okay.

874
00:52:48,740 --> 00:52:50,740
Perform times looks interesting too.

875
00:52:50,740 --> 00:52:55,740
Let's look at perform times.

876
00:52:55,740 --> 00:53:00,740
I guess if you write this perform a paragraph five times.

877
00:53:00,740 --> 00:53:07,740
If we can replace this with our step last.

878
00:53:07,740 --> 00:53:09,740
Then we should be able to run this.

879
00:53:09,740 --> 00:53:18,740
I guess we need to first paragraph the multiplication part.

880
00:53:18,740 --> 00:53:21,740
So let's create a paragraph here.

881
00:53:21,740 --> 00:53:24,740
Is that supposed to be in the procedure division?

882
00:53:25,740 --> 00:53:28,740
Will it always start with the first one?

883
00:53:28,740 --> 00:53:32,740
Actually, let's run add a paragraph here.

884
00:53:32,740 --> 00:53:34,740
See what happens.

885
00:53:38,740 --> 00:53:40,740
What happens if we just do this?

886
00:53:40,740 --> 00:53:43,740
Will that mean that program just stops immediately?

887
00:53:45,740 --> 00:53:47,740
Yes.

888
00:53:47,740 --> 00:53:49,740
So I guess it always starts.

889
00:53:49,740 --> 00:53:52,740
This looks probably like a go to statement.

890
00:53:52,740 --> 00:53:54,740
Might that be so.

891
00:54:00,740 --> 00:54:02,740
I think it is.

892
00:54:02,740 --> 00:54:04,740
So...

893
00:54:08,740 --> 00:54:15,740
So I was thinking if I put this in a paragraph.

894
00:54:15,740 --> 00:54:23,740
As I say it is set up para.

895
00:54:23,740 --> 00:54:26,740
And it displays how many numbers.

896
00:54:26,740 --> 00:54:29,740
And it accepts the step last.

897
00:54:29,740 --> 00:54:33,740
And it says how many numbers we are going to accept.

898
00:54:33,740 --> 00:54:37,740
Could it end a paragraph two somehow.

899
00:54:37,740 --> 00:54:41,740
Stop run stops the entire program.

900
00:54:45,740 --> 00:54:55,740
So I want to look for something that goes to set up para.

901
00:54:55,740 --> 00:54:57,740
Immediately here.

902
00:54:57,740 --> 00:54:59,740
Not sure this is a good way to write it.

903
00:54:59,740 --> 00:55:02,740
But my thinking is I want to have the entry point in the top.

904
00:55:02,740 --> 00:55:05,740
And I want to set up the structure of the program.

905
00:55:05,740 --> 00:55:07,740
So basically something like this.

906
00:55:07,740 --> 00:55:10,740
Run set up para.

907
00:55:10,740 --> 00:55:14,740
Then I want to do that thing that's called.

908
00:55:15,740 --> 00:55:18,740
Perform something para five times.

909
00:55:20,740 --> 00:55:30,740
So if imagine that this was called the calculation para.

910
00:55:35,740 --> 00:55:40,740
I could remove this.

911
00:55:45,740 --> 00:55:47,740
That's the idea at least.

912
00:55:48,740 --> 00:55:54,740
And then I would say perform calculation para.

913
00:55:57,740 --> 00:56:03,740
And I would say step last times.

914
00:56:03,740 --> 00:56:10,740
So if we run this as many times as you inputted here.

915
00:56:11,740 --> 00:56:18,740
And then in the end I would just say display result is product.

916
00:56:18,740 --> 00:56:21,740
So this way we will start here.

917
00:56:21,740 --> 00:56:23,740
We will set it up asking for the number.

918
00:56:23,740 --> 00:56:25,740
We run this five times.

919
00:56:25,740 --> 00:56:28,740
And then if we display the product.

920
00:56:28,740 --> 00:56:31,740
So it looks like there are definitely things missing here.

921
00:56:31,740 --> 00:56:33,740
We have the stop run.

922
00:56:33,740 --> 00:56:35,740
Which I'm not sure how it works.

923
00:56:35,740 --> 00:56:39,740
Let's look a little bit more here and see if we can have some hints.

924
00:56:41,740 --> 00:56:45,740
What does the stop run seems to be stopping the program completely I think.

925
00:56:47,740 --> 00:56:49,740
I would like to learn more.

926
00:56:51,740 --> 00:56:53,740
Here we go.

927
00:56:56,740 --> 00:56:59,740
So this means go to setup para.

928
00:56:59,740 --> 00:57:01,740
And I'm going to call this the init para.

929
00:57:01,740 --> 00:57:04,740
Even though I probably don't need a name here.

930
00:57:05,740 --> 00:57:08,740
I think before we continue too long.

931
00:57:08,740 --> 00:57:11,740
Let's just see if we got anything there.

932
00:57:11,740 --> 00:57:13,740
Calculation para undefined.

933
00:57:14,740 --> 00:57:16,740
But it is here.

934
00:57:21,740 --> 00:57:22,740
Maybe.

935
00:57:23,740 --> 00:57:26,740
No I don't know at all what's going on.

936
00:57:27,740 --> 00:57:29,740
I didn't expect that.

937
00:57:29,740 --> 00:57:30,740
That's interesting.

938
00:57:30,740 --> 00:57:32,740
Line 27.

939
00:57:33,740 --> 00:57:36,740
Oh this is not the definition.

940
00:57:36,740 --> 00:57:38,740
It complains.

941
00:57:40,740 --> 00:57:42,740
What does that mean?

942
00:57:42,740 --> 00:57:44,740
Do I need to define the paragraphs?

943
00:57:47,740 --> 00:57:49,740
In some other way.

944
00:57:50,740 --> 00:57:51,740
This.

945
00:57:52,740 --> 00:57:55,740
Looks like they just write the paragraph.

946
00:57:57,740 --> 00:58:00,740
And then here they go to be para.

947
00:58:01,740 --> 00:58:03,740
They do say with a dot.

948
00:58:04,740 --> 00:58:06,740
But we do that too there.

949
00:58:08,740 --> 00:58:10,740
I can't really see the difference.

950
00:58:11,740 --> 00:58:13,740
I have here.

951
00:58:20,740 --> 00:58:22,740
Go to setup para.

952
00:58:22,740 --> 00:58:23,740
No.

953
00:58:28,740 --> 00:58:30,740
What does this mean?

954
00:58:30,740 --> 00:58:33,740
In hello world in paragraph setup para.

955
00:58:33,740 --> 00:58:35,740
We had these two errors.

956
00:58:35,740 --> 00:58:37,740
Is that what it means?

957
00:58:45,740 --> 00:58:48,740
I think I made too many differences here.

958
00:58:48,740 --> 00:58:50,740
In the same time.

959
00:58:50,740 --> 00:58:52,740
Let's scroll this back.

960
00:58:52,740 --> 00:58:54,740
I know exactly what I want.

961
00:58:54,740 --> 00:58:57,740
Let's get the program back into a working state.

962
00:58:57,740 --> 00:59:00,740
So let's do one thing at a time.

963
00:59:00,740 --> 00:59:03,740
Or a somewhat working state at least.

964
00:59:03,740 --> 00:59:04,740
Or.

965
00:59:04,740 --> 00:59:06,740
One, two, three.

966
00:59:06,740 --> 00:59:07,740
Okay.

967
00:59:07,740 --> 00:59:10,740
So the program kind of works.

968
00:59:10,740 --> 00:59:12,740
But we don't have that number thing.

969
00:59:12,740 --> 00:59:13,740
So.

970
00:59:15,740 --> 00:59:17,740
What if we.

971
00:59:20,740 --> 00:59:22,740
Add a stop run here.

972
00:59:27,740 --> 00:59:28,740
Okay.

973
00:59:28,740 --> 00:59:29,740
That's good.

974
00:59:29,740 --> 00:59:32,740
But before the stop run, I want to jump down here.

975
00:59:32,740 --> 00:59:36,740
I'm actually going to use the exact same context they use here.

976
00:59:36,740 --> 00:59:38,740
So they have a para and b para.

977
00:59:38,740 --> 00:59:39,740
Not sure.

978
00:59:39,740 --> 00:59:41,740
I thought I could name this anything I want.

979
00:59:41,740 --> 00:59:43,740
But let's add a para in the top here.

980
00:59:43,740 --> 00:59:44,740
See what happens.

981
00:59:47,740 --> 00:59:48,740
Okay.

982
00:59:48,740 --> 00:59:50,740
That didn't destroy anything.

983
00:59:50,740 --> 00:59:54,740
So let's call this the B.

984
00:59:54,740 --> 00:59:55,740
B para.

985
00:59:57,740 --> 00:59:59,740
Let's see if it was destroyed.

986
00:59:59,740 --> 01:00:00,740
No.

987
01:00:02,740 --> 01:00:03,740
No.

988
01:00:03,740 --> 01:00:05,740
Let's see if it was destroyed.

989
01:00:05,740 --> 01:00:06,740
No.

990
01:00:06,740 --> 01:00:08,740
But in the end.

991
01:00:08,740 --> 01:00:10,740
Let's go to.

992
01:00:10,740 --> 01:00:12,740
Was that how it's called?

993
01:00:13,740 --> 01:00:14,740
Sure.

994
01:00:19,740 --> 01:00:21,740
So unconditional go to.

995
01:00:23,740 --> 01:00:27,740
So in the end here I want to go to be para.

996
01:00:33,740 --> 01:00:34,740
Ja.

997
01:00:34,740 --> 01:00:35,740
Is.

998
01:00:35,740 --> 01:00:38,740
Can I choose any name I want here?

999
01:00:38,740 --> 01:00:41,740
Because I want to do this with the calculation para.

1000
01:00:41,740 --> 01:00:43,740
Calc para, we call it.

1001
01:00:43,740 --> 01:00:47,740
Because I'm not sure I'm allowed to call this whatever I want to.

1002
01:00:47,740 --> 01:00:49,740
Even though I thought so.

1003
01:00:54,740 --> 01:00:56,740
Yeah, that seemed to work.

1004
01:00:56,740 --> 01:00:58,740
Can I call this init para?

1005
01:00:58,740 --> 01:00:59,740
As I wanted to.

1006
01:00:59,740 --> 01:01:01,740
Or main para maybe.

1007
01:01:02,740 --> 01:01:03,740
Without breaking.

1008
01:01:10,740 --> 01:01:12,740
That seemed to work.

1009
01:01:14,740 --> 01:01:16,740
So if I now.

1010
01:01:32,740 --> 01:01:33,740
If I now.

1011
01:01:33,740 --> 01:01:35,740
This is the thing that stops it.

1012
01:01:36,740 --> 01:01:38,740
If I don't have this.

1013
01:01:39,740 --> 01:01:42,740
Will I be able to display something else here?

1014
01:01:42,740 --> 01:01:44,740
Will it jump back up here when it's done?

1015
01:01:47,740 --> 01:01:48,740
Let's try this out.

1016
01:01:50,740 --> 01:01:51,740
Woo!

1017
01:01:51,740 --> 01:01:52,740
We call it.

1018
01:01:53,740 --> 01:01:54,740
Two numbers.

1019
01:01:54,740 --> 01:01:56,740
One, two, three.

1020
01:01:56,740 --> 01:01:57,740
No.

1021
01:01:57,740 --> 01:02:00,740
It just went down here and.

1022
01:02:00,740 --> 01:02:01,740
Stopped.

1023
01:02:01,740 --> 01:02:05,740
So I can't jump back up without explicitly.

1024
01:02:06,740 --> 01:02:08,740
Telling it to I guess.

1025
01:02:12,740 --> 01:02:16,740
Does that go for the perform too?

1026
01:02:24,740 --> 01:02:27,740
This looks like something we want.

1027
01:02:28,740 --> 01:02:32,740
I'm sure we're doing too much in the same time now.

1028
01:02:32,740 --> 01:02:35,740
But perform calc para.

1029
01:02:37,740 --> 01:02:38,740
Väring.

1030
01:02:41,740 --> 01:02:45,740
One until from one by one until.

1031
01:02:45,740 --> 01:02:47,740
Okay, this looks like a for loop.

1032
01:02:49,740 --> 01:02:51,740
So I guess this will be step current.

1033
01:02:57,740 --> 01:02:58,740
Från 1.

1034
01:02:59,740 --> 01:03:00,740
By 1.

1035
01:03:00,740 --> 01:03:02,740
Untill step current.

1036
01:03:03,740 --> 01:03:04,740
Equals.

1037
01:03:04,740 --> 01:03:05,740
Step last.

1038
01:03:06,740 --> 01:03:07,740
Okay.

1039
01:03:09,740 --> 01:03:12,740
Let's remove a bunch of bullshit here.

1040
01:03:20,740 --> 01:03:21,740
And see what happens.

1041
01:03:21,740 --> 01:03:23,740
I'm gonna move this up here too.

1042
01:03:23,740 --> 01:03:24,740
I have no idea.

1043
01:03:24,740 --> 01:03:26,740
It's probably breaking so many ways.

1044
01:03:27,740 --> 01:03:28,740
How many numbers?

1045
01:03:28,740 --> 01:03:29,740
Three.

1046
01:03:29,740 --> 01:03:31,740
And the number one out of three.

1047
01:03:32,740 --> 01:03:33,740
One.

1048
01:03:34,740 --> 01:03:35,740
Two.

1049
01:03:35,740 --> 01:03:36,740
Three.

1050
01:03:37,740 --> 01:03:38,740
Four.

1051
01:03:39,740 --> 01:03:40,740
Hmm.

1052
01:03:41,740 --> 01:03:44,740
There was something going on here that kind of worked to be honest.

1053
01:03:47,740 --> 01:03:49,740
We don't need a second number.

1054
01:03:52,740 --> 01:03:53,740
And.

1055
01:03:54,740 --> 01:04:01,740
But we do have a problem here that the first result needs to be stored in the previous one.

1056
01:04:01,740 --> 01:04:03,740
Or in the factor.

1057
01:04:10,740 --> 01:04:12,740
So how can I do that in for loop?

1058
01:04:12,740 --> 01:04:14,740
I don't think I ever did that.

1059
01:04:21,740 --> 01:04:22,740
Hard.

1060
01:04:23,740 --> 01:04:26,740
I don't want to write this with an if statement to be honest.

1061
01:04:28,740 --> 01:04:32,740
What if I could push all these numbers to an array?

1062
01:04:34,740 --> 01:04:37,740
Is that even a thing in cobalt?

1063
01:04:38,740 --> 01:04:39,740
Cobal.

1064
01:04:41,740 --> 01:04:42,740
Array.

1065
01:04:45,740 --> 01:04:46,740
Array table concept.

1066
01:04:46,740 --> 01:04:47,740
This looks hard.

1067
01:04:48,740 --> 01:04:49,740
Ooh.

1068
01:04:49,740 --> 01:04:50,740
Ooh.

1069
01:05:01,740 --> 01:05:02,740
Okej.

1070
01:05:07,740 --> 01:05:10,740
I think it may be not that hard.

1071
01:05:10,740 --> 01:05:12,740
I'm very unused to this syntax.

1072
01:05:14,740 --> 01:05:15,740
But.

1073
01:05:16,740 --> 01:05:24,740
I'm not sure if I can write this right now without being completely confused on every step of the way.

1074
01:05:28,740 --> 01:05:30,740
Let's see what this says.

1075
01:05:31,740 --> 01:05:33,740
Cobal arrays or tables.

1076
01:05:34,740 --> 01:05:35,740
Single dimensional arrays.

1077
01:05:35,740 --> 01:05:40,740
Arrays are data structures that are used to simplify coding and improve processing efficiency.

1078
01:05:40,740 --> 01:05:45,740
The primary uses of arrays are to define a series of similar like format i input and output.

1079
01:05:45,740 --> 01:05:46,740
Okej.

1080
01:05:46,740 --> 01:05:47,740
I know this.

1081
01:05:47,740 --> 01:05:48,740
Deklaring an array.

1082
01:05:48,740 --> 01:05:51,740
Arrays assault cobalt data items.

1083
01:05:51,740 --> 01:05:53,740
Must be declaring a data division.

1084
01:05:53,740 --> 01:06:00,740
But are distinguished from scaler unsubscripted data items by use of the occurs class in their data definition.

1085
01:06:01,740 --> 01:06:07,740
Arrays may be declared for elementary or group data items at level 02 to 49.

1086
01:06:08,740 --> 01:06:13,740
To declare an array of elementary data items use the class occurs int num times.

1087
01:06:14,740 --> 01:06:19,740
In the data definition int num is any positive integer specifying the number of elements in the array.

1088
01:06:20,740 --> 01:06:25,740
Daily temp 05 temp occurs 25 times pick 999.

1089
01:06:26,740 --> 01:06:27,740
Okej.

1090
01:06:27,740 --> 01:06:32,740
I don't know what this first number means but I think that is how to define it.

1091
01:06:33,740 --> 01:06:38,740
This looks more like something I am interested in.

1092
01:06:42,740 --> 01:06:48,740
What this is number is that just like in the order it executes or something.

1093
01:06:49,740 --> 01:06:51,740
Just like in basic.

1094
01:07:02,740 --> 01:07:14,740
Okej, this looks interesting too.

1095
01:07:15,740 --> 01:07:22,740
So I am thinking that I should be able to get away with this.

1096
01:07:23,740 --> 01:07:30,740
So instead of factor I am going to have factors.

1097
01:07:31,740 --> 01:07:33,740
And what is temp?

1098
01:07:36,740 --> 01:07:38,740
What does it mean temp here?

1099
01:07:40,740 --> 01:07:42,740
It occurs 25 times pick.

1100
01:07:42,740 --> 01:07:44,740
So I guess this is we have two instances of temp.

1101
01:07:44,740 --> 01:07:46,740
But why do we need daily temp?

1102
01:07:47,740 --> 01:07:48,740
Okej.

1103
01:07:48,740 --> 01:07:54,740
This example occurs an array named temp that contains 24 elements data items each of pick 999.

1104
01:07:54,740 --> 01:08:02,740
So pick 999 I think is a number that has 3 respots that can contain up to number 9 in each of them.

1105
01:08:02,740 --> 01:08:07,740
And it's referenced like this temp 1 temp 24 Okej.

1106
01:08:07,740 --> 01:08:13,740
Daily temp is not itself an array but the group data item 72 characters long.

1107
01:08:13,740 --> 01:08:16,740
24 times 3 Okej.

1108
01:08:16,740 --> 01:08:20,740
So that's 24 there and the 3 bytes are basically I guess.

1109
01:08:21,740 --> 01:08:26,740
And it's 0,2 to 49 level data frame can contain an occurs clause.

1110
01:08:26,740 --> 01:08:31,740
So I guess the daily temp we probably don't need it.

1111
01:08:31,740 --> 01:08:35,740
But I am going to call it factors.

1112
01:08:37,740 --> 01:08:39,740
And there is a dot there right?

1113
01:08:39,740 --> 01:08:40,740
Yeah.

1114
01:08:40,740 --> 01:08:44,740
And I am going to call this factor.

1115
01:08:44,740 --> 01:08:50,740
But I need to be able to say how I need this to be variable.

1116
01:08:50,740 --> 01:08:56,740
Because I input the number dynamically in my program.

1117
01:08:56,740 --> 01:08:59,740
And I don't know how to do that yet.

1118
01:08:59,740 --> 01:09:02,740
I guess I could just take a very high number.

1119
01:09:02,740 --> 01:09:04,740
I feel it with the ones.

1120
01:09:04,740 --> 01:09:08,740
But it is a little bit dumb.

1121
01:09:08,740 --> 01:09:11,740
But I am pretty dumb when I write cobalt.

1122
01:09:11,740 --> 01:09:13,740
So I must admit.

1123
01:09:18,740 --> 01:09:24,740
So I am not sure how to do this in a way that I am not going to get too confused.

1124
01:09:24,740 --> 01:09:27,740
I am literally still subscript here.

1125
01:09:27,740 --> 01:09:29,740
Well...

1126
01:09:31,740 --> 01:09:34,740
Before I do too much maybe I should just try this out.

1127
01:09:34,740 --> 01:09:37,740
So let's put a 9 here.

1128
01:09:41,740 --> 01:09:43,740
Should I do this?

1129
01:09:44,740 --> 01:09:46,740
And put values 1.

1130
01:09:46,740 --> 01:09:48,740
Can I do that?

1131
01:09:48,740 --> 01:09:49,740
The idea is here.

1132
01:09:49,740 --> 01:09:52,740
Like if I have a ton of factors in the program.

1133
01:09:52,740 --> 01:09:54,740
Basically multipliers.

1134
01:09:54,740 --> 01:09:56,740
And the rest of them is 1.

1135
01:09:56,740 --> 01:09:59,740
It doesn't matter if I multiply them all in the end of the program.

1136
01:09:59,740 --> 01:10:02,740
I know it's really really bad.

1137
01:10:02,740 --> 01:10:04,740
But I also want to see if this works.

1138
01:10:04,740 --> 01:10:06,740
Let's compile this and see what happens.

1139
01:10:06,740 --> 01:10:11,740
I don't even know if this is at all going to work.

1140
01:10:13,740 --> 01:10:16,740
Okej, the setup of the compilation seems to work.

1141
01:10:18,740 --> 01:10:20,740
So let's do something more then.

1142
01:10:20,740 --> 01:10:23,740
We can remove the factor.

1143
01:10:23,740 --> 01:10:26,740
So now the program should probably break, I hope.

1144
01:10:26,740 --> 01:10:28,740
No.

1145
01:10:29,740 --> 01:10:32,740
Oh, we are not using my factor right now.

1146
01:10:32,740 --> 01:10:34,740
I guess...

1147
01:10:36,740 --> 01:10:42,740
What I should do here is accept this number into the factor step current.

1148
01:10:47,740 --> 01:10:49,740
Not sure if this works.

1149
01:10:49,740 --> 01:10:52,740
Let's display what we did too.

1150
01:10:53,740 --> 01:10:55,740
Stored.

1151
01:10:57,740 --> 01:11:01,740
And then factor step current.

1152
01:11:01,740 --> 01:11:03,740
Three.

1153
01:11:03,740 --> 01:11:05,740
We will multiply three numbers.

1154
01:11:05,740 --> 01:11:07,740
Two.

1155
01:11:07,740 --> 01:11:08,740
Three.

1156
01:11:08,740 --> 01:11:09,740
And four.

1157
01:11:09,740 --> 01:11:11,740
Whoa!

1158
01:11:11,740 --> 01:11:14,740
That was actually almost working.

1159
01:11:17,740 --> 01:11:20,740
We have some of by one error here.

1160
01:11:24,740 --> 01:11:26,740
I think...

1161
01:11:26,740 --> 01:11:28,740
Can we do this?

1162
01:11:28,740 --> 01:11:30,740
I think...

1163
01:11:30,740 --> 01:11:32,740
Can we have...

1164
01:11:32,740 --> 01:11:34,740
Put this like this.

1165
01:11:34,740 --> 01:11:36,740
Step current is...

1166
01:11:36,740 --> 01:11:39,740
Until it's less or equal.

1167
01:11:41,740 --> 01:11:44,740
Okej, let's solve this later.

1168
01:11:44,740 --> 01:11:46,740
They were off by one error.

1169
01:11:46,740 --> 01:11:51,740
But in the end here, I want to multiply all the factors.

1170
01:11:58,740 --> 01:12:00,740
Kan we do that here, maybe?

1171
01:12:00,740 --> 01:12:02,740
Perform until this.

1172
01:12:02,740 --> 01:12:06,740
It looks like until number data can be used as a subscript.

1173
01:12:06,740 --> 01:12:08,740
I don't know what subscript is about.

1174
01:12:09,740 --> 01:12:14,740
It looks like we can multiply things here.

1175
01:12:28,740 --> 01:12:30,740
I'm not sure.

1176
01:12:30,740 --> 01:12:33,740
I'm ready to do this just yet.

1177
01:12:38,740 --> 01:12:42,740
I first want to get a good concept of what this program does.

1178
01:12:42,740 --> 01:12:44,740
So let's remove...

1179
01:12:45,740 --> 01:12:48,740
Let's print something out there in the product.

1180
01:12:48,740 --> 01:12:50,740
No.

1181
01:12:52,740 --> 01:12:55,740
Maybe it was easy to do the thing we did before.

1182
01:12:55,740 --> 01:12:57,740
I guess if the first number is one.

1183
01:12:58,740 --> 01:13:01,740
Okej, I guess I can cheat a little bit here.

1184
01:13:02,740 --> 01:13:05,740
If I store the first result as one.

1185
01:13:06,740 --> 01:13:08,740
I don't need this array.

1186
01:13:10,740 --> 01:13:12,740
So I'm going to scroll back a little bit here.

1187
01:13:13,740 --> 01:13:15,740
I fake it.

1188
01:13:16,740 --> 01:13:19,740
So here now we have the factor and the product.

1189
01:13:20,740 --> 01:13:22,740
And the product...

1190
01:13:22,740 --> 01:13:25,740
It's going to start out by being one.

1191
01:13:27,740 --> 01:13:30,740
I think that is possible.

1192
01:13:31,740 --> 01:13:36,740
Then every time we accept the number into the factor.

1193
01:13:37,740 --> 01:13:41,740
We multiply the factor with the product.

1194
01:13:43,740 --> 01:13:45,740
I think that should work.

1195
01:13:46,740 --> 01:13:49,740
Where is the multiplication step?

1196
01:13:49,740 --> 01:13:51,740
Step.

1197
01:13:52,740 --> 01:13:54,740
Let's scroll back.

1198
01:13:59,740 --> 01:14:00,740
There we go.

1199
01:14:00,740 --> 01:14:02,740
So accept the factor.

1200
01:14:02,740 --> 01:14:05,740
And then we add the factor to the product.

1201
01:14:05,740 --> 01:14:07,740
So if the product starts at one.

1202
01:14:08,740 --> 01:14:11,740
Then we go down here and we accept the factor.

1203
01:14:11,740 --> 01:14:13,740
Then we store the factor.

1204
01:14:13,740 --> 01:14:16,740
We multiply the factor by the product into the product.

1205
01:14:16,740 --> 01:14:18,740
Then we do that again and again.

1206
01:14:19,740 --> 01:14:22,740
For all until we reach the step last.

1207
01:14:22,740 --> 01:14:24,740
I think we have something going here.

1208
01:14:27,740 --> 01:14:28,740
How many digits?

1209
01:14:28,740 --> 01:14:29,740
Five.

1210
01:14:29,740 --> 01:14:31,740
No, let's start with four.

1211
01:14:32,740 --> 01:14:33,740
Enter number one of four.

1212
01:14:33,740 --> 01:14:34,740
Two.

1213
01:14:34,740 --> 01:14:35,740
Enter number two of four.

1214
01:14:35,740 --> 01:14:36,740
Three.

1215
01:14:36,740 --> 01:14:37,740
Enter number three out of four.

1216
01:14:37,740 --> 01:14:38,740
Four.

1217
01:14:38,740 --> 01:14:40,740
Result is 24.

1218
01:14:40,740 --> 01:14:41,740
Wow!

1219
01:14:41,740 --> 01:14:43,740
A program kind of works.

1220
01:14:43,740 --> 01:14:45,740
But it has an off by one error.

1221
01:14:45,740 --> 01:14:47,740
So let's fix that.

1222
01:14:47,740 --> 01:14:50,740
Then I think the first course in COBOL is complete.

1223
01:14:50,740 --> 01:14:53,740
Might be the world's shittiest COBOL program to bonus.

1224
01:14:53,740 --> 01:14:55,740
But I'm pretty proud of myself still.

1225
01:14:55,740 --> 01:15:00,740
I only took almost two hours to make a shit program.

1226
01:15:00,740 --> 01:15:05,740
So how to solve this off by one error.

1227
01:15:05,740 --> 01:15:09,740
I guess we could have, we need a minus somewhere.

1228
01:15:11,740 --> 01:15:12,740
Or.

1229
01:15:12,740 --> 01:15:17,740
A step last.

1230
01:15:17,740 --> 01:15:19,740
Why is a step current?

1231
01:15:21,740 --> 01:15:22,740
I guess.

1232
01:15:26,740 --> 01:15:28,740
If this was while.

1233
01:15:31,740 --> 01:15:33,740
No, that doesn't work.

1234
01:15:33,740 --> 01:15:35,740
Let's see what options we have here for looping.

1235
01:15:37,740 --> 01:15:39,740
Loop statements.

1236
01:15:40,740 --> 01:15:45,740
We have the perform until.

1237
01:15:47,740 --> 01:15:49,740
Wasn't there something else?

1238
01:15:49,740 --> 01:15:51,740
Perform times is pretty interesting.

1239
01:15:55,740 --> 01:15:57,740
Let's try this.

1240
01:15:59,740 --> 01:16:03,740
Perform calc step last times.

1241
01:16:10,740 --> 01:16:11,740
Two.

1242
01:16:11,740 --> 01:16:12,740
One.

1243
01:16:12,740 --> 01:16:13,740
Two.

1244
01:16:13,740 --> 01:16:14,740
Okay, that worked.

1245
01:16:14,740 --> 01:16:17,740
But we have to update the step current.

1246
01:16:19,740 --> 01:16:20,740
Mm-hm.

1247
01:16:20,740 --> 01:16:21,740
And I guess.

1248
01:16:24,740 --> 01:16:26,740
We could do that.

1249
01:16:29,740 --> 01:16:32,740
By just adding to step current here.

1250
01:16:34,740 --> 01:16:35,740
Add.

1251
01:16:36,740 --> 01:16:37,740
Add.

1252
01:16:38,740 --> 01:16:39,740
One.

1253
01:16:39,740 --> 01:16:40,740
Two.

1254
01:16:40,740 --> 01:16:41,740
Step current.

1255
01:16:44,740 --> 01:16:46,740
Let's try that out.

1256
01:16:47,740 --> 01:16:48,740
Three.

1257
01:16:48,740 --> 01:16:49,740
One.

1258
01:16:49,740 --> 01:16:50,740
Two.

1259
01:16:50,740 --> 01:16:51,740
Three.

1260
01:16:51,740 --> 01:16:52,740
Ah, look at that.

1261
01:16:52,740 --> 01:16:53,740
That worked.

1262
01:16:53,740 --> 01:16:54,740
COBOL is really good.

1263
01:16:54,740 --> 01:16:57,740
I have some fluency in COBOL now.

1264
01:16:57,740 --> 01:16:59,740
That was pretty satisfying.

1265
01:16:59,740 --> 01:17:02,740
Even though this whole program is quite silly.

1266
01:17:02,740 --> 01:17:04,740
I like it.

1267
01:17:04,740 --> 01:17:06,740
I feel accomplished today.

1268
01:17:06,740 --> 01:17:09,740
Let's see if there is anything we should clean up.

1269
01:17:09,740 --> 01:17:11,740
Let's change the author.

1270
01:17:12,740 --> 01:17:13,740
This method.

1271
01:17:15,740 --> 01:17:16,740
Yeah.

1272
01:17:17,740 --> 01:17:19,740
Example program using.

1273
01:17:22,740 --> 01:17:23,740
Perform.

1274
01:17:23,740 --> 01:17:24,740
We are using.

1275
01:17:25,740 --> 01:17:26,740
Accept.

1276
01:17:26,740 --> 01:17:28,740
And we are using.

1277
01:17:29,740 --> 01:17:30,740
Times.

1278
01:17:35,740 --> 01:17:36,740
Kollekt.

1279
01:17:36,740 --> 01:17:38,740
A number of user.

1280
01:17:38,740 --> 01:17:40,740
The finable integers.

1281
01:17:41,740 --> 01:17:43,740
Finable integers.

1282
01:17:43,740 --> 01:17:44,740
And.

1283
01:17:45,740 --> 01:17:47,740
Multiply them.

1284
01:17:48,740 --> 01:17:49,740
With.

1285
01:17:50,740 --> 01:17:51,740
With.

1286
01:17:51,740 --> 01:17:54,740
Low memory footprint.

1287
01:17:55,740 --> 01:17:56,740
I can't write.

1288
01:17:56,740 --> 01:17:57,740
I'm having so much fun.

1289
01:17:57,740 --> 01:17:59,740
Low memory footprint.

1290
01:17:59,740 --> 01:18:02,740
And return the result.

1291
01:18:02,740 --> 01:18:03,740
No display.

1292
01:18:05,740 --> 01:18:06,740
And this.

1293
01:18:06,740 --> 01:18:08,740
Display the result.

1294
01:18:08,740 --> 01:18:09,740
Data division.

1295
01:18:09,740 --> 01:18:10,740
Step current.

1296
01:18:10,740 --> 01:18:11,740
Step last.

1297
01:18:11,740 --> 01:18:12,740
Fantastic.

1298
01:18:13,740 --> 01:18:14,740
Okay.

1299
01:18:15,740 --> 01:18:16,740
Pretty nice.

1300
01:18:16,740 --> 01:18:17,740
I must say.

1301
01:18:19,740 --> 01:18:21,740
Wait, I need to upload this to GitHub.

1302
01:18:24,740 --> 01:18:25,740
East.

1303
01:18:26,740 --> 01:18:27,740
Wacka the whack.

1304
01:18:27,740 --> 01:18:28,740
Det.

1305
01:18:33,740 --> 01:18:35,740
My first global program.

1306
01:18:37,740 --> 01:18:38,740
We call it.

1307
01:18:39,740 --> 01:18:40,740
Calculate.

1308
01:18:40,740 --> 01:18:41,740
Like.

1309
01:18:42,740 --> 01:18:43,740
Bank.

1310
01:18:43,740 --> 01:18:44,740
CBL.

1311
01:18:49,740 --> 01:18:50,740
There we go.

1312
01:18:51,740 --> 01:18:52,740
We are public.

1313
01:18:53,740 --> 01:18:55,740
Gonna leave this link in the subscription.

1314
01:18:55,740 --> 01:18:57,740
I mean in the description.

1315
01:18:59,740 --> 01:19:00,740
I kinda like it.

1316
01:19:00,740 --> 01:19:01,740
I'm.

1317
01:19:02,740 --> 01:19:05,740
Happy that you took time and looked at how to learn COBOL.

1318
01:19:06,740 --> 01:19:08,740
The world is our oyster now.

1319
01:19:08,740 --> 01:19:11,740
Let's go get those banks and get a fat paycheck.

1320
01:19:12,740 --> 01:19:13,740
For the summer.

1321
01:19:13,740 --> 01:19:14,740
Alright.

1322
01:19:14,740 --> 01:19:15,740
Thanks.

1323
01:19:15,740 --> 01:19:16,740
See you later.

