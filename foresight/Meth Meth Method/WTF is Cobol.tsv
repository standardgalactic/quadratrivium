start	end	text
0	3320	Hej alla! Det här är Fontes.
3320	6880	I dag ska jag försöka köpa.
6880	10780	Och det är för att det är att jag har sett mycket om köp.
10780	14540	Att vara, vad det kallar,
14540	19080	att vara fördelad nu i New Jersey eller något sådant.
19080	20880	Låt oss se vad Twitter säger.
23880	26300	Jag tror att jag har sett köp trenden.
27020	30660	Det här är nån av de här.
32660	33860	Och Kobol.
37700	41780	Så det ser ut som att världen är i en djur nivå för folk att förstå Kobol.
42100	44660	Så förstås jag ska försöka förstå Kobol.
48980	52660	Kobol är en av de här länge som jag har hört om hela mitt liv.
53660	56620	Men jag vet inte vad det ser ut som.
56620	63580	Så jag tänkte att jag ska försöka och lära lite Kobol nu från en absolut skratch.
63580	69860	Så i den här episodeen ser du mig att jag har kämpat.
69860	72540	Jag vet inte om det kan röra på Windows.
72540	74340	Jag vet inte vad det gör.
74340	78180	Jag har en seriöst seriös erfarenhet med det.
78940	84300	Så jag tror att vi ska börja och se vad som händer när jag lär Kobol.
87700	90740	Målet kan göra en liten människa från att lära det.
90740	92460	Hur vet du så?
92460	95220	Let's create a blank slate här och.
97060	100260	Get started with Kobol Windows.
103500	105060	Microfokus dot kom.
105220	106100	Never been there.
109860	111580	This looks like a good tutorial.
113340	115140	Let's just go in here and see what happens.
116380	116900	OK.
119620	123020	Well, this looks classic.
124620	125780	As soon as in a bit.
128660	131860	OK, common business oriented language.
132580	137020	Good from 1959 older than me nice.
141100	145220	What else does it say here in the website to help you learn Kobol.
145260	146780	Microfokus provides a range.
146780	149580	OK, who is who are microfokus by the way.
151580	154540	Per standard learning practice.
154540	156700	I'm not gonna invest too much time in anything.
156940	160500	I'm just gonna try to find the gist of everything.
162140	168820	OK, this looks like some typing person wrote this lot of text.
169100	170660	Probably useless.
172620	174060	Calling a Kobol program.
177020	178660	Special in going to be called.
178740	180220	What the hell is this?
180540	183020	OK, let's go to the hello world thing.
184900	186420	This is what I'm talking about.
188340	188820	OK.
189820	200580	This tutorial walks you through the steps to create your first hello Kobol world application and demonstrates the basic features of the Visual Studio integrated.
200900	202340	I have to use Visual Studio.
204460	206460	Oh, this is gonna be a long episode.
206460	218780	I might have it installed so let's see Visual Studio 2017.
221060	222660	Hey, hey, hey.
224860	227340	Welcome all you connected developers.
227540	230820	Yeah, I know that was not at all what it said.
231100	232020	Connect all you do.
232180	233220	I don't want to do that.
233460	233900	I have to.
234620	236980	Not now, maybe later.
237180	239220	This is the feeling right there.
241420	242500	A familiar environment.
242700	243420	Dark.
244740	245620	Dread and settings.
245700	246260	General.
247580	249900	I cannot pick Kobol here.
249980	250380	OK.
252140	254220	Let's take a look at this again here.
254940	255980	Windows 10 and later.
256060	256700	That's me.
256940	257940	From your Windows desktop.
257980	258620	Click start.
258700	260140	Visual Studio 2007.
260500	261220	I did that.
262220	269140	If this is the first time you have started Visual Studio in your machine, you're prompted to specify default environment settings.
269220	270940	Ah, general development settings.
271020	271660	That's where we are.
271740	272100	Good.
273340	274820	The windows is open.
275460	276620	I guess I'm going to continue.
278060	279620	Let's tab in to Visual Studio here.
281660	282300	General.
285260	286540	I'm just going to double check that.
287300	289460	OK, it's not exactly the same, but.
289860	292020	It's probably what they mean.
298780	300580	Let me resize this.
300660	301780	Humongous window.
303300	305420	OK, don't want to sign in all accounts.
310020	312140	My evaluation period has ended.
313540	316500	OK, I guess it ended in 2017.
317900	318860	What do you do now?
320460	323020	What options do I have here?
325100	326580	What options do I have here?
332660	333820	OK, what is this?
339460	343900	OK, I'm going to write cobalt in VS code.
349460	356580	OK, looks like it doesn't support cobalt by default, at least.
358620	359900	I guess it's not cool.
362300	364340	Why does this page look broken, by the way?
365060	365940	Not a good sign.
366380	367580	The end times is coming.
372940	378020	But I just want to get started, but why do you have to use Visual Studio normal?
379620	380700	Cobalt plusback.
381380	383700	These things are so alien to me.
384140	385420	It's quite interesting, actually.
387460	389380	Is this maybe a virus?
391780	393300	That icon looks so virusy.
396500	399140	Cobalt, acrobalt, cobalt.
400340	400660	Ja.
402540	403820	Wait a minute.
405180	406980	Cobalt on Linux.
410220	413180	OK, schnellt ändå.
420140	425940	Can you make a note that I'll be talking.
429860	430700	Are you fine?
433060	434380	No, I'm fine.
435820	437740	That was all off Cuba.
437740	440740	Let's have a open two window here.
442740	445740	I probably need to resize it a little bit like that.
445740	446740	It's easy to see.
447740	448740	Let's install it.
453740	454740	Hoppsam.
457740	458740	Yes.
459740	461740	Let's see where this gets us.
463740	465740	I'm gonna continue read this.
466740	467740	This looks boring.
468740	469740	Package management.
469740	470740	You should find it.
470740	471740	Once installed.
472740	476740	Is this what the code program looks like?
478740	480740	I guess we don't need vicious studio then.
480740	482740	So let's just goodbye.
484740	486740	And open vicious studio code.
490740	492740	Add workspace folder.
493740	494740	And...
496740	499740	I'm gonna add a folder called cobble hello world.
500740	502740	There's cobble in it.
503740	504740	Let's call it that.
505740	506740	That's a good folder.
507740	508740	It's an update.
508740	509740	I don't need this.
512740	514740	Let's see what happens if I just...
517740	520740	Copy and paste this into a cobble file.
522740	524740	I need to find code test.cbl.
525740	526740	So a new file.
526740	527740	I paste that in.
528740	530740	I'm gonna save this as test.cbl.
531740	533740	Let's see if it's .txt.
534740	535740	No thank you.
538740	539740	Aha.
540740	543740	The marketplace has extension and help with cbl files.
544740	546740	Let's see what we can do.
548740	549740	Okay, very nice.
552740	556740	This is the one we had up on the page here I think.
559740	563740	Why does this page look so silly?
563740	565740	Okay, let's just not use that.
565740	568740	It was a good lead, so thank you page.
568740	570740	But this is what we want to push.
570740	571740	Bam, install.
573740	576740	So this is just a source colorizer.
583740	587740	Let's just look through this quickly and see if there's something that we obviously want.
588740	591740	Autocomplete highlighting diagnostics.
591740	593740	We'll see what happens.
593740	594740	Okay, nice.
594740	596740	We have colors.
596740	600740	By the way, why are these lines there in the middle?
601740	602740	Sorry.
602740	603740	Okay.
604740	607740	Can I run my code program now?
608740	610740	Let's go in here.
610740	615740	We have installed all the things from Cobol and Fink.
615740	622740	So let's go in to this folder that we created and find out test.cbl.
625740	627740	Where do you have these things?
632740	633740	Development.
634740	635740	Method.
637740	639740	Cobol in it.
639740	641740	There it is.
641740	645740	And let's go and find what does this opencobol provide.
645740	648740	It probably provides a compiler of some sort.
648740	654740	So it looks here like we can write cobxhello.cob.
654740	662740	And then we get an executable called dot slash hello, or yes, called hello, that is executable.
662740	664740	Let's try that out.
664740	665740	Cob C.
665740	667740	No input files.
667740	668740	Like we have this command.
668740	670740	Let's clear the window.
670740	674740	And we write cobc minus xhello.cob.
674740	678740	But our file is called test.cbl.
678740	680740	I guess that works.
680740	682740	Cob C.
682740	684740	Cob C.
684740	686740	X as I think is.
686740	688740	Let's see what it says there.
688740	690740	Wow, lots of options.
692740	695740	X means build an executable program.
695740	696740	Okay.
696740	697740	Nice.
697740	698740	Clear this again.
698740	702740	Cob C minus x and test.cbl.
702740	705740	Was there something else we needed?
705740	713740	No, it looks like, I guess it will compile it to the executable dot hello if it's called hello.
713740	716740	So our executable is probably going to be called test.
719740	722740	Syntax error already.
723740	725740	Okay.
725740	729740	Well, that's not even a column.
729740	733740	Yeah, there is a line one column seven.
733740	735740	This doesn't look good.
735740	738740	One, two, three, four, five, seven.
738740	743740	Oh, this is where I discover those lines that I don't know what they are.
743740	746740	I wonder what that means.
747740	749740	Oh.
749740	751740	Hmm.
752740	754740	This was interesting.
754740	759740	So apparently everything is fine until here.
759740	761740	No, can't write F there.
761740	763740	Interesting.
765740	768740	I don't understand this.
768740	775740	Is this compiler not compatible with this tutorial?
778740	781740	What is going on here?
782740	786740	What is the first line here?
786740	787740	Hello, Cob.
787740	790740	Is that from the editor or what?
790740	794740	No, this is the full program, right?
800740	802740	Okay, it doesn't look good.
802740	805740	We wrote test.cbl, right?
806740	809740	We're going to display Chow.
811740	813740	Okay.
819740	823740	Okay, yes, some interesting things here we'll learn.
823740	827740	But it's not good that we can't even go past this step.
827740	830740	What could this be?
836740	838740	Okay.
838740	842740	We can Google this error too.
846740	850740	Okay, it looks like somebody had this same problem.
850740	852740	Go away.
854740	857740	Okay, I have a simple code program that is not compiling.
857740	859740	Can someone tell me what is wrong?
859740	861740	Okay, that's me.
862740	865740	What?
865740	868740	Seriously, I hate webpages.
868740	870740	Go away.
870740	872740	I have a very simple, yes, that's me.
872740	876740	I have purged and installed libcob1, an opencob2no effect.
876740	879740	Error in value index F at column 7.
879740	881740	Okay, that's me.
881740	883740	Identification division.
883740	885740	Let's see if that is what we had.
885740	887740	Yes.
887740	889740	What does that mean by the way?
889740	892740	I should probably find out.
893740	896740	Try this slight mod due to syntax from a limerick site.
896740	899740	Okay, I don't...
899740	904740	That is completely alien to me.
904740	907740	Okay, a limerick site.
907740	913740	Probably something that you know about when you write code.
913740	916740	What is the mod exactly?
919740	922740	Let's...
922740	925740	I'm just going to copy-paste this in.
925740	928740	I'll see what happens.
928740	932740	Oh, it's so good to feel like a complete beginner.
932740	935740	That's the exact same problem.
935740	939740	Let's make sure that this is actually the file that I expected to be.
939740	941740	Okay, yeah.
941740	943740	That is what we pasted.
943740	946740	And apparently the syntax there are here.
946740	948740	Really, really.
948740	950740	Is that it?
950740	952740	Ah, this is silly.
952740	955740	Should I add this too?
955740	957740	Source format free.
957740	959740	Maybe it is.
959740	961740	What do I know?
961740	963740	I mean JavaScript has used strict.
963740	966740	Let's save this, see what happens.
966740	969740	Okay, interesting.
969740	971740	Interesting.
971740	973740	Seem to work.
973740	976740	We have an executable here.
976740	980740	Why not test it and execute the test.
980740	983740	And the first number.
983740	988740	I don't know what the program does, but I'm going to enter the first number.
988740	993740	And everybody knows that the first number is one.
993740	996740	And the second number, that's two.
996740	999740	Result is zero two.
999740	1001740	Okay.
1001740	1003740	Nice.
1003740	1005740	I know COBOL now.
1005740	1008740	I wonder what this program does.
1008740	1011740	Let's see if we can figure this out.
1011740	1017740	Example program using accept display and multiply to get.
1017740	1021740	Two single digit numbers from the user and multiply them together.
1021740	1024740	Well, you sure did do that.
1024740	1027740	The output was a little bit unexpected.
1027740	1030740	I didn't expect that leading zero.
1030740	1034740	But let's try something else.
1034740	1036740	And the first number.
1036740	1038740	What should we pick?
1038740	1040740	Three.
1040740	1042740	And second number.
1042740	1044740	Twelve.
1044740	1047740	We should see 36, right?
1047740	1051740	Oh, it can only be one digit.
1051740	1053740	Okay.
1053740	1058740	So three and nine should be 27, I think.
1058740	1060740	Yeah.
1060740	1062740	You go program.
1062740	1064740	You're a good program.
1064740	1066740	Okay.
1066740	1069740	So this was interesting.
1069740	1074740	That's something probably everybody knows in COBOL world.
1074740	1079740	That you have to write that in the top otherwise you will get a very confusing error.
1079740	1084740	It looks like this person did something similar.
1084740	1086740	Okay.
1086740	1093740	I will never again, which I stopped doing a long time ago, complain about somebody that doesn't know a specific thing in a language.
1093740	1095740	But this was interesting.
1095740	1100740	This feels just like when I was younger and I was just, what is this for?
1100740	1102740	I don't understand what this thing is for.
1102740	1104740	Why did they do it like that?
1104740	1106740	This sucks.
1106740	1108740	But now I suck.
1108740	1110740	It feels good.
1110740	1112740	Okay.
1112740	1117740	Let's go back to a tutorial and see if we can rewrite, get this to work now.
1117740	1121740	When we know this magic trick of COBOL world.
1121740	1126740	So we can do math.
1126740	1128740	That was pretty impressive.
1128740	1132740	Now we're gonna see if we can print.
1132740	1133740	Ciao!
1133740	1134740	Which is fitting.
1134740	1136740	Italy is a nice place.
1136740	1138740	We'd love to go there.
1138740	1140740	Let's compile that.
1140740	1142740	It worked.
1142740	1144740	You know what?
1144740	1149740	This source format 3 is my favorite thing in COBOL.
1149740	1152740	But I'm back here in the micro focus tutorial.
1152740	1160740	And I'm gonna continue with this one because I noticed, oh now I remember what was so funny.
1161740	1166740	I isn't there supposed to be a history menu item here somewhere.
1166740	1168740	Or they just remove that for no reason.
1168740	1170740	Okay this makes so much sense.
1170740	1174740	Thanks Google for being annoying.
1174740	1177740	Okay, I guess I can't find that page easily.
1177740	1180740	So let's just continue with this project here.
1180740	1182740	So we solved the compiling program.
1182740	1187740	And here is the reminisced remnants of what I did before.
1187740	1189740	Let's clear that out so this makes sense.
1191740	1192740	Okay.
1192740	1193740	Add a source file.
1193740	1194740	We can do that.
1194740	1196740	Because we know how to compile.
1196740	1199740	So I'm gonna create a source file called helloworld.cbl.
1199740	1202740	Just keep in line with this tutorial.
1202740	1204740	Copping that.
1204740	1206740	Creating a new file here.
1206740	1207740	Saving it.
1207740	1212740	Add hello world.cbl.
1212740	1214740	Plam, pasting this in.
1214740	1217740	No, that's not what I'm pasting in.
1217740	1221740	You can delete the skeleton problem that's created when you created a project.
1221740	1223740	We don't need to do that.
1223740	1226740	But in the code within the new file.
1226740	1229740	Navigate to the line that contains procedure division.
1229740	1234740	So since we have created it not with Witcher Studio.
1234740	1238740	We didn't get any of the skeleton things.
1238740	1240740	So I'm gonna copy that from our test file.
1240740	1242740	Into helloworld.cbl.
1242740	1245740	And looking at here.
1245740	1248740	Procedure division.
1248740	1250740	Oops.
1250740	1252740	It's here.
1252740	1254740	So it looks like this.
1254740	1256740	There's two parts of this source file.
1256740	1260740	One is this statement.
1260740	1267740	That just, I guess it tells the compiler what source file is formatted like.
1271740	1274740	Oh, source format free.
1274740	1280740	Is that the same as using this?
1284740	1287740	Let's save this and see if we can compile it.
1289740	1292740	If you compile this with x, it compiles.
1292740	1295740	Can we remove that?
1295740	1298740	I get that error we had in the beginning.
1298740	1300740	But if I add dash free.
1300740	1303740	Oh, it makes it work.
1304740	1310740	So it looks like this statement.
1310740	1314740	And that one is the same.
1314740	1317740	Okay, that's good to know.
1321740	1323740	Okay, good to know.
1323740	1325740	I wonder why that is.
1325740	1329740	And what is non free format?
1330740	1333740	I will never know.
1333740	1335740	May we find out later.
1335740	1337740	But let's get in line with this.
1337740	1340740	We should find the procedure division.
1340740	1347740	And then we press enter at the line of the file.
1347740	1349740	Let's do this.
1349740	1351740	There we go.
1351740	1357740	This creates a new line in the file and the cursor position right after the gray margin area.
1357740	1360740	I don't think we have the gray margin area.
1360740	1363740	And what is the AB area?
1363740	1365740	I don't know.
1368740	1370740	But anyway, let's go down to number six here.
1370740	1373740	Type the code to write some text in the console.
1373740	1376740	Copping this out.
1376740	1378740	Boom.
1379740	1381740	Compile.
1382740	1385740	And run.
1386740	1388740	It works. Fantastic.
1388740	1395740	I'm actually going to combine the compiling and the run stage with the double ampersons there.
1395740	1401740	That way I can just press up and run it.
1401740	1404740	And compile it at the same time.
1407740	1409740	Okay, build application.
1409740	1411740	We can do that.
1411740	1413740	Run hello world.
1413740	1415740	We have done that.
1415740	1417740	Okay, what's next?
1417740	1421740	Continue with the next tutorial, configuring the hellocobalworld application.
1421740	1423740	Okay.
1423740	1425740	Copybooks.
1425740	1427740	Okay, let's see what this is.
1427740	1433740	Tutorial configuring the hellocobalworld application.
1433740	1439740	Cobal application often consists of cobalt source files and of copybooks.
1439740	1442740	Files that include code that is copied into other programs.
1443740	1445740	That's the new concept to me.
1445740	1448740	Or at least the name copybooks.
1448740	1454740	Copybooks might not be stored in the same location as the source files.
1454740	1460740	This tutorial demonstrates how to configure a project to locate any copybooks that are not in the project directory.
1460740	1462740	This is strange to me.
1462740	1465740	Why would this be the first thing you want to learn about?
1465740	1467740	But let's just continue.
1468740	1472740	You're now going to modify and configure a hellocobalworld application,
1472740	1475740	which you created in the tutorial hellocobalworld application.
1475740	1477740	To use a copybook,
1477740	1480740	which is an external to the project.
1480740	1486740	It still feels very strange to me that this is the second thing you do when you learn a cobalt.
1486740	1489740	But who am I to judge?
1489740	1492740	This is what you're going to do as part of this tutorial.
1492740	1496740	Create a project in the same solution that only contains a copybook.
1496740	1501740	Move a part of the code from the hellocobalprogram in the lower.
1501740	1506740	Replace the original code and hellocobalworld with a copy statement.
1506740	1509740	The changes you make to your project will cause some build issues.
1509740	1512740	Modify the project's properties to add a path to the copybook.
1512740	1517740	In file in order to resolve these build issues.
1519740	1523740	I wonder what this is if you're not the vicious studio code.
1523740	1526740	Let's just try to figure it out.
1529740	1533740	They want to create a console application that probably doesn't apply to us.
1539740	1541740	Create a copybook.
1541740	1544740	Copybook, project, solution, add new item.
1544740	1547740	Click copybook. What is a copybook?
1548740	1553740	I'm going to create a new file called hello.cpy and click add.
1553740	1557740	This crazy file in the project opens it in the editor.
1559740	1564740	You're now going to add some code to the file from the hellocobalworld project.
1564740	1568740	Copy the following line from the file.
1568740	1572740	Let's try this.
1583740	1586740	I think we have one thing missing here.
1586740	1593740	Hello.cpy probably requires some scaffolding before we can make it work.
1594740	1599740	By scaffolding, I mean this part, the identification division, the procedure division.
1599740	1604740	Let's follow it blindly and see what problems we get.
1604740	1608740	They want us to call it hello.cpy.
1608740	1612740	I am going to create a new file.
1612740	1615740	The first copy is a new file, paste it in.
1615740	1618740	Call it hello.cpy.
1618740	1621740	That seems to be a cobalt thing.
1621740	1625740	That's it recognized by Visual Studio.
1627740	1630740	I just have this literally in that file.
1630740	1634740	And then I'm supposed to...
1634740	1637740	What was it?
1637740	1640740	Run this, copy hello.cpy.
1640740	1643740	To here.
1643740	1647740	Is that supposed to be like that?
1647740	1649740	Let's see what happens.
1649740	1654740	I did that, noted the line for the copy statement in noworld.cbl.
1654740	1658740	It's now underlined with the red wave line in the editor.
1658740	1662740	No, it's not.
1662740	1667740	But that's just because we're not using Visual Studio.
1667740	1682740	Okay, this looks boring. This is not programming. This is product setup.
1682740	1686740	Interesting tutorial. I want to compile this to see what happens.
1686740	1689740	What? No.
1689740	1692740	Did that actually work?
1692740	1694740	Looks like it did, right?
1694740	1699740	Let's just write something else to make sure that we're actually running what we think we're running.
1699740	1701740	Here we are.
1701740	1706740	So I guess that whole part was useless for us.
1706740	1712740	And this looks like an import statement to me.
1712740	1717740	Looks like a very flaky way to import something.
1717740	1721740	But whatever.
1722740	1725740	Okay, but so we know what copybooks are.
1725740	1728740	They are pretty boring and shit.
1728740	1733740	So let's continue debugging the helloCovol world application.
1733740	1736740	Come on.
1736740	1739740	This is not fun.
1739740	1742740	I want to create a function or something.
1742740	1745740	Maybe that doesn't even exist in Covol. What do I know?
1745740	1750740	So add the following code on a new line immediately at the line for code.
1750740	1755740	I don't want to do that. I don't want to debug right now.
1755740	1758740	Creating a native Covol application. Let's start something else.
1758740	1764740	Running unitest. What the hell is this tutorial?
1764740	1769740	Here's all the boring things that doesn't make the program do what you want to do that you need to learn first.
1769740	1774740	I understand why I hate taking programming classes in school because they were exactly like this.
1774740	1779740	First we need to understand everything perfectly before the program does anything.
1779740	1784740	And I was more like, I'd rather do something first.
1784740	1789740	What else could you do here?
1793740	1797740	Delta file editor. I want to do something fun.
1797740	1801740	What is a native Covol application then?
1801740	1806740	Now this website starts to work. No, it works again.
1807740	1810740	Visual Covol.
1810740	1813740	We're back in from start. I'm going to have to find something more fun.
1813740	1817740	Microfokus. What's focus? Two micro for me.
1817740	1819740	Let's dump this.
1819740	1823740	We know how to write a Covol program, so let's start something else.
1823740	1828740	Covol tutorial.
1828740	1832740	Add tutorials point.
1832740	1835740	React all the cookies.
1835740	1839740	Overview. What can we get there?
1843740	1846740	History and evolution of Covol.
1846740	1849740	Environment setup.
1849740	1853740	Not really interested in that right now.
1856740	1860740	I know how to compile it.
1860740	1864740	What else can we do? Program structure.
1864740	1869740	Program, division, sections, paragraph, sentence, statements, and characters.
1869740	1872740	Nice.
1875740	1878740	Interesting.
1883740	1888740	This part here looks a little bit like assembler to me.
1888740	1893740	Specially with this move10 to WSID.
1894740	1897740	Okej.
1899740	1905740	You can tell that this tutorial is written by somebody that hates the world.
1911740	1915740	Is this the code?
1915740	1922740	Environment division, input, output, section, file control, select, file, and the organization is sequential.
1923740	1926740	This is interesting.
1926740	1929740	Am I going to write a program like this today?
1929740	1931740	We'll see.
1931740	1934740	Let me just do something funny now.
1934740	1937740	Damn you tutorial, you suck.
1937740	1940740	Basic syntax.
1940740	1945740	Who is going to remember this when you start learning something?
1945740	1951740	This is such a strange way to teach something.
1952740	1956740	Okej, nu vet jag vad det är.
1959740	1965740	Det här är att kolla en film och först kolla på alla kastor för att veta vilka personer existerar i den.
1965740	1969740	Det är inte hur vi presentar information.
1976740	1979740	Det här är inte en tutorial.
1979740	1983740	Det här är en teknisk data sheet.
1983740	1987740	Okej, let's go back, I give up.
1995740	1998740	Vad kan vi se?
2000740	2003740	Kanske kan vi se Cobaltborn.
2003740	2005740	Låt oss se på den här.
2005740	2008740	Vill du läsa hur man ska byta ditt första webbpagel?
2008740	2011740	Nej, jag vill läsa Cobalt.
2011740	2014740	Jag vill bara tacka till en av våra sponsor.
2014740	2016740	Tack, bror.
2016740	2019740	Du ska gå och checka dem ut, linken är i beskrivningen.
2019740	2023740	De är en kodingbubkamp och de kan läsa dig webbdevelopment i Iowa i veckan.
2023740	2026740	Jag har en fråga om hur man ska läsa Cobaltborn.
2026740	2031740	Jag var på en artikel som talade om USA-banknaderna i att använda Cobaltborn.
2032740	2034740	Jag har träffat nya människor för att läsa Cobaltborn
2034740	2037740	och hålla de äldre legacysystemen.
2037740	2042740	Jag frågar om Cobaltborn är en bra nyheter
2042740	2045740	och om man ska läsa det.
2045740	2048740	Jag tänkte att jag skulle ge min opinion om det.
2048740	2050740	Jag har aldrig hört om det.
2050740	2053740	Det är lite intressant.
2053740	2055740	Men du har två saker som jag vill säga
2055740	2058740	som kommer att gå mot dig.
2058740	2060740	Det är svårt.
2064740	2066740	Vi ska se vad det har att offer.
2078740	2080740	Det mest funnande i så länge
2080740	2082740	var det program som kalkulat.
2082740	2084740	Det var en multiplikation.
2085740	2087740	Jag har en tietäädivision
2088740	2090740	med en börs långa del.
2093740	2095740	Vi ska se om det funnande.
2099740	2105740	J rust Championsð
2105740	2108740	Du har en psycho三a
2108740	2112740	Ska vi se vad som händer om vi förberederar data-divisionen?
2112740	2114740	Ska programmen krascha?
2114740	2116740	Ja.
2118740	2120740	Jag tror att data-divisionen är nivån.
2120740	2123740	Jag tror att det här är vad de kallar en section.
2123740	2125740	Eller vad var det?
2126740	2129740	Vill vi ha en övergivning sådär?
2131740	2135740	Låt oss se om det var en section eller en paragraf eller något.
2135740	2138740	Det här var en division och det här var en section.
2138740	2141740	Så det här är egentligen en klipp eller en section.
2141740	2143740	Eller vad vill du säga?
2144740	2146740	En header för det här.
2147740	2149740	Jag tror att det betyder att det här...
2150740	2152740	Jag vet att det inte verkar, men...
2153740	2155740	Okej, det sker en sak.
2155740	2157740	Så det verkar en storlekare.
2157740	2159740	Det är egentligen att reservera människan.
2160740	2162740	Det sker en sak.
2162740	2166740	0-1, num 1, pick 9.
2166740	2172740	Jag tror att det här är hur jag reserverar människan.
2174740	2176740	Låt oss ta fram programmet.
2177740	2179740	För att...
2180740	2182740	För att...
2182740	2185740	För att ta fram tre nummer samtidigt.
2186740	2188740	Låt oss göra en lördekollegang här.
2188740	2191740	Kopie den här linjen, namn num 3.
2191740	2193740	Och den första nummeren, 1-1.
2193740	2195740	Vi har ingen avgång!
2195740	2197740	Okej.
2201740	2204740	Dritt nummer, num 3.
2204740	2206740	Multi-by, by.
2206740	2210740	By, num 3, resulta.
2210740	2212740	Resulta är resulta.
2212740	2214740	Låt oss se om det här verkar.
2216740	2218740	Syntexerat, undanvisade by.
2219740	2221740	Okej, jag kan inte göra det.
2221740	2225740	Jag tror att det betyder att multipla kan bara multipla två nummer.
2225740	2228740	Låt oss se vad som händer om vi googlar.
2229740	2231740	Kobol.
2235740	2238740	Kobol, multipla.
2242740	2244740	Wow, dessa webbplatser.
2245740	2247740	Låt oss se.
2248740	2250740	Multi-by, multipla nummer.
2250740	2252740	Format 1.
2252740	2254740	Literal 1, data item.
2254740	2256740	By, data item 2.
2259740	2261740	Okej.
2261740	2264740	Kan vi multipla tre saker...
2265740	2268740	...utan att ha en extra...
2268740	2270740	...inbetween variable?
2271740	2273740	Låt oss se om vi kan...
2275740	2277740	Jag ska experimentera lite här.
2278740	2280740	Låt oss ha resulta.
2283740	2285740	Låt oss kolla det här...
2285740	2287740	...inbetween.
2291740	2293740	Och utan att ge dig resulta här,
2293740	2295740	vi ger till inbetween.
2295740	2297740	Man kan ta ut det här.
2297740	2299740	Man kan multipla...
2299740	2301740	...num3
2301740	2303740	...by, inbetween.
2305740	2307740	Och ge det två resulta.
2308740	2310740	Kan vi kompilera det här?
2310740	2311740	Okej.
2311740	2313740	Det kompileras åtminstone.
2313740	2315740	Så vi multiplar två...
2315740	2316740	...byr tre...
2316740	2318740	...byr fyra.
2318740	2319740	Ja.
2319740	2321740	Det jobbade.
2321740	2323740	Men det här var lite annorlunda.
2323740	2325740	Vad händer?
2325740	2328740	Kan vi multipla in till nummer 1 här?
2330740	2332740	Jag vet inte om det verkar.
2333740	2335740	Två, tre, fyra.
2335740	2337740	Det har fungerat.
2337740	2340740	Det betyder att jag har överrott en av den här.
2343740	2345740	Det här är intressant.
2345740	2347740	Jag ska rejala programmet...
2347740	2349740	...och se om jag kan åka ut...
2349740	2351740	...för att bara ha resultat...
2351740	2353740	...och input.
2358740	2361740	Och idé är att jag alltid multiplar...
2361740	2363740	...det nästa input...
2363740	2366740	...med resultat och ta den till resultat.
2366740	2368740	Så...
2368740	2369740	Först här...
2369740	2371740	...jag kommer att läsa input.
2371740	2373740	Det är kanske en reserve ord...
2373740	2375740	...för att jag frågar det...
2375740	2377740	...för att det inte är vit.
2377740	2378740	Så...
2378740	2380740	Okej, jag kan inte läsa input.
2380740	2382740	Så jag kommer att läsa...
2382740	2384740	...nummer.
2384740	2386740	Ah, num, då.
2387740	2389740	Num, num, num.
2389740	2391740	Så jag alltid läser input...
2391740	2393740	...till den nummervarivalen.
2394740	2396740	Och direkt efter...
2396740	2398740	...jag...
2398740	2400740	...multiplar det med resultat...
2401740	2403740	...och ta den till resultat.
2406740	2407740	Och...
2407740	2408740	Där går vi.
2408740	2409740	Där går vi.
2409740	2411740	Och då kan vi ta resultat.
2411740	2413740	Se hur det fungerar.
2414740	2416740	Två, tre, fyra.
2416740	2418740	Ha, nej.
2419740	2421740	Jag frågar, varför?
2423740	2424740	Ah...
2425740	2427740	...att ta nummervarivalen...
2427740	2429740	...och ta resultat.
2429740	2431740	Det kanske är...
2431740	2433740	...att jag tror att vi...
2433740	2435740	...hade ett switch tidigare.
2435740	2437740	Jag frågar om det har en effekt.
2441740	2442740	Vi ser.
2443740	2445740	Två, tre, fyra.
2445740	2446740	Nej.
2446740	2448740	Okej, det gör lite mer mer.
2448740	2451740	Så vad har det gjort tidigare när vi hade alla dessa nummer?
2451740	2454740	Jag trodde att det här var en ekonomi av vad vi gjorde...
2454740	2456740	...i början.
2458740	2460740	Kanske gjorde vi faktiskt överrättat här...
2460740	2463740	...men det har hänt med samma effekt...
2465740	2468740	...för nummer ett var två.
2468740	2470740	Jag är inte säker.
2474740	2476740	Så här nummer ett blir två.
2476740	2479740	Nummer två blir tre.
2479740	2481740	Och vi tar det.
2481740	2483740	Det här blir sikt här.
2484740	2486740	Och vi gör det här.
2487740	2489740	Jag är inte säker vad det här displayet är...
2489740	2490740	...att exakt exakt.
2490740	2493740	Det kanske inte är möjligt att göra vad jag gjorde där.
2499740	2500740	Okej.
2501740	2503740	Låt oss inte försöka det igen...
2503740	2504740	...eller ska vi?
2504740	2506740	Det är ganska skönt.
2507740	2509740	Låt oss ta det ibaka.
2510740	2512740	Jag är ibaka bara påbörjande i länge nu...
2512740	2514740	...och försöker försöka få ut vad det är som det är.
2516740	2517740	Så det verkar.
2517740	2518740	Två, tre, fyra.
2518740	2519740	Det är 24.
2520740	2523740	Och kan jag gå ut med att inte använda nummer tre?
2523740	2524740	Låt oss se.
2524740	2525740	Låt oss använda nummer en här igen.
2525740	2527740	Nej, vi kan definitivt göra det.
2527740	2529740	Men låt oss använda den här.
2531740	2535740	Och sen kan vi reusesa nummer en.
2536740	2537740	Nummer en.
2543740	2545740	Nej, vi har råd det till där.
2547740	2550740	Så jag vill skriva det till resultatet där.
2552740	2555740	Okej, nu kommer jag inte att skriva det.
2555740	2558740	Nu kommer jag inte att skriva en ideell kod.
2558740	2561740	Jag är bara att följa runt lite.
2564740	2567740	Jag har lost track av vad jag tänkte där.
2568740	2570740	Men jag ville gå ner.
2570740	2571740	Jag vill bara ha...
2571740	2574740	...så jag tar en input och multipliserar den med resultatet.
2574740	2575740	Jag tar en input igen.
2579740	2581740	Resultatet börjar med 0.
2581740	2584740	Så jag kan inte, obviously, multipla den där.
2584740	2587740	I the beginning I need at least two numbers to do that.
2589740	2592740	Så let's see if we can get away with two and still have three.
2594740	2595740	Så that makes sense.
2595740	2597740	So we have to have at least two numbers.
2598740	2600740	There are none zero.
2601740	2603740	Before we multiply.
2603740	2606740	And if we multiply with one of them there is zero.
2606740	2608740	It will always be zero, obviously.
2609740	2612740	So let's see if we multiply this into result.
2612740	2619740	Not wait a minute.
2621740	2625740	I feel like we should be able to do this in a smart clever way.
2629740	2632740	If the first one we put into the result.
2636740	2639740	Or what is it called in multiplication?
2639740	2640740	The product.
2643740	2656740	And let's look up with what are parts of multiplication called.
2661740	2663740	There are the multipliers.
2663740	2664740	Recall that.
2664740	2666740	They are called factors.
2667740	2670740	So I'm going to have a factor.
2670740	2673740	And I'm going to have a product.
2675740	2678740	And the product is actually this one.
2680740	2684740	And then on the first input we input it into the product.
2684740	2688740	Because one multiplied by one is always one.
2688740	2691740	Or one multiplied by itself.
2691740	2694740	The first number is always the product.
2694740	2696740	If I only have one number.
2696740	2699740	Then the second number we put in the factor.
2699740	2704740	And then we multiply the factor with the product.
2704740	2706740	Giving it a new product.
2706740	2712740	Then we overwrite the factor and we do this thing again.
2713740	2716740	Now I think we can run a program.
2716740	2718740	At least that's what I'm hoping for.
2718740	2720740	Result undefined.
2720740	2722740	We need to print the product.
2725740	2727740	2, 3, 4.
2727740	2728740	Yes!
2728740	2729740	That worked.
2730740	2733740	So now I understand this a little bit better.
2733740	2736740	But I would like to have a loop here.
2736740	2740740	So that we can enter how many numbers we should multiply.
2740740	2744740	Let's see if there is such a thing as a loop in cobalt.
2747740	2749740	Loop statements.
2750740	2751740	Nice.
2751740	2753740	Perform through.
2753740	2757740	Perform through is used to execute a series of paragraphs
2757740	2761740	by giving the first and last paragraph names in the sequence.
2763740	2764740	Okay.
2764740	2769740	After executing the last paragraph the control is returned back.
2769740	2770740	Okay.
2770740	2772740	Inline perform.
2772740	2778740	Statements inside the perform will be executed till end of the paragraph.
2779740	2781740	And perform is reached.
2781740	2782740	Syntax.
2782740	2786740	The following syntax is a syntax of inline perform.
2788740	2789740	Okay.
2790740	2792740	Out of line perform.
2792740	2794740	Here a statement is executed in one paragraph.
2794740	2798740	And then the control is transferred to other paragraph or section.
2798740	2799740	Okay.
2799740	2803740	Perform paragraph one through paragraph two.
2803740	2805740	Okay, interesting.
2805740	2812740	They have a really interesting way of giving away execution context in this language.
2812740	2813740	Okay.
2813740	2815740	Perform display and perform.
2815740	2816740	Okay.
2816740	2819740	This looks a little bit like what we want to do.
2819740	2822740	I guess these are paragraphs.
2823740	2824740	No.
2824740	2833740	Hmm.
2833740	2836740	A para is the first paragraph, I guess.
2836740	2839740	Perform display in a para.
2839740	2841740	And perform.
2841740	2844740	Perform see para through e para.
2844740	2848740	I guess it just runs this, this and that.
2848740	2849740	Okay.
2849740	2851740	This is interesting.
2851740	2853740	Hmm.
2855740	2856740	Hmm.
2856740	2857740	Okay.
2857740	2860740	This looks more like something we should want to be doing.
2860740	2865740	In perform until a paragraph is executed until a given condition becomes true.
2865740	2868740	Sounds like a while loop.
2868740	2870740	Or a for loop.
2870740	2879740	With test before is a default condition and it indicates that condition is checked before the execution of statements in a paragraph.
2881740	2883740	Okay.
2884740	2888740	I think that I want to have two variables here.
2888740	2892740	One call step and one call steps.
2892740	2895740	I'm writing zero one here without knowing why.
2895740	2900740	But the idea is that I want to have a number count up until another number.
2900740	2905740	So imagine a for loop where you have i and length.
2905740	2913740	So step is going to be this one, peak nine.
2913740	2916740	I think that is a single digit number.
2916740	2919740	And the value of that.
2922740	2926740	I don't know, but I want to set it to zero and increment it.
2926740	2931740	So zero one and is step last.
2931740	2938740	Let's call it step current to be even more clear what I want to be doing.
2938740	2944740	Pick nine value zeros.
2944740	2951740	But I want this step last to be contained nine.
2955740	2962740	I guess before we continue too long here we should probably see if we can put a number in step current.
2962740	2965740	Or step last.
2965740	2972740	Oh, I could ask how many numbers I want to multiply.
2972740	2985740	So let's add a statement here and say how many numbers should be.
2985740	2990740	Let's just ask how many numbers that's easier.
2990740	2996740	And we accept that in the step last.
2996740	3005740	Then let's just write out display.
3005740	3011740	We will multiply.
3011740	3016740	Can I write that numbers.
3016740	3020740	And the step last will be here.
3020740	3024740	Is that how you concatenate things.
3024740	3027740	Oh, three.
3027740	3031740	Oh, we will multiply four numbers that works. Nice.
3031740	3036740	Okay, and we know the rest of the program works, but now how to use the for loop.
3036740	3043740	I think let's output also a step.
3043740	3047740	So I'm going to say.
3047740	3050740	Enter.
3050740	3056740	And then the step current.
3056740	3058740	Enter.
3058740	3061740	Number.
3061740	3063740	Step current.
3063740	3068740	And then slash off step last.
3069740	3072740	One digit.
3072740	3076740	With no advancing.
3076740	3084740	And see what happens.
3084740	3086740	Okay, good.
3086740	3090740	We are at step one there, but we call it zero because it's zero based.
3090740	3092740	Okay, interesting.
3092740	3097740	We had an extra line here we don't need.
3097740	3100740	And I guess can we concatenate this immediately.
3100740	3103740	Can we add a one to the step current here.
3103740	3105740	Like this in COBOL.
3105740	3107740	Let's try it out.
3107740	3112740	No, I cannot.
3112740	3115740	So let's see.
3115740	3117740	What should I do here?
3117740	3119740	Should I?
3119740	3126740	The cheap way of doing that is to just start the step at one.
3127740	3134740	Okay, let's see how I assign a variable in COBOL.
3134740	3143740	Assign variable in COBOL.
3143740	3148740	Okay, this is going to be interesting.
3149740	3157740	Okay, this is not just going to be too long declaring data.
3157740	3162740	Actually, let's see, war loop in COBOL.
3162740	3166740	How what we will learn from this loop statement.
3166740	3168740	Okay.
3168740	3170740	Perform times looks interesting too.
3170740	3175740	Let's look at perform times.
3175740	3180740	I guess if you write this perform a paragraph five times.
3180740	3187740	If we can replace this with our step last.
3187740	3189740	Then we should be able to run this.
3189740	3198740	I guess we need to first paragraph the multiplication part.
3198740	3201740	So let's create a paragraph here.
3201740	3204740	Is that supposed to be in the procedure division?
3205740	3208740	Will it always start with the first one?
3208740	3212740	Actually, let's run add a paragraph here.
3212740	3214740	See what happens.
3218740	3220740	What happens if we just do this?
3220740	3223740	Will that mean that program just stops immediately?
3225740	3227740	Yes.
3227740	3229740	So I guess it always starts.
3229740	3232740	This looks probably like a go to statement.
3232740	3234740	Might that be so.
3240740	3242740	I think it is.
3242740	3244740	So...
3248740	3255740	So I was thinking if I put this in a paragraph.
3255740	3263740	As I say it is set up para.
3263740	3266740	And it displays how many numbers.
3266740	3269740	And it accepts the step last.
3269740	3273740	And it says how many numbers we are going to accept.
3273740	3277740	Could it end a paragraph two somehow.
3277740	3281740	Stop run stops the entire program.
3285740	3295740	So I want to look for something that goes to set up para.
3295740	3297740	Immediately here.
3297740	3299740	Not sure this is a good way to write it.
3299740	3302740	But my thinking is I want to have the entry point in the top.
3302740	3305740	And I want to set up the structure of the program.
3305740	3307740	So basically something like this.
3307740	3310740	Run set up para.
3310740	3314740	Then I want to do that thing that's called.
3315740	3318740	Perform something para five times.
3320740	3330740	So if imagine that this was called the calculation para.
3335740	3340740	I could remove this.
3345740	3347740	That's the idea at least.
3348740	3354740	And then I would say perform calculation para.
3357740	3363740	And I would say step last times.
3363740	3370740	So if we run this as many times as you inputted here.
3371740	3378740	And then in the end I would just say display result is product.
3378740	3381740	So this way we will start here.
3381740	3383740	We will set it up asking for the number.
3383740	3385740	We run this five times.
3385740	3388740	And then if we display the product.
3388740	3391740	So it looks like there are definitely things missing here.
3391740	3393740	We have the stop run.
3393740	3395740	Which I'm not sure how it works.
3395740	3399740	Let's look a little bit more here and see if we can have some hints.
3401740	3405740	What does the stop run seems to be stopping the program completely I think.
3407740	3409740	I would like to learn more.
3411740	3413740	Here we go.
3416740	3419740	So this means go to setup para.
3419740	3421740	And I'm going to call this the init para.
3421740	3424740	Even though I probably don't need a name here.
3425740	3428740	I think before we continue too long.
3428740	3431740	Let's just see if we got anything there.
3431740	3433740	Calculation para undefined.
3434740	3436740	But it is here.
3441740	3442740	Maybe.
3443740	3446740	No I don't know at all what's going on.
3447740	3449740	I didn't expect that.
3449740	3450740	That's interesting.
3450740	3452740	Line 27.
3453740	3456740	Oh this is not the definition.
3456740	3458740	It complains.
3460740	3462740	What does that mean?
3462740	3464740	Do I need to define the paragraphs?
3467740	3469740	In some other way.
3470740	3471740	This.
3472740	3475740	Looks like they just write the paragraph.
3477740	3480740	And then here they go to be para.
3481740	3483740	They do say with a dot.
3484740	3486740	But we do that too there.
3488740	3490740	I can't really see the difference.
3491740	3493740	I have here.
3500740	3502740	Go to setup para.
3502740	3503740	No.
3508740	3510740	What does this mean?
3510740	3513740	In hello world in paragraph setup para.
3513740	3515740	We had these two errors.
3515740	3517740	Is that what it means?
3525740	3528740	I think I made too many differences here.
3528740	3530740	In the same time.
3530740	3532740	Let's scroll this back.
3532740	3534740	I know exactly what I want.
3534740	3537740	Let's get the program back into a working state.
3537740	3540740	So let's do one thing at a time.
3540740	3543740	Or a somewhat working state at least.
3543740	3544740	Or.
3544740	3546740	One, two, three.
3546740	3547740	Okay.
3547740	3550740	So the program kind of works.
3550740	3552740	But we don't have that number thing.
3552740	3553740	So.
3555740	3557740	What if we.
3560740	3562740	Add a stop run here.
3567740	3568740	Okay.
3568740	3569740	That's good.
3569740	3572740	But before the stop run, I want to jump down here.
3572740	3576740	I'm actually going to use the exact same context they use here.
3576740	3578740	So they have a para and b para.
3578740	3579740	Not sure.
3579740	3581740	I thought I could name this anything I want.
3581740	3583740	But let's add a para in the top here.
3583740	3584740	See what happens.
3587740	3588740	Okay.
3588740	3590740	That didn't destroy anything.
3590740	3594740	So let's call this the B.
3594740	3595740	B para.
3597740	3599740	Let's see if it was destroyed.
3599740	3600740	No.
3602740	3603740	No.
3603740	3605740	Let's see if it was destroyed.
3605740	3606740	No.
3606740	3608740	But in the end.
3608740	3610740	Let's go to.
3610740	3612740	Was that how it's called?
3613740	3614740	Sure.
3619740	3621740	So unconditional go to.
3623740	3627740	So in the end here I want to go to be para.
3633740	3634740	Ja.
3634740	3635740	Is.
3635740	3638740	Can I choose any name I want here?
3638740	3641740	Because I want to do this with the calculation para.
3641740	3643740	Calc para, we call it.
3643740	3647740	Because I'm not sure I'm allowed to call this whatever I want to.
3647740	3649740	Even though I thought so.
3654740	3656740	Yeah, that seemed to work.
3656740	3658740	Can I call this init para?
3658740	3659740	As I wanted to.
3659740	3661740	Or main para maybe.
3662740	3663740	Without breaking.
3670740	3672740	That seemed to work.
3674740	3676740	So if I now.
3692740	3693740	If I now.
3693740	3695740	This is the thing that stops it.
3696740	3698740	If I don't have this.
3699740	3702740	Will I be able to display something else here?
3702740	3704740	Will it jump back up here when it's done?
3707740	3708740	Let's try this out.
3710740	3711740	Woo!
3711740	3712740	We call it.
3713740	3714740	Two numbers.
3714740	3716740	One, two, three.
3716740	3717740	No.
3717740	3720740	It just went down here and.
3720740	3721740	Stopped.
3721740	3725740	So I can't jump back up without explicitly.
3726740	3728740	Telling it to I guess.
3732740	3736740	Does that go for the perform too?
3744740	3747740	This looks like something we want.
3748740	3752740	I'm sure we're doing too much in the same time now.
3752740	3755740	But perform calc para.
3757740	3758740	Väring.
3761740	3765740	One until from one by one until.
3765740	3767740	Okay, this looks like a for loop.
3769740	3771740	So I guess this will be step current.
3777740	3778740	Från 1.
3779740	3780740	By 1.
3780740	3782740	Untill step current.
3783740	3784740	Equals.
3784740	3785740	Step last.
3786740	3787740	Okay.
3789740	3792740	Let's remove a bunch of bullshit here.
3800740	3801740	And see what happens.
3801740	3803740	I'm gonna move this up here too.
3803740	3804740	I have no idea.
3804740	3806740	It's probably breaking so many ways.
3807740	3808740	How many numbers?
3808740	3809740	Three.
3809740	3811740	And the number one out of three.
3812740	3813740	One.
3814740	3815740	Two.
3815740	3816740	Three.
3817740	3818740	Four.
3819740	3820740	Hmm.
3821740	3824740	There was something going on here that kind of worked to be honest.
3827740	3829740	We don't need a second number.
3832740	3833740	And.
3834740	3841740	But we do have a problem here that the first result needs to be stored in the previous one.
3841740	3843740	Or in the factor.
3850740	3852740	So how can I do that in for loop?
3852740	3854740	I don't think I ever did that.
3861740	3862740	Hard.
3863740	3866740	I don't want to write this with an if statement to be honest.
3868740	3872740	What if I could push all these numbers to an array?
3874740	3877740	Is that even a thing in cobalt?
3878740	3879740	Cobal.
3881740	3882740	Array.
3885740	3886740	Array table concept.
3886740	3887740	This looks hard.
3888740	3889740	Ooh.
3889740	3890740	Ooh.
3901740	3902740	Okej.
3907740	3910740	I think it may be not that hard.
3910740	3912740	I'm very unused to this syntax.
3914740	3915740	But.
3916740	3924740	I'm not sure if I can write this right now without being completely confused on every step of the way.
3928740	3930740	Let's see what this says.
3931740	3933740	Cobal arrays or tables.
3934740	3935740	Single dimensional arrays.
3935740	3940740	Arrays are data structures that are used to simplify coding and improve processing efficiency.
3940740	3945740	The primary uses of arrays are to define a series of similar like format i input and output.
3945740	3946740	Okej.
3946740	3947740	I know this.
3947740	3948740	Deklaring an array.
3948740	3951740	Arrays assault cobalt data items.
3951740	3953740	Must be declaring a data division.
3953740	3960740	But are distinguished from scaler unsubscripted data items by use of the occurs class in their data definition.
3961740	3967740	Arrays may be declared for elementary or group data items at level 02 to 49.
3968740	3973740	To declare an array of elementary data items use the class occurs int num times.
3974740	3979740	In the data definition int num is any positive integer specifying the number of elements in the array.
3980740	3985740	Daily temp 05 temp occurs 25 times pick 999.
3986740	3987740	Okej.
3987740	3992740	I don't know what this first number means but I think that is how to define it.
3993740	3998740	This looks more like something I am interested in.
4002740	4008740	What this is number is that just like in the order it executes or something.
4009740	4011740	Just like in basic.
4022740	4034740	Okej, this looks interesting too.
4035740	4042740	So I am thinking that I should be able to get away with this.
4043740	4050740	So instead of factor I am going to have factors.
4051740	4053740	And what is temp?
4056740	4058740	What does it mean temp here?
4060740	4062740	It occurs 25 times pick.
4062740	4064740	So I guess this is we have two instances of temp.
4064740	4066740	But why do we need daily temp?
4067740	4068740	Okej.
4068740	4074740	This example occurs an array named temp that contains 24 elements data items each of pick 999.
4074740	4082740	So pick 999 I think is a number that has 3 respots that can contain up to number 9 in each of them.
4082740	4087740	And it's referenced like this temp 1 temp 24 Okej.
4087740	4093740	Daily temp is not itself an array but the group data item 72 characters long.
4093740	4096740	24 times 3 Okej.
4096740	4100740	So that's 24 there and the 3 bytes are basically I guess.
4101740	4106740	And it's 0,2 to 49 level data frame can contain an occurs clause.
4106740	4111740	So I guess the daily temp we probably don't need it.
4111740	4115740	But I am going to call it factors.
4117740	4119740	And there is a dot there right?
4119740	4120740	Yeah.
4120740	4124740	And I am going to call this factor.
4124740	4130740	But I need to be able to say how I need this to be variable.
4130740	4136740	Because I input the number dynamically in my program.
4136740	4139740	And I don't know how to do that yet.
4139740	4142740	I guess I could just take a very high number.
4142740	4144740	I feel it with the ones.
4144740	4148740	But it is a little bit dumb.
4148740	4151740	But I am pretty dumb when I write cobalt.
4151740	4153740	So I must admit.
4158740	4164740	So I am not sure how to do this in a way that I am not going to get too confused.
4164740	4167740	I am literally still subscript here.
4167740	4169740	Well...
4171740	4174740	Before I do too much maybe I should just try this out.
4174740	4177740	So let's put a 9 here.
4181740	4183740	Should I do this?
4184740	4186740	And put values 1.
4186740	4188740	Can I do that?
4188740	4189740	The idea is here.
4189740	4192740	Like if I have a ton of factors in the program.
4192740	4194740	Basically multipliers.
4194740	4196740	And the rest of them is 1.
4196740	4199740	It doesn't matter if I multiply them all in the end of the program.
4199740	4202740	I know it's really really bad.
4202740	4204740	But I also want to see if this works.
4204740	4206740	Let's compile this and see what happens.
4206740	4211740	I don't even know if this is at all going to work.
4213740	4216740	Okej, the setup of the compilation seems to work.
4218740	4220740	So let's do something more then.
4220740	4223740	We can remove the factor.
4223740	4226740	So now the program should probably break, I hope.
4226740	4228740	No.
4229740	4232740	Oh, we are not using my factor right now.
4232740	4234740	I guess...
4236740	4242740	What I should do here is accept this number into the factor step current.
4247740	4249740	Not sure if this works.
4249740	4252740	Let's display what we did too.
4253740	4255740	Stored.
4257740	4261740	And then factor step current.
4261740	4263740	Three.
4263740	4265740	We will multiply three numbers.
4265740	4267740	Two.
4267740	4268740	Three.
4268740	4269740	And four.
4269740	4271740	Whoa!
4271740	4274740	That was actually almost working.
4277740	4280740	We have some of by one error here.
4284740	4286740	I think...
4286740	4288740	Can we do this?
4288740	4290740	I think...
4290740	4292740	Can we have...
4292740	4294740	Put this like this.
4294740	4296740	Step current is...
4296740	4299740	Until it's less or equal.
4301740	4304740	Okej, let's solve this later.
4304740	4306740	They were off by one error.
4306740	4311740	But in the end here, I want to multiply all the factors.
4318740	4320740	Kan we do that here, maybe?
4320740	4322740	Perform until this.
4322740	4326740	It looks like until number data can be used as a subscript.
4326740	4328740	I don't know what subscript is about.
4329740	4334740	It looks like we can multiply things here.
4348740	4350740	I'm not sure.
4350740	4353740	I'm ready to do this just yet.
4358740	4362740	I first want to get a good concept of what this program does.
4362740	4364740	So let's remove...
4365740	4368740	Let's print something out there in the product.
4368740	4370740	No.
4372740	4375740	Maybe it was easy to do the thing we did before.
4375740	4377740	I guess if the first number is one.
4378740	4381740	Okej, I guess I can cheat a little bit here.
4382740	4385740	If I store the first result as one.
4386740	4388740	I don't need this array.
4390740	4392740	So I'm going to scroll back a little bit here.
4393740	4395740	I fake it.
4396740	4399740	So here now we have the factor and the product.
4400740	4402740	And the product...
4402740	4405740	It's going to start out by being one.
4407740	4410740	I think that is possible.
4411740	4416740	Then every time we accept the number into the factor.
4417740	4421740	We multiply the factor with the product.
4423740	4425740	I think that should work.
4426740	4429740	Where is the multiplication step?
4429740	4431740	Step.
4432740	4434740	Let's scroll back.
4439740	4440740	There we go.
4440740	4442740	So accept the factor.
4442740	4445740	And then we add the factor to the product.
4445740	4447740	So if the product starts at one.
4448740	4451740	Then we go down here and we accept the factor.
4451740	4453740	Then we store the factor.
4453740	4456740	We multiply the factor by the product into the product.
4456740	4458740	Then we do that again and again.
4459740	4462740	For all until we reach the step last.
4462740	4464740	I think we have something going here.
4467740	4468740	How many digits?
4468740	4469740	Five.
4469740	4471740	No, let's start with four.
4472740	4473740	Enter number one of four.
4473740	4474740	Two.
4474740	4475740	Enter number two of four.
4475740	4476740	Three.
4476740	4477740	Enter number three out of four.
4477740	4478740	Four.
4478740	4480740	Result is 24.
4480740	4481740	Wow!
4481740	4483740	A program kind of works.
4483740	4485740	But it has an off by one error.
4485740	4487740	So let's fix that.
4487740	4490740	Then I think the first course in COBOL is complete.
4490740	4493740	Might be the world's shittiest COBOL program to bonus.
4493740	4495740	But I'm pretty proud of myself still.
4495740	4500740	I only took almost two hours to make a shit program.
4500740	4505740	So how to solve this off by one error.
4505740	4509740	I guess we could have, we need a minus somewhere.
4511740	4512740	Or.
4512740	4517740	A step last.
4517740	4519740	Why is a step current?
4521740	4522740	I guess.
4526740	4528740	If this was while.
4531740	4533740	No, that doesn't work.
4533740	4535740	Let's see what options we have here for looping.
4537740	4539740	Loop statements.
4540740	4545740	We have the perform until.
4547740	4549740	Wasn't there something else?
4549740	4551740	Perform times is pretty interesting.
4555740	4557740	Let's try this.
4559740	4563740	Perform calc step last times.
4570740	4571740	Two.
4571740	4572740	One.
4572740	4573740	Two.
4573740	4574740	Okay, that worked.
4574740	4577740	But we have to update the step current.
4579740	4580740	Mm-hm.
4580740	4581740	And I guess.
4584740	4586740	We could do that.
4589740	4592740	By just adding to step current here.
4594740	4595740	Add.
4596740	4597740	Add.
4598740	4599740	One.
4599740	4600740	Two.
4600740	4601740	Step current.
4604740	4606740	Let's try that out.
4607740	4608740	Three.
4608740	4609740	One.
4609740	4610740	Two.
4610740	4611740	Three.
4611740	4612740	Ah, look at that.
4612740	4613740	That worked.
4613740	4614740	COBOL is really good.
4614740	4617740	I have some fluency in COBOL now.
4617740	4619740	That was pretty satisfying.
4619740	4622740	Even though this whole program is quite silly.
4622740	4624740	I like it.
4624740	4626740	I feel accomplished today.
4626740	4629740	Let's see if there is anything we should clean up.
4629740	4631740	Let's change the author.
4632740	4633740	This method.
4635740	4636740	Yeah.
4637740	4639740	Example program using.
4642740	4643740	Perform.
4643740	4644740	We are using.
4645740	4646740	Accept.
4646740	4648740	And we are using.
4649740	4650740	Times.
4655740	4656740	Kollekt.
4656740	4658740	A number of user.
4658740	4660740	The finable integers.
4661740	4663740	Finable integers.
4663740	4664740	And.
4665740	4667740	Multiply them.
4668740	4669740	With.
4670740	4671740	With.
4671740	4674740	Low memory footprint.
4675740	4676740	I can't write.
4676740	4677740	I'm having so much fun.
4677740	4679740	Low memory footprint.
4679740	4682740	And return the result.
4682740	4683740	No display.
4685740	4686740	And this.
4686740	4688740	Display the result.
4688740	4689740	Data division.
4689740	4690740	Step current.
4690740	4691740	Step last.
4691740	4692740	Fantastic.
4693740	4694740	Okay.
4695740	4696740	Pretty nice.
4696740	4697740	I must say.
4699740	4701740	Wait, I need to upload this to GitHub.
4704740	4705740	East.
4706740	4707740	Wacka the whack.
4707740	4708740	Det.
4713740	4715740	My first global program.
4717740	4718740	We call it.
4719740	4720740	Calculate.
4720740	4721740	Like.
4722740	4723740	Bank.
4723740	4724740	CBL.
4729740	4730740	There we go.
4731740	4732740	We are public.
4733740	4735740	Gonna leave this link in the subscription.
4735740	4737740	I mean in the description.
4739740	4740740	I kinda like it.
4740740	4741740	I'm.
4742740	4745740	Happy that you took time and looked at how to learn COBOL.
4746740	4748740	The world is our oyster now.
4748740	4751740	Let's go get those banks and get a fat paycheck.
4752740	4753740	For the summer.
4753740	4754740	Alright.
4754740	4755740	Thanks.
4755740	4756740	See you later.
