start	end	text
0	6000	Welcome to a most interesting talk, I'm sure, about e-max org mode.
6000	13000	It's difficult to say what exactly e-max org mode will do for you
13000	20000	for visa to list all the things it doesn't do, because that's a considerably smaller list.
20000	24000	So let's welcome Professor Dominik.
24000	27000	Thank you.
27000	33000	Hello, my name is Karsten Dominik.
33000	38000	I'm a professor at the University of Amsterdam and also at the University of Meimingen.
38000	42000	And I was invited here today to talk about a little software project.
42000	45000	I would like to start by saying that I'm not a software person.
45000	47000	I'm not a programmer. I'm not an IT person.
47000	51000	I'm really a scientist and I do this kind of programming as a hobby.
51000	56000	Most of the coding for this project has taken place on a train, on the commuter train.
56000	62000	I do it in a train every day for one hour and it takes time to write some programs.
62000	65000	So that's what I'm doing.
65000	71000	And I want to talk to you about e-max org mode, which is a system to track projects,
71000	78000	to write down notes, to draft papers and all of that using plain text files.
78000	83000	So really as simple as possible, at first I think it sounds really archaic
83000	87000	where people wonder why should we actually leave all these fancy sexy programs
87000	90000	which we have on our computers and for which we have paid big money.
90000	93000	And just show them away and use a much simpler system.
93000	98000	But I would like to try today to show you and maybe convince you
98000	104000	that this is actually a viable approach which can be useful for many different things.
104000	109000	I told you that I'm a teacher at the University and I'm used to getting questions all the time.
109000	115000	That's what my students do, so please feel free to ask me any questions at any moment during the talk.
115000	118000	If I go too fast or too slow or something like this.
118000	122000	First of all I have to show this slide I was told just for real reasons.
122000	128000	This talk is being recorded and that means whatever you say can and will be used against you.
128000	132000	So be warned.
133000	136000	It's already starts by the name.
136000	138000	It's a really strange name for our program I guess.
138000	142000	And I often get this question why is it such a silly name?
142000	144000	What is the reason for this?
144000	148000	Well the org is just because it has to do with organizing.
148000	156000	What this program tries to do is help organize many things for normal life and also for life as a scientist.
156000	162000	And mode, it's called alt mode because it's not really a standalone program.
162000	167000	It's a mode, an editing mode of the e-max editor.
167000	170000	I'm not sure if everybody knows what I'm talking about here.
170000	172000	So let me just back up a little bit.
172000	173000	Okay, okay, okay.
173000	174000	One step back.
174000	175000	What is e-max?
175000	178000	Does everybody know what e-max is?
178000	179000	Really?
179000	181000	Nobody says no?
181000	184000	Well, okay, somebody says no.
184000	189000	E-max is one of the oldest editors in the computer world.
189000	193000	I think it has existed for decades.
193000	199000	It was written by Richard Starman, which is the founder of the Free Software Foundation.
199000	206000	And so it's really started at the beginning of everything that is open source and free software that we are using now very often.
206000	211000	And also our institute, for example, we are using lots of open source and free programs these days.
211000	213000	So e-max is an editor.
213000	214000	What is it?
214000	215000	Okay.
215000	219000	It's an editor for text files.
219000	228000	And while it does have a nice window environment that you can use the mouse to execute commands, it's really at its best with keyboard commands.
228000	231000	It's a very efficient and fast program to work with.
231000	245000	Once you have learned all those keys, which initially is always a big hurdle, but this time you find out that this is actually the best way and actually also better for your hands in order to avoid illnesses like RSE or something like this.
245000	247000	Very important is that e-max is self-documenting.
247000	259000	So any programs which run in e-max are written in a way that every function, every variable, everything in the program is done is documented internally and you can access this documentation at any point.
259000	260000	So that's automatic.
260000	262000	There are basically no undocumented programs in e-max.
262000	264000	It's automatically built in.
264000	266000	It's highly customizable.
266000	268000	We can really change whatever you want.
268000	276000	And this is really why I started working with this program because I like things to work the way I want them.
276000	284000	I know exactly what I want and I like programming environments where I can change everything in the way how I want to have it.
284000	286000	And it's highly expandable.
286000	298000	So that means you can, well, not easily, but if you know how to write this code, which is a programming language which is being used for the extensions in e-max, you can write that and you can extend it.
298000	303000	And e-max has nodes and this is where the name alt-mode comes from.
303000	312000	It has minor nodes and major nodes and these are just sort of little packages which change the behavior of the editor in a certain way.
312000	326000	For example, if you are programming in some language, for example in R, there is a special mode in e-max which can highlight the R commands and the syntax will colorize them or give you special editing commands for this.
326000	334000	There are also big packages which you can implement in this way and alt-mode is one of those packages which works like this.
334000	336000	So alt-mode is a major mode for e-max, not a minor mode.
336000	338000	A minor mode changes some detail.
338000	342000	For example, we automatically want lines to be wrapped around while our type are not.
342000	344000	This is a minor mode.
344000	348000	A major mode is really something big.
348000	354000	Well, and then the next question is why would one want to use an editor as a base for an organization program?
354000	360000	That's, I think, a very good question and one which has to be answered.
360000	378000	One reason is that where I work, certainly half of the people use e-max because many of us write programs, many of us write papers in latex for example and e-max is really powerful to do this kind of stuff so many of my colleagues do know how to use e-max.
378000	386000	But what is even more important is that this editor is actually an ultra-portable platform for running code.
386000	392000	It's almost like a Java virtual machine because e-max has been ported to pretty much every system.
392000	394000	It runs on some mobile phones.
394000	404000	It runs on Windows computer, on Windows, on Macintosh, on the VMS so you can just pick your system and there is an e-max implementation for this.
404000	410000	And that means that anything which you program for e-max will work on all these systems.
410000	422000	So if your IT department now decides that you all have to throw away your Windows computer and use Macintosh, e-max will still work on that system and you can continue to use these programs.
422000	431000	Another important thing is that there are many other useful systems which run inside e-max for example e-mail clients, news group leaders, there's even a web browser inside there.
431000	437000	And that makes a very good environment for integrating an organization program with these other tools.
437000	448000	So you don't have to rely on a company like Apple which gives you sort of a Catholic experience on a computer where they determine everything for you, how you should be using it.
448000	452000	But you can just do it with a system like this.
452000	453000	Okay?
453000	460000	So I hope that makes clear why Alt-Mode has this stupid name Alt-Mode.
460000	465000	The next thing is that this system is using text files, really plain text files.
465000	471000	So this is not rich text in the way that you have bold text and italic text.
471000	477000	This not electricity, it's really like text files like e-mails and the most basic kind of text.
477000	479000	And this is really so 1970s.
479000	481000	So why should one use this?
481000	483000	Why is that useful?
483000	487000	Well, I think it's extremely useful because it helps you to focus on content.
487000	492000	It stops you from playing with tools and it helps you to focus on content.
492000	502000	Of course, text files are really the only truly portable document format which exists because you were able to read text files a hundred years ago,
502000	506000	or maybe on the first computer scale more on that say 40 years ago or so.
506000	509000	And I'm sure you will be able to read text files a hundred years from now.
509000	514000	So this is really the basic format which will all exist.
514000	522000	And that also means that if you collect your organizational data, you are planning for a project and things like this,
522000	526000	you will never be locked into a particular proprietary software.
526000	533000	I mean, if you buy one of those programs, they all have their internal format and it's sometimes very hard to get your data back out.
533000	541000	You have spent two years entering things into this program and then you decide to use a different one and it's very difficult to actually switch over.
541000	550000	It would never happen if you had to use text files because you can always use them or get somebody to write a little part of a new which will turn one thing into another.
550000	553000	So this will, I think, is a very strong point.
553000	556000	And it can be easily processed with other tools.
556000	565000	There's many tools which can read text files, change them, make small edits, automatically create items in your project list and things like this.
565000	568000	So I do have another point here, yes.
568000	573000	Another interesting thing is that you can use version control to get a nice history of these files.
573000	581000	It's much more difficult, for example, with a Word file, to get a nice history to be able to look back when did I make this change in the past.
581000	586000	With simple text files, this is much easier and much more straightforward.
586000	593000	So this is why I like text files and why I really work with them as much as possible.
594000	603000	Okay, so let's try to start answering what Altmode does and what it is.
603000	606000	At its core, Altmode is just an outliner.
606000	609000	So I'm sure we all have worked with outliners.
609000	619000	You can use Microsoft Word as an outliner or there's an omni outliner, for example, and a good program, and things like this, which create outlines.
619000	624000	The meaning for this is that pretty much everything that has to be structured can be represented as an outline.
624000	629000	Altmode has some main nodes and then it has leaves and further children and things like this.
629000	639000	It's very useful for organizing your thoughts, for doing brainstorming and for putting everything into a nice structure which helps you to think about it in a structured way.
639000	646000	So that's what it is at its base, a simple outline represented in plain text.
647000	654000	And Altmode as an editing mode, it runs in an editor, so of course it can use and enhance all the features of this text editor.
654000	657000	And therefore it makes it very comfortable to work with this.
657000	667000	I will show you a little bit later, I will give you some examples how it makes it really easy writing things, in particular reorganizing it.
667000	673000	Very often if you sit in a meeting and you have to type nodes, it's just a brainstorming session everybody throws in a few ideas.
673000	679000	And then in the end you have to sit down and organize things, and the Altmode is really good for this.
679000	687000	Another point is that outlines of course are also the basic structure of the scientific output, which we have to produce as a scientist.
687000	695000	Because we have to write papers or books or presentations, and all of these things can be thought of as an outline.
695000	701000	Where you have headlines, major sections, and then you filter it down into the small details.
705000	710000	Okay, so the outline keys, what you use in order to work with the outline.
712000	723000	Most important ones in Altmode are the keys which let you change the visibility of the outline, because you can fold away leaves in the outline in order to get a better overview.
723000	731000	And then we have two commands really, one is to cycle the visibility of the subtree, and the other one is to cycle the global visibility.
731000	734000	That doesn't really mean much, so I'm going to show you what I mean by this.
734000	742000	So this is a view on a window in E-max, I hope you can see from the back, because it's implemented here, I think it's a little bit less sharp.
742000	749000	But what you see here is two headlines in an outline, and they are marked just by a single star here in front.
749000	754000	If it would be a sub-note and it would have several stars in front, that's what it looks like.
754000	759000	And the point which I'll show you behind that shows you that this is just a folded down.
759000	762000	I'm sure you have seen something like this also in other programs.
764000	768000	And so we are now just going to use a top key and a shift top key in order to change.
768000	775000	So I'm pressing top once, we'll actually show the list of sub-pading here, and then we can just move down to one of the sub-pading, press top again,
775000	779000	and you will actually just zoom in there and open this.
779000	781000	Then you can go back and just fold it all back.
781000	788000	And if you press now top twice in a row, then you will not only get to see the direct children, but actually everything which is below here.
788000	791000	And then you can fold it back up.
791000	795000	And that was all done with one key, it's just a single key, you don't have to remember many commands.
795000	804000	And the other command is shift top, and if you press that, then you get first something which looks like a table of contents with all the headings.
804000	811000	And if you press it again, then you actually get any text which is in this outline, and pressing it one more time, folds everything back up.
811000	818000	So that means you only have two keys, and that is enough to look at this outline and to fold it and unfold it.
818000	820000	That makes it quite convenient, I think.
823000	826000	The next important part is that you have to be able to restructure it out.
826000	828000	And I really cannot emphasize this enough.
828000	834000	I think this is one of the main functionalities which Ordnus does rather, which most outlines don't do well.
834000	843000	Because normally to restructure something like this, it means you have to cut something away, to move to a different location, to paste it in, to change the level on which it is.
843000	845000	It is a tedious work in Ordnud.
845000	847000	It works more like that.
847000	855000	You can imagine to just hold onto one leaf in the outline tree and then just slide it around in the entire outline.
855000	857000	It is like with a hot knife through butter.
857000	859000	That is what it does.
859000	864000	So we hold down the meta key, which is the command key or something like this, depending on your computer system.
864000	867000	And then we just use the curve keys in order to move things around.
867000	871000	So there is another little thing here.
871000	873000	So this is just a different structure.
873000	875000	Over here we have five main headlines.
875000	878000	And now the first thing which we are going to do is just take this first...
878000	880000	Actually, I am folding it open.
880000	882000	I am opening the outline that you can see all the sub-headings.
882000	885000	Now we take the first heading and we just slide it down.
885000	888000	We move it through the entire outline to the end.
888000	890000	And then we move it back up.
890000	892000	You can move it down here.
892000	894000	You can see the keys which are being pressed.
894000	895000	We move it back up.
895000	902000	So the next thing which we are going to do is to take the second headline and just move the entire subtree, which is below us, a little bit down.
902000	903000	It should help.
903000	905000	Yeah, it has happened now.
905000	906000	That is right.
906000	907000	Even further now.
907000	909000	And now we go down.
909000	911000	And now we demode the setting.
911000	914000	So this is actually a child of this one.
914000	915000	Yes.
915000	919000	And the next thing is that we make this entire subtree also one level down.
919000	927000	And then we decide that this subtree heading here should actually be a sub-heading up because we just promote it and slide it up.
927000	937000	And it looks a little bit tedious, but if you try this out, this works really fast and gets thought, which initially were quite random, gets them into an order.
937000	938000	I use this all the time.
938000	940000	So sitting in a meeting makes these notes.
940000	950000	Afterwards, I take 10 minutes to reorganize things and I have a nice structure thing which I can send to others, even as notes.
950000	952000	I want to go to the next slide.
952000	953000	Yes.
953000	954000	Is it already the next slide?
954000	955000	Yes.
955000	956000	I'm sorry.
956000	958000	Yeah.
958000	959000	Okay.
959000	960000	It's all text files.
960000	962000	That's what I said.
962000	964000	Let's you do more with an outline.
964000	971000	Not only take notes, but you can actually make notes in the outline, make them as action items.
971000	972000	That's also important.
972000	977000	You sit in a meeting, you write down notes, and you find out that there's something that we have to work with.
977000	982000	And that's why it has some kinds of metadata, which is just what this slide represents.
982000	988000	So you can just put in special text in special locations, which can mean special things.
988000	989000	It's not really special text.
989000	996000	It's actually also just plain text, but by some commands and all that, it will be interpreted as something more complicated.
996000	1001000	So for example, this first thing here, which is something that we call the to-do keyword.
1001000	1004000	So by default, this is just either the word to-do or the word done.
1004000	1007000	This means like a checkbox on off.
1007000	1010000	Either we still have to do this or it is already done.
1010000	1012000	Next thing is a priority.
1012000	1015000	You can assign priorities if you want.
1015000	1017000	Then you can assign tags.
1017000	1020000	So just like, for example, this is something that has to do something with work.
1020000	1023000	And it's something which I want to buy.
1023000	1027000	And the other thing is that we can put planning information.
1027000	1029000	For example, we can say this has a deadline.
1029000	1037000	It has to be done at a certain time so that you get the keyword and then the date after it in order to say when this has to be finished.
1037000	1040000	And then down here, this is what we call a property draw.
1040000	1044000	This is just a lot of key value pairs where you can put arbitrary information.
1044000	1051000	You're actually completely free in what you want to put here and how you want to write it down here.
1051000	1054000	By default, this doesn't really have any meaning.
1054000	1062000	But there are commands and which assign meanings to this and do something with this special data.
1062000	1064000	Okay.
1064000	1067000	Then, let's allow you to make links.
1067000	1072000	So if you just write something which looks like a link into the text, it will actually be interpreted one.
1072000	1077000	So if you click on it or if you call a special command, that means it will open something.
1077000	1084000	For example, you can put in a URL or a link to a certain file and also specify how you want to open it.
1084000	1086000	Or you can put an email address.
1086000	1089000	If you click on this, you can send an email to this.
1089000	1091000	And so there's many different types of links.
1091000	1095000	This is not even a complete list which you can put in there.
1095000	1100000	And also be very useful, I think.
1100000	1103000	Okay, I said that you can embed tasks.
1103000	1108000	And this is what is also shown here in a sort of a bigger way.
1108000	1110000	So we actually have a piece of an outline here.
1110000	1114000	Here's a motor headline, a level two, level three headlines down here.
1114000	1116000	And here's even level four headlines.
1116000	1120000	And as you can now see here, I have defined a few more keywords here.
1120000	1121000	So here's one which has to do.
1121000	1123000	So this is something which has to be done.
1123000	1125000	Here's one which says this is done.
1125000	1127000	That means this task is very finished.
1127000	1128000	And why is it finished?
1128000	1131000	Well, because below this task, there's a couple of other ones.
1131000	1133000	One we have actually canceled.
1133000	1135000	So that means we decided actually not to do this,
1135000	1138000	even though initially it was a to-do item.
1138000	1140000	And then there's another one which is already done.
1140000	1142000	And that means this task is done.
1142000	1147000	And you can actually get here a little calculation of what fraction of the task is finished.
1147000	1149000	So in this case, it's one of two.
1149000	1151000	And then on this level, the first one is not finished.
1151000	1156000	The second is, so that's why there's one of two is finished up here.
1159000	1163000	And this is something which I also use very often.
1163000	1166000	For example, I write an outline for a paper.
1166000	1169000	I write all those headlines, the sub-headlines which I want to make.
1169000	1172000	And then I can just mark things like, I have to look into this.
1172000	1173000	I have to do that.
1173000	1174000	You can mark it there.
1174000	1176000	It's hidden in this paper.
1176000	1179000	But as I will show you in a moment,
1179000	1182000	you can actually then pull out this information into an easy list
1182000	1186000	where you can then see what is still to be done.
1186000	1187000	You also have checkboxes.
1187000	1190000	So you can now have, this is all just plain text.
1190000	1194000	This is just a bracket, an X and a bracket highlighted in a special font.
1194000	1196000	That's why it looks like a real box.
1196000	1197000	But it's really all plain text.
1197000	1199000	Just a checkbox.
1199000	1202000	This is what I imagine, what kind of experiments you do here in this institute.
1202000	1205000	So that you need electricity and brains of rats to study
1205000	1207000	and brains of humans to study.
1207000	1208000	So I don't know.
1208000	1209000	Yeah.
1211000	1212000	Okay.
1212000	1213000	Checkboxes.
1213000	1217000	This is something very useful that lists and ticks things off.
1217000	1221000	Then another thing is that you can write tables in plain text,
1221000	1222000	which is really crazy.
1222000	1225000	And some people have laughed at me for this,
1225000	1228000	but I implemented it anyway because I think it's a great font.
1228000	1235000	So here's just a little demonstration that you can write tables in plain text.
1235000	1236000	In a very simple way,
1236000	1242000	you just write the names of the fields and you separate them by vertical bars as your columns.
1242000	1245000	Those will be examined without from a couple of students.
1245000	1246000	And so it automatically expands.
1246000	1251000	You can see as I write here the field which adapts automatically.
1251000	1253000	It's still, everything is plain text.
1253000	1256000	You can just print this on a paper and read it in a different program
1256000	1259000	and it will still look exactly like this.
1259000	1263000	So this is a couple of students where I'm just writing down the notes here.
1265000	1269000	Names I get longer and longer to show you that the fields automatically adapt.
1273000	1278000	And then another thing which I've built into this is that you can actually do some calculations.
1278000	1281000	So for example, you can just calculate the sum of all these notes,
1281000	1286000	just a little formula, the sum of the fields which you put in there.
1286000	1290000	And you will calculate that in plain text.
1290000	1292000	Everything plain text, everything.
1292000	1296000	And then you can also calculate the average if you want,
1296000	1298000	which is also what we are going to do here.
1298000	1300000	The average of these results.
1303000	1305000	So it's just this value divided by 3.
1305000	1306000	Wow, there's too many digits.
1306000	1310000	So let's just go back up, get back into this formula
1310000	1314000	and just append a format specifier to this.
1314000	1318000	So if you are a programmer, you will recognize this as a printf format specifier.
1318000	1322000	And so you just can format these numbers nicely.
1322000	1324000	And then you can reorganize the tables.
1324000	1326000	So we are sorted now by the highest cipher.
1326000	1328000	And that's just like the structure editing.
1328000	1332000	Just basically holding the meta key and pulling these fields and rows around.
1332000	1340000	I don't know any table program which actually makes it easier to reorganize that table than this program.
1340000	1344000	So okay, it's a bit crazy, I admit.
1344000	1346000	But I think it's still very useful if you make notes
1346000	1349000	and you can make little tables and add a few numbers.
1349000	1351000	For example, the other day I was sitting with a student,
1351000	1355000	we were writing a portfolio and we needed to add up the times which we needed for certain observations.
1355000	1358000	If you can just do it in your notes, you add quickly up these numbers
1358000	1362000	and send an email to realize what this is.
1362000	1365000	Okay, so now for a bigger view, how does this now look like?
1365000	1367000	I'm just going to show you a few example screens.
1367000	1372000	This is a real life, my example file.
1372000	1374000	This is a file where I collect meeting notes.
1374000	1376000	It's just one giant file.
1376000	1382000	It's a very long file where I have a major note for all the different meetings where I'm going to.
1382000	1385000	I'm listening here to other people, so there's always a major note for this.
1385000	1388000	Sometimes I put a date when this really was.
1388000	1392000	And then below these notes, I have further outlines of when people talk,
1392000	1395000	what they talked about and just organizing these things.
1395000	1399000	And as you can see here, in there I mark a little task where I say,
1399000	1401000	this is something I have to act on.
1401000	1406000	Sometimes I put a date telling me this is as a deadline here, you have to be aware of this.
1406000	1408000	It's actually in the notes, Father.
1409000	1413000	It's not that you have to go to a calendar and put an alarm there and say,
1413000	1416000	well, I have to be aware of this and then you have this information in two different places,
1416000	1424000	which is always bad because when you change it, you will usually change only one side of it and not both sides of it.
1424000	1427000	So it's here in this information.
1427000	1429000	And this is a huge file.
1429000	1434000	You don't see only a very small fraction of this because I've been using this program for a couple of years
1434000	1437000	and all my meeting notes are in this file.
1441000	1447000	There's a command in August which tells me, well, show me everything which I still have to do.
1447000	1452000	So that goes to this meeting note file, but also to other files which have to do with different projects,
1452000	1455000	files which have to do with my teaching,
1455000	1458000	and just pull out all those lines which say there's something to do.
1458000	1461000	So I can just go through this list and check, well, there's something,
1461000	1464000	what do I like to do now? How much time do I have?
1464000	1468000	I can just pick the task and then jump from there into my notes file.
1468000	1470000	Welcome this stuff.
1470000	1474000	Take it off in the notes file and then it will disappear from this list.
1474000	1477000	I find that extremely useful.
1477000	1486000	Another view which you can get on the radar is so because I'm going to close this door.
1486000	1489000	Another useful view is the agenda.
1489000	1491000	And that is just a calendar.
1491000	1497000	So as you can see here, this list one week starts with Sunday, 7th of February, Monday, Tuesday, Wednesday, Thursday, Friday.
1497000	1503000	And for every day, it pulls out tasks where I have somewhere set in my file where this is something to do.
1503000	1505000	And there's a couple of them.
1505000	1509000	For example, here's one which says it has been scheduled already 14 times.
1509000	1514000	That means I wanted to work on this 14 days ago so the bigger this number gets, the more scared I should get.
1514000	1518000	And then there's here's one which has been scheduled for today.
1518000	1525000	These are just pre warnings which has in 8 days there's a deadline coming up which is related to the task which is here.
1525000	1529000	So I have to write some proposals and things like this for this deadline.
1529000	1530000	It's coming up here.
1530000	1540000	And then also for the next days, just give me a preview of things which are coming towards me where I have to pay attention.
1540000	1543000	And as I said, all the data is just in one place.
1543000	1545000	So there's another duplication.
1545000	1549000	So if I sit here with my curve on this line, I can say this is now done.
1549000	1551000	It asked me for a little note.
1551000	1553000	So what have you done with this?
1553000	1557000	It will put the note into the outline leaf where this was from.
1557000	1559000	It will change the to-do key or to-done.
1559000	1561000	And I will never see this task again.
1561000	1566000	Only if I go back to my notes and read actually what did I do with this project, then I will still find this task.
1566000	1571000	It was done and there will be a reason why it was done and when.
1571000	1574000	So this is how this works.
1575000	1576000	Okay.
1576000	1577000	Scientists.
1577000	1584000	I'm a scientist and I wrote this program initially in order to organize my projects.
1584000	1590000	So you can actually organize also when you have to buy a present for your kids that they can later.
1590000	1592000	But that was the original idea.
1592000	1600000	And so what I was hoping was awkward is that you can put as much as possible relating to the planning of a program,
1600000	1607000	so the scheduling to the notes can put it into a single file that was what I was hoping.
1607000	1609000	So notes, notes, notes.
1609000	1611000	I cannot emphasize it.
1611000	1615000	I think this is the daily bread and butter of a scientist.
1615000	1623000	I'm getting into an age where I forget everything and so I have to write down notes and I do this really constantly.
1623000	1625000	You can put it into that same file.
1625000	1628000	You can put your project schedule and the due dates.
1628000	1637000	Wherever it belongs, you mark things and say that has to be done and when and by when.
1637000	1638000	Okay.
1638000	1640000	That's what you can put in.
1640000	1643000	You can put a detailed look of actions and problems.
1643000	1646000	You can just write for every day.
1646000	1649000	You can write a little note and say, well, what did I do there?
1649000	1651000	And it will be all in that same project file.
1651000	1653000	It will not be in a different place.
1653000	1655000	It will be in the right place.
1655000	1661000	You can put the complete specification of the steps which you have taken in the analysis.
1661000	1663000	Which is really, really useful.
1663000	1673000	If you do this here in a nice way and I will show you later that you can very easily then turn the outline where you have specified this into a draft for a paper.
1673000	1682000	So if you write this in your notes, you almost have it already, well, it's half done for a paper.
1682000	1684000	You have to write an article for publications.
1684000	1689000	I'm sure that you are also as pressed as we are for constant publishing, publish or perish.
1689000	1691000	This is also important for us.
1691000	1699000	So an article for publication or a digital slideshow and all these things can be at least drafted in this file.
1699000	1709000	Sometimes you can actually completely prepare them in an open file, but you can at least draft them in there.
1710000	1715000	There's even a facility to track data acquisition in a graphical way.
1715000	1717000	I'm going to say a little bit about this.
1717000	1723000	This is a bit more complicated, so it's not so easy to say this in the short time which I have.
1723000	1726000	Okay, so let's start with publishing.
1726000	1728000	Now we have all this data in a text file.
1728000	1735000	Of course, we all know that when we have to publish something, when we have to write a publication or a presentation, that is different file formats.
1735000	1737000	I don't know if you have to write a word file in the end.
1737000	1739000	I have to write a latech file.
1739000	1743000	This is an accepted document format, which we have.
1743000	1746000	Another way to publish things is of course to put them on the web.
1746000	1752000	Or you can put something into a doc book, which is an HTML-like format.
1752000	1756000	Latech, as I said, is a text formatting thing, which is very good for science.
1756000	1762000	If you have to put them in the equations, which is what we have to do, that is very important.
1762000	1766000	In the end, you get a PDF file out of this.
1766000	1768000	You can make a Beamer presentation.
1768000	1773000	That is also via latech a presentation, which you can show on the screen.
1773000	1780000	There's an export to ASCII, which makes it even more readable way of reading the same file, even the root out-mode file itself.
1780000	1783000	It's already very readable, of course.
1783000	1791000	And you can also link a couple of documents, and actually, for example, publish an entire web page from these files.
1791000	1794000	Let's look at an example.
1794000	1796000	So here, I'm just making a tall project.
1796000	1798000	Figure out how planets form.
1798000	1800000	Of course, this is not really my project.
1800000	1802000	Of course, I would like to figure out how planets form.
1802000	1808000	But in reality, I guess the same is true for you, is that projects are already much smaller.
1808000	1812000	But it's easy to understand, I've taken a big project here.
1812000	1815000	So, for example, I have a task here that I should study some literature.
1815000	1817000	After a while, I'm done with this.
1817000	1819000	I've read this literature.
1819000	1822000	I'm going to discuss with my co-worker on a certain date.
1822000	1825000	And we have a couple of ideas of how this could be done.
1825000	1827000	So, these are to do.
1827000	1829000	So, I want us to look them into them.
1829000	1830000	This year, we started.
1830000	1833000	So, that means that we have started thinking about this.
1833000	1836000	But then we have decided that this first idea is garbage.
1836000	1838000	So, we cancel it.
1838000	1840000	And then there's more ideas.
1840000	1841000	So, we just work on them.
1841000	1844000	We have a little table where we make an estimate.
1844000	1847000	We estimate a couple of numbers, which we need for this project.
1847000	1848000	Okay.
1848000	1851000	And so, now we have this kind of a project.
1851000	1854000	And now, let's see what we can do with this.
1854000	1857000	So, let's try to export this in the different ways.
1857000	1859000	For example, here's off that page.
1859000	1861000	I'm just going back one more time.
1861000	1863000	I'm sorry.
1863000	1867000	So, this is the text file.
1867000	1870000	And this is off that same file, the HTML export.
1870000	1872000	So, it's just one press of a button.
1872000	1875000	And that thing turns into an HTML page,
1875000	1877000	which contains all the information.
1877000	1878000	Here's a nicely formatted table.
1878000	1880000	Here's a table of contents, which is clickable.
1880000	1882000	You can just click on these sort of things.
1882000	1883000	Go there.
1883000	1887000	So, without any extra work, you have put this thing up on the web.
1887000	1890000	Here's the latex version of this.
1890000	1893000	And then you can discuss if you actually like the way this looks.
1893000	1896000	Of course, because this file was very list-oriented.
1896000	1899000	So, there's many headlines and there are two little texts in between.
1899000	1902000	But even if you decide to work on the latex file itself,
1902000	1905000	you can still get your first version, your draft version in this.
1905000	1908000	You can sit in the text editor, write in the text file,
1908000	1911000	focus totally on the content, get the structure right,
1911000	1915000	then turn it into that pretty file and fix it a little bit
1915000	1918000	and send it to the publisher.
1918000	1920000	I've really liked the experience in the last few years
1920000	1924000	that this is a very efficient way of doing things.
1924000	1926000	Well, you can turn that same file.
1926000	1928000	It's really not that I haven't done anything.
1928000	1931000	The same file turned it into a presentation.
1931000	1934000	This is done with the Beamer package, which also goes through latex,
1934000	1937000	which is the third mode in my file.
1937000	1938000	There's one slide.
1938000	1940000	This is the discussion with my colleague.
1940000	1942000	There's different ideas are here on the table.
1942000	1944000	It's in the presentation.
1944000	1947000	So, you can also get your draft presentation with no extra work.
1947000	1951000	It's all coming from the same source.
1951000	1955000	Okay.
1955000	1960000	There's further things which you can do as a scientist
1960000	1962000	with this kind of stuff.
1962000	1964000	And I'm only going to briefly touch on them
1964000	1967000	because they are a bit more complex.
1967000	1972000	You can embed latex commands for all of us into an automobile.
1972000	1974000	If you need a more complex equation in there,
1974000	1976000	you can just put it directly in there.
1976000	1978000	I don't know if any people here use latex
1978000	1980000	and how much they do use it,
1980000	1983000	but for us, this is extremely useful.
1983000	1986000	You can embed source code snippets.
1986000	1989000	If you are working, for example, with R, to do your analysis
1989000	1991000	or with a C code,
1991000	1994000	you can put little pieces of source code in there,
1994000	1997000	which can be very useful as I will show in a minute.
1997000	2001000	You can actually run those source code snippets
2001000	2003000	and you can capture the results into a table.
2003000	2006000	So, it's a little bit like Mathematica in a way.
2006000	2010000	You can do some calculations and work in that type of document.
2010000	2012000	And if you take this together,
2012000	2014000	this actually puts you into a place
2014000	2017000	where you can start doing reproducible research
2017000	2021000	and literal programming with this kind of a system.
2021000	2023000	I'm not sure if you know these buzzwords.
2023000	2025000	I'm going to say a little bit more about it.
2025000	2027000	So, here's just an example of embedded latex.
2027000	2029000	Again, this is one of those text files.
2029000	2032000	And I've just written here the big-legged letters alpha, meter,
2032000	2034000	and gamma are used to denote angles.
2034000	2037000	And alpha is the way to write angles
2037000	2040000	to write big-legged letters in latex.
2040000	2042000	So, this is how you write it.
2042000	2045000	And finally, Mathematica would actually have to put $2 sounds
2045000	2047000	on both sides in order to mark them as mass.
2047000	2049000	This is not necessary in Alt-Mode.
2049000	2051000	You can just write them plainly in there
2051000	2054000	and it will actually find them and convert them in the right way.
2054000	2055000	Then there's another thing.
2055000	2058000	I'm actually pushing the two slashes around a little bit of text.
2058000	2061000	And that is in Alt-Mode the short form to say
2061000	2063000	that you actually want to have this in italics.
2063000	2067000	This is sort of the same specification as we use in e in e-mail.
2067000	2071000	If you just write these slashes, that means some emphasis.
2071000	2074000	Down here is an equation and that is literally
2074000	2077000	how you would also write this in latex.
2077000	2080000	And you can just put it there if it's a bit more complex.
2080000	2084000	And then if you turn this into latex with a similar button
2084000	2086000	then you see this down here.
2086000	2089000	So, this is just section heading and then the sentence which I've written.
2089000	2092000	And here down here is a beautifully formatted equation
2092000	2095000	as latex does is for you.
2096000	2101000	Another thing is are these embedded code examples?
2101000	2105000	For example, I'm writing together this micro-legal little piece of code
2105000	2108000	in order to study this problem in planning formation.
2108000	2112000	And so this is a little snippet from the code which we are moving there.
2112000	2115000	And initially actually I put in this possibility to say
2115000	2119000	well, here is some Fortran 90 in this case code.
2119000	2121000	And that was only for documentation purposes
2121000	2124000	because I ended up to be able to say well, this is a piece of code
2124000	2128000	so please format this nicely for me on an HTML page.
2128000	2131000	And so this was what this was made for.
2131000	2134000	We now have an HTML page from exactly this
2134000	2137000	where when this source code gets nicely formatted and colored
2137000	2140000	and so that you can easily look at this.
2140000	2144000	It's very nice if you have to write software and have to document it in a way.
2144000	2147000	What then happened was actually totally unexpected.
2147000	2151000	There's a couple of people on the main list where we discuss about ordnance.
2151000	2156000	Eric Schulte, Eric Schulte, there should be a T.
2156000	2160000	And then they actually said, well, this is interesting.
2160000	2163000	So there are little snippets of code in there.
2163000	2166000	Why don't we just build a facility to run these pieces of code
2166000	2168000	and to capture the output.
2168000	2170000	So what they have done with here is for example,
2170000	2173000	I don't know if any of you recognize this is a piece of R code
2173000	2177000	and it's been used to take a file and to split it into words
2177000	2181000	and to look at the words which are most frequently used in the text.
2181000	2185000	Take the first six of them and turn them into a table.
2185000	2188000	And the table, the output table is right in here.
2188000	2194000	So you can run this stuff in the file and get the result.
2194000	2196000	This might seem a little bit academic
2196000	2200000	and I think that for many of you it might well be
2200000	2202000	that this is not really what you are going to do,
2202000	2204000	but if you are more interested in computer science
2204000	2207000	and in documenting things and into writing the documentation
2207000	2210000	of a program together with the program itself,
2210000	2216000	this may be something you would find interesting.
2216000	2219000	That has to do with literal programming.
2219000	2221000	It's an important thing.
2221000	2225000	I think computer scientists maybe started in a way by Donald Knuth
2225000	2227000	who has defined what this is.
2227000	2231000	So let's try to find a way to write computer programs
2231000	2235000	where the main aim is not explaining to the computer what it should do
2235000	2240000	but explaining to other human beings what we want the computer to do.
2240000	2244000	So that means that you actually write something which is human-readable together with the code
2244000	2247000	and Orkwood also allows you to do this.
2247000	2250000	If you have a program like this and there's two operations,
2250000	2253000	one is called ROOF and that makes a printable document.
2253000	2255000	That's just the export Orkwood does anyway.
2255000	2258000	And then there's a tangle operation which throws away all the text
2258000	2263000	which is meant for the humans and only takes the code for the computer.
2263000	2272000	And you can also do that with the program which was written by Eric Schulte and Dan Davidson.
2272000	2277000	Yeah, reproducible research is the other side of this.
2277000	2282000	That means that reproducible research will try to combine the scientific results
2282000	2285000	with all the tools that they use to produce them
2285000	2288000	because if you make a figure which you show in the paper,
2288000	2291000	people should in principle be able to verify that figure
2291000	2294000	to check if you have really done your homework well.
2294000	2296000	And this is what's called reproducible research
2296000	2300000	and what I've explained about this Ork-Babel stuff
2300000	2303000	lets you do some of this also with Orkwood.
2303000	2304000	Okay, enough of that.
2304000	2307000	I think that leads us a little bit too far.
2307000	2312000	I'm going to just finish with a couple of slides with a few links.
2312000	2316000	So if you want to know more about Ork-Mood, there's a website here,
2316000	2319000	Ork-Mood.org, which of course was made in Ork-Mood.
2319000	2323000	So we actually use plain text styles to make this website and then just publish it.
2323000	2326000	I've given another talk like this, not quite like this,
2326000	2330000	but a bit similar at Google of one and a half years ago.
2330000	2332000	I think you can look at that if you want.
2332000	2335000	We have a long list of tutorials which you can look at.
2335000	2339000	And there's a main list where we discuss about Ork-Mood.
2339000	2345000	And there's another site which is called Work, which is a user-made site
2345000	2353000	where we collect documentation and more information about this project.
2353000	2356000	If you are an iPhone user, there's actually an iPhone application,
2356000	2359000	which means that you can take all these modes files with you.
2359000	2360000	That's actually nice.
2360000	2362000	I mean, all the modes which I've made over the last years,
2362000	2366000	I have on my little iPhone Touch and can look things up if I want.
2366000	2369000	And you can actually tick tasks off from here.
2369000	2372000	And then when you sort it back, it will actually be changed in your files.
2372000	2373000	It's very nice.
2373000	2375000	Richard Norland wrote this application.
2375000	2379000	It's a lot of fun.
2379000	2383000	The users of Ork-Mood are really wildly different.
2383000	2388000	If you look at this list, you will see that it's really not only made for scientists
2388000	2391000	or not only made for a particular kind of people.
2391000	2396000	There's a collection from the website, which is one web page
2396000	2399000	where people actually introduce themselves.
2399000	2402000	Stefan also has an entry on that site.
2402000	2408000	For example, we have an archaeologist in Hawaii who runs his archaeology company using Ork.
2408000	2410000	And he writes his research.
2410000	2415000	He gets his results and publishes them mainly through Ork-Mood.
2415000	2417000	I think that's a lot of fun.
2417000	2420000	Another guy is a farmer who organizes stuff on his farm.
2420000	2422000	And he's also a mountaineer.
2422000	2424000	There's scientists and computer scientists.
2424000	2429000	There's several one-person companies who run the entire company on this system.
2429000	2431000	But there's also bigger things.
2431000	2435000	One of the people there is the director of a computer science company
2435000	2437000	and of a university research group.
2437000	2439000	We have a historian.
2439000	2442000	There's a blind person who runs his entire life through EMEG.
2442000	2445000	And he really loves Ork-Mood because it's a program
2445000	2449000	which he can use inside EMEGs where he runs his way.
2449000	2456000	And the head of the ITU-UPLT McFung Institute also uses Ork-Mood, obviously.
2456000	2459000	As we all know, I guess.
2459000	2462000	Well, this is a word of Twitter these days.
2462000	2466000	Today we have all to say everything you have to say in 140 characters.
2466000	2470000	So I've collected a couple of things which I found on the Twitter feed
2470000	2472000	that people have said.
2472000	2474000	So not everybody is entirely positive.
2474000	2476000	So for example, this one, I like this one.
2476000	2479000	The sheer elaborated insanity of the Ork-Mood spreadsheet
2479000	2484000	is a destilled microcosm of all that is wonderful and brain damaged about EMEGs.
2484000	2488000	And I think that's really a very true and very nice statement.
2488000	2493000	That EMEGs is, if you see it like this, brain damaged, but it's really wonderful.
2493000	2495000	And I love it. I don't want to be anywhere else.
2495000	2497000	There's more people who think like this.
2497000	2500000	For example, this guy says, if I hated everything about EMEGs,
2500000	2504000	I would still use it for Ork-Mood.
2504000	2507000	Or Eric Frahler, also one of the people on the mailing list.
2507000	2512000	Eric is actually the one who drove the BIMA presentation export here.
2512000	2514000	So very important for this.
2514000	2517000	He says, it used to be that I hated leaving EMEGs to do anything.
2517000	2521000	Now it's getting to the point that I hate leaving Ork-Mood.
2521000	2528000	The people really use this as the main environment in which they do everything.
2528000	2535000	Well, not everybody would get as extreme as Circus League, I guess.
2535000	2538000	Okay, I'm almost done, I think.
2538000	2540000	Yes, there's a list of acknowledgments which I still want to say
2540000	2543000	because many people are contributing to this program
2543000	2547000	and also in particular to the stuff which I have shown you today.
2547000	2549000	There's a mailing list.
2549000	2553000	I cannot really believe that we have now 800 people on this mailing list
2553000	2555000	which read that mailing list all the time.
2555000	2557000	There's at least 20 messages a day.
2557000	2561000	Some days there are 30 or 40 or 50 messages on this list.
2561000	2563000	And all really good messages.
2563000	2566000	There's no garbage here, it's amazing.
2566000	2568000	Well, Eric Schulte and I have spread them correctly.
2568000	2570000	Thank God.
2570000	2573000	And then David and David Ork-Babble, which is really a major extension.
2573000	2578000	Thomas S. Dahl has written some examples which I've used here.
2578000	2583000	Sebastian Rose, Bastian Guerrero, Balki Sun, if that is pronounced correctly.
2583000	2587000	And Eric Frager all have been really important for some of the exporters which we have.
2587000	2591000	Richard Moreland is the guy who wrote Mobile Ork, the iPhone application
2591000	2594000	and gives it away for free so you don't have to pay for it.
2594000	2597000	You have a donation button on his web page if you still want.
2597000	2599000	Feel free to.
2599000	2603000	And I would like to thank Stefan for inviting me here today.
2603000	2606000	And I'm still around for the rest of the day,
2606000	2610000	so I hope I will see some of the science which is being done at this institute
2610000	2613000	because I'm actually really interested in brain research.
2613000	2616000	And for the rest, if you have any questions now or later during the day,
2616000	2618000	please just get in touch with me.
2618000	2620000	Thank you.
2620000	2630000	Any questions?
2630000	2633000	Yes.
2633000	2637000	We have access to the fund in the Expression Center.
2637000	2639000	Yes.
2639000	2645000	Can just, you can put all the org files under version control.
2645000	2648000	I definitely do this because it means that you can freely
2648000	2651000	and without any fear, edit and change things like crazy.
2651000	2655000	And then just use the standard version control system to keep the version of all these files.
2655000	2657000	Yes.
2657000	2664000	Always.
2664000	2670000	What kind of action like staff wait to do cancels are also available?
2670000	2675000	Or is it good to create my own actions?
2675000	2681000	Standard, if you download and install it, it only has two, which is to do and done.
2681000	2684000	But you can very easily, I mean, just in the top of the file,
2684000	2686000	you just write a hash mark plus.
2686000	2690000	This is always a sign that you want to declare something and then to do.
2690000	2696000	And after that, you just put a list of all the words which you want to be action words and then they are.
2696000	2707000	Are there tutorials to tell me which are good actions or better to add to actions or many different actions?
2707000	2709000	Well, that really depends on taste.
2709000	2713000	And for me, it actually even depends on file.
2713000	2717000	So for example, if I'm organizing something with many other people together,
2717000	2721000	then I like to make names of everybody who is involved to do keywords.
2721000	2726000	So I can just assign every task which is listed there directly with the two key words to the person.
2726000	2729000	You can also use tags if you want, but you can also use the two key words.
2729000	2736000	I myself have maybe eight or nine key words very little.
2736000	2739000	I know that some people have 50.
2739000	2742000	No, but they just use it in a different way.
2742000	2752000	So I think that's really one of the strong points of all that it actually lets you define this freely and also make it different for every file.
2752000	2759000	So if you have a special task, a special thing that you have to do, you can just change it for that thing.
2759000	2763000	Then what I'm going to do is use this to do and then start it.
2763000	2765000	It means I've started with this.
2765000	2770000	Waiting means, well, I'm just waiting for someone that means I have to check back if they have really finished it.
2770000	2773000	And then it's done and cancelled and delegated.
2773000	2782000	And then I just have something similar on a higher level for a project which I use to designate things which have many sub tasks in it really below them.
2782000	2784000	But that's basically all I use.
2784000	2789000	So I use a small one and I think that's actually much better for my users.
2789000	2791000	Yeah.
2791000	2799000	Yeah.
2799000	2801000	There's nothing built in right now.
2801000	2806000	But yes, source code files are text files and auto files are text files.
2806000	2815000	I think I can write you a one liner and Pearl, which will take your source code and put out an auto true, which contains all the to do tasks in that source code.
2815000	2817000	I think that's very easy.
2817000	2822000	Maybe not a one liner, maybe a three liner, but yes.
2822000	2827000	And of course, if you know how to write the next list, then you can also write it in the next.
2827000	2832000	But many people just know different scripting languages like Python or Pearl or something like this.
2832000	2835000	And I would prefer to use that and that's perfectly possible.
2835000	2839000	That's why it's all text files because it's so easy in this way.
2839000	2851000	You can also just have a Python module, which will pass an awkward file and return a true structure which contains the other entry and then you can manipulate it and do something with it.
2851000	2855000	Yeah.
2855000	2857000	Yes.
2858000	2864000	That's correct.
2864000	2867000	Yes, that's right.
2867000	2877000	The number in which I had shown there was just for illustration in order to show you what the original structure was in order to see that actually something changes when I move them around.
2877000	2884000	Normally you would not number it and all these things are an outline and you would not number the nodes, but you can get them numbered when you export.
2884000	2890000	So if you say, I want to export this to HTML or to Radix, then you can get a numbered outline.
2890000	2894000	But yeah, no, you just wouldn't write them.
2894000	2900000	I mean, I can just see if I can get this to work here.
2900000	2904000	I'm not sure if you can read it.
2904000	2906000	Really?
2906000	2911000	It's really cool.
2911000	2914000	Just a second for you next to come up.
2914000	2921000	You can just recover from everything which is going on in this machine. Okay, so let's just.
2921000	2930000	So one thing is we do have a number of at least so I'm just writing just the garbage text here.
2930000	2935000	And you can see that no, this is not right.
2935000	2938000	Yeah, so this is a non-arrated list.
2938000	2941000	And if you organize this, this works exactly the same.
2941000	2945000	So I hold down the meta key and then I use the cursor key to pull up and down.
2945000	2949000	You will actually see that it moves up and down. It does do the numbering.
2949000	2953000	But normally in outlines, so this would be.
2954000	2958000	So this is just text and you just would not number it.
2958000	2965000	But you can still change the level of course, like those move it in and out or swap it with the other one and lose the level of this.
2965000	2969000	But that doesn't show numbers normally.
2969000	2977000	Yeah, I just had it at the site only to illustrate that there is a structure and that these are meant as sub-levels.
2977000	2979000	But I'm not using them.
2979000	2983000	So that was just text, not really numbers.
2983000	2987000	Yeah, exactly. Just don't type numbers.
2987000	2991000	It's the laziest way of typing numbers is not to type them.
2995000	2997000	Yeah, it's for lazy people.
3010000	3013000	Yes.
3013000	3020000	Well, yeah, that's certainly if you're looking towards the output formats.
3020000	3023000	Yeah, it's actually a much easier way of making tables.
3023000	3028000	For example, when I have to make a table in latech, I never write this in latech anymore because I just hate it.
3028000	3030000	It's very difficult to read.
3030000	3037000	And we actually have a special way, which I didn't explain here today, but I did explain this in my talk at Google.
3037000	3049000	That you can actually, for example, in your C source code or in your latech file, you can actually put a special section, which is actually a comment for latech where you have a normal table.
3049000	3054000	And then this one key, it gets actually turned into a latech table and inserted at the right location in the table.
3054000	3066000	So you can in place almost use this much nicer syntax and much easier way of looking at tables in order to edit and make that table and then still have it in the proper format for latech.
3066000	3070000	We use it very often.
3070000	3075000	In fact, I could try to demonstrate it, but I'm not sure if I'm fast enough to do this.
3075000	3076000	Yeah.
3076000	3080000	When can I get the t-shirts like yours?
3080000	3086000	On our website, so right at the top.
3086000	3091000	And I think the t-shirts are like 15 or 20 euro and two of those euros get to me.
3091000	3094000	So that's something like that.
3094000	3099000	So that I can stay a happy person and keep programming this.
3099000	3104000	Yes, we have mugs and we have scarves and bags and full shop.
3104000	3107000	A friend of mine made it.
3107000	3113000	Yeah, more questions.
3113000	3114000	Apparently not, Stefan.
3114000	3115000	What should I do now?
3115000	3116000	Just close the session.
3116000	3117000	I think we are done.
3117000	3122000	And many thanks for coming out.
3122000	3129000	I can call out if you can make this an excellent place to hang out.
3129000	3131000	For recreational reasons too.
3131000	3137000	So many thanks for coming and giving us this panel talk.
3137000	3146000	And if you have questions on how to run e-mugs at the institute, there will be something
3146000	3150000	in our institute we can show you.
3150000	3155000	Because I hope this is what we are going to do.
3155000	3156000	Thank you.
3156000	3157000	Goodbye.
3157000	3158000	Thank you.
3158000	3159000	Thank you.
3159000	3160000	Thank you.
3160000	3161000	Thank you.
3161000	3162000	Thank you.
3162000	3163000	Thank you.
3163000	3164000	Thank you.
3164000	3165000	Thank you.
3165000	3166000	Thank you.
