{"text": " Hello everyone, welcome to your course, AI for Art, Aesthetics and Creativity. Today we have a very special speaker, Prof. from OpenAI, and he's going to talk about creating art and artistic work and images in general, these diffusion models and probably you have already worked with the glide collab, so he's going to walk us through that as well. So let's get us started, Prof. I always ask if please you can share with us what motivates you working in this space and also giving us a little background about yourself. For sure, thanks for having me here today, by the way this is really exciting. Yeah, so a background about me, I was an undergrad at MIT in computer science and math and then after that, I came to OpenAI to do AI research and I've been here for five years doing research on unsupervised learning, generative models, all kinds of things and what motivates me to do this research. When I was in college, I was excited by the idea of trying to understand what makes humans intelligent and I think I attended a few talks, which were really amazing and I felt like there's a lot of amazing progress happening in this field and I just wanted to part of it, see what's happening, see what I could contribute and then one thing led to another and here I am. I think so far, wouldn't say we are very close to unraveling what makes humans intelligent, but we've made a lot of progress I think in these years, so it's been pretty fun. Cool then, so I'll just get started. And anyone, feel free to just ask any question at any point, pause me if anything feels confusing, if any notation is understood. I don't see the chat window on my screen directly, so if you could just directly tell your question, that would be easier or if Ali, if you see something in the chat, just let me know. Cool, I'll get started. So I'll begin by just showing a few examples of very powerful creative ML models from the past few years. The first one you all might have already seen in news GP3, the language model from OpenAI. And one example I'm showcasing here is like these language models. They show like a very few examples of something pretty simple like here, like on the left you see examples of like poems by specific black writers. And on the right, then you can see once the model has seen examples of this kind, what it can generate. And it's getting poetry from just a few examples. This is pretty crazy. There's a second model I'll show you next. This is the audio playing. Yeah, we can hear your audio. You may bring it, and that's it. Anyhow, so that was a sample from a model for generating music called jukebox. And everything here was generated from the model, the music, the singing, how to sing it, how to pronounce the lyrics and everything. All the model was given was the lyrics and an artist and it produced all of this by itself. Does the generative model like produce the music and like the sentence separately or together? Everything together. Yeah, so because kind of how you sing something kind of has to go with the music that's provided by Swasa, right? It's kind of hard to like generate them separately from each other. What was that your question? So I can read from the chat that people are getting excited. Someone has a loud and other is saying this is freaking awesome. Thank you. Share or talk if you like. Oh yeah. Sorry, I can't see the chat window so feel free to just talk. Yeah, when we heard samples from like that from these models we were also amazed. The model I have here is the slide model you guys might have seen in papers. And here you have a model that given a text prompt is generating a visual representation of it or whatever it imagines what that the text kind of signifies. So you could see, and these are things that are go back to your point Ali you made earlier about composition. These things involve a model really having to compose a lot of different concepts together like robots meditating in a way past the retreat, but it is able to imagine this. In the last few years I think like ML models for such very hard creative tasks have become really good. And today we'll see like what are some of the kind of concepts driving this progress. And so before I even start down that route, like why are we trying to, you know, from a research perspective like trying to train models that you know create things. Well, one concept here is that, you know, this as this code by Feynman says what I cannot create I cannot. I don't understand training models that can, you know, create things be images or your video and so on. It's kind of one of the hardest tasks in those domains. And if you really care about whether models can understand images audio video so on, then one of the best ways to know if you're making progress out of these models are really learning something advanced is to see if they can create really complex things and really hard to understand things. And for people who care about representation learning or something this is one, one way you can know you're making progress on such stuff. And there has been a lot of progress in this field of, you know, trying to create things from models or what we call generative modeling. So here you see just in this very small domain of phase generation, things that GANs could create in 2014, versus things that they can create in 2018, like, it's absolutely astounding how much progress has happened in the past few years. So, what is a generative model. So, you can think of what our inputs here in our data set to look like just a collection of examples, x1, y1, x2, y2, xn, yn, where x here represents, let's say an image and why some label or some other information describing this image. So you just have the sample from some natural distribution of images, p of x comma y. So you could have like images of corgis, ostriches, goldfishes and so on. You want to train a model that can learn this distribution you want to train a model that then ask for a corgi produces a corgi and ask for an ostrich produces an ostrich, or so on. You want to learn p of x given y, given some label y, corgi, ostrich, goldfish and so on. Can I generate a real image or an image that looks real from this distribution. And one such a model is trained, you can use it to generate novel samples. So you can generate corgis, ostrich, goldfishes that are actually real haven't been seen before but look like real images. One of the things I guess that matters is, is how you evaluate such models because if you if you don't have evaluation metric you can't tell you're making progress. And we won't go into too much detail here about these metrics but one of the metrics use was FID for measuring image generation and what these metrics are trying to capture is like fidelity and diversity. Fidelity would mean like how realistic or how correct an image looks versus diversity would be like how many different kinds of images such a model can generate. And so GANs were kind of like the state of the art for difficult image generation benchmarks before diffusion models came along which we will not talk about in our talk today. The progress in diffusion models has been pretty recent, it's been just like the last couple of years there's been a lot of papers and even in these people that you could see like things have been improving since 2020. And you could now generate realistic faces, you know, lots of different categories of images from ImageNet and so on from these models. So it's a pretty exciting field and these models in one of our recent papers we showed them to be actually better than GANs at generating images and so I'm pretty excited by these models and that's what I'm going to cover today. There's quick graphic here for like how things look like when diffusion models generate an image. Let me just play it again. So let's go to what these models are. As you saw in that graphic, you could see that that image was started out looking like noise and you finally got a real image out by like the slow process of noise converting to an image. And what is actually happening behind the scenes here is you have a fixed process that adds noise to a training image. So let's say you start with X0 on the left here as an image. So that's just a dog ball on the left. So a fixed process that slowly adds Gaussian noise to this image. So at each step you add a little amount of Gaussian noise. And as you go from left to right by the end, at the last time step B, you have just pure noise left. And what the model is trying to learn is to undo this process. It's trying to reverse it. It's trying to take some noise damage and be noisy a little bit, make it a little less noisy and so on. How do you obtain a generative model out of this? Well, if you train a model to reverse noise like this, then at test time when you actually want to use the model, you could start with pure noise at the end. You could start with XT. Then you could run it step by step backwards to remove noise from it and try to produce an image from it. Any questions on this diagram? Okay, I'll just check the chat to throw the question there. Okay, no questions. Okay, so let's remember the notation from your X0 is an example from the dataset, XT, capital T, XT is noise and there's intermediate steps, X little t's, we call them, where you have like some slightly noise image. And we can, to introduce more notation here, you could represent one step of the forward noising process with a distribution Q of X little t, given X little t minus 1. And right now, I'm going to use Gaussian noise as a noising process. So we're going to add a little bit of Gaussian noise to this. And the thing about here is this in this notation, there's some mean, which is centered around the original noise damage XT minus one, and there's some variance one minus alpha T here of how much noise that is being added to this image. So this is the forward process. This is the process that adds noise to images Q of XT given XT minus one. What we are learning is the reverse thing. We want to denoise this image. So we were learning P of XT minus one given XT. And what you can show is for very small noising steps where the amount of noise added is very tiny. The reverse process kind of looks like the forward process. This is kind of a set of points. Maybe I'll go in a little bit of an example here. Let's say, looking at a single pixel here, it had some real value on the real line, let's say 0.8. And then you added a tiny amount of Gaussian noise to that thing. So it became 0.81 or 0.79 or so, depending on what noise you sampled. Now you're given this new value 0.79. This is the noise value. And you want to predict the distribution of what could have been the value it came from. If the amount of noise added, that you added in your step was very tiny amount of Gaussian noise, then the reverse prediction also looks kind of like a Gaussian. So it looks like, oh, it's somewhere around 0.79, some distribution that where you came from. I mean, 0.8 is pretty close to 0.79 in this situation. And so you could write that down as a model that is predicting the mean of this reverse process and the variance of this reverse process, mu theta being the mean and sigma theta here being the variance that you're trying to predict. So far, so good. Any questions at this point? Okay, so to summarize the notation again, XT minus one to XT is a process that's adding noise and the process we are trying to learn is XT to XT minus one to reverse this noise. And this looks like a Gaussian in the forward direction and predicting a new Gaussian in the reverse direction. A paper showed you could do some forms of training tricks to make this process simpler. You don't have to add noise little by little at every step. You could just directly sample an intermediate XT given your data example by just adding a lot of Gaussian noise to it. And it also showed instead of trying to predict the mean of the reverse process, you could just directly try to predict what noise was added to the image. This is possible because you could write the mean in terms of the noise that was added. Trying to predict the variance can be just simplified to just using a fixed variance or a learnt variance. We won't go into that today. All you should get from this is that to predict the reverse process where you are trying to predict the mean and the variance of the Gaussian to reverse that noising process, it's enough to try to predict what noise was added to the image. So how does this look like when you are actually training these borders? You take an image X0, you sample some random noise, you sample some Gaussian noise and you just combine these two to produce a noised XT. There's a formula here of how we've combined them. You can think of this combination as something that is kind of like interpolating between the image and the noise. So at t close to zero, you should just get the image X0 and t close to capital T, you should get complete noise. And this kind of interpolation factor, alpha t bar, kind of plotted it here, it goes from like one near t equals zero to zero near t equals capital T. This kind of controls how you interpolate between a fully denoised image versus a fully noised thing. And at training time, you're just sampling all possible combinations of mixing of noise and image and you're trying to denoise all these combinations. So what is the model trying to do now? It's trying to predict, as we said in the earlier slide, it's trying to predict what noise was added into the image. So you take in the noised XT, you take in what time step or kind of like an indication of where in the process you are, you tell the network, hey, I am at this step in the process, this is my noised image. What noise was possibly added to this image? So it's trying to predict epsilon. And what it's being used to train with is just like simple L2 loss, like just take the mean squared error of the difference between the network's prediction and the actual noise that you trained with and you try to minimise this loss so that you can train the network to predict what noise was added into the image. So intuitively, you can think of this as like, well, if I'm given a noised image, and if I can predict what noise was added to it, I can kind of like subtract that noise out, right, try to get a real image out. And this is kind of what is happening when you're training a diffusion model. It's learning to denoise images. Any questions so far? No questions. Okay. So what does the model that kind of does this denoising usually look like? Kind of models that we have in our papers usually look like these convolutional unit style models where the U kind of signifies kind of like how the shape of the model here in this picture is looking like, but to think of it as just like a model that runs a bunch of convolutional images, it kind of like down samples the image down into smaller and smaller spatial fields so that it can like learn features at different levels of granularity and then kind of samples it back into something that looks like a prediction of a noise. I don't have to go into the details of architectures, but just to give you an example of what kind of neural nets are trained to perform this task, this is how they look like. So, okay, we have a model that is trying to now denoise images, it's trying to predict the noise that was added to an image. How do we go back to actually getting a generative model out of this? As we talked about in an earlier slide, it's equivalent to predicting the mean of the reverse process, like you can write down the mean of the reverse process in terms of the noise prediction. So now that you have a network that can predict the noise that was added, you can also write down a network that can predict the mean of the reverse process. And once you have something that can tell you the mean of the reverse process, you can run the reverse process backwards. So you can start with noise x t, you could run, you could sample from this reverse process p of x t minus one given x t, you know the mean, and we have fixed the variance to something to do one step of sampling from this process. You do one more step, one more step and so on. And as we talked about what we're doing was denoising, right, we're trying to like learn a process that removes noise from images. So if you start from pure noise and you're denoising it one step at a time, by the end of the process, you would have something that looks like a real image. So, so what we've covered so far is how you train these models and how you sample from these models. Any questions so far? Okay. Um, it's okay. A bunch of theory there, but what you should remember is you train for denoising, and you can derive a sampler from it, once you've trained for denoising. What do you do next? Well, you could now make the model class conditional, you could provide labels at training time. So you could provide, you know, let's say you're training on ImageNet or something, you could have labels that say this image is a goldfincher, this image is a Corgi or so on. And you could make the model, the denoising model class conditional, you could provide these labels, the model so that, given this label, it tries to produce an image from p of x given y, like the distribution of images that are kind of represented by this label. And it's pretty simple, you just throw in a label into the model at some point, so that it now has this extra information when it's trying to denoise images. You could also do something like up sampling, you could ask the model, given this low resolution image, what would be kind of the high resolution image that could be generated from this. So again, just like throwing in a label y, you can throw in a low resolution image as extra conditioning information into the model as it tries to denoise. So, we've now talked about models that are class conditional. The thing is, if you just train models like this, where you give them a label for an image and you train them for producing the image given the label, they're not very good at doing this out of the box. They kind of produce very incoherent samples. And one of the tricks that we developed to kind of fix this was the trick of guidance, where what you do is you train a model to look at the images that are being generated. Use a classifier to classify what is the label of this image. So you kind of look at a noisy image and you're like, you know, whether you ask the model, hey, does this look like a dog or not. So you train a classifier on these noisy images, then you take a gradient of the classifier, you ask the classifier, hey, how can I increase the likelihood to make this image look like a dog. Because you can run the classifier forward, you can get a, get a probability from the classifier of it being a dog, you can also differentiate this function to get the gradient of how to change the image so that this probability increases. And then you augment your diffusion model with such a classifier to kind of guide it towards generating images that are more likely to be classified as a dog by the classifier. So how do we end up doing this in practice. Okay, so you can train a classifier on noisy images, you can just take your data set of images, noise them and train a classifier to predict the label of the noisy images. And then how do you guide now your generative diffusion model to use this classifier. Well, you run the classifier on the noisy images, you predict the probability of, you know, the class label under the classifier so whether something is a dog or not. You take the gradient of this prediction to obtain kind of direction for which the model should change its input to increase the probability of this image, you can add this direction into the mean of the reverse process that you are already going towards. So in terms of the actual formula, it just looks like adding an extra term to your mean prediction, which is the gradient of the log probability of the prediction of the label, given the noisy image. Questions on this, this is, this is important and this could be a little complicated. It seems there are two questions before this. Can you read them. Do you still need a classifier. Once the model is trained. So here by the model you mean the diffusion model, right. Yes, you still need it, because it is part of the sampling process, you're using gradients directly from the classifier in the sampling process, so you still have to keep the classifier around when you sample from the model. So if you look at the next question is the underlying representation of the classes for condition. I followed the question, Ben, could you explain. Okay. I have another question. The s in the term. Is that just a hyper parameter or we'll get to that term in the next slide but yes that is just a hyper parameter. The main thing from this slide is like we previously had a reverse process that looked like a Gaussian with some mean mu and some variance sigma. We now have a modified reverse process where we've just modified the mean mu with an extra term, which is scaled by this parameter s has the variance in it kind of for appropriate scaling as well, and it has this gradient term, which is the gradient of a classifier on noise damages. And we're kind of basically using this gradient to kind of guide the model towards directions where the classifier would predict a higher likelihood of the label being correct for the noise damage, so that the conditional model produces an image that is more correct. Another question. Why is the variance in the additional term also included. That's just how it popped out from the derivation. Oh, okay. I guess you can think of it as kind of like the step size of these things is controlled by the variance if you have a Gaussian with a very small mean in the reverse process and you don't want to take a really large step with your gradient, because you'll really, you'll pop out very far from the reverse process should have taken you to the reverse process is taking really small steps, which kind of can be thought about by its variance, and you also want to change that process only by that much amount. Does that make sense. So, I guess the variance terms like a cap in step size. Right, like to the maximum and the class very gradient is maybe somewhere between zero and one or something like that or I don't know if it has any explicit range here, but I mean it's kind of mostly just direction. Yeah, and you're kind of scaling this direction by a step size. And the extra hyper parameter is if you want to kind of like make these steps bigger or smaller than what is naturally there so that's the extra parameter s that we'll talk about in the next slide. Okay, thank you. Yeah. Okay, so the parameter s here. So what we found was if you just actually use the step size that pops out from the derivation. So as being one, no, no hyper parameter, it kind of doesn't do that much. So on the left you see the samples with as being one. They don't look like any image from any particular class, but it turned out when we added this extra hyper parameter and just bumped it up. So you have scale 10 here on the right, they actually start looking like samples from the distribution of a particular class. So you can think of this extra hyper parameter s as kind of helping the model focus on the modes of the distribution because you're kind of narrowing down the possible things that it produces, at least that's what we saw empirically. However, the trade off here is because you're narrowing it down well, they also kind of start looking similar to each other, the images that are produced. But anyhow, the way to think about the scale factor here is just that it's controlling how much guidance we're using how much is the classifier influencing the final outcome. And when you use a small value for us, it's not influencing that much when you use a large value it's influencing a lot, and the effect of their influences, you're kind of collapsing your distribution towards the modes of whatever the table that thinks is kind of the best representation of that label, they were very high scale will just collapse to the thing that the classifier is most likely to classifiers that they just not always what you want you want some kind of diversity, what you produce. There's some, there's some like intermediate value of scale that is kind of the best that you want to use. And this is kind of how the process looks like in practice here on the bottom you here you have a usual like diffusion process with scale. Let me see I can't see the image. So scale zero you're just using no guidance, and then when you turn on guidance, and now using the gradients of the classifier can nudge the process in the direction where it's more likely to produce that butterfly. So the scale up even higher you're nudging it even further out from its original reverse trajectory into this new trajectory, where it's now producing a very clear butterfly. So the scale parameter is kind of controlling how much guidance is happening and how much the model is being nudged out from its original distribution towards this new better distribution. So similar things, instead of labels you could now have text descriptions of images. So, same model class you're still conditioning on something, but this conditioning thing why instead of being a label is now a piece of text that's a robot's kind of a pass now retreat. And you could train basically the same kind of models, all you have to now change as well you don't have a classified now right, there's no classifier that is predicting a label you're that you have to predict the whole sentence, if you try to do that. So how can we do guidance in this situation. Well, first, let me go in. Oh, okay. Well, first let me go into how you can even pass in conditioning information to diffusion models, which look like text, you just, you can just simply run a transformer on the text and just attend to the representations of the text in the model. What's important is just a pictorial representation of how to deal with text being passed into these models, you can just run a transformer model on this and just have your original convolutional unit architecture attend to this model when it's trying to do the denoising. Back to guidance, how do you actually guide when you have text as the kind of label information. And one of the things you could do is use clip. I think you guys cover clip in a previous lecture Ali you said that so can. Yes, sounds sounds good. Yeah, so I'll skip clip. Okay. So I'm assuming you guys on the clip, but basically clip is a model where you have an image encoder and a text encoder, and it's trying to predict how close the representations of the image and the text. And so you can use clip for guidance, you can ask, hey, I have this noise damage, I have this text description, run the image encoder run the text encoder from clip, how close are these representations. If they're close, then you're going to get a high dot product here, you can take a gradient of this dot product and get a direction to increase this dot product. And that's the gradient you're going to use for guidance, gonna ask the model hey can you increase this dot product so the image, the not the image that you're trying to produce from the reverse process is close in representations to the representation of the text that you're provided. So this is how clip guidance works. What you can do, which we sure enough, which was short in a paper on classifier free guidance is you could skip the classifier completely. And just train a usual diffusion model for for reversing the process but train it sometimes without labels. So sometimes don't, don't tell it what was the text that described an image. And then at test time you ask the model, which direction should it go, given the label and which direction should it go without the label. And then you move your predictions in the direction of the model predictions when it was given the label so in the formula here if epsilon was the epsilon theta xt given why was the prediction of the model with the label and epsilon theta xt given the empty set five was its prediction without the labels, you're kind of taking the difference of these two and using that as your direction to kind of nudge the model in. And again, you have the scale factor s outside of this direction, which telling the model to move in the direction of the predictions with the label. And when you use as greater than one, you'll be moving a lot more in the direction of the predictions with the label. And the cool thing about this way of guiding is that you don't need a separate classifier or a clip model or anything, you're just using the diffusion model itself for guidance. You're directly just asking the model, it's own kind of prediction of which way it should go to increase the probability of the generated image being from the correct class. Any questions about classifier free guidance. What I have is, have you thought about implementing something like, okay, at this, at each stage, for instance, let's talk about the butterfly example at this stage I want to add something to this image. And so the text, you know, can gradually form the shape like for the image like, okay, I want the butterfly and then on top of it I want this flower and then this, you know, gradually giving more idea of how your butterfly want to be depicted. So you're doing this in steps for image, and then you are injecting the tokens from the clip to your, you know, your network for for image generation. And so what if gradually adding things that you want to be in that image. That's a great question, I haven't done this, like we haven't done this directly, but you can kind of do this right, you could like, you could run your reverse process to some point with with your text conditioning being just the simple thing hey it's a butterfly. Then you could continue with a new text prompt for guidance, hey, the butterfly looks like this or so on, and keep going. Maybe that works. Not sure. You could do something else where you just run the whole process, first generate a butterfly. You take the butterfly, you noise it to go back in the process, and then rerun it, but now with a different prompt, so you kind of modifying this generated butterfly in a new direction. Then, you know, noise it again and rerun it again with a slightly different prompt, you kind of be like slowly changing this generation iteratively in these like kind of like iterative modification. So in another slide later we'll show how to do this with something like in painting, but if you just wanted to do it for your direct image. This is maybe how you would do it. Does that kind of answer. Yeah, yeah, I think that's a very interesting, you know, thought and yeah I appreciate your answer. I think that in painting could be one way of thinking about it. Yeah. Yeah, but what I was trying to say there was like yeah, you could also do it without impending by like kind of modifying the full image by like renoising it and reproducing. Yeah, yeah, that also makes sense. I think that I was also referring to more like just the way that by removing the noise you are, you know, trying to somehow refine the image. This also in steps could, you know, add more context to the image. And there might be different ways of implementing it. Yeah. I think that's good. Okay, thanks. Okay. So, in our guide paper we kind of compare these two forms of like guidance for text conditional models clip guidance was classified for guidance. And here are a few samples like representative samples from the model. So on the left here is just samples without any guidance. This is just a pure conditional diffusion model there is no form of classifier clip guidance or classifier free guidance. And kind of see, you know, it's kind of getting the prompts of the pram pure steam glass window of a panda panda eating bamboo. It's kind of alright, but it's not very coherent. Then you do clip guidance with scale to start getting better with the classifier free guidance ones look the best in in all the tests we did. And I think part of this might be just that it's, it's not exactly the correct thing to use clip part of it just might be that it's kind of better inductive bias to use classifier free guidance. There could be a lot of reasons but at least empirically, this was working better in practice to generate more realistic samples from these models, and you can see guidance does make a big difference in, you know, generating more realistic things, but it also does kind of make, you know, it's kind of like more collapse effect happen all of these samples kind of start looking a little similar to each other when when you do a lot of guidance. So, what what what have we done here we've trained a model that you know given a text prompt can generate images and we've done it for this diffusion technique. And this was what the strain in the glide paper, and we then showed that this model actually was beating the older open a model, Dali, which was actually a bigger model, which was trained in a very different fashion. The strain is using an order aggressive model on these like discrete VA tokens. And it, the new diffusion model not only generated things that looked a lot more realistic it actually generated them faster and use fewer parameters. So, this new model class is actually a lot nicer to use for these tasks than the older class of models. One cool advantage of these models is also because they're not doing this thing or to aggressively they're you know just generating and hold image you can do these things that are much harder to do with these older autoregressive models can do things like in painting. So you could mask out a portion of the image, and then ask the model to kind of fill in that portion. And how would you do that well just like we passed our conditioning labels in the past you could just pass in kind of this like half filled image as extra conditioning information to the model. So you take this image and a mask on top of it, you provide this extra information to the model when it's trying to run its generative process and it's going to try to now think of this as a label hey like this is image what are the possible images that correspond to this label for this kind of a masked image, what are the things that could complete this image. And what you're providing is this kind of like image X zero with a little bit of region must and a mask and that tells what is the part of the image that has been masked. Now, to text condition and painting, you could provide an, you know, an image with a mask and you could also provide a text label to tell the model how it shouldn't paint the region. So these are examples from the paper. So on the left here, you have the text label being zebras roaming in the field and you have this image with a green mask on it. So the masked region was removed. And the model was asked to fill in this image conditioned on this product. So now it's going to try to fill in not only something that kind of completes the image correctly, like isn't there the conditional distribution but also kind of matches the product. On the right here you see something with a girl hugging a corgi on a pedestal. And it's kind of matching the style of the image very well here if you can see it kind of looks like it's like painting. Kind of nicely like blended in. So this is really cool thing which you can do very easily out of the box with diffusion models but it's kind of much harder to do with other classes of models. And you could take this idea iteratively, like you could now erase a region of image. So let's say we erased the region on the left here, and you first filled it in with, you know, a cozy living room, and you raised a different region. And you know, asked for a painting of a corgi on the wall above the couch. When you get a painting there, you raise another region, put a coffee table, put a flower vase and so on. So this is one way of kind of doing the thing you talked about Ali, but you kind of like generate things iteratively, but this is doing it from painting erasing regions, raising very specific regions, then asking the model to fill that region in with the thing you want. It doesn't cover all kind of modifications that you want to do, but it does cover things that you can represent as like adding things one by one into an image, if that makes sense. So like stuff that you maybe cannot do with this is like, you know, change the style of an image completely the full thing, because well, if you just erase the whole thing you couldn't, it wouldn't have anything to condition it can't use the style but things like this where you add things, you can do it pretty easily through iterative painting. Any questions so far on the painting side of things. So Linda is asking if the collab is available for painting I think I saw it on the website. Yes, the collab that we released in the guide repo the thing the third one is the second one that one doesn't painting. Basically, all you like to do that is you'll have to provide this extra image, and you'll have to provide a mask or like mask out a portion of the image and then provide a mask that tells what has been masked. And then you just run the guided diffusion process as usual, but now with this extra information to try to impaint this region. I'll go into kind of notebook later but yes, the notebooks there. Diego also has a question. Can you remove objects using printing. Yeah, I mean, so let me go back to the slide. I mean, I guess, technically, in the very first one we removed the thing right we just must out whatever was on the wall in the left. And here we ended up adding a painting of a colleague but you could just ask for nothing. And then it would just fill it with the wall. I don't know if there's an example here. Yeah, in all of these things we kind of change something modified something but if you just don't give any prompt is just going to try to fill it. Without any extra information is just trying to make the best possible completion, and that could be kind of like removing an object. Does that answer your question. Assuming yes, never move on. Okay. Well, you can take this idea further and you can do out painting kind of so like previously we drew a mask that was inside the image, but you could also kind of move the rectangle that the model is focusing on outside the image. So now the mask looks like a strip of things around the image that is masked, and you can ask the model to fill that thing, and you could keep moving this rectangle around to kind of expand out from an image. This is something that Holly heard, and then she like to this central image here and then she kept moving the square out kind of expand out the canvas of the model and ask you to keep filling in extra information outside of the region. At the end of the day for the model is there is just like some conditioning information some mask, and it's going to just try to fill in in that region whatever it thinks is the best possible completion. It doesn't have to be inside and be outside as well. So, one other, I guess, important thing is like, we talked about the release notebooks the breeze notebooks is kind of the released model which is the filtered glide model. So in our paper we talk about this where we, if we looked at, you know, kind of the things you could generate with the big original glide model, and there were a lot of, like, problematic things that it could generate that made it unsafe to release the full big model. So release a small smaller model on a filter data set. And it cannot generate things that look as impressive as the big model, but it's still kind of can generate realistic looking images for like some of these easier prompts. But yes, there was going to be a little bit of a performance gap between using the filtered small model that has been released versus for the best images you can see. You can still generate a lot of cool things with the small filtered model. These are some of the things I found on Twitter that people have generated with the notebooks that we released. So on the left here. I think what they did was, they kind of did the painting thing, but they just went kind of like in a panorama fashion left to right, and kind of kept asking the model to fill these landscapes. The guidance scale a lot to make it very artsy think in the right. I've kind of problem like they've done this out painting thing but I don't know how they got those structures, but I think a part of this part of the fun stuff here is kind of these prompt search or prompt tuning things where you kind of find these prompts and generate very specific and artistic styles. And if you find very cool prompts and you can now use these tricks of our painting and so on, kind of like keep expanding it out to generate these cool pieces of art. This is another thing I found on Twitter where they trained a classifier for guidance model on conceptual captions and I think this is like a flower a space flower with some space. Our team. Super cool. There is a question. You want to read it. Let's see. What did it create that was dangerous. So, or maybe comment. Oh, sorry. I think I, yeah, what did it create that was dangerous. Yeah, I guess, well, for all the days I would recommend just reading a paper. I mean, there were, and I wasn't the one who did the safety analysis here was the opinion. The people who work on safety at opening and Alex. But I think it was stuff like violence it was stuff that could be used for like, if it makes it for like misinformation and so on. But I mean these models are pretty powerful so you could generate lots of things that you don't want to be floating on the internet. I mean, the trade offs are hard here right because like, on the one hand you do want to, you know, put these powerful models out there in the hands of people to like, generate all these nice cool art and like, like lots of positive use cases right. But I think you want to also be conservative to not create a lot of like stuff that you don't want floating around on the internet that's associated with your models. You know, this is a tough trade off. I think it's, it's nice that we can still release some safe model that people can use, but making these models like fully safe when they never generate something that is like, kind of like not a, not a good thing. It's very hard problem in general. So you need to find more like detailed examples in our paper, if you're looking for like specific examples, but that was kind of our line of thinking on like releasing like the small filter budget. Okay, maybe a slight tangent but what what does the process look like of let's say calling, you know, the unsafe parts away from from the model, like how do you go about that. So calls usually I guess training these training kind of like these classifiers to filter out portions of the data set that could be like not safe, if you could, you know, train an NSFW classifier you could train a classifier for like hate symbols you could train a classifier for other things, then you, once you have labeled data on which you can train these classifiers labeled data for like I don't know real images that you consider things that you don't want to model to generate. You could run these classifiers on your training data set filter it out, then train a model on the filter data set. So hopefully the model will never go into regions where there's nothing like that because it was never part of the training data. Yeah, awesome. Thank you. Okay, so just a quick like some like look into the notebooks that we've released this. This is just like some useful. Some parameters that you will have to like, kind of like deal with when you're trying to generate stuff from the notebooks that you released. Well, there's the two scales we've talked about in a talk today the classifier free guidance scale and the clip guidance scale, the small values for these scales will generate, you know, more diverse, but not very coherent samples larger values will generate coherent things very large values will generate like very artsy looking things. The classifier free guidance scale, like, I think three might be the default but you could try five 1020 or so on to generate more artistic things. Similarly for the clip guidance scale. Time steps kind of controls like how many little steps you take in the diffusion process. I think by default we use 100. There's 100 steps of like iterative denoising that will happen so if you use a higher value to look more sharp, but you'll also spend more time creating a sample. So it was a good like trade off that we used in the thing. Finally, the further in painting notebook, you would have to provide an extra thing which is like, what is the region of a given image that you want to paint so you would have to provide, let's say a 64 by 64 image that you want to impaint and some that you've like removed that you kind of specify with a mask, which is like, I think one in places where the image is not masked and zero in the places where the image is masked. I could be wrong on the zero versus one, so you should check the notebook for which direction, basically it's a binary mask that tells this is the portion of the image that is masked, this is the portion of the image that is unmasked. And the rest is like, just just a usual image with three channels that you provide as extra information to the model. And do you just upload that as an image file. I think the way in the notebook that works is, so if this is on a co lab you'll have to have the file on drive and then you open it using pillow image dot open or something. I don't know if there's like a direct upload button. But I guess like, Oh, sorry, I guess my question was, like when you add the mask, like the mask is just like removing part of like a regular image file or like there's something more to it. Oh, yeah, that's just removing parts of the regular file. So like, I think if you want to do it programmatically just just zero out that region. Does that answer the question or. That makes sense. Yeah, thank you. Yeah. There's an example in the notebook and there's a cell in the notebook that kind of masks an image that might be more clear where you can see like, you are loading an image from the disk then you are kind of like removing a region then you are kind of writing down a mask that specifies what you removed and then you pass in all this information into the model. So I think that's it for the stuff you will need to kind of like apply this thing to the notebook. And if you want more further reading or like what we talked about today, I mean I try to focus on mostly like things you will need to understand for like kind of generating art from these things but you want to go into more detail about the design of these models. I think the best paper would probably be the denoising diffusion probabilistic models paper by Jonathan Ho, the DDPM paper. That has kind of like the basic theory of the models that we talked about today, and there was our paper on diffusion models began to imagine this is that kind of talks about the guidance trick for classifier guidance, and then the glide paper to this for text conditional models where we talk about clip guidance and classifier free guidance. There was also the paper by young song generative modeling best made ingredients of the data distribution which kind of like was before the Jonathan Ho approach this problem from a very different perspective of score matching, and in the DDPM paper Jonathan Ho and others showed how it's kind of equivalent to score matching. So if you want to understand diffusion models from a different lens, I think I would strongly recommend that paper, and these two blogs as well by Lillian and Yang on diffusion models and score matching models, basically like two sides of the same kind of understanding from both the super useful to see you know why these generated models work. And that's it. Thank you so much it was very, very interesting and fascinating. I'm very inspiring. Are there questions. Go ahead. Super cool. Thank you. Question. Did you notice if there was any relationship between say, like, if you fed it to dimensional noise, and if you were to step through the X or Y coordinates, did you notice if there's any relationship between the coordinates used for two dimensional noise and the output you can Say that again. What did you say at the end. If you use two dimensional noise is there a relationship between the coordinates that you use for the two dimensional noise map and the outputs of the model. Like is there a relationship that that that you observe between the noise that you use and the model and the outputs of the model. There's a little bit so like one way you can do this is you can like fix the noise, the sample and change the label. And you can see that the generated images for the same noise but different labels kind of have similar like perspective and spatial structure. So like, but but they look kind of like images from different classes. So this is definitely control some aspect of you know how the final output looks like and there's some kind of spatial like connection, but it's not an exact direct connection. Does that kind of answer your question. Yeah, got it. I love this in our I think diffusion models beat guns paper. I think that in the appendix we have an example where we like do this specific thing. It's actually more directly connected when you use a different sampling method. So, I showed you there is reverse process right where at each step you're doing this reverse step with the Gaussian. At each step you're adding a little bit of noise when you sample from the Gaussian, but there's a different way of reverse sampling from these models which is called ddim is another paper on that, where you just sample noise once at the start. And then you just run a deterministic reverse process to sample from the model in that case that there's kind of like this one to one correspondence between the noise and the generated image, and then it's more clear to see this. Thank you. I can ask my earlier question again, I guess if nobody else is not a question. So I guess, if you're using a diffusion model without clip. Right. So I guess what's being trained is the classifiers for the labels that am I understanding that correctly. For the denoising process. Yeah, I guess I'm trying to understand if without clip. How does it know what to denoise to without like some representation of the text that you're feeding it. Yeah, yeah, so. Well, yeah, if you train a model or denoising model without text labels, then it doesn't know where to go and the only way you can generate a sample for a given text distribution it would would be through like clip guidance or something, but we do have. We train these models to be text conditional diffusion model. And in the classifier free guidance case, you train it with or without the labels. So maybe I can go back to one of our slides here. The way the model, the reverse process model sees the text is through this kind of conditioning on the, the representations output by a transformer on the text. Okay, got it. So this text conditioning here is without clip. Yes, so. Can I point a glossed over in guidance was you could use guidance on top of unconditional models or conditional models. So you could have a reverse diffusion model that isn't conditioned on any labels, then it wouldn't have any way of actually like producing an image given a class. But then you could use guidance on top to get it to produce an image giving a class, but you could also use guidance on top of conditional models themselves. So you could have your original model be able to produce an image text, like we did here, but also use guidance on top to make it even better at doing this. Got it. Okay, yeah. This one. Okay, thank you. Okay, excellent. If are there more questions. Well, I think that we can wrap up the session. Again want to thank you a lot. Profile and it was, it was great. Thank you so much. Thank you. And thank you for having me and feel free to just like email me any questions later or DM me on Twitter with questions. I think there's a lot of cool stuff out happening in this so like, I would strongly recommend doing some of the like reading some of the blogs are reading just like things that you can find in other collab notebooks as well.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.84, "text": " Hello everyone, welcome to your course, AI for Art, Aesthetics and Creativity.", "tokens": [50364, 2425, 1518, 11, 2928, 281, 428, 1164, 11, 7318, 337, 5735, 11, 316, 377, 9092, 1167, 293, 11972, 4253, 13, 50756], "temperature": 0.0, "avg_logprob": -0.33286575560874127, "compression_ratio": 1.2238805970149254, "no_speech_prob": 0.013301042839884758}, {"id": 1, "seek": 0, "start": 7.84, "end": 18.88, "text": " Today we have a very special speaker, Prof. from OpenAI, and he's going to talk about", "tokens": [50756, 2692, 321, 362, 257, 588, 2121, 8145, 11, 6039, 13, 490, 7238, 48698, 11, 293, 415, 311, 516, 281, 751, 466, 51308], "temperature": 0.0, "avg_logprob": -0.33286575560874127, "compression_ratio": 1.2238805970149254, "no_speech_prob": 0.013301042839884758}, {"id": 2, "seek": 1888, "start": 18.88, "end": 29.759999999999998, "text": " creating art and artistic work and images in general, these diffusion models and probably", "tokens": [50364, 4084, 1523, 293, 17090, 589, 293, 5267, 294, 2674, 11, 613, 25242, 5245, 293, 1391, 50908], "temperature": 0.0, "avg_logprob": -0.24951195350060096, "compression_ratio": 1.46524064171123, "no_speech_prob": 0.4161187410354614}, {"id": 3, "seek": 1888, "start": 29.759999999999998, "end": 37.239999999999995, "text": " you have already worked with the glide collab, so he's going to walk us through that as well.", "tokens": [50908, 291, 362, 1217, 2732, 365, 264, 41848, 44228, 11, 370, 415, 311, 516, 281, 1792, 505, 807, 300, 382, 731, 13, 51282], "temperature": 0.0, "avg_logprob": -0.24951195350060096, "compression_ratio": 1.46524064171123, "no_speech_prob": 0.4161187410354614}, {"id": 4, "seek": 1888, "start": 37.239999999999995, "end": 45.879999999999995, "text": " So let's get us started, Prof. I always ask if please you can share with us what motivates", "tokens": [51282, 407, 718, 311, 483, 505, 1409, 11, 6039, 13, 286, 1009, 1029, 498, 1767, 291, 393, 2073, 365, 505, 437, 42569, 51714], "temperature": 0.0, "avg_logprob": -0.24951195350060096, "compression_ratio": 1.46524064171123, "no_speech_prob": 0.4161187410354614}, {"id": 5, "seek": 4588, "start": 45.88, "end": 51.88, "text": " you working in this space and also giving us a little background about yourself.", "tokens": [50364, 291, 1364, 294, 341, 1901, 293, 611, 2902, 505, 257, 707, 3678, 466, 1803, 13, 50664], "temperature": 0.0, "avg_logprob": -0.27361106872558594, "compression_ratio": 1.581896551724138, "no_speech_prob": 0.005205586552619934}, {"id": 6, "seek": 4588, "start": 51.88, "end": 57.88, "text": " For sure, thanks for having me here today, by the way this is really exciting.", "tokens": [50664, 1171, 988, 11, 3231, 337, 1419, 385, 510, 965, 11, 538, 264, 636, 341, 307, 534, 4670, 13, 50964], "temperature": 0.0, "avg_logprob": -0.27361106872558594, "compression_ratio": 1.581896551724138, "no_speech_prob": 0.005205586552619934}, {"id": 7, "seek": 4588, "start": 57.88, "end": 67.88, "text": " Yeah, so a background about me, I was an undergrad at MIT in computer science and math and then after that,", "tokens": [50964, 865, 11, 370, 257, 3678, 466, 385, 11, 286, 390, 364, 14295, 412, 13100, 294, 3820, 3497, 293, 5221, 293, 550, 934, 300, 11, 51464], "temperature": 0.0, "avg_logprob": -0.27361106872558594, "compression_ratio": 1.581896551724138, "no_speech_prob": 0.005205586552619934}, {"id": 8, "seek": 4588, "start": 67.88, "end": 73.88, "text": " I came to OpenAI to do AI research and I've been here for five years doing research on unsupervised", "tokens": [51464, 286, 1361, 281, 7238, 48698, 281, 360, 7318, 2132, 293, 286, 600, 668, 510, 337, 1732, 924, 884, 2132, 322, 2693, 12879, 24420, 51764], "temperature": 0.0, "avg_logprob": -0.27361106872558594, "compression_ratio": 1.581896551724138, "no_speech_prob": 0.005205586552619934}, {"id": 9, "seek": 7388, "start": 73.88, "end": 81.88, "text": " learning, generative models, all kinds of things and what motivates me to do this research.", "tokens": [50364, 2539, 11, 1337, 1166, 5245, 11, 439, 3685, 295, 721, 293, 437, 42569, 385, 281, 360, 341, 2132, 13, 50764], "temperature": 0.0, "avg_logprob": -0.17590220078178073, "compression_ratio": 1.5210526315789474, "no_speech_prob": 0.010967439040541649}, {"id": 10, "seek": 7388, "start": 81.88, "end": 91.88, "text": " When I was in college, I was excited by the idea of trying to understand what makes humans intelligent", "tokens": [50764, 1133, 286, 390, 294, 3859, 11, 286, 390, 2919, 538, 264, 1558, 295, 1382, 281, 1223, 437, 1669, 6255, 13232, 51264], "temperature": 0.0, "avg_logprob": -0.17590220078178073, "compression_ratio": 1.5210526315789474, "no_speech_prob": 0.010967439040541649}, {"id": 11, "seek": 7388, "start": 91.88, "end": 99.88, "text": " and I think I attended a few talks, which were really amazing and I felt like there's a lot of", "tokens": [51264, 293, 286, 519, 286, 15990, 257, 1326, 6686, 11, 597, 645, 534, 2243, 293, 286, 2762, 411, 456, 311, 257, 688, 295, 51664], "temperature": 0.0, "avg_logprob": -0.17590220078178073, "compression_ratio": 1.5210526315789474, "no_speech_prob": 0.010967439040541649}, {"id": 12, "seek": 9988, "start": 99.88, "end": 103.88, "text": " amazing progress happening in this field and I just wanted to part of it, see what's happening, see what", "tokens": [50364, 2243, 4205, 2737, 294, 341, 2519, 293, 286, 445, 1415, 281, 644, 295, 309, 11, 536, 437, 311, 2737, 11, 536, 437, 50564], "temperature": 0.0, "avg_logprob": -0.14241137287833475, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.024749016389250755}, {"id": 13, "seek": 9988, "start": 103.88, "end": 109.88, "text": " I could contribute and then one thing led to another and here I am.", "tokens": [50564, 286, 727, 10586, 293, 550, 472, 551, 4684, 281, 1071, 293, 510, 286, 669, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14241137287833475, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.024749016389250755}, {"id": 14, "seek": 9988, "start": 109.88, "end": 119.88, "text": " I think so far, wouldn't say we are very close to unraveling what makes humans intelligent,", "tokens": [50864, 286, 519, 370, 1400, 11, 2759, 380, 584, 321, 366, 588, 1998, 281, 40507, 278, 437, 1669, 6255, 13232, 11, 51364], "temperature": 0.0, "avg_logprob": -0.14241137287833475, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.024749016389250755}, {"id": 15, "seek": 9988, "start": 119.88, "end": 127.88, "text": " but we've made a lot of progress I think in these years, so it's been pretty fun.", "tokens": [51364, 457, 321, 600, 1027, 257, 688, 295, 4205, 286, 519, 294, 613, 924, 11, 370, 309, 311, 668, 1238, 1019, 13, 51764], "temperature": 0.0, "avg_logprob": -0.14241137287833475, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.024749016389250755}, {"id": 16, "seek": 12788, "start": 127.88, "end": 133.88, "text": " Cool then, so I'll just get started.", "tokens": [50364, 8561, 550, 11, 370, 286, 603, 445, 483, 1409, 13, 50664], "temperature": 0.0, "avg_logprob": -0.20981801350911458, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.01183955930173397}, {"id": 17, "seek": 12788, "start": 133.88, "end": 139.88, "text": " And anyone, feel free to just ask any question at any point, pause me if anything feels confusing,", "tokens": [50664, 400, 2878, 11, 841, 1737, 281, 445, 1029, 604, 1168, 412, 604, 935, 11, 10465, 385, 498, 1340, 3417, 13181, 11, 50964], "temperature": 0.0, "avg_logprob": -0.20981801350911458, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.01183955930173397}, {"id": 18, "seek": 12788, "start": 139.88, "end": 147.88, "text": " if any notation is understood. I don't see the chat window on my screen directly, so if you could just", "tokens": [50964, 498, 604, 24657, 307, 7320, 13, 286, 500, 380, 536, 264, 5081, 4910, 322, 452, 2568, 3838, 11, 370, 498, 291, 727, 445, 51364], "temperature": 0.0, "avg_logprob": -0.20981801350911458, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.01183955930173397}, {"id": 19, "seek": 12788, "start": 147.88, "end": 153.88, "text": " directly tell your question, that would be easier or if Ali, if you see something in the chat, just let me know.", "tokens": [51364, 3838, 980, 428, 1168, 11, 300, 576, 312, 3571, 420, 498, 12020, 11, 498, 291, 536, 746, 294, 264, 5081, 11, 445, 718, 385, 458, 13, 51664], "temperature": 0.0, "avg_logprob": -0.20981801350911458, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.01183955930173397}, {"id": 20, "seek": 15388, "start": 153.88, "end": 157.88, "text": " Cool, I'll get started.", "tokens": [50364, 8561, 11, 286, 603, 483, 1409, 13, 50564], "temperature": 0.0, "avg_logprob": -0.20486863883765968, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.014028712175786495}, {"id": 21, "seek": 15388, "start": 157.88, "end": 165.88, "text": " So I'll begin by just showing a few examples of very powerful creative ML models from the past few years.", "tokens": [50564, 407, 286, 603, 1841, 538, 445, 4099, 257, 1326, 5110, 295, 588, 4005, 5880, 21601, 5245, 490, 264, 1791, 1326, 924, 13, 50964], "temperature": 0.0, "avg_logprob": -0.20486863883765968, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.014028712175786495}, {"id": 22, "seek": 15388, "start": 165.88, "end": 173.88, "text": " The first one you all might have already seen in news GP3, the language model from OpenAI.", "tokens": [50964, 440, 700, 472, 291, 439, 1062, 362, 1217, 1612, 294, 2583, 26039, 18, 11, 264, 2856, 2316, 490, 7238, 48698, 13, 51364], "temperature": 0.0, "avg_logprob": -0.20486863883765968, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.014028712175786495}, {"id": 23, "seek": 15388, "start": 173.88, "end": 179.88, "text": " And one example I'm showcasing here is like these language models.", "tokens": [51364, 400, 472, 1365, 286, 478, 29794, 3349, 510, 307, 411, 613, 2856, 5245, 13, 51664], "temperature": 0.0, "avg_logprob": -0.20486863883765968, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.014028712175786495}, {"id": 24, "seek": 17988, "start": 179.88, "end": 190.88, "text": " They show like a very few examples of something pretty simple like here, like on the left you see examples of like poems by specific black writers.", "tokens": [50364, 814, 855, 411, 257, 588, 1326, 5110, 295, 746, 1238, 2199, 411, 510, 11, 411, 322, 264, 1411, 291, 536, 5110, 295, 411, 24014, 538, 2685, 2211, 13491, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1770691129896376, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.029238754883408546}, {"id": 25, "seek": 17988, "start": 190.88, "end": 196.88, "text": " And on the right, then you can see once the model has seen examples of this kind, what it can generate.", "tokens": [50914, 400, 322, 264, 558, 11, 550, 291, 393, 536, 1564, 264, 2316, 575, 1612, 5110, 295, 341, 733, 11, 437, 309, 393, 8460, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1770691129896376, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.029238754883408546}, {"id": 26, "seek": 17988, "start": 196.88, "end": 202.88, "text": " And it's getting poetry from just a few examples. This is pretty crazy.", "tokens": [51214, 400, 309, 311, 1242, 15155, 490, 445, 257, 1326, 5110, 13, 639, 307, 1238, 3219, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1770691129896376, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.029238754883408546}, {"id": 27, "seek": 17988, "start": 202.88, "end": 205.88, "text": " There's a second model I'll show you next.", "tokens": [51514, 821, 311, 257, 1150, 2316, 286, 603, 855, 291, 958, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1770691129896376, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.029238754883408546}, {"id": 28, "seek": 20588, "start": 205.88, "end": 208.88, "text": " This is the audio playing.", "tokens": [50364, 639, 307, 264, 6278, 2433, 13, 50514], "temperature": 0.0, "avg_logprob": -0.45470629240337174, "compression_ratio": 0.9655172413793104, "no_speech_prob": 0.32334378361701965}, {"id": 29, "seek": 20588, "start": 211.88, "end": 214.88, "text": " Yeah, we can hear your audio.", "tokens": [50664, 865, 11, 321, 393, 1568, 428, 6278, 13, 50814], "temperature": 0.0, "avg_logprob": -0.45470629240337174, "compression_ratio": 0.9655172413793104, "no_speech_prob": 0.32334378361701965}, {"id": 30, "seek": 23588, "start": 236.88, "end": 240.88, "text": " You may bring it, and that's it.", "tokens": [50414, 509, 815, 1565, 309, 11, 293, 300, 311, 309, 13, 50614], "temperature": 0.0, "avg_logprob": -0.8729202406747001, "compression_ratio": 0.8421052631578947, "no_speech_prob": 0.22214846312999725}, {"id": 31, "seek": 24088, "start": 240.88, "end": 265.88, "text": " Anyhow, so that was a sample from a model for generating music called jukebox.", "tokens": [50364, 2639, 4286, 11, 370, 300, 390, 257, 6889, 490, 257, 2316, 337, 17746, 1318, 1219, 3649, 330, 4995, 13, 51614], "temperature": 0.0, "avg_logprob": -0.3283267228499703, "compression_ratio": 1.0129870129870129, "no_speech_prob": 0.018530789762735367}, {"id": 32, "seek": 26588, "start": 265.88, "end": 273.88, "text": " And everything here was generated from the model, the music, the singing, how to sing it, how to pronounce the lyrics and everything.", "tokens": [50364, 400, 1203, 510, 390, 10833, 490, 264, 2316, 11, 264, 1318, 11, 264, 6726, 11, 577, 281, 1522, 309, 11, 577, 281, 19567, 264, 12189, 293, 1203, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1411126541764769, "compression_ratio": 1.797752808988764, "no_speech_prob": 0.22128301858901978}, {"id": 33, "seek": 26588, "start": 273.88, "end": 278.88, "text": " All the model was given was the lyrics and an artist and it produced all of this by itself.", "tokens": [50764, 1057, 264, 2316, 390, 2212, 390, 264, 12189, 293, 364, 5748, 293, 309, 7126, 439, 295, 341, 538, 2564, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1411126541764769, "compression_ratio": 1.797752808988764, "no_speech_prob": 0.22128301858901978}, {"id": 34, "seek": 26588, "start": 278.88, "end": 285.88, "text": " Does the generative model like produce the music and like the sentence separately or together?", "tokens": [51014, 4402, 264, 1337, 1166, 2316, 411, 5258, 264, 1318, 293, 411, 264, 8174, 14759, 420, 1214, 30, 51364], "temperature": 0.0, "avg_logprob": -0.1411126541764769, "compression_ratio": 1.797752808988764, "no_speech_prob": 0.22128301858901978}, {"id": 35, "seek": 28588, "start": 285.88, "end": 294.88, "text": " Everything together. Yeah, so because kind of how you sing something kind of has to go with the music that's provided by Swasa, right?", "tokens": [50364, 5471, 1214, 13, 865, 11, 370, 570, 733, 295, 577, 291, 1522, 746, 733, 295, 575, 281, 352, 365, 264, 1318, 300, 311, 5649, 538, 3926, 9994, 11, 558, 30, 50814], "temperature": 0.0, "avg_logprob": -0.21522387591275302, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.029214579612016678}, {"id": 36, "seek": 28588, "start": 294.88, "end": 299.88, "text": " It's kind of hard to like generate them separately from each other.", "tokens": [50814, 467, 311, 733, 295, 1152, 281, 411, 8460, 552, 14759, 490, 1184, 661, 13, 51064], "temperature": 0.0, "avg_logprob": -0.21522387591275302, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.029214579612016678}, {"id": 37, "seek": 28588, "start": 299.88, "end": 301.88, "text": " What was that your question?", "tokens": [51064, 708, 390, 300, 428, 1168, 30, 51164], "temperature": 0.0, "avg_logprob": -0.21522387591275302, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.029214579612016678}, {"id": 38, "seek": 28588, "start": 301.88, "end": 307.88, "text": " So I can read from the chat that people are getting excited.", "tokens": [51164, 407, 286, 393, 1401, 490, 264, 5081, 300, 561, 366, 1242, 2919, 13, 51464], "temperature": 0.0, "avg_logprob": -0.21522387591275302, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.029214579612016678}, {"id": 39, "seek": 28588, "start": 307.88, "end": 313.88, "text": " Someone has a loud and other is saying this is freaking awesome.", "tokens": [51464, 8734, 575, 257, 6588, 293, 661, 307, 1566, 341, 307, 14612, 3476, 13, 51764], "temperature": 0.0, "avg_logprob": -0.21522387591275302, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.029214579612016678}, {"id": 40, "seek": 31388, "start": 313.88, "end": 316.88, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.24884021693262562, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.007807954680174589}, {"id": 41, "seek": 31388, "start": 316.88, "end": 321.88, "text": " Share or talk if you like.", "tokens": [50514, 14945, 420, 751, 498, 291, 411, 13, 50764], "temperature": 0.0, "avg_logprob": -0.24884021693262562, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.007807954680174589}, {"id": 42, "seek": 31388, "start": 321.88, "end": 323.88, "text": " Oh yeah.", "tokens": [50764, 876, 1338, 13, 50864], "temperature": 0.0, "avg_logprob": -0.24884021693262562, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.007807954680174589}, {"id": 43, "seek": 31388, "start": 323.88, "end": 328.88, "text": " Sorry, I can't see the chat window so feel free to just talk.", "tokens": [50864, 4919, 11, 286, 393, 380, 536, 264, 5081, 4910, 370, 841, 1737, 281, 445, 751, 13, 51114], "temperature": 0.0, "avg_logprob": -0.24884021693262562, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.007807954680174589}, {"id": 44, "seek": 31388, "start": 328.88, "end": 333.88, "text": " Yeah, when we heard samples from like that from these models we were also amazed.", "tokens": [51114, 865, 11, 562, 321, 2198, 10938, 490, 411, 300, 490, 613, 5245, 321, 645, 611, 20507, 13, 51364], "temperature": 0.0, "avg_logprob": -0.24884021693262562, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.007807954680174589}, {"id": 45, "seek": 33388, "start": 333.88, "end": 347.88, "text": " The model I have here is the slide model you guys might have seen in papers. And here you have a model that given a text prompt is generating a visual representation of it or whatever it imagines what that the text kind of signifies.", "tokens": [50364, 440, 2316, 286, 362, 510, 307, 264, 4137, 2316, 291, 1074, 1062, 362, 1612, 294, 10577, 13, 400, 510, 291, 362, 257, 2316, 300, 2212, 257, 2487, 12391, 307, 17746, 257, 5056, 10290, 295, 309, 420, 2035, 309, 2576, 1652, 437, 300, 264, 2487, 733, 295, 1465, 11221, 13, 51064], "temperature": 0.0, "avg_logprob": -0.19574075990968998, "compression_ratio": 1.7432432432432432, "no_speech_prob": 0.5610803365707397}, {"id": 46, "seek": 33388, "start": 347.88, "end": 362.88, "text": " So you could see, and these are things that are go back to your point Ali you made earlier about composition. These things involve a model really having to compose a lot of different concepts together like robots meditating in a way past the retreat, but it is able to imagine this.", "tokens": [51064, 407, 291, 727, 536, 11, 293, 613, 366, 721, 300, 366, 352, 646, 281, 428, 935, 12020, 291, 1027, 3071, 466, 12686, 13, 1981, 721, 9494, 257, 2316, 534, 1419, 281, 35925, 257, 688, 295, 819, 10392, 1214, 411, 14733, 46850, 294, 257, 636, 1791, 264, 15505, 11, 457, 309, 307, 1075, 281, 3811, 341, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19574075990968998, "compression_ratio": 1.7432432432432432, "no_speech_prob": 0.5610803365707397}, {"id": 47, "seek": 36288, "start": 362.88, "end": 377.88, "text": " In the last few years I think like ML models for such very hard creative tasks have become really good. And today we'll see like what are some of the kind of concepts driving this progress.", "tokens": [50364, 682, 264, 1036, 1326, 924, 286, 519, 411, 21601, 5245, 337, 1270, 588, 1152, 5880, 9608, 362, 1813, 534, 665, 13, 400, 965, 321, 603, 536, 411, 437, 366, 512, 295, 264, 733, 295, 10392, 4840, 341, 4205, 13, 51114], "temperature": 0.0, "avg_logprob": -0.168677851211193, "compression_ratio": 1.3309859154929577, "no_speech_prob": 0.002432839944958687}, {"id": 48, "seek": 37788, "start": 377.88, "end": 393.88, "text": " And so before I even start down that route, like why are we trying to, you know, from a research perspective like trying to train models that you know create things. Well, one concept here is that, you know, this as this code by Feynman says what I cannot create I cannot.", "tokens": [50364, 400, 370, 949, 286, 754, 722, 760, 300, 7955, 11, 411, 983, 366, 321, 1382, 281, 11, 291, 458, 11, 490, 257, 2132, 4585, 411, 1382, 281, 3847, 5245, 300, 291, 458, 1884, 721, 13, 1042, 11, 472, 3410, 510, 307, 300, 11, 291, 458, 11, 341, 382, 341, 3089, 538, 46530, 77, 1601, 1619, 437, 286, 2644, 1884, 286, 2644, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1749518278873328, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.06842558085918427}, {"id": 49, "seek": 39388, "start": 393.88, "end": 412.88, "text": " I don't understand training models that can, you know, create things be images or your video and so on. It's kind of one of the hardest tasks in those domains. And if you really care about whether models can understand images audio video so on, then one of the best ways to know", "tokens": [50364, 286, 500, 380, 1223, 3097, 5245, 300, 393, 11, 291, 458, 11, 1884, 721, 312, 5267, 420, 428, 960, 293, 370, 322, 13, 467, 311, 733, 295, 472, 295, 264, 13158, 9608, 294, 729, 25514, 13, 400, 498, 291, 534, 1127, 466, 1968, 5245, 393, 1223, 5267, 6278, 960, 370, 322, 11, 550, 472, 295, 264, 1151, 2098, 281, 458, 51314], "temperature": 0.0, "avg_logprob": -0.22555974125862122, "compression_ratio": 1.5977011494252873, "no_speech_prob": 0.380437433719635}, {"id": 50, "seek": 41288, "start": 412.88, "end": 421.88, "text": " if you're making progress out of these models are really learning something advanced is to see if they can create really complex things and really hard to understand things.", "tokens": [50364, 498, 291, 434, 1455, 4205, 484, 295, 613, 5245, 366, 534, 2539, 746, 7339, 307, 281, 536, 498, 436, 393, 1884, 534, 3997, 721, 293, 534, 1152, 281, 1223, 721, 13, 50814], "temperature": 0.0, "avg_logprob": -0.10664858669042587, "compression_ratio": 1.7049180327868851, "no_speech_prob": 0.04462437704205513}, {"id": 51, "seek": 41288, "start": 421.88, "end": 430.88, "text": " And for people who care about representation learning or something this is one, one way you can know you're making progress on such stuff.", "tokens": [50814, 400, 337, 561, 567, 1127, 466, 10290, 2539, 420, 746, 341, 307, 472, 11, 472, 636, 291, 393, 458, 291, 434, 1455, 4205, 322, 1270, 1507, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10664858669042587, "compression_ratio": 1.7049180327868851, "no_speech_prob": 0.04462437704205513}, {"id": 52, "seek": 43088, "start": 430.88, "end": 445.88, "text": " And there has been a lot of progress in this field of, you know, trying to create things from models or what we call generative modeling. So here you see just in this very small domain of phase generation, things that GANs could create in 2014, versus things that they can create in", "tokens": [50364, 400, 456, 575, 668, 257, 688, 295, 4205, 294, 341, 2519, 295, 11, 291, 458, 11, 1382, 281, 1884, 721, 490, 5245, 420, 437, 321, 818, 1337, 1166, 15983, 13, 407, 510, 291, 536, 445, 294, 341, 588, 1359, 9274, 295, 5574, 5125, 11, 721, 300, 460, 1770, 82, 727, 1884, 294, 8227, 11, 5717, 721, 300, 436, 393, 1884, 294, 51114], "temperature": 0.0, "avg_logprob": -0.1708831346951998, "compression_ratio": 1.558011049723757, "no_speech_prob": 0.004980700556188822}, {"id": 53, "seek": 44588, "start": 445.88, "end": 452.88, "text": " 2018, like, it's absolutely astounding how much progress has happened in the past few years.", "tokens": [50364, 6096, 11, 411, 11, 309, 311, 3122, 5357, 24625, 577, 709, 4205, 575, 2011, 294, 264, 1791, 1326, 924, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1576711401647451, "compression_ratio": 1.553648068669528, "no_speech_prob": 0.12576846778392792}, {"id": 54, "seek": 44588, "start": 452.88, "end": 474.88, "text": " So, what is a generative model. So, you can think of what our inputs here in our data set to look like just a collection of examples, x1, y1, x2, y2, xn, yn, where x here represents, let's say an image and why some label or some other information describing this image.", "tokens": [50714, 407, 11, 437, 307, 257, 1337, 1166, 2316, 13, 407, 11, 291, 393, 519, 295, 437, 527, 15743, 510, 294, 527, 1412, 992, 281, 574, 411, 445, 257, 5765, 295, 5110, 11, 2031, 16, 11, 288, 16, 11, 2031, 17, 11, 288, 17, 11, 2031, 77, 11, 288, 77, 11, 689, 2031, 510, 8855, 11, 718, 311, 584, 364, 3256, 293, 983, 512, 7645, 420, 512, 661, 1589, 16141, 341, 3256, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1576711401647451, "compression_ratio": 1.553648068669528, "no_speech_prob": 0.12576846778392792}, {"id": 55, "seek": 47488, "start": 474.88, "end": 482.88, "text": " So you just have the sample from some natural distribution of images, p of x comma y.", "tokens": [50364, 407, 291, 445, 362, 264, 6889, 490, 512, 3303, 7316, 295, 5267, 11, 280, 295, 2031, 22117, 288, 13, 50764], "temperature": 0.0, "avg_logprob": -0.18080673217773438, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.03065129928290844}, {"id": 56, "seek": 47488, "start": 482.88, "end": 496.88, "text": " So you could have like images of corgis, ostriches, goldfishes and so on. You want to train a model that can learn this distribution you want to train a model that then ask for a corgi produces a corgi and ask for an ostrich produces an ostrich, or so on.", "tokens": [50764, 407, 291, 727, 362, 411, 5267, 295, 1181, 70, 271, 11, 44024, 480, 279, 11, 3821, 11608, 279, 293, 370, 322, 13, 509, 528, 281, 3847, 257, 2316, 300, 393, 1466, 341, 7316, 291, 528, 281, 3847, 257, 2316, 300, 550, 1029, 337, 257, 1181, 7834, 14725, 257, 1181, 7834, 293, 1029, 337, 364, 44024, 480, 14725, 364, 44024, 480, 11, 420, 370, 322, 13, 51464], "temperature": 0.0, "avg_logprob": -0.18080673217773438, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.03065129928290844}, {"id": 57, "seek": 49688, "start": 496.88, "end": 508.88, "text": " You want to learn p of x given y, given some label y, corgi, ostrich, goldfish and so on. Can I generate a real image or an image that looks real from this distribution.", "tokens": [50364, 509, 528, 281, 1466, 280, 295, 2031, 2212, 288, 11, 2212, 512, 7645, 288, 11, 1181, 7834, 11, 44024, 480, 11, 3821, 11608, 293, 370, 322, 13, 1664, 286, 8460, 257, 957, 3256, 420, 364, 3256, 300, 1542, 957, 490, 341, 7316, 13, 50964], "temperature": 0.0, "avg_logprob": -0.16446310220305452, "compression_ratio": 1.68348623853211, "no_speech_prob": 0.07047316431999207}, {"id": 58, "seek": 49688, "start": 508.88, "end": 514.88, "text": " And one such a model is trained, you can use it to generate novel samples.", "tokens": [50964, 400, 472, 1270, 257, 2316, 307, 8895, 11, 291, 393, 764, 309, 281, 8460, 7613, 10938, 13, 51264], "temperature": 0.0, "avg_logprob": -0.16446310220305452, "compression_ratio": 1.68348623853211, "no_speech_prob": 0.07047316431999207}, {"id": 59, "seek": 49688, "start": 514.88, "end": 524.88, "text": " So you can generate corgis, ostrich, goldfishes that are actually real haven't been seen before but look like real images.", "tokens": [51264, 407, 291, 393, 8460, 1181, 70, 271, 11, 44024, 480, 11, 3821, 11608, 279, 300, 366, 767, 957, 2378, 380, 668, 1612, 949, 457, 574, 411, 957, 5267, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16446310220305452, "compression_ratio": 1.68348623853211, "no_speech_prob": 0.07047316431999207}, {"id": 60, "seek": 52488, "start": 524.88, "end": 534.88, "text": " One of the things I guess that matters is, is how you evaluate such models because if you if you don't have evaluation metric you can't tell you're making progress.", "tokens": [50364, 1485, 295, 264, 721, 286, 2041, 300, 7001, 307, 11, 307, 577, 291, 13059, 1270, 5245, 570, 498, 291, 498, 291, 500, 380, 362, 13344, 20678, 291, 393, 380, 980, 291, 434, 1455, 4205, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10872878557370033, "compression_ratio": 1.64, "no_speech_prob": 0.0163862481713295}, {"id": 61, "seek": 52488, "start": 534.88, "end": 547.88, "text": " And we won't go into too much detail here about these metrics but one of the metrics use was FID for measuring image generation and what these metrics are trying to capture is like fidelity and diversity.", "tokens": [50864, 400, 321, 1582, 380, 352, 666, 886, 709, 2607, 510, 466, 613, 16367, 457, 472, 295, 264, 16367, 764, 390, 479, 2777, 337, 13389, 3256, 5125, 293, 437, 613, 16367, 366, 1382, 281, 7983, 307, 411, 46404, 293, 8811, 13, 51514], "temperature": 0.0, "avg_logprob": -0.10872878557370033, "compression_ratio": 1.64, "no_speech_prob": 0.0163862481713295}, {"id": 62, "seek": 54788, "start": 548.88, "end": 559.88, "text": " Fidelity would mean like how realistic or how correct an image looks versus diversity would be like how many different kinds of images such a model can generate.", "tokens": [50414, 479, 33343, 576, 914, 411, 577, 12465, 420, 577, 3006, 364, 3256, 1542, 5717, 8811, 576, 312, 411, 577, 867, 819, 3685, 295, 5267, 1270, 257, 2316, 393, 8460, 13, 50964], "temperature": 0.0, "avg_logprob": -0.12715024007877834, "compression_ratio": 1.6439024390243901, "no_speech_prob": 0.020945722237229347}, {"id": 63, "seek": 54788, "start": 559.88, "end": 574.88, "text": " And so GANs were kind of like the state of the art for difficult image generation benchmarks before diffusion models came along which we will not talk about in our talk today.", "tokens": [50964, 400, 370, 460, 1770, 82, 645, 733, 295, 411, 264, 1785, 295, 264, 1523, 337, 2252, 3256, 5125, 43751, 949, 25242, 5245, 1361, 2051, 597, 321, 486, 406, 751, 466, 294, 527, 751, 965, 13, 51714], "temperature": 0.0, "avg_logprob": -0.12715024007877834, "compression_ratio": 1.6439024390243901, "no_speech_prob": 0.020945722237229347}, {"id": 64, "seek": 57488, "start": 574.88, "end": 584.88, "text": " The progress in diffusion models has been pretty recent, it's been just like the last couple of years there's been a lot of papers and even in these people that you could see like things have been improving since 2020.", "tokens": [50364, 440, 4205, 294, 25242, 5245, 575, 668, 1238, 5162, 11, 309, 311, 668, 445, 411, 264, 1036, 1916, 295, 924, 456, 311, 668, 257, 688, 295, 10577, 293, 754, 294, 613, 561, 300, 291, 727, 536, 411, 721, 362, 668, 11470, 1670, 4808, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13869406960227273, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.005997778382152319}, {"id": 65, "seek": 57488, "start": 584.88, "end": 592.88, "text": " And you could now generate realistic faces, you know, lots of different categories of images from ImageNet and so on from these models.", "tokens": [50864, 400, 291, 727, 586, 8460, 12465, 8475, 11, 291, 458, 11, 3195, 295, 819, 10479, 295, 5267, 490, 29903, 31890, 293, 370, 322, 490, 613, 5245, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13869406960227273, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.005997778382152319}, {"id": 66, "seek": 59288, "start": 592.88, "end": 608.88, "text": " So it's a pretty exciting field and these models in one of our recent papers we showed them to be actually better than GANs at generating images and so I'm pretty excited by these models and that's what I'm going to cover today.", "tokens": [50364, 407, 309, 311, 257, 1238, 4670, 2519, 293, 613, 5245, 294, 472, 295, 527, 5162, 10577, 321, 4712, 552, 281, 312, 767, 1101, 813, 460, 1770, 82, 412, 17746, 5267, 293, 370, 286, 478, 1238, 2919, 538, 613, 5245, 293, 300, 311, 437, 286, 478, 516, 281, 2060, 965, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08602617447634778, "compression_ratio": 1.59009009009009, "no_speech_prob": 0.005727540701627731}, {"id": 67, "seek": 59288, "start": 608.88, "end": 616.88, "text": " There's quick graphic here for like how things look like when diffusion models generate an image.", "tokens": [51164, 821, 311, 1702, 14089, 510, 337, 411, 577, 721, 574, 411, 562, 25242, 5245, 8460, 364, 3256, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08602617447634778, "compression_ratio": 1.59009009009009, "no_speech_prob": 0.005727540701627731}, {"id": 68, "seek": 59288, "start": 616.88, "end": 619.88, "text": " Let me just play it again.", "tokens": [51564, 961, 385, 445, 862, 309, 797, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08602617447634778, "compression_ratio": 1.59009009009009, "no_speech_prob": 0.005727540701627731}, {"id": 69, "seek": 61988, "start": 619.88, "end": 624.88, "text": " So let's go to what these models are.", "tokens": [50364, 407, 718, 311, 352, 281, 437, 613, 5245, 366, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11222860162908381, "compression_ratio": 1.480263157894737, "no_speech_prob": 0.0019261531997472048}, {"id": 70, "seek": 61988, "start": 624.88, "end": 636.88, "text": " As you saw in that graphic, you could see that that image was started out looking like noise and you finally got a real image out by like the slow process of noise converting to an image.", "tokens": [50614, 1018, 291, 1866, 294, 300, 14089, 11, 291, 727, 536, 300, 300, 3256, 390, 1409, 484, 1237, 411, 5658, 293, 291, 2721, 658, 257, 957, 3256, 484, 538, 411, 264, 2964, 1399, 295, 5658, 29942, 281, 364, 3256, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11222860162908381, "compression_ratio": 1.480263157894737, "no_speech_prob": 0.0019261531997472048}, {"id": 71, "seek": 63688, "start": 636.88, "end": 651.88, "text": " And what is actually happening behind the scenes here is you have a fixed process that adds noise to a training image. So let's say you start with X0 on the left here as an image.", "tokens": [50364, 400, 437, 307, 767, 2737, 2261, 264, 8026, 510, 307, 291, 362, 257, 6806, 1399, 300, 10860, 5658, 281, 257, 3097, 3256, 13, 407, 718, 311, 584, 291, 722, 365, 1783, 15, 322, 264, 1411, 510, 382, 364, 3256, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09673014858312774, "compression_ratio": 1.4931506849315068, "no_speech_prob": 0.06093566119670868}, {"id": 72, "seek": 63688, "start": 651.88, "end": 654.88, "text": " So that's just a dog ball on the left.", "tokens": [51114, 407, 300, 311, 445, 257, 3000, 2594, 322, 264, 1411, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09673014858312774, "compression_ratio": 1.4931506849315068, "no_speech_prob": 0.06093566119670868}, {"id": 73, "seek": 65488, "start": 654.88, "end": 670.88, "text": " So a fixed process that slowly adds Gaussian noise to this image. So at each step you add a little amount of Gaussian noise. And as you go from left to right by the end, at the last time step B, you have just pure noise left.", "tokens": [50364, 407, 257, 6806, 1399, 300, 5692, 10860, 39148, 5658, 281, 341, 3256, 13, 407, 412, 1184, 1823, 291, 909, 257, 707, 2372, 295, 39148, 5658, 13, 400, 382, 291, 352, 490, 1411, 281, 558, 538, 264, 917, 11, 412, 264, 1036, 565, 1823, 363, 11, 291, 362, 445, 6075, 5658, 1411, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13314409439380354, "compression_ratio": 1.7905982905982907, "no_speech_prob": 0.03512844070792198}, {"id": 74, "seek": 65488, "start": 670.88, "end": 682.88, "text": " And what the model is trying to learn is to undo this process. It's trying to reverse it. It's trying to take some noise damage and be noisy a little bit, make it a little less noisy and so on.", "tokens": [51164, 400, 437, 264, 2316, 307, 1382, 281, 1466, 307, 281, 23779, 341, 1399, 13, 467, 311, 1382, 281, 9943, 309, 13, 467, 311, 1382, 281, 747, 512, 5658, 4344, 293, 312, 24518, 257, 707, 857, 11, 652, 309, 257, 707, 1570, 24518, 293, 370, 322, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13314409439380354, "compression_ratio": 1.7905982905982907, "no_speech_prob": 0.03512844070792198}, {"id": 75, "seek": 68288, "start": 682.88, "end": 695.88, "text": " How do you obtain a generative model out of this? Well, if you train a model to reverse noise like this, then at test time when you actually want to use the model, you could start with pure noise at the end.", "tokens": [50364, 1012, 360, 291, 12701, 257, 1337, 1166, 2316, 484, 295, 341, 30, 1042, 11, 498, 291, 3847, 257, 2316, 281, 9943, 5658, 411, 341, 11, 550, 412, 1500, 565, 562, 291, 767, 528, 281, 764, 264, 2316, 11, 291, 727, 722, 365, 6075, 5658, 412, 264, 917, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10439215535702913, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.010322422720491886}, {"id": 76, "seek": 68288, "start": 695.88, "end": 704.88, "text": " You could start with XT. Then you could run it step by step backwards to remove noise from it and try to produce an image from it.", "tokens": [51014, 509, 727, 722, 365, 1783, 51, 13, 1396, 291, 727, 1190, 309, 1823, 538, 1823, 12204, 281, 4159, 5658, 490, 309, 293, 853, 281, 5258, 364, 3256, 490, 309, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10439215535702913, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.010322422720491886}, {"id": 77, "seek": 68288, "start": 704.88, "end": 711.88, "text": " Any questions on this diagram?", "tokens": [51464, 2639, 1651, 322, 341, 10686, 30, 51814], "temperature": 0.0, "avg_logprob": -0.10439215535702913, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.010322422720491886}, {"id": 78, "seek": 71188, "start": 712.88, "end": 720.88, "text": " Okay, I'll just check the chat to throw the question there.", "tokens": [50414, 1033, 11, 286, 603, 445, 1520, 264, 5081, 281, 3507, 264, 1168, 456, 13, 50814], "temperature": 0.0, "avg_logprob": -0.21825069427490235, "compression_ratio": 1.144927536231884, "no_speech_prob": 0.0037633178289979696}, {"id": 79, "seek": 71188, "start": 720.88, "end": 724.88, "text": " Okay, no questions.", "tokens": [50814, 1033, 11, 572, 1651, 13, 51014], "temperature": 0.0, "avg_logprob": -0.21825069427490235, "compression_ratio": 1.144927536231884, "no_speech_prob": 0.0037633178289979696}, {"id": 80, "seek": 72488, "start": 724.88, "end": 741.88, "text": " Okay, so let's remember the notation from your X0 is an example from the dataset, XT, capital T, XT is noise and there's intermediate steps, X little t's, we call them, where you have like some slightly", "tokens": [50364, 1033, 11, 370, 718, 311, 1604, 264, 24657, 490, 428, 1783, 15, 307, 364, 1365, 490, 264, 28872, 11, 1783, 51, 11, 4238, 314, 11, 1783, 51, 307, 5658, 293, 456, 311, 19376, 4439, 11, 1783, 707, 256, 311, 11, 321, 818, 552, 11, 689, 291, 362, 411, 512, 4748, 51214], "temperature": 0.0, "avg_logprob": -0.228070718270761, "compression_ratio": 1.3835616438356164, "no_speech_prob": 0.0065869782119989395}, {"id": 81, "seek": 74188, "start": 742.88, "end": 758.88, "text": " noise image. And we can, to introduce more notation here, you could represent one step of the forward noising process with a distribution Q of X little t, given X little t minus 1.", "tokens": [50414, 5658, 3256, 13, 400, 321, 393, 11, 281, 5366, 544, 24657, 510, 11, 291, 727, 2906, 472, 1823, 295, 264, 2128, 572, 3436, 1399, 365, 257, 7316, 1249, 295, 1783, 707, 256, 11, 2212, 1783, 707, 256, 3175, 502, 13, 51214], "temperature": 0.0, "avg_logprob": -0.24164495712671524, "compression_ratio": 1.586734693877551, "no_speech_prob": 0.07577530294656754}, {"id": 82, "seek": 74188, "start": 758.88, "end": 770.88, "text": " And right now, I'm going to use Gaussian noise as a noising process. So we're going to add a little bit of Gaussian noise to this.", "tokens": [51214, 400, 558, 586, 11, 286, 478, 516, 281, 764, 39148, 5658, 382, 257, 572, 3436, 1399, 13, 407, 321, 434, 516, 281, 909, 257, 707, 857, 295, 39148, 5658, 281, 341, 13, 51814], "temperature": 0.0, "avg_logprob": -0.24164495712671524, "compression_ratio": 1.586734693877551, "no_speech_prob": 0.07577530294656754}, {"id": 83, "seek": 77088, "start": 770.88, "end": 785.88, "text": " And the thing about here is this in this notation, there's some mean, which is centered around the original noise damage XT minus one, and there's some variance one minus alpha T here of how much noise that is being added to this image.", "tokens": [50364, 400, 264, 551, 466, 510, 307, 341, 294, 341, 24657, 11, 456, 311, 512, 914, 11, 597, 307, 18988, 926, 264, 3380, 5658, 4344, 1783, 51, 3175, 472, 11, 293, 456, 311, 512, 21977, 472, 3175, 8961, 314, 510, 295, 577, 709, 5658, 300, 307, 885, 3869, 281, 341, 3256, 13, 51114], "temperature": 0.0, "avg_logprob": -0.18715065002441406, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.007005017250776291}, {"id": 84, "seek": 77088, "start": 785.88, "end": 796.88, "text": " So this is the forward process. This is the process that adds noise to images Q of XT given XT minus one. What we are learning is the reverse thing. We want to denoise this image.", "tokens": [51114, 407, 341, 307, 264, 2128, 1399, 13, 639, 307, 264, 1399, 300, 10860, 5658, 281, 5267, 1249, 295, 1783, 51, 2212, 1783, 51, 3175, 472, 13, 708, 321, 366, 2539, 307, 264, 9943, 551, 13, 492, 528, 281, 1441, 38800, 341, 3256, 13, 51664], "temperature": 0.0, "avg_logprob": -0.18715065002441406, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.007005017250776291}, {"id": 85, "seek": 79688, "start": 796.88, "end": 804.88, "text": " So we were learning P of XT minus one given XT. And what you can show is for very small", "tokens": [50364, 407, 321, 645, 2539, 430, 295, 1783, 51, 3175, 472, 2212, 1783, 51, 13, 400, 437, 291, 393, 855, 307, 337, 588, 1359, 50764], "temperature": 0.0, "avg_logprob": -0.12765573105722103, "compression_ratio": 1.4081632653061225, "no_speech_prob": 0.0009243841632269323}, {"id": 86, "seek": 79688, "start": 806.88, "end": 815.88, "text": " noising steps where the amount of noise added is very tiny. The reverse process kind of looks like the forward process.", "tokens": [50864, 572, 3436, 4439, 689, 264, 2372, 295, 5658, 3869, 307, 588, 5870, 13, 440, 9943, 1399, 733, 295, 1542, 411, 264, 2128, 1399, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12765573105722103, "compression_ratio": 1.4081632653061225, "no_speech_prob": 0.0009243841632269323}, {"id": 87, "seek": 81588, "start": 815.88, "end": 824.88, "text": " This is kind of a set of points. Maybe I'll go in a little bit of an example here. Let's say, looking at a single pixel here, it had some real value on the real line, let's say", "tokens": [50364, 639, 307, 733, 295, 257, 992, 295, 2793, 13, 2704, 286, 603, 352, 294, 257, 707, 857, 295, 364, 1365, 510, 13, 961, 311, 584, 11, 1237, 412, 257, 2167, 19261, 510, 11, 309, 632, 512, 957, 2158, 322, 264, 957, 1622, 11, 718, 311, 584, 50814], "temperature": 0.0, "avg_logprob": -0.17626502487685655, "compression_ratio": 1.488262910798122, "no_speech_prob": 0.010005386546254158}, {"id": 88, "seek": 81588, "start": 826.88, "end": 836.88, "text": " 0.8. And then you added a tiny amount of Gaussian noise to that thing. So it became 0.81 or 0.79 or so, depending on what noise you sampled.", "tokens": [50914, 1958, 13, 23, 13, 400, 550, 291, 3869, 257, 5870, 2372, 295, 39148, 5658, 281, 300, 551, 13, 407, 309, 3062, 1958, 13, 32875, 420, 1958, 13, 32042, 420, 370, 11, 5413, 322, 437, 5658, 291, 3247, 15551, 13, 51414], "temperature": 0.0, "avg_logprob": -0.17626502487685655, "compression_ratio": 1.488262910798122, "no_speech_prob": 0.010005386546254158}, {"id": 89, "seek": 83688, "start": 836.88, "end": 845.88, "text": " Now you're given this new value 0.79. This is the noise value. And you want to predict the distribution of what could have been the value it came from.", "tokens": [50364, 823, 291, 434, 2212, 341, 777, 2158, 1958, 13, 32042, 13, 639, 307, 264, 5658, 2158, 13, 400, 291, 528, 281, 6069, 264, 7316, 295, 437, 727, 362, 668, 264, 2158, 309, 1361, 490, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11913920737601616, "compression_ratio": 1.565, "no_speech_prob": 0.005906738806515932}, {"id": 90, "seek": 83688, "start": 845.88, "end": 856.88, "text": " If the amount of noise added, that you added in your step was very tiny amount of Gaussian noise, then the reverse prediction also looks kind of like a Gaussian.", "tokens": [50814, 759, 264, 2372, 295, 5658, 3869, 11, 300, 291, 3869, 294, 428, 1823, 390, 588, 5870, 2372, 295, 39148, 5658, 11, 550, 264, 9943, 17630, 611, 1542, 733, 295, 411, 257, 39148, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11913920737601616, "compression_ratio": 1.565, "no_speech_prob": 0.005906738806515932}, {"id": 91, "seek": 85688, "start": 857.88, "end": 867.88, "text": " So it looks like, oh, it's somewhere around 0.79, some distribution that where you came from. I mean, 0.8 is pretty close to 0.79 in this situation.", "tokens": [50414, 407, 309, 1542, 411, 11, 1954, 11, 309, 311, 4079, 926, 1958, 13, 32042, 11, 512, 7316, 300, 689, 291, 1361, 490, 13, 286, 914, 11, 1958, 13, 23, 307, 1238, 1998, 281, 1958, 13, 32042, 294, 341, 2590, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12100518268087636, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.02063155360519886}, {"id": 92, "seek": 85688, "start": 868.88, "end": 881.88, "text": " And so you could write that down as a model that is predicting the mean of this reverse process and the variance of this reverse process, mu theta being the mean and sigma theta here being the variance that you're trying to predict.", "tokens": [50964, 400, 370, 291, 727, 2464, 300, 760, 382, 257, 2316, 300, 307, 32884, 264, 914, 295, 341, 9943, 1399, 293, 264, 21977, 295, 341, 9943, 1399, 11, 2992, 9725, 885, 264, 914, 293, 12771, 9725, 510, 885, 264, 21977, 300, 291, 434, 1382, 281, 6069, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12100518268087636, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.02063155360519886}, {"id": 93, "seek": 88188, "start": 882.88, "end": 888.88, "text": " So far, so good. Any questions at this point?", "tokens": [50414, 407, 1400, 11, 370, 665, 13, 2639, 1651, 412, 341, 935, 30, 50714], "temperature": 0.0, "avg_logprob": -0.1942906379699707, "compression_ratio": 1.4866666666666666, "no_speech_prob": 0.0021819344256073236}, {"id": 94, "seek": 88188, "start": 895.88, "end": 910.88, "text": " Okay, so to summarize the notation again, XT minus one to XT is a process that's adding noise and the process we are trying to learn is XT to XT minus one to reverse this noise.", "tokens": [51064, 1033, 11, 370, 281, 20858, 264, 24657, 797, 11, 1783, 51, 3175, 472, 281, 1783, 51, 307, 257, 1399, 300, 311, 5127, 5658, 293, 264, 1399, 321, 366, 1382, 281, 1466, 307, 1783, 51, 281, 1783, 51, 3175, 472, 281, 9943, 341, 5658, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1942906379699707, "compression_ratio": 1.4866666666666666, "no_speech_prob": 0.0021819344256073236}, {"id": 95, "seek": 91088, "start": 910.88, "end": 918.88, "text": " And this looks like a Gaussian in the forward direction and predicting a new Gaussian in the reverse direction.", "tokens": [50364, 400, 341, 1542, 411, 257, 39148, 294, 264, 2128, 3513, 293, 32884, 257, 777, 39148, 294, 264, 9943, 3513, 13, 50764], "temperature": 0.0, "avg_logprob": -0.0921492753205476, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.0005190853262320161}, {"id": 96, "seek": 91088, "start": 920.88, "end": 935.88, "text": " A paper showed you could do some forms of training tricks to make this process simpler. You don't have to add noise little by little at every step. You could just directly sample an intermediate XT given your data example by just adding a lot of Gaussian noise to it.", "tokens": [50864, 316, 3035, 4712, 291, 727, 360, 512, 6422, 295, 3097, 11733, 281, 652, 341, 1399, 18587, 13, 509, 500, 380, 362, 281, 909, 5658, 707, 538, 707, 412, 633, 1823, 13, 509, 727, 445, 3838, 6889, 364, 19376, 1783, 51, 2212, 428, 1412, 1365, 538, 445, 5127, 257, 688, 295, 39148, 5658, 281, 309, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0921492753205476, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.0005190853262320161}, {"id": 97, "seek": 93588, "start": 936.88, "end": 944.88, "text": " And it also showed instead of trying to predict the mean of the reverse process, you could just directly try to predict what noise was added to the image.", "tokens": [50414, 400, 309, 611, 4712, 2602, 295, 1382, 281, 6069, 264, 914, 295, 264, 9943, 1399, 11, 291, 727, 445, 3838, 853, 281, 6069, 437, 5658, 390, 3869, 281, 264, 3256, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09226322174072266, "compression_ratio": 1.5816993464052287, "no_speech_prob": 0.0021483697928488255}, {"id": 98, "seek": 93588, "start": 946.88, "end": 950.88, "text": " This is possible because you could write the mean in terms of the noise that was added.", "tokens": [50914, 639, 307, 1944, 570, 291, 727, 2464, 264, 914, 294, 2115, 295, 264, 5658, 300, 390, 3869, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09226322174072266, "compression_ratio": 1.5816993464052287, "no_speech_prob": 0.0021483697928488255}, {"id": 99, "seek": 95088, "start": 951.88, "end": 971.88, "text": " Trying to predict the variance can be just simplified to just using a fixed variance or a learnt variance. We won't go into that today. All you should get from this is that to predict the reverse process where you are trying to predict the mean and the variance of the Gaussian to reverse that", "tokens": [50414, 20180, 281, 6069, 264, 21977, 393, 312, 445, 26335, 281, 445, 1228, 257, 6806, 21977, 420, 257, 18991, 21977, 13, 492, 1582, 380, 352, 666, 300, 965, 13, 1057, 291, 820, 483, 490, 341, 307, 300, 281, 6069, 264, 9943, 1399, 689, 291, 366, 1382, 281, 6069, 264, 914, 293, 264, 21977, 295, 264, 39148, 281, 9943, 300, 51414], "temperature": 0.0, "avg_logprob": -0.10639381408691406, "compression_ratio": 1.6839080459770115, "no_speech_prob": 0.019117943942546844}, {"id": 100, "seek": 97188, "start": 971.88, "end": 976.88, "text": " noising process, it's enough to try to predict what noise was added to the image.", "tokens": [50364, 572, 3436, 1399, 11, 309, 311, 1547, 281, 853, 281, 6069, 437, 5658, 390, 3869, 281, 264, 3256, 13, 50614], "temperature": 0.0, "avg_logprob": -0.19631373714393294, "compression_ratio": 1.5449735449735449, "no_speech_prob": 0.006095621269196272}, {"id": 101, "seek": 97188, "start": 978.88, "end": 993.88, "text": " So how does this look like when you are actually training these borders? You take an image X0, you sample some random noise, you sample some Gaussian noise and you just combine these two to produce a noised XT.", "tokens": [50714, 407, 577, 775, 341, 574, 411, 562, 291, 366, 767, 3097, 613, 16287, 30, 509, 747, 364, 3256, 1783, 15, 11, 291, 6889, 512, 4974, 5658, 11, 291, 6889, 512, 39148, 5658, 293, 291, 445, 10432, 613, 732, 281, 5258, 257, 572, 2640, 1783, 51, 13, 51464], "temperature": 0.0, "avg_logprob": -0.19631373714393294, "compression_ratio": 1.5449735449735449, "no_speech_prob": 0.006095621269196272}, {"id": 102, "seek": 99388, "start": 994.88, "end": 997.88, "text": " There's a formula here of how we've combined them.", "tokens": [50414, 821, 311, 257, 8513, 510, 295, 577, 321, 600, 9354, 552, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13339553159825943, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.03159468248486519}, {"id": 103, "seek": 99388, "start": 998.88, "end": 1014.88, "text": " You can think of this combination as something that is kind of like interpolating between the image and the noise. So at t close to zero, you should just get the image X0 and t close to capital T, you should get complete noise.", "tokens": [50614, 509, 393, 519, 295, 341, 6562, 382, 746, 300, 307, 733, 295, 411, 44902, 990, 1296, 264, 3256, 293, 264, 5658, 13, 407, 412, 256, 1998, 281, 4018, 11, 291, 820, 445, 483, 264, 3256, 1783, 15, 293, 256, 1998, 281, 4238, 314, 11, 291, 820, 483, 3566, 5658, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13339553159825943, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.03159468248486519}, {"id": 104, "seek": 101488, "start": 1015.88, "end": 1025.88, "text": " And this kind of interpolation factor, alpha t bar, kind of plotted it here, it goes from like one near t equals zero to zero near t equals capital T.", "tokens": [50414, 400, 341, 733, 295, 44902, 399, 5952, 11, 8961, 256, 2159, 11, 733, 295, 43288, 309, 510, 11, 309, 1709, 490, 411, 472, 2651, 256, 6915, 4018, 281, 4018, 2651, 256, 6915, 4238, 314, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12709457316297165, "compression_ratio": 1.775330396475771, "no_speech_prob": 0.029275089502334595}, {"id": 105, "seek": 101488, "start": 1026.88, "end": 1031.88, "text": " This kind of controls how you interpolate between a fully denoised image versus a fully noised thing.", "tokens": [50964, 639, 733, 295, 9003, 577, 291, 44902, 473, 1296, 257, 4498, 1441, 78, 2640, 3256, 5717, 257, 4498, 572, 2640, 551, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12709457316297165, "compression_ratio": 1.775330396475771, "no_speech_prob": 0.029275089502334595}, {"id": 106, "seek": 101488, "start": 1032.88, "end": 1039.88, "text": " And at training time, you're just sampling all possible combinations of mixing of noise and image and you're trying to denoise all these combinations.", "tokens": [51264, 400, 412, 3097, 565, 11, 291, 434, 445, 21179, 439, 1944, 21267, 295, 11983, 295, 5658, 293, 3256, 293, 291, 434, 1382, 281, 1441, 38800, 439, 613, 21267, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12709457316297165, "compression_ratio": 1.775330396475771, "no_speech_prob": 0.029275089502334595}, {"id": 107, "seek": 103988, "start": 1040.88, "end": 1051.88, "text": " So what is the model trying to do now? It's trying to predict, as we said in the earlier slide, it's trying to predict what noise was added into the image.", "tokens": [50414, 407, 437, 307, 264, 2316, 1382, 281, 360, 586, 30, 467, 311, 1382, 281, 6069, 11, 382, 321, 848, 294, 264, 3071, 4137, 11, 309, 311, 1382, 281, 6069, 437, 5658, 390, 3869, 666, 264, 3256, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1098572313785553, "compression_ratio": 1.805, "no_speech_prob": 0.0020817492622882128}, {"id": 108, "seek": 103988, "start": 1052.88, "end": 1067.88, "text": " So you take in the noised XT, you take in what time step or kind of like an indication of where in the process you are, you tell the network, hey, I am at this step in the process, this is my noised image.", "tokens": [51014, 407, 291, 747, 294, 264, 572, 2640, 1783, 51, 11, 291, 747, 294, 437, 565, 1823, 420, 733, 295, 411, 364, 18877, 295, 689, 294, 264, 1399, 291, 366, 11, 291, 980, 264, 3209, 11, 4177, 11, 286, 669, 412, 341, 1823, 294, 264, 1399, 11, 341, 307, 452, 572, 2640, 3256, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1098572313785553, "compression_ratio": 1.805, "no_speech_prob": 0.0020817492622882128}, {"id": 109, "seek": 106788, "start": 1067.88, "end": 1071.88, "text": " What noise was possibly added to this image? So it's trying to predict epsilon.", "tokens": [50364, 708, 5658, 390, 6264, 3869, 281, 341, 3256, 30, 407, 309, 311, 1382, 281, 6069, 17889, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1050041913986206, "compression_ratio": 1.747787610619469, "no_speech_prob": 0.0030732962768524885}, {"id": 110, "seek": 106788, "start": 1072.88, "end": 1089.88, "text": " And what it's being used to train with is just like simple L2 loss, like just take the mean squared error of the difference between the network's prediction and the actual noise that you trained with and you try to minimise this loss so that you can train the network to predict what noise was added into the image.", "tokens": [50614, 400, 437, 309, 311, 885, 1143, 281, 3847, 365, 307, 445, 411, 2199, 441, 17, 4470, 11, 411, 445, 747, 264, 914, 8889, 6713, 295, 264, 2649, 1296, 264, 3209, 311, 17630, 293, 264, 3539, 5658, 300, 291, 8895, 365, 293, 291, 853, 281, 4464, 908, 341, 4470, 370, 300, 291, 393, 3847, 264, 3209, 281, 6069, 437, 5658, 390, 3869, 666, 264, 3256, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1050041913986206, "compression_ratio": 1.747787610619469, "no_speech_prob": 0.0030732962768524885}, {"id": 111, "seek": 108988, "start": 1090.88, "end": 1100.88, "text": " So intuitively, you can think of this as like, well, if I'm given a noised image, and if I can predict what noise was added to it, I can kind of like subtract that noise out, right, try to get a real image out.", "tokens": [50414, 407, 46506, 11, 291, 393, 519, 295, 341, 382, 411, 11, 731, 11, 498, 286, 478, 2212, 257, 572, 2640, 3256, 11, 293, 498, 286, 393, 6069, 437, 5658, 390, 3869, 281, 309, 11, 286, 393, 733, 295, 411, 16390, 300, 5658, 484, 11, 558, 11, 853, 281, 483, 257, 957, 3256, 484, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09464511242541639, "compression_ratio": 1.602803738317757, "no_speech_prob": 0.03730244189500809}, {"id": 112, "seek": 108988, "start": 1101.88, "end": 1106.88, "text": " And this is kind of what is happening when you're training a diffusion model. It's learning to denoise images.", "tokens": [50964, 400, 341, 307, 733, 295, 437, 307, 2737, 562, 291, 434, 3097, 257, 25242, 2316, 13, 467, 311, 2539, 281, 1441, 38800, 5267, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09464511242541639, "compression_ratio": 1.602803738317757, "no_speech_prob": 0.03730244189500809}, {"id": 113, "seek": 108988, "start": 1108.88, "end": 1109.88, "text": " Any questions so far?", "tokens": [51314, 2639, 1651, 370, 1400, 30, 51364], "temperature": 0.0, "avg_logprob": -0.09464511242541639, "compression_ratio": 1.602803738317757, "no_speech_prob": 0.03730244189500809}, {"id": 114, "seek": 110988, "start": 1109.88, "end": 1117.88, "text": " No questions.", "tokens": [50364, 883, 1651, 13, 50764], "temperature": 0.0, "avg_logprob": -0.2772235870361328, "compression_ratio": 1.0930232558139534, "no_speech_prob": 0.017968278378248215}, {"id": 115, "seek": 110988, "start": 1118.88, "end": 1119.88, "text": " Okay.", "tokens": [50814, 1033, 13, 50864], "temperature": 0.0, "avg_logprob": -0.2772235870361328, "compression_ratio": 1.0930232558139534, "no_speech_prob": 0.017968278378248215}, {"id": 116, "seek": 110988, "start": 1121.88, "end": 1125.88, "text": " So what does the model that kind of does this denoising usually look like?", "tokens": [50964, 407, 437, 775, 264, 2316, 300, 733, 295, 775, 341, 1441, 78, 3436, 2673, 574, 411, 30, 51164], "temperature": 0.0, "avg_logprob": -0.2772235870361328, "compression_ratio": 1.0930232558139534, "no_speech_prob": 0.017968278378248215}, {"id": 117, "seek": 112588, "start": 1126.88, "end": 1145.88, "text": " Kind of models that we have in our papers usually look like these convolutional unit style models where the U kind of signifies kind of like how the shape of the model here in this picture is looking like, but to think of it as just like a model that runs a bunch of", "tokens": [50414, 9242, 295, 5245, 300, 321, 362, 294, 527, 10577, 2673, 574, 411, 613, 45216, 304, 4985, 3758, 5245, 689, 264, 624, 733, 295, 1465, 11221, 733, 295, 411, 577, 264, 3909, 295, 264, 2316, 510, 294, 341, 3036, 307, 1237, 411, 11, 457, 281, 519, 295, 309, 382, 445, 411, 257, 2316, 300, 6676, 257, 3840, 295, 51364], "temperature": 0.0, "avg_logprob": -0.16782898199362833, "compression_ratio": 1.6319018404907975, "no_speech_prob": 0.029293743893504143}, {"id": 118, "seek": 114588, "start": 1146.88, "end": 1163.88, "text": " convolutional images, it kind of like down samples the image down into smaller and smaller spatial fields so that it can like learn features at different levels of granularity and then kind of samples it back into something that looks like a prediction of a noise.", "tokens": [50414, 45216, 304, 5267, 11, 309, 733, 295, 411, 760, 10938, 264, 3256, 760, 666, 4356, 293, 4356, 23598, 7909, 370, 300, 309, 393, 411, 1466, 4122, 412, 819, 4358, 295, 39962, 507, 293, 550, 733, 295, 10938, 309, 646, 666, 746, 300, 1542, 411, 257, 17630, 295, 257, 5658, 13, 51264], "temperature": 0.0, "avg_logprob": -0.15456775382713037, "compression_ratio": 1.639751552795031, "no_speech_prob": 0.005136086139827967}, {"id": 119, "seek": 116388, "start": 1164.88, "end": 1173.88, "text": " I don't have to go into the details of architectures, but just to give you an example of what kind of neural nets are trained to perform this task, this is how they look like.", "tokens": [50414, 286, 500, 380, 362, 281, 352, 666, 264, 4365, 295, 6331, 1303, 11, 457, 445, 281, 976, 291, 364, 1365, 295, 437, 733, 295, 18161, 36170, 366, 8895, 281, 2042, 341, 5633, 11, 341, 307, 577, 436, 574, 411, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11313580953946678, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.004537465516477823}, {"id": 120, "seek": 116388, "start": 1175.88, "end": 1185.88, "text": " So, okay, we have a model that is trying to now denoise images, it's trying to predict the noise that was added to an image. How do we go back to actually getting a generative model out of this?", "tokens": [50964, 407, 11, 1392, 11, 321, 362, 257, 2316, 300, 307, 1382, 281, 586, 1441, 38800, 5267, 11, 309, 311, 1382, 281, 6069, 264, 5658, 300, 390, 3869, 281, 364, 3256, 13, 1012, 360, 321, 352, 646, 281, 767, 1242, 257, 1337, 1166, 2316, 484, 295, 341, 30, 51464], "temperature": 0.0, "avg_logprob": -0.11313580953946678, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.004537465516477823}, {"id": 121, "seek": 118588, "start": 1186.88, "end": 1200.88, "text": " As we talked about in an earlier slide, it's equivalent to predicting the mean of the reverse process, like you can write down the mean of the reverse process in terms of the noise prediction.", "tokens": [50414, 1018, 321, 2825, 466, 294, 364, 3071, 4137, 11, 309, 311, 10344, 281, 32884, 264, 914, 295, 264, 9943, 1399, 11, 411, 291, 393, 2464, 760, 264, 914, 295, 264, 9943, 1399, 294, 2115, 295, 264, 5658, 17630, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07927672068277995, "compression_ratio": 2.0710059171597632, "no_speech_prob": 0.018534917384386063}, {"id": 122, "seek": 118588, "start": 1200.88, "end": 1209.88, "text": " So now that you have a network that can predict the noise that was added, you can also write down a network that can predict the mean of the reverse process.", "tokens": [51114, 407, 586, 300, 291, 362, 257, 3209, 300, 393, 6069, 264, 5658, 300, 390, 3869, 11, 291, 393, 611, 2464, 760, 257, 3209, 300, 393, 6069, 264, 914, 295, 264, 9943, 1399, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07927672068277995, "compression_ratio": 2.0710059171597632, "no_speech_prob": 0.018534917384386063}, {"id": 123, "seek": 120988, "start": 1209.88, "end": 1215.88, "text": " And once you have something that can tell you the mean of the reverse process, you can run the reverse process backwards.", "tokens": [50364, 400, 1564, 291, 362, 746, 300, 393, 980, 291, 264, 914, 295, 264, 9943, 1399, 11, 291, 393, 1190, 264, 9943, 1399, 12204, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11186924899917051, "compression_ratio": 1.8972972972972972, "no_speech_prob": 0.009702392853796482}, {"id": 124, "seek": 120988, "start": 1215.88, "end": 1229.88, "text": " So you can start with noise x t, you could run, you could sample from this reverse process p of x t minus one given x t, you know the mean, and we have fixed the variance to something to do one step of sampling from this process.", "tokens": [50664, 407, 291, 393, 722, 365, 5658, 2031, 256, 11, 291, 727, 1190, 11, 291, 727, 6889, 490, 341, 9943, 1399, 280, 295, 2031, 256, 3175, 472, 2212, 2031, 256, 11, 291, 458, 264, 914, 11, 293, 321, 362, 6806, 264, 21977, 281, 746, 281, 360, 472, 1823, 295, 21179, 490, 341, 1399, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11186924899917051, "compression_ratio": 1.8972972972972972, "no_speech_prob": 0.009702392853796482}, {"id": 125, "seek": 122988, "start": 1230.88, "end": 1239.88, "text": " You do one more step, one more step and so on. And as we talked about what we're doing was denoising, right, we're trying to like learn a process that removes noise from images.", "tokens": [50414, 509, 360, 472, 544, 1823, 11, 472, 544, 1823, 293, 370, 322, 13, 400, 382, 321, 2825, 466, 437, 321, 434, 884, 390, 1441, 78, 3436, 11, 558, 11, 321, 434, 1382, 281, 411, 1466, 257, 1399, 300, 30445, 5658, 490, 5267, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11920910868151434, "compression_ratio": 1.7821011673151752, "no_speech_prob": 0.01825113035738468}, {"id": 126, "seek": 122988, "start": 1239.88, "end": 1246.88, "text": " So if you start from pure noise and you're denoising it one step at a time, by the end of the process, you would have something that looks like a real image.", "tokens": [50864, 407, 498, 291, 722, 490, 6075, 5658, 293, 291, 434, 1441, 78, 3436, 309, 472, 1823, 412, 257, 565, 11, 538, 264, 917, 295, 264, 1399, 11, 291, 576, 362, 746, 300, 1542, 411, 257, 957, 3256, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11920910868151434, "compression_ratio": 1.7821011673151752, "no_speech_prob": 0.01825113035738468}, {"id": 127, "seek": 122988, "start": 1248.88, "end": 1256.88, "text": " So, so what we've covered so far is how you train these models and how you sample from these models. Any questions so far?", "tokens": [51314, 407, 11, 370, 437, 321, 600, 5343, 370, 1400, 307, 577, 291, 3847, 613, 5245, 293, 577, 291, 6889, 490, 613, 5245, 13, 2639, 1651, 370, 1400, 30, 51714], "temperature": 0.0, "avg_logprob": -0.11920910868151434, "compression_ratio": 1.7821011673151752, "no_speech_prob": 0.01825113035738468}, {"id": 128, "seek": 125988, "start": 1260.88, "end": 1264.88, "text": " Okay.", "tokens": [50414, 1033, 13, 50614], "temperature": 0.0, "avg_logprob": -0.19654239842921128, "compression_ratio": 1.5585106382978724, "no_speech_prob": 0.001985549693927169}, {"id": 129, "seek": 125988, "start": 1264.88, "end": 1268.88, "text": " Um, it's okay.", "tokens": [50614, 3301, 11, 309, 311, 1392, 13, 50814], "temperature": 0.0, "avg_logprob": -0.19654239842921128, "compression_ratio": 1.5585106382978724, "no_speech_prob": 0.001985549693927169}, {"id": 130, "seek": 125988, "start": 1268.88, "end": 1277.88, "text": " A bunch of theory there, but what you should remember is you train for denoising, and you can derive a sampler from it, once you've trained for denoising.", "tokens": [50814, 316, 3840, 295, 5261, 456, 11, 457, 437, 291, 820, 1604, 307, 291, 3847, 337, 1441, 78, 3436, 11, 293, 291, 393, 28446, 257, 3247, 22732, 490, 309, 11, 1564, 291, 600, 8895, 337, 1441, 78, 3436, 13, 51264], "temperature": 0.0, "avg_logprob": -0.19654239842921128, "compression_ratio": 1.5585106382978724, "no_speech_prob": 0.001985549693927169}, {"id": 131, "seek": 125988, "start": 1277.88, "end": 1283.88, "text": " What do you do next? Well, you could now make the model class conditional, you could provide labels at training time.", "tokens": [51264, 708, 360, 291, 360, 958, 30, 1042, 11, 291, 727, 586, 652, 264, 2316, 1508, 27708, 11, 291, 727, 2893, 16949, 412, 3097, 565, 13, 51564], "temperature": 0.0, "avg_logprob": -0.19654239842921128, "compression_ratio": 1.5585106382978724, "no_speech_prob": 0.001985549693927169}, {"id": 132, "seek": 128388, "start": 1283.88, "end": 1293.88, "text": " So you could provide, you know, let's say you're training on ImageNet or something, you could have labels that say this image is a goldfincher, this image is a Corgi or so on.", "tokens": [50364, 407, 291, 727, 2893, 11, 291, 458, 11, 718, 311, 584, 291, 434, 3097, 322, 29903, 31890, 420, 746, 11, 291, 727, 362, 16949, 300, 584, 341, 3256, 307, 257, 3821, 5194, 6759, 11, 341, 3256, 307, 257, 3925, 7834, 420, 370, 322, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13931431280118284, "compression_ratio": 1.8140495867768596, "no_speech_prob": 0.0005272758426144719}, {"id": 133, "seek": 128388, "start": 1293.88, "end": 1312.88, "text": " And you could make the model, the denoising model class conditional, you could provide these labels, the model so that, given this label, it tries to produce an image from p of x given y, like the distribution of images that are kind of represented by this label.", "tokens": [50864, 400, 291, 727, 652, 264, 2316, 11, 264, 1441, 78, 3436, 2316, 1508, 27708, 11, 291, 727, 2893, 613, 16949, 11, 264, 2316, 370, 300, 11, 2212, 341, 7645, 11, 309, 9898, 281, 5258, 364, 3256, 490, 280, 295, 2031, 2212, 288, 11, 411, 264, 7316, 295, 5267, 300, 366, 733, 295, 10379, 538, 341, 7645, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13931431280118284, "compression_ratio": 1.8140495867768596, "no_speech_prob": 0.0005272758426144719}, {"id": 134, "seek": 131288, "start": 1312.88, "end": 1323.88, "text": " And it's pretty simple, you just throw in a label into the model at some point, so that it now has this extra information when it's trying to denoise images.", "tokens": [50364, 400, 309, 311, 1238, 2199, 11, 291, 445, 3507, 294, 257, 7645, 666, 264, 2316, 412, 512, 935, 11, 370, 300, 309, 586, 575, 341, 2857, 1589, 562, 309, 311, 1382, 281, 1441, 38800, 5267, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08592547646051721, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.00048746634274721146}, {"id": 135, "seek": 131288, "start": 1323.88, "end": 1334.88, "text": " You could also do something like up sampling, you could ask the model, given this low resolution image, what would be kind of the high resolution image that could be generated from this.", "tokens": [50914, 509, 727, 611, 360, 746, 411, 493, 21179, 11, 291, 727, 1029, 264, 2316, 11, 2212, 341, 2295, 8669, 3256, 11, 437, 576, 312, 733, 295, 264, 1090, 8669, 3256, 300, 727, 312, 10833, 490, 341, 13, 51464], "temperature": 0.0, "avg_logprob": -0.08592547646051721, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.00048746634274721146}, {"id": 136, "seek": 133488, "start": 1334.88, "end": 1347.88, "text": " So again, just like throwing in a label y, you can throw in a low resolution image as extra conditioning information into the model as it tries to denoise.", "tokens": [50364, 407, 797, 11, 445, 411, 10238, 294, 257, 7645, 288, 11, 291, 393, 3507, 294, 257, 2295, 8669, 3256, 382, 2857, 21901, 1589, 666, 264, 2316, 382, 309, 9898, 281, 1441, 38800, 13, 51014], "temperature": 0.0, "avg_logprob": -0.09305576402313855, "compression_ratio": 1.794871794871795, "no_speech_prob": 0.0038227206096053123}, {"id": 137, "seek": 133488, "start": 1347.88, "end": 1363.88, "text": " So, we've now talked about models that are class conditional. The thing is, if you just train models like this, where you give them a label for an image and you train them for producing the image given the label, they're not very good at doing this out of the box.", "tokens": [51014, 407, 11, 321, 600, 586, 2825, 466, 5245, 300, 366, 1508, 27708, 13, 440, 551, 307, 11, 498, 291, 445, 3847, 5245, 411, 341, 11, 689, 291, 976, 552, 257, 7645, 337, 364, 3256, 293, 291, 3847, 552, 337, 10501, 264, 3256, 2212, 264, 7645, 11, 436, 434, 406, 588, 665, 412, 884, 341, 484, 295, 264, 2424, 13, 51814], "temperature": 0.0, "avg_logprob": -0.09305576402313855, "compression_ratio": 1.794871794871795, "no_speech_prob": 0.0038227206096053123}, {"id": 138, "seek": 136388, "start": 1363.88, "end": 1378.88, "text": " They kind of produce very incoherent samples. And one of the tricks that we developed to kind of fix this was the trick of guidance, where what you do is you train a model to look at the images that are being generated.", "tokens": [50364, 814, 733, 295, 5258, 588, 834, 78, 511, 317, 10938, 13, 400, 472, 295, 264, 11733, 300, 321, 4743, 281, 733, 295, 3191, 341, 390, 264, 4282, 295, 10056, 11, 689, 437, 291, 360, 307, 291, 3847, 257, 2316, 281, 574, 412, 264, 5267, 300, 366, 885, 10833, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08708264989760316, "compression_ratio": 1.7196652719665273, "no_speech_prob": 0.010478349402546883}, {"id": 139, "seek": 136388, "start": 1378.88, "end": 1391.88, "text": " Use a classifier to classify what is the label of this image. So you kind of look at a noisy image and you're like, you know, whether you ask the model, hey, does this look like a dog or not.", "tokens": [51114, 8278, 257, 1508, 9902, 281, 33872, 437, 307, 264, 7645, 295, 341, 3256, 13, 407, 291, 733, 295, 574, 412, 257, 24518, 3256, 293, 291, 434, 411, 11, 291, 458, 11, 1968, 291, 1029, 264, 2316, 11, 4177, 11, 775, 341, 574, 411, 257, 3000, 420, 406, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08708264989760316, "compression_ratio": 1.7196652719665273, "no_speech_prob": 0.010478349402546883}, {"id": 140, "seek": 139188, "start": 1391.88, "end": 1404.88, "text": " So you train a classifier on these noisy images, then you take a gradient of the classifier, you ask the classifier, hey, how can I increase the likelihood to make this image look like a dog.", "tokens": [50364, 407, 291, 3847, 257, 1508, 9902, 322, 613, 24518, 5267, 11, 550, 291, 747, 257, 16235, 295, 264, 1508, 9902, 11, 291, 1029, 264, 1508, 9902, 11, 4177, 11, 577, 393, 286, 3488, 264, 22119, 281, 652, 341, 3256, 574, 411, 257, 3000, 13, 51014], "temperature": 0.0, "avg_logprob": -0.08127407112506906, "compression_ratio": 1.9414414414414414, "no_speech_prob": 0.005639386363327503}, {"id": 141, "seek": 139188, "start": 1404.88, "end": 1417.88, "text": " Because you can run the classifier forward, you can get a, get a probability from the classifier of it being a dog, you can also differentiate this function to get the gradient of how to change the image so that this probability increases.", "tokens": [51014, 1436, 291, 393, 1190, 264, 1508, 9902, 2128, 11, 291, 393, 483, 257, 11, 483, 257, 8482, 490, 264, 1508, 9902, 295, 309, 885, 257, 3000, 11, 291, 393, 611, 23203, 341, 2445, 281, 483, 264, 16235, 295, 577, 281, 1319, 264, 3256, 370, 300, 341, 8482, 8637, 13, 51664], "temperature": 0.0, "avg_logprob": -0.08127407112506906, "compression_ratio": 1.9414414414414414, "no_speech_prob": 0.005639386363327503}, {"id": 142, "seek": 141788, "start": 1417.88, "end": 1429.88, "text": " And then you augment your diffusion model with such a classifier to kind of guide it towards generating images that are more likely to be classified as a dog by the classifier.", "tokens": [50364, 400, 550, 291, 29919, 428, 25242, 2316, 365, 1270, 257, 1508, 9902, 281, 733, 295, 5934, 309, 3030, 17746, 5267, 300, 366, 544, 3700, 281, 312, 20627, 382, 257, 3000, 538, 264, 1508, 9902, 13, 50964], "temperature": 0.0, "avg_logprob": -0.07140937742296156, "compression_ratio": 1.757847533632287, "no_speech_prob": 0.002472077263519168}, {"id": 143, "seek": 141788, "start": 1429.88, "end": 1445.88, "text": " So how do we end up doing this in practice. Okay, so you can train a classifier on noisy images, you can just take your data set of images, noise them and train a classifier to predict the label of the noisy images.", "tokens": [50964, 407, 577, 360, 321, 917, 493, 884, 341, 294, 3124, 13, 1033, 11, 370, 291, 393, 3847, 257, 1508, 9902, 322, 24518, 5267, 11, 291, 393, 445, 747, 428, 1412, 992, 295, 5267, 11, 5658, 552, 293, 3847, 257, 1508, 9902, 281, 6069, 264, 7645, 295, 264, 24518, 5267, 13, 51764], "temperature": 0.0, "avg_logprob": -0.07140937742296156, "compression_ratio": 1.757847533632287, "no_speech_prob": 0.002472077263519168}, {"id": 144, "seek": 144588, "start": 1445.88, "end": 1463.88, "text": " And then how do you guide now your generative diffusion model to use this classifier. Well, you run the classifier on the noisy images, you predict the probability of, you know, the class label under the classifier so whether something is a dog or not.", "tokens": [50364, 400, 550, 577, 360, 291, 5934, 586, 428, 1337, 1166, 25242, 2316, 281, 764, 341, 1508, 9902, 13, 1042, 11, 291, 1190, 264, 1508, 9902, 322, 264, 24518, 5267, 11, 291, 6069, 264, 8482, 295, 11, 291, 458, 11, 264, 1508, 7645, 833, 264, 1508, 9902, 370, 1968, 746, 307, 257, 3000, 420, 406, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09620196940535206, "compression_ratio": 1.5849056603773586, "no_speech_prob": 0.0021819714456796646}, {"id": 145, "seek": 146388, "start": 1463.88, "end": 1481.88, "text": " You take the gradient of this prediction to obtain kind of direction for which the model should change its input to increase the probability of this image, you can add this direction into the mean of the reverse process that you are already going towards.", "tokens": [50364, 509, 747, 264, 16235, 295, 341, 17630, 281, 12701, 733, 295, 3513, 337, 597, 264, 2316, 820, 1319, 1080, 4846, 281, 3488, 264, 8482, 295, 341, 3256, 11, 291, 393, 909, 341, 3513, 666, 264, 914, 295, 264, 9943, 1399, 300, 291, 366, 1217, 516, 3030, 13, 51264], "temperature": 0.0, "avg_logprob": -0.07531643381305769, "compression_ratio": 1.5838509316770186, "no_speech_prob": 0.07253602892160416}, {"id": 146, "seek": 148188, "start": 1481.88, "end": 1499.88, "text": " So in terms of the actual formula, it just looks like adding an extra term to your mean prediction, which is the gradient of the log probability of the prediction of the label, given the noisy image.", "tokens": [50364, 407, 294, 2115, 295, 264, 3539, 8513, 11, 309, 445, 1542, 411, 5127, 364, 2857, 1433, 281, 428, 914, 17630, 11, 597, 307, 264, 16235, 295, 264, 3565, 8482, 295, 264, 17630, 295, 264, 7645, 11, 2212, 264, 24518, 3256, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08973106971153846, "compression_ratio": 1.601123595505618, "no_speech_prob": 0.005809296388179064}, {"id": 147, "seek": 148188, "start": 1499.88, "end": 1506.88, "text": " Questions on this, this is, this is important and this could be a little complicated.", "tokens": [51264, 27738, 322, 341, 11, 341, 307, 11, 341, 307, 1021, 293, 341, 727, 312, 257, 707, 6179, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08973106971153846, "compression_ratio": 1.601123595505618, "no_speech_prob": 0.005809296388179064}, {"id": 148, "seek": 150688, "start": 1506.88, "end": 1513.88, "text": " It seems there are two questions before this. Can you read them.", "tokens": [50364, 467, 2544, 456, 366, 732, 1651, 949, 341, 13, 1664, 291, 1401, 552, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1771998872943953, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.006578443106263876}, {"id": 149, "seek": 150688, "start": 1513.88, "end": 1516.88, "text": " Do you still need a classifier.", "tokens": [50714, 1144, 291, 920, 643, 257, 1508, 9902, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1771998872943953, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.006578443106263876}, {"id": 150, "seek": 150688, "start": 1516.88, "end": 1521.88, "text": " Once the model is trained.", "tokens": [50864, 3443, 264, 2316, 307, 8895, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1771998872943953, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.006578443106263876}, {"id": 151, "seek": 150688, "start": 1521.88, "end": 1528.88, "text": " So here by the model you mean the diffusion model, right.", "tokens": [51114, 407, 510, 538, 264, 2316, 291, 914, 264, 25242, 2316, 11, 558, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1771998872943953, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.006578443106263876}, {"id": 152, "seek": 152888, "start": 1528.88, "end": 1545.88, "text": " Yes, you still need it, because it is part of the sampling process, you're using gradients directly from the classifier in the sampling process, so you still have to keep the classifier around when you sample from the model.", "tokens": [50364, 1079, 11, 291, 920, 643, 309, 11, 570, 309, 307, 644, 295, 264, 21179, 1399, 11, 291, 434, 1228, 2771, 2448, 3838, 490, 264, 1508, 9902, 294, 264, 21179, 1399, 11, 370, 291, 920, 362, 281, 1066, 264, 1508, 9902, 926, 562, 291, 6889, 490, 264, 2316, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10736547983609714, "compression_ratio": 1.6592592592592592, "no_speech_prob": 0.00955292209982872}, {"id": 153, "seek": 154588, "start": 1545.88, "end": 1561.88, "text": " So if you look at the next question is the underlying representation of the classes for condition.", "tokens": [50364, 407, 498, 291, 574, 412, 264, 958, 1168, 307, 264, 14217, 10290, 295, 264, 5359, 337, 4188, 13, 51164], "temperature": 0.0, "avg_logprob": -0.2823482860218395, "compression_ratio": 1.1951219512195121, "no_speech_prob": 0.1035277396440506}, {"id": 154, "seek": 156188, "start": 1561.88, "end": 1579.88, "text": " I followed the question, Ben, could you explain.", "tokens": [50364, 286, 6263, 264, 1168, 11, 3964, 11, 727, 291, 2903, 13, 51264], "temperature": 0.0, "avg_logprob": -0.23869044606278583, "compression_ratio": 1.1891891891891893, "no_speech_prob": 0.0315985307097435}, {"id": 155, "seek": 156188, "start": 1579.88, "end": 1581.88, "text": " Okay.", "tokens": [51264, 1033, 13, 51364], "temperature": 0.0, "avg_logprob": -0.23869044606278583, "compression_ratio": 1.1891891891891893, "no_speech_prob": 0.0315985307097435}, {"id": 156, "seek": 156188, "start": 1581.88, "end": 1583.88, "text": " I have another question.", "tokens": [51364, 286, 362, 1071, 1168, 13, 51464], "temperature": 0.0, "avg_logprob": -0.23869044606278583, "compression_ratio": 1.1891891891891893, "no_speech_prob": 0.0315985307097435}, {"id": 157, "seek": 156188, "start": 1583.88, "end": 1588.88, "text": " The s in the term. Is that just a hyper parameter or", "tokens": [51464, 440, 262, 294, 264, 1433, 13, 1119, 300, 445, 257, 9848, 13075, 420, 51714], "temperature": 0.0, "avg_logprob": -0.23869044606278583, "compression_ratio": 1.1891891891891893, "no_speech_prob": 0.0315985307097435}, {"id": 158, "seek": 158888, "start": 1588.88, "end": 1595.88, "text": " we'll get to that term in the next slide but yes that is just a hyper parameter.", "tokens": [50364, 321, 603, 483, 281, 300, 1433, 294, 264, 958, 4137, 457, 2086, 300, 307, 445, 257, 9848, 13075, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1608867889795548, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.016391443088650703}, {"id": 159, "seek": 158888, "start": 1595.88, "end": 1612.88, "text": " The main thing from this slide is like we previously had a reverse process that looked like a Gaussian with some mean mu and some variance sigma. We now have a modified reverse process where we've just modified the mean mu with an extra term, which is scaled by this", "tokens": [50714, 440, 2135, 551, 490, 341, 4137, 307, 411, 321, 8046, 632, 257, 9943, 1399, 300, 2956, 411, 257, 39148, 365, 512, 914, 2992, 293, 512, 21977, 12771, 13, 492, 586, 362, 257, 15873, 9943, 1399, 689, 321, 600, 445, 15873, 264, 914, 2992, 365, 364, 2857, 1433, 11, 597, 307, 36039, 538, 341, 51564], "temperature": 0.0, "avg_logprob": -0.1608867889795548, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.016391443088650703}, {"id": 160, "seek": 161288, "start": 1612.88, "end": 1624.88, "text": " parameter s has the variance in it kind of for appropriate scaling as well, and it has this gradient term, which is the gradient of a classifier on noise damages.", "tokens": [50364, 13075, 262, 575, 264, 21977, 294, 309, 733, 295, 337, 6854, 21589, 382, 731, 11, 293, 309, 575, 341, 16235, 1433, 11, 597, 307, 264, 16235, 295, 257, 1508, 9902, 322, 5658, 28536, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13264914309040884, "compression_ratio": 1.8067226890756303, "no_speech_prob": 0.10798609256744385}, {"id": 161, "seek": 161288, "start": 1624.88, "end": 1641.88, "text": " And we're kind of basically using this gradient to kind of guide the model towards directions where the classifier would predict a higher likelihood of the label being correct for the noise damage, so that the conditional model produces an image that is more correct.", "tokens": [50964, 400, 321, 434, 733, 295, 1936, 1228, 341, 16235, 281, 733, 295, 5934, 264, 2316, 3030, 11095, 689, 264, 1508, 9902, 576, 6069, 257, 2946, 22119, 295, 264, 7645, 885, 3006, 337, 264, 5658, 4344, 11, 370, 300, 264, 27708, 2316, 14725, 364, 3256, 300, 307, 544, 3006, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13264914309040884, "compression_ratio": 1.8067226890756303, "no_speech_prob": 0.10798609256744385}, {"id": 162, "seek": 164188, "start": 1642.88, "end": 1649.88, "text": " Another question. Why is the variance in the additional term also included.", "tokens": [50414, 3996, 1168, 13, 1545, 307, 264, 21977, 294, 264, 4497, 1433, 611, 5556, 13, 50764], "temperature": 0.0, "avg_logprob": -0.19463590571754857, "compression_ratio": 1.1929824561403508, "no_speech_prob": 0.00376344146206975}, {"id": 163, "seek": 164188, "start": 1649.88, "end": 1653.88, "text": " That's just how it popped out from the derivation.", "tokens": [50764, 663, 311, 445, 577, 309, 21545, 484, 490, 264, 10151, 399, 13, 50964], "temperature": 0.0, "avg_logprob": -0.19463590571754857, "compression_ratio": 1.1929824561403508, "no_speech_prob": 0.00376344146206975}, {"id": 164, "seek": 164188, "start": 1653.88, "end": 1655.88, "text": " Oh, okay.", "tokens": [50964, 876, 11, 1392, 13, 51064], "temperature": 0.0, "avg_logprob": -0.19463590571754857, "compression_ratio": 1.1929824561403508, "no_speech_prob": 0.00376344146206975}, {"id": 165, "seek": 165588, "start": 1655.88, "end": 1672.88, "text": " I guess you can think of it as kind of like the step size of these things is controlled by the variance if you have a Gaussian with a very small mean in the reverse process and you don't want to take a really large step with your gradient, because you'll really, you'll pop out very far from", "tokens": [50364, 286, 2041, 291, 393, 519, 295, 309, 382, 733, 295, 411, 264, 1823, 2744, 295, 613, 721, 307, 10164, 538, 264, 21977, 498, 291, 362, 257, 39148, 365, 257, 588, 1359, 914, 294, 264, 9943, 1399, 293, 291, 500, 380, 528, 281, 747, 257, 534, 2416, 1823, 365, 428, 16235, 11, 570, 291, 603, 534, 11, 291, 603, 1665, 484, 588, 1400, 490, 51214], "temperature": 0.0, "avg_logprob": -0.1478547480568957, "compression_ratio": 1.598901098901099, "no_speech_prob": 0.02063370682299137}, {"id": 166, "seek": 167288, "start": 1672.88, "end": 1686.88, "text": " the reverse process should have taken you to the reverse process is taking really small steps, which kind of can be thought about by its variance, and you also want to change that process only by that much amount.", "tokens": [50364, 264, 9943, 1399, 820, 362, 2726, 291, 281, 264, 9943, 1399, 307, 1940, 534, 1359, 4439, 11, 597, 733, 295, 393, 312, 1194, 466, 538, 1080, 21977, 11, 293, 291, 611, 528, 281, 1319, 300, 1399, 787, 538, 300, 709, 2372, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14227769059954948, "compression_ratio": 1.5562913907284768, "no_speech_prob": 0.008183876052498817}, {"id": 167, "seek": 167288, "start": 1686.88, "end": 1687.88, "text": " Does that make sense.", "tokens": [51064, 4402, 300, 652, 2020, 13, 51114], "temperature": 0.0, "avg_logprob": -0.14227769059954948, "compression_ratio": 1.5562913907284768, "no_speech_prob": 0.008183876052498817}, {"id": 168, "seek": 168788, "start": 1688.88, "end": 1693.88, "text": " So, I guess the variance terms like a cap in step size.", "tokens": [50414, 407, 11, 286, 2041, 264, 21977, 2115, 411, 257, 1410, 294, 1823, 2744, 13, 50664], "temperature": 0.0, "avg_logprob": -0.20767999536850873, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.01911948435008526}, {"id": 169, "seek": 168788, "start": 1693.88, "end": 1702.88, "text": " Right, like to the maximum and the class very gradient is maybe somewhere between zero and one or something like that or", "tokens": [50664, 1779, 11, 411, 281, 264, 6674, 293, 264, 1508, 588, 16235, 307, 1310, 4079, 1296, 4018, 293, 472, 420, 746, 411, 300, 420, 51114], "temperature": 0.0, "avg_logprob": -0.20767999536850873, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.01911948435008526}, {"id": 170, "seek": 168788, "start": 1702.88, "end": 1710.88, "text": " I don't know if it has any explicit range here, but I mean it's kind of mostly just direction.", "tokens": [51114, 286, 500, 380, 458, 498, 309, 575, 604, 13691, 3613, 510, 11, 457, 286, 914, 309, 311, 733, 295, 5240, 445, 3513, 13, 51514], "temperature": 0.0, "avg_logprob": -0.20767999536850873, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.01911948435008526}, {"id": 171, "seek": 168788, "start": 1710.88, "end": 1714.88, "text": " Yeah, and you're kind of scaling this direction by a step size.", "tokens": [51514, 865, 11, 293, 291, 434, 733, 295, 21589, 341, 3513, 538, 257, 1823, 2744, 13, 51714], "temperature": 0.0, "avg_logprob": -0.20767999536850873, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.01911948435008526}, {"id": 172, "seek": 171488, "start": 1714.88, "end": 1725.88, "text": " And the extra hyper parameter is if you want to kind of like make these steps bigger or smaller than what is naturally there so that's the extra parameter s that we'll talk about in the next slide.", "tokens": [50364, 400, 264, 2857, 9848, 13075, 307, 498, 291, 528, 281, 733, 295, 411, 652, 613, 4439, 3801, 420, 4356, 813, 437, 307, 8195, 456, 370, 300, 311, 264, 2857, 13075, 262, 300, 321, 603, 751, 466, 294, 264, 958, 4137, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11540177289177389, "compression_ratio": 1.671497584541063, "no_speech_prob": 0.010480346158146858}, {"id": 173, "seek": 171488, "start": 1725.88, "end": 1727.88, "text": " Okay, thank you.", "tokens": [50914, 1033, 11, 1309, 291, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11540177289177389, "compression_ratio": 1.671497584541063, "no_speech_prob": 0.010480346158146858}, {"id": 174, "seek": 171488, "start": 1727.88, "end": 1735.88, "text": " Yeah. Okay, so the parameter s here. So what we found was if you just actually use the step size that pops out from the derivation.", "tokens": [51014, 865, 13, 1033, 11, 370, 264, 13075, 262, 510, 13, 407, 437, 321, 1352, 390, 498, 291, 445, 767, 764, 264, 1823, 2744, 300, 16795, 484, 490, 264, 10151, 399, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11540177289177389, "compression_ratio": 1.671497584541063, "no_speech_prob": 0.010480346158146858}, {"id": 175, "seek": 173588, "start": 1735.88, "end": 1744.88, "text": " So as being one, no, no hyper parameter, it kind of doesn't do that much. So on the left you see the samples with as being one.", "tokens": [50364, 407, 382, 885, 472, 11, 572, 11, 572, 9848, 13075, 11, 309, 733, 295, 1177, 380, 360, 300, 709, 13, 407, 322, 264, 1411, 291, 536, 264, 10938, 365, 382, 885, 472, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11038927321738386, "compression_ratio": 1.6866952789699572, "no_speech_prob": 0.04955565929412842}, {"id": 176, "seek": 173588, "start": 1744.88, "end": 1751.88, "text": " They don't look like any image from any particular class, but it turned out when we added this extra hyper parameter and just bumped it up.", "tokens": [50814, 814, 500, 380, 574, 411, 604, 3256, 490, 604, 1729, 1508, 11, 457, 309, 3574, 484, 562, 321, 3869, 341, 2857, 9848, 13075, 293, 445, 42696, 309, 493, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11038927321738386, "compression_ratio": 1.6866952789699572, "no_speech_prob": 0.04955565929412842}, {"id": 177, "seek": 173588, "start": 1751.88, "end": 1759.88, "text": " So you have scale 10 here on the right, they actually start looking like samples from the distribution of a particular class.", "tokens": [51164, 407, 291, 362, 4373, 1266, 510, 322, 264, 558, 11, 436, 767, 722, 1237, 411, 10938, 490, 264, 7316, 295, 257, 1729, 1508, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11038927321738386, "compression_ratio": 1.6866952789699572, "no_speech_prob": 0.04955565929412842}, {"id": 178, "seek": 175988, "start": 1759.88, "end": 1774.88, "text": " So you can think of this extra hyper parameter s as kind of helping the model focus on the modes of the distribution because you're kind of narrowing down the possible things that it produces, at least that's what we saw empirically.", "tokens": [50364, 407, 291, 393, 519, 295, 341, 2857, 9848, 13075, 262, 382, 733, 295, 4315, 264, 2316, 1879, 322, 264, 14068, 295, 264, 7316, 570, 291, 434, 733, 295, 9432, 278, 760, 264, 1944, 721, 300, 309, 14725, 11, 412, 1935, 300, 311, 437, 321, 1866, 25790, 984, 13, 51114], "temperature": 0.0, "avg_logprob": -0.12353180194723196, "compression_ratio": 1.7244444444444444, "no_speech_prob": 0.008311458863317966}, {"id": 179, "seek": 175988, "start": 1774.88, "end": 1784.88, "text": " However, the trade off here is because you're narrowing it down well, they also kind of start looking similar to each other, the images that are produced.", "tokens": [51114, 2908, 11, 264, 4923, 766, 510, 307, 570, 291, 434, 9432, 278, 309, 760, 731, 11, 436, 611, 733, 295, 722, 1237, 2531, 281, 1184, 661, 11, 264, 5267, 300, 366, 7126, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12353180194723196, "compression_ratio": 1.7244444444444444, "no_speech_prob": 0.008311458863317966}, {"id": 180, "seek": 178488, "start": 1784.88, "end": 1793.88, "text": " But anyhow, the way to think about the scale factor here is just that it's controlling how much guidance we're using how much is the classifier influencing the final outcome.", "tokens": [50364, 583, 44995, 11, 264, 636, 281, 519, 466, 264, 4373, 5952, 510, 307, 445, 300, 309, 311, 14905, 577, 709, 10056, 321, 434, 1228, 577, 709, 307, 264, 1508, 9902, 40396, 264, 2572, 9700, 13, 50814], "temperature": 0.0, "avg_logprob": -0.12002411317289545, "compression_ratio": 1.7553648068669527, "no_speech_prob": 0.017968425527215004}, {"id": 181, "seek": 178488, "start": 1793.88, "end": 1805.88, "text": " And when you use a small value for us, it's not influencing that much when you use a large value it's influencing a lot, and the effect of their influences, you're kind of collapsing your distribution towards the modes of whatever the", "tokens": [50814, 400, 562, 291, 764, 257, 1359, 2158, 337, 505, 11, 309, 311, 406, 40396, 300, 709, 562, 291, 764, 257, 2416, 2158, 309, 311, 40396, 257, 688, 11, 293, 264, 1802, 295, 641, 21222, 11, 291, 434, 733, 295, 45339, 428, 7316, 3030, 264, 14068, 295, 2035, 264, 51414], "temperature": 0.0, "avg_logprob": -0.12002411317289545, "compression_ratio": 1.7553648068669527, "no_speech_prob": 0.017968425527215004}, {"id": 182, "seek": 180588, "start": 1805.88, "end": 1820.88, "text": " table that thinks is kind of the best representation of that label, they were very high scale will just collapse to the thing that the classifier is most likely to classifiers that they just not always what you want you want some kind of diversity, what you produce.", "tokens": [50364, 3199, 300, 7309, 307, 733, 295, 264, 1151, 10290, 295, 300, 7645, 11, 436, 645, 588, 1090, 4373, 486, 445, 15584, 281, 264, 551, 300, 264, 1508, 9902, 307, 881, 3700, 281, 1508, 23463, 300, 436, 445, 406, 1009, 437, 291, 528, 291, 528, 512, 733, 295, 8811, 11, 437, 291, 5258, 13, 51114], "temperature": 0.0, "avg_logprob": -0.22037230342267508, "compression_ratio": 1.8374384236453203, "no_speech_prob": 0.04398322477936745}, {"id": 183, "seek": 180588, "start": 1820.88, "end": 1827.88, "text": " There's some, there's some like intermediate value of scale that is kind of the best that you want to use.", "tokens": [51114, 821, 311, 512, 11, 456, 311, 512, 411, 19376, 2158, 295, 4373, 300, 307, 733, 295, 264, 1151, 300, 291, 528, 281, 764, 13, 51464], "temperature": 0.0, "avg_logprob": -0.22037230342267508, "compression_ratio": 1.8374384236453203, "no_speech_prob": 0.04398322477936745}, {"id": 184, "seek": 182788, "start": 1827.88, "end": 1836.88, "text": " And this is kind of how the process looks like in practice here on the bottom you here you have a usual like diffusion process with scale.", "tokens": [50364, 400, 341, 307, 733, 295, 577, 264, 1399, 1542, 411, 294, 3124, 510, 322, 264, 2767, 291, 510, 291, 362, 257, 7713, 411, 25242, 1399, 365, 4373, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14156185785929362, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.014277060516178608}, {"id": 185, "seek": 182788, "start": 1836.88, "end": 1851.88, "text": " Let me see I can't see the image. So scale zero you're just using no guidance, and then when you turn on guidance, and now using the gradients of the classifier can nudge the process in the direction where it's more likely to produce that butterfly.", "tokens": [50814, 961, 385, 536, 286, 393, 380, 536, 264, 3256, 13, 407, 4373, 4018, 291, 434, 445, 1228, 572, 10056, 11, 293, 550, 562, 291, 1261, 322, 10056, 11, 293, 586, 1228, 264, 2771, 2448, 295, 264, 1508, 9902, 393, 297, 16032, 264, 1399, 294, 264, 3513, 689, 309, 311, 544, 3700, 281, 5258, 300, 22140, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14156185785929362, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.014277060516178608}, {"id": 186, "seek": 185188, "start": 1851.88, "end": 1862.88, "text": " So the scale up even higher you're nudging it even further out from its original reverse trajectory into this new trajectory, where it's now producing a very clear butterfly.", "tokens": [50364, 407, 264, 4373, 493, 754, 2946, 291, 434, 40045, 3249, 309, 754, 3052, 484, 490, 1080, 3380, 9943, 21512, 666, 341, 777, 21512, 11, 689, 309, 311, 586, 10501, 257, 588, 1850, 22140, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13079901917340003, "compression_ratio": 1.7707317073170732, "no_speech_prob": 0.017977846786379814}, {"id": 187, "seek": 185188, "start": 1862.88, "end": 1876.88, "text": " So the scale parameter is kind of controlling how much guidance is happening and how much the model is being nudged out from its original distribution towards this new better distribution.", "tokens": [50914, 407, 264, 4373, 13075, 307, 733, 295, 14905, 577, 709, 10056, 307, 2737, 293, 577, 709, 264, 2316, 307, 885, 40045, 3004, 484, 490, 1080, 3380, 7316, 3030, 341, 777, 1101, 7316, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13079901917340003, "compression_ratio": 1.7707317073170732, "no_speech_prob": 0.017977846786379814}, {"id": 188, "seek": 187688, "start": 1876.88, "end": 1893.88, "text": " So similar things, instead of labels you could now have text descriptions of images. So, same model class you're still conditioning on something, but this conditioning thing why instead of being a label is now a piece of text that's a robot's", "tokens": [50364, 407, 2531, 721, 11, 2602, 295, 16949, 291, 727, 586, 362, 2487, 24406, 295, 5267, 13, 407, 11, 912, 2316, 1508, 291, 434, 920, 21901, 322, 746, 11, 457, 341, 21901, 551, 983, 2602, 295, 885, 257, 7645, 307, 586, 257, 2522, 295, 2487, 300, 311, 257, 7881, 311, 51214], "temperature": 0.0, "avg_logprob": -0.1979549156045014, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.020001912489533424}, {"id": 189, "seek": 189388, "start": 1893.88, "end": 1896.88, "text": " kind of a pass now retreat.", "tokens": [50364, 733, 295, 257, 1320, 586, 15505, 13, 50514], "temperature": 0.0, "avg_logprob": -0.18737676869268002, "compression_ratio": 1.6525821596244132, "no_speech_prob": 0.02633497305214405}, {"id": 190, "seek": 189388, "start": 1896.88, "end": 1908.88, "text": " And you could train basically the same kind of models, all you have to now change as well you don't have a classified now right, there's no classifier that is predicting a label you're that you have to predict the whole sentence, if you try to do that.", "tokens": [50514, 400, 291, 727, 3847, 1936, 264, 912, 733, 295, 5245, 11, 439, 291, 362, 281, 586, 1319, 382, 731, 291, 500, 380, 362, 257, 20627, 586, 558, 11, 456, 311, 572, 1508, 9902, 300, 307, 32884, 257, 7645, 291, 434, 300, 291, 362, 281, 6069, 264, 1379, 8174, 11, 498, 291, 853, 281, 360, 300, 13, 51114], "temperature": 0.0, "avg_logprob": -0.18737676869268002, "compression_ratio": 1.6525821596244132, "no_speech_prob": 0.02633497305214405}, {"id": 191, "seek": 189388, "start": 1908.88, "end": 1913.88, "text": " So how can we do guidance in this situation.", "tokens": [51114, 407, 577, 393, 321, 360, 10056, 294, 341, 2590, 13, 51364], "temperature": 0.0, "avg_logprob": -0.18737676869268002, "compression_ratio": 1.6525821596244132, "no_speech_prob": 0.02633497305214405}, {"id": 192, "seek": 189388, "start": 1913.88, "end": 1916.88, "text": " Well, first, let me go in.", "tokens": [51364, 1042, 11, 700, 11, 718, 385, 352, 294, 13, 51514], "temperature": 0.0, "avg_logprob": -0.18737676869268002, "compression_ratio": 1.6525821596244132, "no_speech_prob": 0.02633497305214405}, {"id": 193, "seek": 191688, "start": 1917.88, "end": 1934.88, "text": " Oh, okay. Well, first let me go into how you can even pass in conditioning information to diffusion models, which look like text, you just, you can just simply run a transformer on the text and just attend to the representations of the text in the model.", "tokens": [50414, 876, 11, 1392, 13, 1042, 11, 700, 718, 385, 352, 666, 577, 291, 393, 754, 1320, 294, 21901, 1589, 281, 25242, 5245, 11, 597, 574, 411, 2487, 11, 291, 445, 11, 291, 393, 445, 2935, 1190, 257, 31782, 322, 264, 2487, 293, 445, 6888, 281, 264, 33358, 295, 264, 2487, 294, 264, 2316, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12346488853980755, "compression_ratio": 1.5582822085889572, "no_speech_prob": 0.018251989036798477}, {"id": 194, "seek": 193488, "start": 1934.88, "end": 1955.88, "text": " What's important is just a pictorial representation of how to deal with text being passed into these models, you can just run a transformer model on this and just have your original convolutional unit architecture attend to this model when it's trying to do the denoising.", "tokens": [50364, 708, 311, 1021, 307, 445, 257, 2317, 5181, 10290, 295, 577, 281, 2028, 365, 2487, 885, 4678, 666, 613, 5245, 11, 291, 393, 445, 1190, 257, 31782, 2316, 322, 341, 293, 445, 362, 428, 3380, 45216, 304, 4985, 9482, 6888, 281, 341, 2316, 562, 309, 311, 1382, 281, 360, 264, 1441, 78, 3436, 13, 51414], "temperature": 0.0, "avg_logprob": -0.16065073013305664, "compression_ratio": 1.536723163841808, "no_speech_prob": 0.039018288254737854}, {"id": 195, "seek": 195588, "start": 1955.88, "end": 1964.88, "text": " Back to guidance, how do you actually guide when you have text as the kind of label information. And one of the things you could do is use clip.", "tokens": [50364, 5833, 281, 10056, 11, 577, 360, 291, 767, 5934, 562, 291, 362, 2487, 382, 264, 733, 295, 7645, 1589, 13, 400, 472, 295, 264, 721, 291, 727, 360, 307, 764, 7353, 13, 50814], "temperature": 0.0, "avg_logprob": -0.21092727661132812, "compression_ratio": 1.5, "no_speech_prob": 0.14784789085388184}, {"id": 196, "seek": 195588, "start": 1964.88, "end": 1971.88, "text": " I think you guys cover clip in a previous lecture Ali you said that so can.", "tokens": [50814, 286, 519, 291, 1074, 2060, 7353, 294, 257, 3894, 7991, 12020, 291, 848, 300, 370, 393, 13, 51164], "temperature": 0.0, "avg_logprob": -0.21092727661132812, "compression_ratio": 1.5, "no_speech_prob": 0.14784789085388184}, {"id": 197, "seek": 195588, "start": 1971.88, "end": 1974.88, "text": " Yes, sounds sounds good.", "tokens": [51164, 1079, 11, 3263, 3263, 665, 13, 51314], "temperature": 0.0, "avg_logprob": -0.21092727661132812, "compression_ratio": 1.5, "no_speech_prob": 0.14784789085388184}, {"id": 198, "seek": 195588, "start": 1974.88, "end": 1977.88, "text": " Yeah, so I'll skip clip. Okay.", "tokens": [51314, 865, 11, 370, 286, 603, 10023, 7353, 13, 1033, 13, 51464], "temperature": 0.0, "avg_logprob": -0.21092727661132812, "compression_ratio": 1.5, "no_speech_prob": 0.14784789085388184}, {"id": 199, "seek": 197788, "start": 1977.88, "end": 1989.88, "text": " So I'm assuming you guys on the clip, but basically clip is a model where you have an image encoder and a text encoder, and it's trying to predict how close the representations of the image and the text.", "tokens": [50364, 407, 286, 478, 11926, 291, 1074, 322, 264, 7353, 11, 457, 1936, 7353, 307, 257, 2316, 689, 291, 362, 364, 3256, 2058, 19866, 293, 257, 2487, 2058, 19866, 11, 293, 309, 311, 1382, 281, 6069, 577, 1998, 264, 33358, 295, 264, 3256, 293, 264, 2487, 13, 50964], "temperature": 0.0, "avg_logprob": -0.12385711669921876, "compression_ratio": 1.4397163120567376, "no_speech_prob": 0.020948093384504318}, {"id": 200, "seek": 198988, "start": 1989.88, "end": 2002.88, "text": " And so you can use clip for guidance, you can ask, hey, I have this noise damage, I have this text description, run the image encoder run the text encoder from clip, how close are these representations.", "tokens": [50364, 400, 370, 291, 393, 764, 7353, 337, 10056, 11, 291, 393, 1029, 11, 4177, 11, 286, 362, 341, 5658, 4344, 11, 286, 362, 341, 2487, 3855, 11, 1190, 264, 3256, 2058, 19866, 1190, 264, 2487, 2058, 19866, 490, 7353, 11, 577, 1998, 366, 613, 33358, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13068336790258234, "compression_ratio": 1.7843137254901962, "no_speech_prob": 0.12244116514921188}, {"id": 201, "seek": 198988, "start": 2002.88, "end": 2013.88, "text": " If they're close, then you're going to get a high dot product here, you can take a gradient of this dot product and get a direction to increase this dot product.", "tokens": [51014, 759, 436, 434, 1998, 11, 550, 291, 434, 516, 281, 483, 257, 1090, 5893, 1674, 510, 11, 291, 393, 747, 257, 16235, 295, 341, 5893, 1674, 293, 483, 257, 3513, 281, 3488, 341, 5893, 1674, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13068336790258234, "compression_ratio": 1.7843137254901962, "no_speech_prob": 0.12244116514921188}, {"id": 202, "seek": 201388, "start": 2013.88, "end": 2029.88, "text": " And that's the gradient you're going to use for guidance, gonna ask the model hey can you increase this dot product so the image, the not the image that you're trying to produce from the reverse process is close in representations to the representation of the text that you're provided.", "tokens": [50364, 400, 300, 311, 264, 16235, 291, 434, 516, 281, 764, 337, 10056, 11, 799, 1029, 264, 2316, 4177, 393, 291, 3488, 341, 5893, 1674, 370, 264, 3256, 11, 264, 406, 264, 3256, 300, 291, 434, 1382, 281, 5258, 490, 264, 9943, 1399, 307, 1998, 294, 33358, 281, 264, 10290, 295, 264, 2487, 300, 291, 434, 5649, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13973489949400997, "compression_ratio": 1.6770833333333333, "no_speech_prob": 0.0014773067086935043}, {"id": 203, "seek": 201388, "start": 2029.88, "end": 2034.88, "text": " So this is how clip guidance works.", "tokens": [51164, 407, 341, 307, 577, 7353, 10056, 1985, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13973489949400997, "compression_ratio": 1.6770833333333333, "no_speech_prob": 0.0014773067086935043}, {"id": 204, "seek": 203488, "start": 2034.88, "end": 2041.88, "text": " What you can do, which we sure enough, which was short in a paper on classifier free guidance is you could skip the classifier completely.", "tokens": [50364, 708, 291, 393, 360, 11, 597, 321, 988, 1547, 11, 597, 390, 2099, 294, 257, 3035, 322, 1508, 9902, 1737, 10056, 307, 291, 727, 10023, 264, 1508, 9902, 2584, 13, 50714], "temperature": 0.0, "avg_logprob": -0.2153175535656157, "compression_ratio": 1.8188976377952757, "no_speech_prob": 0.29368340969085693}, {"id": 205, "seek": 203488, "start": 2041.88, "end": 2054.88, "text": " And just train a usual diffusion model for for reversing the process but train it sometimes without labels. So sometimes don't, don't tell it what was the text that described an image.", "tokens": [50714, 400, 445, 3847, 257, 7713, 25242, 2316, 337, 337, 14582, 278, 264, 1399, 457, 3847, 309, 2171, 1553, 16949, 13, 407, 2171, 500, 380, 11, 500, 380, 980, 309, 437, 390, 264, 2487, 300, 7619, 364, 3256, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2153175535656157, "compression_ratio": 1.8188976377952757, "no_speech_prob": 0.29368340969085693}, {"id": 206, "seek": 203488, "start": 2054.88, "end": 2062.88, "text": " And then at test time you ask the model, which direction should it go, given the label and which direction should it go without the label.", "tokens": [51364, 400, 550, 412, 1500, 565, 291, 1029, 264, 2316, 11, 597, 3513, 820, 309, 352, 11, 2212, 264, 7645, 293, 597, 3513, 820, 309, 352, 1553, 264, 7645, 13, 51764], "temperature": 0.0, "avg_logprob": -0.2153175535656157, "compression_ratio": 1.8188976377952757, "no_speech_prob": 0.29368340969085693}, {"id": 207, "seek": 206288, "start": 2062.88, "end": 2083.88, "text": " And then you move your predictions in the direction of the model predictions when it was given the label so in the formula here if epsilon was the epsilon theta xt given why was the prediction of the model with the label and epsilon theta xt given", "tokens": [50364, 400, 550, 291, 1286, 428, 21264, 294, 264, 3513, 295, 264, 2316, 21264, 562, 309, 390, 2212, 264, 7645, 370, 294, 264, 8513, 510, 498, 17889, 390, 264, 17889, 9725, 220, 734, 2212, 983, 390, 264, 17630, 295, 264, 2316, 365, 264, 7645, 293, 17889, 9725, 220, 734, 2212, 51414], "temperature": 0.0, "avg_logprob": -0.11564782880387216, "compression_ratio": 1.9, "no_speech_prob": 0.0043295081704854965}, {"id": 208, "seek": 208388, "start": 2083.88, "end": 2093.88, "text": " the empty set five was its prediction without the labels, you're kind of taking the difference of these two and using that as your direction to kind of nudge the model in.", "tokens": [50364, 264, 6707, 992, 1732, 390, 1080, 17630, 1553, 264, 16949, 11, 291, 434, 733, 295, 1940, 264, 2649, 295, 613, 732, 293, 1228, 300, 382, 428, 3513, 281, 733, 295, 297, 16032, 264, 2316, 294, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1293020725250244, "compression_ratio": 2.0045662100456623, "no_speech_prob": 0.1111140325665474}, {"id": 209, "seek": 208388, "start": 2093.88, "end": 2100.88, "text": " And again, you have the scale factor s outside of this direction, which telling the model to move in the direction of the predictions with the label.", "tokens": [50864, 400, 797, 11, 291, 362, 264, 4373, 5952, 262, 2380, 295, 341, 3513, 11, 597, 3585, 264, 2316, 281, 1286, 294, 264, 3513, 295, 264, 21264, 365, 264, 7645, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1293020725250244, "compression_ratio": 2.0045662100456623, "no_speech_prob": 0.1111140325665474}, {"id": 210, "seek": 208388, "start": 2100.88, "end": 2106.88, "text": " And when you use as greater than one, you'll be moving a lot more in the direction of the predictions with the label.", "tokens": [51214, 400, 562, 291, 764, 382, 5044, 813, 472, 11, 291, 603, 312, 2684, 257, 688, 544, 294, 264, 3513, 295, 264, 21264, 365, 264, 7645, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1293020725250244, "compression_ratio": 2.0045662100456623, "no_speech_prob": 0.1111140325665474}, {"id": 211, "seek": 210688, "start": 2106.88, "end": 2117.88, "text": " And the cool thing about this way of guiding is that you don't need a separate classifier or a clip model or anything, you're just using the diffusion model itself for guidance.", "tokens": [50364, 400, 264, 1627, 551, 466, 341, 636, 295, 25061, 307, 300, 291, 500, 380, 643, 257, 4994, 1508, 9902, 420, 257, 7353, 2316, 420, 1340, 11, 291, 434, 445, 1228, 264, 25242, 2316, 2564, 337, 10056, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1257378589147809, "compression_ratio": 1.6965811965811965, "no_speech_prob": 0.05335722863674164}, {"id": 212, "seek": 210688, "start": 2117.88, "end": 2129.88, "text": " You're directly just asking the model, it's own kind of prediction of which way it should go to increase the probability of the generated image being from the correct class.", "tokens": [50914, 509, 434, 3838, 445, 3365, 264, 2316, 11, 309, 311, 1065, 733, 295, 17630, 295, 597, 636, 309, 820, 352, 281, 3488, 264, 8482, 295, 264, 10833, 3256, 885, 490, 264, 3006, 1508, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1257378589147809, "compression_ratio": 1.6965811965811965, "no_speech_prob": 0.05335722863674164}, {"id": 213, "seek": 210688, "start": 2129.88, "end": 2135.88, "text": " Any questions about classifier free guidance.", "tokens": [51514, 2639, 1651, 466, 1508, 9902, 1737, 10056, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1257378589147809, "compression_ratio": 1.6965811965811965, "no_speech_prob": 0.05335722863674164}, {"id": 214, "seek": 213588, "start": 2135.88, "end": 2154.88, "text": " What I have is, have you thought about implementing something like, okay, at this, at each stage, for instance, let's talk about the butterfly example at this stage I want to add something to this image.", "tokens": [50364, 708, 286, 362, 307, 11, 362, 291, 1194, 466, 18114, 746, 411, 11, 1392, 11, 412, 341, 11, 412, 1184, 3233, 11, 337, 5197, 11, 718, 311, 751, 466, 264, 22140, 1365, 412, 341, 3233, 286, 528, 281, 909, 746, 281, 341, 3256, 13, 51314], "temperature": 0.0, "avg_logprob": -0.183686633904775, "compression_ratio": 1.460431654676259, "no_speech_prob": 0.02582741715013981}, {"id": 215, "seek": 215488, "start": 2154.88, "end": 2182.88, "text": " And so the text, you know, can gradually form the shape like for the image like, okay, I want the butterfly and then on top of it I want this flower and then this, you know, gradually giving more idea of how your butterfly want to be depicted.", "tokens": [50364, 400, 370, 264, 2487, 11, 291, 458, 11, 393, 13145, 1254, 264, 3909, 411, 337, 264, 3256, 411, 11, 1392, 11, 286, 528, 264, 22140, 293, 550, 322, 1192, 295, 309, 286, 528, 341, 8617, 293, 550, 341, 11, 291, 458, 11, 13145, 2902, 544, 1558, 295, 577, 428, 22140, 528, 281, 312, 30207, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13644543340650656, "compression_ratio": 1.653061224489796, "no_speech_prob": 0.02590334601700306}, {"id": 216, "seek": 218288, "start": 2182.88, "end": 2201.88, "text": " So you're doing this in steps for image, and then you are injecting the tokens from the clip to your, you know, your network for for image generation.", "tokens": [50364, 407, 291, 434, 884, 341, 294, 4439, 337, 3256, 11, 293, 550, 291, 366, 10711, 278, 264, 22667, 490, 264, 7353, 281, 428, 11, 291, 458, 11, 428, 3209, 337, 337, 3256, 5125, 13, 51314], "temperature": 0.0, "avg_logprob": -0.14126683984483993, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.07650412619113922}, {"id": 217, "seek": 218288, "start": 2201.88, "end": 2210.88, "text": " And so what if gradually adding things that you want to be in that image.", "tokens": [51314, 400, 370, 437, 498, 13145, 5127, 721, 300, 291, 528, 281, 312, 294, 300, 3256, 13, 51764], "temperature": 0.0, "avg_logprob": -0.14126683984483993, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.07650412619113922}, {"id": 218, "seek": 221088, "start": 2211.88, "end": 2227.88, "text": " That's a great question, I haven't done this, like we haven't done this directly, but you can kind of do this right, you could like, you could run your reverse process to some point with with your text conditioning being just the simple thing hey it's a butterfly.", "tokens": [50414, 663, 311, 257, 869, 1168, 11, 286, 2378, 380, 1096, 341, 11, 411, 321, 2378, 380, 1096, 341, 3838, 11, 457, 291, 393, 733, 295, 360, 341, 558, 11, 291, 727, 411, 11, 291, 727, 1190, 428, 9943, 1399, 281, 512, 935, 365, 365, 428, 2487, 21901, 885, 445, 264, 2199, 551, 4177, 309, 311, 257, 22140, 13, 51214], "temperature": 0.0, "avg_logprob": -0.15998500393282983, "compression_ratio": 1.5903614457831325, "no_speech_prob": 0.0061885034665465355}, {"id": 219, "seek": 222788, "start": 2227.88, "end": 2238.88, "text": " Then you could continue with a new text prompt for guidance, hey, the butterfly looks like this or so on, and keep going. Maybe that works. Not sure.", "tokens": [50364, 1396, 291, 727, 2354, 365, 257, 777, 2487, 12391, 337, 10056, 11, 4177, 11, 264, 22140, 1542, 411, 341, 420, 370, 322, 11, 293, 1066, 516, 13, 2704, 300, 1985, 13, 1726, 988, 13, 50914], "temperature": 0.0, "avg_logprob": -0.18772855298272495, "compression_ratio": 1.4294117647058824, "no_speech_prob": 0.0420500822365284}, {"id": 220, "seek": 222788, "start": 2238.88, "end": 2243.88, "text": " You could do something else where you just run the whole process, first generate a butterfly.", "tokens": [50914, 509, 727, 360, 746, 1646, 689, 291, 445, 1190, 264, 1379, 1399, 11, 700, 8460, 257, 22140, 13, 51164], "temperature": 0.0, "avg_logprob": -0.18772855298272495, "compression_ratio": 1.4294117647058824, "no_speech_prob": 0.0420500822365284}, {"id": 221, "seek": 224388, "start": 2243.88, "end": 2254.88, "text": " You take the butterfly, you noise it to go back in the process, and then rerun it, but now with a different prompt, so you kind of modifying this generated butterfly in a new direction.", "tokens": [50364, 509, 747, 264, 22140, 11, 291, 5658, 309, 281, 352, 646, 294, 264, 1399, 11, 293, 550, 43819, 409, 309, 11, 457, 586, 365, 257, 819, 12391, 11, 370, 291, 733, 295, 42626, 341, 10833, 22140, 294, 257, 777, 3513, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1568845003500752, "compression_ratio": 1.8823529411764706, "no_speech_prob": 0.010814322158694267}, {"id": 222, "seek": 224388, "start": 2254.88, "end": 2268.88, "text": " Then, you know, noise it again and rerun it again with a slightly different prompt, you kind of be like slowly changing this generation iteratively in these like kind of like iterative modification.", "tokens": [50914, 1396, 11, 291, 458, 11, 5658, 309, 797, 293, 43819, 409, 309, 797, 365, 257, 4748, 819, 12391, 11, 291, 733, 295, 312, 411, 5692, 4473, 341, 5125, 17138, 19020, 294, 613, 411, 733, 295, 411, 17138, 1166, 26747, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1568845003500752, "compression_ratio": 1.8823529411764706, "no_speech_prob": 0.010814322158694267}, {"id": 223, "seek": 226888, "start": 2268.88, "end": 2277.88, "text": " So in another slide later we'll show how to do this with something like in painting, but if you just wanted to do it for your direct image. This is maybe how you would do it.", "tokens": [50364, 407, 294, 1071, 4137, 1780, 321, 603, 855, 577, 281, 360, 341, 365, 746, 411, 294, 5370, 11, 457, 498, 291, 445, 1415, 281, 360, 309, 337, 428, 2047, 3256, 13, 639, 307, 1310, 577, 291, 576, 360, 309, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14156680912166447, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.0049741677939891815}, {"id": 224, "seek": 226888, "start": 2277.88, "end": 2280.88, "text": " Does that kind of answer.", "tokens": [50814, 4402, 300, 733, 295, 1867, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14156680912166447, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.0049741677939891815}, {"id": 225, "seek": 226888, "start": 2280.88, "end": 2291.88, "text": " Yeah, yeah, I think that's a very interesting, you know, thought and yeah I appreciate your answer.", "tokens": [50964, 865, 11, 1338, 11, 286, 519, 300, 311, 257, 588, 1880, 11, 291, 458, 11, 1194, 293, 1338, 286, 4449, 428, 1867, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14156680912166447, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.0049741677939891815}, {"id": 226, "seek": 229188, "start": 2291.88, "end": 2299.88, "text": " I think that in painting could be one way of thinking about it. Yeah.", "tokens": [50364, 286, 519, 300, 294, 5370, 727, 312, 472, 636, 295, 1953, 466, 309, 13, 865, 13, 50764], "temperature": 0.0, "avg_logprob": -0.21186016451927922, "compression_ratio": 1.5576923076923077, "no_speech_prob": 0.019392868503928185}, {"id": 227, "seek": 229188, "start": 2299.88, "end": 2309.88, "text": " Yeah, but what I was trying to say there was like yeah, you could also do it without impending by like kind of modifying the full image by like renoising it and reproducing.", "tokens": [50764, 865, 11, 457, 437, 286, 390, 1382, 281, 584, 456, 390, 411, 1338, 11, 291, 727, 611, 360, 309, 1553, 704, 2029, 538, 411, 733, 295, 42626, 264, 1577, 3256, 538, 411, 319, 1771, 3436, 309, 293, 11408, 2175, 13, 51264], "temperature": 0.0, "avg_logprob": -0.21186016451927922, "compression_ratio": 1.5576923076923077, "no_speech_prob": 0.019392868503928185}, {"id": 228, "seek": 230988, "start": 2309.88, "end": 2327.88, "text": " Yeah, yeah, that also makes sense. I think that I was also referring to more like just the way that by removing the noise you are, you know, trying to somehow refine the image.", "tokens": [50364, 865, 11, 1338, 11, 300, 611, 1669, 2020, 13, 286, 519, 300, 286, 390, 611, 13761, 281, 544, 411, 445, 264, 636, 300, 538, 12720, 264, 5658, 291, 366, 11, 291, 458, 11, 1382, 281, 6063, 33906, 264, 3256, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1283965626278439, "compression_ratio": 1.6054054054054054, "no_speech_prob": 0.01382157951593399}, {"id": 229, "seek": 230988, "start": 2327.88, "end": 2333.88, "text": " This also in steps could, you know, add more context to the image.", "tokens": [51264, 639, 611, 294, 4439, 727, 11, 291, 458, 11, 909, 544, 4319, 281, 264, 3256, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1283965626278439, "compression_ratio": 1.6054054054054054, "no_speech_prob": 0.01382157951593399}, {"id": 230, "seek": 230988, "start": 2333.88, "end": 2336.88, "text": " And there might be different ways of implementing it.", "tokens": [51564, 400, 456, 1062, 312, 819, 2098, 295, 18114, 309, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1283965626278439, "compression_ratio": 1.6054054054054054, "no_speech_prob": 0.01382157951593399}, {"id": 231, "seek": 233688, "start": 2336.88, "end": 2338.88, "text": " Yeah.", "tokens": [50364, 865, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2323751926422119, "compression_ratio": 0.9090909090909091, "no_speech_prob": 0.0020489192102104425}, {"id": 232, "seek": 233688, "start": 2338.88, "end": 2340.88, "text": " I think that's good.", "tokens": [50464, 286, 519, 300, 311, 665, 13, 50564], "temperature": 0.0, "avg_logprob": -0.2323751926422119, "compression_ratio": 0.9090909090909091, "no_speech_prob": 0.0020489192102104425}, {"id": 233, "seek": 233688, "start": 2340.88, "end": 2343.88, "text": " Okay, thanks.", "tokens": [50564, 1033, 11, 3231, 13, 50714], "temperature": 0.0, "avg_logprob": -0.2323751926422119, "compression_ratio": 0.9090909090909091, "no_speech_prob": 0.0020489192102104425}, {"id": 234, "seek": 234388, "start": 2343.88, "end": 2345.88, "text": " Okay.", "tokens": [50364, 1033, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2516791399787454, "compression_ratio": 1.869767441860465, "no_speech_prob": 0.02633717842400074}, {"id": 235, "seek": 234388, "start": 2345.88, "end": 2355.88, "text": " So, in our guide paper we kind of compare these two forms of like guidance for text conditional models clip guidance was classified for guidance.", "tokens": [50464, 407, 11, 294, 527, 5934, 3035, 321, 733, 295, 6794, 613, 732, 6422, 295, 411, 10056, 337, 2487, 27708, 5245, 7353, 10056, 390, 20627, 337, 10056, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2516791399787454, "compression_ratio": 1.869767441860465, "no_speech_prob": 0.02633717842400074}, {"id": 236, "seek": 234388, "start": 2355.88, "end": 2372.88, "text": " And here are a few samples like representative samples from the model. So on the left here is just samples without any guidance. This is just a pure conditional diffusion model there is no form of classifier clip guidance or classifier free guidance.", "tokens": [50964, 400, 510, 366, 257, 1326, 10938, 411, 12424, 10938, 490, 264, 2316, 13, 407, 322, 264, 1411, 510, 307, 445, 10938, 1553, 604, 10056, 13, 639, 307, 445, 257, 6075, 27708, 25242, 2316, 456, 307, 572, 1254, 295, 1508, 9902, 7353, 10056, 420, 1508, 9902, 1737, 10056, 13, 51814], "temperature": 0.0, "avg_logprob": -0.2516791399787454, "compression_ratio": 1.869767441860465, "no_speech_prob": 0.02633717842400074}, {"id": 237, "seek": 237288, "start": 2372.88, "end": 2383.88, "text": " And kind of see, you know, it's kind of getting the prompts of the pram pure steam glass window of a panda panda eating bamboo. It's kind of alright, but it's not very coherent.", "tokens": [50364, 400, 733, 295, 536, 11, 291, 458, 11, 309, 311, 733, 295, 1242, 264, 41095, 295, 264, 582, 335, 6075, 11952, 4276, 4910, 295, 257, 46685, 46685, 3936, 26156, 13, 467, 311, 733, 295, 5845, 11, 457, 309, 311, 406, 588, 36239, 13, 50914], "temperature": 0.0, "avg_logprob": -0.31601803119365984, "compression_ratio": 1.6275510204081634, "no_speech_prob": 0.012419306673109531}, {"id": 238, "seek": 237288, "start": 2383.88, "end": 2393.88, "text": " Then you do clip guidance with scale to start getting better with the classifier free guidance ones look the best in in all the tests we did.", "tokens": [50914, 1396, 291, 360, 7353, 10056, 365, 4373, 281, 722, 1242, 1101, 365, 264, 1508, 9902, 1737, 10056, 2306, 574, 264, 1151, 294, 294, 439, 264, 6921, 321, 630, 13, 51414], "temperature": 0.0, "avg_logprob": -0.31601803119365984, "compression_ratio": 1.6275510204081634, "no_speech_prob": 0.012419306673109531}, {"id": 239, "seek": 239388, "start": 2393.88, "end": 2409.88, "text": " And I think part of this might be just that it's, it's not exactly the correct thing to use clip part of it just might be that it's kind of better inductive bias to use classifier free guidance.", "tokens": [50364, 400, 286, 519, 644, 295, 341, 1062, 312, 445, 300, 309, 311, 11, 309, 311, 406, 2293, 264, 3006, 551, 281, 764, 7353, 644, 295, 309, 445, 1062, 312, 300, 309, 311, 733, 295, 1101, 31612, 488, 12577, 281, 764, 1508, 9902, 1737, 10056, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13805794229312818, "compression_ratio": 1.4923076923076923, "no_speech_prob": 0.05259314924478531}, {"id": 240, "seek": 240988, "start": 2409.88, "end": 2424.88, "text": " There could be a lot of reasons but at least empirically, this was working better in practice to generate more realistic samples from these models, and you can see guidance does make a big difference in, you know, generating more realistic things, but it also does kind of make, you know, it's", "tokens": [50364, 821, 727, 312, 257, 688, 295, 4112, 457, 412, 1935, 25790, 984, 11, 341, 390, 1364, 1101, 294, 3124, 281, 8460, 544, 12465, 10938, 490, 613, 5245, 11, 293, 291, 393, 536, 10056, 775, 652, 257, 955, 2649, 294, 11, 291, 458, 11, 17746, 544, 12465, 721, 11, 457, 309, 611, 775, 733, 295, 652, 11, 291, 458, 11, 309, 311, 51114], "temperature": 0.0, "avg_logprob": -0.1550462958738976, "compression_ratio": 1.7903225806451613, "no_speech_prob": 0.05336487665772438}, {"id": 241, "seek": 240988, "start": 2424.88, "end": 2434.88, "text": " kind of like more collapse effect happen all of these samples kind of start looking a little similar to each other when when you do a lot of guidance.", "tokens": [51114, 733, 295, 411, 544, 15584, 1802, 1051, 439, 295, 613, 10938, 733, 295, 722, 1237, 257, 707, 2531, 281, 1184, 661, 562, 562, 291, 360, 257, 688, 295, 10056, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1550462958738976, "compression_ratio": 1.7903225806451613, "no_speech_prob": 0.05336487665772438}, {"id": 242, "seek": 243488, "start": 2434.88, "end": 2446.88, "text": " So, what what what have we done here we've trained a model that you know given a text prompt can generate images and we've done it for this diffusion technique.", "tokens": [50364, 407, 11, 437, 437, 437, 362, 321, 1096, 510, 321, 600, 8895, 257, 2316, 300, 291, 458, 2212, 257, 2487, 12391, 393, 8460, 5267, 293, 321, 600, 1096, 309, 337, 341, 25242, 6532, 13, 50964], "temperature": 0.0, "avg_logprob": -0.19181566460188046, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.016392366960644722}, {"id": 243, "seek": 243488, "start": 2446.88, "end": 2459.88, "text": " And this was what the strain in the glide paper, and we then showed that this model actually was beating the older open a model, Dali, which was actually a bigger model, which was trained in a very different fashion.", "tokens": [50964, 400, 341, 390, 437, 264, 14249, 294, 264, 41848, 3035, 11, 293, 321, 550, 4712, 300, 341, 2316, 767, 390, 13497, 264, 4906, 1269, 257, 2316, 11, 413, 5103, 11, 597, 390, 767, 257, 3801, 2316, 11, 597, 390, 8895, 294, 257, 588, 819, 6700, 13, 51614], "temperature": 0.0, "avg_logprob": -0.19181566460188046, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.016392366960644722}, {"id": 244, "seek": 245988, "start": 2459.88, "end": 2465.88, "text": " The strain is using an order aggressive model on these like discrete VA tokens.", "tokens": [50364, 440, 14249, 307, 1228, 364, 1668, 10762, 2316, 322, 613, 411, 27706, 18527, 22667, 13, 50664], "temperature": 0.0, "avg_logprob": -0.20085794153347822, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.008982584811747074}, {"id": 245, "seek": 245988, "start": 2465.88, "end": 2481.88, "text": " And it, the new diffusion model not only generated things that looked a lot more realistic it actually generated them faster and use fewer parameters. So, this new model class is actually a lot nicer to use for these tasks than the older class of models.", "tokens": [50664, 400, 309, 11, 264, 777, 25242, 2316, 406, 787, 10833, 721, 300, 2956, 257, 688, 544, 12465, 309, 767, 10833, 552, 4663, 293, 764, 13366, 9834, 13, 407, 11, 341, 777, 2316, 1508, 307, 767, 257, 688, 22842, 281, 764, 337, 613, 9608, 813, 264, 4906, 1508, 295, 5245, 13, 51464], "temperature": 0.0, "avg_logprob": -0.20085794153347822, "compression_ratio": 1.6534653465346534, "no_speech_prob": 0.008982584811747074}, {"id": 246, "seek": 248188, "start": 2481.88, "end": 2492.88, "text": " One cool advantage of these models is also because they're not doing this thing or to aggressively they're you know just generating and hold image you can do these things that are much harder to do with these older autoregressive models can do things like in painting.", "tokens": [50364, 1485, 1627, 5002, 295, 613, 5245, 307, 611, 570, 436, 434, 406, 884, 341, 551, 420, 281, 32024, 436, 434, 291, 458, 445, 17746, 293, 1797, 3256, 291, 393, 360, 613, 721, 300, 366, 709, 6081, 281, 360, 365, 613, 4906, 1476, 418, 3091, 488, 5245, 393, 360, 721, 411, 294, 5370, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16087277209172485, "compression_ratio": 1.9183673469387754, "no_speech_prob": 0.026336295530200005}, {"id": 247, "seek": 248188, "start": 2492.88, "end": 2498.88, "text": " So you could mask out a portion of the image, and then ask the model to kind of fill in that portion.", "tokens": [50914, 407, 291, 727, 6094, 484, 257, 8044, 295, 264, 3256, 11, 293, 550, 1029, 264, 2316, 281, 733, 295, 2836, 294, 300, 8044, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16087277209172485, "compression_ratio": 1.9183673469387754, "no_speech_prob": 0.026336295530200005}, {"id": 248, "seek": 248188, "start": 2498.88, "end": 2509.88, "text": " And how would you do that well just like we passed our conditioning labels in the past you could just pass in kind of this like half filled image as extra conditioning information to the model.", "tokens": [51214, 400, 577, 576, 291, 360, 300, 731, 445, 411, 321, 4678, 527, 21901, 16949, 294, 264, 1791, 291, 727, 445, 1320, 294, 733, 295, 341, 411, 1922, 6412, 3256, 382, 2857, 21901, 1589, 281, 264, 2316, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16087277209172485, "compression_ratio": 1.9183673469387754, "no_speech_prob": 0.026336295530200005}, {"id": 249, "seek": 250988, "start": 2509.88, "end": 2528.88, "text": " So you take this image and a mask on top of it, you provide this extra information to the model when it's trying to run its generative process and it's going to try to now think of this as a label hey like this is image what are the possible images that correspond to this label for this kind of", "tokens": [50364, 407, 291, 747, 341, 3256, 293, 257, 6094, 322, 1192, 295, 309, 11, 291, 2893, 341, 2857, 1589, 281, 264, 2316, 562, 309, 311, 1382, 281, 1190, 1080, 1337, 1166, 1399, 293, 309, 311, 516, 281, 853, 281, 586, 519, 295, 341, 382, 257, 7645, 4177, 411, 341, 307, 3256, 437, 366, 264, 1944, 5267, 300, 6805, 281, 341, 7645, 337, 341, 733, 295, 51314], "temperature": 0.0, "avg_logprob": -0.14480177093954646, "compression_ratio": 1.6761363636363635, "no_speech_prob": 0.007809854578226805}, {"id": 250, "seek": 252888, "start": 2528.88, "end": 2548.88, "text": " a masked image, what are the things that could complete this image. And what you're providing is this kind of like image X zero with a little bit of region must and a mask and that tells what is the part of the image that has been masked.", "tokens": [50364, 257, 45249, 3256, 11, 437, 366, 264, 721, 300, 727, 3566, 341, 3256, 13, 400, 437, 291, 434, 6530, 307, 341, 733, 295, 411, 3256, 1783, 4018, 365, 257, 707, 857, 295, 4458, 1633, 293, 257, 6094, 293, 300, 5112, 437, 307, 264, 644, 295, 264, 3256, 300, 575, 668, 45249, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2093132734298706, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.06652139127254486}, {"id": 251, "seek": 254888, "start": 2548.88, "end": 2560.88, "text": " Now, to text condition and painting, you could provide an, you know, an image with a mask and you could also provide a text label to tell the model how it shouldn't paint the region.", "tokens": [50364, 823, 11, 281, 2487, 4188, 293, 5370, 11, 291, 727, 2893, 364, 11, 291, 458, 11, 364, 3256, 365, 257, 6094, 293, 291, 727, 611, 2893, 257, 2487, 7645, 281, 980, 264, 2316, 577, 309, 4659, 380, 4225, 264, 4458, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1974460974983547, "compression_ratio": 1.819047619047619, "no_speech_prob": 0.19172097742557526}, {"id": 252, "seek": 254888, "start": 2560.88, "end": 2572.88, "text": " So these are examples from the paper. So on the left here, you have the text label being zebras roaming in the field and you have this image with a green mask on it. So the masked region was removed.", "tokens": [50964, 407, 613, 366, 5110, 490, 264, 3035, 13, 407, 322, 264, 1411, 510, 11, 291, 362, 264, 2487, 7645, 885, 5277, 38182, 42680, 294, 264, 2519, 293, 291, 362, 341, 3256, 365, 257, 3092, 6094, 322, 309, 13, 407, 264, 45249, 4458, 390, 7261, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1974460974983547, "compression_ratio": 1.819047619047619, "no_speech_prob": 0.19172097742557526}, {"id": 253, "seek": 257288, "start": 2572.88, "end": 2585.88, "text": " And the model was asked to fill in this image conditioned on this product. So now it's going to try to fill in not only something that kind of completes the image correctly, like isn't there the conditional distribution but also kind of matches the product.", "tokens": [50364, 400, 264, 2316, 390, 2351, 281, 2836, 294, 341, 3256, 35833, 322, 341, 1674, 13, 407, 586, 309, 311, 516, 281, 853, 281, 2836, 294, 406, 787, 746, 300, 733, 295, 36362, 264, 3256, 8944, 11, 411, 1943, 380, 456, 264, 27708, 7316, 457, 611, 733, 295, 10676, 264, 1674, 13, 51014], "temperature": 0.0, "avg_logprob": -0.15989305422856256, "compression_ratio": 1.842741935483871, "no_speech_prob": 0.0480879545211792}, {"id": 254, "seek": 257288, "start": 2585.88, "end": 2595.88, "text": " On the right here you see something with a girl hugging a corgi on a pedestal. And it's kind of matching the style of the image very well here if you can see it kind of looks like it's like painting.", "tokens": [51014, 1282, 264, 558, 510, 291, 536, 746, 365, 257, 2013, 41706, 257, 1181, 7834, 322, 257, 20497, 304, 13, 400, 309, 311, 733, 295, 14324, 264, 3758, 295, 264, 3256, 588, 731, 510, 498, 291, 393, 536, 309, 733, 295, 1542, 411, 309, 311, 411, 5370, 13, 51514], "temperature": 0.0, "avg_logprob": -0.15989305422856256, "compression_ratio": 1.842741935483871, "no_speech_prob": 0.0480879545211792}, {"id": 255, "seek": 259588, "start": 2595.88, "end": 2606.88, "text": " Kind of nicely like blended in. So this is really cool thing which you can do very easily out of the box with diffusion models but it's kind of much harder to do with other classes of models.", "tokens": [50364, 9242, 295, 9594, 411, 27048, 294, 13, 407, 341, 307, 534, 1627, 551, 597, 291, 393, 360, 588, 3612, 484, 295, 264, 2424, 365, 25242, 5245, 457, 309, 311, 733, 295, 709, 6081, 281, 360, 365, 661, 5359, 295, 5245, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1391753589405733, "compression_ratio": 1.708, "no_speech_prob": 0.03961191698908806}, {"id": 256, "seek": 259588, "start": 2606.88, "end": 2621.88, "text": " And you could take this idea iteratively, like you could now erase a region of image. So let's say we erased the region on the left here, and you first filled it in with, you know, a cozy living room, and you raised a different region.", "tokens": [50914, 400, 291, 727, 747, 341, 1558, 17138, 19020, 11, 411, 291, 727, 586, 23525, 257, 4458, 295, 3256, 13, 407, 718, 311, 584, 321, 38359, 264, 4458, 322, 264, 1411, 510, 11, 293, 291, 700, 6412, 309, 294, 365, 11, 291, 458, 11, 257, 29414, 2647, 1808, 11, 293, 291, 6005, 257, 819, 4458, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1391753589405733, "compression_ratio": 1.708, "no_speech_prob": 0.03961191698908806}, {"id": 257, "seek": 262188, "start": 2621.88, "end": 2631.88, "text": " And you know, asked for a painting of a corgi on the wall above the couch. When you get a painting there, you raise another region, put a coffee table, put a flower vase and so on.", "tokens": [50364, 400, 291, 458, 11, 2351, 337, 257, 5370, 295, 257, 1181, 7834, 322, 264, 2929, 3673, 264, 16511, 13, 1133, 291, 483, 257, 5370, 456, 11, 291, 5300, 1071, 4458, 11, 829, 257, 4982, 3199, 11, 829, 257, 8617, 44065, 293, 370, 322, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18362918746805637, "compression_ratio": 1.825910931174089, "no_speech_prob": 0.013835431076586246}, {"id": 258, "seek": 262188, "start": 2631.88, "end": 2646.88, "text": " So this is one way of kind of doing the thing you talked about Ali, but you kind of like generate things iteratively, but this is doing it from painting erasing regions, raising very specific regions, then asking the model to fill that region in with the thing you want.", "tokens": [50864, 407, 341, 307, 472, 636, 295, 733, 295, 884, 264, 551, 291, 2825, 466, 12020, 11, 457, 291, 733, 295, 411, 8460, 721, 17138, 19020, 11, 457, 341, 307, 884, 309, 490, 5370, 1189, 3349, 10682, 11, 11225, 588, 2685, 10682, 11, 550, 3365, 264, 2316, 281, 2836, 300, 4458, 294, 365, 264, 551, 291, 528, 13, 51614], "temperature": 0.0, "avg_logprob": -0.18362918746805637, "compression_ratio": 1.825910931174089, "no_speech_prob": 0.013835431076586246}, {"id": 259, "seek": 264688, "start": 2646.88, "end": 2656.88, "text": " It doesn't cover all kind of modifications that you want to do, but it does cover things that you can represent as like adding things one by one into an image, if that makes sense.", "tokens": [50364, 467, 1177, 380, 2060, 439, 733, 295, 26881, 300, 291, 528, 281, 360, 11, 457, 309, 775, 2060, 721, 300, 291, 393, 2906, 382, 411, 5127, 721, 472, 538, 472, 666, 364, 3256, 11, 498, 300, 1669, 2020, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18622676604384675, "compression_ratio": 1.8199233716475096, "no_speech_prob": 0.0420442596077919}, {"id": 260, "seek": 264688, "start": 2656.88, "end": 2671.88, "text": " So like stuff that you maybe cannot do with this is like, you know, change the style of an image completely the full thing, because well, if you just erase the whole thing you couldn't, it wouldn't have anything to condition it can't use the style but things like this where you add things, you", "tokens": [50864, 407, 411, 1507, 300, 291, 1310, 2644, 360, 365, 341, 307, 411, 11, 291, 458, 11, 1319, 264, 3758, 295, 364, 3256, 2584, 264, 1577, 551, 11, 570, 731, 11, 498, 291, 445, 23525, 264, 1379, 551, 291, 2809, 380, 11, 309, 2759, 380, 362, 1340, 281, 4188, 309, 393, 380, 764, 264, 3758, 457, 721, 411, 341, 689, 291, 909, 721, 11, 291, 51614], "temperature": 0.0, "avg_logprob": -0.18622676604384675, "compression_ratio": 1.8199233716475096, "no_speech_prob": 0.0420442596077919}, {"id": 261, "seek": 267188, "start": 2671.88, "end": 2675.88, "text": " can do it pretty easily through iterative painting.", "tokens": [50364, 393, 360, 309, 1238, 3612, 807, 17138, 1166, 5370, 13, 50564], "temperature": 0.0, "avg_logprob": -0.33199816334004306, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.016570493578910828}, {"id": 262, "seek": 267188, "start": 2675.88, "end": 2681.88, "text": " Any questions so far on the painting side of things.", "tokens": [50564, 2639, 1651, 370, 1400, 322, 264, 5370, 1252, 295, 721, 13, 50864], "temperature": 0.0, "avg_logprob": -0.33199816334004306, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.016570493578910828}, {"id": 263, "seek": 267188, "start": 2681.88, "end": 2688.88, "text": " So Linda is asking if the collab is available for painting I think I saw it on the website.", "tokens": [50864, 407, 20324, 307, 3365, 498, 264, 44228, 307, 2435, 337, 5370, 286, 519, 286, 1866, 309, 322, 264, 3144, 13, 51214], "temperature": 0.0, "avg_logprob": -0.33199816334004306, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.016570493578910828}, {"id": 264, "seek": 268888, "start": 2689.88, "end": 2699.88, "text": " Yes, the collab that we released in the guide repo the thing the third one is the second one that one doesn't painting.", "tokens": [50414, 1079, 11, 264, 44228, 300, 321, 4736, 294, 264, 5934, 49040, 264, 551, 264, 2636, 472, 307, 264, 1150, 472, 300, 472, 1177, 380, 5370, 13, 50914], "temperature": 0.0, "avg_logprob": -0.20867207684094394, "compression_ratio": 1.7783783783783784, "no_speech_prob": 0.29684990644454956}, {"id": 265, "seek": 268888, "start": 2699.88, "end": 2710.88, "text": " Basically, all you like to do that is you'll have to provide this extra image, and you'll have to provide a mask or like mask out a portion of the image and then provide a mask that tells what has been masked.", "tokens": [50914, 8537, 11, 439, 291, 411, 281, 360, 300, 307, 291, 603, 362, 281, 2893, 341, 2857, 3256, 11, 293, 291, 603, 362, 281, 2893, 257, 6094, 420, 411, 6094, 484, 257, 8044, 295, 264, 3256, 293, 550, 2893, 257, 6094, 300, 5112, 437, 575, 668, 45249, 13, 51464], "temperature": 0.0, "avg_logprob": -0.20867207684094394, "compression_ratio": 1.7783783783783784, "no_speech_prob": 0.29684990644454956}, {"id": 266, "seek": 271088, "start": 2710.88, "end": 2720.88, "text": " And then you just run the guided diffusion process as usual, but now with this extra information to try to impaint this region.", "tokens": [50364, 400, 550, 291, 445, 1190, 264, 19663, 25242, 1399, 382, 7713, 11, 457, 586, 365, 341, 2857, 1589, 281, 853, 281, 704, 5114, 341, 4458, 13, 50864], "temperature": 0.0, "avg_logprob": -0.17923759802793846, "compression_ratio": 1.4878048780487805, "no_speech_prob": 0.007007628679275513}, {"id": 267, "seek": 271088, "start": 2720.88, "end": 2725.88, "text": " I'll go into kind of notebook later but yes, the notebooks there.", "tokens": [50864, 286, 603, 352, 666, 733, 295, 21060, 1780, 457, 2086, 11, 264, 43782, 456, 13, 51114], "temperature": 0.0, "avg_logprob": -0.17923759802793846, "compression_ratio": 1.4878048780487805, "no_speech_prob": 0.007007628679275513}, {"id": 268, "seek": 271088, "start": 2725.88, "end": 2729.88, "text": " Diego also has a question.", "tokens": [51114, 16377, 611, 575, 257, 1168, 13, 51314], "temperature": 0.0, "avg_logprob": -0.17923759802793846, "compression_ratio": 1.4878048780487805, "no_speech_prob": 0.007007628679275513}, {"id": 269, "seek": 271088, "start": 2729.88, "end": 2736.88, "text": " Can you remove objects using printing. Yeah, I mean, so let me go back to the slide.", "tokens": [51314, 1664, 291, 4159, 6565, 1228, 14699, 13, 865, 11, 286, 914, 11, 370, 718, 385, 352, 646, 281, 264, 4137, 13, 51664], "temperature": 0.0, "avg_logprob": -0.17923759802793846, "compression_ratio": 1.4878048780487805, "no_speech_prob": 0.007007628679275513}, {"id": 270, "seek": 273688, "start": 2737.88, "end": 2751.88, "text": " I mean, I guess, technically, in the very first one we removed the thing right we just must out whatever was on the wall in the left. And here we ended up adding a painting of a colleague but you could just ask for nothing.", "tokens": [50414, 286, 914, 11, 286, 2041, 11, 12120, 11, 294, 264, 588, 700, 472, 321, 7261, 264, 551, 558, 321, 445, 1633, 484, 2035, 390, 322, 264, 2929, 294, 264, 1411, 13, 400, 510, 321, 4590, 493, 5127, 257, 5370, 295, 257, 13532, 457, 291, 727, 445, 1029, 337, 1825, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1953788871195779, "compression_ratio": 1.5730994152046784, "no_speech_prob": 0.00513728242367506}, {"id": 271, "seek": 273688, "start": 2751.88, "end": 2754.88, "text": " And then it would just fill it with the wall.", "tokens": [51114, 400, 550, 309, 576, 445, 2836, 309, 365, 264, 2929, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1953788871195779, "compression_ratio": 1.5730994152046784, "no_speech_prob": 0.00513728242367506}, {"id": 272, "seek": 275488, "start": 2754.88, "end": 2759.88, "text": " I don't know if there's an example here.", "tokens": [50364, 286, 500, 380, 458, 498, 456, 311, 364, 1365, 510, 13, 50614], "temperature": 0.0, "avg_logprob": -0.2034320956782291, "compression_ratio": 1.5812807881773399, "no_speech_prob": 0.00733800558373332}, {"id": 273, "seek": 275488, "start": 2759.88, "end": 2768.88, "text": " Yeah, in all of these things we kind of change something modified something but if you just don't give any prompt is just going to try to fill it.", "tokens": [50614, 865, 11, 294, 439, 295, 613, 721, 321, 733, 295, 1319, 746, 15873, 746, 457, 498, 291, 445, 500, 380, 976, 604, 12391, 307, 445, 516, 281, 853, 281, 2836, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.2034320956782291, "compression_ratio": 1.5812807881773399, "no_speech_prob": 0.00733800558373332}, {"id": 274, "seek": 275488, "start": 2768.88, "end": 2777.88, "text": " Without any extra information is just trying to make the best possible completion, and that could be kind of like removing an object.", "tokens": [51064, 9129, 604, 2857, 1589, 307, 445, 1382, 281, 652, 264, 1151, 1944, 19372, 11, 293, 300, 727, 312, 733, 295, 411, 12720, 364, 2657, 13, 51514], "temperature": 0.0, "avg_logprob": -0.2034320956782291, "compression_ratio": 1.5812807881773399, "no_speech_prob": 0.00733800558373332}, {"id": 275, "seek": 277788, "start": 2777.88, "end": 2784.88, "text": " Does that answer your question.", "tokens": [50364, 4402, 300, 1867, 428, 1168, 13, 50714], "temperature": 0.0, "avg_logprob": -0.19949516090186867, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.01115074846893549}, {"id": 276, "seek": 277788, "start": 2784.88, "end": 2790.88, "text": " Assuming yes, never move on.", "tokens": [50714, 6281, 24919, 2086, 11, 1128, 1286, 322, 13, 51014], "temperature": 0.0, "avg_logprob": -0.19949516090186867, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.01115074846893549}, {"id": 277, "seek": 277788, "start": 2790.88, "end": 2792.88, "text": " Okay.", "tokens": [51014, 1033, 13, 51114], "temperature": 0.0, "avg_logprob": -0.19949516090186867, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.01115074846893549}, {"id": 278, "seek": 277788, "start": 2792.88, "end": 2806.88, "text": " Well, you can take this idea further and you can do out painting kind of so like previously we drew a mask that was inside the image, but you could also kind of move the rectangle that the model is focusing on outside the image.", "tokens": [51114, 1042, 11, 291, 393, 747, 341, 1558, 3052, 293, 291, 393, 360, 484, 5370, 733, 295, 370, 411, 8046, 321, 12804, 257, 6094, 300, 390, 1854, 264, 3256, 11, 457, 291, 727, 611, 733, 295, 1286, 264, 21930, 300, 264, 2316, 307, 8416, 322, 2380, 264, 3256, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19949516090186867, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.01115074846893549}, {"id": 279, "seek": 280688, "start": 2806.88, "end": 2817.88, "text": " So now the mask looks like a strip of things around the image that is masked, and you can ask the model to fill that thing, and you could keep moving this rectangle around to kind of expand out from an image.", "tokens": [50364, 407, 586, 264, 6094, 1542, 411, 257, 12828, 295, 721, 926, 264, 3256, 300, 307, 45249, 11, 293, 291, 393, 1029, 264, 2316, 281, 2836, 300, 551, 11, 293, 291, 727, 1066, 2684, 341, 21930, 926, 281, 733, 295, 5268, 484, 490, 364, 3256, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16824998660963408, "compression_ratio": 1.8734177215189873, "no_speech_prob": 0.0046067992225289345}, {"id": 280, "seek": 280688, "start": 2817.88, "end": 2834.88, "text": " This is something that Holly heard, and then she like to this central image here and then she kept moving the square out kind of expand out the canvas of the model and ask you to keep filling in extra information outside of the region.", "tokens": [50914, 639, 307, 746, 300, 10055, 2198, 11, 293, 550, 750, 411, 281, 341, 5777, 3256, 510, 293, 550, 750, 4305, 2684, 264, 3732, 484, 733, 295, 5268, 484, 264, 16267, 295, 264, 2316, 293, 1029, 291, 281, 1066, 10623, 294, 2857, 1589, 2380, 295, 264, 4458, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16824998660963408, "compression_ratio": 1.8734177215189873, "no_speech_prob": 0.0046067992225289345}, {"id": 281, "seek": 283488, "start": 2834.88, "end": 2843.88, "text": " At the end of the day for the model is there is just like some conditioning information some mask, and it's going to just try to fill in in that region whatever it thinks is the best possible completion.", "tokens": [50364, 1711, 264, 917, 295, 264, 786, 337, 264, 2316, 307, 456, 307, 445, 411, 512, 21901, 1589, 512, 6094, 11, 293, 309, 311, 516, 281, 445, 853, 281, 2836, 294, 294, 300, 4458, 2035, 309, 7309, 307, 264, 1151, 1944, 19372, 13, 50814], "temperature": 0.0, "avg_logprob": -0.17948197536781185, "compression_ratio": 1.5421686746987953, "no_speech_prob": 0.00254984013736248}, {"id": 282, "seek": 283488, "start": 2843.88, "end": 2849.88, "text": " It doesn't have to be inside and be outside as well.", "tokens": [50814, 467, 1177, 380, 362, 281, 312, 1854, 293, 312, 2380, 382, 731, 13, 51114], "temperature": 0.0, "avg_logprob": -0.17948197536781185, "compression_ratio": 1.5421686746987953, "no_speech_prob": 0.00254984013736248}, {"id": 283, "seek": 284988, "start": 2849.88, "end": 2859.88, "text": " So, one other, I guess, important thing is like, we talked about the release notebooks the breeze notebooks is kind of the released model which is the filtered glide model.", "tokens": [50364, 407, 11, 472, 661, 11, 286, 2041, 11, 1021, 551, 307, 411, 11, 321, 2825, 466, 264, 4374, 43782, 264, 24532, 43782, 307, 733, 295, 264, 4736, 2316, 597, 307, 264, 37111, 41848, 2316, 13, 50864], "temperature": 0.0, "avg_logprob": -0.22056516647338867, "compression_ratio": 1.876595744680851, "no_speech_prob": 0.11742988228797913}, {"id": 284, "seek": 284988, "start": 2859.88, "end": 2876.88, "text": " So in our paper we talk about this where we, if we looked at, you know, kind of the things you could generate with the big original glide model, and there were a lot of, like, problematic things that it could generate that made it unsafe to release the full big model.", "tokens": [50864, 407, 294, 527, 3035, 321, 751, 466, 341, 689, 321, 11, 498, 321, 2956, 412, 11, 291, 458, 11, 733, 295, 264, 721, 291, 727, 8460, 365, 264, 955, 3380, 41848, 2316, 11, 293, 456, 645, 257, 688, 295, 11, 411, 11, 19011, 721, 300, 309, 727, 8460, 300, 1027, 309, 35948, 281, 4374, 264, 1577, 955, 2316, 13, 51714], "temperature": 0.0, "avg_logprob": -0.22056516647338867, "compression_ratio": 1.876595744680851, "no_speech_prob": 0.11742988228797913}, {"id": 285, "seek": 287688, "start": 2876.88, "end": 2892.88, "text": " So release a small smaller model on a filter data set. And it cannot generate things that look as impressive as the big model, but it's still kind of can generate realistic looking images for like some of these easier prompts.", "tokens": [50364, 407, 4374, 257, 1359, 4356, 2316, 322, 257, 6608, 1412, 992, 13, 400, 309, 2644, 8460, 721, 300, 574, 382, 8992, 382, 264, 955, 2316, 11, 457, 309, 311, 920, 733, 295, 393, 8460, 12465, 1237, 5267, 337, 411, 512, 295, 613, 3571, 41095, 13, 51164], "temperature": 0.0, "avg_logprob": -0.150492140826057, "compression_ratio": 1.6652542372881356, "no_speech_prob": 0.006585418246686459}, {"id": 286, "seek": 287688, "start": 2892.88, "end": 2901.88, "text": " But yes, there was going to be a little bit of a performance gap between using the filtered small model that has been released versus for the best images you can see.", "tokens": [51164, 583, 2086, 11, 456, 390, 516, 281, 312, 257, 707, 857, 295, 257, 3389, 7417, 1296, 1228, 264, 37111, 1359, 2316, 300, 575, 668, 4736, 5717, 337, 264, 1151, 5267, 291, 393, 536, 13, 51614], "temperature": 0.0, "avg_logprob": -0.150492140826057, "compression_ratio": 1.6652542372881356, "no_speech_prob": 0.006585418246686459}, {"id": 287, "seek": 290188, "start": 2901.88, "end": 2910.88, "text": " You can still generate a lot of cool things with the small filtered model. These are some of the things I found on Twitter that people have generated with the notebooks that we released.", "tokens": [50364, 509, 393, 920, 8460, 257, 688, 295, 1627, 721, 365, 264, 1359, 37111, 2316, 13, 1981, 366, 512, 295, 264, 721, 286, 1352, 322, 5794, 300, 561, 362, 10833, 365, 264, 43782, 300, 321, 4736, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15946508223010647, "compression_ratio": 1.7094017094017093, "no_speech_prob": 0.06272272020578384}, {"id": 288, "seek": 290188, "start": 2910.88, "end": 2912.88, "text": " So on the left here.", "tokens": [50814, 407, 322, 264, 1411, 510, 13, 50914], "temperature": 0.0, "avg_logprob": -0.15946508223010647, "compression_ratio": 1.7094017094017093, "no_speech_prob": 0.06272272020578384}, {"id": 289, "seek": 290188, "start": 2912.88, "end": 2923.88, "text": " I think what they did was, they kind of did the painting thing, but they just went kind of like in a panorama fashion left to right, and kind of kept asking the model to fill these landscapes.", "tokens": [50914, 286, 519, 437, 436, 630, 390, 11, 436, 733, 295, 630, 264, 5370, 551, 11, 457, 436, 445, 1437, 733, 295, 411, 294, 257, 2462, 32988, 6700, 1411, 281, 558, 11, 293, 733, 295, 4305, 3365, 264, 2316, 281, 2836, 613, 29822, 13, 51464], "temperature": 0.0, "avg_logprob": -0.15946508223010647, "compression_ratio": 1.7094017094017093, "no_speech_prob": 0.06272272020578384}, {"id": 290, "seek": 292388, "start": 2924.88, "end": 2930.88, "text": " The guidance scale a lot to make it very artsy think in the right.", "tokens": [50414, 440, 10056, 4373, 257, 688, 281, 652, 309, 588, 8609, 88, 519, 294, 264, 558, 13, 50714], "temperature": 0.0, "avg_logprob": -0.21577296146126682, "compression_ratio": 1.701834862385321, "no_speech_prob": 0.0826285183429718}, {"id": 291, "seek": 292388, "start": 2930.88, "end": 2937.88, "text": " I've kind of problem like they've done this out painting thing but", "tokens": [50714, 286, 600, 733, 295, 1154, 411, 436, 600, 1096, 341, 484, 5370, 551, 457, 51064], "temperature": 0.0, "avg_logprob": -0.21577296146126682, "compression_ratio": 1.701834862385321, "no_speech_prob": 0.0826285183429718}, {"id": 292, "seek": 292388, "start": 2937.88, "end": 2951.88, "text": " I don't know how they got those structures, but I think a part of this part of the fun stuff here is kind of these prompt search or prompt tuning things where you kind of find these prompts and generate very specific and artistic styles.", "tokens": [51064, 286, 500, 380, 458, 577, 436, 658, 729, 9227, 11, 457, 286, 519, 257, 644, 295, 341, 644, 295, 264, 1019, 1507, 510, 307, 733, 295, 613, 12391, 3164, 420, 12391, 15164, 721, 689, 291, 733, 295, 915, 613, 41095, 293, 8460, 588, 2685, 293, 17090, 13273, 13, 51764], "temperature": 0.0, "avg_logprob": -0.21577296146126682, "compression_ratio": 1.701834862385321, "no_speech_prob": 0.0826285183429718}, {"id": 293, "seek": 295188, "start": 2951.88, "end": 2961.88, "text": " And if you find very cool prompts and you can now use these tricks of our painting and so on, kind of like keep expanding it out to generate these cool pieces of art.", "tokens": [50364, 400, 498, 291, 915, 588, 1627, 41095, 293, 291, 393, 586, 764, 613, 11733, 295, 527, 5370, 293, 370, 322, 11, 733, 295, 411, 1066, 14702, 309, 484, 281, 8460, 613, 1627, 3755, 295, 1523, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18139240589547664, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.0009239810169674456}, {"id": 294, "seek": 295188, "start": 2961.88, "end": 2973.88, "text": " This is another thing I found on Twitter where they trained a classifier for guidance model on conceptual captions and I think this is like a flower a space flower with some space.", "tokens": [50864, 639, 307, 1071, 551, 286, 1352, 322, 5794, 689, 436, 8895, 257, 1508, 9902, 337, 10056, 2316, 322, 24106, 44832, 293, 286, 519, 341, 307, 411, 257, 8617, 257, 1901, 8617, 365, 512, 1901, 13, 51464], "temperature": 0.0, "avg_logprob": -0.18139240589547664, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.0009239810169674456}, {"id": 295, "seek": 295188, "start": 2973.88, "end": 2975.88, "text": " Our team.", "tokens": [51464, 2621, 1469, 13, 51564], "temperature": 0.0, "avg_logprob": -0.18139240589547664, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.0009239810169674456}, {"id": 296, "seek": 295188, "start": 2975.88, "end": 2976.88, "text": " Super cool.", "tokens": [51564, 4548, 1627, 13, 51614], "temperature": 0.0, "avg_logprob": -0.18139240589547664, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.0009239810169674456}, {"id": 297, "seek": 295188, "start": 2976.88, "end": 2979.88, "text": " There is a question.", "tokens": [51614, 821, 307, 257, 1168, 13, 51764], "temperature": 0.0, "avg_logprob": -0.18139240589547664, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.0009239810169674456}, {"id": 298, "seek": 297988, "start": 2979.88, "end": 2981.88, "text": " You want to read it.", "tokens": [50364, 509, 528, 281, 1401, 309, 13, 50464], "temperature": 0.0, "avg_logprob": -0.26100019081351683, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.003997858613729477}, {"id": 299, "seek": 297988, "start": 2981.88, "end": 2983.88, "text": " Let's see.", "tokens": [50464, 961, 311, 536, 13, 50564], "temperature": 0.0, "avg_logprob": -0.26100019081351683, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.003997858613729477}, {"id": 300, "seek": 297988, "start": 2983.88, "end": 2987.88, "text": " What did it create that was dangerous.", "tokens": [50564, 708, 630, 309, 1884, 300, 390, 5795, 13, 50764], "temperature": 0.0, "avg_logprob": -0.26100019081351683, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.003997858613729477}, {"id": 301, "seek": 297988, "start": 2987.88, "end": 2991.88, "text": " So, or maybe comment.", "tokens": [50764, 407, 11, 420, 1310, 2871, 13, 50964], "temperature": 0.0, "avg_logprob": -0.26100019081351683, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.003997858613729477}, {"id": 302, "seek": 297988, "start": 2991.88, "end": 2993.88, "text": " Oh, sorry.", "tokens": [50964, 876, 11, 2597, 13, 51064], "temperature": 0.0, "avg_logprob": -0.26100019081351683, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.003997858613729477}, {"id": 303, "seek": 297988, "start": 2993.88, "end": 3007.88, "text": " I think I, yeah, what did it create that was dangerous. Yeah, I guess, well, for all the days I would recommend just reading a paper. I mean, there were, and I wasn't the one who did the safety analysis here was the opinion.", "tokens": [51064, 286, 519, 286, 11, 1338, 11, 437, 630, 309, 1884, 300, 390, 5795, 13, 865, 11, 286, 2041, 11, 731, 11, 337, 439, 264, 1708, 286, 576, 2748, 445, 3760, 257, 3035, 13, 286, 914, 11, 456, 645, 11, 293, 286, 2067, 380, 264, 472, 567, 630, 264, 4514, 5215, 510, 390, 264, 4800, 13, 51764], "temperature": 0.0, "avg_logprob": -0.26100019081351683, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.003997858613729477}, {"id": 304, "seek": 300788, "start": 3007.88, "end": 3011.88, "text": " The people who work on safety at opening and Alex.", "tokens": [50364, 440, 561, 567, 589, 322, 4514, 412, 5193, 293, 5202, 13, 50564], "temperature": 0.0, "avg_logprob": -0.23371061560225814, "compression_ratio": 1.57, "no_speech_prob": 0.01587371900677681}, {"id": 305, "seek": 300788, "start": 3011.88, "end": 3029.88, "text": " But I think it was stuff like violence it was stuff that could be used for like, if it makes it for like misinformation and so on. But I mean these models are pretty powerful so you could generate lots of things that you don't want to be floating on the internet.", "tokens": [50564, 583, 286, 519, 309, 390, 1507, 411, 6270, 309, 390, 1507, 300, 727, 312, 1143, 337, 411, 11, 498, 309, 1669, 309, 337, 411, 34238, 293, 370, 322, 13, 583, 286, 914, 613, 5245, 366, 1238, 4005, 370, 291, 727, 8460, 3195, 295, 721, 300, 291, 500, 380, 528, 281, 312, 12607, 322, 264, 4705, 13, 51464], "temperature": 0.0, "avg_logprob": -0.23371061560225814, "compression_ratio": 1.57, "no_speech_prob": 0.01587371900677681}, {"id": 306, "seek": 302988, "start": 3029.88, "end": 3044.88, "text": " I mean, the trade offs are hard here right because like, on the one hand you do want to, you know, put these powerful models out there in the hands of people to like, generate all these nice cool art and like, like lots of positive use cases right.", "tokens": [50364, 286, 914, 11, 264, 4923, 39457, 366, 1152, 510, 558, 570, 411, 11, 322, 264, 472, 1011, 291, 360, 528, 281, 11, 291, 458, 11, 829, 613, 4005, 5245, 484, 456, 294, 264, 2377, 295, 561, 281, 411, 11, 8460, 439, 613, 1481, 1627, 1523, 293, 411, 11, 411, 3195, 295, 3353, 764, 3331, 558, 13, 51114], "temperature": 0.0, "avg_logprob": -0.17425858974456787, "compression_ratio": 1.7364016736401673, "no_speech_prob": 0.033563535660505295}, {"id": 307, "seek": 302988, "start": 3044.88, "end": 3054.88, "text": " But I think you want to also be conservative to not create a lot of like stuff that you don't want floating around on the internet that's associated with your models.", "tokens": [51114, 583, 286, 519, 291, 528, 281, 611, 312, 13780, 281, 406, 1884, 257, 688, 295, 411, 1507, 300, 291, 500, 380, 528, 12607, 926, 322, 264, 4705, 300, 311, 6615, 365, 428, 5245, 13, 51614], "temperature": 0.0, "avg_logprob": -0.17425858974456787, "compression_ratio": 1.7364016736401673, "no_speech_prob": 0.033563535660505295}, {"id": 308, "seek": 305488, "start": 3054.88, "end": 3057.88, "text": " You know, this is a tough trade off.", "tokens": [50364, 509, 458, 11, 341, 307, 257, 4930, 4923, 766, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16972362672960437, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.016396163031458855}, {"id": 309, "seek": 305488, "start": 3057.88, "end": 3071.88, "text": " I think it's, it's nice that we can still release some safe model that people can use, but making these models like fully safe when they never generate something that is like, kind of like not a, not a good thing.", "tokens": [50514, 286, 519, 309, 311, 11, 309, 311, 1481, 300, 321, 393, 920, 4374, 512, 3273, 2316, 300, 561, 393, 764, 11, 457, 1455, 613, 5245, 411, 4498, 3273, 562, 436, 1128, 8460, 746, 300, 307, 411, 11, 733, 295, 411, 406, 257, 11, 406, 257, 665, 551, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16972362672960437, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.016396163031458855}, {"id": 310, "seek": 305488, "start": 3071.88, "end": 3075.88, "text": " It's very hard problem in general.", "tokens": [51214, 467, 311, 588, 1152, 1154, 294, 2674, 13, 51414], "temperature": 0.0, "avg_logprob": -0.16972362672960437, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.016396163031458855}, {"id": 311, "seek": 307588, "start": 3075.88, "end": 3088.88, "text": " So you need to find more like detailed examples in our paper, if you're looking for like specific examples, but that was kind of our line of thinking on like releasing like the small filter budget.", "tokens": [50364, 407, 291, 643, 281, 915, 544, 411, 9942, 5110, 294, 527, 3035, 11, 498, 291, 434, 1237, 337, 411, 2685, 5110, 11, 457, 300, 390, 733, 295, 527, 1622, 295, 1953, 322, 411, 16327, 411, 264, 1359, 6608, 4706, 13, 51014], "temperature": 0.0, "avg_logprob": -0.19834387579629587, "compression_ratio": 1.6431718061674008, "no_speech_prob": 0.010011011734604836}, {"id": 312, "seek": 307588, "start": 3088.88, "end": 3101.88, "text": " Okay, maybe a slight tangent but what what does the process look like of let's say calling, you know, the unsafe parts away from from the model, like how do you go about that.", "tokens": [51014, 1033, 11, 1310, 257, 4036, 27747, 457, 437, 437, 775, 264, 1399, 574, 411, 295, 718, 311, 584, 5141, 11, 291, 458, 11, 264, 35948, 3166, 1314, 490, 490, 264, 2316, 11, 411, 577, 360, 291, 352, 466, 300, 13, 51664], "temperature": 0.0, "avg_logprob": -0.19834387579629587, "compression_ratio": 1.6431718061674008, "no_speech_prob": 0.010011011734604836}, {"id": 313, "seek": 310188, "start": 3101.88, "end": 3121.88, "text": " So calls usually I guess training these training kind of like these classifiers to filter out portions of the data set that could be like not safe, if you could, you know, train an NSFW classifier you could train a classifier for like hate symbols you could train a classifier for", "tokens": [50364, 407, 5498, 2673, 286, 2041, 3097, 613, 3097, 733, 295, 411, 613, 1508, 23463, 281, 6608, 484, 25070, 295, 264, 1412, 992, 300, 727, 312, 411, 406, 3273, 11, 498, 291, 727, 11, 291, 458, 11, 3847, 364, 15943, 37, 54, 1508, 9902, 291, 727, 3847, 257, 1508, 9902, 337, 411, 4700, 16944, 291, 727, 3847, 257, 1508, 9902, 337, 51364], "temperature": 0.0, "avg_logprob": -0.22381716966629028, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.007573422975838184}, {"id": 314, "seek": 312188, "start": 3121.88, "end": 3132.88, "text": " other things, then you, once you have labeled data on which you can train these classifiers labeled data for like I don't know real images that you consider things that you don't want to model to generate.", "tokens": [50364, 661, 721, 11, 550, 291, 11, 1564, 291, 362, 21335, 1412, 322, 597, 291, 393, 3847, 613, 1508, 23463, 21335, 1412, 337, 411, 286, 500, 380, 458, 957, 5267, 300, 291, 1949, 721, 300, 291, 500, 380, 528, 281, 2316, 281, 8460, 13, 50914], "temperature": 0.0, "avg_logprob": -0.19682838803245908, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.05255003273487091}, {"id": 315, "seek": 312188, "start": 3132.88, "end": 3144.88, "text": " You could run these classifiers on your training data set filter it out, then train a model on the filter data set. So hopefully the model will never go into regions where", "tokens": [50914, 509, 727, 1190, 613, 1508, 23463, 322, 428, 3097, 1412, 992, 6608, 309, 484, 11, 550, 3847, 257, 2316, 322, 264, 6608, 1412, 992, 13, 407, 4696, 264, 2316, 486, 1128, 352, 666, 10682, 689, 51514], "temperature": 0.0, "avg_logprob": -0.19682838803245908, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.05255003273487091}, {"id": 316, "seek": 314488, "start": 3144.88, "end": 3149.88, "text": " there's nothing like that because it was never part of the training data.", "tokens": [50364, 456, 311, 1825, 411, 300, 570, 309, 390, 1128, 644, 295, 264, 3097, 1412, 13, 50614], "temperature": 0.0, "avg_logprob": -0.17805530343736922, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.06944173574447632}, {"id": 317, "seek": 314488, "start": 3149.88, "end": 3152.88, "text": " Yeah, awesome. Thank you.", "tokens": [50614, 865, 11, 3476, 13, 1044, 291, 13, 50764], "temperature": 0.0, "avg_logprob": -0.17805530343736922, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.06944173574447632}, {"id": 318, "seek": 314488, "start": 3152.88, "end": 3163.88, "text": " Okay, so just a quick like some like look into the notebooks that we've released this. This is just like some useful.", "tokens": [50764, 1033, 11, 370, 445, 257, 1702, 411, 512, 411, 574, 666, 264, 43782, 300, 321, 600, 4736, 341, 13, 639, 307, 445, 411, 512, 4420, 13, 51314], "temperature": 0.0, "avg_logprob": -0.17805530343736922, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.06944173574447632}, {"id": 319, "seek": 316388, "start": 3163.88, "end": 3175.88, "text": " Some parameters that you will have to like, kind of like deal with when you're trying to generate stuff from the notebooks that you released. Well, there's the two scales we've talked about in a talk today the classifier free guidance scale and the clip guidance", "tokens": [50364, 2188, 9834, 300, 291, 486, 362, 281, 411, 11, 733, 295, 411, 2028, 365, 562, 291, 434, 1382, 281, 8460, 1507, 490, 264, 43782, 300, 291, 4736, 13, 1042, 11, 456, 311, 264, 732, 17408, 321, 600, 2825, 466, 294, 257, 751, 965, 264, 1508, 9902, 1737, 10056, 4373, 293, 264, 7353, 10056, 50964], "temperature": 0.0, "avg_logprob": -0.19237300603076665, "compression_ratio": 1.875, "no_speech_prob": 0.3481704294681549}, {"id": 320, "seek": 316388, "start": 3175.88, "end": 3189.88, "text": " scale, the small values for these scales will generate, you know, more diverse, but not very coherent samples larger values will generate coherent things very large values will generate like very artsy looking things.", "tokens": [50964, 4373, 11, 264, 1359, 4190, 337, 613, 17408, 486, 8460, 11, 291, 458, 11, 544, 9521, 11, 457, 406, 588, 36239, 10938, 4833, 4190, 486, 8460, 36239, 721, 588, 2416, 4190, 486, 8460, 411, 588, 8609, 88, 1237, 721, 13, 51664], "temperature": 0.0, "avg_logprob": -0.19237300603076665, "compression_ratio": 1.875, "no_speech_prob": 0.3481704294681549}, {"id": 321, "seek": 318988, "start": 3189.88, "end": 3198.88, "text": " The classifier free guidance scale, like, I think three might be the default but you could try five 1020 or so on to generate more artistic things.", "tokens": [50364, 440, 1508, 9902, 1737, 10056, 4373, 11, 411, 11, 286, 519, 1045, 1062, 312, 264, 7576, 457, 291, 727, 853, 1732, 1266, 2009, 420, 370, 322, 281, 8460, 544, 17090, 721, 13, 50814], "temperature": 0.0, "avg_logprob": -0.18697353509756234, "compression_ratio": 1.6830188679245284, "no_speech_prob": 0.011148056946694851}, {"id": 322, "seek": 318988, "start": 3198.88, "end": 3201.88, "text": " Similarly for the clip guidance scale.", "tokens": [50814, 13157, 337, 264, 7353, 10056, 4373, 13, 50964], "temperature": 0.0, "avg_logprob": -0.18697353509756234, "compression_ratio": 1.6830188679245284, "no_speech_prob": 0.011148056946694851}, {"id": 323, "seek": 318988, "start": 3201.88, "end": 3216.88, "text": " Time steps kind of controls like how many little steps you take in the diffusion process. I think by default we use 100. There's 100 steps of like iterative denoising that will happen so if you use a higher value to look more sharp, but you'll also spend more", "tokens": [50964, 6161, 4439, 733, 295, 9003, 411, 577, 867, 707, 4439, 291, 747, 294, 264, 25242, 1399, 13, 286, 519, 538, 7576, 321, 764, 2319, 13, 821, 311, 2319, 4439, 295, 411, 17138, 1166, 1441, 78, 3436, 300, 486, 1051, 370, 498, 291, 764, 257, 2946, 2158, 281, 574, 544, 8199, 11, 457, 291, 603, 611, 3496, 544, 51714], "temperature": 0.0, "avg_logprob": -0.18697353509756234, "compression_ratio": 1.6830188679245284, "no_speech_prob": 0.011148056946694851}, {"id": 324, "seek": 321688, "start": 3216.88, "end": 3219.88, "text": " time creating a sample.", "tokens": [50364, 565, 4084, 257, 6889, 13, 50514], "temperature": 0.0, "avg_logprob": -0.17848625637236096, "compression_ratio": 1.7061855670103092, "no_speech_prob": 0.030647223815321922}, {"id": 325, "seek": 321688, "start": 3219.88, "end": 3222.88, "text": " So it was a good like trade off that we used in the thing.", "tokens": [50514, 407, 309, 390, 257, 665, 411, 4923, 766, 300, 321, 1143, 294, 264, 551, 13, 50664], "temperature": 0.0, "avg_logprob": -0.17848625637236096, "compression_ratio": 1.7061855670103092, "no_speech_prob": 0.030647223815321922}, {"id": 326, "seek": 321688, "start": 3222.88, "end": 3236.88, "text": " Finally, the further in painting notebook, you would have to provide an extra thing which is like, what is the region of a given image that you want to paint so you would have to provide, let's say a 64 by 64 image that you want to impaint and some", "tokens": [50664, 6288, 11, 264, 3052, 294, 5370, 21060, 11, 291, 576, 362, 281, 2893, 364, 2857, 551, 597, 307, 411, 11, 437, 307, 264, 4458, 295, 257, 2212, 3256, 300, 291, 528, 281, 4225, 370, 291, 576, 362, 281, 2893, 11, 718, 311, 584, 257, 12145, 538, 12145, 3256, 300, 291, 528, 281, 704, 5114, 293, 512, 51364], "temperature": 0.0, "avg_logprob": -0.17848625637236096, "compression_ratio": 1.7061855670103092, "no_speech_prob": 0.030647223815321922}, {"id": 327, "seek": 323688, "start": 3237.88, "end": 3249.88, "text": " that you've like removed that you kind of specify with a mask, which is like, I think one in places where the image is not masked and zero in the places where the image is masked.", "tokens": [50414, 300, 291, 600, 411, 7261, 300, 291, 733, 295, 16500, 365, 257, 6094, 11, 597, 307, 411, 11, 286, 519, 472, 294, 3190, 689, 264, 3256, 307, 406, 45249, 293, 4018, 294, 264, 3190, 689, 264, 3256, 307, 45249, 13, 51014], "temperature": 0.0, "avg_logprob": -0.24511518283766143, "compression_ratio": 1.943661971830986, "no_speech_prob": 0.24747921526432037}, {"id": 328, "seek": 323688, "start": 3249.88, "end": 3260.88, "text": " I could be wrong on the zero versus one, so you should check the notebook for which direction, basically it's a binary mask that tells this is the portion of the image that is masked, this is the portion of the image that is unmasked.", "tokens": [51014, 286, 727, 312, 2085, 322, 264, 4018, 5717, 472, 11, 370, 291, 820, 1520, 264, 21060, 337, 597, 3513, 11, 1936, 309, 311, 257, 17434, 6094, 300, 5112, 341, 307, 264, 8044, 295, 264, 3256, 300, 307, 45249, 11, 341, 307, 264, 8044, 295, 264, 3256, 300, 307, 517, 3799, 34601, 13, 51564], "temperature": 0.0, "avg_logprob": -0.24511518283766143, "compression_ratio": 1.943661971830986, "no_speech_prob": 0.24747921526432037}, {"id": 329, "seek": 326088, "start": 3260.88, "end": 3266.88, "text": " And the rest is like, just just a usual image with three channels that you provide as extra information to the model.", "tokens": [50364, 400, 264, 1472, 307, 411, 11, 445, 445, 257, 7713, 3256, 365, 1045, 9235, 300, 291, 2893, 382, 2857, 1589, 281, 264, 2316, 13, 50664], "temperature": 0.0, "avg_logprob": -0.15787542783297026, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.010324209928512573}, {"id": 330, "seek": 326088, "start": 3266.88, "end": 3270.88, "text": " And do you just upload that as an image file.", "tokens": [50664, 400, 360, 291, 445, 6580, 300, 382, 364, 3256, 3991, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15787542783297026, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.010324209928512573}, {"id": 331, "seek": 326088, "start": 3270.88, "end": 3284.88, "text": " I think the way in the notebook that works is, so if this is on a co lab you'll have to have the file on drive and then you open it using pillow image dot open or something. I don't know if there's like a direct upload button.", "tokens": [50864, 286, 519, 264, 636, 294, 264, 21060, 300, 1985, 307, 11, 370, 498, 341, 307, 322, 257, 598, 2715, 291, 603, 362, 281, 362, 264, 3991, 322, 3332, 293, 550, 291, 1269, 309, 1228, 18581, 3256, 5893, 1269, 420, 746, 13, 286, 500, 380, 458, 498, 456, 311, 411, 257, 2047, 6580, 2960, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15787542783297026, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.010324209928512573}, {"id": 332, "seek": 326088, "start": 3284.88, "end": 3286.88, "text": " But I guess like,", "tokens": [51564, 583, 286, 2041, 411, 11, 51664], "temperature": 0.0, "avg_logprob": -0.15787542783297026, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.010324209928512573}, {"id": 333, "seek": 328688, "start": 3286.88, "end": 3296.88, "text": " Oh, sorry, I guess my question was, like when you add the mask, like the mask is just like removing part of like a regular image file or like there's something more to it.", "tokens": [50364, 876, 11, 2597, 11, 286, 2041, 452, 1168, 390, 11, 411, 562, 291, 909, 264, 6094, 11, 411, 264, 6094, 307, 445, 411, 12720, 644, 295, 411, 257, 3890, 3256, 3991, 420, 411, 456, 311, 746, 544, 281, 309, 13, 50864], "temperature": 0.0, "avg_logprob": -0.20949755893664412, "compression_ratio": 1.6826923076923077, "no_speech_prob": 0.0006163493962958455}, {"id": 334, "seek": 328688, "start": 3296.88, "end": 3307.88, "text": " Oh, yeah, that's just removing parts of the regular file. So like, I think if you want to do it programmatically just just zero out that region.", "tokens": [50864, 876, 11, 1338, 11, 300, 311, 445, 12720, 3166, 295, 264, 3890, 3991, 13, 407, 411, 11, 286, 519, 498, 291, 528, 281, 360, 309, 37648, 5030, 445, 445, 4018, 484, 300, 4458, 13, 51414], "temperature": 0.0, "avg_logprob": -0.20949755893664412, "compression_ratio": 1.6826923076923077, "no_speech_prob": 0.0006163493962958455}, {"id": 335, "seek": 328688, "start": 3307.88, "end": 3309.88, "text": " Does that answer the question or.", "tokens": [51414, 4402, 300, 1867, 264, 1168, 420, 13, 51514], "temperature": 0.0, "avg_logprob": -0.20949755893664412, "compression_ratio": 1.6826923076923077, "no_speech_prob": 0.0006163493962958455}, {"id": 336, "seek": 330988, "start": 3309.88, "end": 3312.88, "text": " That makes sense. Yeah, thank you. Yeah.", "tokens": [50364, 663, 1669, 2020, 13, 865, 11, 1309, 291, 13, 865, 13, 50514], "temperature": 0.0, "avg_logprob": -0.17900155719957853, "compression_ratio": 1.8394495412844036, "no_speech_prob": 0.02713898755609989}, {"id": 337, "seek": 330988, "start": 3312.88, "end": 3326.88, "text": " There's an example in the notebook and there's a cell in the notebook that kind of masks an image that might be more clear where you can see like, you are loading an image from the disk then you are kind of like removing a region then you are kind of writing down a", "tokens": [50514, 821, 311, 364, 1365, 294, 264, 21060, 293, 456, 311, 257, 2815, 294, 264, 21060, 300, 733, 295, 11830, 364, 3256, 300, 1062, 312, 544, 1850, 689, 291, 393, 536, 411, 11, 291, 366, 15114, 364, 3256, 490, 264, 12355, 550, 291, 366, 733, 295, 411, 12720, 257, 4458, 550, 291, 366, 733, 295, 3579, 760, 257, 51214], "temperature": 0.0, "avg_logprob": -0.17900155719957853, "compression_ratio": 1.8394495412844036, "no_speech_prob": 0.02713898755609989}, {"id": 338, "seek": 330988, "start": 3326.88, "end": 3333.88, "text": " mask that specifies what you removed and then you pass in all this information into the model.", "tokens": [51214, 6094, 300, 1608, 11221, 437, 291, 7261, 293, 550, 291, 1320, 294, 439, 341, 1589, 666, 264, 2316, 13, 51564], "temperature": 0.0, "avg_logprob": -0.17900155719957853, "compression_ratio": 1.8394495412844036, "no_speech_prob": 0.02713898755609989}, {"id": 339, "seek": 333388, "start": 3333.88, "end": 3343.88, "text": " So I think that's it for the stuff you will need to kind of like apply this thing to the notebook.", "tokens": [50364, 407, 286, 519, 300, 311, 309, 337, 264, 1507, 291, 486, 643, 281, 733, 295, 411, 3079, 341, 551, 281, 264, 21060, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10776544228578225, "compression_ratio": 1.7035175879396984, "no_speech_prob": 0.06092144176363945}, {"id": 340, "seek": 333388, "start": 3343.88, "end": 3356.88, "text": " And if you want more further reading or like what we talked about today, I mean I try to focus on mostly like things you will need to understand for like kind of generating art from these things but you want to go into more detail about the", "tokens": [50864, 400, 498, 291, 528, 544, 3052, 3760, 420, 411, 437, 321, 2825, 466, 965, 11, 286, 914, 286, 853, 281, 1879, 322, 5240, 411, 721, 291, 486, 643, 281, 1223, 337, 411, 733, 295, 17746, 1523, 490, 613, 721, 457, 291, 528, 281, 352, 666, 544, 2607, 466, 264, 51514], "temperature": 0.0, "avg_logprob": -0.10776544228578225, "compression_ratio": 1.7035175879396984, "no_speech_prob": 0.06092144176363945}, {"id": 341, "seek": 335688, "start": 3356.88, "end": 3366.88, "text": " design of these models. I think the best paper would probably be the denoising diffusion probabilistic models paper by Jonathan Ho, the DDPM paper.", "tokens": [50364, 1715, 295, 613, 5245, 13, 286, 519, 264, 1151, 3035, 576, 1391, 312, 264, 1441, 78, 3436, 25242, 31959, 3142, 5245, 3035, 538, 15471, 3631, 11, 264, 30778, 18819, 3035, 13, 50864], "temperature": 0.0, "avg_logprob": -0.2731531030991498, "compression_ratio": 1.7455357142857142, "no_speech_prob": 0.22784768044948578}, {"id": 342, "seek": 335688, "start": 3366.88, "end": 3379.88, "text": " That has kind of like the basic theory of the models that we talked about today, and there was our paper on diffusion models began to imagine this is that kind of talks about the guidance trick for classifier guidance, and then the glide paper", "tokens": [50864, 663, 575, 733, 295, 411, 264, 3875, 5261, 295, 264, 5245, 300, 321, 2825, 466, 965, 11, 293, 456, 390, 527, 3035, 322, 25242, 5245, 4283, 281, 3811, 341, 307, 300, 733, 295, 6686, 466, 264, 10056, 4282, 337, 1508, 9902, 10056, 11, 293, 550, 264, 41848, 3035, 51514], "temperature": 0.0, "avg_logprob": -0.2731531030991498, "compression_ratio": 1.7455357142857142, "no_speech_prob": 0.22784768044948578}, {"id": 343, "seek": 337988, "start": 3379.88, "end": 3394.88, "text": " to this for text conditional models where we talk about clip guidance and classifier free guidance. There was also the paper by young song generative modeling best made ingredients of the data distribution which kind of like was before the Jonathan", "tokens": [50364, 281, 341, 337, 2487, 27708, 5245, 689, 321, 751, 466, 7353, 10056, 293, 1508, 9902, 1737, 10056, 13, 821, 390, 611, 264, 3035, 538, 2037, 2153, 1337, 1166, 15983, 1151, 1027, 6952, 295, 264, 1412, 7316, 597, 733, 295, 411, 390, 949, 264, 15471, 51114], "temperature": 0.0, "avg_logprob": -0.3528901735941569, "compression_ratio": 1.503030303030303, "no_speech_prob": 0.03617461398243904}, {"id": 344, "seek": 339488, "start": 3394.88, "end": 3406.88, "text": " Ho approach this problem from a very different perspective of score matching, and in the DDPM paper Jonathan Ho and others showed how it's kind of equivalent to score matching.", "tokens": [50364, 3631, 3109, 341, 1154, 490, 257, 588, 819, 4585, 295, 6175, 14324, 11, 293, 294, 264, 30778, 18819, 3035, 15471, 3631, 293, 2357, 4712, 577, 309, 311, 733, 295, 10344, 281, 6175, 14324, 13, 50964], "temperature": 0.0, "avg_logprob": -0.18598160845168094, "compression_ratio": 1.7207547169811321, "no_speech_prob": 0.06000456213951111}, {"id": 345, "seek": 339488, "start": 3406.88, "end": 3420.88, "text": " So if you want to understand diffusion models from a different lens, I think I would strongly recommend that paper, and these two blogs as well by Lillian and Yang on diffusion models and score matching models, basically like two sides of the same kind of understanding from both", "tokens": [50964, 407, 498, 291, 528, 281, 1223, 25242, 5245, 490, 257, 819, 6765, 11, 286, 519, 286, 576, 10613, 2748, 300, 3035, 11, 293, 613, 732, 31038, 382, 731, 538, 441, 373, 952, 293, 11978, 322, 25242, 5245, 293, 6175, 14324, 5245, 11, 1936, 411, 732, 4881, 295, 264, 912, 733, 295, 3701, 490, 1293, 51664], "temperature": 0.0, "avg_logprob": -0.18598160845168094, "compression_ratio": 1.7207547169811321, "no_speech_prob": 0.06000456213951111}, {"id": 346, "seek": 342088, "start": 3420.88, "end": 3426.88, "text": " the super useful to see you know why these generated models work.", "tokens": [50364, 264, 1687, 4420, 281, 536, 291, 458, 983, 613, 10833, 5245, 589, 13, 50664], "temperature": 0.0, "avg_logprob": -0.23923510771531326, "compression_ratio": 1.3478260869565217, "no_speech_prob": 0.03153197467327118}, {"id": 347, "seek": 342088, "start": 3426.88, "end": 3431.88, "text": " And that's it.", "tokens": [50664, 400, 300, 311, 309, 13, 50914], "temperature": 0.0, "avg_logprob": -0.23923510771531326, "compression_ratio": 1.3478260869565217, "no_speech_prob": 0.03153197467327118}, {"id": 348, "seek": 342088, "start": 3431.88, "end": 3436.88, "text": " Thank you so much it was very, very interesting and fascinating.", "tokens": [50914, 1044, 291, 370, 709, 309, 390, 588, 11, 588, 1880, 293, 10343, 13, 51164], "temperature": 0.0, "avg_logprob": -0.23923510771531326, "compression_ratio": 1.3478260869565217, "no_speech_prob": 0.03153197467327118}, {"id": 349, "seek": 342088, "start": 3436.88, "end": 3438.88, "text": " I'm very inspiring.", "tokens": [51164, 286, 478, 588, 15883, 13, 51264], "temperature": 0.0, "avg_logprob": -0.23923510771531326, "compression_ratio": 1.3478260869565217, "no_speech_prob": 0.03153197467327118}, {"id": 350, "seek": 342088, "start": 3438.88, "end": 3440.88, "text": " Are there questions.", "tokens": [51264, 2014, 456, 1651, 13, 51364], "temperature": 0.0, "avg_logprob": -0.23923510771531326, "compression_ratio": 1.3478260869565217, "no_speech_prob": 0.03153197467327118}, {"id": 351, "seek": 344088, "start": 3440.88, "end": 3441.88, "text": " Go ahead.", "tokens": [50364, 1037, 2286, 13, 50414], "temperature": 0.0, "avg_logprob": -0.26199805109124435, "compression_ratio": 1.7527472527472527, "no_speech_prob": 0.034840602427721024}, {"id": 352, "seek": 344088, "start": 3441.88, "end": 3443.88, "text": " Super cool.", "tokens": [50414, 4548, 1627, 13, 50514], "temperature": 0.0, "avg_logprob": -0.26199805109124435, "compression_ratio": 1.7527472527472527, "no_speech_prob": 0.034840602427721024}, {"id": 353, "seek": 344088, "start": 3443.88, "end": 3444.88, "text": " Thank you.", "tokens": [50514, 1044, 291, 13, 50564], "temperature": 0.0, "avg_logprob": -0.26199805109124435, "compression_ratio": 1.7527472527472527, "no_speech_prob": 0.034840602427721024}, {"id": 354, "seek": 344088, "start": 3444.88, "end": 3460.88, "text": " Question. Did you notice if there was any relationship between say, like, if you fed it to dimensional noise, and if you were to step through the X or Y coordinates, did you notice if there's any relationship between the coordinates used for two dimensional noise and the output you can", "tokens": [50564, 14464, 13, 2589, 291, 3449, 498, 456, 390, 604, 2480, 1296, 584, 11, 411, 11, 498, 291, 4636, 309, 281, 18795, 5658, 11, 293, 498, 291, 645, 281, 1823, 807, 264, 1783, 420, 398, 21056, 11, 630, 291, 3449, 498, 456, 311, 604, 2480, 1296, 264, 21056, 1143, 337, 732, 18795, 5658, 293, 264, 5598, 291, 393, 51364], "temperature": 0.0, "avg_logprob": -0.26199805109124435, "compression_ratio": 1.7527472527472527, "no_speech_prob": 0.034840602427721024}, {"id": 355, "seek": 346088, "start": 3460.88, "end": 3462.88, "text": " Say that again.", "tokens": [50364, 6463, 300, 797, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2140755591454444, "compression_ratio": 2.0683229813664594, "no_speech_prob": 0.08710485696792603}, {"id": 356, "seek": 346088, "start": 3462.88, "end": 3464.88, "text": " What did you say at the end.", "tokens": [50464, 708, 630, 291, 584, 412, 264, 917, 13, 50564], "temperature": 0.0, "avg_logprob": -0.2140755591454444, "compression_ratio": 2.0683229813664594, "no_speech_prob": 0.08710485696792603}, {"id": 357, "seek": 346088, "start": 3464.88, "end": 3475.88, "text": " If you use two dimensional noise is there a relationship between the coordinates that you use for the two dimensional noise map and the outputs of the model.", "tokens": [50564, 759, 291, 764, 732, 18795, 5658, 307, 456, 257, 2480, 1296, 264, 21056, 300, 291, 764, 337, 264, 732, 18795, 5658, 4471, 293, 264, 23930, 295, 264, 2316, 13, 51114], "temperature": 0.0, "avg_logprob": -0.2140755591454444, "compression_ratio": 2.0683229813664594, "no_speech_prob": 0.08710485696792603}, {"id": 358, "seek": 346088, "start": 3475.88, "end": 3483.88, "text": " Like is there a relationship that that that you observe between the noise that you use and the model and the outputs of the model.", "tokens": [51114, 1743, 307, 456, 257, 2480, 300, 300, 300, 291, 11441, 1296, 264, 5658, 300, 291, 764, 293, 264, 2316, 293, 264, 23930, 295, 264, 2316, 13, 51514], "temperature": 0.0, "avg_logprob": -0.2140755591454444, "compression_ratio": 2.0683229813664594, "no_speech_prob": 0.08710485696792603}, {"id": 359, "seek": 348388, "start": 3484.88, "end": 3491.88, "text": " There's a little bit so like one way you can do this is you can like fix the noise, the sample and change the label.", "tokens": [50414, 821, 311, 257, 707, 857, 370, 411, 472, 636, 291, 393, 360, 341, 307, 291, 393, 411, 3191, 264, 5658, 11, 264, 6889, 293, 1319, 264, 7645, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1058369561245567, "compression_ratio": 1.683673469387755, "no_speech_prob": 0.022271713241934776}, {"id": 360, "seek": 348388, "start": 3491.88, "end": 3500.88, "text": " And you can see that the generated images for the same noise but different labels kind of have similar like perspective and spatial structure.", "tokens": [50764, 400, 291, 393, 536, 300, 264, 10833, 5267, 337, 264, 912, 5658, 457, 819, 16949, 733, 295, 362, 2531, 411, 4585, 293, 23598, 3877, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1058369561245567, "compression_ratio": 1.683673469387755, "no_speech_prob": 0.022271713241934776}, {"id": 361, "seek": 348388, "start": 3500.88, "end": 3505.88, "text": " So like, but but they look kind of like images from different classes.", "tokens": [51214, 407, 411, 11, 457, 457, 436, 574, 733, 295, 411, 5267, 490, 819, 5359, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1058369561245567, "compression_ratio": 1.683673469387755, "no_speech_prob": 0.022271713241934776}, {"id": 362, "seek": 350588, "start": 3505.88, "end": 3514.88, "text": " So this is definitely control some aspect of you know how the final output looks like and there's some kind of spatial like connection, but it's not an exact direct connection.", "tokens": [50364, 407, 341, 307, 2138, 1969, 512, 4171, 295, 291, 458, 577, 264, 2572, 5598, 1542, 411, 293, 456, 311, 512, 733, 295, 23598, 411, 4984, 11, 457, 309, 311, 406, 364, 1900, 2047, 4984, 13, 50814], "temperature": 0.0, "avg_logprob": -0.24446421010153635, "compression_ratio": 1.4743589743589745, "no_speech_prob": 0.022961532697081566}, {"id": 363, "seek": 350588, "start": 3514.88, "end": 3517.88, "text": " Does that kind of answer your question.", "tokens": [50814, 4402, 300, 733, 295, 1867, 428, 1168, 13, 50964], "temperature": 0.0, "avg_logprob": -0.24446421010153635, "compression_ratio": 1.4743589743589745, "no_speech_prob": 0.022961532697081566}, {"id": 364, "seek": 350588, "start": 3517.88, "end": 3519.88, "text": " Yeah, got it.", "tokens": [50964, 865, 11, 658, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.24446421010153635, "compression_ratio": 1.4743589743589745, "no_speech_prob": 0.022961532697081566}, {"id": 365, "seek": 351988, "start": 3519.88, "end": 3528.88, "text": " I love this in our I think diffusion models beat guns paper. I think that in the appendix we have an example where we like do this specific thing.", "tokens": [50364, 286, 959, 341, 294, 527, 286, 519, 25242, 5245, 4224, 10153, 3035, 13, 286, 519, 300, 294, 264, 34116, 970, 321, 362, 364, 1365, 689, 321, 411, 360, 341, 2685, 551, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2721005708743364, "compression_ratio": 1.5953488372093023, "no_speech_prob": 0.12075440585613251}, {"id": 366, "seek": 351988, "start": 3528.88, "end": 3532.88, "text": " It's actually more directly connected when you use a different sampling method.", "tokens": [50814, 467, 311, 767, 544, 3838, 4582, 562, 291, 764, 257, 819, 21179, 3170, 13, 51014], "temperature": 0.0, "avg_logprob": -0.2721005708743364, "compression_ratio": 1.5953488372093023, "no_speech_prob": 0.12075440585613251}, {"id": 367, "seek": 351988, "start": 3532.88, "end": 3540.88, "text": " So, I showed you there is reverse process right where at each step you're doing this reverse step with the Gaussian.", "tokens": [51014, 407, 11, 286, 4712, 291, 456, 307, 9943, 1399, 558, 689, 412, 1184, 1823, 291, 434, 884, 341, 9943, 1823, 365, 264, 39148, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2721005708743364, "compression_ratio": 1.5953488372093023, "no_speech_prob": 0.12075440585613251}, {"id": 368, "seek": 354088, "start": 3540.88, "end": 3552.88, "text": " At each step you're adding a little bit of noise when you sample from the Gaussian, but there's a different way of reverse sampling from these models which is called ddim is another paper on that, where you just sample noise once at the start.", "tokens": [50364, 1711, 1184, 1823, 291, 434, 5127, 257, 707, 857, 295, 5658, 562, 291, 6889, 490, 264, 39148, 11, 457, 456, 311, 257, 819, 636, 295, 9943, 21179, 490, 613, 5245, 597, 307, 1219, 274, 13595, 307, 1071, 3035, 322, 300, 11, 689, 291, 445, 6889, 5658, 1564, 412, 264, 722, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1548308775975154, "compression_ratio": 1.7984790874524714, "no_speech_prob": 0.004195505287498236}, {"id": 369, "seek": 354088, "start": 3552.88, "end": 3569.88, "text": " And then you just run a deterministic reverse process to sample from the model in that case that there's kind of like this one to one correspondence between the noise and the generated image, and then it's more clear to see this.", "tokens": [50964, 400, 550, 291, 445, 1190, 257, 15957, 3142, 9943, 1399, 281, 6889, 490, 264, 2316, 294, 300, 1389, 300, 456, 311, 733, 295, 411, 341, 472, 281, 472, 38135, 1296, 264, 5658, 293, 264, 10833, 3256, 11, 293, 550, 309, 311, 544, 1850, 281, 536, 341, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1548308775975154, "compression_ratio": 1.7984790874524714, "no_speech_prob": 0.004195505287498236}, {"id": 370, "seek": 356988, "start": 3569.88, "end": 3584.88, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 51114], "temperature": 0.0, "avg_logprob": -0.32675771360044126, "compression_ratio": 1.1125, "no_speech_prob": 0.0703854188323021}, {"id": 371, "seek": 356988, "start": 3584.88, "end": 3589.88, "text": " I can ask my earlier question again, I guess if nobody else is not a question.", "tokens": [51114, 286, 393, 1029, 452, 3071, 1168, 797, 11, 286, 2041, 498, 5079, 1646, 307, 406, 257, 1168, 13, 51364], "temperature": 0.0, "avg_logprob": -0.32675771360044126, "compression_ratio": 1.1125, "no_speech_prob": 0.0703854188323021}, {"id": 372, "seek": 358988, "start": 3590.88, "end": 3607.88, "text": " So I guess, if you're using a diffusion model without clip. Right. So I guess what's being trained is the classifiers for the labels that am I understanding that correctly.", "tokens": [50414, 407, 286, 2041, 11, 498, 291, 434, 1228, 257, 25242, 2316, 1553, 7353, 13, 1779, 13, 407, 286, 2041, 437, 311, 885, 8895, 307, 264, 1508, 23463, 337, 264, 16949, 300, 669, 286, 3701, 300, 8944, 13, 51264], "temperature": 0.0, "avg_logprob": -0.22495921065167682, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.4502754509449005}, {"id": 373, "seek": 360788, "start": 3608.88, "end": 3610.88, "text": " For the denoising process.", "tokens": [50414, 1171, 264, 1441, 78, 3436, 1399, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1910764773686727, "compression_ratio": 1.364963503649635, "no_speech_prob": 0.021907413378357887}, {"id": 374, "seek": 360788, "start": 3610.88, "end": 3623.88, "text": " Yeah, I guess I'm trying to understand if without clip. How does it know what to denoise to without like some representation of the text that you're feeding it.", "tokens": [50514, 865, 11, 286, 2041, 286, 478, 1382, 281, 1223, 498, 1553, 7353, 13, 1012, 775, 309, 458, 437, 281, 1441, 38800, 281, 1553, 411, 512, 10290, 295, 264, 2487, 300, 291, 434, 12919, 309, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1910764773686727, "compression_ratio": 1.364963503649635, "no_speech_prob": 0.021907413378357887}, {"id": 375, "seek": 362388, "start": 3623.88, "end": 3626.88, "text": " Yeah, yeah, so.", "tokens": [50364, 865, 11, 1338, 11, 370, 13, 50514], "temperature": 0.0, "avg_logprob": -0.12660914308884563, "compression_ratio": 1.5027932960893855, "no_speech_prob": 0.007228558883070946}, {"id": 376, "seek": 362388, "start": 3626.88, "end": 3642.88, "text": " Well, yeah, if you train a model or denoising model without text labels, then it doesn't know where to go and the only way you can generate a sample for a given text distribution it would would be through like clip guidance or something, but we do have.", "tokens": [50514, 1042, 11, 1338, 11, 498, 291, 3847, 257, 2316, 420, 1441, 78, 3436, 2316, 1553, 2487, 16949, 11, 550, 309, 1177, 380, 458, 689, 281, 352, 293, 264, 787, 636, 291, 393, 8460, 257, 6889, 337, 257, 2212, 2487, 7316, 309, 576, 576, 312, 807, 411, 7353, 10056, 420, 746, 11, 457, 321, 360, 362, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12660914308884563, "compression_ratio": 1.5027932960893855, "no_speech_prob": 0.007228558883070946}, {"id": 377, "seek": 364288, "start": 3642.88, "end": 3656.88, "text": " We train these models to be text conditional diffusion model. And in the classifier free guidance case, you train it with or without the labels. So maybe I can go back to one of our slides here.", "tokens": [50364, 492, 3847, 613, 5245, 281, 312, 2487, 27708, 25242, 2316, 13, 400, 294, 264, 1508, 9902, 1737, 10056, 1389, 11, 291, 3847, 309, 365, 420, 1553, 264, 16949, 13, 407, 1310, 286, 393, 352, 646, 281, 472, 295, 527, 9788, 510, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1846066630163858, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.03306040167808533}, {"id": 378, "seek": 364288, "start": 3656.88, "end": 3668.88, "text": " The way the model, the reverse process model sees the text is through this kind of conditioning on the, the representations output by a transformer on the text.", "tokens": [51064, 440, 636, 264, 2316, 11, 264, 9943, 1399, 2316, 8194, 264, 2487, 307, 807, 341, 733, 295, 21901, 322, 264, 11, 264, 33358, 5598, 538, 257, 31782, 322, 264, 2487, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1846066630163858, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.03306040167808533}, {"id": 379, "seek": 364288, "start": 3668.88, "end": 3670.88, "text": " Okay, got it.", "tokens": [51664, 1033, 11, 658, 309, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1846066630163858, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.03306040167808533}, {"id": 380, "seek": 367088, "start": 3670.88, "end": 3674.88, "text": " So this text conditioning here is without clip.", "tokens": [50364, 407, 341, 2487, 21901, 510, 307, 1553, 7353, 13, 50564], "temperature": 0.0, "avg_logprob": -0.18348596003148462, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.0011691722320392728}, {"id": 381, "seek": 367088, "start": 3674.88, "end": 3678.88, "text": " Yes, so.", "tokens": [50564, 1079, 11, 370, 13, 50764], "temperature": 0.0, "avg_logprob": -0.18348596003148462, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.0011691722320392728}, {"id": 382, "seek": 367088, "start": 3678.88, "end": 3694.88, "text": " Can I point a glossed over in guidance was you could use guidance on top of unconditional models or conditional models. So you could have a reverse diffusion model that isn't conditioned on any labels, then it wouldn't have any way of actually like producing an image given a class.", "tokens": [50764, 1664, 286, 935, 257, 19574, 292, 670, 294, 10056, 390, 291, 727, 764, 10056, 322, 1192, 295, 47916, 5245, 420, 27708, 5245, 13, 407, 291, 727, 362, 257, 9943, 25242, 2316, 300, 1943, 380, 35833, 322, 604, 16949, 11, 550, 309, 2759, 380, 362, 604, 636, 295, 767, 411, 10501, 364, 3256, 2212, 257, 1508, 13, 51564], "temperature": 0.0, "avg_logprob": -0.18348596003148462, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.0011691722320392728}, {"id": 383, "seek": 369488, "start": 3694.88, "end": 3702.88, "text": " But then you could use guidance on top to get it to produce an image giving a class, but you could also use guidance on top of conditional models themselves.", "tokens": [50364, 583, 550, 291, 727, 764, 10056, 322, 1192, 281, 483, 309, 281, 5258, 364, 3256, 2902, 257, 1508, 11, 457, 291, 727, 611, 764, 10056, 322, 1192, 295, 27708, 5245, 2969, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12947410490454697, "compression_ratio": 1.7671957671957672, "no_speech_prob": 0.009551189839839935}, {"id": 384, "seek": 369488, "start": 3702.88, "end": 3713.88, "text": " So you could have your original model be able to produce an image text, like we did here, but also use guidance on top to make it even better at doing this.", "tokens": [50764, 407, 291, 727, 362, 428, 3380, 2316, 312, 1075, 281, 5258, 364, 3256, 2487, 11, 411, 321, 630, 510, 11, 457, 611, 764, 10056, 322, 1192, 281, 652, 309, 754, 1101, 412, 884, 341, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12947410490454697, "compression_ratio": 1.7671957671957672, "no_speech_prob": 0.009551189839839935}, {"id": 385, "seek": 369488, "start": 3713.88, "end": 3715.88, "text": " Got it. Okay, yeah.", "tokens": [51314, 5803, 309, 13, 1033, 11, 1338, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12947410490454697, "compression_ratio": 1.7671957671957672, "no_speech_prob": 0.009551189839839935}, {"id": 386, "seek": 371588, "start": 3715.88, "end": 3719.88, "text": " This one.", "tokens": [50364, 639, 472, 13, 50564], "temperature": 0.0, "avg_logprob": -0.3368331469022311, "compression_ratio": 1.0285714285714285, "no_speech_prob": 0.01143661793321371}, {"id": 387, "seek": 371588, "start": 3719.88, "end": 3729.88, "text": " Okay, thank you.", "tokens": [50564, 1033, 11, 1309, 291, 13, 51064], "temperature": 0.0, "avg_logprob": -0.3368331469022311, "compression_ratio": 1.0285714285714285, "no_speech_prob": 0.01143661793321371}, {"id": 388, "seek": 371588, "start": 3729.88, "end": 3739.88, "text": " Okay, excellent. If are there more questions.", "tokens": [51064, 1033, 11, 7103, 13, 759, 366, 456, 544, 1651, 13, 51564], "temperature": 0.0, "avg_logprob": -0.3368331469022311, "compression_ratio": 1.0285714285714285, "no_speech_prob": 0.01143661793321371}, {"id": 389, "seek": 373988, "start": 3739.88, "end": 3744.88, "text": " Well, I think that we can wrap up the session.", "tokens": [50364, 1042, 11, 286, 519, 300, 321, 393, 7019, 493, 264, 5481, 13, 50614], "temperature": 0.0, "avg_logprob": -0.16852270413751472, "compression_ratio": 1.535294117647059, "no_speech_prob": 0.03776441887021065}, {"id": 390, "seek": 373988, "start": 3744.88, "end": 3747.88, "text": " Again want to thank you a lot.", "tokens": [50614, 3764, 528, 281, 1309, 291, 257, 688, 13, 50764], "temperature": 0.0, "avg_logprob": -0.16852270413751472, "compression_ratio": 1.535294117647059, "no_speech_prob": 0.03776441887021065}, {"id": 391, "seek": 373988, "start": 3747.88, "end": 3752.88, "text": " Profile and it was, it was great. Thank you so much.", "tokens": [50764, 6039, 794, 293, 309, 390, 11, 309, 390, 869, 13, 1044, 291, 370, 709, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16852270413751472, "compression_ratio": 1.535294117647059, "no_speech_prob": 0.03776441887021065}, {"id": 392, "seek": 373988, "start": 3752.88, "end": 3761.88, "text": " Thank you. And thank you for having me and feel free to just like email me any questions later or DM me on Twitter with questions.", "tokens": [51014, 1044, 291, 13, 400, 1309, 291, 337, 1419, 385, 293, 841, 1737, 281, 445, 411, 3796, 385, 604, 1651, 1780, 420, 15322, 385, 322, 5794, 365, 1651, 13, 51464], "temperature": 0.0, "avg_logprob": -0.16852270413751472, "compression_ratio": 1.535294117647059, "no_speech_prob": 0.03776441887021065}, {"id": 393, "seek": 376188, "start": 3761.88, "end": 3776.88, "text": " I think there's a lot of cool stuff out happening in this so like, I would strongly recommend doing some of the like reading some of the blogs are reading just like things that you can find in other collab notebooks as well.", "tokens": [50364, 286, 519, 456, 311, 257, 688, 295, 1627, 1507, 484, 2737, 294, 341, 370, 411, 11, 286, 576, 10613, 2748, 884, 512, 295, 264, 411, 3760, 512, 295, 264, 31038, 366, 3760, 445, 411, 721, 300, 291, 393, 915, 294, 661, 44228, 43782, 382, 731, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13611650466918945, "compression_ratio": 1.5135135135135136, "no_speech_prob": 0.6024408340454102}], "language": "en"}