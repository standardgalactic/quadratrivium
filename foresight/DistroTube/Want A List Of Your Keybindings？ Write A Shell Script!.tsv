start	end	text
0	5240	One of my favorite kinds of videos to make is where I solve a real-world problem
5240	10000	through the use of shell scripting, because a lot of Linux users, especially
10000	13680	those of you that are new to Linux, shell scripting seems like it's something
13680	18680	that's really hard, it's complicated, you know, you got to learn a ton of stuff to
18680	22280	get this stuff to work, but really once you start playing around a little bit with
22280	27120	the terminal and the command line, you can quickly figure out a lot of the basic
27120	31000	command line utilities that are needed to create these shell scripts, and you can
31000	34800	really start solving a lot of problems through the use of shell scripting. So
34800	38920	what is the problem that I'm going to solve today? Well, it involves your key
38920	43200	bindings in your tiling window managers. A lot of people want an easy way to bring
43200	47200	up a list of all their key bindings for their tiling window manager, and the
47200	51000	reason people ask about this all the time is because there's one tiling
51000	55040	window manager that really gets this right, the awesome tiling window manager.
55280	59600	The awesome window manager, you hold the super key, and a window pops up and it
59600	64800	lists all your key bindings for the awesome window manager. And now everybody
64800	69520	that runs all these other tiling window managers want that same feature in their
69520	73120	window manager, but of course these other window managers don't have that feature.
73120	76760	Well, you know what? We can kind of create something with a simple shell script.
76760	81440	So let me switch over to my desktop, and today I'm running the Xmonad window
81440	86000	manager, and I've already pulled up my Xmonad config here inside Doom Emacs,
86000	90440	because what I want to do is I want to be able to grab all of the key bindings
90440	95040	and the commands they run from my Xmonad config. So what I'm going to do is I'm
95040	99120	actually just going to page down here. Actually, I went a little too far.
100520	105400	This is my key bindings. It's in this statement that says my keys equals, and
105400	109720	then I've got a very long list of key bindings here in Xmonad. What I would
109720	113840	like to do is find some way to pull all of these key bindings out, you know,
113840	118480	just basically everything that was in that my keys block. I don't need the rest
118480	122080	of the config, obviously, printed out, because we just want a window that pops
122080	125640	up that shows us the key bindings. So what's the best way to do this? I don't
125640	129960	know the best way. I'm not a professional programmer. You know, I just do this as a
129960	136920	hobby, but I know that CID has the ability to give you a number of lines from,
136960	140640	well, you give it a starting statement and an ending statement, and it pulls out
140640	143840	all the lines from each of those statements. So what I'm going to do is I'm
143840	147680	just going to create some special comments here. Now, comments in Haskell
147680	151520	begin with dashes, two dashes. So I'm going to do dash dash space. And I'm just
151520	156680	going to do start underscore keys, all caps. And then I'm going to escape. I'm
156680	161520	going to page down to the end of my key bindings here. And let's go back up.
162720	166160	That was the end of the key bindings. And then I'm going to just go ahead and
166160	171040	create one more comment here. I'm going to do dash dash space end underscore
171120	178440	keys and escape. So let me go ahead and save this to my xmonad.hs config file.
178440	183040	So I went ahead and did colon w to write and I'm going to do a key binding I
183040	188200	have for org babble tangle here inside doom emacs. And then now that I've saved
188200	191760	that, what I'm going to do is I'm going to open a terminal. Let's go ahead and
191760	195880	zoom way in here in the terminal as well. So you guys can see this. What I'm
195880	200280	going to do is I'm going to run the command said dash in. And then inside
200280	205080	single quotes, I'm going to do slash start underscore keys because that's the
205160	209440	the starting comment that we wanted. So I want to pull all lines starting with
209440	216240	start underscore keys and then slash comma slash and then in underscore keys
216360	220760	and then the ending slash and then the command I want to run on this. I want to
220760	225240	run the print command P. And then we need to give it the path to my xmonad
225280	230280	config. So that would be in my home directory slash dot xmonad because it's
230280	236360	a hidden directory slash and then xmonad.hs. And that prints out. Let me
236360	241080	make this full screen that prints out every line between a start underscore
241080	245920	keys and in underscore keys. Now, of course, many of these lines don't we
245920	249240	don't need necessarily because some of these are just comments. Really, some of
249240	252600	them are useless comments. We could get rid of some of that. We could also get
252600	257400	rid of some of the extra notation and syntax and things. We could clean this
257440	260120	up a little bit. And that's what I'm going to do. So what I'm going to do is
260120	263440	I'm going to up arrow and I'm going to run the same said command, you know, to
263440	267160	get all of these lines from start keys to end keys. And then I'm going to pipe
267160	272120	it into grip because grip will allow us to do some interesting stuff here. For
272120	276440	example, if I wanted to, I only want to get the lines that actually have the
276440	280040	actual key bindings and the actual lines that have key bindings looks like all
280040	285840	of them start with comma space, opening parentheses, and then a double quote. So
285840	290840	why don't I just grip that? So we do grip and then inside single quotes, comma
290840	296720	space, opening parentheses, double quote. And now when I run that it's a lot
296720	299960	cleaner, right? Because all of those comments, which were lines that started
299960	304720	with dash dash or no longer output it here, actually looking at it. That's not
304720	308680	entirely true. We do have some commented lines that were returned because some of
308680	313480	the commented lines that started with dash dash also had the string comma
313480	317960	space, opening parentheses, double quotes, because these were key bindings that
317960	322000	I've disabled by commenting them out. I don't want those returned. If I'm not
322000	325240	currently using the key binding, you know, it's a commented key binding. I don't
325240	330080	want that to be listed either. So I'm going to up arrow and we did grip. Let's
330080	334080	go ahead and grip one more time. I will pipe all of this into grip one more
334080	338320	time. And this time I'm going to do a inverse grip. So I'm going to do dash V
338320	343040	meaning return all the lines that set the ones that have this string. So I'm
343040	348000	going to do inside single quotes again. I'm going to do dash dash space and then
348000	353000	comma space, opening parentheses, single quotes. So these lines here that started
353000	357560	with that string, I want to get rid of those. So return all the lines that don't
357560	362840	have this pattern. That's what the dash V flag does for us. And now that did not
362880	366880	quite work. And I actually got an error message because grip does not like the
366880	371880	dash dash pattern. We need to escape that. So I need to do a backslash dash
371920	377280	backslash dash that actually grip will understand that as being dash dash in
377280	381600	the document. Now when I run that, we get exactly what we wanted. It looks like I
381600	386080	still have one more commented line that didn't get filtered out is because I
386080	390120	didn't keep the same pattern instead of dash dash space comma space. That
390120	394600	particular line is dash dash comma without a space. I could actually just
394600	399720	fix that in the config since that's really my fault for not keeping the same
399720	403480	pattern for all of my commented lines. I'm just going to fix that right here in
403480	411840	the config. And now when I run the grip command again. Now that commented line
412200	416800	is actually no longer returned. So I'm just going to scroll through here. Yeah,
416840	421280	it doesn't look like we have any commented lines now. So already this is a
421280	425800	pretty clean layout. It gives me the key binding and the command it runs. And then
425800	429480	at the end of the line, I did have some comments for those of you that are using
429480	434120	my config to more specifically explain exactly what the commands are in case
434120	438680	you don't understand, you know, what the actual commands in X mode and do. For
438680	443680	example, if you didn't know that the spawn X mode and restart command restarts
443680	447840	X monad, I went ahead and commented it out specifically, you know, so explicitly
447840	452120	for you guys. Now one thing that is a problem I noticed is the very first
452120	456680	key binding that is returned here is actually the second key binding in my
456840	461440	X monad config. Let me make the X monad config full screen. You see, because
461600	465960	that's the one key binding that doesn't start with comma space of opening
465960	470440	parentheses. It actually starts with opening bracket space opening parentheses.
470600	475040	So I need to take that into account here. So what I'm going to do, I'm going to
475040	478400	up arrow and let's go ahead and add a rule for that. What I'm going to do is
478400	482320	I'm going to go back here to this first grip here. I'm going to add the dash E
482320	487080	flag because we're going to do multiple grips here. So I'm going to do dash E
487080	491760	again. And then inside single quotes, I want to grip for the opening bracket. I
491760	498080	have to escape that. So do a backslash bracket space parentheses. And then I
498080	502480	think that should work. Now, if I run that and let's scroll back up and see if
502480	506800	we actually get, yeah, now we actually get the very first key binding as well.
506800	511000	So now we're actually seeing every single key binding. Now I've still got some
511000	515320	work to do on cleaning this up, but this single line at the command line is going
515320	518320	to start getting very long. So what I'm going to do is I'm actually just going to
518320	522680	do a copy because let's go ahead and put this in a real script. So I'm going to
522680	527280	go ahead and create a new file here inside a doom Emacs. So I'm going to do a
527280	531560	space period because inside my .xmonad directory, which we're currently in
531560	535880	because we're looking at xmonad.hs, I'm going to go ahead and create a shell
535880	542040	script. I'm going to name it xmonad underscore keys .sh. And then it creates
542040	547360	this new bash script here because by default, I've got my Emacs setup to
547360	551640	where anytime I create a shell script, it gives me the user bin ENV bash
551640	556200	shebang. So it's going to be a bash script. Let me zoom in. And what I'm going to do
556240	560360	is I'm just going to paste what we had had in the terminal before. And let's go
560360	564280	ahead and clean this up so it looks a little better. So let's do some line
564280	568560	breaks. So in shell scripting, or even at the command line running this, you
568560	572080	could actually create some line breaks with the backslash character. So that's
572080	577360	what I'm going to do is I'm just going to go ahead and put a few backslashes just
577360	583320	to make this a little more readable. I'm going to go ahead and do colon W to write
583360	589120	that. And I'm going to open up a new terminal here and I'm going to cd into .xmonad,
589120	593800	that directory. If I did a ls, you see xmonad underscore keys. So what we need
593800	598760	to do is run the command chmod plus x because we want to make this script
598760	603040	executable because it will not run if it's not executable. And now that I've
603040	607400	done that, you know, we could actually run this if we wanted to. And you see how
607400	611440	that works. Let me go ahead and zoom in on this terminal because this will be the
611480	616440	terminal we use from here on out. Let me go back to the other terminal here. I'll
616440	621080	just close that out. Now we'll just play around in this shell script instead of
621080	624600	doing this at the command line. It'll be easier to read this way. Now one thing I
624600	629480	didn't like about the output from this command is the fact that every line has
629480	634680	a whole bunch of leading spaces. So I want to get rid of that. So and the reason
634680	638440	it has leading spaces is because the lines it's actually pulling out of my
638440	642120	config have leading spaces because they have to. You know, I can't have these
642120	645760	lines starting at the beginning of the line because Haskell's really picky
645760	649640	about spacing. So I actually need the spaces in the config file, but I want to
649640	653200	get rid of the spaces when I actually have this printed out in the terminal.
653200	657200	And we can do this with a regular expression here. What I want to do, I
657200	661600	probably want to do this with sed. Let me get back into insert mode and I'm going
661600	666960	to pipe all of this into sed this time. And we'll do sed-y because we may do
666960	670960	multiple sed statements. And then we're going to do single quotes S because we're
670960	674240	going to do a substitution. What do I want to substitute? I want to substitute
674240	678000	the carrot symbol which signifies the beginning of the line and then inside
678000	683400	brackets I want to do a space or tab and then the asterisk symbol. What this
683400	687040	signifies is find the beginning of the line. If everything at the beginning of
687040	692680	the line is tabs or spaces, I want you to replace it with what? With nothing. And I
692680	696400	think that's really all I want to do there. So let me go ahead and write and
696400	701240	then get back to the terminal and let's go ahead and rerun our script and see if
701240	705080	that actually works. It did. It removed all of those leading spaces. To clean it
705080	709320	up a little further, I think I would want to get rid of the leading comma space on
709320	714160	each line as well. So let's get back to the script here. Let me get into insert
714160	717680	mode. I'm just going to do another dash-y. We're going to continue with sed
717680	722640	substitutions here and then we're going to do a substitution for the comma space
722640	728080	parentheses and then what we want to substitute that for is just parentheses
728080	732800	and then do the trailing slash at the end. And if I do colon w and then get
732800	738080	back to the terminal and run that, that did not work because I obviously made a
738080	744520	mistake here because I didn't add the backslash to signify a line break there.
744520	748880	So let me put that in its place and then go back to the terminal and rerun that
748880	753680	and now we get rid of the opening comma space that was at the beginning of each
753680	758040	line. Of course remember there is the one line that's not going to look right
758040	762000	because the very beginning line had a bracket and of course we could take that
762000	765880	into account as well if I get back into the script. Once again let's go ahead
765880	771360	and create a new line here and we'll do dash-e because we'll continue on with sed.
771520	775840	This time what are we going to substitute? We are going to substitute an opening bracket
775840	781200	space opening parentheses and we're going to substitute that with just opening
781200	786000	parentheses and then do the trailing slash emax. Annoyingly anytime you do
786000	790040	anything with brackets parentheses it likes to add the closing one which is
790040	793760	great sometimes but in this particular case it's actually getting in my way. I
793760	798360	can actually turn that off but I won't bother. And now when I run the script
798360	803040	let's see if it fixes the very first line and now the very first line looks
803040	806480	the same as the rest of the lines. Now one thing I don't like about this
806480	811880	gigantic list of key bindings is it's all one big block of text there's no real
811880	817480	breaks. One thing I would find interesting is if I could actually group the
817480	822000	key bindings which I've grouped them in my config file right? I've grouped them
822000	826800	by category for example all of the d-menu key bindings are in one section
826960	832160	and all of the emax key bindings are in one section etc. And I want to keep that
832160	836200	and I would like those comments for the types of key bindings to actually be
836200	840600	outputted as well. But remember we stripped out all the comments everything
840600	844160	that began with dash dash. But I think we could fix this if we just add a
844160	848440	specific string that we can you know do something with grip or said with later.
848440	852880	So once again I'll do all caps and I'll just create a tag essentially I'll do kb
852880	858080	for key binding underscore group. So these will be key binding groups here and
858080	862760	then the name of the group in this case these are X-monad key bindings and I
862760	867080	could go down here and do the same thing so once again I'll add kb underscore
867080	872400	group. What I probably should do is just get into visual mode here and actually
872400	876880	yank that and just copy it that way I can go down here and just paste it a
876880	881480	million times so that I've got each category here. I'm gonna write that I'm
881480	885400	not gonna go through and do it to every single group here I'll just do four of
885400	889280	them just to see if this actually works and then what I want to do is get back
889280	893600	into our script. What I want to do is I want to go back to where we were gripping
893600	897920	with the dash E flag I want to create a new line let's do dash E one more time
897920	903440	this time I want to grip this particular string kb underscore group and
903440	907320	let's write that and let's go to the terminal run the script and now let's
907360	911880	go back to the top of the document and see if that worked for us and it did not
911880	918360	so obviously we made a mistake there obviously I needed to add a pipe and then
918360	922440	of course let's make sure we get the line break there with the backslash let
922440	926360	me write that again so that was just a dumb mistake on my part let's rerun the
926360	932760	script and now we get an error the dash E command is not found so now we had the
932760	937040	pipe on this line that doesn't need to be there so we only need to pipe when we're
937040	941240	actually piping into grip or said we don't need a pipe symbol when we're
941240	947480	just continuing on with dash E so now let's run the script the script actually
947480	951480	works this time let's see if we actually have the group headings the lines with
951480	956440	the group names no we do not so we keep making mistakes but that's fine I leave
956440	960000	all the mistakes in the videos because that's part of learning is saying
960000	964640	somebody screw up and you guys hopefully don't do this when you're doing your
964640	968080	scripting but honestly when you're doing one of these scripts on the fly
968080	973080	there's a lot of trial and error with them and looking at this I really think
973080	976560	this should have worked I'm not seeing the error the others you know when they
976560	980000	didn't work I obvious I immediately spotted the error but this looks like
980000	984080	it should work so what I'm thinking yeah I know what it is I'm an idiot I
984080	989840	changed my config file I didn't write it and then I need to run a org babble
989840	995520	tangle to have that output to Xmonad.hs and I'm betting now the script
995520	1001360	actually works if I go back here and run the script and let me scroll back up
1001360	1007920	and now yeah we actually get the group name Xmonad run prompt other D menu
1007920	1012840	prompts of course we also get dash dash KB group so now what we need to do is get
1012840	1018520	into the script and what we need to do is get rid of dash dash space KB group
1018520	1022720	on those lines I think how I want to play that is I'm just gonna go ahead and
1022720	1027560	do this with SID so I'm gonna add the backslash for line break just continue
1027560	1032080	on dash E here and then inside single quotes we'll do a substitution again
1032080	1036800	what am I substituting I'm gonna substitute dash dash space KB underscore
1036800	1042200	group space because I want to get rid of the space after KB underscore group as
1042200	1045840	well and then slash and then what do I want to replace this with I actually
1045880	1051000	want to replace it could I replace it with a new line slash let's see that if
1051000	1055200	that works I'm gonna write that let's go ahead and get back to the terminal and
1055200	1060360	run that and see how that looks scroll back up and that looks really really
1060360	1066320	nice right because I added a line break before the group name and one thing I
1066320	1070440	don't like is I don't like that I have the comma separating the key binding from
1070440	1074160	the command it runs I'd rather that not be a comma I want it something more
1074760	1078000	something that stands out a little bit more visually I think I'd rather change
1078000	1082360	that maybe to a colon so let me get back into the script and what I'm gonna do
1082360	1087120	is I'm just gonna go ahead and add another said substitution so let's go
1087120	1092000	ahead and substitute a double quote comma space because that was the pattern
1092000	1097640	and I would rather that be a double quote space colon space and then I'm gonna
1097640	1102600	do the trailing slash and then the trailing single quote and let's see if
1102640	1107600	that actually works for so let me rerun the script and yeah I think that is a
1107600	1112200	little bit more easier to read I think that visually that stands out a little
1112200	1115520	more than having that comma right behind the double quotes now we have space
1115520	1120360	colon space and if I wanted this to line up even better what I could do is I
1120360	1126560	can actually change the space I could do something like a change the space to a
1126800	1133000	tab and let's see how that looks rerun the script and yeah and now that's
1133000	1136760	even better as far as visually separating the key binding from the
1136760	1140360	commands now the next thing I want to do is I don't want this information to
1140360	1145320	have to always be output in a terminal I would rather this output in a graphical
1145320	1151000	window a dialogue box and on Linux the most common dialogue box program is a
1151000	1155040	program called yet which stands for yet another dialogue and what I'm gonna do
1155040	1159640	is we're just gonna pipe all of this information and let me go ahead and add
1159640	1162960	the pipe symbol and I'll go ahead and create a line break as well I'm gonna
1162960	1169520	pipe this into yet dash dash text dash info and that is the type of box we're
1169520	1174240	creating with the yet dialogue box program is it's a text info box because
1174240	1178760	there's a whole bunch of windows you can create with yet you can create message
1178760	1183720	windows and and things like that so I'm gonna go ahead and do a colon W to write
1183760	1188160	that and then go back to the terminal and now run the script and it opens this
1188160	1192440	yet dialogue box it opens it full screen because we were in full screen mode but
1192440	1196960	if I was in tiling mode it would just be a standard tiling window now I don't
1196960	1201360	want that to actually be tiling I don't want it to be full screen either what I
1201360	1207000	would like is I would like to have that open at a specific size and centered on
1207000	1211640	the screen so what I'm gonna do is I'm gonna get back into insert mode here and
1211640	1214520	another thing I want to do is I want to change the colors because I didn't like
1214520	1220800	the GTK color scheme of those windows I'd rather it respect kind of like my emacs
1220800	1225800	color scheme or my terminal color scheme and in this program yet you can
1225800	1230000	actually specify a background color and a foreground color so I could do dash dash
1230000	1236000	back equals and then give it a background color I'm gonna do 282c34 that's the
1236000	1239960	background color that I use in emacs and in my terminal color schemes and then
1239960	1244520	I'm gonna do dash dash four equals for a foreground color and for that I'm gonna
1244520	1253440	do 46d9ff and then what I want to do is do dash dash geometry equals and I
1253440	1259480	want this to be 1200 pixels by 800 pixels in size and then let me do colon
1259480	1265000	W to write that and then let me go ahead and run that and see how that looks it's
1265000	1269640	still full screen if I was in tiling mode it would still be tiling the
1269640	1274400	problem here is you know setting the geometry works fine if we were in a
1274400	1278520	floating window manager but a tiling window manager always forces things to
1278520	1282840	tile so this is not a problem with the script necessarily it's a problem with
1282840	1288280	my Xmonad config I need to set a window rule that all YAD windows are floating
1288280	1292640	so what I need to do is get into my Xmonad config and then I'm gonna page
1292640	1297360	up to where I have some window rules settings and you see things like class
1297440	1302360	name equals and then the name of the the windows and then do float these are
1302360	1306480	all the windows that I want to always be floating such as gimp for example class
1306480	1311360	name equals gimp do float so I'm just gonna go in here and I'm gonna YY to
1311360	1316160	copy and P to paste and then I'm gonna create class name equals and I'm gonna
1316160	1320800	do YAD I'm assuming that the window name is actually YAD and then I'm gonna do
1320800	1326880	do float but really what I want to do is do center float because Xmonad has the
1326880	1331520	ability to force a floated window to also be in the center of the screen now
1331520	1338240	if I do colon W to write that and then let me write that to Xmonad.hs and I'm
1338240	1343880	gonna restart Xmonad and I get an error message and the good thing about Xmonad
1343880	1348120	is it's really good about error messages as far as it tells you exactly what the
1348120	1353160	problem is the problem is do center float I didn't import a library that has a
1353160	1356600	do center float module it actually tells me that right here it tells me I
1356600	1362880	should have imported Xmonad.hs.manageHelpers do center float so let me
1362880	1366800	get back into my config I'm gonna go to the top of the document here because
1366800	1372880	that's where my imports are and I need to import Xmonad.hs.manageHelpers which
1372880	1377180	I've already got but I specified only two modules is full screen and do full
1377180	1382600	float I need to go ahead and add do center float let me go ahead and write
1382600	1389920	that Xmonad restarted without any errors so now when I run the script it
1389920	1393440	should open in the center of the screen so let me just run that from the
1393440	1398040	terminal here and I'm in tiling mode and let's see if it actually yes it forces
1398040	1402800	the window centered in the middle of the screen with 1200 by 800 pixels for the
1402800	1407560	size and it respected my background color and the foreground color I chose so
1407560	1411640	that is how I would do that the last thing I probably would do for purposes
1411640	1415360	of this video I don't want to run this from a command line I don't want to run
1415360	1419360	this from a run launcher you know I want a key binding to where I hit a key
1419360	1423160	binding and this window with all of my key bindings pops up so what I need to
1423160	1427920	do is I need to put that of course in my Xmonad config so let me go down to where
1427920	1431920	all of my key bindings are and I'm just gonna add a new one let me find the very
1431920	1436320	beginning of my key binding list because it needs to go in the key binding
1436320	1440320	group for the Xmonad key binding so I'm just going to go ahead and create a new
1440320	1444640	one so I'm gonna do comma and then inside parentheses here inside double quotes
1444640	1451400	I'm gonna do mod shift slash now my shift slash is really mod question mark
1451400	1455440	because the question mark is typically the key you hit in many programs to get
1455440	1459640	help so it makes sense for this key binding to actually be mod shift slash
1459640	1463840	or mod question mark and I need to do a comma behind that and then the command
1463840	1468080	we're gonna run the command we're gonna run of course needs to be spawn and then
1468080	1472600	what are we spawning we are gonna spawn the path to that script which is in my
1472600	1481280	home directory slash dot Xmonad slash Xmonad underscore keys dot sh and let me
1481280	1489880	escape and let me write that and now let me restart Xmonad and now let me do
1489880	1495880	mod question mark and now mod question mark brings up the window with our key
1495880	1500320	bindings how cool is that that's very nice and of course I could clean this
1500320	1505000	script up a lot more and make the you know this look a little bit better
1505000	1510080	because honestly I could format that a lot better but really this works I mean
1510080	1514880	if you had a problem figuring out what your Xmonad key bindings this works I
1514880	1519760	mean I can easily read this figure out what key binding does what and of course
1519760	1524960	just because I did this in Xmonad I mean you could write a script to grip and set
1525000	1530960	out all that information for Qtile or i3 or BSPWM or whatever window manager you
1530960	1534920	use now obviously that was a very quick and dirty script I didn't spend what 10
1534920	1539320	15 minutes and we just kind of going at where we're winging it right and I did
1539320	1543620	everything with said and grip which I purposefully was trying to do said and
1543620	1546960	grip I was trying to actually avoid using alt because I use typically use
1546960	1551280	alt a lot in my scripts and people complain man you using alt why didn't
1551280	1555360	you use said for that what in use grip for that well here you go and honestly
1555360	1560880	I'm not even sure shell scripting is the best way to accomplish this ideally
1560880	1564600	what you would want to do is if you actually knew Haskell because Xmonads
1564600	1568000	written in Haskell the config files written in Haskell it would be great if
1568000	1572360	I knew enough Haskell where I could actually get this information by adding
1572360	1577440	some Haskell code to my config but I am nowhere near a Haskell master it's a
1577440	1581680	lot easier just to quickly throw together this quick shell script now
1581680	1584760	before I go I need to think a few special people I need to think the
1584760	1588400	producers of this episode as he gave James Mitchell Paul West a commie Allen
1588400	1591640	Chuck Gurt David Dylan Gregory Hico Eryon Alexander peace arch and fedora
1591640	1595880	Polytech raver red Prophet Scott Steven and Willie these guys they're my
1595880	1599760	highest tiered patrons over on patreon without these guys this episode that you
1599760	1603080	just watched would not have been possible the shows also brought to you by
1603080	1606160	each and every one of these ladies and gentlemen as well all these names you're
1606160	1609640	seeing on the screen each and every one of these ladies and gentlemen help
1609640	1612920	support me over on patreon because I don't have any corporate sponsors I'm
1612920	1617400	sponsored by you guys the community if you like my work you want to help me out
1617400	1621440	please consider subscribing to distro tube over on patreon all right guys
1621440	1628040	peace and yes I'll push the script to my get lab
