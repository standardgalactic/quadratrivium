start	end	text
0	8960	VIM. VIM is more than a text editor. VIM really is a way of life. And the more I've used it,
8960	14720	the more I've become kind of proficient with VIM. The more difficult it is to use anything
14720	19240	other than VIM. I can't really use any other text editor other than VIM. In fact, I find
19240	24640	it difficult to use programs that are not even text editors because, you know, I'm going
24640	29920	to hit the VIM key bindings for different things. For example, if my email client doesn't
29920	36200	allow me to compose my email in VIM. Sometimes I find it difficult to do that because I'm
36200	42480	hitting the keyboard commands to change word or delete a line or copy and paste and none
42480	48360	of that works the way it does in VIM. So find it difficult to use email programs. I find
48360	53920	it difficult to use forms on websites. You know, if I'm sending a message to somebody
53920	60160	on a web page, find it difficult to use certain chat clients, IRC chat clients, because I'm
60160	65000	constantly wanting to do things the VIM way. I want to navigate with the VIM keys, you know,
65000	72040	HJKL. I want to, you know, delete with DD and you go to the top of the document with GG.
72040	77560	In fact, the other day I was playing a game on Steam and somebody in the Steam chat typed
77560	82200	GG for good game. And for some reason I was wondering why this guy was trying to go to
82320	88480	the top of the document in Steam. So VIM has really kind of penetrated my life in a pretty
88480	95560	big way. So those of you like me, you're using VIM. Maybe you recently discovered VIM or you've
95560	102520	been using VIM for years. If you're a VIM user, you really should take a look at a file manager
102520	108520	called VIFVM. It's become my preferred file manager. VIFVM uses all the VIM key bindings. It
108520	112960	even has modes just like VIM. I'm going to show you a little bit of what you can do with VIFVM
112960	120000	today. Also, if you're a VIM user, you really should enable VIM mode. There is a VI mode or a
120000	128640	VIM mode in both Bash and ZSH. So enable VIM mode in your shell. Now all of a sudden the standard VIM
128640	134160	commands you're used to work in your shell prompt. For example, in normal mode in the shell,
134160	138480	you'll be able to type zero on the keyboard and go to the beginning of the line or dollar symbol.
138480	143720	To go to the end of the line or DD to delete the line you just wrote. So all your standard VIM
143720	157320	key bindings work in the shell. So let's get started. And the first thing I want to discuss with
157320	166360	you guys is VIFVM. VIFVM is a file manager, a terminal based file manager. It uses all the
166360	173400	standard VIM key bindings. It has modes just like VIM such as visual mode. I can already hear some
173400	179000	of you folks asking why in the world would I use a terminal based file manager? Why wouldn't I just
179000	185440	use a graphical file manager like Nautilus or Dolphin? And then I hear some other folks going
185440	190240	why would I use a terminal based file manager when I can just do everything in the shell? You
190240	195920	know change directory and make files, delete files, make directories, delete directories. I don't
195960	201960	need a file manager, a graphical or terminal based file manager to do anything. No, well, that's
201960	207320	true. You can do everything in the shell. But having a file manager makes some tasks, some
207320	213040	complicated tasks much easier than doing it in the shell. Because really complicated tasks in
213040	218080	the shell are going to require you to use things like grepsid, all regular expressions. We're
218080	224000	having a file manager make some of these tasks a little easier. Why a terminal based file manager
224040	229160	rather than a graphical file manager? Well, graphical applications are going to be heavier than
229160	234320	terminal based applications, heavier on resources, graphical applications, of course, require you
234320	239120	to have X on the system, a terminal based application, you could open up in a TTY prompt,
239120	245520	you don't even have to have X or running, or even installed on the system. Graphical applications
245520	251440	also expect you to have a keyboard and mouse on hand. I mean, they expect you to input with the
251440	257560	mouse sometimes where terminal based applications are often the primary, sometimes the only way to
257560	264920	input stuff into them is with the keyboard. So terminal applications make sense in a lot of
264920	273920	situations. So this is my desktop. Let me open up my file manager of choice here. There is VIFM,
274560	282080	VIFM, the VI file manager. Sorry, guys. I'm in Herb's look today struggling with some of the
282080	288400	key bindings for Herb's look, but this is VIFM out of the box. Now, VIFM, as I told you, uses all
288400	294160	the standard VM key bindings right now in my home directory. Capital G goes to the bottom,
294160	299680	the very last file, you know, same as in VM, Capital G goes to the last line of the document,
299680	305840	GG goes to the first line of the document. We can give it a number, say 5G, to go to the fifth
305840	312480	line, you know, the fifth thing here in the file manager. It does include the dot-dot in that.
312480	318400	The dot-dot, of course, is an alias for the parent directory. Of course, you can copy something with
318400	325280	YY for Yank. You can delete something DD for delete, just like in VM. You can do bulk rename. Now,
325280	331600	this is a really neat thing that you can do in a terminal-based file manager like VIFM. You can
331600	335840	also do it in terminal-based file managers like Ranger and, I think, Midnight Commander, and I'm
335840	342720	sure others. Let me show you. So, I have a folder on here somewhere called Scrot for screenshots.
343360	351760	They enter into that, and the pictures are not going to look good because they're 5760 by 1080
351760	355680	screen resolution. So, the previews are really scrunched up. So, I'm just going to turn the
355680	361040	previews off. No reason to see them because it's not going to look right anyway. But, you see,
361040	367040	I have all of these screenshots, and they are named with a timestamp, the screen resolution,
367040	375360	5760 by 1080 underscore scrot dot ping. What if I wanted to rename all of these files? Well,
375360	379760	in a graphical file manager, it would be kind of tedious. You would have to probably do them one
379760	385120	at a time. Most graphical file managers, some of the graphical file managers are extensible,
385120	390640	but it's kind of hard to figure out how to do that in a graphical file manager. Things like
390640	397360	Nautilus, for example. But in something like VIFM, because you know it takes all the standard VIM
397360	405680	commands, you could go into visual mode right now, so shift V. And now, as I go down with J,
405760	411440	J is the down key, I am selecting every single file. I wanted to select maybe for a bulk rename.
411440	415760	I don't have to J a million times though. Again, capital G goes all the way to the
415760	421040	bottom of the document. So, now I've selected everything in this directory. How do we rename it?
421040	431120	Well, C for change, CW, change word. And now it opens up all of those file names in a VIM document.
431120	436960	Basically, we have a VIM document here with all those file names. And now, because I'm in VIM,
436960	442960	it makes it very easy to change these file names. So, if I wanted to do a bulk rename here,
444080	451840	one thing I could do is I could do visual mode, so control V. Control V in VIM gets you into a
451840	457520	block mode, a block visual mode. And capital G gets me to the bottom of the document here,
457520	462400	so all the way to the last line. So, it selected lines one through however many
462400	467520	file names were here. I think there were about 250 file names. And now, if I move over to the right
467520	473600	with the L key, the standard VIM navigation keys. And if I wanted to, I could select all of those
473600	480480	that block of text. And then a simple D for delete makes all of that timestamp information go away.
480480	487120	Now, that would be rather poor renaming since all 250 something files in this directory now
487120	493280	are going to be named the same thing 5760 by 1080 underscore scrot dot ping. So, let's undo that.
493280	498800	That doesn't make sense. But what I could do is let me move over. So, if I wanted to, I'm going to
499600	504720	keep the timestamp because the timestamp is unique. But I don't need the rest of this information.
504720	511120	I don't need 5760 by 1080 underscore scrot for sure. So, let's control V again to get into the
511120	516240	visual block mode. Going to capital G again to go all the way to the bottom of the document.
517280	524880	And this time, I'm going to go in this direction and highlight all of that D to delete. And now,
524880	530160	we've made those file names a little shorter. I got rid of the superfluous information that I
530160	534400	don't really care about. I don't care about the screen resolution. I didn't care to have scrot
534400	539680	in the name. I know it's a screenshot because the directory that I'm in is called scrot.
540480	546000	But we do need some kind of unique name for each screenshot here. So, I did leave the timestamp
547120	553360	if I wanted to. I could have, instead of doing visual mode, I could have just did a quick substitute.
553360	560240	So, I undo this. So, to do that same change instead of using visual mode, just doing
560960	568480	command using the substitute command nvm colon to get into command line mode here nvm. And then
569360	575200	percent sign s for substitute and then slash what do we want it to substitute? Well, I wanted
575280	583200	to substitute underscore 5760 by 1080 underscore scrot. I want that information to be substituted
583200	590000	with nothing. I just wanted to go away. So, normally, you would put some information here
590000	594880	and then another slash, but I'm just going to do two slashes with no information. I don't want to
594880	600480	replace it with anything. The last thing I want to do is type g at the end to make sure that it
600480	605760	changes this everywhere in the document. Hit enter and there you go. That's how you could do that with
605760	613840	substitute both equally as fast whether you use visual mode or substitute. So, that is a little
613840	620240	bit of the power of something like vifm because, you know, it's so vim like all the standard gem
620240	625760	stuff you're used to, such as modes, insert mode, normal mode and visual mode and all your commands,
625760	633280	delete commands and copy and paste and substitute, they just all work. Now, I could write and quit
633280	638880	right now because I'm happy with this and that gets me back into vifm here. If I wanted to go
638880	645200	back to my home directory right now, I'm in that scrot directory. I have a bookmark, a leader key h,
646240	651040	gets me back into my home directory gg, gets me back to the top of that directory and of course,
651040	657360	colon q, gets me out of vifm completely. So, that's vifm. If you're not using vifm and you're a vim
657360	663680	user, you really, really should check it out. It's fantastic. The best file manager are none.
665600	669840	Now, one other thing, if you're a vim user, you need to do, you need to have
670560	680160	vi mode or vim mode enabled and whatever shell you use. There are vi modes in bash and zsh. I have
680160	687760	both bash and zsh on my system, so I know that they exist on those shells and they work just as
687760	694480	expected. I think there's also a vi mode in fish. I think there's a vi mode in the seashell, probably a
694480	700240	vi mode in all the standard shields. It's kind of a common feature. Most people don't know about it.
700240	707600	I don't know why most people don't know about it, but so let me open up a terminal here and this is
708160	717440	the zshell. So, this is zsh. Let me zoom in and I am going to show my zshrc file here. Let's open it
717440	723920	up in vimg to get to the bottom of the document because on the last line, right here, bind key
723920	733760	dash v. So, bind key space dash v basically gets us into vim mode. That's all you need to do. Add
733760	742080	that line to your zshrc file and now you have vim mode in zshrc. What is vim mode? Well, by default,
742080	747760	when you open up your terminal, you are in insert mode, meaning I can actually type something. This
747760	756400	is a line of text, right? Now, if I hit escape right now and now try to type something. Yeah,
756400	762080	well, I typed i so I haven't gotten back into insert mode, but let me escape. Nothing really works.
762080	769200	Now, hjkl worked because that's the vim keys, l to move right, h to move left. I wanted to change
769200	778240	word. So, how about cw? This is a block of text. Escape to get back into normal mode. Of course,
778240	783200	I could delete a word. I could dw. Well, let me get to the beginning of the word though. So,
783200	788160	let me move over with the navigation keys, dw. Of course, I could undo with u. I could delete
788160	795120	the line with dd. I could p4 paste. I could undo and get all of that back to where I was originally.
795840	802480	I could zero to get to the beginning of the line. I could dollar sign to get to the end of the line.
802480	808720	So, that is vi mode and of course, i to get me back into insert mode so I can actually continue to type.
808880	819360	All right. So, that is vi mode here in zsh. What about vi mode and bash? Well, let me
820960	827120	get back over to bash. Why can I? Oh, that's because I created this in vi mode. It won't let me.
828240	832080	Let me get back into normal mode. I can't get rid of this line of text, but if I get back into
832080	838240	normal mode and dd. All right. And now back into insert mode, bash. It's kind of complicated
838240	842960	because I don't have anything visually in my prompt telling me when I'm in normal mode and
842960	850000	insert mode. All right. So, I'm going to switch over to bash here and now vm.bashrc. Let's check
850000	856160	out my bashrc and capital G to go to the end of the document here and vm and the very last line
856160	864960	set space dash o space vi. That enables vi mode and bash colon q to quit out of vm. So,
864960	871440	this is the same. So, if I, well, let me clear everything here. So, if I, this is a line of
871440	875600	text. So, by default, of course, when you're in the shell in the bash shell,
875600	882240	same thing, you're in insert mode. But if I hit escape, now, you know, I am using the vm navigation
882240	887760	keys hnl. Pretty much everything else on the keyboard is disabled other than I didn't get
887760	894240	into insert mode. So, again, oh, it gets me to the beginning of the line dollar symbol gets me to
894240	899680	the end of the line. All the other stuff works as expected. So, I could, you know, dd to delete the
899680	909040	line p to put move back over here and I could, you know, change word for new word. So, that is
909120	913600	all I wanted to share with you guys today is just I wanted to share with you a little bit of the
913600	921360	power of vm and how you can get more out of other applications such as your file manager and your
921360	930240	shell such as bash zsh fish by using vm and by enabling vm modes if they have such a mode available.
930560	939680	For me, and I know for many of you, vm has become kind of a way of life. Vm, it's so much more than
939680	945120	a text editor. It's not, it's not like emacs. Emacs is almost like an operating system. It does
945120	950960	so much stuff. I mean, you can play games in emacs. Vm, it doesn't take it to that level,
950960	956320	but certainly vm, again, it's kind of a way of life. And the more you get into vm,
956320	965040	the harder it is to do things that don't involve the vm key bindings. So, I'm going to keep
965040	971440	doing this with any program I can. I want to navigate with the vm keys. I want dd to delete
971440	978800	and p to paste. I want nothing but vm key bindings in all my programs. This show was made possible
978800	983040	by Ansem, Carlos, Chris, Douglas, Dylan, Leo, Rob, Robert and Tony. They are the producers of the
983040	988000	show. They're my highest tier patrons over on Patreon. Without them, this show would not be
988000	992880	possible. The show was also brought to you by all those fine ladies and gentlemen. You guys see
992880	997120	those names on the screen that help support my work over on Patreon. I want to thank each and
997120	1001600	every one of those guys. If you'd like to support my work, please consider doing so. You'll find
1001600	1012960	me at DistroTube over on Patreon. Alright guys, peace.
