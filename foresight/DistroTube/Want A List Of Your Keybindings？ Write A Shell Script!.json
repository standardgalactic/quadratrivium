{"text": " One of my favorite kinds of videos to make is where I solve a real-world problem through the use of shell scripting, because a lot of Linux users, especially those of you that are new to Linux, shell scripting seems like it's something that's really hard, it's complicated, you know, you got to learn a ton of stuff to get this stuff to work, but really once you start playing around a little bit with the terminal and the command line, you can quickly figure out a lot of the basic command line utilities that are needed to create these shell scripts, and you can really start solving a lot of problems through the use of shell scripting. So what is the problem that I'm going to solve today? Well, it involves your key bindings in your tiling window managers. A lot of people want an easy way to bring up a list of all their key bindings for their tiling window manager, and the reason people ask about this all the time is because there's one tiling window manager that really gets this right, the awesome tiling window manager. The awesome window manager, you hold the super key, and a window pops up and it lists all your key bindings for the awesome window manager. And now everybody that runs all these other tiling window managers want that same feature in their window manager, but of course these other window managers don't have that feature. Well, you know what? We can kind of create something with a simple shell script. So let me switch over to my desktop, and today I'm running the Xmonad window manager, and I've already pulled up my Xmonad config here inside Doom Emacs, because what I want to do is I want to be able to grab all of the key bindings and the commands they run from my Xmonad config. So what I'm going to do is I'm actually just going to page down here. Actually, I went a little too far. This is my key bindings. It's in this statement that says my keys equals, and then I've got a very long list of key bindings here in Xmonad. What I would like to do is find some way to pull all of these key bindings out, you know, just basically everything that was in that my keys block. I don't need the rest of the config, obviously, printed out, because we just want a window that pops up that shows us the key bindings. So what's the best way to do this? I don't know the best way. I'm not a professional programmer. You know, I just do this as a hobby, but I know that CID has the ability to give you a number of lines from, well, you give it a starting statement and an ending statement, and it pulls out all the lines from each of those statements. So what I'm going to do is I'm just going to create some special comments here. Now, comments in Haskell begin with dashes, two dashes. So I'm going to do dash dash space. And I'm just going to do start underscore keys, all caps. And then I'm going to escape. I'm going to page down to the end of my key bindings here. And let's go back up. That was the end of the key bindings. And then I'm going to just go ahead and create one more comment here. I'm going to do dash dash space end underscore keys and escape. So let me go ahead and save this to my xmonad.hs config file. So I went ahead and did colon w to write and I'm going to do a key binding I have for org babble tangle here inside doom emacs. And then now that I've saved that, what I'm going to do is I'm going to open a terminal. Let's go ahead and zoom way in here in the terminal as well. So you guys can see this. What I'm going to do is I'm going to run the command said dash in. And then inside single quotes, I'm going to do slash start underscore keys because that's the the starting comment that we wanted. So I want to pull all lines starting with start underscore keys and then slash comma slash and then in underscore keys and then the ending slash and then the command I want to run on this. I want to run the print command P. And then we need to give it the path to my xmonad config. So that would be in my home directory slash dot xmonad because it's a hidden directory slash and then xmonad.hs. And that prints out. Let me make this full screen that prints out every line between a start underscore keys and in underscore keys. Now, of course, many of these lines don't we don't need necessarily because some of these are just comments. Really, some of them are useless comments. We could get rid of some of that. We could also get rid of some of the extra notation and syntax and things. We could clean this up a little bit. And that's what I'm going to do. So what I'm going to do is I'm going to up arrow and I'm going to run the same said command, you know, to get all of these lines from start keys to end keys. And then I'm going to pipe it into grip because grip will allow us to do some interesting stuff here. For example, if I wanted to, I only want to get the lines that actually have the actual key bindings and the actual lines that have key bindings looks like all of them start with comma space, opening parentheses, and then a double quote. So why don't I just grip that? So we do grip and then inside single quotes, comma space, opening parentheses, double quote. And now when I run that it's a lot cleaner, right? Because all of those comments, which were lines that started with dash dash or no longer output it here, actually looking at it. That's not entirely true. We do have some commented lines that were returned because some of the commented lines that started with dash dash also had the string comma space, opening parentheses, double quotes, because these were key bindings that I've disabled by commenting them out. I don't want those returned. If I'm not currently using the key binding, you know, it's a commented key binding. I don't want that to be listed either. So I'm going to up arrow and we did grip. Let's go ahead and grip one more time. I will pipe all of this into grip one more time. And this time I'm going to do a inverse grip. So I'm going to do dash V meaning return all the lines that set the ones that have this string. So I'm going to do inside single quotes again. I'm going to do dash dash space and then comma space, opening parentheses, single quotes. So these lines here that started with that string, I want to get rid of those. So return all the lines that don't have this pattern. That's what the dash V flag does for us. And now that did not quite work. And I actually got an error message because grip does not like the dash dash pattern. We need to escape that. So I need to do a backslash dash backslash dash that actually grip will understand that as being dash dash in the document. Now when I run that, we get exactly what we wanted. It looks like I still have one more commented line that didn't get filtered out is because I didn't keep the same pattern instead of dash dash space comma space. That particular line is dash dash comma without a space. I could actually just fix that in the config since that's really my fault for not keeping the same pattern for all of my commented lines. I'm just going to fix that right here in the config. And now when I run the grip command again. Now that commented line is actually no longer returned. So I'm just going to scroll through here. Yeah, it doesn't look like we have any commented lines now. So already this is a pretty clean layout. It gives me the key binding and the command it runs. And then at the end of the line, I did have some comments for those of you that are using my config to more specifically explain exactly what the commands are in case you don't understand, you know, what the actual commands in X mode and do. For example, if you didn't know that the spawn X mode and restart command restarts X monad, I went ahead and commented it out specifically, you know, so explicitly for you guys. Now one thing that is a problem I noticed is the very first key binding that is returned here is actually the second key binding in my X monad config. Let me make the X monad config full screen. You see, because that's the one key binding that doesn't start with comma space of opening parentheses. It actually starts with opening bracket space opening parentheses. So I need to take that into account here. So what I'm going to do, I'm going to up arrow and let's go ahead and add a rule for that. What I'm going to do is I'm going to go back here to this first grip here. I'm going to add the dash E flag because we're going to do multiple grips here. So I'm going to do dash E again. And then inside single quotes, I want to grip for the opening bracket. I have to escape that. So do a backslash bracket space parentheses. And then I think that should work. Now, if I run that and let's scroll back up and see if we actually get, yeah, now we actually get the very first key binding as well. So now we're actually seeing every single key binding. Now I've still got some work to do on cleaning this up, but this single line at the command line is going to start getting very long. So what I'm going to do is I'm actually just going to do a copy because let's go ahead and put this in a real script. So I'm going to go ahead and create a new file here inside a doom Emacs. So I'm going to do a space period because inside my .xmonad directory, which we're currently in because we're looking at xmonad.hs, I'm going to go ahead and create a shell script. I'm going to name it xmonad underscore keys .sh. And then it creates this new bash script here because by default, I've got my Emacs setup to where anytime I create a shell script, it gives me the user bin ENV bash shebang. So it's going to be a bash script. Let me zoom in. And what I'm going to do is I'm just going to paste what we had had in the terminal before. And let's go ahead and clean this up so it looks a little better. So let's do some line breaks. So in shell scripting, or even at the command line running this, you could actually create some line breaks with the backslash character. So that's what I'm going to do is I'm just going to go ahead and put a few backslashes just to make this a little more readable. I'm going to go ahead and do colon W to write that. And I'm going to open up a new terminal here and I'm going to cd into .xmonad, that directory. If I did a ls, you see xmonad underscore keys. So what we need to do is run the command chmod plus x because we want to make this script executable because it will not run if it's not executable. And now that I've done that, you know, we could actually run this if we wanted to. And you see how that works. Let me go ahead and zoom in on this terminal because this will be the terminal we use from here on out. Let me go back to the other terminal here. I'll just close that out. Now we'll just play around in this shell script instead of doing this at the command line. It'll be easier to read this way. Now one thing I didn't like about the output from this command is the fact that every line has a whole bunch of leading spaces. So I want to get rid of that. So and the reason it has leading spaces is because the lines it's actually pulling out of my config have leading spaces because they have to. You know, I can't have these lines starting at the beginning of the line because Haskell's really picky about spacing. So I actually need the spaces in the config file, but I want to get rid of the spaces when I actually have this printed out in the terminal. And we can do this with a regular expression here. What I want to do, I probably want to do this with sed. Let me get back into insert mode and I'm going to pipe all of this into sed this time. And we'll do sed-y because we may do multiple sed statements. And then we're going to do single quotes S because we're going to do a substitution. What do I want to substitute? I want to substitute the carrot symbol which signifies the beginning of the line and then inside brackets I want to do a space or tab and then the asterisk symbol. What this signifies is find the beginning of the line. If everything at the beginning of the line is tabs or spaces, I want you to replace it with what? With nothing. And I think that's really all I want to do there. So let me go ahead and write and then get back to the terminal and let's go ahead and rerun our script and see if that actually works. It did. It removed all of those leading spaces. To clean it up a little further, I think I would want to get rid of the leading comma space on each line as well. So let's get back to the script here. Let me get into insert mode. I'm just going to do another dash-y. We're going to continue with sed substitutions here and then we're going to do a substitution for the comma space parentheses and then what we want to substitute that for is just parentheses and then do the trailing slash at the end. And if I do colon w and then get back to the terminal and run that, that did not work because I obviously made a mistake here because I didn't add the backslash to signify a line break there. So let me put that in its place and then go back to the terminal and rerun that and now we get rid of the opening comma space that was at the beginning of each line. Of course remember there is the one line that's not going to look right because the very beginning line had a bracket and of course we could take that into account as well if I get back into the script. Once again let's go ahead and create a new line here and we'll do dash-e because we'll continue on with sed. This time what are we going to substitute? We are going to substitute an opening bracket space opening parentheses and we're going to substitute that with just opening parentheses and then do the trailing slash emax. Annoyingly anytime you do anything with brackets parentheses it likes to add the closing one which is great sometimes but in this particular case it's actually getting in my way. I can actually turn that off but I won't bother. And now when I run the script let's see if it fixes the very first line and now the very first line looks the same as the rest of the lines. Now one thing I don't like about this gigantic list of key bindings is it's all one big block of text there's no real breaks. One thing I would find interesting is if I could actually group the key bindings which I've grouped them in my config file right? I've grouped them by category for example all of the d-menu key bindings are in one section and all of the emax key bindings are in one section etc. And I want to keep that and I would like those comments for the types of key bindings to actually be outputted as well. But remember we stripped out all the comments everything that began with dash dash. But I think we could fix this if we just add a specific string that we can you know do something with grip or said with later. So once again I'll do all caps and I'll just create a tag essentially I'll do kb for key binding underscore group. So these will be key binding groups here and then the name of the group in this case these are X-monad key bindings and I could go down here and do the same thing so once again I'll add kb underscore group. What I probably should do is just get into visual mode here and actually yank that and just copy it that way I can go down here and just paste it a million times so that I've got each category here. I'm gonna write that I'm not gonna go through and do it to every single group here I'll just do four of them just to see if this actually works and then what I want to do is get back into our script. What I want to do is I want to go back to where we were gripping with the dash E flag I want to create a new line let's do dash E one more time this time I want to grip this particular string kb underscore group and let's write that and let's go to the terminal run the script and now let's go back to the top of the document and see if that worked for us and it did not so obviously we made a mistake there obviously I needed to add a pipe and then of course let's make sure we get the line break there with the backslash let me write that again so that was just a dumb mistake on my part let's rerun the script and now we get an error the dash E command is not found so now we had the pipe on this line that doesn't need to be there so we only need to pipe when we're actually piping into grip or said we don't need a pipe symbol when we're just continuing on with dash E so now let's run the script the script actually works this time let's see if we actually have the group headings the lines with the group names no we do not so we keep making mistakes but that's fine I leave all the mistakes in the videos because that's part of learning is saying somebody screw up and you guys hopefully don't do this when you're doing your scripting but honestly when you're doing one of these scripts on the fly there's a lot of trial and error with them and looking at this I really think this should have worked I'm not seeing the error the others you know when they didn't work I obvious I immediately spotted the error but this looks like it should work so what I'm thinking yeah I know what it is I'm an idiot I changed my config file I didn't write it and then I need to run a org babble tangle to have that output to Xmonad.hs and I'm betting now the script actually works if I go back here and run the script and let me scroll back up and now yeah we actually get the group name Xmonad run prompt other D menu prompts of course we also get dash dash KB group so now what we need to do is get into the script and what we need to do is get rid of dash dash space KB group on those lines I think how I want to play that is I'm just gonna go ahead and do this with SID so I'm gonna add the backslash for line break just continue on dash E here and then inside single quotes we'll do a substitution again what am I substituting I'm gonna substitute dash dash space KB underscore group space because I want to get rid of the space after KB underscore group as well and then slash and then what do I want to replace this with I actually want to replace it could I replace it with a new line slash let's see that if that works I'm gonna write that let's go ahead and get back to the terminal and run that and see how that looks scroll back up and that looks really really nice right because I added a line break before the group name and one thing I don't like is I don't like that I have the comma separating the key binding from the command it runs I'd rather that not be a comma I want it something more something that stands out a little bit more visually I think I'd rather change that maybe to a colon so let me get back into the script and what I'm gonna do is I'm just gonna go ahead and add another said substitution so let's go ahead and substitute a double quote comma space because that was the pattern and I would rather that be a double quote space colon space and then I'm gonna do the trailing slash and then the trailing single quote and let's see if that actually works for so let me rerun the script and yeah I think that is a little bit more easier to read I think that visually that stands out a little more than having that comma right behind the double quotes now we have space colon space and if I wanted this to line up even better what I could do is I can actually change the space I could do something like a change the space to a tab and let's see how that looks rerun the script and yeah and now that's even better as far as visually separating the key binding from the commands now the next thing I want to do is I don't want this information to have to always be output in a terminal I would rather this output in a graphical window a dialogue box and on Linux the most common dialogue box program is a program called yet which stands for yet another dialogue and what I'm gonna do is we're just gonna pipe all of this information and let me go ahead and add the pipe symbol and I'll go ahead and create a line break as well I'm gonna pipe this into yet dash dash text dash info and that is the type of box we're creating with the yet dialogue box program is it's a text info box because there's a whole bunch of windows you can create with yet you can create message windows and and things like that so I'm gonna go ahead and do a colon W to write that and then go back to the terminal and now run the script and it opens this yet dialogue box it opens it full screen because we were in full screen mode but if I was in tiling mode it would just be a standard tiling window now I don't want that to actually be tiling I don't want it to be full screen either what I would like is I would like to have that open at a specific size and centered on the screen so what I'm gonna do is I'm gonna get back into insert mode here and another thing I want to do is I want to change the colors because I didn't like the GTK color scheme of those windows I'd rather it respect kind of like my emacs color scheme or my terminal color scheme and in this program yet you can actually specify a background color and a foreground color so I could do dash dash back equals and then give it a background color I'm gonna do 282c34 that's the background color that I use in emacs and in my terminal color schemes and then I'm gonna do dash dash four equals for a foreground color and for that I'm gonna do 46d9ff and then what I want to do is do dash dash geometry equals and I want this to be 1200 pixels by 800 pixels in size and then let me do colon W to write that and then let me go ahead and run that and see how that looks it's still full screen if I was in tiling mode it would still be tiling the problem here is you know setting the geometry works fine if we were in a floating window manager but a tiling window manager always forces things to tile so this is not a problem with the script necessarily it's a problem with my Xmonad config I need to set a window rule that all YAD windows are floating so what I need to do is get into my Xmonad config and then I'm gonna page up to where I have some window rules settings and you see things like class name equals and then the name of the the windows and then do float these are all the windows that I want to always be floating such as gimp for example class name equals gimp do float so I'm just gonna go in here and I'm gonna YY to copy and P to paste and then I'm gonna create class name equals and I'm gonna do YAD I'm assuming that the window name is actually YAD and then I'm gonna do do float but really what I want to do is do center float because Xmonad has the ability to force a floated window to also be in the center of the screen now if I do colon W to write that and then let me write that to Xmonad.hs and I'm gonna restart Xmonad and I get an error message and the good thing about Xmonad is it's really good about error messages as far as it tells you exactly what the problem is the problem is do center float I didn't import a library that has a do center float module it actually tells me that right here it tells me I should have imported Xmonad.hs.manageHelpers do center float so let me get back into my config I'm gonna go to the top of the document here because that's where my imports are and I need to import Xmonad.hs.manageHelpers which I've already got but I specified only two modules is full screen and do full float I need to go ahead and add do center float let me go ahead and write that Xmonad restarted without any errors so now when I run the script it should open in the center of the screen so let me just run that from the terminal here and I'm in tiling mode and let's see if it actually yes it forces the window centered in the middle of the screen with 1200 by 800 pixels for the size and it respected my background color and the foreground color I chose so that is how I would do that the last thing I probably would do for purposes of this video I don't want to run this from a command line I don't want to run this from a run launcher you know I want a key binding to where I hit a key binding and this window with all of my key bindings pops up so what I need to do is I need to put that of course in my Xmonad config so let me go down to where all of my key bindings are and I'm just gonna add a new one let me find the very beginning of my key binding list because it needs to go in the key binding group for the Xmonad key binding so I'm just going to go ahead and create a new one so I'm gonna do comma and then inside parentheses here inside double quotes I'm gonna do mod shift slash now my shift slash is really mod question mark because the question mark is typically the key you hit in many programs to get help so it makes sense for this key binding to actually be mod shift slash or mod question mark and I need to do a comma behind that and then the command we're gonna run the command we're gonna run of course needs to be spawn and then what are we spawning we are gonna spawn the path to that script which is in my home directory slash dot Xmonad slash Xmonad underscore keys dot sh and let me escape and let me write that and now let me restart Xmonad and now let me do mod question mark and now mod question mark brings up the window with our key bindings how cool is that that's very nice and of course I could clean this script up a lot more and make the you know this look a little bit better because honestly I could format that a lot better but really this works I mean if you had a problem figuring out what your Xmonad key bindings this works I mean I can easily read this figure out what key binding does what and of course just because I did this in Xmonad I mean you could write a script to grip and set out all that information for Qtile or i3 or BSPWM or whatever window manager you use now obviously that was a very quick and dirty script I didn't spend what 10 15 minutes and we just kind of going at where we're winging it right and I did everything with said and grip which I purposefully was trying to do said and grip I was trying to actually avoid using alt because I use typically use alt a lot in my scripts and people complain man you using alt why didn't you use said for that what in use grip for that well here you go and honestly I'm not even sure shell scripting is the best way to accomplish this ideally what you would want to do is if you actually knew Haskell because Xmonads written in Haskell the config files written in Haskell it would be great if I knew enough Haskell where I could actually get this information by adding some Haskell code to my config but I am nowhere near a Haskell master it's a lot easier just to quickly throw together this quick shell script now before I go I need to think a few special people I need to think the producers of this episode as he gave James Mitchell Paul West a commie Allen Chuck Gurt David Dylan Gregory Hico Eryon Alexander peace arch and fedora Polytech raver red Prophet Scott Steven and Willie these guys they're my highest tiered patrons over on patreon without these guys this episode that you just watched would not have been possible the shows also brought to you by each and every one of these ladies and gentlemen as well all these names you're seeing on the screen each and every one of these ladies and gentlemen help support me over on patreon because I don't have any corporate sponsors I'm sponsored by you guys the community if you like my work you want to help me out please consider subscribing to distro tube over on patreon all right guys peace and yes I'll push the script to my get lab", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.24, "text": " One of my favorite kinds of videos to make is where I solve a real-world problem", "tokens": [50364, 1485, 295, 452, 2954, 3685, 295, 2145, 281, 652, 307, 689, 286, 5039, 257, 957, 12, 13217, 1154, 50626], "temperature": 0.0, "avg_logprob": -0.1386530558268229, "compression_ratio": 1.7153024911032029, "no_speech_prob": 0.04739466682076454}, {"id": 1, "seek": 0, "start": 5.24, "end": 10.0, "text": " through the use of shell scripting, because a lot of Linux users, especially", "tokens": [50626, 807, 264, 764, 295, 8720, 5755, 278, 11, 570, 257, 688, 295, 18734, 5022, 11, 2318, 50864], "temperature": 0.0, "avg_logprob": -0.1386530558268229, "compression_ratio": 1.7153024911032029, "no_speech_prob": 0.04739466682076454}, {"id": 2, "seek": 0, "start": 10.0, "end": 13.68, "text": " those of you that are new to Linux, shell scripting seems like it's something", "tokens": [50864, 729, 295, 291, 300, 366, 777, 281, 18734, 11, 8720, 5755, 278, 2544, 411, 309, 311, 746, 51048], "temperature": 0.0, "avg_logprob": -0.1386530558268229, "compression_ratio": 1.7153024911032029, "no_speech_prob": 0.04739466682076454}, {"id": 3, "seek": 0, "start": 13.68, "end": 18.68, "text": " that's really hard, it's complicated, you know, you got to learn a ton of stuff to", "tokens": [51048, 300, 311, 534, 1152, 11, 309, 311, 6179, 11, 291, 458, 11, 291, 658, 281, 1466, 257, 2952, 295, 1507, 281, 51298], "temperature": 0.0, "avg_logprob": -0.1386530558268229, "compression_ratio": 1.7153024911032029, "no_speech_prob": 0.04739466682076454}, {"id": 4, "seek": 0, "start": 18.68, "end": 22.28, "text": " get this stuff to work, but really once you start playing around a little bit with", "tokens": [51298, 483, 341, 1507, 281, 589, 11, 457, 534, 1564, 291, 722, 2433, 926, 257, 707, 857, 365, 51478], "temperature": 0.0, "avg_logprob": -0.1386530558268229, "compression_ratio": 1.7153024911032029, "no_speech_prob": 0.04739466682076454}, {"id": 5, "seek": 0, "start": 22.28, "end": 27.12, "text": " the terminal and the command line, you can quickly figure out a lot of the basic", "tokens": [51478, 264, 14709, 293, 264, 5622, 1622, 11, 291, 393, 2661, 2573, 484, 257, 688, 295, 264, 3875, 51720], "temperature": 0.0, "avg_logprob": -0.1386530558268229, "compression_ratio": 1.7153024911032029, "no_speech_prob": 0.04739466682076454}, {"id": 6, "seek": 2712, "start": 27.12, "end": 31.0, "text": " command line utilities that are needed to create these shell scripts, and you can", "tokens": [50364, 5622, 1622, 30482, 300, 366, 2978, 281, 1884, 613, 8720, 23294, 11, 293, 291, 393, 50558], "temperature": 0.0, "avg_logprob": -0.11971640586853027, "compression_ratio": 1.9363957597173145, "no_speech_prob": 0.004755015950649977}, {"id": 7, "seek": 2712, "start": 31.0, "end": 34.8, "text": " really start solving a lot of problems through the use of shell scripting. So", "tokens": [50558, 534, 722, 12606, 257, 688, 295, 2740, 807, 264, 764, 295, 8720, 5755, 278, 13, 407, 50748], "temperature": 0.0, "avg_logprob": -0.11971640586853027, "compression_ratio": 1.9363957597173145, "no_speech_prob": 0.004755015950649977}, {"id": 8, "seek": 2712, "start": 34.8, "end": 38.92, "text": " what is the problem that I'm going to solve today? Well, it involves your key", "tokens": [50748, 437, 307, 264, 1154, 300, 286, 478, 516, 281, 5039, 965, 30, 1042, 11, 309, 11626, 428, 2141, 50954], "temperature": 0.0, "avg_logprob": -0.11971640586853027, "compression_ratio": 1.9363957597173145, "no_speech_prob": 0.004755015950649977}, {"id": 9, "seek": 2712, "start": 38.92, "end": 43.2, "text": " bindings in your tiling window managers. A lot of people want an easy way to bring", "tokens": [50954, 14786, 1109, 294, 428, 256, 4883, 4910, 14084, 13, 316, 688, 295, 561, 528, 364, 1858, 636, 281, 1565, 51168], "temperature": 0.0, "avg_logprob": -0.11971640586853027, "compression_ratio": 1.9363957597173145, "no_speech_prob": 0.004755015950649977}, {"id": 10, "seek": 2712, "start": 43.2, "end": 47.2, "text": " up a list of all their key bindings for their tiling window manager, and the", "tokens": [51168, 493, 257, 1329, 295, 439, 641, 2141, 14786, 1109, 337, 641, 256, 4883, 4910, 6598, 11, 293, 264, 51368], "temperature": 0.0, "avg_logprob": -0.11971640586853027, "compression_ratio": 1.9363957597173145, "no_speech_prob": 0.004755015950649977}, {"id": 11, "seek": 2712, "start": 47.2, "end": 51.0, "text": " reason people ask about this all the time is because there's one tiling", "tokens": [51368, 1778, 561, 1029, 466, 341, 439, 264, 565, 307, 570, 456, 311, 472, 256, 4883, 51558], "temperature": 0.0, "avg_logprob": -0.11971640586853027, "compression_ratio": 1.9363957597173145, "no_speech_prob": 0.004755015950649977}, {"id": 12, "seek": 2712, "start": 51.0, "end": 55.040000000000006, "text": " window manager that really gets this right, the awesome tiling window manager.", "tokens": [51558, 4910, 6598, 300, 534, 2170, 341, 558, 11, 264, 3476, 256, 4883, 4910, 6598, 13, 51760], "temperature": 0.0, "avg_logprob": -0.11971640586853027, "compression_ratio": 1.9363957597173145, "no_speech_prob": 0.004755015950649977}, {"id": 13, "seek": 5504, "start": 55.28, "end": 59.6, "text": " The awesome window manager, you hold the super key, and a window pops up and it", "tokens": [50376, 440, 3476, 4910, 6598, 11, 291, 1797, 264, 1687, 2141, 11, 293, 257, 4910, 16795, 493, 293, 309, 50592], "temperature": 0.0, "avg_logprob": -0.15485385397206183, "compression_ratio": 1.8282442748091603, "no_speech_prob": 0.004331252072006464}, {"id": 14, "seek": 5504, "start": 59.6, "end": 64.8, "text": " lists all your key bindings for the awesome window manager. And now everybody", "tokens": [50592, 14511, 439, 428, 2141, 14786, 1109, 337, 264, 3476, 4910, 6598, 13, 400, 586, 2201, 50852], "temperature": 0.0, "avg_logprob": -0.15485385397206183, "compression_ratio": 1.8282442748091603, "no_speech_prob": 0.004331252072006464}, {"id": 15, "seek": 5504, "start": 64.8, "end": 69.52, "text": " that runs all these other tiling window managers want that same feature in their", "tokens": [50852, 300, 6676, 439, 613, 661, 256, 4883, 4910, 14084, 528, 300, 912, 4111, 294, 641, 51088], "temperature": 0.0, "avg_logprob": -0.15485385397206183, "compression_ratio": 1.8282442748091603, "no_speech_prob": 0.004331252072006464}, {"id": 16, "seek": 5504, "start": 69.52, "end": 73.12, "text": " window manager, but of course these other window managers don't have that feature.", "tokens": [51088, 4910, 6598, 11, 457, 295, 1164, 613, 661, 4910, 14084, 500, 380, 362, 300, 4111, 13, 51268], "temperature": 0.0, "avg_logprob": -0.15485385397206183, "compression_ratio": 1.8282442748091603, "no_speech_prob": 0.004331252072006464}, {"id": 17, "seek": 5504, "start": 73.12, "end": 76.75999999999999, "text": " Well, you know what? We can kind of create something with a simple shell script.", "tokens": [51268, 1042, 11, 291, 458, 437, 30, 492, 393, 733, 295, 1884, 746, 365, 257, 2199, 8720, 5755, 13, 51450], "temperature": 0.0, "avg_logprob": -0.15485385397206183, "compression_ratio": 1.8282442748091603, "no_speech_prob": 0.004331252072006464}, {"id": 18, "seek": 5504, "start": 76.75999999999999, "end": 81.44, "text": " So let me switch over to my desktop, and today I'm running the Xmonad window", "tokens": [51450, 407, 718, 385, 3679, 670, 281, 452, 14502, 11, 293, 965, 286, 478, 2614, 264, 1783, 3317, 345, 4910, 51684], "temperature": 0.0, "avg_logprob": -0.15485385397206183, "compression_ratio": 1.8282442748091603, "no_speech_prob": 0.004331252072006464}, {"id": 19, "seek": 8144, "start": 81.44, "end": 86.0, "text": " manager, and I've already pulled up my Xmonad config here inside Doom Emacs,", "tokens": [50364, 6598, 11, 293, 286, 600, 1217, 7373, 493, 452, 1783, 3317, 345, 6662, 510, 1854, 30168, 3968, 44937, 11, 50592], "temperature": 0.0, "avg_logprob": -0.12587045900749438, "compression_ratio": 1.7604562737642586, "no_speech_prob": 0.00232304772362113}, {"id": 20, "seek": 8144, "start": 86.0, "end": 90.44, "text": " because what I want to do is I want to be able to grab all of the key bindings", "tokens": [50592, 570, 437, 286, 528, 281, 360, 307, 286, 528, 281, 312, 1075, 281, 4444, 439, 295, 264, 2141, 14786, 1109, 50814], "temperature": 0.0, "avg_logprob": -0.12587045900749438, "compression_ratio": 1.7604562737642586, "no_speech_prob": 0.00232304772362113}, {"id": 21, "seek": 8144, "start": 90.44, "end": 95.03999999999999, "text": " and the commands they run from my Xmonad config. So what I'm going to do is I'm", "tokens": [50814, 293, 264, 16901, 436, 1190, 490, 452, 1783, 3317, 345, 6662, 13, 407, 437, 286, 478, 516, 281, 360, 307, 286, 478, 51044], "temperature": 0.0, "avg_logprob": -0.12587045900749438, "compression_ratio": 1.7604562737642586, "no_speech_prob": 0.00232304772362113}, {"id": 22, "seek": 8144, "start": 95.03999999999999, "end": 99.12, "text": " actually just going to page down here. Actually, I went a little too far.", "tokens": [51044, 767, 445, 516, 281, 3028, 760, 510, 13, 5135, 11, 286, 1437, 257, 707, 886, 1400, 13, 51248], "temperature": 0.0, "avg_logprob": -0.12587045900749438, "compression_ratio": 1.7604562737642586, "no_speech_prob": 0.00232304772362113}, {"id": 23, "seek": 8144, "start": 100.52, "end": 105.4, "text": " This is my key bindings. It's in this statement that says my keys equals, and", "tokens": [51318, 639, 307, 452, 2141, 14786, 1109, 13, 467, 311, 294, 341, 5629, 300, 1619, 452, 9317, 6915, 11, 293, 51562], "temperature": 0.0, "avg_logprob": -0.12587045900749438, "compression_ratio": 1.7604562737642586, "no_speech_prob": 0.00232304772362113}, {"id": 24, "seek": 8144, "start": 105.4, "end": 109.72, "text": " then I've got a very long list of key bindings here in Xmonad. What I would", "tokens": [51562, 550, 286, 600, 658, 257, 588, 938, 1329, 295, 2141, 14786, 1109, 510, 294, 1783, 3317, 345, 13, 708, 286, 576, 51778], "temperature": 0.0, "avg_logprob": -0.12587045900749438, "compression_ratio": 1.7604562737642586, "no_speech_prob": 0.00232304772362113}, {"id": 25, "seek": 10972, "start": 109.72, "end": 113.84, "text": " like to do is find some way to pull all of these key bindings out, you know,", "tokens": [50364, 411, 281, 360, 307, 915, 512, 636, 281, 2235, 439, 295, 613, 2141, 14786, 1109, 484, 11, 291, 458, 11, 50570], "temperature": 0.0, "avg_logprob": -0.1322989281807237, "compression_ratio": 1.7, "no_speech_prob": 0.0017006642883643508}, {"id": 26, "seek": 10972, "start": 113.84, "end": 118.48, "text": " just basically everything that was in that my keys block. I don't need the rest", "tokens": [50570, 445, 1936, 1203, 300, 390, 294, 300, 452, 9317, 3461, 13, 286, 500, 380, 643, 264, 1472, 50802], "temperature": 0.0, "avg_logprob": -0.1322989281807237, "compression_ratio": 1.7, "no_speech_prob": 0.0017006642883643508}, {"id": 27, "seek": 10972, "start": 118.48, "end": 122.08, "text": " of the config, obviously, printed out, because we just want a window that pops", "tokens": [50802, 295, 264, 6662, 11, 2745, 11, 13567, 484, 11, 570, 321, 445, 528, 257, 4910, 300, 16795, 50982], "temperature": 0.0, "avg_logprob": -0.1322989281807237, "compression_ratio": 1.7, "no_speech_prob": 0.0017006642883643508}, {"id": 28, "seek": 10972, "start": 122.08, "end": 125.64, "text": " up that shows us the key bindings. So what's the best way to do this? I don't", "tokens": [50982, 493, 300, 3110, 505, 264, 2141, 14786, 1109, 13, 407, 437, 311, 264, 1151, 636, 281, 360, 341, 30, 286, 500, 380, 51160], "temperature": 0.0, "avg_logprob": -0.1322989281807237, "compression_ratio": 1.7, "no_speech_prob": 0.0017006642883643508}, {"id": 29, "seek": 10972, "start": 125.64, "end": 129.96, "text": " know the best way. I'm not a professional programmer. You know, I just do this as a", "tokens": [51160, 458, 264, 1151, 636, 13, 286, 478, 406, 257, 4843, 32116, 13, 509, 458, 11, 286, 445, 360, 341, 382, 257, 51376], "temperature": 0.0, "avg_logprob": -0.1322989281807237, "compression_ratio": 1.7, "no_speech_prob": 0.0017006642883643508}, {"id": 30, "seek": 10972, "start": 129.96, "end": 136.92, "text": " hobby, but I know that CID has the ability to give you a number of lines from,", "tokens": [51376, 18240, 11, 457, 286, 458, 300, 383, 2777, 575, 264, 3485, 281, 976, 291, 257, 1230, 295, 3876, 490, 11, 51724], "temperature": 0.0, "avg_logprob": -0.1322989281807237, "compression_ratio": 1.7, "no_speech_prob": 0.0017006642883643508}, {"id": 31, "seek": 13692, "start": 136.95999999999998, "end": 140.64, "text": " well, you give it a starting statement and an ending statement, and it pulls out", "tokens": [50366, 731, 11, 291, 976, 309, 257, 2891, 5629, 293, 364, 8121, 5629, 11, 293, 309, 16982, 484, 50550], "temperature": 0.0, "avg_logprob": -0.11104548372180256, "compression_ratio": 1.9926739926739927, "no_speech_prob": 0.00036828950396738946}, {"id": 32, "seek": 13692, "start": 140.64, "end": 143.83999999999997, "text": " all the lines from each of those statements. So what I'm going to do is I'm", "tokens": [50550, 439, 264, 3876, 490, 1184, 295, 729, 12363, 13, 407, 437, 286, 478, 516, 281, 360, 307, 286, 478, 50710], "temperature": 0.0, "avg_logprob": -0.11104548372180256, "compression_ratio": 1.9926739926739927, "no_speech_prob": 0.00036828950396738946}, {"id": 33, "seek": 13692, "start": 143.83999999999997, "end": 147.67999999999998, "text": " just going to create some special comments here. Now, comments in Haskell", "tokens": [50710, 445, 516, 281, 1884, 512, 2121, 3053, 510, 13, 823, 11, 3053, 294, 8646, 43723, 50902], "temperature": 0.0, "avg_logprob": -0.11104548372180256, "compression_ratio": 1.9926739926739927, "no_speech_prob": 0.00036828950396738946}, {"id": 34, "seek": 13692, "start": 147.67999999999998, "end": 151.51999999999998, "text": " begin with dashes, two dashes. So I'm going to do dash dash space. And I'm just", "tokens": [50902, 1841, 365, 8240, 279, 11, 732, 8240, 279, 13, 407, 286, 478, 516, 281, 360, 8240, 8240, 1901, 13, 400, 286, 478, 445, 51094], "temperature": 0.0, "avg_logprob": -0.11104548372180256, "compression_ratio": 1.9926739926739927, "no_speech_prob": 0.00036828950396738946}, {"id": 35, "seek": 13692, "start": 151.51999999999998, "end": 156.67999999999998, "text": " going to do start underscore keys, all caps. And then I'm going to escape. I'm", "tokens": [51094, 516, 281, 360, 722, 37556, 9317, 11, 439, 13855, 13, 400, 550, 286, 478, 516, 281, 7615, 13, 286, 478, 51352], "temperature": 0.0, "avg_logprob": -0.11104548372180256, "compression_ratio": 1.9926739926739927, "no_speech_prob": 0.00036828950396738946}, {"id": 36, "seek": 13692, "start": 156.67999999999998, "end": 161.51999999999998, "text": " going to page down to the end of my key bindings here. And let's go back up.", "tokens": [51352, 516, 281, 3028, 760, 281, 264, 917, 295, 452, 2141, 14786, 1109, 510, 13, 400, 718, 311, 352, 646, 493, 13, 51594], "temperature": 0.0, "avg_logprob": -0.11104548372180256, "compression_ratio": 1.9926739926739927, "no_speech_prob": 0.00036828950396738946}, {"id": 37, "seek": 13692, "start": 162.72, "end": 166.16, "text": " That was the end of the key bindings. And then I'm going to just go ahead and", "tokens": [51654, 663, 390, 264, 917, 295, 264, 2141, 14786, 1109, 13, 400, 550, 286, 478, 516, 281, 445, 352, 2286, 293, 51826], "temperature": 0.0, "avg_logprob": -0.11104548372180256, "compression_ratio": 1.9926739926739927, "no_speech_prob": 0.00036828950396738946}, {"id": 38, "seek": 16616, "start": 166.16, "end": 171.04, "text": " create one more comment here. I'm going to do dash dash space end underscore", "tokens": [50364, 1884, 472, 544, 2871, 510, 13, 286, 478, 516, 281, 360, 8240, 8240, 1901, 917, 37556, 50608], "temperature": 0.0, "avg_logprob": -0.15882624873408566, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.0013669682666659355}, {"id": 39, "seek": 16616, "start": 171.12, "end": 178.44, "text": " keys and escape. So let me go ahead and save this to my xmonad.hs config file.", "tokens": [50612, 9317, 293, 7615, 13, 407, 718, 385, 352, 2286, 293, 3155, 341, 281, 452, 2031, 3317, 345, 13, 71, 82, 6662, 3991, 13, 50978], "temperature": 0.0, "avg_logprob": -0.15882624873408566, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.0013669682666659355}, {"id": 40, "seek": 16616, "start": 178.44, "end": 183.04, "text": " So I went ahead and did colon w to write and I'm going to do a key binding I", "tokens": [50978, 407, 286, 1437, 2286, 293, 630, 8255, 261, 281, 2464, 293, 286, 478, 516, 281, 360, 257, 2141, 17359, 286, 51208], "temperature": 0.0, "avg_logprob": -0.15882624873408566, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.0013669682666659355}, {"id": 41, "seek": 16616, "start": 183.04, "end": 188.2, "text": " have for org babble tangle here inside doom emacs. And then now that I've saved", "tokens": [51208, 362, 337, 14045, 7564, 638, 256, 7846, 510, 1854, 37131, 846, 44937, 13, 400, 550, 586, 300, 286, 600, 6624, 51466], "temperature": 0.0, "avg_logprob": -0.15882624873408566, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.0013669682666659355}, {"id": 42, "seek": 16616, "start": 188.2, "end": 191.76, "text": " that, what I'm going to do is I'm going to open a terminal. Let's go ahead and", "tokens": [51466, 300, 11, 437, 286, 478, 516, 281, 360, 307, 286, 478, 516, 281, 1269, 257, 14709, 13, 961, 311, 352, 2286, 293, 51644], "temperature": 0.0, "avg_logprob": -0.15882624873408566, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.0013669682666659355}, {"id": 43, "seek": 16616, "start": 191.76, "end": 195.88, "text": " zoom way in here in the terminal as well. So you guys can see this. What I'm", "tokens": [51644, 8863, 636, 294, 510, 294, 264, 14709, 382, 731, 13, 407, 291, 1074, 393, 536, 341, 13, 708, 286, 478, 51850], "temperature": 0.0, "avg_logprob": -0.15882624873408566, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.0013669682666659355}, {"id": 44, "seek": 19588, "start": 195.88, "end": 200.28, "text": " going to do is I'm going to run the command said dash in. And then inside", "tokens": [50364, 516, 281, 360, 307, 286, 478, 516, 281, 1190, 264, 5622, 848, 8240, 294, 13, 400, 550, 1854, 50584], "temperature": 0.0, "avg_logprob": -0.13340989474592538, "compression_ratio": 2.1, "no_speech_prob": 0.0033763039391487837}, {"id": 45, "seek": 19588, "start": 200.28, "end": 205.07999999999998, "text": " single quotes, I'm going to do slash start underscore keys because that's the", "tokens": [50584, 2167, 19963, 11, 286, 478, 516, 281, 360, 17330, 722, 37556, 9317, 570, 300, 311, 264, 50824], "temperature": 0.0, "avg_logprob": -0.13340989474592538, "compression_ratio": 2.1, "no_speech_prob": 0.0033763039391487837}, {"id": 46, "seek": 19588, "start": 205.16, "end": 209.44, "text": " the starting comment that we wanted. So I want to pull all lines starting with", "tokens": [50828, 264, 2891, 2871, 300, 321, 1415, 13, 407, 286, 528, 281, 2235, 439, 3876, 2891, 365, 51042], "temperature": 0.0, "avg_logprob": -0.13340989474592538, "compression_ratio": 2.1, "no_speech_prob": 0.0033763039391487837}, {"id": 47, "seek": 19588, "start": 209.44, "end": 216.24, "text": " start underscore keys and then slash comma slash and then in underscore keys", "tokens": [51042, 722, 37556, 9317, 293, 550, 17330, 22117, 17330, 293, 550, 294, 37556, 9317, 51382], "temperature": 0.0, "avg_logprob": -0.13340989474592538, "compression_ratio": 2.1, "no_speech_prob": 0.0033763039391487837}, {"id": 48, "seek": 19588, "start": 216.35999999999999, "end": 220.76, "text": " and then the ending slash and then the command I want to run on this. I want to", "tokens": [51388, 293, 550, 264, 8121, 17330, 293, 550, 264, 5622, 286, 528, 281, 1190, 322, 341, 13, 286, 528, 281, 51608], "temperature": 0.0, "avg_logprob": -0.13340989474592538, "compression_ratio": 2.1, "no_speech_prob": 0.0033763039391487837}, {"id": 49, "seek": 19588, "start": 220.76, "end": 225.24, "text": " run the print command P. And then we need to give it the path to my xmonad", "tokens": [51608, 1190, 264, 4482, 5622, 430, 13, 400, 550, 321, 643, 281, 976, 309, 264, 3100, 281, 452, 2031, 3317, 345, 51832], "temperature": 0.0, "avg_logprob": -0.13340989474592538, "compression_ratio": 2.1, "no_speech_prob": 0.0033763039391487837}, {"id": 50, "seek": 22524, "start": 225.28, "end": 230.28, "text": " config. So that would be in my home directory slash dot xmonad because it's", "tokens": [50366, 6662, 13, 407, 300, 576, 312, 294, 452, 1280, 21120, 17330, 5893, 2031, 3317, 345, 570, 309, 311, 50616], "temperature": 0.0, "avg_logprob": -0.13829325814532417, "compression_ratio": 1.8063241106719368, "no_speech_prob": 0.0007321559241972864}, {"id": 51, "seek": 22524, "start": 230.28, "end": 236.36, "text": " a hidden directory slash and then xmonad.hs. And that prints out. Let me", "tokens": [50616, 257, 7633, 21120, 17330, 293, 550, 2031, 3317, 345, 13, 71, 82, 13, 400, 300, 22305, 484, 13, 961, 385, 50920], "temperature": 0.0, "avg_logprob": -0.13829325814532417, "compression_ratio": 1.8063241106719368, "no_speech_prob": 0.0007321559241972864}, {"id": 52, "seek": 22524, "start": 236.36, "end": 241.08, "text": " make this full screen that prints out every line between a start underscore", "tokens": [50920, 652, 341, 1577, 2568, 300, 22305, 484, 633, 1622, 1296, 257, 722, 37556, 51156], "temperature": 0.0, "avg_logprob": -0.13829325814532417, "compression_ratio": 1.8063241106719368, "no_speech_prob": 0.0007321559241972864}, {"id": 53, "seek": 22524, "start": 241.08, "end": 245.92000000000002, "text": " keys and in underscore keys. Now, of course, many of these lines don't we", "tokens": [51156, 9317, 293, 294, 37556, 9317, 13, 823, 11, 295, 1164, 11, 867, 295, 613, 3876, 500, 380, 321, 51398], "temperature": 0.0, "avg_logprob": -0.13829325814532417, "compression_ratio": 1.8063241106719368, "no_speech_prob": 0.0007321559241972864}, {"id": 54, "seek": 22524, "start": 245.92000000000002, "end": 249.24, "text": " don't need necessarily because some of these are just comments. Really, some of", "tokens": [51398, 500, 380, 643, 4725, 570, 512, 295, 613, 366, 445, 3053, 13, 4083, 11, 512, 295, 51564], "temperature": 0.0, "avg_logprob": -0.13829325814532417, "compression_ratio": 1.8063241106719368, "no_speech_prob": 0.0007321559241972864}, {"id": 55, "seek": 22524, "start": 249.24, "end": 252.60000000000002, "text": " them are useless comments. We could get rid of some of that. We could also get", "tokens": [51564, 552, 366, 14115, 3053, 13, 492, 727, 483, 3973, 295, 512, 295, 300, 13, 492, 727, 611, 483, 51732], "temperature": 0.0, "avg_logprob": -0.13829325814532417, "compression_ratio": 1.8063241106719368, "no_speech_prob": 0.0007321559241972864}, {"id": 56, "seek": 25260, "start": 252.6, "end": 257.4, "text": " rid of some of the extra notation and syntax and things. We could clean this", "tokens": [50364, 3973, 295, 512, 295, 264, 2857, 24657, 293, 28431, 293, 721, 13, 492, 727, 2541, 341, 50604], "temperature": 0.0, "avg_logprob": -0.08829141814133216, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0024725073017179966}, {"id": 57, "seek": 25260, "start": 257.44, "end": 260.12, "text": " up a little bit. And that's what I'm going to do. So what I'm going to do is", "tokens": [50606, 493, 257, 707, 857, 13, 400, 300, 311, 437, 286, 478, 516, 281, 360, 13, 407, 437, 286, 478, 516, 281, 360, 307, 50740], "temperature": 0.0, "avg_logprob": -0.08829141814133216, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0024725073017179966}, {"id": 58, "seek": 25260, "start": 260.12, "end": 263.44, "text": " I'm going to up arrow and I'm going to run the same said command, you know, to", "tokens": [50740, 286, 478, 516, 281, 493, 11610, 293, 286, 478, 516, 281, 1190, 264, 912, 848, 5622, 11, 291, 458, 11, 281, 50906], "temperature": 0.0, "avg_logprob": -0.08829141814133216, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0024725073017179966}, {"id": 59, "seek": 25260, "start": 263.44, "end": 267.15999999999997, "text": " get all of these lines from start keys to end keys. And then I'm going to pipe", "tokens": [50906, 483, 439, 295, 613, 3876, 490, 722, 9317, 281, 917, 9317, 13, 400, 550, 286, 478, 516, 281, 11240, 51092], "temperature": 0.0, "avg_logprob": -0.08829141814133216, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0024725073017179966}, {"id": 60, "seek": 25260, "start": 267.15999999999997, "end": 272.12, "text": " it into grip because grip will allow us to do some interesting stuff here. For", "tokens": [51092, 309, 666, 12007, 570, 12007, 486, 2089, 505, 281, 360, 512, 1880, 1507, 510, 13, 1171, 51340], "temperature": 0.0, "avg_logprob": -0.08829141814133216, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0024725073017179966}, {"id": 61, "seek": 25260, "start": 272.12, "end": 276.44, "text": " example, if I wanted to, I only want to get the lines that actually have the", "tokens": [51340, 1365, 11, 498, 286, 1415, 281, 11, 286, 787, 528, 281, 483, 264, 3876, 300, 767, 362, 264, 51556], "temperature": 0.0, "avg_logprob": -0.08829141814133216, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0024725073017179966}, {"id": 62, "seek": 25260, "start": 276.44, "end": 280.04, "text": " actual key bindings and the actual lines that have key bindings looks like all", "tokens": [51556, 3539, 2141, 14786, 1109, 293, 264, 3539, 3876, 300, 362, 2141, 14786, 1109, 1542, 411, 439, 51736], "temperature": 0.0, "avg_logprob": -0.08829141814133216, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0024725073017179966}, {"id": 63, "seek": 28004, "start": 280.04, "end": 285.84000000000003, "text": " of them start with comma space, opening parentheses, and then a double quote. So", "tokens": [50364, 295, 552, 722, 365, 22117, 1901, 11, 5193, 34153, 11, 293, 550, 257, 3834, 6513, 13, 407, 50654], "temperature": 0.0, "avg_logprob": -0.14692304874288625, "compression_ratio": 1.8022813688212929, "no_speech_prob": 0.004755081608891487}, {"id": 64, "seek": 28004, "start": 285.84000000000003, "end": 290.84000000000003, "text": " why don't I just grip that? So we do grip and then inside single quotes, comma", "tokens": [50654, 983, 500, 380, 286, 445, 12007, 300, 30, 407, 321, 360, 12007, 293, 550, 1854, 2167, 19963, 11, 22117, 50904], "temperature": 0.0, "avg_logprob": -0.14692304874288625, "compression_ratio": 1.8022813688212929, "no_speech_prob": 0.004755081608891487}, {"id": 65, "seek": 28004, "start": 290.84000000000003, "end": 296.72, "text": " space, opening parentheses, double quote. And now when I run that it's a lot", "tokens": [50904, 1901, 11, 5193, 34153, 11, 3834, 6513, 13, 400, 586, 562, 286, 1190, 300, 309, 311, 257, 688, 51198], "temperature": 0.0, "avg_logprob": -0.14692304874288625, "compression_ratio": 1.8022813688212929, "no_speech_prob": 0.004755081608891487}, {"id": 66, "seek": 28004, "start": 296.72, "end": 299.96000000000004, "text": " cleaner, right? Because all of those comments, which were lines that started", "tokens": [51198, 16532, 11, 558, 30, 1436, 439, 295, 729, 3053, 11, 597, 645, 3876, 300, 1409, 51360], "temperature": 0.0, "avg_logprob": -0.14692304874288625, "compression_ratio": 1.8022813688212929, "no_speech_prob": 0.004755081608891487}, {"id": 67, "seek": 28004, "start": 299.96000000000004, "end": 304.72, "text": " with dash dash or no longer output it here, actually looking at it. That's not", "tokens": [51360, 365, 8240, 8240, 420, 572, 2854, 5598, 309, 510, 11, 767, 1237, 412, 309, 13, 663, 311, 406, 51598], "temperature": 0.0, "avg_logprob": -0.14692304874288625, "compression_ratio": 1.8022813688212929, "no_speech_prob": 0.004755081608891487}, {"id": 68, "seek": 28004, "start": 304.72, "end": 308.68, "text": " entirely true. We do have some commented lines that were returned because some of", "tokens": [51598, 7696, 2074, 13, 492, 360, 362, 512, 26940, 3876, 300, 645, 8752, 570, 512, 295, 51796], "temperature": 0.0, "avg_logprob": -0.14692304874288625, "compression_ratio": 1.8022813688212929, "no_speech_prob": 0.004755081608891487}, {"id": 69, "seek": 30868, "start": 308.68, "end": 313.48, "text": " the commented lines that started with dash dash also had the string comma", "tokens": [50364, 264, 26940, 3876, 300, 1409, 365, 8240, 8240, 611, 632, 264, 6798, 22117, 50604], "temperature": 0.0, "avg_logprob": -0.11398195218639214, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.0005192994722165167}, {"id": 70, "seek": 30868, "start": 313.48, "end": 317.96, "text": " space, opening parentheses, double quotes, because these were key bindings that", "tokens": [50604, 1901, 11, 5193, 34153, 11, 3834, 19963, 11, 570, 613, 645, 2141, 14786, 1109, 300, 50828], "temperature": 0.0, "avg_logprob": -0.11398195218639214, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.0005192994722165167}, {"id": 71, "seek": 30868, "start": 317.96, "end": 322.0, "text": " I've disabled by commenting them out. I don't want those returned. If I'm not", "tokens": [50828, 286, 600, 15191, 538, 29590, 552, 484, 13, 286, 500, 380, 528, 729, 8752, 13, 759, 286, 478, 406, 51030], "temperature": 0.0, "avg_logprob": -0.11398195218639214, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.0005192994722165167}, {"id": 72, "seek": 30868, "start": 322.0, "end": 325.24, "text": " currently using the key binding, you know, it's a commented key binding. I don't", "tokens": [51030, 4362, 1228, 264, 2141, 17359, 11, 291, 458, 11, 309, 311, 257, 26940, 2141, 17359, 13, 286, 500, 380, 51192], "temperature": 0.0, "avg_logprob": -0.11398195218639214, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.0005192994722165167}, {"id": 73, "seek": 30868, "start": 325.24, "end": 330.08, "text": " want that to be listed either. So I'm going to up arrow and we did grip. Let's", "tokens": [51192, 528, 300, 281, 312, 10052, 2139, 13, 407, 286, 478, 516, 281, 493, 11610, 293, 321, 630, 12007, 13, 961, 311, 51434], "temperature": 0.0, "avg_logprob": -0.11398195218639214, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.0005192994722165167}, {"id": 74, "seek": 30868, "start": 330.08, "end": 334.08, "text": " go ahead and grip one more time. I will pipe all of this into grip one more", "tokens": [51434, 352, 2286, 293, 12007, 472, 544, 565, 13, 286, 486, 11240, 439, 295, 341, 666, 12007, 472, 544, 51634], "temperature": 0.0, "avg_logprob": -0.11398195218639214, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.0005192994722165167}, {"id": 75, "seek": 33408, "start": 334.08, "end": 338.32, "text": " time. And this time I'm going to do a inverse grip. So I'm going to do dash V", "tokens": [50364, 565, 13, 400, 341, 565, 286, 478, 516, 281, 360, 257, 17340, 12007, 13, 407, 286, 478, 516, 281, 360, 8240, 691, 50576], "temperature": 0.0, "avg_logprob": -0.12864256662035745, "compression_ratio": 2.021097046413502, "no_speech_prob": 0.06370788812637329}, {"id": 76, "seek": 33408, "start": 338.32, "end": 343.03999999999996, "text": " meaning return all the lines that set the ones that have this string. So I'm", "tokens": [50576, 3620, 2736, 439, 264, 3876, 300, 992, 264, 2306, 300, 362, 341, 6798, 13, 407, 286, 478, 50812], "temperature": 0.0, "avg_logprob": -0.12864256662035745, "compression_ratio": 2.021097046413502, "no_speech_prob": 0.06370788812637329}, {"id": 77, "seek": 33408, "start": 343.03999999999996, "end": 348.0, "text": " going to do inside single quotes again. I'm going to do dash dash space and then", "tokens": [50812, 516, 281, 360, 1854, 2167, 19963, 797, 13, 286, 478, 516, 281, 360, 8240, 8240, 1901, 293, 550, 51060], "temperature": 0.0, "avg_logprob": -0.12864256662035745, "compression_ratio": 2.021097046413502, "no_speech_prob": 0.06370788812637329}, {"id": 78, "seek": 33408, "start": 348.0, "end": 353.0, "text": " comma space, opening parentheses, single quotes. So these lines here that started", "tokens": [51060, 22117, 1901, 11, 5193, 34153, 11, 2167, 19963, 13, 407, 613, 3876, 510, 300, 1409, 51310], "temperature": 0.0, "avg_logprob": -0.12864256662035745, "compression_ratio": 2.021097046413502, "no_speech_prob": 0.06370788812637329}, {"id": 79, "seek": 33408, "start": 353.0, "end": 357.56, "text": " with that string, I want to get rid of those. So return all the lines that don't", "tokens": [51310, 365, 300, 6798, 11, 286, 528, 281, 483, 3973, 295, 729, 13, 407, 2736, 439, 264, 3876, 300, 500, 380, 51538], "temperature": 0.0, "avg_logprob": -0.12864256662035745, "compression_ratio": 2.021097046413502, "no_speech_prob": 0.06370788812637329}, {"id": 80, "seek": 33408, "start": 357.56, "end": 362.84, "text": " have this pattern. That's what the dash V flag does for us. And now that did not", "tokens": [51538, 362, 341, 5102, 13, 663, 311, 437, 264, 8240, 691, 7166, 775, 337, 505, 13, 400, 586, 300, 630, 406, 51802], "temperature": 0.0, "avg_logprob": -0.12864256662035745, "compression_ratio": 2.021097046413502, "no_speech_prob": 0.06370788812637329}, {"id": 81, "seek": 36284, "start": 362.88, "end": 366.88, "text": " quite work. And I actually got an error message because grip does not like the", "tokens": [50366, 1596, 589, 13, 400, 286, 767, 658, 364, 6713, 3636, 570, 12007, 775, 406, 411, 264, 50566], "temperature": 0.0, "avg_logprob": -0.1265947258990744, "compression_ratio": 1.7709923664122138, "no_speech_prob": 0.003272969275712967}, {"id": 82, "seek": 36284, "start": 366.88, "end": 371.88, "text": " dash dash pattern. We need to escape that. So I need to do a backslash dash", "tokens": [50566, 8240, 8240, 5102, 13, 492, 643, 281, 7615, 300, 13, 407, 286, 643, 281, 360, 257, 646, 10418, 1299, 8240, 50816], "temperature": 0.0, "avg_logprob": -0.1265947258990744, "compression_ratio": 1.7709923664122138, "no_speech_prob": 0.003272969275712967}, {"id": 83, "seek": 36284, "start": 371.91999999999996, "end": 377.28, "text": " backslash dash that actually grip will understand that as being dash dash in", "tokens": [50818, 646, 10418, 1299, 8240, 300, 767, 12007, 486, 1223, 300, 382, 885, 8240, 8240, 294, 51086], "temperature": 0.0, "avg_logprob": -0.1265947258990744, "compression_ratio": 1.7709923664122138, "no_speech_prob": 0.003272969275712967}, {"id": 84, "seek": 36284, "start": 377.28, "end": 381.59999999999997, "text": " the document. Now when I run that, we get exactly what we wanted. It looks like I", "tokens": [51086, 264, 4166, 13, 823, 562, 286, 1190, 300, 11, 321, 483, 2293, 437, 321, 1415, 13, 467, 1542, 411, 286, 51302], "temperature": 0.0, "avg_logprob": -0.1265947258990744, "compression_ratio": 1.7709923664122138, "no_speech_prob": 0.003272969275712967}, {"id": 85, "seek": 36284, "start": 381.59999999999997, "end": 386.08, "text": " still have one more commented line that didn't get filtered out is because I", "tokens": [51302, 920, 362, 472, 544, 26940, 1622, 300, 994, 380, 483, 37111, 484, 307, 570, 286, 51526], "temperature": 0.0, "avg_logprob": -0.1265947258990744, "compression_ratio": 1.7709923664122138, "no_speech_prob": 0.003272969275712967}, {"id": 86, "seek": 36284, "start": 386.08, "end": 390.12, "text": " didn't keep the same pattern instead of dash dash space comma space. That", "tokens": [51526, 994, 380, 1066, 264, 912, 5102, 2602, 295, 8240, 8240, 1901, 22117, 1901, 13, 663, 51728], "temperature": 0.0, "avg_logprob": -0.1265947258990744, "compression_ratio": 1.7709923664122138, "no_speech_prob": 0.003272969275712967}, {"id": 87, "seek": 39012, "start": 390.12, "end": 394.6, "text": " particular line is dash dash comma without a space. I could actually just", "tokens": [50364, 1729, 1622, 307, 8240, 8240, 22117, 1553, 257, 1901, 13, 286, 727, 767, 445, 50588], "temperature": 0.0, "avg_logprob": -0.10337599704140112, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.004069919232279062}, {"id": 88, "seek": 39012, "start": 394.6, "end": 399.72, "text": " fix that in the config since that's really my fault for not keeping the same", "tokens": [50588, 3191, 300, 294, 264, 6662, 1670, 300, 311, 534, 452, 7441, 337, 406, 5145, 264, 912, 50844], "temperature": 0.0, "avg_logprob": -0.10337599704140112, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.004069919232279062}, {"id": 89, "seek": 39012, "start": 399.72, "end": 403.48, "text": " pattern for all of my commented lines. I'm just going to fix that right here in", "tokens": [50844, 5102, 337, 439, 295, 452, 26940, 3876, 13, 286, 478, 445, 516, 281, 3191, 300, 558, 510, 294, 51032], "temperature": 0.0, "avg_logprob": -0.10337599704140112, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.004069919232279062}, {"id": 90, "seek": 39012, "start": 403.48, "end": 411.84000000000003, "text": " the config. And now when I run the grip command again. Now that commented line", "tokens": [51032, 264, 6662, 13, 400, 586, 562, 286, 1190, 264, 12007, 5622, 797, 13, 823, 300, 26940, 1622, 51450], "temperature": 0.0, "avg_logprob": -0.10337599704140112, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.004069919232279062}, {"id": 91, "seek": 39012, "start": 412.2, "end": 416.8, "text": " is actually no longer returned. So I'm just going to scroll through here. Yeah,", "tokens": [51468, 307, 767, 572, 2854, 8752, 13, 407, 286, 478, 445, 516, 281, 11369, 807, 510, 13, 865, 11, 51698], "temperature": 0.0, "avg_logprob": -0.10337599704140112, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.004069919232279062}, {"id": 92, "seek": 41680, "start": 416.84000000000003, "end": 421.28000000000003, "text": " it doesn't look like we have any commented lines now. So already this is a", "tokens": [50366, 309, 1177, 380, 574, 411, 321, 362, 604, 26940, 3876, 586, 13, 407, 1217, 341, 307, 257, 50588], "temperature": 0.0, "avg_logprob": -0.11922072549151559, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.0006461800076067448}, {"id": 93, "seek": 41680, "start": 421.28000000000003, "end": 425.8, "text": " pretty clean layout. It gives me the key binding and the command it runs. And then", "tokens": [50588, 1238, 2541, 13333, 13, 467, 2709, 385, 264, 2141, 17359, 293, 264, 5622, 309, 6676, 13, 400, 550, 50814], "temperature": 0.0, "avg_logprob": -0.11922072549151559, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.0006461800076067448}, {"id": 94, "seek": 41680, "start": 425.8, "end": 429.48, "text": " at the end of the line, I did have some comments for those of you that are using", "tokens": [50814, 412, 264, 917, 295, 264, 1622, 11, 286, 630, 362, 512, 3053, 337, 729, 295, 291, 300, 366, 1228, 50998], "temperature": 0.0, "avg_logprob": -0.11922072549151559, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.0006461800076067448}, {"id": 95, "seek": 41680, "start": 429.48, "end": 434.12, "text": " my config to more specifically explain exactly what the commands are in case", "tokens": [50998, 452, 6662, 281, 544, 4682, 2903, 2293, 437, 264, 16901, 366, 294, 1389, 51230], "temperature": 0.0, "avg_logprob": -0.11922072549151559, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.0006461800076067448}, {"id": 96, "seek": 41680, "start": 434.12, "end": 438.68, "text": " you don't understand, you know, what the actual commands in X mode and do. For", "tokens": [51230, 291, 500, 380, 1223, 11, 291, 458, 11, 437, 264, 3539, 16901, 294, 1783, 4391, 293, 360, 13, 1171, 51458], "temperature": 0.0, "avg_logprob": -0.11922072549151559, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.0006461800076067448}, {"id": 97, "seek": 41680, "start": 438.68, "end": 443.68, "text": " example, if you didn't know that the spawn X mode and restart command restarts", "tokens": [51458, 1365, 11, 498, 291, 994, 380, 458, 300, 264, 17088, 1783, 4391, 293, 21022, 5622, 1472, 11814, 51708], "temperature": 0.0, "avg_logprob": -0.11922072549151559, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.0006461800076067448}, {"id": 98, "seek": 44368, "start": 443.68, "end": 447.84000000000003, "text": " X monad, I went ahead and commented it out specifically, you know, so explicitly", "tokens": [50364, 1783, 1108, 345, 11, 286, 1437, 2286, 293, 26940, 309, 484, 4682, 11, 291, 458, 11, 370, 20803, 50572], "temperature": 0.0, "avg_logprob": -0.1551532051780007, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.0022517608013004065}, {"id": 99, "seek": 44368, "start": 447.84000000000003, "end": 452.12, "text": " for you guys. Now one thing that is a problem I noticed is the very first", "tokens": [50572, 337, 291, 1074, 13, 823, 472, 551, 300, 307, 257, 1154, 286, 5694, 307, 264, 588, 700, 50786], "temperature": 0.0, "avg_logprob": -0.1551532051780007, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.0022517608013004065}, {"id": 100, "seek": 44368, "start": 452.12, "end": 456.68, "text": " key binding that is returned here is actually the second key binding in my", "tokens": [50786, 2141, 17359, 300, 307, 8752, 510, 307, 767, 264, 1150, 2141, 17359, 294, 452, 51014], "temperature": 0.0, "avg_logprob": -0.1551532051780007, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.0022517608013004065}, {"id": 101, "seek": 44368, "start": 456.84000000000003, "end": 461.44, "text": " X monad config. Let me make the X monad config full screen. You see, because", "tokens": [51022, 1783, 1108, 345, 6662, 13, 961, 385, 652, 264, 1783, 1108, 345, 6662, 1577, 2568, 13, 509, 536, 11, 570, 51252], "temperature": 0.0, "avg_logprob": -0.1551532051780007, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.0022517608013004065}, {"id": 102, "seek": 44368, "start": 461.6, "end": 465.96000000000004, "text": " that's the one key binding that doesn't start with comma space of opening", "tokens": [51260, 300, 311, 264, 472, 2141, 17359, 300, 1177, 380, 722, 365, 22117, 1901, 295, 5193, 51478], "temperature": 0.0, "avg_logprob": -0.1551532051780007, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.0022517608013004065}, {"id": 103, "seek": 44368, "start": 465.96000000000004, "end": 470.44, "text": " parentheses. It actually starts with opening bracket space opening parentheses.", "tokens": [51478, 34153, 13, 467, 767, 3719, 365, 5193, 16904, 1901, 5193, 34153, 13, 51702], "temperature": 0.0, "avg_logprob": -0.1551532051780007, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.0022517608013004065}, {"id": 104, "seek": 47044, "start": 470.6, "end": 475.04, "text": " So I need to take that into account here. So what I'm going to do, I'm going to", "tokens": [50372, 407, 286, 643, 281, 747, 300, 666, 2696, 510, 13, 407, 437, 286, 478, 516, 281, 360, 11, 286, 478, 516, 281, 50594], "temperature": 0.0, "avg_logprob": -0.10219383239746094, "compression_ratio": 1.902834008097166, "no_speech_prob": 0.003075152635574341}, {"id": 105, "seek": 47044, "start": 475.04, "end": 478.4, "text": " up arrow and let's go ahead and add a rule for that. What I'm going to do is", "tokens": [50594, 493, 11610, 293, 718, 311, 352, 2286, 293, 909, 257, 4978, 337, 300, 13, 708, 286, 478, 516, 281, 360, 307, 50762], "temperature": 0.0, "avg_logprob": -0.10219383239746094, "compression_ratio": 1.902834008097166, "no_speech_prob": 0.003075152635574341}, {"id": 106, "seek": 47044, "start": 478.4, "end": 482.32, "text": " I'm going to go back here to this first grip here. I'm going to add the dash E", "tokens": [50762, 286, 478, 516, 281, 352, 646, 510, 281, 341, 700, 12007, 510, 13, 286, 478, 516, 281, 909, 264, 8240, 462, 50958], "temperature": 0.0, "avg_logprob": -0.10219383239746094, "compression_ratio": 1.902834008097166, "no_speech_prob": 0.003075152635574341}, {"id": 107, "seek": 47044, "start": 482.32, "end": 487.08, "text": " flag because we're going to do multiple grips here. So I'm going to do dash E", "tokens": [50958, 7166, 570, 321, 434, 516, 281, 360, 3866, 38037, 510, 13, 407, 286, 478, 516, 281, 360, 8240, 462, 51196], "temperature": 0.0, "avg_logprob": -0.10219383239746094, "compression_ratio": 1.902834008097166, "no_speech_prob": 0.003075152635574341}, {"id": 108, "seek": 47044, "start": 487.08, "end": 491.76, "text": " again. And then inside single quotes, I want to grip for the opening bracket. I", "tokens": [51196, 797, 13, 400, 550, 1854, 2167, 19963, 11, 286, 528, 281, 12007, 337, 264, 5193, 16904, 13, 286, 51430], "temperature": 0.0, "avg_logprob": -0.10219383239746094, "compression_ratio": 1.902834008097166, "no_speech_prob": 0.003075152635574341}, {"id": 109, "seek": 47044, "start": 491.76, "end": 498.08, "text": " have to escape that. So do a backslash bracket space parentheses. And then I", "tokens": [51430, 362, 281, 7615, 300, 13, 407, 360, 257, 646, 10418, 1299, 16904, 1901, 34153, 13, 400, 550, 286, 51746], "temperature": 0.0, "avg_logprob": -0.10219383239746094, "compression_ratio": 1.902834008097166, "no_speech_prob": 0.003075152635574341}, {"id": 110, "seek": 49808, "start": 498.08, "end": 502.47999999999996, "text": " think that should work. Now, if I run that and let's scroll back up and see if", "tokens": [50364, 519, 300, 820, 589, 13, 823, 11, 498, 286, 1190, 300, 293, 718, 311, 11369, 646, 493, 293, 536, 498, 50584], "temperature": 0.0, "avg_logprob": -0.11054521522774602, "compression_ratio": 1.9241379310344828, "no_speech_prob": 0.001169470720924437}, {"id": 111, "seek": 49808, "start": 502.47999999999996, "end": 506.8, "text": " we actually get, yeah, now we actually get the very first key binding as well.", "tokens": [50584, 321, 767, 483, 11, 1338, 11, 586, 321, 767, 483, 264, 588, 700, 2141, 17359, 382, 731, 13, 50800], "temperature": 0.0, "avg_logprob": -0.11054521522774602, "compression_ratio": 1.9241379310344828, "no_speech_prob": 0.001169470720924437}, {"id": 112, "seek": 49808, "start": 506.8, "end": 511.0, "text": " So now we're actually seeing every single key binding. Now I've still got some", "tokens": [50800, 407, 586, 321, 434, 767, 2577, 633, 2167, 2141, 17359, 13, 823, 286, 600, 920, 658, 512, 51010], "temperature": 0.0, "avg_logprob": -0.11054521522774602, "compression_ratio": 1.9241379310344828, "no_speech_prob": 0.001169470720924437}, {"id": 113, "seek": 49808, "start": 511.0, "end": 515.3199999999999, "text": " work to do on cleaning this up, but this single line at the command line is going", "tokens": [51010, 589, 281, 360, 322, 8924, 341, 493, 11, 457, 341, 2167, 1622, 412, 264, 5622, 1622, 307, 516, 51226], "temperature": 0.0, "avg_logprob": -0.11054521522774602, "compression_ratio": 1.9241379310344828, "no_speech_prob": 0.001169470720924437}, {"id": 114, "seek": 49808, "start": 515.3199999999999, "end": 518.3199999999999, "text": " to start getting very long. So what I'm going to do is I'm actually just going to", "tokens": [51226, 281, 722, 1242, 588, 938, 13, 407, 437, 286, 478, 516, 281, 360, 307, 286, 478, 767, 445, 516, 281, 51376], "temperature": 0.0, "avg_logprob": -0.11054521522774602, "compression_ratio": 1.9241379310344828, "no_speech_prob": 0.001169470720924437}, {"id": 115, "seek": 49808, "start": 518.3199999999999, "end": 522.68, "text": " do a copy because let's go ahead and put this in a real script. So I'm going to", "tokens": [51376, 360, 257, 5055, 570, 718, 311, 352, 2286, 293, 829, 341, 294, 257, 957, 5755, 13, 407, 286, 478, 516, 281, 51594], "temperature": 0.0, "avg_logprob": -0.11054521522774602, "compression_ratio": 1.9241379310344828, "no_speech_prob": 0.001169470720924437}, {"id": 116, "seek": 49808, "start": 522.68, "end": 527.28, "text": " go ahead and create a new file here inside a doom Emacs. So I'm going to do a", "tokens": [51594, 352, 2286, 293, 1884, 257, 777, 3991, 510, 1854, 257, 37131, 3968, 44937, 13, 407, 286, 478, 516, 281, 360, 257, 51824], "temperature": 0.0, "avg_logprob": -0.11054521522774602, "compression_ratio": 1.9241379310344828, "no_speech_prob": 0.001169470720924437}, {"id": 117, "seek": 52728, "start": 527.28, "end": 531.56, "text": " space period because inside my .xmonad directory, which we're currently in", "tokens": [50364, 1901, 2896, 570, 1854, 452, 2411, 87, 3317, 345, 21120, 11, 597, 321, 434, 4362, 294, 50578], "temperature": 0.0, "avg_logprob": -0.17629591381276838, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.00041730559314601123}, {"id": 118, "seek": 52728, "start": 531.56, "end": 535.88, "text": " because we're looking at xmonad.hs, I'm going to go ahead and create a shell", "tokens": [50578, 570, 321, 434, 1237, 412, 2031, 3317, 345, 13, 71, 82, 11, 286, 478, 516, 281, 352, 2286, 293, 1884, 257, 8720, 50794], "temperature": 0.0, "avg_logprob": -0.17629591381276838, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.00041730559314601123}, {"id": 119, "seek": 52728, "start": 535.88, "end": 542.04, "text": " script. I'm going to name it xmonad underscore keys .sh. And then it creates", "tokens": [50794, 5755, 13, 286, 478, 516, 281, 1315, 309, 2031, 3317, 345, 37556, 9317, 2411, 2716, 13, 400, 550, 309, 7829, 51102], "temperature": 0.0, "avg_logprob": -0.17629591381276838, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.00041730559314601123}, {"id": 120, "seek": 52728, "start": 542.04, "end": 547.36, "text": " this new bash script here because by default, I've got my Emacs setup to", "tokens": [51102, 341, 777, 46183, 5755, 510, 570, 538, 7576, 11, 286, 600, 658, 452, 3968, 44937, 8657, 281, 51368], "temperature": 0.0, "avg_logprob": -0.17629591381276838, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.00041730559314601123}, {"id": 121, "seek": 52728, "start": 547.36, "end": 551.64, "text": " where anytime I create a shell script, it gives me the user bin ENV bash", "tokens": [51368, 689, 13038, 286, 1884, 257, 8720, 5755, 11, 309, 2709, 385, 264, 4195, 5171, 15244, 53, 46183, 51582], "temperature": 0.0, "avg_logprob": -0.17629591381276838, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.00041730559314601123}, {"id": 122, "seek": 52728, "start": 551.64, "end": 556.1999999999999, "text": " shebang. So it's going to be a bash script. Let me zoom in. And what I'm going to do", "tokens": [51582, 750, 20106, 13, 407, 309, 311, 516, 281, 312, 257, 46183, 5755, 13, 961, 385, 8863, 294, 13, 400, 437, 286, 478, 516, 281, 360, 51810], "temperature": 0.0, "avg_logprob": -0.17629591381276838, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.00041730559314601123}, {"id": 123, "seek": 55620, "start": 556.24, "end": 560.36, "text": " is I'm just going to paste what we had had in the terminal before. And let's go", "tokens": [50366, 307, 286, 478, 445, 516, 281, 9163, 437, 321, 632, 632, 294, 264, 14709, 949, 13, 400, 718, 311, 352, 50572], "temperature": 0.0, "avg_logprob": -0.09011457860469818, "compression_ratio": 1.8482490272373542, "no_speech_prob": 0.0018674986204132438}, {"id": 124, "seek": 55620, "start": 560.36, "end": 564.2800000000001, "text": " ahead and clean this up so it looks a little better. So let's do some line", "tokens": [50572, 2286, 293, 2541, 341, 493, 370, 309, 1542, 257, 707, 1101, 13, 407, 718, 311, 360, 512, 1622, 50768], "temperature": 0.0, "avg_logprob": -0.09011457860469818, "compression_ratio": 1.8482490272373542, "no_speech_prob": 0.0018674986204132438}, {"id": 125, "seek": 55620, "start": 564.2800000000001, "end": 568.5600000000001, "text": " breaks. So in shell scripting, or even at the command line running this, you", "tokens": [50768, 9857, 13, 407, 294, 8720, 5755, 278, 11, 420, 754, 412, 264, 5622, 1622, 2614, 341, 11, 291, 50982], "temperature": 0.0, "avg_logprob": -0.09011457860469818, "compression_ratio": 1.8482490272373542, "no_speech_prob": 0.0018674986204132438}, {"id": 126, "seek": 55620, "start": 568.5600000000001, "end": 572.08, "text": " could actually create some line breaks with the backslash character. So that's", "tokens": [50982, 727, 767, 1884, 512, 1622, 9857, 365, 264, 646, 10418, 1299, 2517, 13, 407, 300, 311, 51158], "temperature": 0.0, "avg_logprob": -0.09011457860469818, "compression_ratio": 1.8482490272373542, "no_speech_prob": 0.0018674986204132438}, {"id": 127, "seek": 55620, "start": 572.08, "end": 577.36, "text": " what I'm going to do is I'm just going to go ahead and put a few backslashes just", "tokens": [51158, 437, 286, 478, 516, 281, 360, 307, 286, 478, 445, 516, 281, 352, 2286, 293, 829, 257, 1326, 646, 10418, 12808, 445, 51422], "temperature": 0.0, "avg_logprob": -0.09011457860469818, "compression_ratio": 1.8482490272373542, "no_speech_prob": 0.0018674986204132438}, {"id": 128, "seek": 55620, "start": 577.36, "end": 583.32, "text": " to make this a little more readable. I'm going to go ahead and do colon W to write", "tokens": [51422, 281, 652, 341, 257, 707, 544, 49857, 13, 286, 478, 516, 281, 352, 2286, 293, 360, 8255, 343, 281, 2464, 51720], "temperature": 0.0, "avg_logprob": -0.09011457860469818, "compression_ratio": 1.8482490272373542, "no_speech_prob": 0.0018674986204132438}, {"id": 129, "seek": 58332, "start": 583.36, "end": 589.12, "text": " that. And I'm going to open up a new terminal here and I'm going to cd into .xmonad,", "tokens": [50366, 300, 13, 400, 286, 478, 516, 281, 1269, 493, 257, 777, 14709, 510, 293, 286, 478, 516, 281, 269, 67, 666, 2411, 87, 3317, 345, 11, 50654], "temperature": 0.0, "avg_logprob": -0.14870465503019445, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.002800758695229888}, {"id": 130, "seek": 58332, "start": 589.12, "end": 593.8000000000001, "text": " that directory. If I did a ls, you see xmonad underscore keys. So what we need", "tokens": [50654, 300, 21120, 13, 759, 286, 630, 257, 287, 82, 11, 291, 536, 2031, 3317, 345, 37556, 9317, 13, 407, 437, 321, 643, 50888], "temperature": 0.0, "avg_logprob": -0.14870465503019445, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.002800758695229888}, {"id": 131, "seek": 58332, "start": 593.8000000000001, "end": 598.7600000000001, "text": " to do is run the command chmod plus x because we want to make this script", "tokens": [50888, 281, 360, 307, 1190, 264, 5622, 417, 8014, 1804, 2031, 570, 321, 528, 281, 652, 341, 5755, 51136], "temperature": 0.0, "avg_logprob": -0.14870465503019445, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.002800758695229888}, {"id": 132, "seek": 58332, "start": 598.7600000000001, "end": 603.0400000000001, "text": " executable because it will not run if it's not executable. And now that I've", "tokens": [51136, 7568, 712, 570, 309, 486, 406, 1190, 498, 309, 311, 406, 7568, 712, 13, 400, 586, 300, 286, 600, 51350], "temperature": 0.0, "avg_logprob": -0.14870465503019445, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.002800758695229888}, {"id": 133, "seek": 58332, "start": 603.0400000000001, "end": 607.4000000000001, "text": " done that, you know, we could actually run this if we wanted to. And you see how", "tokens": [51350, 1096, 300, 11, 291, 458, 11, 321, 727, 767, 1190, 341, 498, 321, 1415, 281, 13, 400, 291, 536, 577, 51568], "temperature": 0.0, "avg_logprob": -0.14870465503019445, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.002800758695229888}, {"id": 134, "seek": 58332, "start": 607.4000000000001, "end": 611.44, "text": " that works. Let me go ahead and zoom in on this terminal because this will be the", "tokens": [51568, 300, 1985, 13, 961, 385, 352, 2286, 293, 8863, 294, 322, 341, 14709, 570, 341, 486, 312, 264, 51770], "temperature": 0.0, "avg_logprob": -0.14870465503019445, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.002800758695229888}, {"id": 135, "seek": 61144, "start": 611.48, "end": 616.44, "text": " terminal we use from here on out. Let me go back to the other terminal here. I'll", "tokens": [50366, 14709, 321, 764, 490, 510, 322, 484, 13, 961, 385, 352, 646, 281, 264, 661, 14709, 510, 13, 286, 603, 50614], "temperature": 0.0, "avg_logprob": -0.08634006781656234, "compression_ratio": 1.7573529411764706, "no_speech_prob": 0.00044421147322282195}, {"id": 136, "seek": 61144, "start": 616.44, "end": 621.08, "text": " just close that out. Now we'll just play around in this shell script instead of", "tokens": [50614, 445, 1998, 300, 484, 13, 823, 321, 603, 445, 862, 926, 294, 341, 8720, 5755, 2602, 295, 50846], "temperature": 0.0, "avg_logprob": -0.08634006781656234, "compression_ratio": 1.7573529411764706, "no_speech_prob": 0.00044421147322282195}, {"id": 137, "seek": 61144, "start": 621.08, "end": 624.6, "text": " doing this at the command line. It'll be easier to read this way. Now one thing I", "tokens": [50846, 884, 341, 412, 264, 5622, 1622, 13, 467, 603, 312, 3571, 281, 1401, 341, 636, 13, 823, 472, 551, 286, 51022], "temperature": 0.0, "avg_logprob": -0.08634006781656234, "compression_ratio": 1.7573529411764706, "no_speech_prob": 0.00044421147322282195}, {"id": 138, "seek": 61144, "start": 624.6, "end": 629.48, "text": " didn't like about the output from this command is the fact that every line has", "tokens": [51022, 994, 380, 411, 466, 264, 5598, 490, 341, 5622, 307, 264, 1186, 300, 633, 1622, 575, 51266], "temperature": 0.0, "avg_logprob": -0.08634006781656234, "compression_ratio": 1.7573529411764706, "no_speech_prob": 0.00044421147322282195}, {"id": 139, "seek": 61144, "start": 629.48, "end": 634.6800000000001, "text": " a whole bunch of leading spaces. So I want to get rid of that. So and the reason", "tokens": [51266, 257, 1379, 3840, 295, 5775, 7673, 13, 407, 286, 528, 281, 483, 3973, 295, 300, 13, 407, 293, 264, 1778, 51526], "temperature": 0.0, "avg_logprob": -0.08634006781656234, "compression_ratio": 1.7573529411764706, "no_speech_prob": 0.00044421147322282195}, {"id": 140, "seek": 61144, "start": 634.6800000000001, "end": 638.44, "text": " it has leading spaces is because the lines it's actually pulling out of my", "tokens": [51526, 309, 575, 5775, 7673, 307, 570, 264, 3876, 309, 311, 767, 8407, 484, 295, 452, 51714], "temperature": 0.0, "avg_logprob": -0.08634006781656234, "compression_ratio": 1.7573529411764706, "no_speech_prob": 0.00044421147322282195}, {"id": 141, "seek": 63844, "start": 638.44, "end": 642.12, "text": " config have leading spaces because they have to. You know, I can't have these", "tokens": [50364, 6662, 362, 5775, 7673, 570, 436, 362, 281, 13, 509, 458, 11, 286, 393, 380, 362, 613, 50548], "temperature": 0.0, "avg_logprob": -0.11769816172208718, "compression_ratio": 1.808724832214765, "no_speech_prob": 0.0017006810521706939}, {"id": 142, "seek": 63844, "start": 642.12, "end": 645.7600000000001, "text": " lines starting at the beginning of the line because Haskell's really picky", "tokens": [50548, 3876, 2891, 412, 264, 2863, 295, 264, 1622, 570, 8646, 43723, 311, 534, 41099, 50730], "temperature": 0.0, "avg_logprob": -0.11769816172208718, "compression_ratio": 1.808724832214765, "no_speech_prob": 0.0017006810521706939}, {"id": 143, "seek": 63844, "start": 645.7600000000001, "end": 649.6400000000001, "text": " about spacing. So I actually need the spaces in the config file, but I want to", "tokens": [50730, 466, 27739, 13, 407, 286, 767, 643, 264, 7673, 294, 264, 6662, 3991, 11, 457, 286, 528, 281, 50924], "temperature": 0.0, "avg_logprob": -0.11769816172208718, "compression_ratio": 1.808724832214765, "no_speech_prob": 0.0017006810521706939}, {"id": 144, "seek": 63844, "start": 649.6400000000001, "end": 653.2, "text": " get rid of the spaces when I actually have this printed out in the terminal.", "tokens": [50924, 483, 3973, 295, 264, 7673, 562, 286, 767, 362, 341, 13567, 484, 294, 264, 14709, 13, 51102], "temperature": 0.0, "avg_logprob": -0.11769816172208718, "compression_ratio": 1.808724832214765, "no_speech_prob": 0.0017006810521706939}, {"id": 145, "seek": 63844, "start": 653.2, "end": 657.2, "text": " And we can do this with a regular expression here. What I want to do, I", "tokens": [51102, 400, 321, 393, 360, 341, 365, 257, 3890, 6114, 510, 13, 708, 286, 528, 281, 360, 11, 286, 51302], "temperature": 0.0, "avg_logprob": -0.11769816172208718, "compression_ratio": 1.808724832214765, "no_speech_prob": 0.0017006810521706939}, {"id": 146, "seek": 63844, "start": 657.2, "end": 661.6, "text": " probably want to do this with sed. Let me get back into insert mode and I'm going", "tokens": [51302, 1391, 528, 281, 360, 341, 365, 9643, 13, 961, 385, 483, 646, 666, 8969, 4391, 293, 286, 478, 516, 51522], "temperature": 0.0, "avg_logprob": -0.11769816172208718, "compression_ratio": 1.808724832214765, "no_speech_prob": 0.0017006810521706939}, {"id": 147, "seek": 63844, "start": 661.6, "end": 666.96, "text": " to pipe all of this into sed this time. And we'll do sed-y because we may do", "tokens": [51522, 281, 11240, 439, 295, 341, 666, 9643, 341, 565, 13, 400, 321, 603, 360, 9643, 12, 88, 570, 321, 815, 360, 51790], "temperature": 0.0, "avg_logprob": -0.11769816172208718, "compression_ratio": 1.808724832214765, "no_speech_prob": 0.0017006810521706939}, {"id": 148, "seek": 66696, "start": 666.96, "end": 670.96, "text": " multiple sed statements. And then we're going to do single quotes S because we're", "tokens": [50364, 3866, 9643, 12363, 13, 400, 550, 321, 434, 516, 281, 360, 2167, 19963, 318, 570, 321, 434, 50564], "temperature": 0.0, "avg_logprob": -0.15403766955359507, "compression_ratio": 1.9751037344398341, "no_speech_prob": 0.0038242314476519823}, {"id": 149, "seek": 66696, "start": 670.96, "end": 674.24, "text": " going to do a substitution. What do I want to substitute? I want to substitute", "tokens": [50564, 516, 281, 360, 257, 35827, 13, 708, 360, 286, 528, 281, 15802, 30, 286, 528, 281, 15802, 50728], "temperature": 0.0, "avg_logprob": -0.15403766955359507, "compression_ratio": 1.9751037344398341, "no_speech_prob": 0.0038242314476519823}, {"id": 150, "seek": 66696, "start": 674.24, "end": 678.0, "text": " the carrot symbol which signifies the beginning of the line and then inside", "tokens": [50728, 264, 22767, 5986, 597, 1465, 11221, 264, 2863, 295, 264, 1622, 293, 550, 1854, 50916], "temperature": 0.0, "avg_logprob": -0.15403766955359507, "compression_ratio": 1.9751037344398341, "no_speech_prob": 0.0038242314476519823}, {"id": 151, "seek": 66696, "start": 678.0, "end": 683.4000000000001, "text": " brackets I want to do a space or tab and then the asterisk symbol. What this", "tokens": [50916, 26179, 286, 528, 281, 360, 257, 1901, 420, 4421, 293, 550, 264, 257, 3120, 7797, 5986, 13, 708, 341, 51186], "temperature": 0.0, "avg_logprob": -0.15403766955359507, "compression_ratio": 1.9751037344398341, "no_speech_prob": 0.0038242314476519823}, {"id": 152, "seek": 66696, "start": 683.4000000000001, "end": 687.0400000000001, "text": " signifies is find the beginning of the line. If everything at the beginning of", "tokens": [51186, 1465, 11221, 307, 915, 264, 2863, 295, 264, 1622, 13, 759, 1203, 412, 264, 2863, 295, 51368], "temperature": 0.0, "avg_logprob": -0.15403766955359507, "compression_ratio": 1.9751037344398341, "no_speech_prob": 0.0038242314476519823}, {"id": 153, "seek": 66696, "start": 687.0400000000001, "end": 692.6800000000001, "text": " the line is tabs or spaces, I want you to replace it with what? With nothing. And I", "tokens": [51368, 264, 1622, 307, 20743, 420, 7673, 11, 286, 528, 291, 281, 7406, 309, 365, 437, 30, 2022, 1825, 13, 400, 286, 51650], "temperature": 0.0, "avg_logprob": -0.15403766955359507, "compression_ratio": 1.9751037344398341, "no_speech_prob": 0.0038242314476519823}, {"id": 154, "seek": 69268, "start": 692.68, "end": 696.4, "text": " think that's really all I want to do there. So let me go ahead and write and", "tokens": [50364, 519, 300, 311, 534, 439, 286, 528, 281, 360, 456, 13, 407, 718, 385, 352, 2286, 293, 2464, 293, 50550], "temperature": 0.0, "avg_logprob": -0.14246054952458817, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0023966915905475616}, {"id": 155, "seek": 69268, "start": 696.4, "end": 701.2399999999999, "text": " then get back to the terminal and let's go ahead and rerun our script and see if", "tokens": [50550, 550, 483, 646, 281, 264, 14709, 293, 718, 311, 352, 2286, 293, 43819, 409, 527, 5755, 293, 536, 498, 50792], "temperature": 0.0, "avg_logprob": -0.14246054952458817, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0023966915905475616}, {"id": 156, "seek": 69268, "start": 701.2399999999999, "end": 705.0799999999999, "text": " that actually works. It did. It removed all of those leading spaces. To clean it", "tokens": [50792, 300, 767, 1985, 13, 467, 630, 13, 467, 7261, 439, 295, 729, 5775, 7673, 13, 1407, 2541, 309, 50984], "temperature": 0.0, "avg_logprob": -0.14246054952458817, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0023966915905475616}, {"id": 157, "seek": 69268, "start": 705.0799999999999, "end": 709.3199999999999, "text": " up a little further, I think I would want to get rid of the leading comma space on", "tokens": [50984, 493, 257, 707, 3052, 11, 286, 519, 286, 576, 528, 281, 483, 3973, 295, 264, 5775, 22117, 1901, 322, 51196], "temperature": 0.0, "avg_logprob": -0.14246054952458817, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0023966915905475616}, {"id": 158, "seek": 69268, "start": 709.3199999999999, "end": 714.16, "text": " each line as well. So let's get back to the script here. Let me get into insert", "tokens": [51196, 1184, 1622, 382, 731, 13, 407, 718, 311, 483, 646, 281, 264, 5755, 510, 13, 961, 385, 483, 666, 8969, 51438], "temperature": 0.0, "avg_logprob": -0.14246054952458817, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0023966915905475616}, {"id": 159, "seek": 69268, "start": 714.16, "end": 717.68, "text": " mode. I'm just going to do another dash-y. We're going to continue with sed", "tokens": [51438, 4391, 13, 286, 478, 445, 516, 281, 360, 1071, 8240, 12, 88, 13, 492, 434, 516, 281, 2354, 365, 9643, 51614], "temperature": 0.0, "avg_logprob": -0.14246054952458817, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0023966915905475616}, {"id": 160, "seek": 71768, "start": 717.68, "end": 722.64, "text": " substitutions here and then we're going to do a substitution for the comma space", "tokens": [50364, 26441, 3666, 510, 293, 550, 321, 434, 516, 281, 360, 257, 35827, 337, 264, 22117, 1901, 50612], "temperature": 0.0, "avg_logprob": -0.13685742604363824, "compression_ratio": 1.7818181818181817, "no_speech_prob": 0.012431319802999496}, {"id": 161, "seek": 71768, "start": 722.64, "end": 728.0799999999999, "text": " parentheses and then what we want to substitute that for is just parentheses", "tokens": [50612, 34153, 293, 550, 437, 321, 528, 281, 15802, 300, 337, 307, 445, 34153, 50884], "temperature": 0.0, "avg_logprob": -0.13685742604363824, "compression_ratio": 1.7818181818181817, "no_speech_prob": 0.012431319802999496}, {"id": 162, "seek": 71768, "start": 728.0799999999999, "end": 732.8, "text": " and then do the trailing slash at the end. And if I do colon w and then get", "tokens": [50884, 293, 550, 360, 264, 944, 4883, 17330, 412, 264, 917, 13, 400, 498, 286, 360, 8255, 261, 293, 550, 483, 51120], "temperature": 0.0, "avg_logprob": -0.13685742604363824, "compression_ratio": 1.7818181818181817, "no_speech_prob": 0.012431319802999496}, {"id": 163, "seek": 71768, "start": 732.8, "end": 738.0799999999999, "text": " back to the terminal and run that, that did not work because I obviously made a", "tokens": [51120, 646, 281, 264, 14709, 293, 1190, 300, 11, 300, 630, 406, 589, 570, 286, 2745, 1027, 257, 51384], "temperature": 0.0, "avg_logprob": -0.13685742604363824, "compression_ratio": 1.7818181818181817, "no_speech_prob": 0.012431319802999496}, {"id": 164, "seek": 71768, "start": 738.0799999999999, "end": 744.52, "text": " mistake here because I didn't add the backslash to signify a line break there.", "tokens": [51384, 6146, 510, 570, 286, 994, 380, 909, 264, 646, 10418, 1299, 281, 1465, 2505, 257, 1622, 1821, 456, 13, 51706], "temperature": 0.0, "avg_logprob": -0.13685742604363824, "compression_ratio": 1.7818181818181817, "no_speech_prob": 0.012431319802999496}, {"id": 165, "seek": 74452, "start": 744.52, "end": 748.88, "text": " So let me put that in its place and then go back to the terminal and rerun that", "tokens": [50364, 407, 718, 385, 829, 300, 294, 1080, 1081, 293, 550, 352, 646, 281, 264, 14709, 293, 43819, 409, 300, 50582], "temperature": 0.0, "avg_logprob": -0.13726366847014623, "compression_ratio": 1.7798507462686568, "no_speech_prob": 0.0006070686504244804}, {"id": 166, "seek": 74452, "start": 748.88, "end": 753.68, "text": " and now we get rid of the opening comma space that was at the beginning of each", "tokens": [50582, 293, 586, 321, 483, 3973, 295, 264, 5193, 22117, 1901, 300, 390, 412, 264, 2863, 295, 1184, 50822], "temperature": 0.0, "avg_logprob": -0.13726366847014623, "compression_ratio": 1.7798507462686568, "no_speech_prob": 0.0006070686504244804}, {"id": 167, "seek": 74452, "start": 753.68, "end": 758.04, "text": " line. Of course remember there is the one line that's not going to look right", "tokens": [50822, 1622, 13, 2720, 1164, 1604, 456, 307, 264, 472, 1622, 300, 311, 406, 516, 281, 574, 558, 51040], "temperature": 0.0, "avg_logprob": -0.13726366847014623, "compression_ratio": 1.7798507462686568, "no_speech_prob": 0.0006070686504244804}, {"id": 168, "seek": 74452, "start": 758.04, "end": 762.0, "text": " because the very beginning line had a bracket and of course we could take that", "tokens": [51040, 570, 264, 588, 2863, 1622, 632, 257, 16904, 293, 295, 1164, 321, 727, 747, 300, 51238], "temperature": 0.0, "avg_logprob": -0.13726366847014623, "compression_ratio": 1.7798507462686568, "no_speech_prob": 0.0006070686504244804}, {"id": 169, "seek": 74452, "start": 762.0, "end": 765.88, "text": " into account as well if I get back into the script. Once again let's go ahead", "tokens": [51238, 666, 2696, 382, 731, 498, 286, 483, 646, 666, 264, 5755, 13, 3443, 797, 718, 311, 352, 2286, 51432], "temperature": 0.0, "avg_logprob": -0.13726366847014623, "compression_ratio": 1.7798507462686568, "no_speech_prob": 0.0006070686504244804}, {"id": 170, "seek": 74452, "start": 765.88, "end": 771.36, "text": " and create a new line here and we'll do dash-e because we'll continue on with sed.", "tokens": [51432, 293, 1884, 257, 777, 1622, 510, 293, 321, 603, 360, 8240, 12, 68, 570, 321, 603, 2354, 322, 365, 9643, 13, 51706], "temperature": 0.0, "avg_logprob": -0.13726366847014623, "compression_ratio": 1.7798507462686568, "no_speech_prob": 0.0006070686504244804}, {"id": 171, "seek": 77136, "start": 771.52, "end": 775.84, "text": " This time what are we going to substitute? We are going to substitute an opening bracket", "tokens": [50372, 639, 565, 437, 366, 321, 516, 281, 15802, 30, 492, 366, 516, 281, 15802, 364, 5193, 16904, 50588], "temperature": 0.0, "avg_logprob": -0.18339630409523291, "compression_ratio": 1.8588235294117648, "no_speech_prob": 0.008847050368785858}, {"id": 172, "seek": 77136, "start": 775.84, "end": 781.2, "text": " space opening parentheses and we're going to substitute that with just opening", "tokens": [50588, 1901, 5193, 34153, 293, 321, 434, 516, 281, 15802, 300, 365, 445, 5193, 50856], "temperature": 0.0, "avg_logprob": -0.18339630409523291, "compression_ratio": 1.8588235294117648, "no_speech_prob": 0.008847050368785858}, {"id": 173, "seek": 77136, "start": 781.2, "end": 786.0, "text": " parentheses and then do the trailing slash emax. Annoyingly anytime you do", "tokens": [50856, 34153, 293, 550, 360, 264, 944, 4883, 17330, 308, 41167, 13, 8860, 939, 12163, 13038, 291, 360, 51096], "temperature": 0.0, "avg_logprob": -0.18339630409523291, "compression_ratio": 1.8588235294117648, "no_speech_prob": 0.008847050368785858}, {"id": 174, "seek": 77136, "start": 786.0, "end": 790.04, "text": " anything with brackets parentheses it likes to add the closing one which is", "tokens": [51096, 1340, 365, 26179, 34153, 309, 5902, 281, 909, 264, 10377, 472, 597, 307, 51298], "temperature": 0.0, "avg_logprob": -0.18339630409523291, "compression_ratio": 1.8588235294117648, "no_speech_prob": 0.008847050368785858}, {"id": 175, "seek": 77136, "start": 790.04, "end": 793.76, "text": " great sometimes but in this particular case it's actually getting in my way. I", "tokens": [51298, 869, 2171, 457, 294, 341, 1729, 1389, 309, 311, 767, 1242, 294, 452, 636, 13, 286, 51484], "temperature": 0.0, "avg_logprob": -0.18339630409523291, "compression_ratio": 1.8588235294117648, "no_speech_prob": 0.008847050368785858}, {"id": 176, "seek": 77136, "start": 793.76, "end": 798.36, "text": " can actually turn that off but I won't bother. And now when I run the script", "tokens": [51484, 393, 767, 1261, 300, 766, 457, 286, 1582, 380, 8677, 13, 400, 586, 562, 286, 1190, 264, 5755, 51714], "temperature": 0.0, "avg_logprob": -0.18339630409523291, "compression_ratio": 1.8588235294117648, "no_speech_prob": 0.008847050368785858}, {"id": 177, "seek": 79836, "start": 798.36, "end": 803.04, "text": " let's see if it fixes the very first line and now the very first line looks", "tokens": [50364, 718, 311, 536, 498, 309, 32539, 264, 588, 700, 1622, 293, 586, 264, 588, 700, 1622, 1542, 50598], "temperature": 0.0, "avg_logprob": -0.1311754739585043, "compression_ratio": 1.846774193548387, "no_speech_prob": 0.0032729129306972027}, {"id": 178, "seek": 79836, "start": 803.04, "end": 806.48, "text": " the same as the rest of the lines. Now one thing I don't like about this", "tokens": [50598, 264, 912, 382, 264, 1472, 295, 264, 3876, 13, 823, 472, 551, 286, 500, 380, 411, 466, 341, 50770], "temperature": 0.0, "avg_logprob": -0.1311754739585043, "compression_ratio": 1.846774193548387, "no_speech_prob": 0.0032729129306972027}, {"id": 179, "seek": 79836, "start": 806.48, "end": 811.88, "text": " gigantic list of key bindings is it's all one big block of text there's no real", "tokens": [50770, 26800, 1329, 295, 2141, 14786, 1109, 307, 309, 311, 439, 472, 955, 3461, 295, 2487, 456, 311, 572, 957, 51040], "temperature": 0.0, "avg_logprob": -0.1311754739585043, "compression_ratio": 1.846774193548387, "no_speech_prob": 0.0032729129306972027}, {"id": 180, "seek": 79836, "start": 811.88, "end": 817.48, "text": " breaks. One thing I would find interesting is if I could actually group the", "tokens": [51040, 9857, 13, 1485, 551, 286, 576, 915, 1880, 307, 498, 286, 727, 767, 1594, 264, 51320], "temperature": 0.0, "avg_logprob": -0.1311754739585043, "compression_ratio": 1.846774193548387, "no_speech_prob": 0.0032729129306972027}, {"id": 181, "seek": 79836, "start": 817.48, "end": 822.0, "text": " key bindings which I've grouped them in my config file right? I've grouped them", "tokens": [51320, 2141, 14786, 1109, 597, 286, 600, 41877, 552, 294, 452, 6662, 3991, 558, 30, 286, 600, 41877, 552, 51546], "temperature": 0.0, "avg_logprob": -0.1311754739585043, "compression_ratio": 1.846774193548387, "no_speech_prob": 0.0032729129306972027}, {"id": 182, "seek": 79836, "start": 822.0, "end": 826.8000000000001, "text": " by category for example all of the d-menu key bindings are in one section", "tokens": [51546, 538, 7719, 337, 1365, 439, 295, 264, 274, 12, 2558, 84, 2141, 14786, 1109, 366, 294, 472, 3541, 51786], "temperature": 0.0, "avg_logprob": -0.1311754739585043, "compression_ratio": 1.846774193548387, "no_speech_prob": 0.0032729129306972027}, {"id": 183, "seek": 82680, "start": 826.9599999999999, "end": 832.16, "text": " and all of the emax key bindings are in one section etc. And I want to keep that", "tokens": [50372, 293, 439, 295, 264, 308, 41167, 2141, 14786, 1109, 366, 294, 472, 3541, 5183, 13, 400, 286, 528, 281, 1066, 300, 50632], "temperature": 0.0, "avg_logprob": -0.16225527127583822, "compression_ratio": 1.7269372693726937, "no_speech_prob": 0.017984310165047646}, {"id": 184, "seek": 82680, "start": 832.16, "end": 836.1999999999999, "text": " and I would like those comments for the types of key bindings to actually be", "tokens": [50632, 293, 286, 576, 411, 729, 3053, 337, 264, 3467, 295, 2141, 14786, 1109, 281, 767, 312, 50834], "temperature": 0.0, "avg_logprob": -0.16225527127583822, "compression_ratio": 1.7269372693726937, "no_speech_prob": 0.017984310165047646}, {"id": 185, "seek": 82680, "start": 836.1999999999999, "end": 840.5999999999999, "text": " outputted as well. But remember we stripped out all the comments everything", "tokens": [50834, 5598, 14727, 382, 731, 13, 583, 1604, 321, 33221, 484, 439, 264, 3053, 1203, 51054], "temperature": 0.0, "avg_logprob": -0.16225527127583822, "compression_ratio": 1.7269372693726937, "no_speech_prob": 0.017984310165047646}, {"id": 186, "seek": 82680, "start": 840.5999999999999, "end": 844.16, "text": " that began with dash dash. But I think we could fix this if we just add a", "tokens": [51054, 300, 4283, 365, 8240, 8240, 13, 583, 286, 519, 321, 727, 3191, 341, 498, 321, 445, 909, 257, 51232], "temperature": 0.0, "avg_logprob": -0.16225527127583822, "compression_ratio": 1.7269372693726937, "no_speech_prob": 0.017984310165047646}, {"id": 187, "seek": 82680, "start": 844.16, "end": 848.4399999999999, "text": " specific string that we can you know do something with grip or said with later.", "tokens": [51232, 2685, 6798, 300, 321, 393, 291, 458, 360, 746, 365, 12007, 420, 848, 365, 1780, 13, 51446], "temperature": 0.0, "avg_logprob": -0.16225527127583822, "compression_ratio": 1.7269372693726937, "no_speech_prob": 0.017984310165047646}, {"id": 188, "seek": 82680, "start": 848.4399999999999, "end": 852.88, "text": " So once again I'll do all caps and I'll just create a tag essentially I'll do kb", "tokens": [51446, 407, 1564, 797, 286, 603, 360, 439, 13855, 293, 286, 603, 445, 1884, 257, 6162, 4476, 286, 603, 360, 350, 65, 51668], "temperature": 0.0, "avg_logprob": -0.16225527127583822, "compression_ratio": 1.7269372693726937, "no_speech_prob": 0.017984310165047646}, {"id": 189, "seek": 85288, "start": 852.88, "end": 858.08, "text": " for key binding underscore group. So these will be key binding groups here and", "tokens": [50364, 337, 2141, 17359, 37556, 1594, 13, 407, 613, 486, 312, 2141, 17359, 3935, 510, 293, 50624], "temperature": 0.0, "avg_logprob": -0.14512939453125, "compression_ratio": 1.8267716535433072, "no_speech_prob": 0.03732294961810112}, {"id": 190, "seek": 85288, "start": 858.08, "end": 862.76, "text": " then the name of the group in this case these are X-monad key bindings and I", "tokens": [50624, 550, 264, 1315, 295, 264, 1594, 294, 341, 1389, 613, 366, 1783, 12, 3317, 345, 2141, 14786, 1109, 293, 286, 50858], "temperature": 0.0, "avg_logprob": -0.14512939453125, "compression_ratio": 1.8267716535433072, "no_speech_prob": 0.03732294961810112}, {"id": 191, "seek": 85288, "start": 862.76, "end": 867.08, "text": " could go down here and do the same thing so once again I'll add kb underscore", "tokens": [50858, 727, 352, 760, 510, 293, 360, 264, 912, 551, 370, 1564, 797, 286, 603, 909, 350, 65, 37556, 51074], "temperature": 0.0, "avg_logprob": -0.14512939453125, "compression_ratio": 1.8267716535433072, "no_speech_prob": 0.03732294961810112}, {"id": 192, "seek": 85288, "start": 867.08, "end": 872.4, "text": " group. What I probably should do is just get into visual mode here and actually", "tokens": [51074, 1594, 13, 708, 286, 1391, 820, 360, 307, 445, 483, 666, 5056, 4391, 510, 293, 767, 51340], "temperature": 0.0, "avg_logprob": -0.14512939453125, "compression_ratio": 1.8267716535433072, "no_speech_prob": 0.03732294961810112}, {"id": 193, "seek": 85288, "start": 872.4, "end": 876.88, "text": " yank that and just copy it that way I can go down here and just paste it a", "tokens": [51340, 288, 657, 300, 293, 445, 5055, 309, 300, 636, 286, 393, 352, 760, 510, 293, 445, 9163, 309, 257, 51564], "temperature": 0.0, "avg_logprob": -0.14512939453125, "compression_ratio": 1.8267716535433072, "no_speech_prob": 0.03732294961810112}, {"id": 194, "seek": 85288, "start": 876.88, "end": 881.48, "text": " million times so that I've got each category here. I'm gonna write that I'm", "tokens": [51564, 2459, 1413, 370, 300, 286, 600, 658, 1184, 7719, 510, 13, 286, 478, 799, 2464, 300, 286, 478, 51794], "temperature": 0.0, "avg_logprob": -0.14512939453125, "compression_ratio": 1.8267716535433072, "no_speech_prob": 0.03732294961810112}, {"id": 195, "seek": 88148, "start": 881.48, "end": 885.4, "text": " not gonna go through and do it to every single group here I'll just do four of", "tokens": [50364, 406, 799, 352, 807, 293, 360, 309, 281, 633, 2167, 1594, 510, 286, 603, 445, 360, 1451, 295, 50560], "temperature": 0.0, "avg_logprob": -0.11332770091731374, "compression_ratio": 1.8379446640316206, "no_speech_prob": 0.0010649352334439754}, {"id": 196, "seek": 88148, "start": 885.4, "end": 889.28, "text": " them just to see if this actually works and then what I want to do is get back", "tokens": [50560, 552, 445, 281, 536, 498, 341, 767, 1985, 293, 550, 437, 286, 528, 281, 360, 307, 483, 646, 50754], "temperature": 0.0, "avg_logprob": -0.11332770091731374, "compression_ratio": 1.8379446640316206, "no_speech_prob": 0.0010649352334439754}, {"id": 197, "seek": 88148, "start": 889.28, "end": 893.6, "text": " into our script. What I want to do is I want to go back to where we were gripping", "tokens": [50754, 666, 527, 5755, 13, 708, 286, 528, 281, 360, 307, 286, 528, 281, 352, 646, 281, 689, 321, 645, 17865, 3759, 50970], "temperature": 0.0, "avg_logprob": -0.11332770091731374, "compression_ratio": 1.8379446640316206, "no_speech_prob": 0.0010649352334439754}, {"id": 198, "seek": 88148, "start": 893.6, "end": 897.9200000000001, "text": " with the dash E flag I want to create a new line let's do dash E one more time", "tokens": [50970, 365, 264, 8240, 462, 7166, 286, 528, 281, 1884, 257, 777, 1622, 718, 311, 360, 8240, 462, 472, 544, 565, 51186], "temperature": 0.0, "avg_logprob": -0.11332770091731374, "compression_ratio": 1.8379446640316206, "no_speech_prob": 0.0010649352334439754}, {"id": 199, "seek": 88148, "start": 897.9200000000001, "end": 903.44, "text": " this time I want to grip this particular string kb underscore group and", "tokens": [51186, 341, 565, 286, 528, 281, 12007, 341, 1729, 6798, 350, 65, 37556, 1594, 293, 51462], "temperature": 0.0, "avg_logprob": -0.11332770091731374, "compression_ratio": 1.8379446640316206, "no_speech_prob": 0.0010649352334439754}, {"id": 200, "seek": 88148, "start": 903.44, "end": 907.32, "text": " let's write that and let's go to the terminal run the script and now let's", "tokens": [51462, 718, 311, 2464, 300, 293, 718, 311, 352, 281, 264, 14709, 1190, 264, 5755, 293, 586, 718, 311, 51656], "temperature": 0.0, "avg_logprob": -0.11332770091731374, "compression_ratio": 1.8379446640316206, "no_speech_prob": 0.0010649352334439754}, {"id": 201, "seek": 90732, "start": 907.36, "end": 911.88, "text": " go back to the top of the document and see if that worked for us and it did not", "tokens": [50366, 352, 646, 281, 264, 1192, 295, 264, 4166, 293, 536, 498, 300, 2732, 337, 505, 293, 309, 630, 406, 50592], "temperature": 0.0, "avg_logprob": -0.1042708511352539, "compression_ratio": 1.8314176245210727, "no_speech_prob": 0.004609433468431234}, {"id": 202, "seek": 90732, "start": 911.88, "end": 918.36, "text": " so obviously we made a mistake there obviously I needed to add a pipe and then", "tokens": [50592, 370, 2745, 321, 1027, 257, 6146, 456, 2745, 286, 2978, 281, 909, 257, 11240, 293, 550, 50916], "temperature": 0.0, "avg_logprob": -0.1042708511352539, "compression_ratio": 1.8314176245210727, "no_speech_prob": 0.004609433468431234}, {"id": 203, "seek": 90732, "start": 918.36, "end": 922.44, "text": " of course let's make sure we get the line break there with the backslash let", "tokens": [50916, 295, 1164, 718, 311, 652, 988, 321, 483, 264, 1622, 1821, 456, 365, 264, 646, 10418, 1299, 718, 51120], "temperature": 0.0, "avg_logprob": -0.1042708511352539, "compression_ratio": 1.8314176245210727, "no_speech_prob": 0.004609433468431234}, {"id": 204, "seek": 90732, "start": 922.44, "end": 926.36, "text": " me write that again so that was just a dumb mistake on my part let's rerun the", "tokens": [51120, 385, 2464, 300, 797, 370, 300, 390, 445, 257, 10316, 6146, 322, 452, 644, 718, 311, 43819, 409, 264, 51316], "temperature": 0.0, "avg_logprob": -0.1042708511352539, "compression_ratio": 1.8314176245210727, "no_speech_prob": 0.004609433468431234}, {"id": 205, "seek": 90732, "start": 926.36, "end": 932.7600000000001, "text": " script and now we get an error the dash E command is not found so now we had the", "tokens": [51316, 5755, 293, 586, 321, 483, 364, 6713, 264, 8240, 462, 5622, 307, 406, 1352, 370, 586, 321, 632, 264, 51636], "temperature": 0.0, "avg_logprob": -0.1042708511352539, "compression_ratio": 1.8314176245210727, "no_speech_prob": 0.004609433468431234}, {"id": 206, "seek": 90732, "start": 932.7600000000001, "end": 937.0400000000001, "text": " pipe on this line that doesn't need to be there so we only need to pipe when we're", "tokens": [51636, 11240, 322, 341, 1622, 300, 1177, 380, 643, 281, 312, 456, 370, 321, 787, 643, 281, 11240, 562, 321, 434, 51850], "temperature": 0.0, "avg_logprob": -0.1042708511352539, "compression_ratio": 1.8314176245210727, "no_speech_prob": 0.004609433468431234}, {"id": 207, "seek": 93704, "start": 937.04, "end": 941.24, "text": " actually piping into grip or said we don't need a pipe symbol when we're", "tokens": [50364, 767, 35204, 666, 12007, 420, 848, 321, 500, 380, 643, 257, 11240, 5986, 562, 321, 434, 50574], "temperature": 0.0, "avg_logprob": -0.10109196912060987, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.0008295302977785468}, {"id": 208, "seek": 93704, "start": 941.24, "end": 947.48, "text": " just continuing on with dash E so now let's run the script the script actually", "tokens": [50574, 445, 9289, 322, 365, 8240, 462, 370, 586, 718, 311, 1190, 264, 5755, 264, 5755, 767, 50886], "temperature": 0.0, "avg_logprob": -0.10109196912060987, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.0008295302977785468}, {"id": 209, "seek": 93704, "start": 947.48, "end": 951.48, "text": " works this time let's see if we actually have the group headings the lines with", "tokens": [50886, 1985, 341, 565, 718, 311, 536, 498, 321, 767, 362, 264, 1594, 1378, 1109, 264, 3876, 365, 51086], "temperature": 0.0, "avg_logprob": -0.10109196912060987, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.0008295302977785468}, {"id": 210, "seek": 93704, "start": 951.48, "end": 956.4399999999999, "text": " the group names no we do not so we keep making mistakes but that's fine I leave", "tokens": [51086, 264, 1594, 5288, 572, 321, 360, 406, 370, 321, 1066, 1455, 8038, 457, 300, 311, 2489, 286, 1856, 51334], "temperature": 0.0, "avg_logprob": -0.10109196912060987, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.0008295302977785468}, {"id": 211, "seek": 93704, "start": 956.4399999999999, "end": 960.0, "text": " all the mistakes in the videos because that's part of learning is saying", "tokens": [51334, 439, 264, 8038, 294, 264, 2145, 570, 300, 311, 644, 295, 2539, 307, 1566, 51512], "temperature": 0.0, "avg_logprob": -0.10109196912060987, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.0008295302977785468}, {"id": 212, "seek": 93704, "start": 960.0, "end": 964.64, "text": " somebody screw up and you guys hopefully don't do this when you're doing your", "tokens": [51512, 2618, 5630, 493, 293, 291, 1074, 4696, 500, 380, 360, 341, 562, 291, 434, 884, 428, 51744], "temperature": 0.0, "avg_logprob": -0.10109196912060987, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.0008295302977785468}, {"id": 213, "seek": 96464, "start": 964.64, "end": 968.08, "text": " scripting but honestly when you're doing one of these scripts on the fly", "tokens": [50364, 5755, 278, 457, 6095, 562, 291, 434, 884, 472, 295, 613, 23294, 322, 264, 3603, 50536], "temperature": 0.0, "avg_logprob": -0.09703915579277173, "compression_ratio": 1.7665369649805447, "no_speech_prob": 0.02228311263024807}, {"id": 214, "seek": 96464, "start": 968.08, "end": 973.08, "text": " there's a lot of trial and error with them and looking at this I really think", "tokens": [50536, 456, 311, 257, 688, 295, 7308, 293, 6713, 365, 552, 293, 1237, 412, 341, 286, 534, 519, 50786], "temperature": 0.0, "avg_logprob": -0.09703915579277173, "compression_ratio": 1.7665369649805447, "no_speech_prob": 0.02228311263024807}, {"id": 215, "seek": 96464, "start": 973.08, "end": 976.56, "text": " this should have worked I'm not seeing the error the others you know when they", "tokens": [50786, 341, 820, 362, 2732, 286, 478, 406, 2577, 264, 6713, 264, 2357, 291, 458, 562, 436, 50960], "temperature": 0.0, "avg_logprob": -0.09703915579277173, "compression_ratio": 1.7665369649805447, "no_speech_prob": 0.02228311263024807}, {"id": 216, "seek": 96464, "start": 976.56, "end": 980.0, "text": " didn't work I obvious I immediately spotted the error but this looks like", "tokens": [50960, 994, 380, 589, 286, 6322, 286, 4258, 21010, 264, 6713, 457, 341, 1542, 411, 51132], "temperature": 0.0, "avg_logprob": -0.09703915579277173, "compression_ratio": 1.7665369649805447, "no_speech_prob": 0.02228311263024807}, {"id": 217, "seek": 96464, "start": 980.0, "end": 984.08, "text": " it should work so what I'm thinking yeah I know what it is I'm an idiot I", "tokens": [51132, 309, 820, 589, 370, 437, 286, 478, 1953, 1338, 286, 458, 437, 309, 307, 286, 478, 364, 14270, 286, 51336], "temperature": 0.0, "avg_logprob": -0.09703915579277173, "compression_ratio": 1.7665369649805447, "no_speech_prob": 0.02228311263024807}, {"id": 218, "seek": 96464, "start": 984.08, "end": 989.84, "text": " changed my config file I didn't write it and then I need to run a org babble", "tokens": [51336, 3105, 452, 6662, 3991, 286, 994, 380, 2464, 309, 293, 550, 286, 643, 281, 1190, 257, 14045, 7564, 638, 51624], "temperature": 0.0, "avg_logprob": -0.09703915579277173, "compression_ratio": 1.7665369649805447, "no_speech_prob": 0.02228311263024807}, {"id": 219, "seek": 98984, "start": 989.84, "end": 995.52, "text": " tangle to have that output to Xmonad.hs and I'm betting now the script", "tokens": [50364, 256, 7846, 281, 362, 300, 5598, 281, 1783, 3317, 345, 13, 71, 82, 293, 286, 478, 34246, 586, 264, 5755, 50648], "temperature": 0.0, "avg_logprob": -0.16729349408830915, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.27192220091819763}, {"id": 220, "seek": 98984, "start": 995.52, "end": 1001.36, "text": " actually works if I go back here and run the script and let me scroll back up", "tokens": [50648, 767, 1985, 498, 286, 352, 646, 510, 293, 1190, 264, 5755, 293, 718, 385, 11369, 646, 493, 50940], "temperature": 0.0, "avg_logprob": -0.16729349408830915, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.27192220091819763}, {"id": 221, "seek": 98984, "start": 1001.36, "end": 1007.9200000000001, "text": " and now yeah we actually get the group name Xmonad run prompt other D menu", "tokens": [50940, 293, 586, 1338, 321, 767, 483, 264, 1594, 1315, 1783, 3317, 345, 1190, 12391, 661, 413, 6510, 51268], "temperature": 0.0, "avg_logprob": -0.16729349408830915, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.27192220091819763}, {"id": 222, "seek": 98984, "start": 1007.9200000000001, "end": 1012.84, "text": " prompts of course we also get dash dash KB group so now what we need to do is get", "tokens": [51268, 41095, 295, 1164, 321, 611, 483, 8240, 8240, 591, 33, 1594, 370, 586, 437, 321, 643, 281, 360, 307, 483, 51514], "temperature": 0.0, "avg_logprob": -0.16729349408830915, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.27192220091819763}, {"id": 223, "seek": 98984, "start": 1012.84, "end": 1018.52, "text": " into the script and what we need to do is get rid of dash dash space KB group", "tokens": [51514, 666, 264, 5755, 293, 437, 321, 643, 281, 360, 307, 483, 3973, 295, 8240, 8240, 1901, 591, 33, 1594, 51798], "temperature": 0.0, "avg_logprob": -0.16729349408830915, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.27192220091819763}, {"id": 224, "seek": 101852, "start": 1018.52, "end": 1022.72, "text": " on those lines I think how I want to play that is I'm just gonna go ahead and", "tokens": [50364, 322, 729, 3876, 286, 519, 577, 286, 528, 281, 862, 300, 307, 286, 478, 445, 799, 352, 2286, 293, 50574], "temperature": 0.0, "avg_logprob": -0.14800214352815047, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.009124907664954662}, {"id": 225, "seek": 101852, "start": 1022.72, "end": 1027.56, "text": " do this with SID so I'm gonna add the backslash for line break just continue", "tokens": [50574, 360, 341, 365, 318, 2777, 370, 286, 478, 799, 909, 264, 646, 10418, 1299, 337, 1622, 1821, 445, 2354, 50816], "temperature": 0.0, "avg_logprob": -0.14800214352815047, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.009124907664954662}, {"id": 226, "seek": 101852, "start": 1027.56, "end": 1032.08, "text": " on dash E here and then inside single quotes we'll do a substitution again", "tokens": [50816, 322, 8240, 462, 510, 293, 550, 1854, 2167, 19963, 321, 603, 360, 257, 35827, 797, 51042], "temperature": 0.0, "avg_logprob": -0.14800214352815047, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.009124907664954662}, {"id": 227, "seek": 101852, "start": 1032.08, "end": 1036.8, "text": " what am I substituting I'm gonna substitute dash dash space KB underscore", "tokens": [51042, 437, 669, 286, 26441, 10861, 286, 478, 799, 15802, 8240, 8240, 1901, 591, 33, 37556, 51278], "temperature": 0.0, "avg_logprob": -0.14800214352815047, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.009124907664954662}, {"id": 228, "seek": 101852, "start": 1036.8, "end": 1042.2, "text": " group space because I want to get rid of the space after KB underscore group as", "tokens": [51278, 1594, 1901, 570, 286, 528, 281, 483, 3973, 295, 264, 1901, 934, 591, 33, 37556, 1594, 382, 51548], "temperature": 0.0, "avg_logprob": -0.14800214352815047, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.009124907664954662}, {"id": 229, "seek": 101852, "start": 1042.2, "end": 1045.84, "text": " well and then slash and then what do I want to replace this with I actually", "tokens": [51548, 731, 293, 550, 17330, 293, 550, 437, 360, 286, 528, 281, 7406, 341, 365, 286, 767, 51730], "temperature": 0.0, "avg_logprob": -0.14800214352815047, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.009124907664954662}, {"id": 230, "seek": 104584, "start": 1045.8799999999999, "end": 1051.0, "text": " want to replace it could I replace it with a new line slash let's see that if", "tokens": [50366, 528, 281, 7406, 309, 727, 286, 7406, 309, 365, 257, 777, 1622, 17330, 718, 311, 536, 300, 498, 50622], "temperature": 0.0, "avg_logprob": -0.1297694567976327, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.010327542200684547}, {"id": 231, "seek": 104584, "start": 1051.0, "end": 1055.1999999999998, "text": " that works I'm gonna write that let's go ahead and get back to the terminal and", "tokens": [50622, 300, 1985, 286, 478, 799, 2464, 300, 718, 311, 352, 2286, 293, 483, 646, 281, 264, 14709, 293, 50832], "temperature": 0.0, "avg_logprob": -0.1297694567976327, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.010327542200684547}, {"id": 232, "seek": 104584, "start": 1055.1999999999998, "end": 1060.36, "text": " run that and see how that looks scroll back up and that looks really really", "tokens": [50832, 1190, 300, 293, 536, 577, 300, 1542, 11369, 646, 493, 293, 300, 1542, 534, 534, 51090], "temperature": 0.0, "avg_logprob": -0.1297694567976327, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.010327542200684547}, {"id": 233, "seek": 104584, "start": 1060.36, "end": 1066.32, "text": " nice right because I added a line break before the group name and one thing I", "tokens": [51090, 1481, 558, 570, 286, 3869, 257, 1622, 1821, 949, 264, 1594, 1315, 293, 472, 551, 286, 51388], "temperature": 0.0, "avg_logprob": -0.1297694567976327, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.010327542200684547}, {"id": 234, "seek": 104584, "start": 1066.32, "end": 1070.4399999999998, "text": " don't like is I don't like that I have the comma separating the key binding from", "tokens": [51388, 500, 380, 411, 307, 286, 500, 380, 411, 300, 286, 362, 264, 22117, 29279, 264, 2141, 17359, 490, 51594], "temperature": 0.0, "avg_logprob": -0.1297694567976327, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.010327542200684547}, {"id": 235, "seek": 104584, "start": 1070.4399999999998, "end": 1074.1599999999999, "text": " the command it runs I'd rather that not be a comma I want it something more", "tokens": [51594, 264, 5622, 309, 6676, 286, 1116, 2831, 300, 406, 312, 257, 22117, 286, 528, 309, 746, 544, 51780], "temperature": 0.0, "avg_logprob": -0.1297694567976327, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.010327542200684547}, {"id": 236, "seek": 107416, "start": 1074.76, "end": 1078.0, "text": " something that stands out a little bit more visually I think I'd rather change", "tokens": [50394, 746, 300, 7382, 484, 257, 707, 857, 544, 19622, 286, 519, 286, 1116, 2831, 1319, 50556], "temperature": 0.0, "avg_logprob": -0.11038047343760997, "compression_ratio": 1.9658119658119657, "no_speech_prob": 0.0010986883426085114}, {"id": 237, "seek": 107416, "start": 1078.0, "end": 1082.3600000000001, "text": " that maybe to a colon so let me get back into the script and what I'm gonna do", "tokens": [50556, 300, 1310, 281, 257, 8255, 370, 718, 385, 483, 646, 666, 264, 5755, 293, 437, 286, 478, 799, 360, 50774], "temperature": 0.0, "avg_logprob": -0.11038047343760997, "compression_ratio": 1.9658119658119657, "no_speech_prob": 0.0010986883426085114}, {"id": 238, "seek": 107416, "start": 1082.3600000000001, "end": 1087.1200000000001, "text": " is I'm just gonna go ahead and add another said substitution so let's go", "tokens": [50774, 307, 286, 478, 445, 799, 352, 2286, 293, 909, 1071, 848, 35827, 370, 718, 311, 352, 51012], "temperature": 0.0, "avg_logprob": -0.11038047343760997, "compression_ratio": 1.9658119658119657, "no_speech_prob": 0.0010986883426085114}, {"id": 239, "seek": 107416, "start": 1087.1200000000001, "end": 1092.0, "text": " ahead and substitute a double quote comma space because that was the pattern", "tokens": [51012, 2286, 293, 15802, 257, 3834, 6513, 22117, 1901, 570, 300, 390, 264, 5102, 51256], "temperature": 0.0, "avg_logprob": -0.11038047343760997, "compression_ratio": 1.9658119658119657, "no_speech_prob": 0.0010986883426085114}, {"id": 240, "seek": 107416, "start": 1092.0, "end": 1097.64, "text": " and I would rather that be a double quote space colon space and then I'm gonna", "tokens": [51256, 293, 286, 576, 2831, 300, 312, 257, 3834, 6513, 1901, 8255, 1901, 293, 550, 286, 478, 799, 51538], "temperature": 0.0, "avg_logprob": -0.11038047343760997, "compression_ratio": 1.9658119658119657, "no_speech_prob": 0.0010986883426085114}, {"id": 241, "seek": 107416, "start": 1097.64, "end": 1102.6000000000001, "text": " do the trailing slash and then the trailing single quote and let's see if", "tokens": [51538, 360, 264, 944, 4883, 17330, 293, 550, 264, 944, 4883, 2167, 6513, 293, 718, 311, 536, 498, 51786], "temperature": 0.0, "avg_logprob": -0.11038047343760997, "compression_ratio": 1.9658119658119657, "no_speech_prob": 0.0010986883426085114}, {"id": 242, "seek": 110260, "start": 1102.6399999999999, "end": 1107.6, "text": " that actually works for so let me rerun the script and yeah I think that is a", "tokens": [50366, 300, 767, 1985, 337, 370, 718, 385, 43819, 409, 264, 5755, 293, 1338, 286, 519, 300, 307, 257, 50614], "temperature": 0.0, "avg_logprob": -0.13444011442122922, "compression_ratio": 1.8009259259259258, "no_speech_prob": 0.0015011458890512586}, {"id": 243, "seek": 110260, "start": 1107.6, "end": 1112.1999999999998, "text": " little bit more easier to read I think that visually that stands out a little", "tokens": [50614, 707, 857, 544, 3571, 281, 1401, 286, 519, 300, 19622, 300, 7382, 484, 257, 707, 50844], "temperature": 0.0, "avg_logprob": -0.13444011442122922, "compression_ratio": 1.8009259259259258, "no_speech_prob": 0.0015011458890512586}, {"id": 244, "seek": 110260, "start": 1112.1999999999998, "end": 1115.52, "text": " more than having that comma right behind the double quotes now we have space", "tokens": [50844, 544, 813, 1419, 300, 22117, 558, 2261, 264, 3834, 19963, 586, 321, 362, 1901, 51010], "temperature": 0.0, "avg_logprob": -0.13444011442122922, "compression_ratio": 1.8009259259259258, "no_speech_prob": 0.0015011458890512586}, {"id": 245, "seek": 110260, "start": 1115.52, "end": 1120.36, "text": " colon space and if I wanted this to line up even better what I could do is I", "tokens": [51010, 8255, 1901, 293, 498, 286, 1415, 341, 281, 1622, 493, 754, 1101, 437, 286, 727, 360, 307, 286, 51252], "temperature": 0.0, "avg_logprob": -0.13444011442122922, "compression_ratio": 1.8009259259259258, "no_speech_prob": 0.0015011458890512586}, {"id": 246, "seek": 110260, "start": 1120.36, "end": 1126.56, "text": " can actually change the space I could do something like a change the space to a", "tokens": [51252, 393, 767, 1319, 264, 1901, 286, 727, 360, 746, 411, 257, 1319, 264, 1901, 281, 257, 51562], "temperature": 0.0, "avg_logprob": -0.13444011442122922, "compression_ratio": 1.8009259259259258, "no_speech_prob": 0.0015011458890512586}, {"id": 247, "seek": 112656, "start": 1126.8, "end": 1133.0, "text": " tab and let's see how that looks rerun the script and yeah and now that's", "tokens": [50376, 4421, 293, 718, 311, 536, 577, 300, 1542, 43819, 409, 264, 5755, 293, 1338, 293, 586, 300, 311, 50686], "temperature": 0.0, "avg_logprob": -0.12313141332608517, "compression_ratio": 1.7874015748031495, "no_speech_prob": 0.011686350218951702}, {"id": 248, "seek": 112656, "start": 1133.0, "end": 1136.76, "text": " even better as far as visually separating the key binding from the", "tokens": [50686, 754, 1101, 382, 1400, 382, 19622, 29279, 264, 2141, 17359, 490, 264, 50874], "temperature": 0.0, "avg_logprob": -0.12313141332608517, "compression_ratio": 1.7874015748031495, "no_speech_prob": 0.011686350218951702}, {"id": 249, "seek": 112656, "start": 1136.76, "end": 1140.36, "text": " commands now the next thing I want to do is I don't want this information to", "tokens": [50874, 16901, 586, 264, 958, 551, 286, 528, 281, 360, 307, 286, 500, 380, 528, 341, 1589, 281, 51054], "temperature": 0.0, "avg_logprob": -0.12313141332608517, "compression_ratio": 1.7874015748031495, "no_speech_prob": 0.011686350218951702}, {"id": 250, "seek": 112656, "start": 1140.36, "end": 1145.32, "text": " have to always be output in a terminal I would rather this output in a graphical", "tokens": [51054, 362, 281, 1009, 312, 5598, 294, 257, 14709, 286, 576, 2831, 341, 5598, 294, 257, 35942, 51302], "temperature": 0.0, "avg_logprob": -0.12313141332608517, "compression_ratio": 1.7874015748031495, "no_speech_prob": 0.011686350218951702}, {"id": 251, "seek": 112656, "start": 1145.32, "end": 1151.0, "text": " window a dialogue box and on Linux the most common dialogue box program is a", "tokens": [51302, 4910, 257, 10221, 2424, 293, 322, 18734, 264, 881, 2689, 10221, 2424, 1461, 307, 257, 51586], "temperature": 0.0, "avg_logprob": -0.12313141332608517, "compression_ratio": 1.7874015748031495, "no_speech_prob": 0.011686350218951702}, {"id": 252, "seek": 112656, "start": 1151.0, "end": 1155.04, "text": " program called yet which stands for yet another dialogue and what I'm gonna do", "tokens": [51586, 1461, 1219, 1939, 597, 7382, 337, 1939, 1071, 10221, 293, 437, 286, 478, 799, 360, 51788], "temperature": 0.0, "avg_logprob": -0.12313141332608517, "compression_ratio": 1.7874015748031495, "no_speech_prob": 0.011686350218951702}, {"id": 253, "seek": 115504, "start": 1155.04, "end": 1159.6399999999999, "text": " is we're just gonna pipe all of this information and let me go ahead and add", "tokens": [50364, 307, 321, 434, 445, 799, 11240, 439, 295, 341, 1589, 293, 718, 385, 352, 2286, 293, 909, 50594], "temperature": 0.0, "avg_logprob": -0.11938556442912827, "compression_ratio": 1.8943089430894309, "no_speech_prob": 0.037314098328351974}, {"id": 254, "seek": 115504, "start": 1159.6399999999999, "end": 1162.96, "text": " the pipe symbol and I'll go ahead and create a line break as well I'm gonna", "tokens": [50594, 264, 11240, 5986, 293, 286, 603, 352, 2286, 293, 1884, 257, 1622, 1821, 382, 731, 286, 478, 799, 50760], "temperature": 0.0, "avg_logprob": -0.11938556442912827, "compression_ratio": 1.8943089430894309, "no_speech_prob": 0.037314098328351974}, {"id": 255, "seek": 115504, "start": 1162.96, "end": 1169.52, "text": " pipe this into yet dash dash text dash info and that is the type of box we're", "tokens": [50760, 11240, 341, 666, 1939, 8240, 8240, 2487, 8240, 13614, 293, 300, 307, 264, 2010, 295, 2424, 321, 434, 51088], "temperature": 0.0, "avg_logprob": -0.11938556442912827, "compression_ratio": 1.8943089430894309, "no_speech_prob": 0.037314098328351974}, {"id": 256, "seek": 115504, "start": 1169.52, "end": 1174.24, "text": " creating with the yet dialogue box program is it's a text info box because", "tokens": [51088, 4084, 365, 264, 1939, 10221, 2424, 1461, 307, 309, 311, 257, 2487, 13614, 2424, 570, 51324], "temperature": 0.0, "avg_logprob": -0.11938556442912827, "compression_ratio": 1.8943089430894309, "no_speech_prob": 0.037314098328351974}, {"id": 257, "seek": 115504, "start": 1174.24, "end": 1178.76, "text": " there's a whole bunch of windows you can create with yet you can create message", "tokens": [51324, 456, 311, 257, 1379, 3840, 295, 9309, 291, 393, 1884, 365, 1939, 291, 393, 1884, 3636, 51550], "temperature": 0.0, "avg_logprob": -0.11938556442912827, "compression_ratio": 1.8943089430894309, "no_speech_prob": 0.037314098328351974}, {"id": 258, "seek": 115504, "start": 1178.76, "end": 1183.72, "text": " windows and and things like that so I'm gonna go ahead and do a colon W to write", "tokens": [51550, 9309, 293, 293, 721, 411, 300, 370, 286, 478, 799, 352, 2286, 293, 360, 257, 8255, 343, 281, 2464, 51798], "temperature": 0.0, "avg_logprob": -0.11938556442912827, "compression_ratio": 1.8943089430894309, "no_speech_prob": 0.037314098328351974}, {"id": 259, "seek": 118372, "start": 1183.76, "end": 1188.16, "text": " that and then go back to the terminal and now run the script and it opens this", "tokens": [50366, 300, 293, 550, 352, 646, 281, 264, 14709, 293, 586, 1190, 264, 5755, 293, 309, 9870, 341, 50586], "temperature": 0.0, "avg_logprob": -0.10305824436125208, "compression_ratio": 1.900398406374502, "no_speech_prob": 0.0010986791457980871}, {"id": 260, "seek": 118372, "start": 1188.16, "end": 1192.44, "text": " yet dialogue box it opens it full screen because we were in full screen mode but", "tokens": [50586, 1939, 10221, 2424, 309, 9870, 309, 1577, 2568, 570, 321, 645, 294, 1577, 2568, 4391, 457, 50800], "temperature": 0.0, "avg_logprob": -0.10305824436125208, "compression_ratio": 1.900398406374502, "no_speech_prob": 0.0010986791457980871}, {"id": 261, "seek": 118372, "start": 1192.44, "end": 1196.96, "text": " if I was in tiling mode it would just be a standard tiling window now I don't", "tokens": [50800, 498, 286, 390, 294, 256, 4883, 4391, 309, 576, 445, 312, 257, 3832, 256, 4883, 4910, 586, 286, 500, 380, 51026], "temperature": 0.0, "avg_logprob": -0.10305824436125208, "compression_ratio": 1.900398406374502, "no_speech_prob": 0.0010986791457980871}, {"id": 262, "seek": 118372, "start": 1196.96, "end": 1201.3600000000001, "text": " want that to actually be tiling I don't want it to be full screen either what I", "tokens": [51026, 528, 300, 281, 767, 312, 256, 4883, 286, 500, 380, 528, 309, 281, 312, 1577, 2568, 2139, 437, 286, 51246], "temperature": 0.0, "avg_logprob": -0.10305824436125208, "compression_ratio": 1.900398406374502, "no_speech_prob": 0.0010986791457980871}, {"id": 263, "seek": 118372, "start": 1201.3600000000001, "end": 1207.0, "text": " would like is I would like to have that open at a specific size and centered on", "tokens": [51246, 576, 411, 307, 286, 576, 411, 281, 362, 300, 1269, 412, 257, 2685, 2744, 293, 18988, 322, 51528], "temperature": 0.0, "avg_logprob": -0.10305824436125208, "compression_ratio": 1.900398406374502, "no_speech_prob": 0.0010986791457980871}, {"id": 264, "seek": 118372, "start": 1207.0, "end": 1211.64, "text": " the screen so what I'm gonna do is I'm gonna get back into insert mode here and", "tokens": [51528, 264, 2568, 370, 437, 286, 478, 799, 360, 307, 286, 478, 799, 483, 646, 666, 8969, 4391, 510, 293, 51760], "temperature": 0.0, "avg_logprob": -0.10305824436125208, "compression_ratio": 1.900398406374502, "no_speech_prob": 0.0010986791457980871}, {"id": 265, "seek": 121164, "start": 1211.64, "end": 1214.5200000000002, "text": " another thing I want to do is I want to change the colors because I didn't like", "tokens": [50364, 1071, 551, 286, 528, 281, 360, 307, 286, 528, 281, 1319, 264, 4577, 570, 286, 994, 380, 411, 50508], "temperature": 0.0, "avg_logprob": -0.1405867050433981, "compression_ratio": 1.9153225806451613, "no_speech_prob": 0.001700616325251758}, {"id": 266, "seek": 121164, "start": 1214.5200000000002, "end": 1220.8000000000002, "text": " the GTK color scheme of those windows I'd rather it respect kind of like my emacs", "tokens": [50508, 264, 17530, 42, 2017, 12232, 295, 729, 9309, 286, 1116, 2831, 309, 3104, 733, 295, 411, 452, 846, 44937, 50822], "temperature": 0.0, "avg_logprob": -0.1405867050433981, "compression_ratio": 1.9153225806451613, "no_speech_prob": 0.001700616325251758}, {"id": 267, "seek": 121164, "start": 1220.8000000000002, "end": 1225.8000000000002, "text": " color scheme or my terminal color scheme and in this program yet you can", "tokens": [50822, 2017, 12232, 420, 452, 14709, 2017, 12232, 293, 294, 341, 1461, 1939, 291, 393, 51072], "temperature": 0.0, "avg_logprob": -0.1405867050433981, "compression_ratio": 1.9153225806451613, "no_speech_prob": 0.001700616325251758}, {"id": 268, "seek": 121164, "start": 1225.8000000000002, "end": 1230.0, "text": " actually specify a background color and a foreground color so I could do dash dash", "tokens": [51072, 767, 16500, 257, 3678, 2017, 293, 257, 32058, 2017, 370, 286, 727, 360, 8240, 8240, 51282], "temperature": 0.0, "avg_logprob": -0.1405867050433981, "compression_ratio": 1.9153225806451613, "no_speech_prob": 0.001700616325251758}, {"id": 269, "seek": 121164, "start": 1230.0, "end": 1236.0, "text": " back equals and then give it a background color I'm gonna do 282c34 that's the", "tokens": [51282, 646, 6915, 293, 550, 976, 309, 257, 3678, 2017, 286, 478, 799, 360, 7562, 17, 66, 12249, 300, 311, 264, 51582], "temperature": 0.0, "avg_logprob": -0.1405867050433981, "compression_ratio": 1.9153225806451613, "no_speech_prob": 0.001700616325251758}, {"id": 270, "seek": 121164, "start": 1236.0, "end": 1239.96, "text": " background color that I use in emacs and in my terminal color schemes and then", "tokens": [51582, 3678, 2017, 300, 286, 764, 294, 846, 44937, 293, 294, 452, 14709, 2017, 26954, 293, 550, 51780], "temperature": 0.0, "avg_logprob": -0.1405867050433981, "compression_ratio": 1.9153225806451613, "no_speech_prob": 0.001700616325251758}, {"id": 271, "seek": 123996, "start": 1239.96, "end": 1244.52, "text": " I'm gonna do dash dash four equals for a foreground color and for that I'm gonna", "tokens": [50364, 286, 478, 799, 360, 8240, 8240, 1451, 6915, 337, 257, 32058, 2017, 293, 337, 300, 286, 478, 799, 50592], "temperature": 0.0, "avg_logprob": -0.13523367735055777, "compression_ratio": 1.8066037735849056, "no_speech_prob": 0.0017545213922858238}, {"id": 272, "seek": 123996, "start": 1244.52, "end": 1253.44, "text": " do 46d9ff and then what I want to do is do dash dash geometry equals and I", "tokens": [50592, 360, 17835, 67, 24, 602, 293, 550, 437, 286, 528, 281, 360, 307, 360, 8240, 8240, 18426, 6915, 293, 286, 51038], "temperature": 0.0, "avg_logprob": -0.13523367735055777, "compression_ratio": 1.8066037735849056, "no_speech_prob": 0.0017545213922858238}, {"id": 273, "seek": 123996, "start": 1253.44, "end": 1259.48, "text": " want this to be 1200 pixels by 800 pixels in size and then let me do colon", "tokens": [51038, 528, 341, 281, 312, 29139, 18668, 538, 13083, 18668, 294, 2744, 293, 550, 718, 385, 360, 8255, 51340], "temperature": 0.0, "avg_logprob": -0.13523367735055777, "compression_ratio": 1.8066037735849056, "no_speech_prob": 0.0017545213922858238}, {"id": 274, "seek": 123996, "start": 1259.48, "end": 1265.0, "text": " W to write that and then let me go ahead and run that and see how that looks it's", "tokens": [51340, 343, 281, 2464, 300, 293, 550, 718, 385, 352, 2286, 293, 1190, 300, 293, 536, 577, 300, 1542, 309, 311, 51616], "temperature": 0.0, "avg_logprob": -0.13523367735055777, "compression_ratio": 1.8066037735849056, "no_speech_prob": 0.0017545213922858238}, {"id": 275, "seek": 123996, "start": 1265.0, "end": 1269.64, "text": " still full screen if I was in tiling mode it would still be tiling the", "tokens": [51616, 920, 1577, 2568, 498, 286, 390, 294, 256, 4883, 4391, 309, 576, 920, 312, 256, 4883, 264, 51848], "temperature": 0.0, "avg_logprob": -0.13523367735055777, "compression_ratio": 1.8066037735849056, "no_speech_prob": 0.0017545213922858238}, {"id": 276, "seek": 126964, "start": 1269.64, "end": 1274.4, "text": " problem here is you know setting the geometry works fine if we were in a", "tokens": [50364, 1154, 510, 307, 291, 458, 3287, 264, 18426, 1985, 2489, 498, 321, 645, 294, 257, 50602], "temperature": 0.0, "avg_logprob": -0.10668942758015224, "compression_ratio": 1.8346774193548387, "no_speech_prob": 0.00017952513007912785}, {"id": 277, "seek": 126964, "start": 1274.4, "end": 1278.5200000000002, "text": " floating window manager but a tiling window manager always forces things to", "tokens": [50602, 12607, 4910, 6598, 457, 257, 256, 4883, 4910, 6598, 1009, 5874, 721, 281, 50808], "temperature": 0.0, "avg_logprob": -0.10668942758015224, "compression_ratio": 1.8346774193548387, "no_speech_prob": 0.00017952513007912785}, {"id": 278, "seek": 126964, "start": 1278.5200000000002, "end": 1282.8400000000001, "text": " tile so this is not a problem with the script necessarily it's a problem with", "tokens": [50808, 20590, 370, 341, 307, 406, 257, 1154, 365, 264, 5755, 4725, 309, 311, 257, 1154, 365, 51024], "temperature": 0.0, "avg_logprob": -0.10668942758015224, "compression_ratio": 1.8346774193548387, "no_speech_prob": 0.00017952513007912785}, {"id": 279, "seek": 126964, "start": 1282.8400000000001, "end": 1288.2800000000002, "text": " my Xmonad config I need to set a window rule that all YAD windows are floating", "tokens": [51024, 452, 1783, 3317, 345, 6662, 286, 643, 281, 992, 257, 4910, 4978, 300, 439, 398, 6112, 9309, 366, 12607, 51296], "temperature": 0.0, "avg_logprob": -0.10668942758015224, "compression_ratio": 1.8346774193548387, "no_speech_prob": 0.00017952513007912785}, {"id": 280, "seek": 126964, "start": 1288.2800000000002, "end": 1292.64, "text": " so what I need to do is get into my Xmonad config and then I'm gonna page", "tokens": [51296, 370, 437, 286, 643, 281, 360, 307, 483, 666, 452, 1783, 3317, 345, 6662, 293, 550, 286, 478, 799, 3028, 51514], "temperature": 0.0, "avg_logprob": -0.10668942758015224, "compression_ratio": 1.8346774193548387, "no_speech_prob": 0.00017952513007912785}, {"id": 281, "seek": 126964, "start": 1292.64, "end": 1297.3600000000001, "text": " up to where I have some window rules settings and you see things like class", "tokens": [51514, 493, 281, 689, 286, 362, 512, 4910, 4474, 6257, 293, 291, 536, 721, 411, 1508, 51750], "temperature": 0.0, "avg_logprob": -0.10668942758015224, "compression_ratio": 1.8346774193548387, "no_speech_prob": 0.00017952513007912785}, {"id": 282, "seek": 129736, "start": 1297.4399999999998, "end": 1302.36, "text": " name equals and then the name of the the windows and then do float these are", "tokens": [50368, 1315, 6915, 293, 550, 264, 1315, 295, 264, 264, 9309, 293, 550, 360, 15706, 613, 366, 50614], "temperature": 0.0, "avg_logprob": -0.120211669921875, "compression_ratio": 2.0303030303030303, "no_speech_prob": 0.014500881545245647}, {"id": 283, "seek": 129736, "start": 1302.36, "end": 1306.4799999999998, "text": " all the windows that I want to always be floating such as gimp for example class", "tokens": [50614, 439, 264, 9309, 300, 286, 528, 281, 1009, 312, 12607, 1270, 382, 290, 8814, 337, 1365, 1508, 50820], "temperature": 0.0, "avg_logprob": -0.120211669921875, "compression_ratio": 2.0303030303030303, "no_speech_prob": 0.014500881545245647}, {"id": 284, "seek": 129736, "start": 1306.4799999999998, "end": 1311.36, "text": " name equals gimp do float so I'm just gonna go in here and I'm gonna YY to", "tokens": [50820, 1315, 6915, 290, 8814, 360, 15706, 370, 286, 478, 445, 799, 352, 294, 510, 293, 286, 478, 799, 398, 56, 281, 51064], "temperature": 0.0, "avg_logprob": -0.120211669921875, "compression_ratio": 2.0303030303030303, "no_speech_prob": 0.014500881545245647}, {"id": 285, "seek": 129736, "start": 1311.36, "end": 1316.1599999999999, "text": " copy and P to paste and then I'm gonna create class name equals and I'm gonna", "tokens": [51064, 5055, 293, 430, 281, 9163, 293, 550, 286, 478, 799, 1884, 1508, 1315, 6915, 293, 286, 478, 799, 51304], "temperature": 0.0, "avg_logprob": -0.120211669921875, "compression_ratio": 2.0303030303030303, "no_speech_prob": 0.014500881545245647}, {"id": 286, "seek": 129736, "start": 1316.1599999999999, "end": 1320.8, "text": " do YAD I'm assuming that the window name is actually YAD and then I'm gonna do", "tokens": [51304, 360, 398, 6112, 286, 478, 11926, 300, 264, 4910, 1315, 307, 767, 398, 6112, 293, 550, 286, 478, 799, 360, 51536], "temperature": 0.0, "avg_logprob": -0.120211669921875, "compression_ratio": 2.0303030303030303, "no_speech_prob": 0.014500881545245647}, {"id": 287, "seek": 129736, "start": 1320.8, "end": 1326.8799999999999, "text": " do float but really what I want to do is do center float because Xmonad has the", "tokens": [51536, 360, 15706, 457, 534, 437, 286, 528, 281, 360, 307, 360, 3056, 15706, 570, 1783, 3317, 345, 575, 264, 51840], "temperature": 0.0, "avg_logprob": -0.120211669921875, "compression_ratio": 2.0303030303030303, "no_speech_prob": 0.014500881545245647}, {"id": 288, "seek": 132688, "start": 1326.88, "end": 1331.5200000000002, "text": " ability to force a floated window to also be in the center of the screen now", "tokens": [50364, 3485, 281, 3464, 257, 2591, 770, 4910, 281, 611, 312, 294, 264, 3056, 295, 264, 2568, 586, 50596], "temperature": 0.0, "avg_logprob": -0.11331041847787253, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.001454981043934822}, {"id": 289, "seek": 132688, "start": 1331.5200000000002, "end": 1338.24, "text": " if I do colon W to write that and then let me write that to Xmonad.hs and I'm", "tokens": [50596, 498, 286, 360, 8255, 343, 281, 2464, 300, 293, 550, 718, 385, 2464, 300, 281, 1783, 3317, 345, 13, 71, 82, 293, 286, 478, 50932], "temperature": 0.0, "avg_logprob": -0.11331041847787253, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.001454981043934822}, {"id": 290, "seek": 132688, "start": 1338.24, "end": 1343.88, "text": " gonna restart Xmonad and I get an error message and the good thing about Xmonad", "tokens": [50932, 799, 21022, 1783, 3317, 345, 293, 286, 483, 364, 6713, 3636, 293, 264, 665, 551, 466, 1783, 3317, 345, 51214], "temperature": 0.0, "avg_logprob": -0.11331041847787253, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.001454981043934822}, {"id": 291, "seek": 132688, "start": 1343.88, "end": 1348.1200000000001, "text": " is it's really good about error messages as far as it tells you exactly what the", "tokens": [51214, 307, 309, 311, 534, 665, 466, 6713, 7897, 382, 1400, 382, 309, 5112, 291, 2293, 437, 264, 51426], "temperature": 0.0, "avg_logprob": -0.11331041847787253, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.001454981043934822}, {"id": 292, "seek": 132688, "start": 1348.1200000000001, "end": 1353.16, "text": " problem is the problem is do center float I didn't import a library that has a", "tokens": [51426, 1154, 307, 264, 1154, 307, 360, 3056, 15706, 286, 994, 380, 974, 257, 6405, 300, 575, 257, 51678], "temperature": 0.0, "avg_logprob": -0.11331041847787253, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.001454981043934822}, {"id": 293, "seek": 132688, "start": 1353.16, "end": 1356.6000000000001, "text": " do center float module it actually tells me that right here it tells me I", "tokens": [51678, 360, 3056, 15706, 10088, 309, 767, 5112, 385, 300, 558, 510, 309, 5112, 385, 286, 51850], "temperature": 0.0, "avg_logprob": -0.11331041847787253, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.001454981043934822}, {"id": 294, "seek": 135660, "start": 1356.6, "end": 1362.8799999999999, "text": " should have imported Xmonad.hs.manageHelpers do center float so let me", "tokens": [50364, 820, 362, 25524, 1783, 3317, 345, 13, 71, 82, 13, 1601, 609, 39, 338, 21819, 360, 3056, 15706, 370, 718, 385, 50678], "temperature": 0.0, "avg_logprob": -0.14882094837794793, "compression_ratio": 1.75, "no_speech_prob": 0.0039450679905712605}, {"id": 295, "seek": 135660, "start": 1362.8799999999999, "end": 1366.8, "text": " get back into my config I'm gonna go to the top of the document here because", "tokens": [50678, 483, 646, 666, 452, 6662, 286, 478, 799, 352, 281, 264, 1192, 295, 264, 4166, 510, 570, 50874], "temperature": 0.0, "avg_logprob": -0.14882094837794793, "compression_ratio": 1.75, "no_speech_prob": 0.0039450679905712605}, {"id": 296, "seek": 135660, "start": 1366.8, "end": 1372.8799999999999, "text": " that's where my imports are and I need to import Xmonad.hs.manageHelpers which", "tokens": [50874, 300, 311, 689, 452, 41596, 366, 293, 286, 643, 281, 974, 1783, 3317, 345, 13, 71, 82, 13, 1601, 609, 39, 338, 21819, 597, 51178], "temperature": 0.0, "avg_logprob": -0.14882094837794793, "compression_ratio": 1.75, "no_speech_prob": 0.0039450679905712605}, {"id": 297, "seek": 135660, "start": 1372.8799999999999, "end": 1377.1799999999998, "text": " I've already got but I specified only two modules is full screen and do full", "tokens": [51178, 286, 600, 1217, 658, 457, 286, 22206, 787, 732, 16679, 307, 1577, 2568, 293, 360, 1577, 51393], "temperature": 0.0, "avg_logprob": -0.14882094837794793, "compression_ratio": 1.75, "no_speech_prob": 0.0039450679905712605}, {"id": 298, "seek": 135660, "start": 1377.1799999999998, "end": 1382.6, "text": " float I need to go ahead and add do center float let me go ahead and write", "tokens": [51393, 15706, 286, 643, 281, 352, 2286, 293, 909, 360, 3056, 15706, 718, 385, 352, 2286, 293, 2464, 51664], "temperature": 0.0, "avg_logprob": -0.14882094837794793, "compression_ratio": 1.75, "no_speech_prob": 0.0039450679905712605}, {"id": 299, "seek": 138260, "start": 1382.6, "end": 1389.9199999999998, "text": " that Xmonad restarted without any errors so now when I run the script it", "tokens": [50364, 300, 1783, 3317, 345, 21022, 292, 1553, 604, 13603, 370, 586, 562, 286, 1190, 264, 5755, 309, 50730], "temperature": 0.0, "avg_logprob": -0.08955849920000349, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.002050676615908742}, {"id": 300, "seek": 138260, "start": 1389.9199999999998, "end": 1393.4399999999998, "text": " should open in the center of the screen so let me just run that from the", "tokens": [50730, 820, 1269, 294, 264, 3056, 295, 264, 2568, 370, 718, 385, 445, 1190, 300, 490, 264, 50906], "temperature": 0.0, "avg_logprob": -0.08955849920000349, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.002050676615908742}, {"id": 301, "seek": 138260, "start": 1393.4399999999998, "end": 1398.04, "text": " terminal here and I'm in tiling mode and let's see if it actually yes it forces", "tokens": [50906, 14709, 510, 293, 286, 478, 294, 256, 4883, 4391, 293, 718, 311, 536, 498, 309, 767, 2086, 309, 5874, 51136], "temperature": 0.0, "avg_logprob": -0.08955849920000349, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.002050676615908742}, {"id": 302, "seek": 138260, "start": 1398.04, "end": 1402.8, "text": " the window centered in the middle of the screen with 1200 by 800 pixels for the", "tokens": [51136, 264, 4910, 18988, 294, 264, 2808, 295, 264, 2568, 365, 29139, 538, 13083, 18668, 337, 264, 51374], "temperature": 0.0, "avg_logprob": -0.08955849920000349, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.002050676615908742}, {"id": 303, "seek": 138260, "start": 1402.8, "end": 1407.56, "text": " size and it respected my background color and the foreground color I chose so", "tokens": [51374, 2744, 293, 309, 20020, 452, 3678, 2017, 293, 264, 32058, 2017, 286, 5111, 370, 51612], "temperature": 0.0, "avg_logprob": -0.08955849920000349, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.002050676615908742}, {"id": 304, "seek": 138260, "start": 1407.56, "end": 1411.6399999999999, "text": " that is how I would do that the last thing I probably would do for purposes", "tokens": [51612, 300, 307, 577, 286, 576, 360, 300, 264, 1036, 551, 286, 1391, 576, 360, 337, 9932, 51816], "temperature": 0.0, "avg_logprob": -0.08955849920000349, "compression_ratio": 1.7386363636363635, "no_speech_prob": 0.002050676615908742}, {"id": 305, "seek": 141164, "start": 1411.64, "end": 1415.3600000000001, "text": " of this video I don't want to run this from a command line I don't want to run", "tokens": [50364, 295, 341, 960, 286, 500, 380, 528, 281, 1190, 341, 490, 257, 5622, 1622, 286, 500, 380, 528, 281, 1190, 50550], "temperature": 0.0, "avg_logprob": -0.08852963765462239, "compression_ratio": 2.1153846153846154, "no_speech_prob": 0.006692126858979464}, {"id": 306, "seek": 141164, "start": 1415.3600000000001, "end": 1419.3600000000001, "text": " this from a run launcher you know I want a key binding to where I hit a key", "tokens": [50550, 341, 490, 257, 1190, 36805, 291, 458, 286, 528, 257, 2141, 17359, 281, 689, 286, 2045, 257, 2141, 50750], "temperature": 0.0, "avg_logprob": -0.08852963765462239, "compression_ratio": 2.1153846153846154, "no_speech_prob": 0.006692126858979464}, {"id": 307, "seek": 141164, "start": 1419.3600000000001, "end": 1423.16, "text": " binding and this window with all of my key bindings pops up so what I need to", "tokens": [50750, 17359, 293, 341, 4910, 365, 439, 295, 452, 2141, 14786, 1109, 16795, 493, 370, 437, 286, 643, 281, 50940], "temperature": 0.0, "avg_logprob": -0.08852963765462239, "compression_ratio": 2.1153846153846154, "no_speech_prob": 0.006692126858979464}, {"id": 308, "seek": 141164, "start": 1423.16, "end": 1427.92, "text": " do is I need to put that of course in my Xmonad config so let me go down to where", "tokens": [50940, 360, 307, 286, 643, 281, 829, 300, 295, 1164, 294, 452, 1783, 3317, 345, 6662, 370, 718, 385, 352, 760, 281, 689, 51178], "temperature": 0.0, "avg_logprob": -0.08852963765462239, "compression_ratio": 2.1153846153846154, "no_speech_prob": 0.006692126858979464}, {"id": 309, "seek": 141164, "start": 1427.92, "end": 1431.92, "text": " all of my key bindings are and I'm just gonna add a new one let me find the very", "tokens": [51178, 439, 295, 452, 2141, 14786, 1109, 366, 293, 286, 478, 445, 799, 909, 257, 777, 472, 718, 385, 915, 264, 588, 51378], "temperature": 0.0, "avg_logprob": -0.08852963765462239, "compression_ratio": 2.1153846153846154, "no_speech_prob": 0.006692126858979464}, {"id": 310, "seek": 141164, "start": 1431.92, "end": 1436.3200000000002, "text": " beginning of my key binding list because it needs to go in the key binding", "tokens": [51378, 2863, 295, 452, 2141, 17359, 1329, 570, 309, 2203, 281, 352, 294, 264, 2141, 17359, 51598], "temperature": 0.0, "avg_logprob": -0.08852963765462239, "compression_ratio": 2.1153846153846154, "no_speech_prob": 0.006692126858979464}, {"id": 311, "seek": 141164, "start": 1436.3200000000002, "end": 1440.3200000000002, "text": " group for the Xmonad key binding so I'm just going to go ahead and create a new", "tokens": [51598, 1594, 337, 264, 1783, 3317, 345, 2141, 17359, 370, 286, 478, 445, 516, 281, 352, 2286, 293, 1884, 257, 777, 51798], "temperature": 0.0, "avg_logprob": -0.08852963765462239, "compression_ratio": 2.1153846153846154, "no_speech_prob": 0.006692126858979464}, {"id": 312, "seek": 144032, "start": 1440.32, "end": 1444.6399999999999, "text": " one so I'm gonna do comma and then inside parentheses here inside double quotes", "tokens": [50364, 472, 370, 286, 478, 799, 360, 22117, 293, 550, 1854, 34153, 510, 1854, 3834, 19963, 50580], "temperature": 0.0, "avg_logprob": -0.11980648040771484, "compression_ratio": 2.021551724137931, "no_speech_prob": 0.009124805219471455}, {"id": 313, "seek": 144032, "start": 1444.6399999999999, "end": 1451.3999999999999, "text": " I'm gonna do mod shift slash now my shift slash is really mod question mark", "tokens": [50580, 286, 478, 799, 360, 1072, 5513, 17330, 586, 452, 5513, 17330, 307, 534, 1072, 1168, 1491, 50918], "temperature": 0.0, "avg_logprob": -0.11980648040771484, "compression_ratio": 2.021551724137931, "no_speech_prob": 0.009124805219471455}, {"id": 314, "seek": 144032, "start": 1451.3999999999999, "end": 1455.4399999999998, "text": " because the question mark is typically the key you hit in many programs to get", "tokens": [50918, 570, 264, 1168, 1491, 307, 5850, 264, 2141, 291, 2045, 294, 867, 4268, 281, 483, 51120], "temperature": 0.0, "avg_logprob": -0.11980648040771484, "compression_ratio": 2.021551724137931, "no_speech_prob": 0.009124805219471455}, {"id": 315, "seek": 144032, "start": 1455.4399999999998, "end": 1459.6399999999999, "text": " help so it makes sense for this key binding to actually be mod shift slash", "tokens": [51120, 854, 370, 309, 1669, 2020, 337, 341, 2141, 17359, 281, 767, 312, 1072, 5513, 17330, 51330], "temperature": 0.0, "avg_logprob": -0.11980648040771484, "compression_ratio": 2.021551724137931, "no_speech_prob": 0.009124805219471455}, {"id": 316, "seek": 144032, "start": 1459.6399999999999, "end": 1463.84, "text": " or mod question mark and I need to do a comma behind that and then the command", "tokens": [51330, 420, 1072, 1168, 1491, 293, 286, 643, 281, 360, 257, 22117, 2261, 300, 293, 550, 264, 5622, 51540], "temperature": 0.0, "avg_logprob": -0.11980648040771484, "compression_ratio": 2.021551724137931, "no_speech_prob": 0.009124805219471455}, {"id": 317, "seek": 144032, "start": 1463.84, "end": 1468.08, "text": " we're gonna run the command we're gonna run of course needs to be spawn and then", "tokens": [51540, 321, 434, 799, 1190, 264, 5622, 321, 434, 799, 1190, 295, 1164, 2203, 281, 312, 17088, 293, 550, 51752], "temperature": 0.0, "avg_logprob": -0.11980648040771484, "compression_ratio": 2.021551724137931, "no_speech_prob": 0.009124805219471455}, {"id": 318, "seek": 146808, "start": 1468.08, "end": 1472.6, "text": " what are we spawning we are gonna spawn the path to that script which is in my", "tokens": [50364, 437, 366, 321, 637, 35880, 321, 366, 799, 17088, 264, 3100, 281, 300, 5755, 597, 307, 294, 452, 50590], "temperature": 0.0, "avg_logprob": -0.13950730562210084, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.0057298364117741585}, {"id": 319, "seek": 146808, "start": 1472.6, "end": 1481.28, "text": " home directory slash dot Xmonad slash Xmonad underscore keys dot sh and let me", "tokens": [50590, 1280, 21120, 17330, 5893, 1783, 3317, 345, 17330, 1783, 3317, 345, 37556, 9317, 5893, 402, 293, 718, 385, 51024], "temperature": 0.0, "avg_logprob": -0.13950730562210084, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.0057298364117741585}, {"id": 320, "seek": 146808, "start": 1481.28, "end": 1489.8799999999999, "text": " escape and let me write that and now let me restart Xmonad and now let me do", "tokens": [51024, 7615, 293, 718, 385, 2464, 300, 293, 586, 718, 385, 21022, 1783, 3317, 345, 293, 586, 718, 385, 360, 51454], "temperature": 0.0, "avg_logprob": -0.13950730562210084, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.0057298364117741585}, {"id": 321, "seek": 146808, "start": 1489.8799999999999, "end": 1495.8799999999999, "text": " mod question mark and now mod question mark brings up the window with our key", "tokens": [51454, 1072, 1168, 1491, 293, 586, 1072, 1168, 1491, 5607, 493, 264, 4910, 365, 527, 2141, 51754], "temperature": 0.0, "avg_logprob": -0.13950730562210084, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.0057298364117741585}, {"id": 322, "seek": 149588, "start": 1495.88, "end": 1500.3200000000002, "text": " bindings how cool is that that's very nice and of course I could clean this", "tokens": [50364, 14786, 1109, 577, 1627, 307, 300, 300, 311, 588, 1481, 293, 295, 1164, 286, 727, 2541, 341, 50586], "temperature": 0.0, "avg_logprob": -0.09682920061308763, "compression_ratio": 1.933609958506224, "no_speech_prob": 0.1479751169681549}, {"id": 323, "seek": 149588, "start": 1500.3200000000002, "end": 1505.0, "text": " script up a lot more and make the you know this look a little bit better", "tokens": [50586, 5755, 493, 257, 688, 544, 293, 652, 264, 291, 458, 341, 574, 257, 707, 857, 1101, 50820], "temperature": 0.0, "avg_logprob": -0.09682920061308763, "compression_ratio": 1.933609958506224, "no_speech_prob": 0.1479751169681549}, {"id": 324, "seek": 149588, "start": 1505.0, "end": 1510.0800000000002, "text": " because honestly I could format that a lot better but really this works I mean", "tokens": [50820, 570, 6095, 286, 727, 7877, 300, 257, 688, 1101, 457, 534, 341, 1985, 286, 914, 51074], "temperature": 0.0, "avg_logprob": -0.09682920061308763, "compression_ratio": 1.933609958506224, "no_speech_prob": 0.1479751169681549}, {"id": 325, "seek": 149588, "start": 1510.0800000000002, "end": 1514.88, "text": " if you had a problem figuring out what your Xmonad key bindings this works I", "tokens": [51074, 498, 291, 632, 257, 1154, 15213, 484, 437, 428, 1783, 3317, 345, 2141, 14786, 1109, 341, 1985, 286, 51314], "temperature": 0.0, "avg_logprob": -0.09682920061308763, "compression_ratio": 1.933609958506224, "no_speech_prob": 0.1479751169681549}, {"id": 326, "seek": 149588, "start": 1514.88, "end": 1519.7600000000002, "text": " mean I can easily read this figure out what key binding does what and of course", "tokens": [51314, 914, 286, 393, 3612, 1401, 341, 2573, 484, 437, 2141, 17359, 775, 437, 293, 295, 1164, 51558], "temperature": 0.0, "avg_logprob": -0.09682920061308763, "compression_ratio": 1.933609958506224, "no_speech_prob": 0.1479751169681549}, {"id": 327, "seek": 149588, "start": 1519.7600000000002, "end": 1524.96, "text": " just because I did this in Xmonad I mean you could write a script to grip and set", "tokens": [51558, 445, 570, 286, 630, 341, 294, 1783, 3317, 345, 286, 914, 291, 727, 2464, 257, 5755, 281, 12007, 293, 992, 51818], "temperature": 0.0, "avg_logprob": -0.09682920061308763, "compression_ratio": 1.933609958506224, "no_speech_prob": 0.1479751169681549}, {"id": 328, "seek": 152496, "start": 1525.0, "end": 1530.96, "text": " out all that information for Qtile or i3 or BSPWM or whatever window manager you", "tokens": [50366, 484, 439, 300, 1589, 337, 1249, 83, 794, 420, 741, 18, 420, 27253, 47, 54, 44, 420, 2035, 4910, 6598, 291, 50664], "temperature": 0.0, "avg_logprob": -0.1820857442658523, "compression_ratio": 1.7022058823529411, "no_speech_prob": 0.01971624046564102}, {"id": 329, "seek": 152496, "start": 1530.96, "end": 1534.92, "text": " use now obviously that was a very quick and dirty script I didn't spend what 10", "tokens": [50664, 764, 586, 2745, 300, 390, 257, 588, 1702, 293, 9360, 5755, 286, 994, 380, 3496, 437, 1266, 50862], "temperature": 0.0, "avg_logprob": -0.1820857442658523, "compression_ratio": 1.7022058823529411, "no_speech_prob": 0.01971624046564102}, {"id": 330, "seek": 152496, "start": 1534.92, "end": 1539.32, "text": " 15 minutes and we just kind of going at where we're winging it right and I did", "tokens": [50862, 2119, 2077, 293, 321, 445, 733, 295, 516, 412, 689, 321, 434, 261, 8716, 309, 558, 293, 286, 630, 51082], "temperature": 0.0, "avg_logprob": -0.1820857442658523, "compression_ratio": 1.7022058823529411, "no_speech_prob": 0.01971624046564102}, {"id": 331, "seek": 152496, "start": 1539.32, "end": 1543.6200000000001, "text": " everything with said and grip which I purposefully was trying to do said and", "tokens": [51082, 1203, 365, 848, 293, 12007, 597, 286, 4334, 2277, 390, 1382, 281, 360, 848, 293, 51297], "temperature": 0.0, "avg_logprob": -0.1820857442658523, "compression_ratio": 1.7022058823529411, "no_speech_prob": 0.01971624046564102}, {"id": 332, "seek": 152496, "start": 1543.6200000000001, "end": 1546.96, "text": " grip I was trying to actually avoid using alt because I use typically use", "tokens": [51297, 12007, 286, 390, 1382, 281, 767, 5042, 1228, 4955, 570, 286, 764, 5850, 764, 51464], "temperature": 0.0, "avg_logprob": -0.1820857442658523, "compression_ratio": 1.7022058823529411, "no_speech_prob": 0.01971624046564102}, {"id": 333, "seek": 152496, "start": 1546.96, "end": 1551.28, "text": " alt a lot in my scripts and people complain man you using alt why didn't", "tokens": [51464, 4955, 257, 688, 294, 452, 23294, 293, 561, 11024, 587, 291, 1228, 4955, 983, 994, 380, 51680], "temperature": 0.0, "avg_logprob": -0.1820857442658523, "compression_ratio": 1.7022058823529411, "no_speech_prob": 0.01971624046564102}, {"id": 334, "seek": 155128, "start": 1551.28, "end": 1555.36, "text": " you use said for that what in use grip for that well here you go and honestly", "tokens": [50364, 291, 764, 848, 337, 300, 437, 294, 764, 12007, 337, 300, 731, 510, 291, 352, 293, 6095, 50568], "temperature": 0.0, "avg_logprob": -0.16669938416607613, "compression_ratio": 1.8353413654618473, "no_speech_prob": 0.0046091810800135136}, {"id": 335, "seek": 155128, "start": 1555.36, "end": 1560.8799999999999, "text": " I'm not even sure shell scripting is the best way to accomplish this ideally", "tokens": [50568, 286, 478, 406, 754, 988, 8720, 5755, 278, 307, 264, 1151, 636, 281, 9021, 341, 22915, 50844], "temperature": 0.0, "avg_logprob": -0.16669938416607613, "compression_ratio": 1.8353413654618473, "no_speech_prob": 0.0046091810800135136}, {"id": 336, "seek": 155128, "start": 1560.8799999999999, "end": 1564.6, "text": " what you would want to do is if you actually knew Haskell because Xmonads", "tokens": [50844, 437, 291, 576, 528, 281, 360, 307, 498, 291, 767, 2586, 8646, 43723, 570, 1783, 3317, 5834, 51030], "temperature": 0.0, "avg_logprob": -0.16669938416607613, "compression_ratio": 1.8353413654618473, "no_speech_prob": 0.0046091810800135136}, {"id": 337, "seek": 155128, "start": 1564.6, "end": 1568.0, "text": " written in Haskell the config files written in Haskell it would be great if", "tokens": [51030, 3720, 294, 8646, 43723, 264, 6662, 7098, 3720, 294, 8646, 43723, 309, 576, 312, 869, 498, 51200], "temperature": 0.0, "avg_logprob": -0.16669938416607613, "compression_ratio": 1.8353413654618473, "no_speech_prob": 0.0046091810800135136}, {"id": 338, "seek": 155128, "start": 1568.0, "end": 1572.36, "text": " I knew enough Haskell where I could actually get this information by adding", "tokens": [51200, 286, 2586, 1547, 8646, 43723, 689, 286, 727, 767, 483, 341, 1589, 538, 5127, 51418], "temperature": 0.0, "avg_logprob": -0.16669938416607613, "compression_ratio": 1.8353413654618473, "no_speech_prob": 0.0046091810800135136}, {"id": 339, "seek": 155128, "start": 1572.36, "end": 1577.44, "text": " some Haskell code to my config but I am nowhere near a Haskell master it's a", "tokens": [51418, 512, 8646, 43723, 3089, 281, 452, 6662, 457, 286, 669, 11159, 2651, 257, 8646, 43723, 4505, 309, 311, 257, 51672], "temperature": 0.0, "avg_logprob": -0.16669938416607613, "compression_ratio": 1.8353413654618473, "no_speech_prob": 0.0046091810800135136}, {"id": 340, "seek": 157744, "start": 1577.44, "end": 1581.68, "text": " lot easier just to quickly throw together this quick shell script now", "tokens": [50364, 688, 3571, 445, 281, 2661, 3507, 1214, 341, 1702, 8720, 5755, 586, 50576], "temperature": 0.0, "avg_logprob": -0.320516043335852, "compression_ratio": 1.6675977653631284, "no_speech_prob": 0.27190083265304565}, {"id": 341, "seek": 157744, "start": 1581.68, "end": 1584.76, "text": " before I go I need to think a few special people I need to think the", "tokens": [50576, 949, 286, 352, 286, 643, 281, 519, 257, 1326, 2121, 561, 286, 643, 281, 519, 264, 50730], "temperature": 0.0, "avg_logprob": -0.320516043335852, "compression_ratio": 1.6675977653631284, "no_speech_prob": 0.27190083265304565}, {"id": 342, "seek": 157744, "start": 1584.76, "end": 1588.4, "text": " producers of this episode as he gave James Mitchell Paul West a commie Allen", "tokens": [50730, 16080, 295, 341, 3500, 382, 415, 2729, 5678, 27582, 4552, 4055, 257, 800, 414, 17160, 50912], "temperature": 0.0, "avg_logprob": -0.320516043335852, "compression_ratio": 1.6675977653631284, "no_speech_prob": 0.27190083265304565}, {"id": 343, "seek": 157744, "start": 1588.4, "end": 1591.64, "text": " Chuck Gurt David Dylan Gregory Hico Eryon Alexander peace arch and fedora", "tokens": [50912, 21607, 460, 6224, 4389, 28160, 37915, 389, 2789, 462, 627, 266, 14845, 4336, 3912, 293, 4636, 3252, 51074], "temperature": 0.0, "avg_logprob": -0.320516043335852, "compression_ratio": 1.6675977653631284, "no_speech_prob": 0.27190083265304565}, {"id": 344, "seek": 157744, "start": 1591.64, "end": 1595.88, "text": " Polytech raver red Prophet Scott Steven and Willie these guys they're my", "tokens": [51074, 18553, 25970, 3342, 331, 2182, 12849, 6659, 12754, 293, 39912, 613, 1074, 436, 434, 452, 51286], "temperature": 0.0, "avg_logprob": -0.320516043335852, "compression_ratio": 1.6675977653631284, "no_speech_prob": 0.27190083265304565}, {"id": 345, "seek": 157744, "start": 1595.88, "end": 1599.76, "text": " highest tiered patrons over on patreon without these guys this episode that you", "tokens": [51286, 6343, 12362, 292, 27559, 670, 322, 33161, 1553, 613, 1074, 341, 3500, 300, 291, 51480], "temperature": 0.0, "avg_logprob": -0.320516043335852, "compression_ratio": 1.6675977653631284, "no_speech_prob": 0.27190083265304565}, {"id": 346, "seek": 157744, "start": 1599.76, "end": 1603.0800000000002, "text": " just watched would not have been possible the shows also brought to you by", "tokens": [51480, 445, 6337, 576, 406, 362, 668, 1944, 264, 3110, 611, 3038, 281, 291, 538, 51646], "temperature": 0.0, "avg_logprob": -0.320516043335852, "compression_ratio": 1.6675977653631284, "no_speech_prob": 0.27190083265304565}, {"id": 347, "seek": 157744, "start": 1603.0800000000002, "end": 1606.16, "text": " each and every one of these ladies and gentlemen as well all these names you're", "tokens": [51646, 1184, 293, 633, 472, 295, 613, 9974, 293, 11669, 382, 731, 439, 613, 5288, 291, 434, 51800], "temperature": 0.0, "avg_logprob": -0.320516043335852, "compression_ratio": 1.6675977653631284, "no_speech_prob": 0.27190083265304565}, {"id": 348, "seek": 160616, "start": 1606.16, "end": 1609.64, "text": " seeing on the screen each and every one of these ladies and gentlemen help", "tokens": [50364, 2577, 322, 264, 2568, 1184, 293, 633, 472, 295, 613, 9974, 293, 11669, 854, 50538], "temperature": 0.0, "avg_logprob": -0.18837700820550685, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.05030263215303421}, {"id": 349, "seek": 160616, "start": 1609.64, "end": 1612.92, "text": " support me over on patreon because I don't have any corporate sponsors I'm", "tokens": [50538, 1406, 385, 670, 322, 33161, 570, 286, 500, 380, 362, 604, 10896, 22593, 286, 478, 50702], "temperature": 0.0, "avg_logprob": -0.18837700820550685, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.05030263215303421}, {"id": 350, "seek": 160616, "start": 1612.92, "end": 1617.4, "text": " sponsored by you guys the community if you like my work you want to help me out", "tokens": [50702, 16621, 538, 291, 1074, 264, 1768, 498, 291, 411, 452, 589, 291, 528, 281, 854, 385, 484, 50926], "temperature": 0.0, "avg_logprob": -0.18837700820550685, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.05030263215303421}, {"id": 351, "seek": 160616, "start": 1617.4, "end": 1621.44, "text": " please consider subscribing to distro tube over on patreon all right guys", "tokens": [50926, 1767, 1949, 19981, 281, 1483, 340, 9917, 670, 322, 33161, 439, 558, 1074, 51128], "temperature": 0.0, "avg_logprob": -0.18837700820550685, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.05030263215303421}, {"id": 352, "seek": 160616, "start": 1621.44, "end": 1628.0400000000002, "text": " peace and yes I'll push the script to my get lab", "tokens": [51128, 4336, 293, 2086, 286, 603, 2944, 264, 5755, 281, 452, 483, 2715, 51458], "temperature": 0.0, "avg_logprob": -0.18837700820550685, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.05030263215303421}], "language": "en"}