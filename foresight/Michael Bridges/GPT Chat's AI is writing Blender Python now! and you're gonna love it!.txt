It deletes the default cube to begin with.
Even an AI deletes the default cube before adding things in.
Hello, everybody, and welcome.
Today, we're going to explore using
Chat GPT in order to write some Python code for Blender for us.
Now, I've tried it in the background and I've been absolutely amazed,
but one warning here, it's not consistent.
If you want to follow along,
you can go to, let's just make this bigger for a second,
chat.openai.com forward slash chat.
Okay, so let's just try something straight away.
Let's stack five cubes on top of each other in Blender using Python.
That's very badly worded.
Let's just roll with it.
I'm not going to correct typos either.
It seems to be absolutely fine with that.
Now, it is very, very busy at the moment,
so it can take a few minutes to do something,
which is annoying.
And usually, if it's hanging like this,
it's just overloaded at the moment.
At which point, I'm going to have to stop the video
and wait until it's quieter.
Oh, here we go.
It's telling me what it's going to do.
And it's also used a for loop.
Okay, this is brilliant,
because before, when I was trying it,
it wouldn't use a for loop initially.
So let's just go and take this.
Okay, there's a copy code button I should have learnt by now.
And let's remove everything from our scene
and let's run that code.
Okay, so that doesn't work, did it?
This is one of the things about GPT.
It can end up sounding very confident.
I mean, it's given us this here.
We run through this code.
We'll probably work out why it's not there.
Move the other cubes above the first cube.
Interesting, it's only done one, four.
There are other cubes there by the looks of things,
but where they've gone, who knows?
Let's delete everything out of our scene again
and let's just try something else.
Let's clear down what we've got here, actually,
so we can reset the thread
so it won't remember anything from before.
Using Python, write a script.
I will be able to type one day a script
to stack four cubes on top of each other in Blender.
Let's see how it handles this.
It deletes the default cube to begin with.
Even an AI deletes the default cube
before adding things in.
Now, this is a very linear script.
I would not write something like this
unless I was really, really testing something very specific.
Cube not found, of course.
Let's just get rid of that.
Go file, new, general.
Let's assume that there's something in the scene,
which is actually quite a clever thing for it to do.
I've not asked it to delete the cube,
which is maybe a bit backwards
because I haven't asked it to do any of that,
but there we go.
We've got four cubes, that's on top of one another.
One of the great things about this
is we can start adding to it.
Add a monkey to the top.
Now, is it aware of Suzanne the monkey?
Use the following code.
So it's built upon its previous stuff at the second cube.
Now, one thing I have noticed here
is if this gets too long,
then we're gonna end up with it just pausing and stopping.
So I can see straight away
that's gonna add it on top, absolutely fine.
I'm not gonna actually paste that in.
What I'm gonna do is can you add loops?
Because I wouldn't add it in, add it in, add it in.
I would actually loop around those cubes.
Let's see if it does that.
It's also deleting the default cube,
which you can't do, of course, the second time around.
So I'm gonna delete that,
delete everything from the scene, add in the cube.
There we go.
So here it goes.
Oh, it's split it out.
So here's our loop to add the monkey.
Oh, it separated out that.
Oh, that is interesting.
Okay, well, let's see if this new script works.
And this is great.
I haven't had to train it or tell it
anything about the Blender API.
And there we go.
We've got Suzanne on top of four cubes.
Okay, so that's pretty straightforward.
How far can we push this?
Well, I've tried a couple of things.
Sometimes they work, sometimes they don't.
I'm gonna delete everything but that bottom cube.
Build a Mayan pyramid.
This is actually one that I've done some work on myself
in an introduction to Python course
I'm working on at the moment is building a Mayan pyramid.
Let's see how the AI handles it.
It's gonna be specific here.
And sometimes you have to massage the language
that you use to build a script, to build,
I'm sorry, write a script,
to build a Mayan pyramid out of cubes.
Now, the first time I ran this,
it worked absolutely perfectly.
The second time I ran it, it failed miserably.
This is interesting.
It's looping around.
This is completely different code.
If this doesn't work, by the way,
because I am just gonna copy and paste it in.
If this doesn't work, I'll show you a screenshot
of the code as I was playing around with it before.
Okay, that's an interesting interpretation of it.
It kind of works.
We can see that it's building it out of cubes
and then adjusting the cubes widths and heights
to try and fit it in.
That didn't work.
Let's just blank this out the way and say,
so write a script to build a Mayan pyramid
from only primitive in Blender.
That should have said primitives, but there we go.
So it's just giving us instructions.
Okay, that's writing a script rather than code.
So I need to be more specific.
Okay, so this is great.
This is giving us an actual script
as in how to, oh, it's giving us materials.
I didn't ask it to do that.
Oh, wow.
That is impressive.
You see, it's done extra stuff here.
I don't really want to add materials at the moment,
although it seems like it can do that.
It's set to diffuse color and specular intensity.
So this isn't a material in the same way
that you'd usually set up a material using a node graph.
This is just setting it manually.
It's looking like it's setting it to a mid-level gray
and then applying the material.
That's kind of cool.
It separated it out.
Let's try something new.
It's obviously not going to do the Mayan pyramid.
This is what it did the first time I ever tried it
and it's not done it since.
And that's important to realize
that if you copy exactly what I'm doing,
you're going to get a different result.
So build a castle out of cubes.
This is absolutely nuts.
Oh no, it's frozen.
I hate it when it freezes like that.
That means it's just run out.
Can you put this all in one script?
Oh, please work.
Oh, look like a Mayan pyramid and a castle.
Okay, it's remembered the stuff from before.
I'm not sure whether this is going to work.
It's probably going to stop typing everything out.
Yep, there we go.
Oh, no, no, no, no, no.
With two walls and a Mayan pyramid in your blend of sea.
Well, let's just give it a go.
Let's see what it ends up looking like.
Let's get rid of everything here.
Get rid of everything here.
Are we still deleting the default cube?
I have no idea.
No, we're not.
That's fine.
Let's decided not to do that anymore.
And we end up with this.
Yeah, this is not a great demonstration of it working.
That's fine.
Let's try something completely new.
Let's go to the menu, reset the thread.
Okay, so I'm not going to play around
with the Mayan pyramid anymore,
but I will put up on the screen here.
The first time I ever tried it, it was successful.
And this is one of the things.
AI is not coming for our jobs at the moment.
It will eventually reach a point where it is very, very good.
At that point, what we're able to do as artists
or developers is use it to help us,
use it to explore ideas really quickly.
Ultimately, it's very good at spewing out rubbish,
but looks good rubbish.
And that's one of the things that can trip you up.
So let's try something completely new here.
Let's write a blender script.
And what do we want to do?
To create Stonehenge out of cubes.
Now, obviously it knows what a Mayan pyramid is,
so I'm guessing it's going to know what Stonehenge is.
And this is one of the things.
We can just explore ideas.
And I would say that looking at code that I've written
and looking at code that it's produced,
it does it in a very dumb way.
It may work, it may not work.
And it's just a matter of trying.
I have seen it come out with a very interesting way
of actually approaching a problem,
which is great because it means that I'm also learning
because it has produced something that does indeed work.
Okay, so in front of us here we have
what the Mayan pyramid that it did the first time around.
So a couple of things that is really interesting
and certainly not the way that I would approach this code.
I'd probably not have the bpy.obstopmesh.primitive.
I would make this much more readable.
I mean, it is quite readable at the moment
because it's very short,
but this was an incredible just approach
and I didn't delete the default cube or anything.
You can see it got it straight away.
I wish I'd recorded what the prompt was.
I wasn't thinking about this when I was just exploring it.
In fact, I wish I even, I was recording at the time
because I got really excited when it nailed this first time.
But anyway, so you can see here,
it actually made some really concise code
and I think it failed on the scene.update at the end
or something along those lines.
So it can do some really useful stuff,
but sometimes it does it in a different way.
And I'll show you.
Let's have a look at what it's done here.
Oh, ooh, ooh, ouch.
Okay, it's made an array of positions.
That's not what it did when I tried this before.
It actually used a math library.
It drew a circle and placed the pillars and stuff
on the circle, but let's see what it's created.
I mean, ultimately, it's created this big block here.
Let's get rid of that.
So this is what its interpretation of Stonehenge is.
It's wrong.
That isn't Stonehenge.
Let's just, for argument's sake,
say that is close, but doesn't look like Stonehenge.
It needs to be circular.
Ah, here we go.
This looks a bit more promising.
I'm not gonna say it's gonna work
because who knows what it's gonna create.
Let's just clear our scene out
while we're waiting for it to write our code for us.
And boom, let's just run it.
Okay, interesting.
Let's get rid of that.
It's made there.
Okay, you see, it's got an idea of what's going on.
And when I tried this before,
I tried it with things like,
oh, could you make the Stonehenge a bit more irregular?
And if I got footage of that,
I'll pop that up on the screen.
I tried to massage it to get it to the point.
At which point, I could have just made it myself
in half the time.
So one of the things that I did have
quite a bit of success with
was writing some helper code.
So let's clear everything down.
And again, I should really put this in a buffer.
I'm gonna write a script
to select every object in Blender
or something along those lines.
So if I have a look at my objects here,
they're all named cube, right?
All of these stem from a cube that's been manipulated.
So I've asked it to write a script
to select all mesh objects.
So I'm being specific about what type of objects in Blender
with names containing the word cube.
Now, this is something that I have done in the past.
So I'll be interested to see how it approaches it.
And what we'll also do here
is add in a point, bam, just over here.
Let's add in a camera as well.
It doesn't matter what they're pointing at.
It's just so we've got something else in our scene
so we can make sure it is only selecting
the things that we want it to.
Okay, let's run that.
So this is interesting.
It's approaching it from a scene level.
So we see here, bpy.context.scene.
I would typically approach this.
I suppose that is a quite a neat way of doing it.
If I was gonna do selecting all types though,
I'd probably go to bpy.data.objects.
If the type equals mesh, that's correct.
The cube is in the objects name and said it's true.
Nice.
So the other thing that we're gonna add in really quickly
is add in an icosphere just here
so we know it is only selecting objects
that aren't named cube.
Okay, let's copy that.
Go to our code and paste that in.
Make sure nothing is selected and run our script.
Look at that.
That is awesome.
The only thing that this is done
that you'd now need to work out
is make sure that this is not the active selected
because that's gonna do stuff to that icosphere.
Make sure one of those objects is the active selected.
Now, of course, this time round,
one of the things I've not done,
I've not asked it and it knows
that it requires Python code.
That's important.
Let's just see if that works.
Copy code, paste it in.
Yes, yes, now one of our objects
is the active selected, perfect.
So this is how it can really help
by making some helper code for you
or just as I say, exploring different things.
The important thing is that AI is not coming after us yet,
but we can use it to support what we're doing,
to help us and aid us in producing better work more quickly,
which is brilliant.
Wow, so this is absolutely amazing.
I love this sort of stuff and it being developed,
whether it's creating images for us or writing code for us,
I think this is a great help at all.
Now, if you try this yourself,
I'd love to see what you end up creating,
so do share that with me.
And if you want to learn about Python in Blender
in a bit more structured manner,
then check out these videos here.
I'll see you in the next one.
