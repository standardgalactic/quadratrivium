WEBVTT

00:00.000 --> 00:03.600
It deletes the default cube to begin with.

00:03.600 --> 00:08.240
Even an AI deletes the default cube before adding things in.

00:08.240 --> 00:10.040
Hello, everybody, and welcome.

00:10.040 --> 00:11.760
Today, we're going to explore using

00:11.760 --> 00:16.520
Chat GPT in order to write some Python code for Blender for us.

00:16.520 --> 00:19.640
Now, I've tried it in the background and I've been absolutely amazed,

00:19.640 --> 00:22.040
but one warning here, it's not consistent.

00:22.040 --> 00:23.360
If you want to follow along,

00:23.360 --> 00:25.920
you can go to, let's just make this bigger for a second,

00:25.920 --> 00:30.040
chat.openai.com forward slash chat.

00:30.040 --> 00:33.000
Okay, so let's just try something straight away.

00:33.000 --> 00:42.600
Let's stack five cubes on top of each other in Blender using Python.

00:42.600 --> 00:44.120
That's very badly worded.

00:44.120 --> 00:45.720
Let's just roll with it.

00:45.720 --> 00:47.320
I'm not going to correct typos either.

00:47.320 --> 00:49.280
It seems to be absolutely fine with that.

00:49.280 --> 00:51.680
Now, it is very, very busy at the moment,

00:51.680 --> 00:54.400
so it can take a few minutes to do something,

00:54.680 --> 00:55.720
which is annoying.

00:55.720 --> 00:58.480
And usually, if it's hanging like this,

00:58.480 --> 01:00.440
it's just overloaded at the moment.

01:00.440 --> 01:02.800
At which point, I'm going to have to stop the video

01:02.800 --> 01:05.280
and wait until it's quieter.

01:05.280 --> 01:06.600
Oh, here we go.

01:06.600 --> 01:08.360
It's telling me what it's going to do.

01:08.360 --> 01:10.040
And it's also used a for loop.

01:10.040 --> 01:11.440
Okay, this is brilliant,

01:11.440 --> 01:14.040
because before, when I was trying it,

01:14.040 --> 01:16.520
it wouldn't use a for loop initially.

01:16.520 --> 01:18.720
So let's just go and take this.

01:18.720 --> 01:21.720
Okay, there's a copy code button I should have learnt by now.

01:21.840 --> 01:25.560
And let's remove everything from our scene

01:25.560 --> 01:29.480
and let's run that code.

01:29.480 --> 01:32.440
Okay, so that doesn't work, did it?

01:32.440 --> 01:35.280
This is one of the things about GPT.

01:35.280 --> 01:37.960
It can end up sounding very confident.

01:37.960 --> 01:39.440
I mean, it's given us this here.

01:39.440 --> 01:40.560
We run through this code.

01:40.560 --> 01:43.360
We'll probably work out why it's not there.

01:43.360 --> 01:46.600
Move the other cubes above the first cube.

01:46.600 --> 01:50.960
Interesting, it's only done one, four.

01:50.960 --> 01:53.120
There are other cubes there by the looks of things,

01:53.120 --> 01:54.720
but where they've gone, who knows?

01:54.720 --> 01:57.200
Let's delete everything out of our scene again

01:57.200 --> 01:59.800
and let's just try something else.

01:59.800 --> 02:01.920
Let's clear down what we've got here, actually,

02:01.920 --> 02:03.120
so we can reset the thread

02:03.120 --> 02:05.800
so it won't remember anything from before.

02:05.800 --> 02:09.760
Using Python, write a script.

02:09.760 --> 02:12.880
I will be able to type one day a script

02:12.880 --> 02:17.880
to stack four cubes on top of each other in Blender.

02:18.800 --> 02:21.080
Let's see how it handles this.

02:22.760 --> 02:26.000
It deletes the default cube to begin with.

02:26.000 --> 02:29.080
Even an AI deletes the default cube

02:29.080 --> 02:30.560
before adding things in.

02:30.560 --> 02:33.120
Now, this is a very linear script.

02:33.120 --> 02:35.440
I would not write something like this

02:35.440 --> 02:40.160
unless I was really, really testing something very specific.

02:41.720 --> 02:43.400
Cube not found, of course.

02:43.400 --> 02:45.880
Let's just get rid of that.

02:45.880 --> 02:47.680
Go file, new, general.

02:47.680 --> 02:49.760
Let's assume that there's something in the scene,

02:49.760 --> 02:52.600
which is actually quite a clever thing for it to do.

02:52.600 --> 02:54.600
I've not asked it to delete the cube,

02:54.600 --> 02:57.720
which is maybe a bit backwards

02:57.720 --> 02:59.560
because I haven't asked it to do any of that,

02:59.560 --> 03:00.400
but there we go.

03:00.400 --> 03:03.280
We've got four cubes, that's on top of one another.

03:03.280 --> 03:05.320
One of the great things about this

03:05.320 --> 03:07.320
is we can start adding to it.

03:07.320 --> 03:11.320
Add a monkey to the top.

03:11.320 --> 03:14.200
Now, is it aware of Suzanne the monkey?

03:14.200 --> 03:15.600
Use the following code.

03:15.640 --> 03:19.200
So it's built upon its previous stuff at the second cube.

03:19.200 --> 03:20.640
Now, one thing I have noticed here

03:20.640 --> 03:22.760
is if this gets too long,

03:22.760 --> 03:26.520
then we're gonna end up with it just pausing and stopping.

03:26.520 --> 03:27.640
So I can see straight away

03:27.640 --> 03:30.800
that's gonna add it on top, absolutely fine.

03:30.800 --> 03:32.000
I'm not gonna actually paste that in.

03:32.000 --> 03:37.000
What I'm gonna do is can you add loops?

03:37.920 --> 03:40.760
Because I wouldn't add it in, add it in, add it in.

03:40.760 --> 03:43.640
I would actually loop around those cubes.

03:43.640 --> 03:44.720
Let's see if it does that.

03:44.720 --> 03:46.720
It's also deleting the default cube,

03:46.720 --> 03:48.880
which you can't do, of course, the second time around.

03:48.880 --> 03:50.880
So I'm gonna delete that,

03:50.880 --> 03:54.320
delete everything from the scene, add in the cube.

03:54.320 --> 03:55.760
There we go.

03:55.760 --> 03:57.120
So here it goes.

03:57.120 --> 03:58.200
Oh, it's split it out.

03:58.200 --> 04:01.000
So here's our loop to add the monkey.

04:01.000 --> 04:02.520
Oh, it separated out that.

04:02.520 --> 04:03.880
Oh, that is interesting.

04:05.220 --> 04:08.400
Okay, well, let's see if this new script works.

04:08.400 --> 04:09.680
And this is great.

04:09.680 --> 04:12.160
I haven't had to train it or tell it

04:12.160 --> 04:13.720
anything about the Blender API.

04:13.720 --> 04:14.560
And there we go.

04:14.560 --> 04:17.960
We've got Suzanne on top of four cubes.

04:17.960 --> 04:20.120
Okay, so that's pretty straightforward.

04:20.120 --> 04:21.960
How far can we push this?

04:21.960 --> 04:23.220
Well, I've tried a couple of things.

04:23.220 --> 04:25.880
Sometimes they work, sometimes they don't.

04:25.880 --> 04:28.120
I'm gonna delete everything but that bottom cube.

04:28.120 --> 04:31.280
Build a Mayan pyramid.

04:31.280 --> 04:35.600
This is actually one that I've done some work on myself

04:35.600 --> 04:37.120
in an introduction to Python course

04:37.120 --> 04:39.760
I'm working on at the moment is building a Mayan pyramid.

04:39.760 --> 04:42.640
Let's see how the AI handles it.

04:42.640 --> 04:43.960
It's gonna be specific here.

04:43.960 --> 04:45.960
And sometimes you have to massage the language

04:45.960 --> 04:50.960
that you use to build a script, to build,

04:51.040 --> 04:52.040
I'm sorry, write a script,

04:52.040 --> 04:55.920
to build a Mayan pyramid out of cubes.

04:55.920 --> 04:57.960
Now, the first time I ran this,

04:57.960 --> 05:00.180
it worked absolutely perfectly.

05:01.380 --> 05:04.920
The second time I ran it, it failed miserably.

05:04.920 --> 05:05.760
This is interesting.

05:05.760 --> 05:07.160
It's looping around.

05:09.480 --> 05:11.720
This is completely different code.

05:11.720 --> 05:13.080
If this doesn't work, by the way,

05:13.080 --> 05:15.000
because I am just gonna copy and paste it in.

05:15.000 --> 05:17.520
If this doesn't work, I'll show you a screenshot

05:17.520 --> 05:20.320
of the code as I was playing around with it before.

05:22.160 --> 05:24.280
Okay, that's an interesting interpretation of it.

05:24.280 --> 05:25.980
It kind of works.

05:25.980 --> 05:28.440
We can see that it's building it out of cubes

05:28.440 --> 05:32.080
and then adjusting the cubes widths and heights

05:32.080 --> 05:33.720
to try and fit it in.

05:33.720 --> 05:35.000
That didn't work.

05:35.000 --> 05:38.760
Let's just blank this out the way and say,

05:38.760 --> 05:40.800
so write a script to build a Mayan pyramid

05:40.800 --> 05:43.000
from only primitive in Blender.

05:43.000 --> 05:45.520
That should have said primitives, but there we go.

05:45.520 --> 05:48.600
So it's just giving us instructions.

05:50.000 --> 05:53.280
Okay, that's writing a script rather than code.

05:53.280 --> 05:55.300
So I need to be more specific.

05:56.400 --> 05:57.920
Okay, so this is great.

05:57.920 --> 06:00.880
This is giving us an actual script

06:00.880 --> 06:03.600
as in how to, oh, it's giving us materials.

06:03.600 --> 06:05.320
I didn't ask it to do that.

06:05.320 --> 06:06.160
Oh, wow.

06:07.200 --> 06:09.600
That is impressive.

06:09.600 --> 06:11.280
You see, it's done extra stuff here.

06:11.280 --> 06:13.440
I don't really want to add materials at the moment,

06:13.440 --> 06:15.560
although it seems like it can do that.

06:15.560 --> 06:18.960
It's set to diffuse color and specular intensity.

06:18.960 --> 06:21.040
So this isn't a material in the same way

06:21.040 --> 06:24.920
that you'd usually set up a material using a node graph.

06:24.920 --> 06:27.320
This is just setting it manually.

06:27.320 --> 06:30.120
It's looking like it's setting it to a mid-level gray

06:31.120 --> 06:32.680
and then applying the material.

06:32.680 --> 06:33.520
That's kind of cool.

06:33.520 --> 06:35.280
It separated it out.

06:35.280 --> 06:36.120
Let's try something new.

06:36.120 --> 06:38.560
It's obviously not going to do the Mayan pyramid.

06:38.560 --> 06:41.320
This is what it did the first time I ever tried it

06:41.320 --> 06:42.920
and it's not done it since.

06:42.920 --> 06:44.560
And that's important to realize

06:44.560 --> 06:46.440
that if you copy exactly what I'm doing,

06:46.440 --> 06:48.880
you're going to get a different result.

06:48.880 --> 06:53.880
So build a castle out of cubes.

06:56.960 --> 06:59.400
This is absolutely nuts.

06:59.400 --> 07:00.600
Oh no, it's frozen.

07:00.600 --> 07:01.880
I hate it when it freezes like that.

07:01.880 --> 07:03.480
That means it's just run out.

07:04.480 --> 07:09.480
Can you put this all in one script?

07:11.280 --> 07:12.480
Oh, please work.

07:12.480 --> 07:15.320
Oh, look like a Mayan pyramid and a castle.

07:15.320 --> 07:18.880
Okay, it's remembered the stuff from before.

07:18.880 --> 07:20.400
I'm not sure whether this is going to work.

07:20.400 --> 07:24.080
It's probably going to stop typing everything out.

07:24.080 --> 07:25.040
Yep, there we go.

07:25.040 --> 07:26.560
Oh, no, no, no, no, no.

07:26.560 --> 07:29.440
With two walls and a Mayan pyramid in your blend of sea.

07:29.440 --> 07:30.640
Well, let's just give it a go.

07:30.640 --> 07:33.200
Let's see what it ends up looking like.

07:33.200 --> 07:34.800
Let's get rid of everything here.

07:34.800 --> 07:36.160
Get rid of everything here.

07:36.160 --> 07:38.240
Are we still deleting the default cube?

07:38.240 --> 07:39.440
I have no idea.

07:40.320 --> 07:41.160
No, we're not.

07:41.160 --> 07:42.000
That's fine.

07:42.000 --> 07:43.680
Let's decided not to do that anymore.

07:43.680 --> 07:45.160
And we end up with this.

07:45.160 --> 07:50.160
Yeah, this is not a great demonstration of it working.

07:51.120 --> 07:52.080
That's fine.

07:52.080 --> 07:53.360
Let's try something completely new.

07:53.360 --> 07:56.080
Let's go to the menu, reset the thread.

07:56.080 --> 07:57.360
Okay, so I'm not going to play around

07:57.360 --> 07:58.560
with the Mayan pyramid anymore,

07:58.560 --> 08:00.320
but I will put up on the screen here.

08:00.320 --> 08:02.920
The first time I ever tried it, it was successful.

08:02.920 --> 08:04.560
And this is one of the things.

08:04.560 --> 08:08.200
AI is not coming for our jobs at the moment.

08:08.200 --> 08:11.560
It will eventually reach a point where it is very, very good.

08:11.560 --> 08:14.760
At that point, what we're able to do as artists

08:14.760 --> 08:17.600
or developers is use it to help us,

08:17.600 --> 08:20.640
use it to explore ideas really quickly.

08:20.640 --> 08:24.760
Ultimately, it's very good at spewing out rubbish,

08:24.760 --> 08:27.000
but looks good rubbish.

08:27.000 --> 08:28.640
And that's one of the things that can trip you up.

08:28.640 --> 08:31.600
So let's try something completely new here.

08:31.640 --> 08:34.760
Let's write a blender script.

08:34.760 --> 08:35.880
And what do we want to do?

08:35.880 --> 08:40.880
To create Stonehenge out of cubes.

08:41.880 --> 08:45.160
Now, obviously it knows what a Mayan pyramid is,

08:45.160 --> 08:49.000
so I'm guessing it's going to know what Stonehenge is.

08:49.000 --> 08:50.320
And this is one of the things.

08:50.320 --> 08:51.840
We can just explore ideas.

08:51.840 --> 08:55.640
And I would say that looking at code that I've written

08:55.640 --> 08:57.640
and looking at code that it's produced,

08:57.640 --> 08:59.640
it does it in a very dumb way.

08:59.640 --> 09:02.440
It may work, it may not work.

09:02.440 --> 09:04.480
And it's just a matter of trying.

09:04.480 --> 09:08.520
I have seen it come out with a very interesting way

09:08.520 --> 09:11.440
of actually approaching a problem,

09:11.440 --> 09:14.120
which is great because it means that I'm also learning

09:14.120 --> 09:17.400
because it has produced something that does indeed work.

09:17.400 --> 09:19.040
Okay, so in front of us here we have

09:19.040 --> 09:21.320
what the Mayan pyramid that it did the first time around.

09:21.320 --> 09:24.040
So a couple of things that is really interesting

09:24.040 --> 09:27.520
and certainly not the way that I would approach this code.

09:27.520 --> 09:31.000
I'd probably not have the bpy.obstopmesh.primitive.

09:31.000 --> 09:33.280
I would make this much more readable.

09:33.280 --> 09:35.080
I mean, it is quite readable at the moment

09:35.080 --> 09:36.960
because it's very short,

09:36.960 --> 09:39.280
but this was an incredible just approach

09:39.280 --> 09:40.960
and I didn't delete the default cube or anything.

09:40.960 --> 09:43.120
You can see it got it straight away.

09:43.120 --> 09:45.640
I wish I'd recorded what the prompt was.

09:45.640 --> 09:48.120
I wasn't thinking about this when I was just exploring it.

09:48.120 --> 09:51.560
In fact, I wish I even, I was recording at the time

09:51.560 --> 09:54.560
because I got really excited when it nailed this first time.

09:54.560 --> 09:56.200
But anyway, so you can see here,

09:56.200 --> 09:58.800
it actually made some really concise code

09:58.800 --> 10:02.040
and I think it failed on the scene.update at the end

10:02.040 --> 10:03.520
or something along those lines.

10:03.520 --> 10:04.920
So it can do some really useful stuff,

10:04.920 --> 10:06.200
but sometimes it does it in a different way.

10:06.200 --> 10:07.640
And I'll show you.

10:07.640 --> 10:09.480
Let's have a look at what it's done here.

10:09.480 --> 10:11.880
Oh, ooh, ooh, ouch.

10:11.880 --> 10:14.200
Okay, it's made an array of positions.

10:14.200 --> 10:16.920
That's not what it did when I tried this before.

10:16.920 --> 10:18.800
It actually used a math library.

10:18.800 --> 10:22.280
It drew a circle and placed the pillars and stuff

10:22.280 --> 10:25.680
on the circle, but let's see what it's created.

10:25.680 --> 10:28.040
I mean, ultimately, it's created this big block here.

10:28.040 --> 10:29.360
Let's get rid of that.

10:29.360 --> 10:33.720
So this is what its interpretation of Stonehenge is.

10:33.720 --> 10:34.800
It's wrong.

10:34.800 --> 10:36.800
That isn't Stonehenge.

10:36.800 --> 10:39.760
Let's just, for argument's sake,

10:39.760 --> 10:44.760
say that is close, but doesn't look like Stonehenge.

10:44.780 --> 10:46.500
It needs to be circular.

10:47.440 --> 10:48.280
Ah, here we go.

10:48.280 --> 10:49.480
This looks a bit more promising.

10:49.480 --> 10:51.040
I'm not gonna say it's gonna work

10:51.040 --> 10:53.200
because who knows what it's gonna create.

10:53.200 --> 10:54.560
Let's just clear our scene out

10:54.560 --> 10:57.480
while we're waiting for it to write our code for us.

10:57.480 --> 11:00.160
And boom, let's just run it.

11:00.160 --> 11:02.400
Okay, interesting.

11:02.400 --> 11:03.600
Let's get rid of that.

11:03.600 --> 11:04.440
It's made there.

11:04.440 --> 11:07.320
Okay, you see, it's got an idea of what's going on.

11:07.320 --> 11:08.480
And when I tried this before,

11:08.480 --> 11:09.440
I tried it with things like,

11:09.440 --> 11:14.160
oh, could you make the Stonehenge a bit more irregular?

11:14.160 --> 11:15.400
And if I got footage of that,

11:15.400 --> 11:16.720
I'll pop that up on the screen.

11:16.720 --> 11:19.000
I tried to massage it to get it to the point.

11:19.000 --> 11:21.640
At which point, I could have just made it myself

11:21.640 --> 11:23.360
in half the time.

11:23.360 --> 11:25.920
So one of the things that I did have

11:25.920 --> 11:27.440
quite a bit of success with

11:27.440 --> 11:29.560
was writing some helper code.

11:29.560 --> 11:32.080
So let's clear everything down.

11:32.080 --> 11:34.200
And again, I should really put this in a buffer.

11:34.200 --> 11:36.000
I'm gonna write a script

11:36.000 --> 11:39.520
to select every object in Blender

11:39.520 --> 11:41.160
or something along those lines.

11:41.160 --> 11:44.160
So if I have a look at my objects here,

11:44.160 --> 11:46.040
they're all named cube, right?

11:46.040 --> 11:49.480
All of these stem from a cube that's been manipulated.

11:49.480 --> 11:51.600
So I've asked it to write a script

11:51.600 --> 11:53.400
to select all mesh objects.

11:53.400 --> 11:57.520
So I'm being specific about what type of objects in Blender

11:57.520 --> 12:00.200
with names containing the word cube.

12:00.200 --> 12:02.560
Now, this is something that I have done in the past.

12:02.560 --> 12:05.200
So I'll be interested to see how it approaches it.

12:05.200 --> 12:06.960
And what we'll also do here

12:06.960 --> 12:10.240
is add in a point, bam, just over here.

12:10.240 --> 12:12.200
Let's add in a camera as well.

12:12.200 --> 12:13.640
It doesn't matter what they're pointing at.

12:13.640 --> 12:15.440
It's just so we've got something else in our scene

12:15.440 --> 12:17.560
so we can make sure it is only selecting

12:17.560 --> 12:19.560
the things that we want it to.

12:19.560 --> 12:20.680
Okay, let's run that.

12:20.680 --> 12:21.760
So this is interesting.

12:21.760 --> 12:23.800
It's approaching it from a scene level.

12:23.800 --> 12:26.480
So we see here, bpy.context.scene.

12:26.480 --> 12:28.680
I would typically approach this.

12:28.680 --> 12:31.000
I suppose that is a quite a neat way of doing it.

12:31.000 --> 12:33.560
If I was gonna do selecting all types though,

12:33.560 --> 12:37.520
I'd probably go to bpy.data.objects.

12:37.520 --> 12:40.000
If the type equals mesh, that's correct.

12:40.000 --> 12:43.160
The cube is in the objects name and said it's true.

12:43.160 --> 12:44.000
Nice.

12:44.000 --> 12:46.760
So the other thing that we're gonna add in really quickly

12:46.760 --> 12:48.960
is add in an icosphere just here

12:48.960 --> 12:50.880
so we know it is only selecting objects

12:50.880 --> 12:52.400
that aren't named cube.

12:52.400 --> 12:53.920
Okay, let's copy that.

12:53.920 --> 12:57.560
Go to our code and paste that in.

12:57.560 --> 13:00.280
Make sure nothing is selected and run our script.

13:00.280 --> 13:01.280
Look at that.

13:01.280 --> 13:02.440
That is awesome.

13:02.440 --> 13:03.880
The only thing that this is done

13:03.880 --> 13:05.800
that you'd now need to work out

13:05.800 --> 13:09.400
is make sure that this is not the active selected

13:09.400 --> 13:12.920
because that's gonna do stuff to that icosphere.

13:12.920 --> 13:17.760
Make sure one of those objects is the active selected.

13:17.760 --> 13:19.400
Now, of course, this time round,

13:19.400 --> 13:21.960
one of the things I've not done,

13:21.960 --> 13:24.360
I've not asked it and it knows

13:24.360 --> 13:27.120
that it requires Python code.

13:27.120 --> 13:28.080
That's important.

13:29.280 --> 13:30.840
Let's just see if that works.

13:30.840 --> 13:32.840
Copy code, paste it in.

13:33.960 --> 13:36.040
Yes, yes, now one of our objects

13:36.040 --> 13:37.880
is the active selected, perfect.

13:37.880 --> 13:39.720
So this is how it can really help

13:39.720 --> 13:41.880
by making some helper code for you

13:41.880 --> 13:44.520
or just as I say, exploring different things.

13:44.520 --> 13:48.000
The important thing is that AI is not coming after us yet,

13:48.000 --> 13:51.360
but we can use it to support what we're doing,

13:51.360 --> 13:55.960
to help us and aid us in producing better work more quickly,

13:55.960 --> 13:57.040
which is brilliant.

13:57.040 --> 13:59.600
Wow, so this is absolutely amazing.

13:59.600 --> 14:02.400
I love this sort of stuff and it being developed,

14:02.400 --> 14:05.480
whether it's creating images for us or writing code for us,

14:05.480 --> 14:07.720
I think this is a great help at all.

14:07.720 --> 14:08.720
Now, if you try this yourself,

14:08.720 --> 14:10.360
I'd love to see what you end up creating,

14:10.360 --> 14:11.920
so do share that with me.

14:11.920 --> 14:14.480
And if you want to learn about Python in Blender

14:14.480 --> 14:16.000
in a bit more structured manner,

14:16.000 --> 14:17.840
then check out these videos here.

14:17.840 --> 14:19.240
I'll see you in the next one.

