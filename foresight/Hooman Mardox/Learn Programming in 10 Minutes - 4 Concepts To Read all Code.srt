1
00:00:00,000 --> 00:00:08,600
Hi, humans here from Fast Tech Skills and in this video, I'm going to describe one of

2
00:00:08,600 --> 00:00:13,600
the most important things that comes to technology and that's computer programming.

3
00:00:13,600 --> 00:00:19,200
I'm going to actually take you through the most important concepts of computer programming.

4
00:00:19,200 --> 00:00:26,120
So by the end of this video, if you have no idea how computer coding works, so you get

5
00:00:26,120 --> 00:00:31,520
a really good idea at the end of this video and code like a code basis like this and source

6
00:00:31,520 --> 00:00:35,440
code like this wouldn't be as scary as they are now.

7
00:00:35,440 --> 00:00:39,880
So I just got this image from Google.

8
00:00:39,880 --> 00:00:44,520
When you look at this image, it looks a little bit like intimidating, it's not as clear and

9
00:00:44,520 --> 00:00:46,560
readable as you want it to be.

10
00:00:46,560 --> 00:00:52,920
So I'm just going to take you through four important concepts of computer programming,

11
00:00:52,920 --> 00:00:57,720
how we actually make computers do things.

12
00:00:57,720 --> 00:01:02,520
Hopefully by the end of this video, you would be amazed how simple computer programming

13
00:01:02,520 --> 00:01:03,520
could be.

14
00:01:03,520 --> 00:01:09,440
So I'm just going to delete that photo for now and we will talk about four different

15
00:01:09,440 --> 00:01:10,440
concepts.

16
00:01:10,440 --> 00:01:16,240
Basically, if you know these four different concepts, then you kind of get how computers

17
00:01:16,240 --> 00:01:19,120
work when it comes to computer coding.

18
00:01:19,120 --> 00:01:25,360
So I'm just going to actually grab my proper tool here.

19
00:01:25,360 --> 00:01:28,680
Okay, we've got the tool.

20
00:01:28,680 --> 00:01:33,400
So we will have four kind of concepts here.

21
00:01:33,400 --> 00:01:40,800
I'm going to separate the space for each of those so we know what we are doing in terms

22
00:01:40,800 --> 00:01:42,880
of using the space.

23
00:01:42,880 --> 00:01:48,720
The first one that we're going to talk about is step-by-step execution.

24
00:01:48,720 --> 00:01:50,160
So what do we mean by that?

25
00:01:50,160 --> 00:01:58,360
If I actually go ahead and make the brush a little bit smaller, so we have instructions.

26
00:01:58,360 --> 00:02:05,040
So every single line of code basically could do something when you write it.

27
00:02:05,040 --> 00:02:09,360
For example, a single line of code could print something on the screen.

28
00:02:09,360 --> 00:02:12,700
So this could print something on screen.

29
00:02:12,700 --> 00:02:19,420
Every single line of code could do a calculation, maybe calculate what two times three is,

30
00:02:19,420 --> 00:02:20,620
and so on and so forth.

31
00:02:20,620 --> 00:02:25,860
So every single line of code that you write on the screen could mean something, could

32
00:02:25,860 --> 00:02:29,340
actually order the computer to do something.

33
00:02:29,340 --> 00:02:34,980
In step-by-step execution, the machine actually goes through every single line step-by-step.

34
00:02:34,980 --> 00:02:42,660
So the order starts from the top and executes every single line one after the other.

35
00:02:43,300 --> 00:02:48,860
And this would be like a very simple basic way of executing commands.

36
00:02:48,860 --> 00:02:52,140
This would be step-by-step.

37
00:02:52,140 --> 00:03:00,500
So this is the most common and every single computer program would have such a structure

38
00:03:00,500 --> 00:03:02,020
in it.

39
00:03:02,020 --> 00:03:05,460
The next one is conditional execution.

40
00:03:05,460 --> 00:03:09,940
And basically the way that works is we would have a condition.

41
00:03:09,940 --> 00:03:15,900
So if the condition exists, we would execute a part of the code.

42
00:03:15,900 --> 00:03:19,860
If not, we won't execute that part, we would probably execute something else.

43
00:03:19,860 --> 00:03:22,260
So the condition works something like this.

44
00:03:22,260 --> 00:03:27,420
We have an input coming in, a value, and then we evaluate it.

45
00:03:27,420 --> 00:03:35,420
If the evaluation comes out as true or yes, we would go ahead and execute this piece of

46
00:03:35,420 --> 00:03:43,340
code here, or if it's no, then we would execute this other piece of code that we've got for

47
00:03:43,340 --> 00:03:44,940
the no condition.

48
00:03:44,940 --> 00:03:51,340
The best example would be kind of if you press a button on your computer, that could be a

49
00:03:51,340 --> 00:03:52,340
conditional.

50
00:03:52,340 --> 00:03:58,060
So when the condition of pressing the button kind of is true, then the code specifically

51
00:03:58,060 --> 00:04:00,060
for that button executes.

52
00:04:00,060 --> 00:04:05,020
So in code, if you want to write it in this structure, we have the kind of the condition

53
00:04:05,020 --> 00:04:07,140
at the top.

54
00:04:07,140 --> 00:04:16,340
So the condition we write it in red, then if it's true, the green will be executed here.

55
00:04:16,340 --> 00:04:20,660
If not, we can say that the orange will be executed.

56
00:04:20,660 --> 00:04:25,580
So it's a very, very simple way of actually building a condition.

57
00:04:25,580 --> 00:04:31,180
There are more sophisticated structures when it comes to conditionals, but you can get

58
00:04:31,180 --> 00:04:32,180
the idea.

59
00:04:32,180 --> 00:04:36,460
This part would be yes, and this part would be no.

60
00:04:36,460 --> 00:04:40,780
Or you can get enough to know all together and have the rest of your program.

61
00:04:40,780 --> 00:04:44,780
So if the condition exists, do something, if it doesn't exist, do nothing.

62
00:04:44,780 --> 00:04:47,020
So that could be another way of implementing it.

63
00:04:47,020 --> 00:04:52,100
Or vice versa, you can have if the condition doesn't exist, do something, or if it does

64
00:04:52,100 --> 00:04:53,100
do nothing.

65
00:04:53,100 --> 00:04:56,660
So you can arrange it in any way possible you want.

66
00:04:56,660 --> 00:04:59,340
And this basically is the conditional structure.

67
00:04:59,340 --> 00:05:03,620
We have a yes or no structure.

68
00:05:03,620 --> 00:05:05,980
The next one are the loops.

69
00:05:05,980 --> 00:05:12,860
And loops are pretty, pretty cool because it allows the computers to do tedious and hard

70
00:05:12,860 --> 00:05:13,860
work for us.

71
00:05:13,860 --> 00:05:16,740
It even helps us to write more efficient code.

72
00:05:16,740 --> 00:05:19,020
So let's see how it works.

73
00:05:19,020 --> 00:05:21,940
Let's say that we have some sort of instruction.

74
00:05:21,940 --> 00:05:23,580
Actually let me draw something.

75
00:05:23,580 --> 00:05:25,700
Let's say that we have apples.

76
00:05:25,700 --> 00:05:28,300
Let's say these are apples here.

77
00:05:28,300 --> 00:05:33,460
And we want to put these apples, we want to package them in boxes.

78
00:05:33,460 --> 00:05:38,260
So let me go ahead and actually grab another color for the color of the box.

79
00:05:38,260 --> 00:05:44,580
We have a box here and simply the instruction is that open the box.

80
00:05:44,580 --> 00:05:50,420
So we open the box and we put the apple in.

81
00:05:50,420 --> 00:05:55,820
So if I just change the color, so number one would be open the box.

82
00:05:55,820 --> 00:05:57,340
So we open it.

83
00:05:57,340 --> 00:06:01,100
We put the apple in and then we close the box.

84
00:06:01,100 --> 00:06:02,980
So that'd be like closing the box.

85
00:06:02,980 --> 00:06:05,220
So we have three steps.

86
00:06:05,220 --> 00:06:09,620
And if we want to do that for thousands of apples, that's a tedious work.

87
00:06:09,620 --> 00:06:15,340
So if we want to write it by step by step kind of instruction, we need to write thousands

88
00:06:15,340 --> 00:06:20,020
of lines of code defining that open the box, put the apple in, close the box.

89
00:06:20,020 --> 00:06:25,180
That would require as many times that we want to do the process, we need to write lines

90
00:06:25,180 --> 00:06:26,180
of code.

91
00:06:26,180 --> 00:06:30,360
And that kind of gives you the idea of what the loop is.

92
00:06:30,360 --> 00:06:37,100
So if you want to make a way that it's going to automate this process, we can use loops.

93
00:06:37,100 --> 00:06:41,980
Basically what loops do is we have some sort of instructions.

94
00:06:41,980 --> 00:06:46,700
So the instruction could be as simple as open the box, that'd be step number one.

95
00:06:46,700 --> 00:06:49,420
Put the apple in, close the box.

96
00:06:49,420 --> 00:06:54,900
Then we can repeat this process as many times as we want.

97
00:06:54,900 --> 00:07:00,980
So we can have a condition as long as the box or apples exist, do the process, or we

98
00:07:00,980 --> 00:07:06,020
can say do the process one thousand or one million times.

99
00:07:06,020 --> 00:07:10,860
Of course, these instructions could be printing a line on the screen, could be do some sort

100
00:07:10,860 --> 00:07:18,740
of calculation, whatever it is, loops allow us to basically go ahead and execute a set

101
00:07:18,740 --> 00:07:25,420
of instructions as many times as we want, which are very, very efficient and basically

102
00:07:25,420 --> 00:07:32,380
shows the true power of computer science and computing at large scale.

103
00:07:32,380 --> 00:07:38,220
The next one that we have, it's a bit kind of different than the other ones.

104
00:07:38,220 --> 00:07:47,020
Let's say that we have a set of instructions, and then we want to do something here.

105
00:07:47,420 --> 00:07:54,780
This thing that we want to do here has its own instruction, kind of its own box of instruction.

106
00:07:54,780 --> 00:08:00,420
Let's say that we have an instruction for packaging apples, we have that separated in

107
00:08:00,420 --> 00:08:06,220
a block of code, we call it a set of lines of code, kind of targeted to do something,

108
00:08:06,220 --> 00:08:10,580
and we want to use that instruction in multiple places.

109
00:08:10,700 --> 00:08:18,780
Instead of rewriting the code, then we can put that in a block and we can call that block

110
00:08:18,780 --> 00:08:22,220
to be executed throughout our code.

111
00:08:22,220 --> 00:08:27,740
Let's say that this is the apple packaging instruction, we separate it in the code, and

112
00:08:27,740 --> 00:08:35,100
then we can call that kind of block of code to do the instruction, and then we go ahead

113
00:08:35,100 --> 00:08:37,180
and do the next steps.

114
00:08:37,180 --> 00:08:43,900
This is basically functions and kind of separating the code so we can reuse them.

115
00:08:43,900 --> 00:08:48,940
It's a very, very important concept in computer programming, and there are more sophisticated

116
00:08:48,940 --> 00:08:54,260
models to it, but for now, if there is something that we keep using, if there are set of instructions

117
00:08:54,260 --> 00:09:02,820
that we keep using, then we just separate them in kind of a separate space in our code,

118
00:09:02,820 --> 00:09:08,140
and then we put them in a kind of a block sort of thing.

119
00:09:08,140 --> 00:09:12,020
There are some details to it, but for now, just imagine that you put them in a block

120
00:09:12,020 --> 00:09:17,380
and you can call that block to do those tasks anywhere you want throughout your code.

121
00:09:17,380 --> 00:09:24,020
So that's basically the last concept, so step by step, conditional loops and functions and

122
00:09:24,020 --> 00:09:27,020
kind of reusability in your code.

123
00:09:27,020 --> 00:09:30,540
So hope this video helped you to understand computer programming.

124
00:09:30,540 --> 00:09:36,380
If you understand these four concepts, then it's very, very simple to understand how computers

125
00:09:36,380 --> 00:09:43,180
work, because you can basically go ahead and break down every software on these constructing

126
00:09:43,180 --> 00:09:45,460
modules or parts.

127
00:09:45,460 --> 00:09:46,820
So that's it for this video.

128
00:09:46,820 --> 00:09:47,820
Thanks for watching.

129
00:09:47,820 --> 00:09:51,420
Subscribe to this channel if you like this explanation.

130
00:09:51,420 --> 00:09:54,740
Like this video, leave a comment, let me know what do you think, and I'll see you in the

131
00:09:54,740 --> 00:09:55,740
next video.

132
00:09:55,740 --> 00:09:56,740
So, romance here, and bye.

