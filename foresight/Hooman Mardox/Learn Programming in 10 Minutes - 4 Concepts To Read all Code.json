{"text": " Hi, humans here from Fast Tech Skills and in this video, I'm going to describe one of the most important things that comes to technology and that's computer programming. I'm going to actually take you through the most important concepts of computer programming. So by the end of this video, if you have no idea how computer coding works, so you get a really good idea at the end of this video and code like a code basis like this and source code like this wouldn't be as scary as they are now. So I just got this image from Google. When you look at this image, it looks a little bit like intimidating, it's not as clear and readable as you want it to be. So I'm just going to take you through four important concepts of computer programming, how we actually make computers do things. Hopefully by the end of this video, you would be amazed how simple computer programming could be. So I'm just going to delete that photo for now and we will talk about four different concepts. Basically, if you know these four different concepts, then you kind of get how computers work when it comes to computer coding. So I'm just going to actually grab my proper tool here. Okay, we've got the tool. So we will have four kind of concepts here. I'm going to separate the space for each of those so we know what we are doing in terms of using the space. The first one that we're going to talk about is step-by-step execution. So what do we mean by that? If I actually go ahead and make the brush a little bit smaller, so we have instructions. So every single line of code basically could do something when you write it. For example, a single line of code could print something on the screen. So this could print something on screen. Every single line of code could do a calculation, maybe calculate what two times three is, and so on and so forth. So every single line of code that you write on the screen could mean something, could actually order the computer to do something. In step-by-step execution, the machine actually goes through every single line step-by-step. So the order starts from the top and executes every single line one after the other. And this would be like a very simple basic way of executing commands. This would be step-by-step. So this is the most common and every single computer program would have such a structure in it. The next one is conditional execution. And basically the way that works is we would have a condition. So if the condition exists, we would execute a part of the code. If not, we won't execute that part, we would probably execute something else. So the condition works something like this. We have an input coming in, a value, and then we evaluate it. If the evaluation comes out as true or yes, we would go ahead and execute this piece of code here, or if it's no, then we would execute this other piece of code that we've got for the no condition. The best example would be kind of if you press a button on your computer, that could be a conditional. So when the condition of pressing the button kind of is true, then the code specifically for that button executes. So in code, if you want to write it in this structure, we have the kind of the condition at the top. So the condition we write it in red, then if it's true, the green will be executed here. If not, we can say that the orange will be executed. So it's a very, very simple way of actually building a condition. There are more sophisticated structures when it comes to conditionals, but you can get the idea. This part would be yes, and this part would be no. Or you can get enough to know all together and have the rest of your program. So if the condition exists, do something, if it doesn't exist, do nothing. So that could be another way of implementing it. Or vice versa, you can have if the condition doesn't exist, do something, or if it does do nothing. So you can arrange it in any way possible you want. And this basically is the conditional structure. We have a yes or no structure. The next one are the loops. And loops are pretty, pretty cool because it allows the computers to do tedious and hard work for us. It even helps us to write more efficient code. So let's see how it works. Let's say that we have some sort of instruction. Actually let me draw something. Let's say that we have apples. Let's say these are apples here. And we want to put these apples, we want to package them in boxes. So let me go ahead and actually grab another color for the color of the box. We have a box here and simply the instruction is that open the box. So we open the box and we put the apple in. So if I just change the color, so number one would be open the box. So we open it. We put the apple in and then we close the box. So that'd be like closing the box. So we have three steps. And if we want to do that for thousands of apples, that's a tedious work. So if we want to write it by step by step kind of instruction, we need to write thousands of lines of code defining that open the box, put the apple in, close the box. That would require as many times that we want to do the process, we need to write lines of code. And that kind of gives you the idea of what the loop is. So if you want to make a way that it's going to automate this process, we can use loops. Basically what loops do is we have some sort of instructions. So the instruction could be as simple as open the box, that'd be step number one. Put the apple in, close the box. Then we can repeat this process as many times as we want. So we can have a condition as long as the box or apples exist, do the process, or we can say do the process one thousand or one million times. Of course, these instructions could be printing a line on the screen, could be do some sort of calculation, whatever it is, loops allow us to basically go ahead and execute a set of instructions as many times as we want, which are very, very efficient and basically shows the true power of computer science and computing at large scale. The next one that we have, it's a bit kind of different than the other ones. Let's say that we have a set of instructions, and then we want to do something here. This thing that we want to do here has its own instruction, kind of its own box of instruction. Let's say that we have an instruction for packaging apples, we have that separated in a block of code, we call it a set of lines of code, kind of targeted to do something, and we want to use that instruction in multiple places. Instead of rewriting the code, then we can put that in a block and we can call that block to be executed throughout our code. Let's say that this is the apple packaging instruction, we separate it in the code, and then we can call that kind of block of code to do the instruction, and then we go ahead and do the next steps. This is basically functions and kind of separating the code so we can reuse them. It's a very, very important concept in computer programming, and there are more sophisticated models to it, but for now, if there is something that we keep using, if there are set of instructions that we keep using, then we just separate them in kind of a separate space in our code, and then we put them in a kind of a block sort of thing. There are some details to it, but for now, just imagine that you put them in a block and you can call that block to do those tasks anywhere you want throughout your code. So that's basically the last concept, so step by step, conditional loops and functions and kind of reusability in your code. So hope this video helped you to understand computer programming. If you understand these four concepts, then it's very, very simple to understand how computers work, because you can basically go ahead and break down every software on these constructing modules or parts. So that's it for this video. Thanks for watching. Subscribe to this channel if you like this explanation. Like this video, leave a comment, let me know what do you think, and I'll see you in the next video. So, romance here, and bye.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.6, "text": " Hi, humans here from Fast Tech Skills and in this video, I'm going to describe one of", "tokens": [50364, 2421, 11, 6255, 510, 490, 15968, 13795, 27856, 293, 294, 341, 960, 11, 286, 478, 516, 281, 6786, 472, 295, 50794], "temperature": 0.0, "avg_logprob": -0.18851401482099367, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.2139839231967926}, {"id": 1, "seek": 0, "start": 8.6, "end": 13.6, "text": " the most important things that comes to technology and that's computer programming.", "tokens": [50794, 264, 881, 1021, 721, 300, 1487, 281, 2899, 293, 300, 311, 3820, 9410, 13, 51044], "temperature": 0.0, "avg_logprob": -0.18851401482099367, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.2139839231967926}, {"id": 2, "seek": 0, "start": 13.6, "end": 19.2, "text": " I'm going to actually take you through the most important concepts of computer programming.", "tokens": [51044, 286, 478, 516, 281, 767, 747, 291, 807, 264, 881, 1021, 10392, 295, 3820, 9410, 13, 51324], "temperature": 0.0, "avg_logprob": -0.18851401482099367, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.2139839231967926}, {"id": 3, "seek": 0, "start": 19.2, "end": 26.12, "text": " So by the end of this video, if you have no idea how computer coding works, so you get", "tokens": [51324, 407, 538, 264, 917, 295, 341, 960, 11, 498, 291, 362, 572, 1558, 577, 3820, 17720, 1985, 11, 370, 291, 483, 51670], "temperature": 0.0, "avg_logprob": -0.18851401482099367, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.2139839231967926}, {"id": 4, "seek": 2612, "start": 26.12, "end": 31.520000000000003, "text": " a really good idea at the end of this video and code like a code basis like this and source", "tokens": [50364, 257, 534, 665, 1558, 412, 264, 917, 295, 341, 960, 293, 3089, 411, 257, 3089, 5143, 411, 341, 293, 4009, 50634], "temperature": 0.0, "avg_logprob": -0.13179262557832322, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.1257842779159546}, {"id": 5, "seek": 2612, "start": 31.520000000000003, "end": 35.44, "text": " code like this wouldn't be as scary as they are now.", "tokens": [50634, 3089, 411, 341, 2759, 380, 312, 382, 6958, 382, 436, 366, 586, 13, 50830], "temperature": 0.0, "avg_logprob": -0.13179262557832322, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.1257842779159546}, {"id": 6, "seek": 2612, "start": 35.44, "end": 39.88, "text": " So I just got this image from Google.", "tokens": [50830, 407, 286, 445, 658, 341, 3256, 490, 3329, 13, 51052], "temperature": 0.0, "avg_logprob": -0.13179262557832322, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.1257842779159546}, {"id": 7, "seek": 2612, "start": 39.88, "end": 44.52, "text": " When you look at this image, it looks a little bit like intimidating, it's not as clear and", "tokens": [51052, 1133, 291, 574, 412, 341, 3256, 11, 309, 1542, 257, 707, 857, 411, 29714, 11, 309, 311, 406, 382, 1850, 293, 51284], "temperature": 0.0, "avg_logprob": -0.13179262557832322, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.1257842779159546}, {"id": 8, "seek": 2612, "start": 44.52, "end": 46.56, "text": " readable as you want it to be.", "tokens": [51284, 49857, 382, 291, 528, 309, 281, 312, 13, 51386], "temperature": 0.0, "avg_logprob": -0.13179262557832322, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.1257842779159546}, {"id": 9, "seek": 2612, "start": 46.56, "end": 52.92, "text": " So I'm just going to take you through four important concepts of computer programming,", "tokens": [51386, 407, 286, 478, 445, 516, 281, 747, 291, 807, 1451, 1021, 10392, 295, 3820, 9410, 11, 51704], "temperature": 0.0, "avg_logprob": -0.13179262557832322, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.1257842779159546}, {"id": 10, "seek": 5292, "start": 52.92, "end": 57.72, "text": " how we actually make computers do things.", "tokens": [50364, 577, 321, 767, 652, 10807, 360, 721, 13, 50604], "temperature": 0.0, "avg_logprob": -0.143504413691434, "compression_ratio": 1.6605504587155964, "no_speech_prob": 0.042069803923368454}, {"id": 11, "seek": 5292, "start": 57.72, "end": 62.52, "text": " Hopefully by the end of this video, you would be amazed how simple computer programming", "tokens": [50604, 10429, 538, 264, 917, 295, 341, 960, 11, 291, 576, 312, 20507, 577, 2199, 3820, 9410, 50844], "temperature": 0.0, "avg_logprob": -0.143504413691434, "compression_ratio": 1.6605504587155964, "no_speech_prob": 0.042069803923368454}, {"id": 12, "seek": 5292, "start": 62.52, "end": 63.52, "text": " could be.", "tokens": [50844, 727, 312, 13, 50894], "temperature": 0.0, "avg_logprob": -0.143504413691434, "compression_ratio": 1.6605504587155964, "no_speech_prob": 0.042069803923368454}, {"id": 13, "seek": 5292, "start": 63.52, "end": 69.44, "text": " So I'm just going to delete that photo for now and we will talk about four different", "tokens": [50894, 407, 286, 478, 445, 516, 281, 12097, 300, 5052, 337, 586, 293, 321, 486, 751, 466, 1451, 819, 51190], "temperature": 0.0, "avg_logprob": -0.143504413691434, "compression_ratio": 1.6605504587155964, "no_speech_prob": 0.042069803923368454}, {"id": 14, "seek": 5292, "start": 69.44, "end": 70.44, "text": " concepts.", "tokens": [51190, 10392, 13, 51240], "temperature": 0.0, "avg_logprob": -0.143504413691434, "compression_ratio": 1.6605504587155964, "no_speech_prob": 0.042069803923368454}, {"id": 15, "seek": 5292, "start": 70.44, "end": 76.24000000000001, "text": " Basically, if you know these four different concepts, then you kind of get how computers", "tokens": [51240, 8537, 11, 498, 291, 458, 613, 1451, 819, 10392, 11, 550, 291, 733, 295, 483, 577, 10807, 51530], "temperature": 0.0, "avg_logprob": -0.143504413691434, "compression_ratio": 1.6605504587155964, "no_speech_prob": 0.042069803923368454}, {"id": 16, "seek": 5292, "start": 76.24000000000001, "end": 79.12, "text": " work when it comes to computer coding.", "tokens": [51530, 589, 562, 309, 1487, 281, 3820, 17720, 13, 51674], "temperature": 0.0, "avg_logprob": -0.143504413691434, "compression_ratio": 1.6605504587155964, "no_speech_prob": 0.042069803923368454}, {"id": 17, "seek": 7912, "start": 79.12, "end": 85.36, "text": " So I'm just going to actually grab my proper tool here.", "tokens": [50364, 407, 286, 478, 445, 516, 281, 767, 4444, 452, 2296, 2290, 510, 13, 50676], "temperature": 0.0, "avg_logprob": -0.14430281248959628, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.10666108131408691}, {"id": 18, "seek": 7912, "start": 85.36, "end": 88.68, "text": " Okay, we've got the tool.", "tokens": [50676, 1033, 11, 321, 600, 658, 264, 2290, 13, 50842], "temperature": 0.0, "avg_logprob": -0.14430281248959628, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.10666108131408691}, {"id": 19, "seek": 7912, "start": 88.68, "end": 93.4, "text": " So we will have four kind of concepts here.", "tokens": [50842, 407, 321, 486, 362, 1451, 733, 295, 10392, 510, 13, 51078], "temperature": 0.0, "avg_logprob": -0.14430281248959628, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.10666108131408691}, {"id": 20, "seek": 7912, "start": 93.4, "end": 100.80000000000001, "text": " I'm going to separate the space for each of those so we know what we are doing in terms", "tokens": [51078, 286, 478, 516, 281, 4994, 264, 1901, 337, 1184, 295, 729, 370, 321, 458, 437, 321, 366, 884, 294, 2115, 51448], "temperature": 0.0, "avg_logprob": -0.14430281248959628, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.10666108131408691}, {"id": 21, "seek": 7912, "start": 100.80000000000001, "end": 102.88000000000001, "text": " of using the space.", "tokens": [51448, 295, 1228, 264, 1901, 13, 51552], "temperature": 0.0, "avg_logprob": -0.14430281248959628, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.10666108131408691}, {"id": 22, "seek": 7912, "start": 102.88000000000001, "end": 108.72, "text": " The first one that we're going to talk about is step-by-step execution.", "tokens": [51552, 440, 700, 472, 300, 321, 434, 516, 281, 751, 466, 307, 1823, 12, 2322, 12, 16792, 15058, 13, 51844], "temperature": 0.0, "avg_logprob": -0.14430281248959628, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.10666108131408691}, {"id": 23, "seek": 10872, "start": 108.72, "end": 110.16, "text": " So what do we mean by that?", "tokens": [50364, 407, 437, 360, 321, 914, 538, 300, 30, 50436], "temperature": 0.0, "avg_logprob": -0.12329216746540812, "compression_ratio": 1.6721311475409837, "no_speech_prob": 0.02095959149301052}, {"id": 24, "seek": 10872, "start": 110.16, "end": 118.36, "text": " If I actually go ahead and make the brush a little bit smaller, so we have instructions.", "tokens": [50436, 759, 286, 767, 352, 2286, 293, 652, 264, 5287, 257, 707, 857, 4356, 11, 370, 321, 362, 9415, 13, 50846], "temperature": 0.0, "avg_logprob": -0.12329216746540812, "compression_ratio": 1.6721311475409837, "no_speech_prob": 0.02095959149301052}, {"id": 25, "seek": 10872, "start": 118.36, "end": 125.03999999999999, "text": " So every single line of code basically could do something when you write it.", "tokens": [50846, 407, 633, 2167, 1622, 295, 3089, 1936, 727, 360, 746, 562, 291, 2464, 309, 13, 51180], "temperature": 0.0, "avg_logprob": -0.12329216746540812, "compression_ratio": 1.6721311475409837, "no_speech_prob": 0.02095959149301052}, {"id": 26, "seek": 10872, "start": 125.03999999999999, "end": 129.36, "text": " For example, a single line of code could print something on the screen.", "tokens": [51180, 1171, 1365, 11, 257, 2167, 1622, 295, 3089, 727, 4482, 746, 322, 264, 2568, 13, 51396], "temperature": 0.0, "avg_logprob": -0.12329216746540812, "compression_ratio": 1.6721311475409837, "no_speech_prob": 0.02095959149301052}, {"id": 27, "seek": 10872, "start": 129.36, "end": 132.7, "text": " So this could print something on screen.", "tokens": [51396, 407, 341, 727, 4482, 746, 322, 2568, 13, 51563], "temperature": 0.0, "avg_logprob": -0.12329216746540812, "compression_ratio": 1.6721311475409837, "no_speech_prob": 0.02095959149301052}, {"id": 28, "seek": 13270, "start": 132.7, "end": 139.42, "text": " Every single line of code could do a calculation, maybe calculate what two times three is,", "tokens": [50364, 2048, 2167, 1622, 295, 3089, 727, 360, 257, 17108, 11, 1310, 8873, 437, 732, 1413, 1045, 307, 11, 50700], "temperature": 0.0, "avg_logprob": -0.1527651731784527, "compression_ratio": 1.9403669724770642, "no_speech_prob": 0.021285654976963997}, {"id": 29, "seek": 13270, "start": 139.42, "end": 140.61999999999998, "text": " and so on and so forth.", "tokens": [50700, 293, 370, 322, 293, 370, 5220, 13, 50760], "temperature": 0.0, "avg_logprob": -0.1527651731784527, "compression_ratio": 1.9403669724770642, "no_speech_prob": 0.021285654976963997}, {"id": 30, "seek": 13270, "start": 140.61999999999998, "end": 145.85999999999999, "text": " So every single line of code that you write on the screen could mean something, could", "tokens": [50760, 407, 633, 2167, 1622, 295, 3089, 300, 291, 2464, 322, 264, 2568, 727, 914, 746, 11, 727, 51022], "temperature": 0.0, "avg_logprob": -0.1527651731784527, "compression_ratio": 1.9403669724770642, "no_speech_prob": 0.021285654976963997}, {"id": 31, "seek": 13270, "start": 145.85999999999999, "end": 149.33999999999997, "text": " actually order the computer to do something.", "tokens": [51022, 767, 1668, 264, 3820, 281, 360, 746, 13, 51196], "temperature": 0.0, "avg_logprob": -0.1527651731784527, "compression_ratio": 1.9403669724770642, "no_speech_prob": 0.021285654976963997}, {"id": 32, "seek": 13270, "start": 149.33999999999997, "end": 154.98, "text": " In step-by-step execution, the machine actually goes through every single line step-by-step.", "tokens": [51196, 682, 1823, 12, 2322, 12, 16792, 15058, 11, 264, 3479, 767, 1709, 807, 633, 2167, 1622, 1823, 12, 2322, 12, 16792, 13, 51478], "temperature": 0.0, "avg_logprob": -0.1527651731784527, "compression_ratio": 1.9403669724770642, "no_speech_prob": 0.021285654976963997}, {"id": 33, "seek": 13270, "start": 154.98, "end": 162.66, "text": " So the order starts from the top and executes every single line one after the other.", "tokens": [51478, 407, 264, 1668, 3719, 490, 264, 1192, 293, 4454, 1819, 633, 2167, 1622, 472, 934, 264, 661, 13, 51862], "temperature": 0.0, "avg_logprob": -0.1527651731784527, "compression_ratio": 1.9403669724770642, "no_speech_prob": 0.021285654976963997}, {"id": 34, "seek": 16266, "start": 163.29999999999998, "end": 168.85999999999999, "text": " And this would be like a very simple basic way of executing commands.", "tokens": [50396, 400, 341, 576, 312, 411, 257, 588, 2199, 3875, 636, 295, 32368, 16901, 13, 50674], "temperature": 0.0, "avg_logprob": -0.1509235281693308, "compression_ratio": 1.6120218579234973, "no_speech_prob": 0.023327091708779335}, {"id": 35, "seek": 16266, "start": 168.85999999999999, "end": 172.14, "text": " This would be step-by-step.", "tokens": [50674, 639, 576, 312, 1823, 12, 2322, 12, 16792, 13, 50838], "temperature": 0.0, "avg_logprob": -0.1509235281693308, "compression_ratio": 1.6120218579234973, "no_speech_prob": 0.023327091708779335}, {"id": 36, "seek": 16266, "start": 172.14, "end": 180.5, "text": " So this is the most common and every single computer program would have such a structure", "tokens": [50838, 407, 341, 307, 264, 881, 2689, 293, 633, 2167, 3820, 1461, 576, 362, 1270, 257, 3877, 51256], "temperature": 0.0, "avg_logprob": -0.1509235281693308, "compression_ratio": 1.6120218579234973, "no_speech_prob": 0.023327091708779335}, {"id": 37, "seek": 16266, "start": 180.5, "end": 182.01999999999998, "text": " in it.", "tokens": [51256, 294, 309, 13, 51332], "temperature": 0.0, "avg_logprob": -0.1509235281693308, "compression_ratio": 1.6120218579234973, "no_speech_prob": 0.023327091708779335}, {"id": 38, "seek": 16266, "start": 182.01999999999998, "end": 185.46, "text": " The next one is conditional execution.", "tokens": [51332, 440, 958, 472, 307, 27708, 15058, 13, 51504], "temperature": 0.0, "avg_logprob": -0.1509235281693308, "compression_ratio": 1.6120218579234973, "no_speech_prob": 0.023327091708779335}, {"id": 39, "seek": 16266, "start": 185.46, "end": 189.94, "text": " And basically the way that works is we would have a condition.", "tokens": [51504, 400, 1936, 264, 636, 300, 1985, 307, 321, 576, 362, 257, 4188, 13, 51728], "temperature": 0.0, "avg_logprob": -0.1509235281693308, "compression_ratio": 1.6120218579234973, "no_speech_prob": 0.023327091708779335}, {"id": 40, "seek": 18994, "start": 189.94, "end": 195.9, "text": " So if the condition exists, we would execute a part of the code.", "tokens": [50364, 407, 498, 264, 4188, 8198, 11, 321, 576, 14483, 257, 644, 295, 264, 3089, 13, 50662], "temperature": 0.0, "avg_logprob": -0.09710976173137796, "compression_ratio": 1.7591623036649215, "no_speech_prob": 0.00019107750267721713}, {"id": 41, "seek": 18994, "start": 195.9, "end": 199.85999999999999, "text": " If not, we won't execute that part, we would probably execute something else.", "tokens": [50662, 759, 406, 11, 321, 1582, 380, 14483, 300, 644, 11, 321, 576, 1391, 14483, 746, 1646, 13, 50860], "temperature": 0.0, "avg_logprob": -0.09710976173137796, "compression_ratio": 1.7591623036649215, "no_speech_prob": 0.00019107750267721713}, {"id": 42, "seek": 18994, "start": 199.85999999999999, "end": 202.26, "text": " So the condition works something like this.", "tokens": [50860, 407, 264, 4188, 1985, 746, 411, 341, 13, 50980], "temperature": 0.0, "avg_logprob": -0.09710976173137796, "compression_ratio": 1.7591623036649215, "no_speech_prob": 0.00019107750267721713}, {"id": 43, "seek": 18994, "start": 202.26, "end": 207.42, "text": " We have an input coming in, a value, and then we evaluate it.", "tokens": [50980, 492, 362, 364, 4846, 1348, 294, 11, 257, 2158, 11, 293, 550, 321, 13059, 309, 13, 51238], "temperature": 0.0, "avg_logprob": -0.09710976173137796, "compression_ratio": 1.7591623036649215, "no_speech_prob": 0.00019107750267721713}, {"id": 44, "seek": 18994, "start": 207.42, "end": 215.42, "text": " If the evaluation comes out as true or yes, we would go ahead and execute this piece of", "tokens": [51238, 759, 264, 13344, 1487, 484, 382, 2074, 420, 2086, 11, 321, 576, 352, 2286, 293, 14483, 341, 2522, 295, 51638], "temperature": 0.0, "avg_logprob": -0.09710976173137796, "compression_ratio": 1.7591623036649215, "no_speech_prob": 0.00019107750267721713}, {"id": 45, "seek": 21542, "start": 215.42, "end": 223.33999999999997, "text": " code here, or if it's no, then we would execute this other piece of code that we've got for", "tokens": [50364, 3089, 510, 11, 420, 498, 309, 311, 572, 11, 550, 321, 576, 14483, 341, 661, 2522, 295, 3089, 300, 321, 600, 658, 337, 50760], "temperature": 0.0, "avg_logprob": -0.13401662319078358, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.008058765903115273}, {"id": 46, "seek": 21542, "start": 223.33999999999997, "end": 224.94, "text": " the no condition.", "tokens": [50760, 264, 572, 4188, 13, 50840], "temperature": 0.0, "avg_logprob": -0.13401662319078358, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.008058765903115273}, {"id": 47, "seek": 21542, "start": 224.94, "end": 231.33999999999997, "text": " The best example would be kind of if you press a button on your computer, that could be a", "tokens": [50840, 440, 1151, 1365, 576, 312, 733, 295, 498, 291, 1886, 257, 2960, 322, 428, 3820, 11, 300, 727, 312, 257, 51160], "temperature": 0.0, "avg_logprob": -0.13401662319078358, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.008058765903115273}, {"id": 48, "seek": 21542, "start": 231.33999999999997, "end": 232.33999999999997, "text": " conditional.", "tokens": [51160, 27708, 13, 51210], "temperature": 0.0, "avg_logprob": -0.13401662319078358, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.008058765903115273}, {"id": 49, "seek": 21542, "start": 232.33999999999997, "end": 238.06, "text": " So when the condition of pressing the button kind of is true, then the code specifically", "tokens": [51210, 407, 562, 264, 4188, 295, 12417, 264, 2960, 733, 295, 307, 2074, 11, 550, 264, 3089, 4682, 51496], "temperature": 0.0, "avg_logprob": -0.13401662319078358, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.008058765903115273}, {"id": 50, "seek": 21542, "start": 238.06, "end": 240.06, "text": " for that button executes.", "tokens": [51496, 337, 300, 2960, 4454, 1819, 13, 51596], "temperature": 0.0, "avg_logprob": -0.13401662319078358, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.008058765903115273}, {"id": 51, "seek": 21542, "start": 240.06, "end": 245.01999999999998, "text": " So in code, if you want to write it in this structure, we have the kind of the condition", "tokens": [51596, 407, 294, 3089, 11, 498, 291, 528, 281, 2464, 309, 294, 341, 3877, 11, 321, 362, 264, 733, 295, 264, 4188, 51844], "temperature": 0.0, "avg_logprob": -0.13401662319078358, "compression_ratio": 1.8245614035087718, "no_speech_prob": 0.008058765903115273}, {"id": 52, "seek": 24502, "start": 245.02, "end": 247.14000000000001, "text": " at the top.", "tokens": [50364, 412, 264, 1192, 13, 50470], "temperature": 0.0, "avg_logprob": -0.11696607217021372, "compression_ratio": 1.6373056994818653, "no_speech_prob": 0.0012446502223610878}, {"id": 53, "seek": 24502, "start": 247.14000000000001, "end": 256.34000000000003, "text": " So the condition we write it in red, then if it's true, the green will be executed here.", "tokens": [50470, 407, 264, 4188, 321, 2464, 309, 294, 2182, 11, 550, 498, 309, 311, 2074, 11, 264, 3092, 486, 312, 17577, 510, 13, 50930], "temperature": 0.0, "avg_logprob": -0.11696607217021372, "compression_ratio": 1.6373056994818653, "no_speech_prob": 0.0012446502223610878}, {"id": 54, "seek": 24502, "start": 256.34000000000003, "end": 260.66, "text": " If not, we can say that the orange will be executed.", "tokens": [50930, 759, 406, 11, 321, 393, 584, 300, 264, 7671, 486, 312, 17577, 13, 51146], "temperature": 0.0, "avg_logprob": -0.11696607217021372, "compression_ratio": 1.6373056994818653, "no_speech_prob": 0.0012446502223610878}, {"id": 55, "seek": 24502, "start": 260.66, "end": 265.58, "text": " So it's a very, very simple way of actually building a condition.", "tokens": [51146, 407, 309, 311, 257, 588, 11, 588, 2199, 636, 295, 767, 2390, 257, 4188, 13, 51392], "temperature": 0.0, "avg_logprob": -0.11696607217021372, "compression_ratio": 1.6373056994818653, "no_speech_prob": 0.0012446502223610878}, {"id": 56, "seek": 24502, "start": 265.58, "end": 271.18, "text": " There are more sophisticated structures when it comes to conditionals, but you can get", "tokens": [51392, 821, 366, 544, 16950, 9227, 562, 309, 1487, 281, 4188, 1124, 11, 457, 291, 393, 483, 51672], "temperature": 0.0, "avg_logprob": -0.11696607217021372, "compression_ratio": 1.6373056994818653, "no_speech_prob": 0.0012446502223610878}, {"id": 57, "seek": 24502, "start": 271.18, "end": 272.18, "text": " the idea.", "tokens": [51672, 264, 1558, 13, 51722], "temperature": 0.0, "avg_logprob": -0.11696607217021372, "compression_ratio": 1.6373056994818653, "no_speech_prob": 0.0012446502223610878}, {"id": 58, "seek": 27218, "start": 272.18, "end": 276.46, "text": " This part would be yes, and this part would be no.", "tokens": [50364, 639, 644, 576, 312, 2086, 11, 293, 341, 644, 576, 312, 572, 13, 50578], "temperature": 0.0, "avg_logprob": -0.1395391782124837, "compression_ratio": 1.935897435897436, "no_speech_prob": 0.3166600465774536}, {"id": 59, "seek": 27218, "start": 276.46, "end": 280.78000000000003, "text": " Or you can get enough to know all together and have the rest of your program.", "tokens": [50578, 1610, 291, 393, 483, 1547, 281, 458, 439, 1214, 293, 362, 264, 1472, 295, 428, 1461, 13, 50794], "temperature": 0.0, "avg_logprob": -0.1395391782124837, "compression_ratio": 1.935897435897436, "no_speech_prob": 0.3166600465774536}, {"id": 60, "seek": 27218, "start": 280.78000000000003, "end": 284.78000000000003, "text": " So if the condition exists, do something, if it doesn't exist, do nothing.", "tokens": [50794, 407, 498, 264, 4188, 8198, 11, 360, 746, 11, 498, 309, 1177, 380, 2514, 11, 360, 1825, 13, 50994], "temperature": 0.0, "avg_logprob": -0.1395391782124837, "compression_ratio": 1.935897435897436, "no_speech_prob": 0.3166600465774536}, {"id": 61, "seek": 27218, "start": 284.78000000000003, "end": 287.02, "text": " So that could be another way of implementing it.", "tokens": [50994, 407, 300, 727, 312, 1071, 636, 295, 18114, 309, 13, 51106], "temperature": 0.0, "avg_logprob": -0.1395391782124837, "compression_ratio": 1.935897435897436, "no_speech_prob": 0.3166600465774536}, {"id": 62, "seek": 27218, "start": 287.02, "end": 292.1, "text": " Or vice versa, you can have if the condition doesn't exist, do something, or if it does", "tokens": [51106, 1610, 11964, 25650, 11, 291, 393, 362, 498, 264, 4188, 1177, 380, 2514, 11, 360, 746, 11, 420, 498, 309, 775, 51360], "temperature": 0.0, "avg_logprob": -0.1395391782124837, "compression_ratio": 1.935897435897436, "no_speech_prob": 0.3166600465774536}, {"id": 63, "seek": 27218, "start": 292.1, "end": 293.1, "text": " do nothing.", "tokens": [51360, 360, 1825, 13, 51410], "temperature": 0.0, "avg_logprob": -0.1395391782124837, "compression_ratio": 1.935897435897436, "no_speech_prob": 0.3166600465774536}, {"id": 64, "seek": 27218, "start": 293.1, "end": 296.66, "text": " So you can arrange it in any way possible you want.", "tokens": [51410, 407, 291, 393, 9424, 309, 294, 604, 636, 1944, 291, 528, 13, 51588], "temperature": 0.0, "avg_logprob": -0.1395391782124837, "compression_ratio": 1.935897435897436, "no_speech_prob": 0.3166600465774536}, {"id": 65, "seek": 27218, "start": 296.66, "end": 299.34000000000003, "text": " And this basically is the conditional structure.", "tokens": [51588, 400, 341, 1936, 307, 264, 27708, 3877, 13, 51722], "temperature": 0.0, "avg_logprob": -0.1395391782124837, "compression_ratio": 1.935897435897436, "no_speech_prob": 0.3166600465774536}, {"id": 66, "seek": 29934, "start": 299.34, "end": 303.61999999999995, "text": " We have a yes or no structure.", "tokens": [50364, 492, 362, 257, 2086, 420, 572, 3877, 13, 50578], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 67, "seek": 29934, "start": 303.61999999999995, "end": 305.97999999999996, "text": " The next one are the loops.", "tokens": [50578, 440, 958, 472, 366, 264, 16121, 13, 50696], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 68, "seek": 29934, "start": 305.97999999999996, "end": 312.85999999999996, "text": " And loops are pretty, pretty cool because it allows the computers to do tedious and hard", "tokens": [50696, 400, 16121, 366, 1238, 11, 1238, 1627, 570, 309, 4045, 264, 10807, 281, 360, 38284, 293, 1152, 51040], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 69, "seek": 29934, "start": 312.85999999999996, "end": 313.85999999999996, "text": " work for us.", "tokens": [51040, 589, 337, 505, 13, 51090], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 70, "seek": 29934, "start": 313.85999999999996, "end": 316.73999999999995, "text": " It even helps us to write more efficient code.", "tokens": [51090, 467, 754, 3665, 505, 281, 2464, 544, 7148, 3089, 13, 51234], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 71, "seek": 29934, "start": 316.73999999999995, "end": 319.02, "text": " So let's see how it works.", "tokens": [51234, 407, 718, 311, 536, 577, 309, 1985, 13, 51348], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 72, "seek": 29934, "start": 319.02, "end": 321.94, "text": " Let's say that we have some sort of instruction.", "tokens": [51348, 961, 311, 584, 300, 321, 362, 512, 1333, 295, 10951, 13, 51494], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 73, "seek": 29934, "start": 321.94, "end": 323.58, "text": " Actually let me draw something.", "tokens": [51494, 5135, 718, 385, 2642, 746, 13, 51576], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 74, "seek": 29934, "start": 323.58, "end": 325.7, "text": " Let's say that we have apples.", "tokens": [51576, 961, 311, 584, 300, 321, 362, 16814, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 75, "seek": 29934, "start": 325.7, "end": 328.29999999999995, "text": " Let's say these are apples here.", "tokens": [51682, 961, 311, 584, 613, 366, 16814, 510, 13, 51812], "temperature": 0.0, "avg_logprob": -0.1180510564681587, "compression_ratio": 1.6919642857142858, "no_speech_prob": 0.025171147659420967}, {"id": 76, "seek": 32830, "start": 328.3, "end": 333.46000000000004, "text": " And we want to put these apples, we want to package them in boxes.", "tokens": [50364, 400, 321, 528, 281, 829, 613, 16814, 11, 321, 528, 281, 7372, 552, 294, 9002, 13, 50622], "temperature": 0.0, "avg_logprob": -0.10811556379000346, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.0020502605475485325}, {"id": 77, "seek": 32830, "start": 333.46000000000004, "end": 338.26, "text": " So let me go ahead and actually grab another color for the color of the box.", "tokens": [50622, 407, 718, 385, 352, 2286, 293, 767, 4444, 1071, 2017, 337, 264, 2017, 295, 264, 2424, 13, 50862], "temperature": 0.0, "avg_logprob": -0.10811556379000346, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.0020502605475485325}, {"id": 78, "seek": 32830, "start": 338.26, "end": 344.58000000000004, "text": " We have a box here and simply the instruction is that open the box.", "tokens": [50862, 492, 362, 257, 2424, 510, 293, 2935, 264, 10951, 307, 300, 1269, 264, 2424, 13, 51178], "temperature": 0.0, "avg_logprob": -0.10811556379000346, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.0020502605475485325}, {"id": 79, "seek": 32830, "start": 344.58000000000004, "end": 350.42, "text": " So we open the box and we put the apple in.", "tokens": [51178, 407, 321, 1269, 264, 2424, 293, 321, 829, 264, 10606, 294, 13, 51470], "temperature": 0.0, "avg_logprob": -0.10811556379000346, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.0020502605475485325}, {"id": 80, "seek": 32830, "start": 350.42, "end": 355.82, "text": " So if I just change the color, so number one would be open the box.", "tokens": [51470, 407, 498, 286, 445, 1319, 264, 2017, 11, 370, 1230, 472, 576, 312, 1269, 264, 2424, 13, 51740], "temperature": 0.0, "avg_logprob": -0.10811556379000346, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.0020502605475485325}, {"id": 81, "seek": 32830, "start": 355.82, "end": 357.34000000000003, "text": " So we open it.", "tokens": [51740, 407, 321, 1269, 309, 13, 51816], "temperature": 0.0, "avg_logprob": -0.10811556379000346, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.0020502605475485325}, {"id": 82, "seek": 35734, "start": 357.34, "end": 361.09999999999997, "text": " We put the apple in and then we close the box.", "tokens": [50364, 492, 829, 264, 10606, 294, 293, 550, 321, 1998, 264, 2424, 13, 50552], "temperature": 0.0, "avg_logprob": -0.11786817735241305, "compression_ratio": 1.9910313901345291, "no_speech_prob": 0.0006771311163902283}, {"id": 83, "seek": 35734, "start": 361.09999999999997, "end": 362.97999999999996, "text": " So that'd be like closing the box.", "tokens": [50552, 407, 300, 1116, 312, 411, 10377, 264, 2424, 13, 50646], "temperature": 0.0, "avg_logprob": -0.11786817735241305, "compression_ratio": 1.9910313901345291, "no_speech_prob": 0.0006771311163902283}, {"id": 84, "seek": 35734, "start": 362.97999999999996, "end": 365.21999999999997, "text": " So we have three steps.", "tokens": [50646, 407, 321, 362, 1045, 4439, 13, 50758], "temperature": 0.0, "avg_logprob": -0.11786817735241305, "compression_ratio": 1.9910313901345291, "no_speech_prob": 0.0006771311163902283}, {"id": 85, "seek": 35734, "start": 365.21999999999997, "end": 369.62, "text": " And if we want to do that for thousands of apples, that's a tedious work.", "tokens": [50758, 400, 498, 321, 528, 281, 360, 300, 337, 5383, 295, 16814, 11, 300, 311, 257, 38284, 589, 13, 50978], "temperature": 0.0, "avg_logprob": -0.11786817735241305, "compression_ratio": 1.9910313901345291, "no_speech_prob": 0.0006771311163902283}, {"id": 86, "seek": 35734, "start": 369.62, "end": 375.34, "text": " So if we want to write it by step by step kind of instruction, we need to write thousands", "tokens": [50978, 407, 498, 321, 528, 281, 2464, 309, 538, 1823, 538, 1823, 733, 295, 10951, 11, 321, 643, 281, 2464, 5383, 51264], "temperature": 0.0, "avg_logprob": -0.11786817735241305, "compression_ratio": 1.9910313901345291, "no_speech_prob": 0.0006771311163902283}, {"id": 87, "seek": 35734, "start": 375.34, "end": 380.02, "text": " of lines of code defining that open the box, put the apple in, close the box.", "tokens": [51264, 295, 3876, 295, 3089, 17827, 300, 1269, 264, 2424, 11, 829, 264, 10606, 294, 11, 1998, 264, 2424, 13, 51498], "temperature": 0.0, "avg_logprob": -0.11786817735241305, "compression_ratio": 1.9910313901345291, "no_speech_prob": 0.0006771311163902283}, {"id": 88, "seek": 35734, "start": 380.02, "end": 385.17999999999995, "text": " That would require as many times that we want to do the process, we need to write lines", "tokens": [51498, 663, 576, 3651, 382, 867, 1413, 300, 321, 528, 281, 360, 264, 1399, 11, 321, 643, 281, 2464, 3876, 51756], "temperature": 0.0, "avg_logprob": -0.11786817735241305, "compression_ratio": 1.9910313901345291, "no_speech_prob": 0.0006771311163902283}, {"id": 89, "seek": 35734, "start": 385.17999999999995, "end": 386.17999999999995, "text": " of code.", "tokens": [51756, 295, 3089, 13, 51806], "temperature": 0.0, "avg_logprob": -0.11786817735241305, "compression_ratio": 1.9910313901345291, "no_speech_prob": 0.0006771311163902283}, {"id": 90, "seek": 38618, "start": 386.18, "end": 390.36, "text": " And that kind of gives you the idea of what the loop is.", "tokens": [50364, 400, 300, 733, 295, 2709, 291, 264, 1558, 295, 437, 264, 6367, 307, 13, 50573], "temperature": 0.0, "avg_logprob": -0.12358432140165163, "compression_ratio": 1.6814159292035398, "no_speech_prob": 0.0014548251638188958}, {"id": 91, "seek": 38618, "start": 390.36, "end": 397.1, "text": " So if you want to make a way that it's going to automate this process, we can use loops.", "tokens": [50573, 407, 498, 291, 528, 281, 652, 257, 636, 300, 309, 311, 516, 281, 31605, 341, 1399, 11, 321, 393, 764, 16121, 13, 50910], "temperature": 0.0, "avg_logprob": -0.12358432140165163, "compression_ratio": 1.6814159292035398, "no_speech_prob": 0.0014548251638188958}, {"id": 92, "seek": 38618, "start": 397.1, "end": 401.98, "text": " Basically what loops do is we have some sort of instructions.", "tokens": [50910, 8537, 437, 16121, 360, 307, 321, 362, 512, 1333, 295, 9415, 13, 51154], "temperature": 0.0, "avg_logprob": -0.12358432140165163, "compression_ratio": 1.6814159292035398, "no_speech_prob": 0.0014548251638188958}, {"id": 93, "seek": 38618, "start": 401.98, "end": 406.7, "text": " So the instruction could be as simple as open the box, that'd be step number one.", "tokens": [51154, 407, 264, 10951, 727, 312, 382, 2199, 382, 1269, 264, 2424, 11, 300, 1116, 312, 1823, 1230, 472, 13, 51390], "temperature": 0.0, "avg_logprob": -0.12358432140165163, "compression_ratio": 1.6814159292035398, "no_speech_prob": 0.0014548251638188958}, {"id": 94, "seek": 38618, "start": 406.7, "end": 409.42, "text": " Put the apple in, close the box.", "tokens": [51390, 4935, 264, 10606, 294, 11, 1998, 264, 2424, 13, 51526], "temperature": 0.0, "avg_logprob": -0.12358432140165163, "compression_ratio": 1.6814159292035398, "no_speech_prob": 0.0014548251638188958}, {"id": 95, "seek": 38618, "start": 409.42, "end": 414.9, "text": " Then we can repeat this process as many times as we want.", "tokens": [51526, 1396, 321, 393, 7149, 341, 1399, 382, 867, 1413, 382, 321, 528, 13, 51800], "temperature": 0.0, "avg_logprob": -0.12358432140165163, "compression_ratio": 1.6814159292035398, "no_speech_prob": 0.0014548251638188958}, {"id": 96, "seek": 41490, "start": 414.9, "end": 420.97999999999996, "text": " So we can have a condition as long as the box or apples exist, do the process, or we", "tokens": [50364, 407, 321, 393, 362, 257, 4188, 382, 938, 382, 264, 2424, 420, 16814, 2514, 11, 360, 264, 1399, 11, 420, 321, 50668], "temperature": 0.0, "avg_logprob": -0.14887014627456666, "compression_ratio": 1.621212121212121, "no_speech_prob": 0.007694670930504799}, {"id": 97, "seek": 41490, "start": 420.97999999999996, "end": 426.02, "text": " can say do the process one thousand or one million times.", "tokens": [50668, 393, 584, 360, 264, 1399, 472, 4714, 420, 472, 2459, 1413, 13, 50920], "temperature": 0.0, "avg_logprob": -0.14887014627456666, "compression_ratio": 1.621212121212121, "no_speech_prob": 0.007694670930504799}, {"id": 98, "seek": 41490, "start": 426.02, "end": 430.85999999999996, "text": " Of course, these instructions could be printing a line on the screen, could be do some sort", "tokens": [50920, 2720, 1164, 11, 613, 9415, 727, 312, 14699, 257, 1622, 322, 264, 2568, 11, 727, 312, 360, 512, 1333, 51162], "temperature": 0.0, "avg_logprob": -0.14887014627456666, "compression_ratio": 1.621212121212121, "no_speech_prob": 0.007694670930504799}, {"id": 99, "seek": 41490, "start": 430.85999999999996, "end": 438.73999999999995, "text": " of calculation, whatever it is, loops allow us to basically go ahead and execute a set", "tokens": [51162, 295, 17108, 11, 2035, 309, 307, 11, 16121, 2089, 505, 281, 1936, 352, 2286, 293, 14483, 257, 992, 51556], "temperature": 0.0, "avg_logprob": -0.14887014627456666, "compression_ratio": 1.621212121212121, "no_speech_prob": 0.007694670930504799}, {"id": 100, "seek": 43874, "start": 438.74, "end": 445.42, "text": " of instructions as many times as we want, which are very, very efficient and basically", "tokens": [50364, 295, 9415, 382, 867, 1413, 382, 321, 528, 11, 597, 366, 588, 11, 588, 7148, 293, 1936, 50698], "temperature": 0.0, "avg_logprob": -0.14120149008835417, "compression_ratio": 1.6111111111111112, "no_speech_prob": 0.17318043112754822}, {"id": 101, "seek": 43874, "start": 445.42, "end": 452.38, "text": " shows the true power of computer science and computing at large scale.", "tokens": [50698, 3110, 264, 2074, 1347, 295, 3820, 3497, 293, 15866, 412, 2416, 4373, 13, 51046], "temperature": 0.0, "avg_logprob": -0.14120149008835417, "compression_ratio": 1.6111111111111112, "no_speech_prob": 0.17318043112754822}, {"id": 102, "seek": 43874, "start": 452.38, "end": 458.22, "text": " The next one that we have, it's a bit kind of different than the other ones.", "tokens": [51046, 440, 958, 472, 300, 321, 362, 11, 309, 311, 257, 857, 733, 295, 819, 813, 264, 661, 2306, 13, 51338], "temperature": 0.0, "avg_logprob": -0.14120149008835417, "compression_ratio": 1.6111111111111112, "no_speech_prob": 0.17318043112754822}, {"id": 103, "seek": 43874, "start": 458.22, "end": 467.02, "text": " Let's say that we have a set of instructions, and then we want to do something here.", "tokens": [51338, 961, 311, 584, 300, 321, 362, 257, 992, 295, 9415, 11, 293, 550, 321, 528, 281, 360, 746, 510, 13, 51778], "temperature": 0.0, "avg_logprob": -0.14120149008835417, "compression_ratio": 1.6111111111111112, "no_speech_prob": 0.17318043112754822}, {"id": 104, "seek": 46702, "start": 467.41999999999996, "end": 474.78, "text": " This thing that we want to do here has its own instruction, kind of its own box of instruction.", "tokens": [50384, 639, 551, 300, 321, 528, 281, 360, 510, 575, 1080, 1065, 10951, 11, 733, 295, 1080, 1065, 2424, 295, 10951, 13, 50752], "temperature": 0.0, "avg_logprob": -0.16520125777633102, "compression_ratio": 1.7845303867403315, "no_speech_prob": 0.021608076989650726}, {"id": 105, "seek": 46702, "start": 474.78, "end": 480.41999999999996, "text": " Let's say that we have an instruction for packaging apples, we have that separated in", "tokens": [50752, 961, 311, 584, 300, 321, 362, 364, 10951, 337, 16836, 16814, 11, 321, 362, 300, 12005, 294, 51034], "temperature": 0.0, "avg_logprob": -0.16520125777633102, "compression_ratio": 1.7845303867403315, "no_speech_prob": 0.021608076989650726}, {"id": 106, "seek": 46702, "start": 480.41999999999996, "end": 486.21999999999997, "text": " a block of code, we call it a set of lines of code, kind of targeted to do something,", "tokens": [51034, 257, 3461, 295, 3089, 11, 321, 818, 309, 257, 992, 295, 3876, 295, 3089, 11, 733, 295, 15045, 281, 360, 746, 11, 51324], "temperature": 0.0, "avg_logprob": -0.16520125777633102, "compression_ratio": 1.7845303867403315, "no_speech_prob": 0.021608076989650726}, {"id": 107, "seek": 46702, "start": 486.21999999999997, "end": 490.58, "text": " and we want to use that instruction in multiple places.", "tokens": [51324, 293, 321, 528, 281, 764, 300, 10951, 294, 3866, 3190, 13, 51542], "temperature": 0.0, "avg_logprob": -0.16520125777633102, "compression_ratio": 1.7845303867403315, "no_speech_prob": 0.021608076989650726}, {"id": 108, "seek": 49058, "start": 490.7, "end": 498.78, "text": " Instead of rewriting the code, then we can put that in a block and we can call that block", "tokens": [50370, 7156, 295, 319, 19868, 264, 3089, 11, 550, 321, 393, 829, 300, 294, 257, 3461, 293, 321, 393, 818, 300, 3461, 50774], "temperature": 0.0, "avg_logprob": -0.16423958049100987, "compression_ratio": 1.7802197802197801, "no_speech_prob": 0.003075024811550975}, {"id": 109, "seek": 49058, "start": 498.78, "end": 502.21999999999997, "text": " to be executed throughout our code.", "tokens": [50774, 281, 312, 17577, 3710, 527, 3089, 13, 50946], "temperature": 0.0, "avg_logprob": -0.16423958049100987, "compression_ratio": 1.7802197802197801, "no_speech_prob": 0.003075024811550975}, {"id": 110, "seek": 49058, "start": 502.21999999999997, "end": 507.74, "text": " Let's say that this is the apple packaging instruction, we separate it in the code, and", "tokens": [50946, 961, 311, 584, 300, 341, 307, 264, 10606, 16836, 10951, 11, 321, 4994, 309, 294, 264, 3089, 11, 293, 51222], "temperature": 0.0, "avg_logprob": -0.16423958049100987, "compression_ratio": 1.7802197802197801, "no_speech_prob": 0.003075024811550975}, {"id": 111, "seek": 49058, "start": 507.74, "end": 515.1, "text": " then we can call that kind of block of code to do the instruction, and then we go ahead", "tokens": [51222, 550, 321, 393, 818, 300, 733, 295, 3461, 295, 3089, 281, 360, 264, 10951, 11, 293, 550, 321, 352, 2286, 51590], "temperature": 0.0, "avg_logprob": -0.16423958049100987, "compression_ratio": 1.7802197802197801, "no_speech_prob": 0.003075024811550975}, {"id": 112, "seek": 49058, "start": 515.1, "end": 517.18, "text": " and do the next steps.", "tokens": [51590, 293, 360, 264, 958, 4439, 13, 51694], "temperature": 0.0, "avg_logprob": -0.16423958049100987, "compression_ratio": 1.7802197802197801, "no_speech_prob": 0.003075024811550975}, {"id": 113, "seek": 51718, "start": 517.18, "end": 523.9, "text": " This is basically functions and kind of separating the code so we can reuse them.", "tokens": [50364, 639, 307, 1936, 6828, 293, 733, 295, 29279, 264, 3089, 370, 321, 393, 26225, 552, 13, 50700], "temperature": 0.0, "avg_logprob": -0.12222322197847588, "compression_ratio": 1.721698113207547, "no_speech_prob": 0.005300399847328663}, {"id": 114, "seek": 51718, "start": 523.9, "end": 528.9399999999999, "text": " It's a very, very important concept in computer programming, and there are more sophisticated", "tokens": [50700, 467, 311, 257, 588, 11, 588, 1021, 3410, 294, 3820, 9410, 11, 293, 456, 366, 544, 16950, 50952], "temperature": 0.0, "avg_logprob": -0.12222322197847588, "compression_ratio": 1.721698113207547, "no_speech_prob": 0.005300399847328663}, {"id": 115, "seek": 51718, "start": 528.9399999999999, "end": 534.26, "text": " models to it, but for now, if there is something that we keep using, if there are set of instructions", "tokens": [50952, 5245, 281, 309, 11, 457, 337, 586, 11, 498, 456, 307, 746, 300, 321, 1066, 1228, 11, 498, 456, 366, 992, 295, 9415, 51218], "temperature": 0.0, "avg_logprob": -0.12222322197847588, "compression_ratio": 1.721698113207547, "no_speech_prob": 0.005300399847328663}, {"id": 116, "seek": 51718, "start": 534.26, "end": 542.8199999999999, "text": " that we keep using, then we just separate them in kind of a separate space in our code,", "tokens": [51218, 300, 321, 1066, 1228, 11, 550, 321, 445, 4994, 552, 294, 733, 295, 257, 4994, 1901, 294, 527, 3089, 11, 51646], "temperature": 0.0, "avg_logprob": -0.12222322197847588, "compression_ratio": 1.721698113207547, "no_speech_prob": 0.005300399847328663}, {"id": 117, "seek": 54282, "start": 542.82, "end": 548.1400000000001, "text": " and then we put them in a kind of a block sort of thing.", "tokens": [50364, 293, 550, 321, 829, 552, 294, 257, 733, 295, 257, 3461, 1333, 295, 551, 13, 50630], "temperature": 0.0, "avg_logprob": -0.17490038825470267, "compression_ratio": 1.7201646090534979, "no_speech_prob": 0.09395506978034973}, {"id": 118, "seek": 54282, "start": 548.1400000000001, "end": 552.0200000000001, "text": " There are some details to it, but for now, just imagine that you put them in a block", "tokens": [50630, 821, 366, 512, 4365, 281, 309, 11, 457, 337, 586, 11, 445, 3811, 300, 291, 829, 552, 294, 257, 3461, 50824], "temperature": 0.0, "avg_logprob": -0.17490038825470267, "compression_ratio": 1.7201646090534979, "no_speech_prob": 0.09395506978034973}, {"id": 119, "seek": 54282, "start": 552.0200000000001, "end": 557.38, "text": " and you can call that block to do those tasks anywhere you want throughout your code.", "tokens": [50824, 293, 291, 393, 818, 300, 3461, 281, 360, 729, 9608, 4992, 291, 528, 3710, 428, 3089, 13, 51092], "temperature": 0.0, "avg_logprob": -0.17490038825470267, "compression_ratio": 1.7201646090534979, "no_speech_prob": 0.09395506978034973}, {"id": 120, "seek": 54282, "start": 557.38, "end": 564.0200000000001, "text": " So that's basically the last concept, so step by step, conditional loops and functions and", "tokens": [51092, 407, 300, 311, 1936, 264, 1036, 3410, 11, 370, 1823, 538, 1823, 11, 27708, 16121, 293, 6828, 293, 51424], "temperature": 0.0, "avg_logprob": -0.17490038825470267, "compression_ratio": 1.7201646090534979, "no_speech_prob": 0.09395506978034973}, {"id": 121, "seek": 54282, "start": 564.0200000000001, "end": 567.0200000000001, "text": " kind of reusability in your code.", "tokens": [51424, 733, 295, 38860, 2310, 294, 428, 3089, 13, 51574], "temperature": 0.0, "avg_logprob": -0.17490038825470267, "compression_ratio": 1.7201646090534979, "no_speech_prob": 0.09395506978034973}, {"id": 122, "seek": 54282, "start": 567.0200000000001, "end": 570.5400000000001, "text": " So hope this video helped you to understand computer programming.", "tokens": [51574, 407, 1454, 341, 960, 4254, 291, 281, 1223, 3820, 9410, 13, 51750], "temperature": 0.0, "avg_logprob": -0.17490038825470267, "compression_ratio": 1.7201646090534979, "no_speech_prob": 0.09395506978034973}, {"id": 123, "seek": 57054, "start": 570.54, "end": 576.38, "text": " If you understand these four concepts, then it's very, very simple to understand how computers", "tokens": [50364, 759, 291, 1223, 613, 1451, 10392, 11, 550, 309, 311, 588, 11, 588, 2199, 281, 1223, 577, 10807, 50656], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}, {"id": 124, "seek": 57054, "start": 576.38, "end": 583.18, "text": " work, because you can basically go ahead and break down every software on these constructing", "tokens": [50656, 589, 11, 570, 291, 393, 1936, 352, 2286, 293, 1821, 760, 633, 4722, 322, 613, 39969, 50996], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}, {"id": 125, "seek": 57054, "start": 583.18, "end": 585.4599999999999, "text": " modules or parts.", "tokens": [50996, 16679, 420, 3166, 13, 51110], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}, {"id": 126, "seek": 57054, "start": 585.4599999999999, "end": 586.8199999999999, "text": " So that's it for this video.", "tokens": [51110, 407, 300, 311, 309, 337, 341, 960, 13, 51178], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}, {"id": 127, "seek": 57054, "start": 586.8199999999999, "end": 587.8199999999999, "text": " Thanks for watching.", "tokens": [51178, 2561, 337, 1976, 13, 51228], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}, {"id": 128, "seek": 57054, "start": 587.8199999999999, "end": 591.42, "text": " Subscribe to this channel if you like this explanation.", "tokens": [51228, 10611, 281, 341, 2269, 498, 291, 411, 341, 10835, 13, 51408], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}, {"id": 129, "seek": 57054, "start": 591.42, "end": 594.74, "text": " Like this video, leave a comment, let me know what do you think, and I'll see you in the", "tokens": [51408, 1743, 341, 960, 11, 1856, 257, 2871, 11, 718, 385, 458, 437, 360, 291, 519, 11, 293, 286, 603, 536, 291, 294, 264, 51574], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}, {"id": 130, "seek": 57054, "start": 594.74, "end": 595.74, "text": " next video.", "tokens": [51574, 958, 960, 13, 51624], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}, {"id": 131, "seek": 57054, "start": 595.74, "end": 596.74, "text": " So, romance here, and bye.", "tokens": [51624, 407, 11, 19064, 510, 11, 293, 6543, 13, 51674], "temperature": 0.0, "avg_logprob": -0.18852608604768736, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.13453316688537598}], "language": "en"}