start	end	text
0	4960	HTML is used to define the structure and content of a web page. CSS is used to give
4960	8960	style to that structure and make it look nice. And CSS is really easy to learn.
8960	12240	I'm going to start on paper by drawing out the design that I want.
13120	18320	I want a header on my web page, you can say my website. On the left hand side I want some
18320	23440	navigation with some links there. I want the main content to be to the right and then a
23440	29360	footer at the bottom. I can have a copyright notice. So in HTML each box is going to be a div.
29440	34320	To define the structure even further I'm going to put everything in a div. So then I can center
34320	39200	that in the middle of the page. I'm going to put this middle section in a div as well because
39200	43840	in HTML it's good to define roles and then split the roles up into columns if necessary.
43840	49840	So we're going to call this outer one container. I'm going to give it the id container. The hash
49840	55680	means it's the id. Then we've got hash header. This middle container I'm going to call content.
55680	62240	And inside of content we've got hash nav for navigation and hash main for the main section.
62880	68480	And then hash footer at the bottom. I want the background of the whole page
68480	73360	around here to be gray. I want the background of container to be white.
74480	80400	I want the background of header to be blue. And I want the background of footer to be gray as well.
80400	86400	I want the whole thing to be 800 pixels wide. I want the content to have 10 pixels of padding
86400	93280	around the outside. So this space here I want 10 pixels which leaves 800 subtract 10 and 10 780
93280	100960	pixels for the content. If I want main to be 600 pixels wide this leaves 180 pixels for navigation.
100960	105120	Now I'm going to quickly create that HTML structure. First in Windows Explorer you need
105120	112000	to go to folder options and untick hide extensions for known file types. Then create a new text
112000	117520	document. I'm going to call it index and then change the dot txt dot html. Index is the name you
117520	123200	give to the home page of a website. I'm going to use notepad plus plus to edit this. Any text
123200	131600	editor will do. So html tags then our head tags and we have a title my website body tags.
132320	138640	We have a Dave with the ID container. Then we have a Dave with the ID header
141200	150400	content and footer. Inside content we have nav
150960	162640	and we have main. If you just zoom out you can see all of those Dave's makeup the structure we
162640	169680	drew out on paper. Inside header we just want heading one saying my website. Inside nav
170240	175280	heading three. Now for the navigation links it's a good idea to put them in an unordered list
175280	183440	just for some nice structure. We might have about we might have contact inside main header to
184320	190640	home page. I'm going to add three paragraphs paragraph one paragraph two and paragraph three
190640	197120	of text. This is just Laura Mipson which is nonsense text. Then finally in the footer copyright
197120	203840	ampersand copy semicolon gives you the copyright symbol 2014 jQuery. So if we save that and open
203920	208880	it in a browser you'll see all of the content is there but it just doesn't look very nice at all
208880	213120	and it doesn't have the layout that we want. This is where CSS comes in create a new file I'm going
213120	220960	to call it style.css. First we have to define a relationship between the html file and the CSS
220960	226800	file. We do this with the link tag in the head section of the html. The first attribute is the
226800	233280	relationship rel and we tell it that it's a style sheet. The type of the file is text slash CSS
234080	237600	and then the link or the path to the file and since it's in the same folder we can use a very
237600	245440	simple relative path of style.css and then it's a self-closing tag like that. So the syntax of CSS
245440	250880	first you define an element that you want to target. So if I want to target an element with the
250880	258080	id header I type hash header and then open curly brackets and then further down close the curly
258080	263840	brackets and everything inside these curly brackets will be applied to the anything on the page with
263840	270240	the id header. For example I want to set the background color to blue so set background hyphen
270240	276720	color. Multiple ways to set colors I can just type blue but that doesn't give you much freedom and
276720	282960	control. The best way to do it is with a hex code. If you google html color codes you'll get a nice
283040	290000	list of these and I found earlier that 66ccff is a nice shade of blue. When you do this you must
290000	295360	prefix the number with a hash. So if we save this and refresh our page we get a blue background for
295360	300000	the header. We might also want to make the text inside that div white. We do that by saying color
300000	305760	colon and we can just type the word white and then each line must end in a semicolon. I mentioned
305760	311440	that I wanted the background of the whole page to be gray. You can target the whole page by targeting
311440	317280	the body tag. Now you don't need a hash just the word body and we can set the background color.
317280	323680	Hash eee eee is the shade of gray that I want. You'll often see when all of the numbers or
323680	328800	letters are the same you can shorten it and just type three of them. Then we wanted our container
328800	338480	to have a white background. I want the heading of the website to be centered. You can do that with
338480	344880	text hyphen align center. Remember the semicolon and I wanted the whole page to be centered in the
344880	349840	middle and I wanted it to be 800 pixels wide. This is why we wrapped everything in a container
349840	356240	div so we can set the width to be 800 pixels. Now to center it you need to set the margin hyphen
356240	364320	left to auto and the margin hyphen right to auto. This will center divs horizontally. This doesn't
364400	368960	work vertically but it's very useful for doing it horizontally. I've just noticed I've got a
368960	373200	home page in there twice. Sorry about that. Our next problem is putting the navigation and the
373200	378800	home page side by side. Let's start by defining the widths. We wanted the content div to have 10
378800	385280	pixels of padding. Now we could do padding left 10 pixels padding right 10 pixels but it's quicker
385280	392080	just to use the shorthand property padding and then the first number is the top the second number
392080	397840	is the right the third number is the bottom and the fourth number is the left hand side padding.
397840	402800	Now since these are all the same we can shorten this even more and simply just type 10 pixels and
402800	409360	that applies it to all sides. We then wanted our nav div to have a width of 180 pixels and our main
409360	415680	div to have a width of 600 pixels. Now the thing about divs is they always appear on a new line.
415680	419760	To stop that we need to set them to float. We want them to float next to each other. We want
419760	425280	nav to float to the left of its parent. Content is its parent. Now main can float either left or
425280	428800	right. It doesn't matter because there's no space for it to move but I'm going to put right so it's
428800	433120	so easy to see which order they come in. So that puts them next to each other. It makes a new problem
433120	438480	though since they're floating the footer now doesn't care that it hasn't finished it it they overlap.
439280	445520	To fix that we target the footer div and we apply a rule to this saying clear both. Now this means
445520	450880	we must be clear of any floating elements before we display ourselves. So you can see here there's
450880	455600	still a floating element here. Clearing both means let's get past all of the floating elements and
455600	461360	then display. Moving back to the HTML I'm just going to actually make these navigation links into
461360	466480	links with the a tag. They're not going to go anywhere and I'm going to apply a class to the
466480	470560	first one and call it selected because that is the page we're on at the men at the homepage.
470560	476400	So let's first make the selected link bold. To do that we can target the class
476400	482480	dot selected hash for ID dot for a class. Now if we had a selected class somewhere else and we
482480	487520	wanted to be more specific we could do hash nav hash selected just separate them with a space.
487520	494000	This filters it down to any object with the class selected inside of the object with the ID nav.
494000	499120	Then we can say font-weight bold. Since the links it puts an underline under them we might not want
499120	503200	that. We might want to get rid of underlines on all links on the page. So just like we targeted
503200	510880	the body tag we can target the a tag and say text hyphen decoration non. We might want our links to
510880	516640	be red color red and we don't like those bullet points. So let's do something about those. Let's
516640	525040	target the unordered list within the navigation div. Let's set the list hyphen style hyphen type
525040	531120	to non that removes the bullet points and let's set the padding to zero that removes the space
531120	535680	at the left. The reason we have a gap along the top is because this heading has a margin on it.
535680	542800	We can target the h1 tag and set the margin to zero. If we wanted to apply the same rules to a
542800	548000	number of different tags we can separate them with commas. We could apply to h2 and h3 as well
548000	552880	and that would remove the margin from all of the headings. To give the webpage a nicer font we can
552880	557920	set the font family property of the whole body tag. Now you need a font stack you start with the
557920	562160	name of the font that you want then you need some backups in case the user doesn't have that font.
562160	565680	So we could try aerial and just end with a type of font like sans serif.
568480	571200	Finally let's give the footer 10 pixels of padding.
572400	576960	Set the background color to gray. I'm going to choose 999999.
577920	585680	Set the color of the text to white and set the text a line to right.
587680	591280	And equally give the header 10 pixels of padding.
591840	594240	And there we go that's the webpage we designed on paper.
594800	601280	So to recap the syntax of CSS first you start by specifying what you want the following rules to
601360	607600	target. So that could be something with a particular id in which case you type a hash
607600	612640	and then the id which could be something like header. Then you open curly brackets
613680	618400	and then close the curly brackets and inside it's a good idea to indent just like an hdml so
618400	623680	easy to read. You can put the rules they come in the form of the property name a colon and then
623680	629440	the value you want to set. Each rule ends with a semicolon and it's useful to put each rule on
629440	635120	a new line. If you want to target something with a particular class you use a dot instead of a hash.
635120	641920	If you want to combine them if I wanted to to apply this rule to the object with id header and
641920	645840	all of the objects with class sidebar I can do that by using a comma.
648240	653040	If you want to target a tag instead of an id or a class you just type the name of the tag
653040	660080	so like a or body. If you want to be more specific just separate the identifiers with spaces so you
660080	667120	can have hash content dot sidebar and this means apply this rule to any object with a class sidebar
667120	673280	inside the object with the id content. Of course this doesn't have to be an id that could be a
673280	679600	class we could be even more specific. This chain can be as long as you want as long as in the hdml
679600	685680	this is inside of this and this is inside of this. One last thing I want to mention is that you don't
685680	690480	need to put the css in a separate file or two other places you can put it. You can put it
690480	697920	inside style tags directly in the head section just like that or you can use inline css. You
697920	704640	can add the style attribute to any hdml tag but it's better practice and much simpler if you keep
704640	709840	the css separate in its own file so I recommend doing that. Hopefully this has given you a good
709840	716240	introduction to css which will help you turn those plain websites into something presentable.
716240	723920	Thanks for watching. Number which is number plus number two and then we could output by typing
723920	730480	echo sum five plus three which will as expected give us eight.
