WEBVTT

00:00.000 --> 00:04.960
HTML is used to define the structure and content of a web page. CSS is used to give

00:04.960 --> 00:08.960
style to that structure and make it look nice. And CSS is really easy to learn.

00:08.960 --> 00:12.240
I'm going to start on paper by drawing out the design that I want.

00:13.120 --> 00:18.320
I want a header on my web page, you can say my website. On the left hand side I want some

00:18.320 --> 00:23.440
navigation with some links there. I want the main content to be to the right and then a

00:23.440 --> 00:29.360
footer at the bottom. I can have a copyright notice. So in HTML each box is going to be a div.

00:29.440 --> 00:34.320
To define the structure even further I'm going to put everything in a div. So then I can center

00:34.320 --> 00:39.200
that in the middle of the page. I'm going to put this middle section in a div as well because

00:39.200 --> 00:43.840
in HTML it's good to define roles and then split the roles up into columns if necessary.

00:43.840 --> 00:49.840
So we're going to call this outer one container. I'm going to give it the id container. The hash

00:49.840 --> 00:55.680
means it's the id. Then we've got hash header. This middle container I'm going to call content.

00:55.680 --> 01:02.240
And inside of content we've got hash nav for navigation and hash main for the main section.

01:02.880 --> 01:08.480
And then hash footer at the bottom. I want the background of the whole page

01:08.480 --> 01:13.360
around here to be gray. I want the background of container to be white.

01:14.480 --> 01:20.400
I want the background of header to be blue. And I want the background of footer to be gray as well.

01:20.400 --> 01:26.400
I want the whole thing to be 800 pixels wide. I want the content to have 10 pixels of padding

01:26.400 --> 01:33.280
around the outside. So this space here I want 10 pixels which leaves 800 subtract 10 and 10 780

01:33.280 --> 01:40.960
pixels for the content. If I want main to be 600 pixels wide this leaves 180 pixels for navigation.

01:40.960 --> 01:45.120
Now I'm going to quickly create that HTML structure. First in Windows Explorer you need

01:45.120 --> 01:52.000
to go to folder options and untick hide extensions for known file types. Then create a new text

01:52.000 --> 01:57.520
document. I'm going to call it index and then change the dot txt dot html. Index is the name you

01:57.520 --> 02:03.200
give to the home page of a website. I'm going to use notepad plus plus to edit this. Any text

02:03.200 --> 02:11.600
editor will do. So html tags then our head tags and we have a title my website body tags.

02:12.320 --> 02:18.640
We have a Dave with the ID container. Then we have a Dave with the ID header

02:21.200 --> 02:30.400
content and footer. Inside content we have nav

02:30.960 --> 02:42.640
and we have main. If you just zoom out you can see all of those Dave's makeup the structure we

02:42.640 --> 02:49.680
drew out on paper. Inside header we just want heading one saying my website. Inside nav

02:50.240 --> 02:55.280
heading three. Now for the navigation links it's a good idea to put them in an unordered list

02:55.280 --> 03:03.440
just for some nice structure. We might have about we might have contact inside main header to

03:04.320 --> 03:10.640
home page. I'm going to add three paragraphs paragraph one paragraph two and paragraph three

03:10.640 --> 03:17.120
of text. This is just Laura Mipson which is nonsense text. Then finally in the footer copyright

03:17.120 --> 03:23.840
ampersand copy semicolon gives you the copyright symbol 2014 jQuery. So if we save that and open

03:23.920 --> 03:28.880
it in a browser you'll see all of the content is there but it just doesn't look very nice at all

03:28.880 --> 03:33.120
and it doesn't have the layout that we want. This is where CSS comes in create a new file I'm going

03:33.120 --> 03:40.960
to call it style.css. First we have to define a relationship between the html file and the CSS

03:40.960 --> 03:46.800
file. We do this with the link tag in the head section of the html. The first attribute is the

03:46.800 --> 03:53.280
relationship rel and we tell it that it's a style sheet. The type of the file is text slash CSS

03:54.080 --> 03:57.600
and then the link or the path to the file and since it's in the same folder we can use a very

03:57.600 --> 04:05.440
simple relative path of style.css and then it's a self-closing tag like that. So the syntax of CSS

04:05.440 --> 04:10.880
first you define an element that you want to target. So if I want to target an element with the

04:10.880 --> 04:18.080
id header I type hash header and then open curly brackets and then further down close the curly

04:18.080 --> 04:23.840
brackets and everything inside these curly brackets will be applied to the anything on the page with

04:23.840 --> 04:30.240
the id header. For example I want to set the background color to blue so set background hyphen

04:30.240 --> 04:36.720
color. Multiple ways to set colors I can just type blue but that doesn't give you much freedom and

04:36.720 --> 04:42.960
control. The best way to do it is with a hex code. If you google html color codes you'll get a nice

04:43.040 --> 04:50.000
list of these and I found earlier that 66ccff is a nice shade of blue. When you do this you must

04:50.000 --> 04:55.360
prefix the number with a hash. So if we save this and refresh our page we get a blue background for

04:55.360 --> 05:00.000
the header. We might also want to make the text inside that div white. We do that by saying color

05:00.000 --> 05:05.760
colon and we can just type the word white and then each line must end in a semicolon. I mentioned

05:05.760 --> 05:11.440
that I wanted the background of the whole page to be gray. You can target the whole page by targeting

05:11.440 --> 05:17.280
the body tag. Now you don't need a hash just the word body and we can set the background color.

05:17.280 --> 05:23.680
Hash eee eee is the shade of gray that I want. You'll often see when all of the numbers or

05:23.680 --> 05:28.800
letters are the same you can shorten it and just type three of them. Then we wanted our container

05:28.800 --> 05:38.480
to have a white background. I want the heading of the website to be centered. You can do that with

05:38.480 --> 05:44.880
text hyphen align center. Remember the semicolon and I wanted the whole page to be centered in the

05:44.880 --> 05:49.840
middle and I wanted it to be 800 pixels wide. This is why we wrapped everything in a container

05:49.840 --> 05:56.240
div so we can set the width to be 800 pixels. Now to center it you need to set the margin hyphen

05:56.240 --> 06:04.320
left to auto and the margin hyphen right to auto. This will center divs horizontally. This doesn't

06:04.400 --> 06:08.960
work vertically but it's very useful for doing it horizontally. I've just noticed I've got a

06:08.960 --> 06:13.200
home page in there twice. Sorry about that. Our next problem is putting the navigation and the

06:13.200 --> 06:18.800
home page side by side. Let's start by defining the widths. We wanted the content div to have 10

06:18.800 --> 06:25.280
pixels of padding. Now we could do padding left 10 pixels padding right 10 pixels but it's quicker

06:25.280 --> 06:32.080
just to use the shorthand property padding and then the first number is the top the second number

06:32.080 --> 06:37.840
is the right the third number is the bottom and the fourth number is the left hand side padding.

06:37.840 --> 06:42.800
Now since these are all the same we can shorten this even more and simply just type 10 pixels and

06:42.800 --> 06:49.360
that applies it to all sides. We then wanted our nav div to have a width of 180 pixels and our main

06:49.360 --> 06:55.680
div to have a width of 600 pixels. Now the thing about divs is they always appear on a new line.

06:55.680 --> 06:59.760
To stop that we need to set them to float. We want them to float next to each other. We want

06:59.760 --> 07:05.280
nav to float to the left of its parent. Content is its parent. Now main can float either left or

07:05.280 --> 07:08.800
right. It doesn't matter because there's no space for it to move but I'm going to put right so it's

07:08.800 --> 07:13.120
so easy to see which order they come in. So that puts them next to each other. It makes a new problem

07:13.120 --> 07:18.480
though since they're floating the footer now doesn't care that it hasn't finished it it they overlap.

07:19.280 --> 07:25.520
To fix that we target the footer div and we apply a rule to this saying clear both. Now this means

07:25.520 --> 07:30.880
we must be clear of any floating elements before we display ourselves. So you can see here there's

07:30.880 --> 07:35.600
still a floating element here. Clearing both means let's get past all of the floating elements and

07:35.600 --> 07:41.360
then display. Moving back to the HTML I'm just going to actually make these navigation links into

07:41.360 --> 07:46.480
links with the a tag. They're not going to go anywhere and I'm going to apply a class to the

07:46.480 --> 07:50.560
first one and call it selected because that is the page we're on at the men at the homepage.

07:50.560 --> 07:56.400
So let's first make the selected link bold. To do that we can target the class

07:56.400 --> 08:02.480
dot selected hash for ID dot for a class. Now if we had a selected class somewhere else and we

08:02.480 --> 08:07.520
wanted to be more specific we could do hash nav hash selected just separate them with a space.

08:07.520 --> 08:14.000
This filters it down to any object with the class selected inside of the object with the ID nav.

08:14.000 --> 08:19.120
Then we can say font-weight bold. Since the links it puts an underline under them we might not want

08:19.120 --> 08:23.200
that. We might want to get rid of underlines on all links on the page. So just like we targeted

08:23.200 --> 08:30.880
the body tag we can target the a tag and say text hyphen decoration non. We might want our links to

08:30.880 --> 08:36.640
be red color red and we don't like those bullet points. So let's do something about those. Let's

08:36.640 --> 08:45.040
target the unordered list within the navigation div. Let's set the list hyphen style hyphen type

08:45.040 --> 08:51.120
to non that removes the bullet points and let's set the padding to zero that removes the space

08:51.120 --> 08:55.680
at the left. The reason we have a gap along the top is because this heading has a margin on it.

08:55.680 --> 09:02.800
We can target the h1 tag and set the margin to zero. If we wanted to apply the same rules to a

09:02.800 --> 09:08.000
number of different tags we can separate them with commas. We could apply to h2 and h3 as well

09:08.000 --> 09:12.880
and that would remove the margin from all of the headings. To give the webpage a nicer font we can

09:12.880 --> 09:17.920
set the font family property of the whole body tag. Now you need a font stack you start with the

09:17.920 --> 09:22.160
name of the font that you want then you need some backups in case the user doesn't have that font.

09:22.160 --> 09:25.680
So we could try aerial and just end with a type of font like sans serif.

09:28.480 --> 09:31.200
Finally let's give the footer 10 pixels of padding.

09:32.400 --> 09:36.960
Set the background color to gray. I'm going to choose 999999.

09:37.920 --> 09:45.680
Set the color of the text to white and set the text a line to right.

09:47.680 --> 09:51.280
And equally give the header 10 pixels of padding.

09:51.840 --> 09:54.240
And there we go that's the webpage we designed on paper.

09:54.800 --> 10:01.280
So to recap the syntax of CSS first you start by specifying what you want the following rules to

10:01.360 --> 10:07.600
target. So that could be something with a particular id in which case you type a hash

10:07.600 --> 10:12.640
and then the id which could be something like header. Then you open curly brackets

10:13.680 --> 10:18.400
and then close the curly brackets and inside it's a good idea to indent just like an hdml so

10:18.400 --> 10:23.680
easy to read. You can put the rules they come in the form of the property name a colon and then

10:23.680 --> 10:29.440
the value you want to set. Each rule ends with a semicolon and it's useful to put each rule on

10:29.440 --> 10:35.120
a new line. If you want to target something with a particular class you use a dot instead of a hash.

10:35.120 --> 10:41.920
If you want to combine them if I wanted to to apply this rule to the object with id header and

10:41.920 --> 10:45.840
all of the objects with class sidebar I can do that by using a comma.

10:48.240 --> 10:53.040
If you want to target a tag instead of an id or a class you just type the name of the tag

10:53.040 --> 11:00.080
so like a or body. If you want to be more specific just separate the identifiers with spaces so you

11:00.080 --> 11:07.120
can have hash content dot sidebar and this means apply this rule to any object with a class sidebar

11:07.120 --> 11:13.280
inside the object with the id content. Of course this doesn't have to be an id that could be a

11:13.280 --> 11:19.600
class we could be even more specific. This chain can be as long as you want as long as in the hdml

11:19.600 --> 11:25.680
this is inside of this and this is inside of this. One last thing I want to mention is that you don't

11:25.680 --> 11:30.480
need to put the css in a separate file or two other places you can put it. You can put it

11:30.480 --> 11:37.920
inside style tags directly in the head section just like that or you can use inline css. You

11:37.920 --> 11:44.640
can add the style attribute to any hdml tag but it's better practice and much simpler if you keep

11:44.640 --> 11:49.840
the css separate in its own file so I recommend doing that. Hopefully this has given you a good

11:49.840 --> 11:56.240
introduction to css which will help you turn those plain websites into something presentable.

11:56.240 --> 12:03.920
Thanks for watching. Number which is number plus number two and then we could output by typing

12:03.920 --> 12:10.480
echo sum five plus three which will as expected give us eight.

