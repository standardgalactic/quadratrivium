1
00:00:00,000 --> 00:00:04,960
HTML is used to define the structure and content of a web page. CSS is used to give

2
00:00:04,960 --> 00:00:08,960
style to that structure and make it look nice. And CSS is really easy to learn.

3
00:00:08,960 --> 00:00:12,240
I'm going to start on paper by drawing out the design that I want.

4
00:00:13,120 --> 00:00:18,320
I want a header on my web page, you can say my website. On the left hand side I want some

5
00:00:18,320 --> 00:00:23,440
navigation with some links there. I want the main content to be to the right and then a

6
00:00:23,440 --> 00:00:29,360
footer at the bottom. I can have a copyright notice. So in HTML each box is going to be a div.

7
00:00:29,440 --> 00:00:34,320
To define the structure even further I'm going to put everything in a div. So then I can center

8
00:00:34,320 --> 00:00:39,200
that in the middle of the page. I'm going to put this middle section in a div as well because

9
00:00:39,200 --> 00:00:43,840
in HTML it's good to define roles and then split the roles up into columns if necessary.

10
00:00:43,840 --> 00:00:49,840
So we're going to call this outer one container. I'm going to give it the id container. The hash

11
00:00:49,840 --> 00:00:55,680
means it's the id. Then we've got hash header. This middle container I'm going to call content.

12
00:00:55,680 --> 00:01:02,240
And inside of content we've got hash nav for navigation and hash main for the main section.

13
00:01:02,880 --> 00:01:08,480
And then hash footer at the bottom. I want the background of the whole page

14
00:01:08,480 --> 00:01:13,360
around here to be gray. I want the background of container to be white.

15
00:01:14,480 --> 00:01:20,400
I want the background of header to be blue. And I want the background of footer to be gray as well.

16
00:01:20,400 --> 00:01:26,400
I want the whole thing to be 800 pixels wide. I want the content to have 10 pixels of padding

17
00:01:26,400 --> 00:01:33,280
around the outside. So this space here I want 10 pixels which leaves 800 subtract 10 and 10 780

18
00:01:33,280 --> 00:01:40,960
pixels for the content. If I want main to be 600 pixels wide this leaves 180 pixels for navigation.

19
00:01:40,960 --> 00:01:45,120
Now I'm going to quickly create that HTML structure. First in Windows Explorer you need

20
00:01:45,120 --> 00:01:52,000
to go to folder options and untick hide extensions for known file types. Then create a new text

21
00:01:52,000 --> 00:01:57,520
document. I'm going to call it index and then change the dot txt dot html. Index is the name you

22
00:01:57,520 --> 00:02:03,200
give to the home page of a website. I'm going to use notepad plus plus to edit this. Any text

23
00:02:03,200 --> 00:02:11,600
editor will do. So html tags then our head tags and we have a title my website body tags.

24
00:02:12,320 --> 00:02:18,640
We have a Dave with the ID container. Then we have a Dave with the ID header

25
00:02:21,200 --> 00:02:30,400
content and footer. Inside content we have nav

26
00:02:30,960 --> 00:02:42,640
and we have main. If you just zoom out you can see all of those Dave's makeup the structure we

27
00:02:42,640 --> 00:02:49,680
drew out on paper. Inside header we just want heading one saying my website. Inside nav

28
00:02:50,240 --> 00:02:55,280
heading three. Now for the navigation links it's a good idea to put them in an unordered list

29
00:02:55,280 --> 00:03:03,440
just for some nice structure. We might have about we might have contact inside main header to

30
00:03:04,320 --> 00:03:10,640
home page. I'm going to add three paragraphs paragraph one paragraph two and paragraph three

31
00:03:10,640 --> 00:03:17,120
of text. This is just Laura Mipson which is nonsense text. Then finally in the footer copyright

32
00:03:17,120 --> 00:03:23,840
ampersand copy semicolon gives you the copyright symbol 2014 jQuery. So if we save that and open

33
00:03:23,920 --> 00:03:28,880
it in a browser you'll see all of the content is there but it just doesn't look very nice at all

34
00:03:28,880 --> 00:03:33,120
and it doesn't have the layout that we want. This is where CSS comes in create a new file I'm going

35
00:03:33,120 --> 00:03:40,960
to call it style.css. First we have to define a relationship between the html file and the CSS

36
00:03:40,960 --> 00:03:46,800
file. We do this with the link tag in the head section of the html. The first attribute is the

37
00:03:46,800 --> 00:03:53,280
relationship rel and we tell it that it's a style sheet. The type of the file is text slash CSS

38
00:03:54,080 --> 00:03:57,600
and then the link or the path to the file and since it's in the same folder we can use a very

39
00:03:57,600 --> 00:04:05,440
simple relative path of style.css and then it's a self-closing tag like that. So the syntax of CSS

40
00:04:05,440 --> 00:04:10,880
first you define an element that you want to target. So if I want to target an element with the

41
00:04:10,880 --> 00:04:18,080
id header I type hash header and then open curly brackets and then further down close the curly

42
00:04:18,080 --> 00:04:23,840
brackets and everything inside these curly brackets will be applied to the anything on the page with

43
00:04:23,840 --> 00:04:30,240
the id header. For example I want to set the background color to blue so set background hyphen

44
00:04:30,240 --> 00:04:36,720
color. Multiple ways to set colors I can just type blue but that doesn't give you much freedom and

45
00:04:36,720 --> 00:04:42,960
control. The best way to do it is with a hex code. If you google html color codes you'll get a nice

46
00:04:43,040 --> 00:04:50,000
list of these and I found earlier that 66ccff is a nice shade of blue. When you do this you must

47
00:04:50,000 --> 00:04:55,360
prefix the number with a hash. So if we save this and refresh our page we get a blue background for

48
00:04:55,360 --> 00:05:00,000
the header. We might also want to make the text inside that div white. We do that by saying color

49
00:05:00,000 --> 00:05:05,760
colon and we can just type the word white and then each line must end in a semicolon. I mentioned

50
00:05:05,760 --> 00:05:11,440
that I wanted the background of the whole page to be gray. You can target the whole page by targeting

51
00:05:11,440 --> 00:05:17,280
the body tag. Now you don't need a hash just the word body and we can set the background color.

52
00:05:17,280 --> 00:05:23,680
Hash eee eee is the shade of gray that I want. You'll often see when all of the numbers or

53
00:05:23,680 --> 00:05:28,800
letters are the same you can shorten it and just type three of them. Then we wanted our container

54
00:05:28,800 --> 00:05:38,480
to have a white background. I want the heading of the website to be centered. You can do that with

55
00:05:38,480 --> 00:05:44,880
text hyphen align center. Remember the semicolon and I wanted the whole page to be centered in the

56
00:05:44,880 --> 00:05:49,840
middle and I wanted it to be 800 pixels wide. This is why we wrapped everything in a container

57
00:05:49,840 --> 00:05:56,240
div so we can set the width to be 800 pixels. Now to center it you need to set the margin hyphen

58
00:05:56,240 --> 00:06:04,320
left to auto and the margin hyphen right to auto. This will center divs horizontally. This doesn't

59
00:06:04,400 --> 00:06:08,960
work vertically but it's very useful for doing it horizontally. I've just noticed I've got a

60
00:06:08,960 --> 00:06:13,200
home page in there twice. Sorry about that. Our next problem is putting the navigation and the

61
00:06:13,200 --> 00:06:18,800
home page side by side. Let's start by defining the widths. We wanted the content div to have 10

62
00:06:18,800 --> 00:06:25,280
pixels of padding. Now we could do padding left 10 pixels padding right 10 pixels but it's quicker

63
00:06:25,280 --> 00:06:32,080
just to use the shorthand property padding and then the first number is the top the second number

64
00:06:32,080 --> 00:06:37,840
is the right the third number is the bottom and the fourth number is the left hand side padding.

65
00:06:37,840 --> 00:06:42,800
Now since these are all the same we can shorten this even more and simply just type 10 pixels and

66
00:06:42,800 --> 00:06:49,360
that applies it to all sides. We then wanted our nav div to have a width of 180 pixels and our main

67
00:06:49,360 --> 00:06:55,680
div to have a width of 600 pixels. Now the thing about divs is they always appear on a new line.

68
00:06:55,680 --> 00:06:59,760
To stop that we need to set them to float. We want them to float next to each other. We want

69
00:06:59,760 --> 00:07:05,280
nav to float to the left of its parent. Content is its parent. Now main can float either left or

70
00:07:05,280 --> 00:07:08,800
right. It doesn't matter because there's no space for it to move but I'm going to put right so it's

71
00:07:08,800 --> 00:07:13,120
so easy to see which order they come in. So that puts them next to each other. It makes a new problem

72
00:07:13,120 --> 00:07:18,480
though since they're floating the footer now doesn't care that it hasn't finished it it they overlap.

73
00:07:19,280 --> 00:07:25,520
To fix that we target the footer div and we apply a rule to this saying clear both. Now this means

74
00:07:25,520 --> 00:07:30,880
we must be clear of any floating elements before we display ourselves. So you can see here there's

75
00:07:30,880 --> 00:07:35,600
still a floating element here. Clearing both means let's get past all of the floating elements and

76
00:07:35,600 --> 00:07:41,360
then display. Moving back to the HTML I'm just going to actually make these navigation links into

77
00:07:41,360 --> 00:07:46,480
links with the a tag. They're not going to go anywhere and I'm going to apply a class to the

78
00:07:46,480 --> 00:07:50,560
first one and call it selected because that is the page we're on at the men at the homepage.

79
00:07:50,560 --> 00:07:56,400
So let's first make the selected link bold. To do that we can target the class

80
00:07:56,400 --> 00:08:02,480
dot selected hash for ID dot for a class. Now if we had a selected class somewhere else and we

81
00:08:02,480 --> 00:08:07,520
wanted to be more specific we could do hash nav hash selected just separate them with a space.

82
00:08:07,520 --> 00:08:14,000
This filters it down to any object with the class selected inside of the object with the ID nav.

83
00:08:14,000 --> 00:08:19,120
Then we can say font-weight bold. Since the links it puts an underline under them we might not want

84
00:08:19,120 --> 00:08:23,200
that. We might want to get rid of underlines on all links on the page. So just like we targeted

85
00:08:23,200 --> 00:08:30,880
the body tag we can target the a tag and say text hyphen decoration non. We might want our links to

86
00:08:30,880 --> 00:08:36,640
be red color red and we don't like those bullet points. So let's do something about those. Let's

87
00:08:36,640 --> 00:08:45,040
target the unordered list within the navigation div. Let's set the list hyphen style hyphen type

88
00:08:45,040 --> 00:08:51,120
to non that removes the bullet points and let's set the padding to zero that removes the space

89
00:08:51,120 --> 00:08:55,680
at the left. The reason we have a gap along the top is because this heading has a margin on it.

90
00:08:55,680 --> 00:09:02,800
We can target the h1 tag and set the margin to zero. If we wanted to apply the same rules to a

91
00:09:02,800 --> 00:09:08,000
number of different tags we can separate them with commas. We could apply to h2 and h3 as well

92
00:09:08,000 --> 00:09:12,880
and that would remove the margin from all of the headings. To give the webpage a nicer font we can

93
00:09:12,880 --> 00:09:17,920
set the font family property of the whole body tag. Now you need a font stack you start with the

94
00:09:17,920 --> 00:09:22,160
name of the font that you want then you need some backups in case the user doesn't have that font.

95
00:09:22,160 --> 00:09:25,680
So we could try aerial and just end with a type of font like sans serif.

96
00:09:28,480 --> 00:09:31,200
Finally let's give the footer 10 pixels of padding.

97
00:09:32,400 --> 00:09:36,960
Set the background color to gray. I'm going to choose 999999.

98
00:09:37,920 --> 00:09:45,680
Set the color of the text to white and set the text a line to right.

99
00:09:47,680 --> 00:09:51,280
And equally give the header 10 pixels of padding.

100
00:09:51,840 --> 00:09:54,240
And there we go that's the webpage we designed on paper.

101
00:09:54,800 --> 00:10:01,280
So to recap the syntax of CSS first you start by specifying what you want the following rules to

102
00:10:01,360 --> 00:10:07,600
target. So that could be something with a particular id in which case you type a hash

103
00:10:07,600 --> 00:10:12,640
and then the id which could be something like header. Then you open curly brackets

104
00:10:13,680 --> 00:10:18,400
and then close the curly brackets and inside it's a good idea to indent just like an hdml so

105
00:10:18,400 --> 00:10:23,680
easy to read. You can put the rules they come in the form of the property name a colon and then

106
00:10:23,680 --> 00:10:29,440
the value you want to set. Each rule ends with a semicolon and it's useful to put each rule on

107
00:10:29,440 --> 00:10:35,120
a new line. If you want to target something with a particular class you use a dot instead of a hash.

108
00:10:35,120 --> 00:10:41,920
If you want to combine them if I wanted to to apply this rule to the object with id header and

109
00:10:41,920 --> 00:10:45,840
all of the objects with class sidebar I can do that by using a comma.

110
00:10:48,240 --> 00:10:53,040
If you want to target a tag instead of an id or a class you just type the name of the tag

111
00:10:53,040 --> 00:11:00,080
so like a or body. If you want to be more specific just separate the identifiers with spaces so you

112
00:11:00,080 --> 00:11:07,120
can have hash content dot sidebar and this means apply this rule to any object with a class sidebar

113
00:11:07,120 --> 00:11:13,280
inside the object with the id content. Of course this doesn't have to be an id that could be a

114
00:11:13,280 --> 00:11:19,600
class we could be even more specific. This chain can be as long as you want as long as in the hdml

115
00:11:19,600 --> 00:11:25,680
this is inside of this and this is inside of this. One last thing I want to mention is that you don't

116
00:11:25,680 --> 00:11:30,480
need to put the css in a separate file or two other places you can put it. You can put it

117
00:11:30,480 --> 00:11:37,920
inside style tags directly in the head section just like that or you can use inline css. You

118
00:11:37,920 --> 00:11:44,640
can add the style attribute to any hdml tag but it's better practice and much simpler if you keep

119
00:11:44,640 --> 00:11:49,840
the css separate in its own file so I recommend doing that. Hopefully this has given you a good

120
00:11:49,840 --> 00:11:56,240
introduction to css which will help you turn those plain websites into something presentable.

121
00:11:56,240 --> 00:12:03,920
Thanks for watching. Number which is number plus number two and then we could output by typing

122
00:12:03,920 --> 00:12:10,480
echo sum five plus three which will as expected give us eight.

