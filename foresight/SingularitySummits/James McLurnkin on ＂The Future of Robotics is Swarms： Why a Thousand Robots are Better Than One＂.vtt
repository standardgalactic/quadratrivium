WEBVTT

00:00.000 --> 00:02.080
about that shortly.

00:02.080 --> 00:05.280
So we have one more speaker before lunch,

00:05.280 --> 00:07.200
and it is Professor James McClurkin.

00:07.200 --> 00:09.600
He is the Professor of Computer Science at Rice University

00:09.600 --> 00:12.360
and a leading expert in swarm robotics.

00:12.360 --> 00:15.880
From 1999 to 2003, he was the lead research scientist

00:15.880 --> 00:20.360
at iRobot, where he managed the DARPA-funded swarm project.

00:20.360 --> 00:23.440
In 2003, as a PhD candidate at MIT,

00:23.440 --> 00:27.120
he won the Lemelson-MIT Prize for Student Invention.

00:27.120 --> 00:28.800
Professor McClurkin's research is inspired

00:28.800 --> 00:33.440
by the behavior of ants, bees, wasps, and termites.

00:33.440 --> 00:35.200
He develops distributed algorithms

00:35.200 --> 00:37.360
that allow cheap robots to exhibit

00:37.360 --> 00:39.680
similarly advanced group behaviors,

00:39.680 --> 00:43.600
including exploration and even dynamic task assignment.

00:43.600 --> 00:46.120
He is here to explain how multi-robot systems offer

00:46.120 --> 00:48.840
faster and cheaper solutions for many problems,

00:48.840 --> 00:51.560
and he has brought some robots along for a live demo.

00:51.560 --> 00:53.160
Please welcome Professor James McClurkin.

00:53.920 --> 00:54.920
Thank you.

00:59.920 --> 01:00.920
Good morning, everyone.

01:00.920 --> 01:03.800
I have the honor of standing between you and lunch,

01:03.800 --> 01:06.520
so I'll do my best to keep my remarks efficient

01:06.520 --> 01:09.760
and as interesting as possible.

01:09.760 --> 01:12.440
So we talked about swarm robots,

01:12.440 --> 01:14.560
and I've got this talk divided into three acts.

01:14.560 --> 01:17.520
For Act 1, let's get into the robot revolution.

01:17.520 --> 01:19.440
As the slide already says, it has already begun,

01:19.440 --> 01:21.200
and it is televised.

01:21.200 --> 01:21.920
Here's the Roomba.

01:21.920 --> 01:23.080
They sold 3 million of these.

01:23.080 --> 01:25.320
It's a fantastic little robot.

01:25.320 --> 01:26.880
It runs around to clean your floors.

01:26.880 --> 01:28.280
It does it all the way you're not home.

01:28.280 --> 01:30.400
Does it do as well as you do with a vacuum?

01:30.400 --> 01:34.440
No, but you don't have to push it.

01:34.440 --> 01:37.400
Honda's Asimov, arguably the most advanced human robot

01:37.400 --> 01:38.760
on the planet, just in case you're

01:38.760 --> 01:41.800
wondering if it's Asimov right there in the middle.

01:41.800 --> 01:44.280
And the job of Asimov is to help people.

01:44.280 --> 01:46.720
So we've spent the last 10,000 years

01:46.720 --> 01:48.800
building a human-sized and human-shaped world,

01:48.800 --> 01:50.640
so we need a robot that can go out there

01:50.640 --> 01:53.400
and work with us in our own place.

01:53.400 --> 01:54.240
The Packbot.

01:54.240 --> 01:56.600
This is by iRobot.

01:56.600 --> 01:58.120
And if you're these two warfighters,

01:58.120 --> 02:00.680
do you want to go into this cave or send the robot in?

02:00.680 --> 02:03.200
Well, that's easy.

02:03.200 --> 02:05.320
iRobot builds them, sends them out like that.

02:05.320 --> 02:06.960
Sometimes they come back like that.

02:06.960 --> 02:09.680
And regardless of your views of our current foreign policy,

02:09.680 --> 02:11.800
what we're doing overseas, or any of this stuff

02:11.800 --> 02:13.800
that's going on with our military,

02:13.800 --> 02:15.800
this is far better than the alternative.

02:15.800 --> 02:18.480
And the postcard says, iRobot, thank you for all of your support.

02:18.480 --> 02:20.560
You have saved lives today.

02:21.560 --> 02:23.640
So these are the three Ds of robotics.

02:23.640 --> 02:26.720
These are tasks that are dangerous, dirty, and dull.

02:26.720 --> 02:28.280
And you can figure out which ones are which

02:28.280 --> 02:30.400
based on the images if you want.

02:30.400 --> 02:32.000
But I argue that there's a fourth D.

02:32.000 --> 02:35.000
There's a fourth D of robotics that is distributed.

02:35.000 --> 02:37.000
And I think the next generation of robotics,

02:37.000 --> 02:39.040
the future of a futuristic field,

02:39.040 --> 02:42.000
is distributed systems, robots that can go and work together

02:42.000 --> 02:44.360
and do so in very large populations.

02:44.360 --> 02:46.280
Here's my favorite current example.

02:46.280 --> 02:47.800
And this is Kiva Systems.

02:47.920 --> 02:51.600
This is one of their warehouse setups.

02:51.600 --> 02:55.520
And they have huge populations of robots that work together.

02:55.520 --> 02:56.960
They're not quite fully distributed,

02:56.960 --> 02:58.440
but they do have some local autonomy.

02:58.440 --> 03:00.440
There's a big giant centralized controller

03:00.440 --> 03:01.840
that tells them what to do.

03:01.840 --> 03:04.560
And the number of robots have let them fundamentally

03:04.560 --> 03:07.360
transform the warehouse to distribute some problem.

03:07.360 --> 03:09.000
You don't need to have pickers and placers

03:09.000 --> 03:10.520
to pick stuff off of the shelves.

03:10.520 --> 03:12.000
The shelves come to you.

03:12.000 --> 03:14.480
You have humans on the periphery of the warehouse.

03:14.480 --> 03:16.280
Big 18-wheelers come in on one side

03:16.280 --> 03:19.280
loaded with one set of goods, a big truck of staples,

03:19.280 --> 03:22.520
a big truck of pencils, a big truck of pens to show up.

03:22.520 --> 03:23.600
Robots wheel up.

03:23.600 --> 03:24.280
They line up.

03:24.280 --> 03:26.080
People put the things onto the carts.

03:26.080 --> 03:27.880
The robots go somewhere.

03:27.880 --> 03:29.160
No one cares.

03:29.160 --> 03:30.720
On the other side of the warehouse,

03:30.720 --> 03:33.040
small trucks show up for individual stores.

03:33.040 --> 03:35.520
The robots again line up from somewhere.

03:35.520 --> 03:37.280
No one cares.

03:37.280 --> 03:41.000
And the humans can put the stuff onto the small trucks.

03:41.000 --> 03:43.680
All the while, the inventory is actually moving and marching

03:43.680 --> 03:44.680
around the warehouse.

03:44.680 --> 03:46.000
If you need to move to a bigger warehouse,

03:46.000 --> 03:47.160
you just build a ramp between them.

03:47.160 --> 03:48.640
I think Staples did this.

03:48.640 --> 03:50.360
And the robots march up to your new place.

03:50.360 --> 03:51.720
Fantastic stuff.

03:51.720 --> 03:55.400
So transforming the problem through large populations

03:55.400 --> 03:58.200
is what I'm really thinking about.

03:58.200 --> 04:00.000
So imagine if a forest fire.

04:00.000 --> 04:01.280
We just had a bunch in Texas.

04:01.280 --> 04:03.640
What if you had 20 robots to look for hotspots

04:03.640 --> 04:04.960
in this forest fire?

04:04.960 --> 04:07.280
This could prevent flare-ups from happening behind your

04:07.280 --> 04:07.840
fire fires.

04:07.840 --> 04:09.920
This would be fantastic.

04:09.920 --> 04:10.640
Earthquakes.

04:10.640 --> 04:13.840
Here's a job that humans are uniquely ill-suited to do.

04:13.840 --> 04:15.560
We're either too big to get into either the rubble

04:15.600 --> 04:17.200
or we're too weak to lift the rubble off

04:17.200 --> 04:18.560
if we find a survivor.

04:18.560 --> 04:20.720
So I imagine for this, I have 200 here.

04:20.720 --> 04:21.840
I should change the slide.

04:21.840 --> 04:23.560
I imagine a whole ecosystem of robots.

04:23.560 --> 04:26.360
I imagine maybe 20,000 cockroach-sized robots who

04:26.360 --> 04:27.960
can look for signs of life.

04:27.960 --> 04:30.400
They then relay their findings through their cockroach

04:30.400 --> 04:32.880
radio network to a bunch of rat-sized robots who

04:32.880 --> 04:34.480
are structural engineers.

04:34.480 --> 04:37.600
This is New York City, so we got serious rats here.

04:37.600 --> 04:41.480
And these robots then can solve the reverse Junker problem,

04:41.480 --> 04:43.640
figuring out how to excrete this person stately.

04:43.640 --> 04:44.440
They've got blueprints.

04:44.440 --> 04:46.280
They know where the signs could have occurred.

04:46.280 --> 04:47.480
They can solve this problem.

04:47.480 --> 04:49.160
They then relay their instructions to a bunch of

04:49.160 --> 04:53.040
brontosaurus-sized heavy-litters who can then go in and do

04:53.040 --> 04:55.520
the reverse Junker problem of getting the person out.

04:55.520 --> 04:58.200
So this would be a fantastic thing for robots to do.

04:58.200 --> 05:00.720
One of my favorite applications, though, is sending

05:00.720 --> 05:02.240
robots to other planets.

05:02.240 --> 05:03.760
So right now, we have two robots in Mars.

05:03.760 --> 05:05.560
Or we had two robots in Mars.

05:05.560 --> 05:08.360
Next slide, please.

05:08.360 --> 05:10.560
What if we had 2,000?

05:10.560 --> 05:12.080
And it might look something like this.

05:12.080 --> 05:13.600
So here's my demo.

05:13.600 --> 05:16.680
And I have to start the demo in the way that you need to

05:16.680 --> 05:20.360
never start a demo by begging forgiveness, because the

05:20.360 --> 05:24.320
house Wi-Fi is really powerful.

05:24.320 --> 05:25.680
My robots are less so.

05:36.840 --> 05:39.000
OK, so here is my robots.

05:39.000 --> 05:40.240
They have just landed on Mars.

05:43.240 --> 05:45.360
For this demo, there's going to be a human in charge of the

05:45.360 --> 05:49.240
swarm, me, namely.

05:49.240 --> 05:52.080
And the first thing you need to do is get the robots away

05:52.080 --> 05:53.760
from the landing site.

05:53.760 --> 05:58.720
So I'm going to ask this one to lead its colleagues out into

05:58.720 --> 06:00.120
the wild red yonder.

06:00.120 --> 06:08.480
I think they're saying down in front.

06:12.040 --> 06:16.160
So the problem is that I need to carry this guy around,

06:16.160 --> 06:19.360
because I've only got about two feet of range because of

06:19.360 --> 06:22.160
the Wi-Fi system.

06:22.160 --> 06:25.760
But let's all imagine that we have a nice, smooth follow

06:25.760 --> 06:27.240
the leader going on.

06:27.240 --> 06:28.600
I've never done this for my knees before.

06:28.600 --> 06:30.280
This is really kind of fun.

06:30.280 --> 06:33.640
The robots themselves talk to each other using infrared

06:33.640 --> 06:34.320
light.

06:34.320 --> 06:38.000
So if I can get them into a happy configuration, they can

06:38.000 --> 06:39.480
take care of themselves.

06:39.480 --> 06:40.760
And that's what I'm going to try to do.

06:53.160 --> 06:55.080
This, of course, is the one trip where I have a single

06:55.080 --> 06:57.360
pair of jeans as well.

06:58.160 --> 06:58.800
So here we go.

06:58.800 --> 07:02.800
We've got the robots out into the wild red yonder.

07:02.800 --> 07:04.880
Now we've got them to their place of exploration.

07:04.880 --> 07:06.480
Let's give them the cluster to one location.

07:10.760 --> 07:12.800
One of the joys of being the project manager is I get to

07:12.800 --> 07:14.320
pick all the music.

07:14.320 --> 07:15.280
So they're clustering.

07:15.280 --> 07:16.680
The way the robots are communicating is they're

07:16.680 --> 07:17.720
using infrared light.

07:17.720 --> 07:19.200
They're talking to their nearby robots.

07:19.200 --> 07:20.840
The range is about one meter.

07:20.840 --> 07:22.720
So the robots who are far away actually have to talk to

07:22.720 --> 07:24.400
their neighbors, to their neighbors, to their neighbors

07:24.400 --> 07:27.280
neighbors, to figure out which way to go.

07:27.280 --> 07:30.360
So having all of your robots in one place in Mars is a waste

07:30.360 --> 07:32.240
of a lot of taxpayers' money.

07:32.240 --> 07:33.560
So let's get them to spread out.

07:37.080 --> 07:37.840
There we go.

07:40.600 --> 07:43.280
All right, we're all nice and spread out.

07:43.280 --> 07:45.800
If you don't like where we are in Mars, we can switch to a

07:45.800 --> 07:47.040
flocking behavior.

07:53.240 --> 07:54.680
We can all move off together.

07:54.680 --> 07:57.000
Very simple swarming.

07:57.040 --> 07:58.240
Let's rotate a little more.

08:02.480 --> 08:05.480
Off we go, flocking and swarming.

08:05.480 --> 08:07.480
Turns out gaining and staying cohesive.

08:07.480 --> 08:09.400
We see that they're kind of spreading out a little bit.

08:09.400 --> 08:12.560
Gaining and remaining cohesive was really hard, turns out.

08:12.560 --> 08:14.920
I thought I'd get that figured out in a few weeks.

08:14.920 --> 08:19.240
Nine months later, I had a nice paper on computing the

08:19.240 --> 08:22.600
boundaries of the network, which turned out to be step one

08:22.600 --> 08:24.440
of what I thought was four steps.

08:24.440 --> 08:26.520
One of my grad students now has figured out that it's at

08:26.520 --> 08:27.680
least five steps.

08:27.680 --> 08:30.440
And we're still working on keeping them to a nice,

08:30.440 --> 08:32.040
coherent blob.

08:32.040 --> 08:34.840
OK, so here's flocking.

08:34.840 --> 08:37.280
So let's say you find something in Mars.

08:37.280 --> 08:41.520
Let's say, for example, you find, oh, I don't know, a

08:41.520 --> 08:42.120
knee.

08:42.120 --> 08:44.400
That would be very exciting to find in Mars.

08:44.400 --> 08:47.040
So what you'd want to do is get some other robots to help

08:47.040 --> 08:51.360
you analyze this specimen of patellar tendinitis.

08:51.360 --> 08:54.480
So I'm going to ask this robot to navigate through the

08:54.480 --> 08:55.600
network to that one over there.

08:55.600 --> 08:57.400
Now, when I say navigate through the network, this is the

08:57.400 --> 08:59.880
same way your email routes to the internet, but these

08:59.880 --> 09:01.320
robots to physically route.

09:01.320 --> 09:05.120
So this begins our theme about physical data structures,

09:05.120 --> 09:08.000
where the computation that's happening is in the physical

09:08.000 --> 09:13.040
world, but the algorithms are computational algorithms.

09:13.040 --> 09:16.360
And then a mean engineer comes and moves the robot, but

09:16.360 --> 09:16.800
that's OK.

09:16.800 --> 09:17.800
The network is dynamic.

09:17.800 --> 09:18.400
It has to be.

09:18.400 --> 09:20.280
The robots are moving all the time.

09:20.280 --> 09:22.680
If the network was not being rebuilt, nothing would ever

09:22.680 --> 09:24.520
work.

09:24.520 --> 09:25.880
OK.

09:25.880 --> 09:28.760
So there's our navigation.

09:28.760 --> 09:29.360
Clustering.

09:29.360 --> 09:32.000
So now we want to have three groups of robots, red, blue,

09:32.000 --> 09:32.360
and green.

09:32.360 --> 09:34.160
I don't care who's in what group.

09:34.160 --> 09:35.880
And apparently, we don't only have one red.

09:35.880 --> 09:36.640
How sad.

09:36.640 --> 09:38.480
Oh, no, there's no one.

09:38.480 --> 09:40.480
So they're trying to move to members of their own group and

09:40.480 --> 09:41.960
get away from other groups.

09:41.960 --> 09:45.280
So very much like junior high lunchrooms, you end up with

09:45.280 --> 09:47.720
three clumps of robots doing different tasks.

09:47.720 --> 09:51.280
If you wanted to, you could have them dispersed and have

09:51.280 --> 09:53.360
their tasks written distitially, but that doesn't

09:53.360 --> 09:54.760
make for a good demo.

09:54.760 --> 09:55.760
OK.

09:58.440 --> 10:00.040
This is orbiting.

10:00.040 --> 10:02.840
I'm going to cheat and move the center.

10:02.840 --> 10:04.720
So let's say you have found something on Mars, and you want

10:04.720 --> 10:08.800
to keep it safe from Martians or anything else that may be

10:08.800 --> 10:10.720
threatening your fight you find.

10:10.720 --> 10:13.400
So the even-numbered robots are flashing their red lights,

10:13.400 --> 10:16.240
and they're clustering around the source.

10:16.240 --> 10:18.680
The odd-numbered robots are flashing their blue lights,

10:18.680 --> 10:20.440
and they're orbiting the perimeter.

10:20.440 --> 10:23.200
So as long as whatever is on Mars is scared of a five-inch

10:23.200 --> 10:25.360
smaller robot, you're in good shape now.

10:28.920 --> 10:32.440
And our last demo is my favorite.

10:32.440 --> 10:34.840
So for the computer scientists in the room, this is a

10:34.840 --> 10:36.160
physical bubble sort.

10:36.160 --> 10:37.560
What they're going to do is they're going to arrange

10:37.560 --> 10:41.960
themselves in a sorted order based on lowest ID, which is

10:41.960 --> 10:43.520
this one right here.

10:43.520 --> 10:45.680
That's, by the way, how the leader is selected.

10:45.680 --> 10:48.040
The leader is selected not based on anything I do.

10:48.040 --> 10:51.720
It's based on whoever one is the lowest ID, which means,

10:51.720 --> 10:56.800
whoops, which means which everyone has never received

10:56.800 --> 10:59.200
a message from a robot that's less than it.

10:59.200 --> 11:01.720
OK, so now I'm going to tell them to form a straight line.

11:01.720 --> 11:05.160
So all the robots with IDs, so every robot is going to

11:05.160 --> 11:06.160
figure out, am I the lowest?

11:06.160 --> 11:08.560
No, because I've got a message from robot three.

11:08.560 --> 11:11.080
Likewise, one of them is going to figure out, am I the

11:11.080 --> 11:11.720
highest?

11:11.720 --> 11:14.640
And that one's going to be the lowest to highest.

11:14.640 --> 11:15.640
All the other ones are neither the

11:15.640 --> 11:17.400
lowest nor the highest, so they're going to look for the

11:17.400 --> 11:20.760
highest ID less than them, and the lowest ID greater than

11:20.760 --> 11:21.120
them.

11:21.120 --> 11:23.000
That's their successor and their predecessor in a

11:23.000 --> 11:23.840
sorted order.

11:23.840 --> 11:25.760
They're going to physically move between that, that creates a

11:25.760 --> 11:28.160
straight line segment, and then if they're all doing that

11:28.160 --> 11:30.320
by induction, you get a globally straight line.

11:30.320 --> 11:31.320
So off we go.

11:35.160 --> 11:36.280
There's the highest ID.

11:36.280 --> 11:39.360
It's 113, I think, indeed.

11:39.360 --> 11:41.440
And all the other ones are doing their best to get

11:41.440 --> 11:48.440
themselves arranged, and they've done a pretty good job.

11:48.440 --> 11:49.680
It never works that well.

11:52.080 --> 12:04.760
Well, since that worked so well, I've got to do it any

12:04.760 --> 12:06.440
self-respecting engineer would do, which

12:06.440 --> 12:08.200
is a mess with it.

12:08.200 --> 12:11.520
And the worst possible thing I can do is what I just did.

12:11.520 --> 12:15.160
And now they have to then resort themselves.

12:15.160 --> 12:16.240
So the little sounds are hearing.

12:16.240 --> 12:17.640
Those are robots who are in bad neighborhoods.

12:17.640 --> 12:20.520
They can't find a successor or they can't find a successor.

12:20.520 --> 12:22.360
And they've got to kind of work it out.

12:22.360 --> 12:24.080
One of the things you have to embrace with multi-year-old

12:24.080 --> 12:26.560
systems is that you have to kind of have a zen with this

12:26.560 --> 12:27.520
whole thing.

12:27.520 --> 12:29.720
It may not happen exactly the way you want.

12:29.720 --> 12:31.200
That robot may get tied into a knot.

12:31.200 --> 12:33.320
It may look like a fool up here on stage.

12:33.320 --> 12:35.760
But as long as you wait long enough, as long as the system

12:35.760 --> 12:40.400
does not have any systematic errors, they get caught behind

12:40.400 --> 12:44.080
a wall they can't get out of, they fall into a rut, then

12:44.080 --> 12:46.480
well, eventually, we'll have victory.

12:46.480 --> 12:47.080
Excellent.

12:47.080 --> 12:48.360
Well, there's our demo.

12:48.360 --> 13:01.360
I'm going to leave them up here because I can't turn them off.

13:01.360 --> 13:05.040
All right, let's go back to the boring PowerPoint.

13:05.040 --> 13:09.280
So how do you program 20,000 robots?

13:09.280 --> 13:10.200
Where does this come from?

13:13.200 --> 13:16.680
So here's what the lab looked like back at our robot

13:16.720 --> 13:19.720
before our room had to go over my feature space.

13:19.720 --> 13:21.000
And this is 68 robots.

13:21.000 --> 13:23.160
So let's do something useful with them.

13:23.160 --> 13:24.560
So I've got this demo on stage.

13:24.560 --> 13:26.600
Let's do something slightly more useful.

13:26.600 --> 13:30.040
And what we're going to do in this video, whoops, is that

13:30.040 --> 13:32.280
we're going to look for treasure in this room.

13:32.280 --> 13:34.880
The treasure is hidden on the left-hand side of the screen.

13:34.880 --> 13:36.200
In this case, it's an orange ball.

13:36.200 --> 13:38.080
You can tell robots anything is treasure.

13:38.080 --> 13:39.920
They're not very smart.

13:39.920 --> 13:41.440
And you're going to see four types of robots.

13:41.440 --> 13:43.840
Blue robots are on the boundaries between explore

13:43.840 --> 13:45.360
space and unexplore space.

13:45.360 --> 13:47.160
And they're going to ask the red robots to push them

13:47.160 --> 13:49.200
forward out into the environment.

13:49.200 --> 13:50.480
White robots are guides.

13:50.480 --> 13:52.040
They're going to lead the humans to the treasure.

13:52.040 --> 13:55.040
And green robots want to go back and go charge.

13:55.040 --> 13:58.080
The video is sped up about, I think, about 10 times.

13:58.080 --> 13:59.120
So off we go.

13:59.120 --> 14:01.680
You can see the blue robots on the boundary.

14:01.680 --> 14:05.240
And the red robots are pushing them forward.

14:05.240 --> 14:07.360
Now, the robots have already found the treasure.

14:07.360 --> 14:09.480
There's one over there blinking very excitedly in those

14:09.480 --> 14:11.320
tables.

14:11.320 --> 14:12.880
The treasure really wasn't very well hidden.

14:12.880 --> 14:15.440
But like I said, robots aren't very smart.

14:15.440 --> 14:18.760
So when the lights go back off, you'll see some white robots.

14:18.760 --> 14:19.600
And those are guides.

14:19.600 --> 14:21.680
And they're going to lead us to the treasure.

14:21.680 --> 14:23.800
They're going to navigation algorithm you just saw.

14:23.800 --> 14:25.640
And green robots have low batteries.

14:25.640 --> 14:28.480
They're going to go back and go charge.

14:28.480 --> 14:30.960
When we're all done exploring, we had to get them all back

14:30.960 --> 14:31.200
home.

14:31.200 --> 14:32.560
So we had to run recovery.

14:32.560 --> 14:34.320
And here they are recovering.

14:34.320 --> 14:36.720
They're forming actually a maximally span tree.

14:36.720 --> 14:37.720
I've got a slide on this.

14:37.720 --> 14:39.280
And they're all trying to get back home.

14:39.280 --> 14:42.720
But the important thing about this video is that, for the

14:42.720 --> 14:47.680
keen of eye, you will notice, one little robot didn't quite

14:47.680 --> 14:48.320
make it home.

14:48.320 --> 14:50.280
We had 104 robots that day.

14:50.280 --> 14:53.080
We had enough robots, these robots, to make the floor shake

14:53.080 --> 14:55.840
in this wood-framed school house, which is really very cool.

14:55.840 --> 14:57.960
104 robots, one didn't get home.

14:57.960 --> 14:59.640
That's less than 1%.

14:59.640 --> 15:01.560
That's just fine.

15:01.560 --> 15:05.240
We did have some other more serious problems, though.

15:05.240 --> 15:07.880
When you're five inches tall, the world is a very big place.

15:07.880 --> 15:09.920
So we tried a whole bunch of clever techniques to get them

15:09.920 --> 15:12.560
to not be quite so stupid.

15:12.600 --> 15:15.640
Eventually we gave up and ran around a duct tape, which

15:15.640 --> 15:19.800
further through duct tape is a solution to all problems.

15:19.800 --> 15:20.440
All right.

15:20.440 --> 15:22.720
So where do these ideas come from?

15:22.720 --> 15:27.600
And nature provides a fantastic repository of distributed

15:27.600 --> 15:32.960
algorithms for which engineers can not usually seek direct

15:32.960 --> 15:36.680
guidance, but almost always seek inspiration.

15:36.680 --> 15:40.400
So we have leaf cutter ants, weaver ants, and a

15:40.440 --> 15:41.120
carpenter ants.

15:41.120 --> 15:44.800
These are my personal ants in their ant condo.

15:44.800 --> 15:48.080
So here's a slide from Professor Thomas Celia Cornel.

15:48.080 --> 15:51.520
And he has been studying honey bees forever, essentially.

15:51.520 --> 15:55.840
And this is his idea of how they figure out where to forge

15:55.840 --> 15:58.400
at a particular nectar site.

15:58.400 --> 16:00.960
So the box to say things like fraudability of continuing

16:00.960 --> 16:04.320
forage from site A, forward to great from site A, total

16:04.320 --> 16:06.920
strength of recruitment signals from nectar source A. So they

16:06.920 --> 16:09.200
can now choose between nectar source A, nectar source B,

16:09.200 --> 16:10.400
blah, blah, blah, blah, blah.

16:10.400 --> 16:13.720
So what's important about this isn't so much what it's doing

16:13.720 --> 16:15.680
as is what it is.

16:15.680 --> 16:18.560
So the computer scientists in the room, this is a flowchart.

16:18.560 --> 16:22.040
I can take this and slap some semicolons on this and expect

16:22.040 --> 16:24.760
that I can compile this and run it on my robots.

16:24.760 --> 16:29.440
So the biologists get external validation of their model.

16:29.440 --> 16:32.560
They can't change the software on their bees to really see

16:32.560 --> 16:34.600
what is affecting what.

16:34.600 --> 16:35.840
So it's good for them.

16:35.840 --> 16:39.000
The engineers get software that's been debugged for 160

16:39.000 --> 16:40.560
million years.

16:40.560 --> 16:43.320
Get it debugged?

16:43.320 --> 16:44.880
All right.

16:44.880 --> 16:46.120
Here's another thing I want to look at.

16:46.120 --> 16:47.920
This is multi-route manipulation.

16:47.920 --> 16:51.000
And these animals do not know the geometry of their

16:51.000 --> 16:51.480
environment.

16:51.480 --> 16:52.800
They don't know the geometry of the potato chip.

16:52.800 --> 16:54.800
But they're able to get it moving pretty well.

16:54.800 --> 16:56.840
I want to understand how they do this.

16:56.840 --> 16:58.160
OK.

16:58.160 --> 17:00.600
So what does nature teach us?

17:00.600 --> 17:03.480
We have an existential proof that these things work.

17:03.480 --> 17:04.840
And they work well.

17:04.840 --> 17:10.960
Ants can get to 20 million strong for army ants and

17:10.960 --> 17:11.720
driver ants.

17:11.720 --> 17:13.000
That's 200 pounds of ants.

17:13.000 --> 17:14.840
I weigh about 200 pounds.

17:14.840 --> 17:16.760
That's a lot of ants.

17:16.760 --> 17:19.880
And they also tell us that population sizes can be

17:19.880 --> 17:22.160
transformative to how you solve these problems.

17:22.160 --> 17:26.240
You can do things with 10,000 robots that you can't do

17:26.240 --> 17:27.000
with 100.

17:27.000 --> 17:28.720
And you can do things with 10 million robots that you

17:28.720 --> 17:30.440
can't do with 10,000.

17:30.440 --> 17:31.560
Here's an example.

17:31.560 --> 17:34.200
This is a boundary detection on my robots.

17:34.200 --> 17:36.000
So they're trying to figure out who's on the outside and

17:36.000 --> 17:36.880
who's on the inside.

17:36.880 --> 17:38.600
And they've done a nice job here.

17:38.600 --> 17:40.560
I can't do this with 20 robots.

17:40.560 --> 17:44.800
I've got 108 here on this slide.

17:44.800 --> 17:46.480
And that's brilliant enough to do this right.

17:46.480 --> 17:49.280
I'd prefer to have a thousand on this slide.

17:49.280 --> 17:51.080
Here I am doing it with real robots.

17:51.080 --> 17:54.480
And this is on the lower right over there.

17:54.480 --> 17:55.960
I tried to make it look random.

17:55.960 --> 17:58.080
But that's about the smallest number of robots I could do

17:58.080 --> 18:00.880
to get that geometry to run my algorithm.

18:00.880 --> 18:03.800
I needed more robots.

18:03.800 --> 18:07.680
So the other thing that we can take from this, now taking

18:07.680 --> 18:10.480
off our biology hat, putting on our computer science hat, is

18:10.480 --> 18:12.960
that this computation is unique.

18:12.960 --> 18:15.920
The algorithms that we do have to go through the physical

18:15.920 --> 18:17.200
world.

18:17.200 --> 18:20.680
So it's not enough to just have a little piece of software

18:20.680 --> 18:22.600
and think about how it's going to run.

18:22.600 --> 18:24.600
You have to understand how the world comes into this whole

18:24.600 --> 18:28.120
picture, how communication and mobility changes what the data

18:28.120 --> 18:29.920
your algorithm is dealing with, and then how you can then take

18:29.920 --> 18:33.640
that data and then put it back into the real world.

18:33.680 --> 18:36.080
So I'm calling that physical data structures.

18:36.080 --> 18:38.080
I'm here as a physical data structure.

18:38.080 --> 18:40.640
This is a maximally spanning tree.

18:40.640 --> 18:45.360
The blue robots are forming a communication backbone for all

18:45.360 --> 18:46.080
the other robots.

18:46.080 --> 18:48.520
So every robot has a connection to a blue robot

18:48.520 --> 18:49.200
somewhere.

18:49.200 --> 18:52.480
They can all get information to the communication highway to

18:52.480 --> 18:54.160
get back home.

18:54.160 --> 18:56.720
You can use this data structure not to just route

18:56.720 --> 19:00.480
information around, as you can guess where I'm going.

19:00.480 --> 19:02.280
You can use it to route robots around.

19:02.280 --> 19:03.440
So here's a video.

19:03.440 --> 19:04.400
These are the new robots.

19:04.400 --> 19:07.480
These robots do not have the physical data structure.

19:07.480 --> 19:09.400
And as you can see, they are unhappy.

19:09.400 --> 19:10.680
They can't get home.

19:10.680 --> 19:11.960
We come over here.

19:19.360 --> 19:20.800
We come over here.

19:20.800 --> 19:22.960
These robots do have the physical data structure.

19:22.960 --> 19:25.240
And some of them are staying put so that their neighbors can

19:25.240 --> 19:26.760
work their way back home.

19:26.760 --> 19:28.880
One little robot got the wrong way.

19:28.880 --> 19:30.200
And then his batteries died.

19:30.200 --> 19:31.760
So I had to go take it out.

19:34.000 --> 19:37.840
But I'm not going to let this finish.

19:37.840 --> 19:38.600
But you get the idea.

19:38.600 --> 19:40.840
They're all going to get home except for the one that died.

19:40.840 --> 19:44.200
So life is good with data.

19:44.200 --> 19:45.600
I talked about the bubble sort algorithm.

19:45.600 --> 19:47.560
Here it is on PowerPoint.

19:47.560 --> 19:49.520
So robot two and nine are special.

19:49.520 --> 19:50.320
They know they're special.

19:50.320 --> 19:52.680
Robot five wants to figure out where to go.

19:52.680 --> 19:53.560
Well, that's easy.

19:53.560 --> 19:54.840
It goes right there.

19:54.840 --> 19:57.880
When you get more robots, well, if they each iterately move

19:57.880 --> 20:01.160
to their best guess, turns out it all works out.

20:01.160 --> 20:03.200
And the math behind this, I've got a student who's

20:03.240 --> 20:04.120
working on the math behind this.

20:04.120 --> 20:06.120
He's got actually very beautiful mathematical proof

20:06.120 --> 20:07.600
that says that actually does work.

20:07.600 --> 20:10.640
You've seen the video, so I can skip this.

20:10.640 --> 20:12.480
Finally, we want to explore building.

20:12.480 --> 20:15.000
So here we want to get the robots to spread out

20:15.000 --> 20:18.160
as far as possible to search everything in the building.

20:18.160 --> 20:20.520
But if the building is too big to search simultaneously,

20:20.520 --> 20:21.640
what can you do?

20:21.640 --> 20:24.280
You have to have somebody to keep track of where you've been.

20:24.280 --> 20:25.840
So we'll get them to go through the hallway.

20:25.840 --> 20:27.200
They'll find a junction.

20:27.200 --> 20:29.360
They'll do a push onto their physical stack

20:29.360 --> 20:30.720
where they're now going this way.

20:30.720 --> 20:32.040
Everyone go this way.

20:32.040 --> 20:32.920
They go that way.

20:32.920 --> 20:34.520
Then they see everyone go this way.

20:34.520 --> 20:36.000
The green robot and the red robot

20:36.000 --> 20:40.160
are storing information about which way they're exploring.

20:40.160 --> 20:41.000
They get to a junction.

20:41.000 --> 20:42.160
They get to an endpoint.

20:42.160 --> 20:44.040
They tell the green robot to switch.

20:44.040 --> 20:46.040
Now the information has been updated.

20:46.040 --> 20:48.240
So now you know the new way to explore.

20:48.240 --> 20:51.040
So if you can source information where you need it,

20:51.040 --> 20:54.400
aka at the junction, and you can update it without ever having

20:54.400 --> 20:56.200
to have the robots build a global map.

20:56.200 --> 20:57.280
They don't know where they are.

20:57.280 --> 20:58.800
They just know I'm at a junction.

20:58.800 --> 21:00.720
I'm facing this way.

21:00.720 --> 21:02.080
And you can do that in real life.

21:05.160 --> 21:05.640
Very nice.

21:05.640 --> 21:06.920
Thank you.

21:06.920 --> 21:08.360
So here the robots are coming down.

21:08.360 --> 21:10.440
The junction robot is the one with the dunce cap.

21:10.440 --> 21:13.200
I'm using that just to mark where the junction is.

21:13.200 --> 21:15.720
This one here is going to find the junction

21:15.720 --> 21:17.960
and then point that way.

21:17.960 --> 21:20.160
Everyone go that way.

21:20.160 --> 21:22.880
The robots now head out.

21:22.880 --> 21:25.320
We'll speed up again.

21:25.320 --> 21:27.680
When it gets to the end of the corridor,

21:27.680 --> 21:29.760
there's another dunce cap marking the end.

21:29.760 --> 21:32.040
That robot over there says, I'm at the end.

21:32.040 --> 21:33.520
Everyone go the other way.

21:33.520 --> 21:35.640
And then they all go the other way.

21:35.640 --> 21:38.120
And that's where my students' camera ran out of memory.

21:40.840 --> 21:42.440
But you can store the state physically, which

21:42.440 --> 21:44.640
is you can get some real efficiencies there.

21:44.640 --> 21:46.320
OK, summary.

21:46.320 --> 21:50.320
Multiracisms are going to become the norm, not the exception.

21:50.320 --> 21:53.480
I'll put my stake in the ground on that.

21:53.480 --> 21:55.000
We need algorithms, theory, and horror

21:55.000 --> 21:56.480
to support this revolution.

21:56.480 --> 21:58.000
So the research in my group tries

21:58.000 --> 21:59.160
to cover all these things.

21:59.160 --> 22:00.800
We're heavy on algorithms.

22:00.800 --> 22:05.080
And then 50% algorithms, 25% theory and hardware.

22:05.080 --> 22:07.720
The real breakthrough that I'm trying to make

22:07.720 --> 22:10.920
is how to understand how to do the sensing, computation,

22:10.920 --> 22:13.440
actuation through the physical world

22:13.440 --> 22:15.680
and how to reason about it in a nice, clear way.

22:15.680 --> 22:18.640
Computer science, essentially as a branch of mathematics,

22:18.640 --> 22:22.600
has made a lot of advances because they

22:22.600 --> 22:25.400
have a nice, clean model of how to deal with computation.

22:25.400 --> 22:27.440
So I want that for the robots.

22:27.440 --> 22:30.360
And I think physical data structures are a way to do that.

22:30.360 --> 22:34.800
OK, so Act 3, real watch in the classroom.

22:34.800 --> 22:37.720
So taking off my research hat, putting it on my professor hat,

22:37.720 --> 22:39.840
my scholarly teaching hat, is that I

22:39.840 --> 22:43.080
want to have impact on education.

22:43.080 --> 22:47.240
So we are in an education crisis right now.

22:47.240 --> 22:49.600
We have policy and politics that are largely

22:49.600 --> 22:52.240
anti-education or funding.

22:52.240 --> 22:55.680
I live in Texas now, which is, well, is Texas.

22:55.680 --> 22:58.400
So if people say, we spent all this money on education,

22:58.400 --> 23:00.480
it's really bad, we should cut the funding

23:00.480 --> 23:01.640
because it's not doing any good.

23:01.640 --> 23:04.280
That doesn't make any sense.

23:04.280 --> 23:06.720
We should double the salary of all the teachers, just

23:06.720 --> 23:07.160
right there.

23:07.160 --> 23:09.160
So that way, my students, when they come out,

23:09.160 --> 23:11.880
they have an offer from, again, this is Texas.

23:11.880 --> 23:14.360
So they have an offer from, what was that,

23:14.360 --> 23:20.440
Exxon for $89k, and offer from a local school for maybe $60k.

23:20.440 --> 23:23.720
So you're asking her to take a $29,000 pay cut.

23:23.760 --> 23:27.920
Right now, you're asking her to take a $59,000 pay cut.

23:27.920 --> 23:29.800
And that doesn't make any sense.

23:29.800 --> 23:30.400
All right.

23:30.400 --> 23:34.000
So these ones here are above my pay grade.

23:34.000 --> 23:35.920
Let's deal with these bottom three.

23:35.920 --> 23:38.400
Count to protect your social pressure on students,

23:38.400 --> 23:40.480
a.k.a. you're a dork, you're a geek,

23:40.480 --> 23:41.760
you should not be doing technology,

23:41.760 --> 23:43.520
particularly if your skin is brown.

23:43.520 --> 23:45.760
Uninspired curriculum and amazing access

23:45.760 --> 23:48.680
of fun and technical curriculum.

23:48.680 --> 23:52.120
So I think robots at the rescue can solve this problem.

23:52.120 --> 23:53.480
I think we can fix this.

23:53.480 --> 23:55.200
I want to increase engineering literacy

23:55.200 --> 23:57.440
with a fun hands-on curriculum.

23:57.440 --> 24:01.000
I want to work in the real world with real robots.

24:01.000 --> 24:03.560
This is what I give the freshman in my class,

24:03.560 --> 24:05.560
first semester freshman at Rice University.

24:05.560 --> 24:07.200
Everyone gets a Tupperware container.

24:07.200 --> 24:09.400
Inside the Tupperware container, they find,

24:09.400 --> 24:10.840
they don't find this.

24:10.840 --> 24:13.080
They find a USB connector.

24:13.080 --> 24:14.960
They find a piece of an anti-static phone.

24:14.960 --> 24:17.280
And they find their very own mobile robot.

24:17.280 --> 24:19.480
This is what they use in my engineering systems class.

24:19.480 --> 24:22.280
We cover mechanical engineering, computer science,

24:22.280 --> 24:23.280
and electrical engineering.

24:23.280 --> 24:26.400
They take control theory, communications,

24:26.400 --> 24:30.760
basic robot behaviors, simple artificial intelligence,

24:30.760 --> 24:34.840
all in the course of the fall semester.

24:34.840 --> 24:35.880
So we'll set that up here.

24:39.840 --> 24:41.560
So blah, blah, blah, blah, blah.

24:41.560 --> 24:43.440
The world didn't need a robot, but of course,

24:43.440 --> 24:44.360
we did need a robot.

24:44.360 --> 24:46.320
So I built one, old robots, new robots.

24:46.320 --> 24:48.120
We'll skip all this stuff.

24:48.120 --> 24:51.080
The robot that we have now, the new one that we're working on,

24:51.080 --> 24:53.120
is an advanced, low-cost, multi-robot.

24:53.120 --> 24:57.200
It does almost everything these 2003 versions do,

24:57.200 --> 24:59.720
except it does it at about one-tenth the cost.

24:59.720 --> 25:02.120
So it's advanced enough for real-life research.

25:02.120 --> 25:03.680
It's robust enough for classroom users,

25:03.680 --> 25:06.040
and it's cheap enough for a K-12 outreach.

25:06.040 --> 25:07.840
The dial will be open sometime next year.

25:07.840 --> 25:10.320
We're going to release this stuff so that everyone

25:10.320 --> 25:12.200
can use this thing.

25:12.200 --> 25:14.360
So the sensors that we have are a bunch.

25:14.360 --> 25:15.240
They're light sensors.

25:15.240 --> 25:16.040
And you know what?

25:16.040 --> 25:16.520
I'm going to skip this.

25:16.520 --> 25:17.720
You can find us on the website.

25:17.720 --> 25:20.840
Lots of sensors.

25:20.840 --> 25:23.080
Really simple mechanical design.

25:23.120 --> 25:25.000
And lots of sensors, by the way, not only

25:25.000 --> 25:26.720
makes your robot a better robot, but it opens up

25:26.720 --> 25:29.680
huge curriculum possibilities, even fun possibilities.

25:29.680 --> 25:31.480
You can use this robot as remote control

25:31.480 --> 25:32.520
to control another one.

25:32.520 --> 25:34.840
That's a great homework activity to give your students.

25:34.840 --> 25:37.640
At any rate, amazingly simple, elegant design.

25:37.640 --> 25:39.600
I can take a little bit of the credit for this.

25:39.600 --> 25:41.240
My students are fantastic.

25:41.240 --> 25:43.640
For 14 screws, whole robot, 14 screws.

25:43.640 --> 25:46.080
I love it.

25:46.080 --> 25:47.400
You can do real science with them.

25:47.400 --> 25:49.000
So I gave these to my graduate class

25:49.000 --> 25:49.520
and said, you know what?

25:49.520 --> 25:51.720
Go find existing algorithms in the literature

25:51.760 --> 25:53.600
and run them on these robots.

25:53.600 --> 25:55.320
The video here is doing a PARCO filter.

25:55.320 --> 25:57.720
The yellow circle is an estimate of the position

25:57.720 --> 25:58.960
of the red circle.

25:58.960 --> 26:00.880
These robots, they're cheap.

26:00.880 --> 26:02.400
They don't have fantastic sensing.

26:02.400 --> 26:04.200
But with the right processing, you

26:04.200 --> 26:06.760
can have a pretty good estimate of where your red neighbor is.

26:09.640 --> 26:11.440
But the real thing that I'm proudest of

26:11.440 --> 26:12.760
is my freshman class.

26:12.760 --> 26:15.080
It's NG128, first semester freshman.

26:15.080 --> 26:18.600
And we want to attract talented but dissuaded students.

26:18.600 --> 26:20.920
Students who have been told, you

26:20.920 --> 26:23.400
are far too feminine to be an engineer.

26:23.400 --> 26:25.360
You're far too brown to be an engineer.

26:25.360 --> 26:26.840
Or why would you want to be a geek,

26:26.840 --> 26:30.320
even though you can make three times the money I'm going to make?

26:30.320 --> 26:32.240
So we want to get those students and have them come back

26:32.240 --> 26:34.520
to engineering, people who weren't interested but have

26:34.520 --> 26:37.000
been turned off by social pressure.

26:37.000 --> 26:39.000
So we have six design challenges.

26:39.000 --> 26:40.280
These change year to year.

26:40.280 --> 26:41.800
But here's what we've got this year.

26:41.800 --> 26:45.160
Cookie cream, where you lift up a bag of melanos and eat them.

26:45.160 --> 26:48.280
Bug wars, we're doing croquet on Tuesday.

26:48.280 --> 26:50.840
Flocking, tic-tac-toe, and finally robot quiddish.

26:50.840 --> 26:52.800
We're going to focus on these last two.

26:52.800 --> 26:54.280
So here is croquet.

26:54.280 --> 26:55.360
We give them the robots.

26:55.360 --> 26:57.240
We use all these crazy courses on the ground.

26:57.240 --> 26:59.320
They have to go to get the robot to drive through this course

26:59.320 --> 27:00.440
and get through the wicket.

27:00.440 --> 27:03.000
And some of these wickets are 35 feet long.

27:03.000 --> 27:05.800
It's a long way for a little robot to go.

27:05.800 --> 27:09.920
And here is Michael starting.

27:09.920 --> 27:10.800
There is Mika.

27:10.800 --> 27:11.560
I don't know what she's doing.

27:11.560 --> 27:12.680
But she's typing something on the robot

27:12.680 --> 27:14.120
and she looks very serious about it.

27:14.120 --> 27:16.960
But she didn't know software when she got here.

27:16.960 --> 27:18.280
And she's hacking this code.

27:18.280 --> 27:19.480
It's fantastic.

27:19.520 --> 27:21.920
For our final project, we did quiddish.

27:21.920 --> 27:23.160
And it's very simple.

27:23.160 --> 27:26.120
You have bludgers, seekers, quaffos, and snitches.

27:26.120 --> 27:28.080
And there's one snitch right down there.

27:28.080 --> 27:29.360
That's my own custom design.

27:29.360 --> 27:31.520
It was faster, meaner, and more powerful than the robots,

27:31.520 --> 27:33.720
but they still caught it.

27:33.720 --> 27:36.240
And it was one of those situations

27:36.240 --> 27:39.600
in which everything worked out from an engineering point

27:39.600 --> 27:39.800
of view.

27:39.800 --> 27:40.920
And that never happened.

27:40.920 --> 27:42.640
So the software works.

27:42.640 --> 27:44.920
One of my colleagues has a beautiful Python interpreter

27:44.920 --> 27:47.080
that runs these robots so the students can write in Python,

27:47.080 --> 27:49.440
not in C. The hardware works very well.

27:50.000 --> 27:51.880
I did a last minute change to the communication system

27:51.880 --> 27:53.000
that didn't break everything.

27:53.000 --> 27:54.440
That was great.

27:54.440 --> 27:56.200
And we had some good competition.

27:56.200 --> 27:57.720
So it was beautiful.

27:57.720 --> 27:58.960
This means it'll never happen again.

27:58.960 --> 28:01.360
But it was wonderful.

28:01.360 --> 28:03.600
So that's my point.

28:03.600 --> 28:04.440
I'm going to stop there.

28:04.440 --> 28:06.000
There's a video to play.

28:06.000 --> 28:06.640
Let's go.

28:06.640 --> 28:10.640
Let's play the Q&A video.

28:10.640 --> 28:12.960
So here's our old robot platform.

28:12.960 --> 28:14.920
These robots are designed for research.

28:14.920 --> 28:15.920
They're fantastic.

28:15.920 --> 28:18.520
But they're frighteningly expensive.

28:18.600 --> 28:21.560
So I want to get robots to everyone.

28:21.560 --> 28:25.240
And the way to do that is to build this new platform.

28:25.240 --> 28:27.560
This is the Vice R1 Mobile Robot.

28:27.560 --> 28:31.320
And it is advanced enough for multi-robot research.

28:31.320 --> 28:35.080
It is robust enough for undergraduate and graduate

28:35.080 --> 28:36.080
education.

28:36.080 --> 28:39.800
And it is cheap enough for K12 outreach.

28:39.800 --> 28:42.240
So these are robots that we want to get to everyone.

28:42.240 --> 28:43.840
And we want them to be as popular

28:43.840 --> 28:45.720
as scientific calculators.

28:45.760 --> 28:49.080
So this is the wall of parts that we've slowly built up

28:49.080 --> 28:50.280
over time.

28:50.280 --> 28:52.240
So we have almost every single part that

28:52.240 --> 28:53.800
goes on one of these robots.

28:53.800 --> 28:56.000
We want to see all the lights flashing in the system

28:56.000 --> 28:58.200
to make sure every single light is working.

28:58.200 --> 29:01.480
The antennas are just like the way your phone works.

29:01.480 --> 29:04.320
We send information over the antenna.

29:04.320 --> 29:06.880
And everybody receives the same information.

29:06.880 --> 29:09.640
But their second form of communication is infrared.

29:09.640 --> 29:10.680
It's directional.

29:10.680 --> 29:14.560
So the two robots are going to send IR information similar

29:14.560 --> 29:17.520
to the way a TV remote works.

29:17.520 --> 29:19.920
The total parts count for this robot

29:19.920 --> 29:23.320
is right around nine assembled parts.

29:23.320 --> 29:24.560
Once you have all the parts counted.

29:24.560 --> 29:25.680
It's actually 14, I miscounted.

29:25.680 --> 29:28.200
This robot is simply enough that we're

29:28.200 --> 29:31.200
going to offer it first as a kit form in the upcoming year

29:31.200 --> 29:33.680
so that anyone can go and order these things

29:33.680 --> 29:36.360
and build them at home or build them in your lab

29:36.360 --> 29:37.760
or build them in your school.

29:37.760 --> 29:41.960
We put them through a class last semester of freshman.

29:41.960 --> 29:44.080
And I was kind of in the head TA.

29:44.080 --> 29:48.360
So I was responsible when all the robots had a problem.

29:48.360 --> 29:50.760
And I saw ones that I was almost certain

29:50.760 --> 29:53.520
were dropped in a pool of water at one point.

29:53.520 --> 29:55.920
And they still were able to work.

29:55.920 --> 29:58.120
My work is on multi-robot systems.

29:58.120 --> 30:00.080
You can call them swarm robots.

30:00.080 --> 30:03.760
So I'm not interested in building one robot or two robots.

30:03.760 --> 30:07.320
I start to get interested when we talk about 100 or 100,000

30:07.320 --> 30:08.280
robots.

30:08.280 --> 30:10.960
So in order for me to do that in my lab,

30:10.960 --> 30:13.280
I need to have a robot platform that

30:13.280 --> 30:16.840
is small enough and cheap enough for me

30:16.840 --> 30:19.760
to build at least hundreds of them.

30:19.760 --> 30:22.160
They're following this blue robot right now.

30:22.160 --> 30:24.520
Everyone that is following the blue

30:24.520 --> 30:26.200
is lower than the blue right now.

30:26.200 --> 30:30.880
With following, it's a good way to have the robots navigate

30:30.880 --> 30:33.720
more complicated obstacles in a follow.

30:33.720 --> 30:36.720
There are many applications from multi-robot systems.

30:36.720 --> 30:39.400
Recently, we just had an oil spill in the Gulf of Mexico.

30:39.400 --> 30:43.640
So it'd be fantastic to have 1,000 little robots swimming

30:43.640 --> 30:47.200
around the Gulf identifying where the oil actually went.

30:47.200 --> 30:48.160
Earthquakes.

30:48.160 --> 30:48.960
We've had earthquakes.

30:48.960 --> 30:49.800
We've had tornadoes.

30:49.800 --> 30:51.200
We've had tsunamis.

30:51.200 --> 30:53.760
Having robots that can penetrate the robot

30:53.760 --> 30:56.080
pile of the building, look for survivors.

30:56.080 --> 30:59.440
Identify is the power on, is the power off.

30:59.440 --> 31:02.800
These are things that robots can do far better than people can.

31:02.800 --> 31:04.360
This is a flocking behavior.

31:04.360 --> 31:07.280
So their goal here is to actually just match

31:07.280 --> 31:08.280
each other's orientation.

31:08.280 --> 31:09.720
So there's no leader this time.

31:09.720 --> 31:13.760
So it's pretty much like just a cluster of robots

31:13.760 --> 31:15.840
that are all trying to make some sort of smart decision

31:15.840 --> 31:17.640
on what they want to do.

31:17.640 --> 31:20.640
And the goal of clustering is the even-numbered robots

31:20.640 --> 31:23.520
will go, will turn red.

31:23.520 --> 31:25.720
And the odd number of robots will turn blue.

31:25.720 --> 31:28.240
And we'll see if we can get them to cluster.

31:28.240 --> 31:30.200
But they'll stay together in a cluster.

31:30.200 --> 31:34.680
I can try to separate one and say, stop clustering together.

31:34.680 --> 31:37.440
And eventually, they'll all move towards that robot.

31:37.440 --> 31:39.760
And they'll form a new cluster.

31:39.760 --> 31:41.720
Here is our 2003 design.

31:41.720 --> 31:44.520
It's a full, sophisticated research platform.

31:44.520 --> 31:46.240
Here is our 2012 design.

31:46.240 --> 31:50.400
It does almost the same stuff, except it's one-tenth the price.

31:50.400 --> 31:53.600
Rice University, the R1 mobile robot.

31:53.600 --> 31:55.040
Robots for everyone.

31:55.040 --> 32:05.520
Thank you.

32:05.520 --> 32:12.640
So I'm actually a minute and seven seconds over time.

32:12.640 --> 32:14.480
I've been told I can take a single question.

32:14.480 --> 32:18.440
So let's have it be a really kick-ass question.

32:18.440 --> 32:18.880
Where's the mic?

32:18.880 --> 32:20.280
There we go.

32:20.280 --> 32:23.320
Are you working with Dean Cayman in first at all?

32:23.360 --> 32:25.160
Do you know First Robotics?

32:25.160 --> 32:27.800
Are you in contact and working with them?

32:27.800 --> 32:29.840
Am I working with Dean Cayman in first at Vox?

32:29.840 --> 32:31.080
No, I'm not.

32:31.080 --> 32:34.600
But I'm a huge fan of what he's done in particular.

32:34.600 --> 32:35.960
He looked at the problem and said,

32:35.960 --> 32:37.640
this is not a technical problem.

32:37.640 --> 32:39.000
We have a social problem.

32:39.000 --> 32:42.200
We need to rock starify science, technology, engineering,

32:42.200 --> 32:45.760
mathematics, so that is cool to be a geek.

32:45.760 --> 32:47.480
And yeah, no, we can clap for that.

32:48.480 --> 32:55.120
So and the robots are just a tool to make that happen.

32:55.120 --> 32:58.640
And they sold off the Georgia Dome three years ago.

32:58.640 --> 33:00.240
I mean, it's fantastically.

33:00.240 --> 33:02.320
So I'm a huge fan.

33:02.320 --> 33:02.880
Well, that's it.

33:02.880 --> 33:04.000
Thank you.

33:04.000 --> 33:07.200
Thank you so much, Professor James McLarkin.

33:07.200 --> 33:07.700
Great job.

33:07.700 --> 33:10.560
I'm really glad we got to give you the demo.

