{"text": " This is a compliant machine called a mechanical neural network. It's the first of its kind to successfully demonstrate the mysterious ability to learn similar to biological brains. Inspired by the mathematics of artificial neural networks, which enable most artificial intelligent machine learning technologies today, this mechanical neural network paves the way for a new kind of material that can physically learn its mechanical behaviors and properties. Whereas the properties of most materials remain largely fixed and are a function of their composition and microstructure, this new kind of learning material could get better and better at exhibiting desired mechanical properties and behaviors, such as this shape morphing behavior, when exposed to ever increasing amounts of loading experiences. If such materials are ever damaged or cut to form new shapes or sizes, they could not only relearn their original behaviors, but they could also learn new behaviors as desired. The applications of such learning materials are endless. Imagine training the wings of an aircraft so that they learn to optimally warp their airfoil shape when subjected to unanticipated and changing wind loading conditions so that the aircraft improves its fuel efficiency and maneuverability with every flight. Or imagine training the structural members of a building by shaking them in different ways so that the building learns to remain stationary regardless of the kind of seismic waves induced by an actual earthquake when it strikes. Or imagine training body armor by repeatedly shooting it at different locations and from different orientations so that the armor gets better and better at redirecting any projectiles impacting shock waves away from vital organs. Instead of expending the immense amount of time and cost it currently takes to develop a new material that achieves specific combinations of desired properties which are currently not possible, such learning materials could simply be deployed without human understanding and the material would autonomously learn to achieve those properties while also acquiring that understanding for future designers to learn from. So how would this kind of learning material work? Well, it's important to first understand the source of its inspiration. The idea for a mechanical neural network was inspired by a physical version of an artificial neural network. The mathematics underlying artificial neural networks are diagrammed using interconnected lines that represent scalar weight values which are multiplied by input numbers that are fed into multiple layers of neurons. These neurons consist of activation functions that ultimately produce output numbers. If the artificial neural network is provided with a set of known input and output numbers, the network can be trained by tuning its weights over time so that it accurately predicts previously unknown output numbers that result for any input numbers. Here, different shades of blue represent different scalar weight values. In this way, artificial neural networks can mathematically learn to model complex systems that map many inputs to many outputs. Similarly, mechanical neural networks possess physical interconnected tunable beams, shown here as blue lines, which are mechanical analogues to the weight lines within artificial neural network diagrams. The beams connected nodes, shown as white circles outline black, which are analogous to the neurons within artificial neural networks. Whereas artificial neural networks tune their weights to match input numbers to output numbers, the mechanical neural network proposed here tunes the axial stiffness values of its beams to match input loads to desired output behaviors. To demonstrate how the envisioned mechanical learning would work, suppose a shape morphing behavior is desired for the following eight-layer deep triangular lattice consisting of eight input nodes and eight output nodes. Note that the black bars along the top and bottom edges of this lattice represent a grounded body on which the nodes that touch it are pinned. Suppose that when the input nodes along the left side are loaded by equivalent horizontal forces, it is desired that the output nodes along the right side respond by displacing to target locations along the contour of an undulating sinusoidal shape, shown as the red curve. To learn the shape morphing behavior, each tunable beam in the lattice would start the learning process by setting their axial stiffness to a random value depicted here as a specific shade of blue according to this color scale. When the input nodes on the left side of the lattice are loaded with the horizontal input forces of the desired behavior, the resulting displacements of the output nodes would then be measured and a mean-squared error, i.e. MSE, would be calculated by finding the average of the scalar difference between the target output node displacements and these measured output node displacements, i.e. their final location error, EI, for all n nodes on the right side of the lattice squared, for this lattice, n equals eight output nodes. The tunable beam elements would then change their axial stiffness values according to an optimization algorithm such that when the process of loading, measuring, and calculating the mean-squared error is repeated, the mean-squared error would be minimized until a working combination of beam stiffness values is identified that achieves the desired behavior. One possible combination of beam stiffness values that enabled this mechanical neural network to achieve the desired sinusoidal shape morphing behavior is shown here. Suppose it is desired that the neural network then learns another new behavior in addition to the first behavior. Specifically, suppose it is desired that in addition to the lattice's output nodes displacing to this sinusoidal shape in response to its input nodes being loaded with equivalent horizontal forces, the same lattice's output nodes also displace to an inverted sinusoidal shape in response to its input nodes being loaded by equivalent vertical input forces instead. To learn the new behavior, shown green, while maintaining the ability to simultaneously achieve the first behavior, shown red, the lattice of tunable beam elements could either start with another random combination of stiffness values as shown here, or they could start with the same combination of stiffness values that were found to successfully achieve the first behavior only. Parenthetically, the latter choice becomes increasingly favorable as the mechanical neural network acquires more and more behaviors because the working combination of beam stiffness values acts as a sort of muscle memory for previously learned behaviors. Regardless of what starting combination of beam stiffness values are selected, however, the input nodes would then be loaded with both the horizontal and then vertical forces of the first and second behaviors respectively, and a single mean squared error would be calculated that simultaneously considers the square of the output node final location errors of both loading scenarios averaged together. The tunable beam elements would then change their axial stiffness values according to the same optimization algorithm such that when the process of loading, measuring, and calculating the cumulative mean squared error of both behaviors is repeated, this new mean squared error would be minimized until a working combination of beam stiffness values is identified that successfully achieves the first and second behaviors simultaneously. Note that the tunable beams all remain the same shade of blue regardless of whether the lattice is actuated with the loads of the first or the second behaviors because the same combination of beam stiffness values successfully achieves both behaviors. It's also important to recognize that mechanical neural networks can achieve the same desired set of behaviors using many different combinations of beam stiffness values. Note for instance that although this second solution exhibits the same desired behaviors as our first solution, it does so with an entirely different combination of beam stiffness values. The fact that many different combinations of beam stiffness values can achieve the same behaviors allows mechanical neural networks to learn more and more new behaviors while retaining memory of previously learned behaviors. Finally, it's also worth noting that mechanical neural networks are not limited to learning shape morphing behaviors only but can learn almost any combination of quasi-static, thermal, and even dynamic mechanical behaviors including the control of wave propagation within their lattice. To experimentally demonstrate the concept of a mechanical neural network, it was important to first design a tunable beam that could achieve adjustable stiffness along its axis. After comparing multiple concepts, we settled on this compliant design. It consists of two parallel blade flexors that deform to guide the translational extension and contraction of the beam along its axis while rigidly constraining all other directions. A bracket is attached to the beam's housing in part to provide a hard stop so that the parallel blade flexors are not allowed to deform to a point where they would yield, i.e. be permanently damaged beyond their elastic limit. The bracket is also attached to the magnet end of a voice coil actuator which is aligned with the beam's central axis. The actuator's other mating end, which consists of a coil of copper wire wrapped around a drum, is attached to another bracket that is attached to the other side of the beam's housing. Depending on the direction and magnitude of the current flowing through the wrapped wire, the magnetic field can be induced by the coil that pushes or pulls on the voice coil's magnet end, thus actuating the beam along its axis in either direction. Two strain gauge sensors are mounted on either side of one of the parallel blade flexors at its base to accurately measure the resulting displacement of the beam along its axis by transforming the flexor's deformation strain into a proportional voltage signal. In this way, closed loop control can be applied to actively tune the beam's axial stiffness to achieve any value between an upper and a lower limit. You could imagine that the highest axial stiffness would be achieved if when the beam is loaded, the voice coil responds by resisting the load with the largest actuated force possible in the opposite direction as the applied load. Likewise, the lowest axial stiffness would be achieved if when the beam is loaded, the voice coil responds by assisting the load with the largest actuated force possible along the same direction as the applied load. In this way, the tunable beams could be made to achieve zero or even negative stiffness. The beam's housing inflectures were cut from an aluminum sheet using wire EDM and its brackets were machined from aluminum L brackets. We applied proportional and derivative closed loop control as detailed by this diagram to achieve the desired stiffness control of the tunable beams. An instant testing machine was used to individually calibrate each beam by generating these four plots to inform the controller as shown. If this function is set to EK in the control loop and the proportional gain Kp is set to a desired value, the resulting forced displacement response of the actively controlled beam will be linear and will possess an unchanging slope, i.e. stiffness, that is equal to the proportional gain Kp value set. This plot, measured using an instant testing machine, shows the linear forced displacement responses of a tunable beam being controlled with different Kp values to achieve corresponding positive and negative axial stiffness values. The maximum and minimum stiffness values that the beam could be controlled to achieve without becoming unstable was measured to be 2.3 Nm and negative 2 Nm respectively. With a working tunable beam that could be controlled to achieve any desired axial stiffness between its maximum and minimum stiffness values, 21 such tunable beams were fabricated and assembled within a triangular configuration as shown by these blue lines to demonstrate learning within a mechanical neural network. Four additional voice coil actuators were used in conjunction with decoupling flexures to drive the two input nodes on the left side of the lattice with forces that can be made to point in any in-plane direction desired. Two cameras mounted on a frame directly measure the displacement of pins inserted at the center of both output nodes and black felt is used to contrast the white color of the pin heads so that they stand out. This colored computer generated image helps clarify other important features within the mechanical neural network. Note the purple colored rotational flexures centered around each of the network's nodes. These flexures passively deform to accommodate the expansions and contractions of the tunable beams as the network is loaded during learning. Also note the green colored flexures that decouple the input actuators due to their cleverly stacked arrangement. Hard stops are built around all the flexures in the system to prevent them from yielding. Although the machine's two mounted cameras can directly measure the lattice's output node displacements, note that the strain gauge sensors on each beam can directly measure the beam's extension and contraction and that information can be used to indirectly calculate the displacements of all the nodes in the mechanical neural network including the displacements of its output nodes. This strain gauge approach to indirectly sensing the output node displacements can predict the displacements with a much higher sampling rate compared to the frame rate of the cameras. These plots show how accurately the strain gauge approach tracked the cameras measured output node displacements when the lattice was loaded with a random combination of axial stiffness values uploaded to each tunable beam in the lattice. The strain gauge approach is also important to the functionality of mechanical neural networks because without the approach such networks cannot learn without being placed in a testing rig which is not practical for most applications that require in-field learning. Moreover, the ability to accurately measure the displacements of all the nodes in the network when it is subjected to unanticipated and changing ambient loading scenarios is necessary for mechanical neural networks to be able to identify when those loads correspond to the input forces of their desired behaviors being learned so that the network can then calculate its mean squared error and minimize it as described previously. Note that the input node forces can be indirectly calculated at any given time using the current combination of beam stiffness values uploaded to the network at that time and the corresponding strain gauge measured displacements of all the network's nodes that resulted from these loading forces. Our 21 beam mechanical neural network first demonstrated its ability to learn by learning two behaviors simultaneously using the approach described previously. For the first behavior shown exaggerated in red here, output node 1 should displace outward 0.5 millimeters while output node 2 should displace inward 0.5 millimeters when the input nodes are loaded with 1 Newton horizontal forces. For the second behavior shown exaggerated in green here, the output node 1 should displace inward 0.5 millimeters while output node 2 should displace outward 0.5 millimeters when the input nodes are loaded with 1 Newton vertical forces. The first optimization algorithm that we use to determine what combination of axial stiffness values should be uploaded to each tunable beam in lattice during each step of the learning approach was a genetic algorithm. The algorithm samples 1000 random beam stiffness combinations. It then identifies and plots the combination that achieved the lowest resulting output node displacement mean squared error. A new, more promising group of 1000 beam stiffness combinations is then generated by crossing the most successful combinations attempted in the previous group. The process is repeated until the mean squared error calculated stops changing from one group to the next. A plot showing how the algorithm reduced the mean squared error over time is shown here, along with a video showing the mechanical neural network learning in real time. This animation shows how both output nodes displaced progressively closer to their target locations as improved beam stiffness combinations were identified from one group to the next. The initial starting and ending locations of those output nodes are shown here without the visual clutter of the path taken. You can see that their final locations are almost directly on top of the target locations. Once learning was successfully demonstrated in this way, using the genetic algorithm described previously, we then conducted a study to compare the performance of five other optimization algorithms to determine which algorithm is best suited for mechanical neural network learning in general. The five additional algorithms studied were full pattern search, partial pattern search, interior point, sequential quadratic programming, and Nelder mean. We compared how low the final mean squared error could be made using each algorithm, i.e. how accurately the mechanical neural network could successfully learn its behaviors, and how many iterations the algorithm required to achieve that final mean squared error, i.e. how fast the mechanical neural network could learn its behaviors. It was determined that Nelder mean was the best suited algorithm for mechanical neural networks due to the algorithm's practical learning speed, impressive learning accuracy, and its insensitivity to system noise. The details of that study were published in the Journal of Mechanical Design and a link to the paper is provided in the description below. We were also interested to use the mechanical neural network to determine whether beams that are tuned to exhibit non-linear stiffness, i.e. stiffness that changes as the beams deform, are favorable for learning compared to beams that are tuned to exhibit linear stiffness. Our closed loop controller was designed to test this hypothesis. If this f of ek function is changed from ek to a different function, like tangent ek, then the resulting force displacement plot exhibited by the actively controlled beam would be a non-linear tangent function. This plot shows the tunable beam's force displacement response measured using an instrument testing machine with f of ek equaling ek and tangent ek for different proportional gain values, i.e. a kp of 1, 0, and negative 1. We then trained the mechanical neural network to learn random shape morphing behaviors using both linear and non-linear tangent force displacement responses and compared their mean squared error versus time plots as shown here. Much to our surprise, the plots suggest that tunable beams that achieve linear stiffness can learn behaviors with greater accuracy, i.e. lower mean squared error, than tunable beams that achieve non-linear stiffness. We then created a computational tool to simulate the behavior of our mechanical neural network design so that we could use the tool to predict how well larger versions of the same design would learn if we had the time and resources to build and incorporate many more tunable beams within its lattice as depicted by this photoshopped image of a much larger lattice. Our computational tool models the tunable beams as linear beams, which are depicted as blue lines, and their lengths are set to be the length of the beams in our fabricated mechanical neural network, i.e. 6 inches from node to node. We restricted each beam in our simulation to only achieve axial stiffness values between the maximum and minimum stiffness values measured from our fabricated beam, i.e. 2.3 Newtons per millimeter and negative 2 Newtons per millimeter respectively, and we set their passive non-axial stiffness values equal to the values calculated using finite element analysis as shown here. We also restricted the simulated beams from extending or contracting more than plus and minus 2.5 millimeters, which is the limit of our fabricated beams as governed by their hard stops. Finite element analysis was used to validate the computational tool's accuracy by loading a 21-beam version of the design in its passive state, i.e. without any closed loop stiffness control activated, with 25 random force combinations imparted on its two input nodes. The X and Y components of the lattice's resulting output node displacements, calculated using both finite element analysis and our computational tool, are plotted here showing good correspondence between each of the 25 force combinations, once configured to mimic our fabricated mechanical neural network. The computational tool was then used to simulate the effect that the number of layers would have on the ability for a triangularly configured mechanical neural network consisting of eight input and output nodes to learn different numbers of random shape morphing behaviors. The results of the study indicate, one, that mechanical learning improves with more layers, likely because there are more tunable beams with which to learn, and two, the more random behaviors that are required to be learned, the less accurately all the behaviors can be learned simultaneously. This plot was similarly generated, but for only two, four, and eight layers, and for both triangular and square lattice configurations, shown green and red respectively. It is clear from these results that triangular lattice configurations can, in general, learn different numbers of shape morphing behaviors more effectively than square lattice configurations. The reason is likely because triangular lattices have more beams for the same number of layers, and they can propagate displacements in all directions, rather than just along orthogonal directions, as is the case with square lattices. To learn the effect that the number of layers and output nodes have on mechanical learning, we used our computational tool to generate the following plot for triangular lattices that learn the two sinusoidal behaviors described previously. The plot indicates that once the lattice possesses two or more layers, the number of output nodes does not seem to matter. It's true that the more output nodes a lattice has, the more output node displacement requirements the output nodes must satisfy, but it's also true that the more output nodes a lattice has, the more beams the lattice can employ to satisfy those requirements during learning, so both effects seem to negate each other. If you'd like to learn more about the details presented in this video, I encourage you to read our first published journal article on the topic of mechanical neural networks in Science Robotics, where our work was featured on the journal's front cover. A link to the paper is provided in the description below, along with a link to my Thingiverse account where you can download the part files necessary to fabricate our mechanical neural network. Finally, I want to thank my students Ryan Lee, who built and tested the mechanical neural network, Erwin Mulder, who developed our computational tool, P. H. R. Sainaghi, who helped perform the optimization algorithm comparison study, and all the other students who contributed in smaller ways to the success of this project. I am especially grateful to my AFOSR program manager, Les Lee, for making this research possible through his continued funding and generous support of my group. If you'd like to support my channel, I've provided instructions in the description below. Thanks for watching the Facts of Mechanical Design.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.82, "text": " This is a compliant machine called a mechanical neural network.", "tokens": [50364, 639, 307, 257, 36248, 3479, 1219, 257, 12070, 18161, 3209, 13, 50805], "temperature": 0.0, "avg_logprob": -0.1547938452826606, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.26370614767074585}, {"id": 1, "seek": 0, "start": 8.82, "end": 13.88, "text": " It's the first of its kind to successfully demonstrate the mysterious ability to learn", "tokens": [50805, 467, 311, 264, 700, 295, 1080, 733, 281, 10727, 11698, 264, 13831, 3485, 281, 1466, 51058], "temperature": 0.0, "avg_logprob": -0.1547938452826606, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.26370614767074585}, {"id": 2, "seek": 0, "start": 13.88, "end": 16.3, "text": " similar to biological brains.", "tokens": [51058, 2531, 281, 13910, 15442, 13, 51179], "temperature": 0.0, "avg_logprob": -0.1547938452826606, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.26370614767074585}, {"id": 3, "seek": 0, "start": 16.3, "end": 22.04, "text": " Inspired by the mathematics of artificial neural networks, which enable most artificial intelligent", "tokens": [51179, 32671, 1824, 538, 264, 18666, 295, 11677, 18161, 9590, 11, 597, 9528, 881, 11677, 13232, 51466], "temperature": 0.0, "avg_logprob": -0.1547938452826606, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.26370614767074585}, {"id": 4, "seek": 0, "start": 22.04, "end": 27.44, "text": " machine learning technologies today, this mechanical neural network paves the way for", "tokens": [51466, 3479, 2539, 7943, 965, 11, 341, 12070, 18161, 3209, 280, 5423, 264, 636, 337, 51736], "temperature": 0.0, "avg_logprob": -0.1547938452826606, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.26370614767074585}, {"id": 5, "seek": 2744, "start": 27.44, "end": 33.88, "text": " a new kind of material that can physically learn its mechanical behaviors and properties.", "tokens": [50364, 257, 777, 733, 295, 2527, 300, 393, 9762, 1466, 1080, 12070, 15501, 293, 7221, 13, 50686], "temperature": 0.0, "avg_logprob": -0.15491557943409887, "compression_ratio": 1.8277310924369747, "no_speech_prob": 0.22776548564434052}, {"id": 6, "seek": 2744, "start": 33.88, "end": 38.86, "text": " Whereas the properties of most materials remain largely fixed and are a function of their", "tokens": [50686, 13813, 264, 7221, 295, 881, 5319, 6222, 11611, 6806, 293, 366, 257, 2445, 295, 641, 50935], "temperature": 0.0, "avg_logprob": -0.15491557943409887, "compression_ratio": 1.8277310924369747, "no_speech_prob": 0.22776548564434052}, {"id": 7, "seek": 2744, "start": 38.86, "end": 44.08, "text": " composition and microstructure, this new kind of learning material could get better and", "tokens": [50935, 12686, 293, 3123, 27494, 2885, 11, 341, 777, 733, 295, 2539, 2527, 727, 483, 1101, 293, 51196], "temperature": 0.0, "avg_logprob": -0.15491557943409887, "compression_ratio": 1.8277310924369747, "no_speech_prob": 0.22776548564434052}, {"id": 8, "seek": 2744, "start": 44.08, "end": 49.74, "text": " better at exhibiting desired mechanical properties and behaviors, such as this shape morphing", "tokens": [51196, 1101, 412, 8144, 1748, 14721, 12070, 7221, 293, 15501, 11, 1270, 382, 341, 3909, 1896, 79, 571, 51479], "temperature": 0.0, "avg_logprob": -0.15491557943409887, "compression_ratio": 1.8277310924369747, "no_speech_prob": 0.22776548564434052}, {"id": 9, "seek": 2744, "start": 49.74, "end": 55.52, "text": " behavior, when exposed to ever increasing amounts of loading experiences.", "tokens": [51479, 5223, 11, 562, 9495, 281, 1562, 5662, 11663, 295, 15114, 5235, 13, 51768], "temperature": 0.0, "avg_logprob": -0.15491557943409887, "compression_ratio": 1.8277310924369747, "no_speech_prob": 0.22776548564434052}, {"id": 10, "seek": 5552, "start": 55.760000000000005, "end": 60.92, "text": " If such materials are ever damaged or cut to form new shapes or sizes, they could not", "tokens": [50376, 759, 1270, 5319, 366, 1562, 14080, 420, 1723, 281, 1254, 777, 10854, 420, 11602, 11, 436, 727, 406, 50634], "temperature": 0.0, "avg_logprob": -0.13706516689724393, "compression_ratio": 1.7330508474576272, "no_speech_prob": 0.053356289863586426}, {"id": 11, "seek": 5552, "start": 60.92, "end": 67.08, "text": " only relearn their original behaviors, but they could also learn new behaviors as desired.", "tokens": [50634, 787, 2951, 1083, 641, 3380, 15501, 11, 457, 436, 727, 611, 1466, 777, 15501, 382, 14721, 13, 50942], "temperature": 0.0, "avg_logprob": -0.13706516689724393, "compression_ratio": 1.7330508474576272, "no_speech_prob": 0.053356289863586426}, {"id": 12, "seek": 5552, "start": 67.08, "end": 70.72, "text": " The applications of such learning materials are endless.", "tokens": [50942, 440, 5821, 295, 1270, 2539, 5319, 366, 16144, 13, 51124], "temperature": 0.0, "avg_logprob": -0.13706516689724393, "compression_ratio": 1.7330508474576272, "no_speech_prob": 0.053356289863586426}, {"id": 13, "seek": 5552, "start": 70.72, "end": 75.64, "text": " Imagine training the wings of an aircraft so that they learn to optimally warp their", "tokens": [51124, 11739, 3097, 264, 11405, 295, 364, 9465, 370, 300, 436, 1466, 281, 5028, 379, 36030, 641, 51370], "temperature": 0.0, "avg_logprob": -0.13706516689724393, "compression_ratio": 1.7330508474576272, "no_speech_prob": 0.053356289863586426}, {"id": 14, "seek": 5552, "start": 75.64, "end": 81.48, "text": " airfoil shape when subjected to unanticipated and changing wind loading conditions so that", "tokens": [51370, 1988, 16931, 388, 3909, 562, 32153, 281, 517, 394, 6537, 770, 293, 4473, 2468, 15114, 4487, 370, 300, 51662], "temperature": 0.0, "avg_logprob": -0.13706516689724393, "compression_ratio": 1.7330508474576272, "no_speech_prob": 0.053356289863586426}, {"id": 15, "seek": 8148, "start": 81.48, "end": 86.88000000000001, "text": " the aircraft improves its fuel efficiency and maneuverability with every flight.", "tokens": [50364, 264, 9465, 24771, 1080, 6616, 10493, 293, 25976, 2310, 365, 633, 7018, 13, 50634], "temperature": 0.0, "avg_logprob": -0.1158511395357093, "compression_ratio": 1.8191881918819188, "no_speech_prob": 0.06848770380020142}, {"id": 16, "seek": 8148, "start": 86.88000000000001, "end": 91.44, "text": " Or imagine training the structural members of a building by shaking them in different", "tokens": [50634, 1610, 3811, 3097, 264, 15067, 2679, 295, 257, 2390, 538, 15415, 552, 294, 819, 50862], "temperature": 0.0, "avg_logprob": -0.1158511395357093, "compression_ratio": 1.8191881918819188, "no_speech_prob": 0.06848770380020142}, {"id": 17, "seek": 8148, "start": 91.44, "end": 96.48, "text": " ways so that the building learns to remain stationary regardless of the kind of seismic", "tokens": [50862, 2098, 370, 300, 264, 2390, 27152, 281, 6222, 30452, 10060, 295, 264, 733, 295, 40159, 299, 51114], "temperature": 0.0, "avg_logprob": -0.1158511395357093, "compression_ratio": 1.8191881918819188, "no_speech_prob": 0.06848770380020142}, {"id": 18, "seek": 8148, "start": 96.48, "end": 100.04, "text": " waves induced by an actual earthquake when it strikes.", "tokens": [51114, 9417, 33991, 538, 364, 3539, 18778, 562, 309, 16750, 13, 51292], "temperature": 0.0, "avg_logprob": -0.1158511395357093, "compression_ratio": 1.8191881918819188, "no_speech_prob": 0.06848770380020142}, {"id": 19, "seek": 8148, "start": 100.04, "end": 105.36, "text": " Or imagine training body armor by repeatedly shooting it at different locations and from", "tokens": [51292, 1610, 3811, 3097, 1772, 13124, 538, 18227, 5942, 309, 412, 819, 9253, 293, 490, 51558], "temperature": 0.0, "avg_logprob": -0.1158511395357093, "compression_ratio": 1.8191881918819188, "no_speech_prob": 0.06848770380020142}, {"id": 20, "seek": 8148, "start": 105.36, "end": 110.88000000000001, "text": " different orientations so that the armor gets better and better at redirecting any projectiles", "tokens": [51558, 819, 8579, 763, 370, 300, 264, 13124, 2170, 1101, 293, 1101, 412, 29066, 278, 604, 1716, 4680, 51834], "temperature": 0.0, "avg_logprob": -0.1158511395357093, "compression_ratio": 1.8191881918819188, "no_speech_prob": 0.06848770380020142}, {"id": 21, "seek": 11088, "start": 110.92, "end": 114.36, "text": " impacting shock waves away from vital organs.", "tokens": [50366, 29963, 5588, 9417, 1314, 490, 11707, 20659, 13, 50538], "temperature": 0.0, "avg_logprob": -0.12294209003448486, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.008314426988363266}, {"id": 22, "seek": 11088, "start": 114.36, "end": 118.92, "text": " Instead of expending the immense amount of time and cost it currently takes to develop", "tokens": [50538, 7156, 295, 1278, 2029, 264, 22920, 2372, 295, 565, 293, 2063, 309, 4362, 2516, 281, 1499, 50766], "temperature": 0.0, "avg_logprob": -0.12294209003448486, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.008314426988363266}, {"id": 23, "seek": 11088, "start": 118.92, "end": 123.8, "text": " a new material that achieves specific combinations of desired properties which are currently", "tokens": [50766, 257, 777, 2527, 300, 3538, 977, 2685, 21267, 295, 14721, 7221, 597, 366, 4362, 51010], "temperature": 0.0, "avg_logprob": -0.12294209003448486, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.008314426988363266}, {"id": 24, "seek": 11088, "start": 123.8, "end": 129.4, "text": " not possible, such learning materials could simply be deployed without human understanding", "tokens": [51010, 406, 1944, 11, 1270, 2539, 5319, 727, 2935, 312, 17826, 1553, 1952, 3701, 51290], "temperature": 0.0, "avg_logprob": -0.12294209003448486, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.008314426988363266}, {"id": 25, "seek": 11088, "start": 129.4, "end": 134.68, "text": " and the material would autonomously learn to achieve those properties while also acquiring", "tokens": [51290, 293, 264, 2527, 576, 18203, 5098, 1466, 281, 4584, 729, 7221, 1339, 611, 37374, 51554], "temperature": 0.0, "avg_logprob": -0.12294209003448486, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.008314426988363266}, {"id": 26, "seek": 11088, "start": 134.68, "end": 138.88, "text": " that understanding for future designers to learn from.", "tokens": [51554, 300, 3701, 337, 2027, 16196, 281, 1466, 490, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12294209003448486, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.008314426988363266}, {"id": 27, "seek": 13888, "start": 138.88, "end": 141.88, "text": " So how would this kind of learning material work?", "tokens": [50364, 407, 577, 576, 341, 733, 295, 2539, 2527, 589, 30, 50514], "temperature": 0.0, "avg_logprob": -0.11549591232132125, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.02842077985405922}, {"id": 28, "seek": 13888, "start": 141.88, "end": 146.2, "text": " Well, it's important to first understand the source of its inspiration.", "tokens": [50514, 1042, 11, 309, 311, 1021, 281, 700, 1223, 264, 4009, 295, 1080, 10249, 13, 50730], "temperature": 0.0, "avg_logprob": -0.11549591232132125, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.02842077985405922}, {"id": 29, "seek": 13888, "start": 146.2, "end": 152.35999999999999, "text": " The idea for a mechanical neural network was inspired by a physical version of an artificial", "tokens": [50730, 440, 1558, 337, 257, 12070, 18161, 3209, 390, 7547, 538, 257, 4001, 3037, 295, 364, 11677, 51038], "temperature": 0.0, "avg_logprob": -0.11549591232132125, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.02842077985405922}, {"id": 30, "seek": 13888, "start": 152.35999999999999, "end": 153.56, "text": " neural network.", "tokens": [51038, 18161, 3209, 13, 51098], "temperature": 0.0, "avg_logprob": -0.11549591232132125, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.02842077985405922}, {"id": 31, "seek": 13888, "start": 153.56, "end": 158.84, "text": " The mathematics underlying artificial neural networks are diagrammed using interconnected", "tokens": [51098, 440, 18666, 14217, 11677, 18161, 9590, 366, 10686, 1912, 1228, 36611, 51362], "temperature": 0.0, "avg_logprob": -0.11549591232132125, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.02842077985405922}, {"id": 32, "seek": 13888, "start": 158.84, "end": 164.28, "text": " lines that represent scalar weight values which are multiplied by input numbers that", "tokens": [51362, 3876, 300, 2906, 39684, 3364, 4190, 597, 366, 17207, 538, 4846, 3547, 300, 51634], "temperature": 0.0, "avg_logprob": -0.11549591232132125, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.02842077985405922}, {"id": 33, "seek": 13888, "start": 164.28, "end": 166.88, "text": " are fed into multiple layers of neurons.", "tokens": [51634, 366, 4636, 666, 3866, 7914, 295, 22027, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11549591232132125, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.02842077985405922}, {"id": 34, "seek": 16688, "start": 166.88, "end": 172.4, "text": " These neurons consist of activation functions that ultimately produce output numbers.", "tokens": [50364, 1981, 22027, 4603, 295, 24433, 6828, 300, 6284, 5258, 5598, 3547, 13, 50640], "temperature": 0.0, "avg_logprob": -0.12308618757459852, "compression_ratio": 1.7510729613733906, "no_speech_prob": 0.011328884400427341}, {"id": 35, "seek": 16688, "start": 172.4, "end": 177.35999999999999, "text": " If the artificial neural network is provided with a set of known input and output numbers,", "tokens": [50640, 759, 264, 11677, 18161, 3209, 307, 5649, 365, 257, 992, 295, 2570, 4846, 293, 5598, 3547, 11, 50888], "temperature": 0.0, "avg_logprob": -0.12308618757459852, "compression_ratio": 1.7510729613733906, "no_speech_prob": 0.011328884400427341}, {"id": 36, "seek": 16688, "start": 177.35999999999999, "end": 183.48, "text": " the network can be trained by tuning its weights over time so that it accurately predicts previously", "tokens": [50888, 264, 3209, 393, 312, 8895, 538, 15164, 1080, 17443, 670, 565, 370, 300, 309, 20095, 6069, 82, 8046, 51194], "temperature": 0.0, "avg_logprob": -0.12308618757459852, "compression_ratio": 1.7510729613733906, "no_speech_prob": 0.011328884400427341}, {"id": 37, "seek": 16688, "start": 183.48, "end": 187.35999999999999, "text": " unknown output numbers that result for any input numbers.", "tokens": [51194, 9841, 5598, 3547, 300, 1874, 337, 604, 4846, 3547, 13, 51388], "temperature": 0.0, "avg_logprob": -0.12308618757459852, "compression_ratio": 1.7510729613733906, "no_speech_prob": 0.011328884400427341}, {"id": 38, "seek": 16688, "start": 187.35999999999999, "end": 191.56, "text": " Here, different shades of blue represent different scalar weight values.", "tokens": [51388, 1692, 11, 819, 20639, 295, 3344, 2906, 819, 39684, 3364, 4190, 13, 51598], "temperature": 0.0, "avg_logprob": -0.12308618757459852, "compression_ratio": 1.7510729613733906, "no_speech_prob": 0.011328884400427341}, {"id": 39, "seek": 19156, "start": 191.56, "end": 197.28, "text": " In this way, artificial neural networks can mathematically learn to model complex systems", "tokens": [50364, 682, 341, 636, 11, 11677, 18161, 9590, 393, 44003, 1466, 281, 2316, 3997, 3652, 50650], "temperature": 0.0, "avg_logprob": -0.13844088386086856, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.33428123593330383}, {"id": 40, "seek": 19156, "start": 197.28, "end": 200.16, "text": " that map many inputs to many outputs.", "tokens": [50650, 300, 4471, 867, 15743, 281, 867, 23930, 13, 50794], "temperature": 0.0, "avg_logprob": -0.13844088386086856, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.33428123593330383}, {"id": 41, "seek": 19156, "start": 200.16, "end": 205.64000000000001, "text": " Similarly, mechanical neural networks possess physical interconnected tunable beams, shown", "tokens": [50794, 13157, 11, 12070, 18161, 9590, 17490, 4001, 36611, 4267, 712, 31040, 11, 4898, 51068], "temperature": 0.0, "avg_logprob": -0.13844088386086856, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.33428123593330383}, {"id": 42, "seek": 19156, "start": 205.64000000000001, "end": 210.68, "text": " here as blue lines, which are mechanical analogues to the weight lines within artificial neural", "tokens": [51068, 510, 382, 3344, 3876, 11, 597, 366, 12070, 16660, 1247, 281, 264, 3364, 3876, 1951, 11677, 18161, 51320], "temperature": 0.0, "avg_logprob": -0.13844088386086856, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.33428123593330383}, {"id": 43, "seek": 19156, "start": 210.68, "end": 212.04, "text": " network diagrams.", "tokens": [51320, 3209, 36709, 13, 51388], "temperature": 0.0, "avg_logprob": -0.13844088386086856, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.33428123593330383}, {"id": 44, "seek": 19156, "start": 212.04, "end": 216.64000000000001, "text": " The beams connected nodes, shown as white circles outline black, which are analogous", "tokens": [51388, 440, 31040, 4582, 13891, 11, 4898, 382, 2418, 13040, 16387, 2211, 11, 597, 366, 16660, 563, 51618], "temperature": 0.0, "avg_logprob": -0.13844088386086856, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.33428123593330383}, {"id": 45, "seek": 21664, "start": 216.72, "end": 219.79999999999998, "text": " to the neurons within artificial neural networks.", "tokens": [50368, 281, 264, 22027, 1951, 11677, 18161, 9590, 13, 50522], "temperature": 0.0, "avg_logprob": -0.12641181116518768, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.07155199348926544}, {"id": 46, "seek": 21664, "start": 219.79999999999998, "end": 224.92, "text": " Whereas artificial neural networks tune their weights to match input numbers to output numbers,", "tokens": [50522, 13813, 11677, 18161, 9590, 10864, 641, 17443, 281, 2995, 4846, 3547, 281, 5598, 3547, 11, 50778], "temperature": 0.0, "avg_logprob": -0.12641181116518768, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.07155199348926544}, {"id": 47, "seek": 21664, "start": 224.92, "end": 230.27999999999997, "text": " the mechanical neural network proposed here tunes the axial stiffness values of its beams", "tokens": [50778, 264, 12070, 18161, 3209, 10348, 510, 38498, 264, 46851, 37759, 4190, 295, 1080, 31040, 51046], "temperature": 0.0, "avg_logprob": -0.12641181116518768, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.07155199348926544}, {"id": 48, "seek": 21664, "start": 230.27999999999997, "end": 234.72, "text": " to match input loads to desired output behaviors.", "tokens": [51046, 281, 2995, 4846, 12668, 281, 14721, 5598, 15501, 13, 51268], "temperature": 0.0, "avg_logprob": -0.12641181116518768, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.07155199348926544}, {"id": 49, "seek": 21664, "start": 234.72, "end": 239.23999999999998, "text": " To demonstrate how the envisioned mechanical learning would work, suppose a shape morphing", "tokens": [51268, 1407, 11698, 577, 264, 47733, 12070, 2539, 576, 589, 11, 7297, 257, 3909, 1896, 79, 571, 51494], "temperature": 0.0, "avg_logprob": -0.12641181116518768, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.07155199348926544}, {"id": 50, "seek": 21664, "start": 239.23999999999998, "end": 245.07999999999998, "text": " behavior is desired for the following eight-layer deep triangular lattice consisting of eight", "tokens": [51494, 5223, 307, 14721, 337, 264, 3480, 3180, 12, 8376, 260, 2452, 38190, 34011, 33921, 295, 3180, 51786], "temperature": 0.0, "avg_logprob": -0.12641181116518768, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.07155199348926544}, {"id": 51, "seek": 24508, "start": 245.08, "end": 248.12, "text": " input nodes and eight output nodes.", "tokens": [50364, 4846, 13891, 293, 3180, 5598, 13891, 13, 50516], "temperature": 0.0, "avg_logprob": -0.12283294934492844, "compression_ratio": 1.808, "no_speech_prob": 0.02594836801290512}, {"id": 52, "seek": 24508, "start": 248.12, "end": 253.36, "text": " Note that the black bars along the top and bottom edges of this lattice represent a grounded", "tokens": [50516, 11633, 300, 264, 2211, 10228, 2051, 264, 1192, 293, 2767, 8819, 295, 341, 34011, 2906, 257, 23535, 50778], "temperature": 0.0, "avg_logprob": -0.12283294934492844, "compression_ratio": 1.808, "no_speech_prob": 0.02594836801290512}, {"id": 53, "seek": 24508, "start": 253.36, "end": 256.88, "text": " body on which the nodes that touch it are pinned.", "tokens": [50778, 1772, 322, 597, 264, 13891, 300, 2557, 309, 366, 33802, 13, 50954], "temperature": 0.0, "avg_logprob": -0.12283294934492844, "compression_ratio": 1.808, "no_speech_prob": 0.02594836801290512}, {"id": 54, "seek": 24508, "start": 256.88, "end": 261.52000000000004, "text": " Suppose that when the input nodes along the left side are loaded by equivalent horizontal", "tokens": [50954, 21360, 300, 562, 264, 4846, 13891, 2051, 264, 1411, 1252, 366, 13210, 538, 10344, 12750, 51186], "temperature": 0.0, "avg_logprob": -0.12283294934492844, "compression_ratio": 1.808, "no_speech_prob": 0.02594836801290512}, {"id": 55, "seek": 24508, "start": 261.52000000000004, "end": 267.16, "text": " forces, it is desired that the output nodes along the right side respond by displacing", "tokens": [51186, 5874, 11, 309, 307, 14721, 300, 264, 5598, 13891, 2051, 264, 558, 1252, 4196, 538, 14996, 5615, 51468], "temperature": 0.0, "avg_logprob": -0.12283294934492844, "compression_ratio": 1.808, "no_speech_prob": 0.02594836801290512}, {"id": 56, "seek": 24508, "start": 267.16, "end": 272.72, "text": " to target locations along the contour of an undulating sinusoidal shape, shown as the", "tokens": [51468, 281, 3779, 9253, 2051, 264, 21234, 295, 364, 674, 12162, 41503, 17079, 304, 3909, 11, 4898, 382, 264, 51746], "temperature": 0.0, "avg_logprob": -0.12283294934492844, "compression_ratio": 1.808, "no_speech_prob": 0.02594836801290512}, {"id": 57, "seek": 24508, "start": 272.72, "end": 273.8, "text": " red curve.", "tokens": [51746, 2182, 7605, 13, 51800], "temperature": 0.0, "avg_logprob": -0.12283294934492844, "compression_ratio": 1.808, "no_speech_prob": 0.02594836801290512}, {"id": 58, "seek": 27380, "start": 273.8, "end": 278.16, "text": " To learn the shape morphing behavior, each tunable beam in the lattice would start the", "tokens": [50364, 1407, 1466, 264, 3909, 1896, 79, 571, 5223, 11, 1184, 4267, 712, 14269, 294, 264, 34011, 576, 722, 264, 50582], "temperature": 0.0, "avg_logprob": -0.07832999711626032, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0016483250074088573}, {"id": 59, "seek": 27380, "start": 278.16, "end": 284.76, "text": " learning process by setting their axial stiffness to a random value depicted here as a specific", "tokens": [50582, 2539, 1399, 538, 3287, 641, 46851, 37759, 281, 257, 4974, 2158, 30207, 510, 382, 257, 2685, 50912], "temperature": 0.0, "avg_logprob": -0.07832999711626032, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0016483250074088573}, {"id": 60, "seek": 27380, "start": 284.76, "end": 287.8, "text": " shade of blue according to this color scale.", "tokens": [50912, 11466, 295, 3344, 4650, 281, 341, 2017, 4373, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07832999711626032, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0016483250074088573}, {"id": 61, "seek": 27380, "start": 287.8, "end": 292.12, "text": " When the input nodes on the left side of the lattice are loaded with the horizontal input", "tokens": [51064, 1133, 264, 4846, 13891, 322, 264, 1411, 1252, 295, 264, 34011, 366, 13210, 365, 264, 12750, 4846, 51280], "temperature": 0.0, "avg_logprob": -0.07832999711626032, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0016483250074088573}, {"id": 62, "seek": 27380, "start": 292.12, "end": 297.56, "text": " forces of the desired behavior, the resulting displacements of the output nodes would then", "tokens": [51280, 5874, 295, 264, 14721, 5223, 11, 264, 16505, 14996, 41140, 295, 264, 5598, 13891, 576, 550, 51552], "temperature": 0.0, "avg_logprob": -0.07832999711626032, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0016483250074088573}, {"id": 63, "seek": 29756, "start": 297.56, "end": 304.52, "text": " be measured and a mean-squared error, i.e. MSE, would be calculated by finding the average", "tokens": [50364, 312, 12690, 293, 257, 914, 12, 33292, 1642, 6713, 11, 741, 13, 68, 13, 376, 5879, 11, 576, 312, 15598, 538, 5006, 264, 4274, 50712], "temperature": 0.0, "avg_logprob": -0.10848846802344689, "compression_ratio": 1.778688524590164, "no_speech_prob": 0.7511408925056458}, {"id": 64, "seek": 29756, "start": 304.52, "end": 309.6, "text": " of the scalar difference between the target output node displacements and these measured", "tokens": [50712, 295, 264, 39684, 2649, 1296, 264, 3779, 5598, 9984, 14996, 41140, 293, 613, 12690, 50966], "temperature": 0.0, "avg_logprob": -0.10848846802344689, "compression_ratio": 1.778688524590164, "no_speech_prob": 0.7511408925056458}, {"id": 65, "seek": 29756, "start": 309.6, "end": 316.08, "text": " output node displacements, i.e. their final location error, EI, for all n nodes on the", "tokens": [50966, 5598, 9984, 14996, 41140, 11, 741, 13, 68, 13, 641, 2572, 4914, 6713, 11, 462, 40, 11, 337, 439, 297, 13891, 322, 264, 51290], "temperature": 0.0, "avg_logprob": -0.10848846802344689, "compression_ratio": 1.778688524590164, "no_speech_prob": 0.7511408925056458}, {"id": 66, "seek": 29756, "start": 316.08, "end": 322.04, "text": " right side of the lattice squared, for this lattice, n equals eight output nodes.", "tokens": [51290, 558, 1252, 295, 264, 34011, 8889, 11, 337, 341, 34011, 11, 297, 6915, 3180, 5598, 13891, 13, 51588], "temperature": 0.0, "avg_logprob": -0.10848846802344689, "compression_ratio": 1.778688524590164, "no_speech_prob": 0.7511408925056458}, {"id": 67, "seek": 29756, "start": 322.04, "end": 327.12, "text": " The tunable beam elements would then change their axial stiffness values according to", "tokens": [51588, 440, 4267, 712, 14269, 4959, 576, 550, 1319, 641, 46851, 37759, 4190, 4650, 281, 51842], "temperature": 0.0, "avg_logprob": -0.10848846802344689, "compression_ratio": 1.778688524590164, "no_speech_prob": 0.7511408925056458}, {"id": 68, "seek": 32712, "start": 327.16, "end": 333.64, "text": " an optimization algorithm such that when the process of loading, measuring, and calculating", "tokens": [50366, 364, 19618, 9284, 1270, 300, 562, 264, 1399, 295, 15114, 11, 13389, 11, 293, 28258, 50690], "temperature": 0.0, "avg_logprob": -0.10554933547973633, "compression_ratio": 1.8523206751054853, "no_speech_prob": 0.02757265605032444}, {"id": 69, "seek": 32712, "start": 333.64, "end": 339.36, "text": " the mean-squared error is repeated, the mean-squared error would be minimized until a working", "tokens": [50690, 264, 914, 12, 33292, 1642, 6713, 307, 10477, 11, 264, 914, 12, 33292, 1642, 6713, 576, 312, 4464, 1602, 1826, 257, 1364, 50976], "temperature": 0.0, "avg_logprob": -0.10554933547973633, "compression_ratio": 1.8523206751054853, "no_speech_prob": 0.02757265605032444}, {"id": 70, "seek": 32712, "start": 339.36, "end": 345.12, "text": " combination of beam stiffness values is identified that achieves the desired behavior.", "tokens": [50976, 6562, 295, 14269, 37759, 4190, 307, 9234, 300, 3538, 977, 264, 14721, 5223, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10554933547973633, "compression_ratio": 1.8523206751054853, "no_speech_prob": 0.02757265605032444}, {"id": 71, "seek": 32712, "start": 345.12, "end": 349.96, "text": " One possible combination of beam stiffness values that enabled this mechanical neural", "tokens": [51264, 1485, 1944, 6562, 295, 14269, 37759, 4190, 300, 15172, 341, 12070, 18161, 51506], "temperature": 0.0, "avg_logprob": -0.10554933547973633, "compression_ratio": 1.8523206751054853, "no_speech_prob": 0.02757265605032444}, {"id": 72, "seek": 32712, "start": 349.96, "end": 355.12, "text": " network to achieve the desired sinusoidal shape morphing behavior is shown here.", "tokens": [51506, 3209, 281, 4584, 264, 14721, 41503, 17079, 304, 3909, 1896, 79, 571, 5223, 307, 4898, 510, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10554933547973633, "compression_ratio": 1.8523206751054853, "no_speech_prob": 0.02757265605032444}, {"id": 73, "seek": 35512, "start": 355.12, "end": 360.52, "text": " Suppose it is desired that the neural network then learns another new behavior in addition", "tokens": [50364, 21360, 309, 307, 14721, 300, 264, 18161, 3209, 550, 27152, 1071, 777, 5223, 294, 4500, 50634], "temperature": 0.0, "avg_logprob": -0.11246703874946821, "compression_ratio": 2.1434977578475336, "no_speech_prob": 0.0065873912535607815}, {"id": 74, "seek": 35512, "start": 360.52, "end": 361.88, "text": " to the first behavior.", "tokens": [50634, 281, 264, 700, 5223, 13, 50702], "temperature": 0.0, "avg_logprob": -0.11246703874946821, "compression_ratio": 2.1434977578475336, "no_speech_prob": 0.0065873912535607815}, {"id": 75, "seek": 35512, "start": 361.88, "end": 366.88, "text": " Specifically, suppose it is desired that in addition to the lattice's output nodes displacing", "tokens": [50702, 26058, 11, 7297, 309, 307, 14721, 300, 294, 4500, 281, 264, 34011, 311, 5598, 13891, 14996, 5615, 50952], "temperature": 0.0, "avg_logprob": -0.11246703874946821, "compression_ratio": 2.1434977578475336, "no_speech_prob": 0.0065873912535607815}, {"id": 76, "seek": 35512, "start": 366.88, "end": 371.96, "text": " to this sinusoidal shape in response to its input nodes being loaded with equivalent horizontal", "tokens": [50952, 281, 341, 41503, 17079, 304, 3909, 294, 4134, 281, 1080, 4846, 13891, 885, 13210, 365, 10344, 12750, 51206], "temperature": 0.0, "avg_logprob": -0.11246703874946821, "compression_ratio": 2.1434977578475336, "no_speech_prob": 0.0065873912535607815}, {"id": 77, "seek": 35512, "start": 371.96, "end": 377.72, "text": " forces, the same lattice's output nodes also displace to an inverted sinusoidal shape in", "tokens": [51206, 5874, 11, 264, 912, 34011, 311, 5598, 13891, 611, 717, 6742, 281, 364, 38969, 41503, 17079, 304, 3909, 294, 51494], "temperature": 0.0, "avg_logprob": -0.11246703874946821, "compression_ratio": 2.1434977578475336, "no_speech_prob": 0.0065873912535607815}, {"id": 78, "seek": 35512, "start": 377.72, "end": 383.48, "text": " response to its input nodes being loaded by equivalent vertical input forces instead.", "tokens": [51494, 4134, 281, 1080, 4846, 13891, 885, 13210, 538, 10344, 9429, 4846, 5874, 2602, 13, 51782], "temperature": 0.0, "avg_logprob": -0.11246703874946821, "compression_ratio": 2.1434977578475336, "no_speech_prob": 0.0065873912535607815}, {"id": 79, "seek": 38348, "start": 383.48, "end": 388.8, "text": " To learn the new behavior, shown green, while maintaining the ability to simultaneously achieve", "tokens": [50364, 1407, 1466, 264, 777, 5223, 11, 4898, 3092, 11, 1339, 14916, 264, 3485, 281, 16561, 4584, 50630], "temperature": 0.0, "avg_logprob": -0.12256312877573866, "compression_ratio": 1.891566265060241, "no_speech_prob": 0.025949329137802124}, {"id": 80, "seek": 38348, "start": 388.8, "end": 393.64000000000004, "text": " the first behavior, shown red, the lattice of tunable beam elements could either start", "tokens": [50630, 264, 700, 5223, 11, 4898, 2182, 11, 264, 34011, 295, 4267, 712, 14269, 4959, 727, 2139, 722, 50872], "temperature": 0.0, "avg_logprob": -0.12256312877573866, "compression_ratio": 1.891566265060241, "no_speech_prob": 0.025949329137802124}, {"id": 81, "seek": 38348, "start": 393.64000000000004, "end": 399.16, "text": " with another random combination of stiffness values as shown here, or they could start", "tokens": [50872, 365, 1071, 4974, 6562, 295, 37759, 4190, 382, 4898, 510, 11, 420, 436, 727, 722, 51148], "temperature": 0.0, "avg_logprob": -0.12256312877573866, "compression_ratio": 1.891566265060241, "no_speech_prob": 0.025949329137802124}, {"id": 82, "seek": 38348, "start": 399.16, "end": 403.84000000000003, "text": " with the same combination of stiffness values that were found to successfully achieve the", "tokens": [51148, 365, 264, 912, 6562, 295, 37759, 4190, 300, 645, 1352, 281, 10727, 4584, 264, 51382], "temperature": 0.0, "avg_logprob": -0.12256312877573866, "compression_ratio": 1.891566265060241, "no_speech_prob": 0.025949329137802124}, {"id": 83, "seek": 38348, "start": 403.84000000000003, "end": 405.48, "text": " first behavior only.", "tokens": [51382, 700, 5223, 787, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12256312877573866, "compression_ratio": 1.891566265060241, "no_speech_prob": 0.025949329137802124}, {"id": 84, "seek": 38348, "start": 405.48, "end": 410.28000000000003, "text": " Parenthetically, the latter choice becomes increasingly favorable as the mechanical neural", "tokens": [51464, 430, 20616, 22652, 11, 264, 18481, 3922, 3643, 12980, 29557, 382, 264, 12070, 18161, 51704], "temperature": 0.0, "avg_logprob": -0.12256312877573866, "compression_ratio": 1.891566265060241, "no_speech_prob": 0.025949329137802124}, {"id": 85, "seek": 41028, "start": 410.28, "end": 414.91999999999996, "text": " network acquires more and more behaviors because the working combination of beam stiffness", "tokens": [50364, 3209, 6667, 3145, 544, 293, 544, 15501, 570, 264, 1364, 6562, 295, 14269, 37759, 50596], "temperature": 0.0, "avg_logprob": -0.11692968256333296, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0736573338508606}, {"id": 86, "seek": 41028, "start": 414.91999999999996, "end": 419.71999999999997, "text": " values acts as a sort of muscle memory for previously learned behaviors.", "tokens": [50596, 4190, 10672, 382, 257, 1333, 295, 8679, 4675, 337, 8046, 3264, 15501, 13, 50836], "temperature": 0.0, "avg_logprob": -0.11692968256333296, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0736573338508606}, {"id": 87, "seek": 41028, "start": 419.71999999999997, "end": 424.28, "text": " Regardless of what starting combination of beam stiffness values are selected, however,", "tokens": [50836, 25148, 295, 437, 2891, 6562, 295, 14269, 37759, 4190, 366, 8209, 11, 4461, 11, 51064], "temperature": 0.0, "avg_logprob": -0.11692968256333296, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0736573338508606}, {"id": 88, "seek": 41028, "start": 424.28, "end": 429.11999999999995, "text": " the input nodes would then be loaded with both the horizontal and then vertical forces", "tokens": [51064, 264, 4846, 13891, 576, 550, 312, 13210, 365, 1293, 264, 12750, 293, 550, 9429, 5874, 51306], "temperature": 0.0, "avg_logprob": -0.11692968256333296, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0736573338508606}, {"id": 89, "seek": 41028, "start": 429.11999999999995, "end": 435.15999999999997, "text": " of the first and second behaviors respectively, and a single mean squared error would be calculated", "tokens": [51306, 295, 264, 700, 293, 1150, 15501, 25009, 11, 293, 257, 2167, 914, 8889, 6713, 576, 312, 15598, 51608], "temperature": 0.0, "avg_logprob": -0.11692968256333296, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0736573338508606}, {"id": 90, "seek": 43516, "start": 435.16, "end": 441.8, "text": " that simultaneously considers the square of the output node final location errors of both", "tokens": [50364, 300, 16561, 33095, 264, 3732, 295, 264, 5598, 9984, 2572, 4914, 13603, 295, 1293, 50696], "temperature": 0.0, "avg_logprob": -0.12821526960893112, "compression_ratio": 1.6610878661087867, "no_speech_prob": 0.0636926218867302}, {"id": 91, "seek": 43516, "start": 441.8, "end": 444.40000000000003, "text": " loading scenarios averaged together.", "tokens": [50696, 15114, 15077, 18247, 2980, 1214, 13, 50826], "temperature": 0.0, "avg_logprob": -0.12821526960893112, "compression_ratio": 1.6610878661087867, "no_speech_prob": 0.0636926218867302}, {"id": 92, "seek": 43516, "start": 444.40000000000003, "end": 449.08000000000004, "text": " The tunable beam elements would then change their axial stiffness values according to", "tokens": [50826, 440, 4267, 712, 14269, 4959, 576, 550, 1319, 641, 46851, 37759, 4190, 4650, 281, 51060], "temperature": 0.0, "avg_logprob": -0.12821526960893112, "compression_ratio": 1.6610878661087867, "no_speech_prob": 0.0636926218867302}, {"id": 93, "seek": 43516, "start": 449.08000000000004, "end": 456.92, "text": " the same optimization algorithm such that when the process of loading, measuring, and calculating", "tokens": [51060, 264, 912, 19618, 9284, 1270, 300, 562, 264, 1399, 295, 15114, 11, 13389, 11, 293, 28258, 51452], "temperature": 0.0, "avg_logprob": -0.12821526960893112, "compression_ratio": 1.6610878661087867, "no_speech_prob": 0.0636926218867302}, {"id": 94, "seek": 43516, "start": 456.92, "end": 462.40000000000003, "text": " the cumulative mean squared error of both behaviors is repeated, this new mean squared", "tokens": [51452, 264, 38379, 914, 8889, 6713, 295, 1293, 15501, 307, 10477, 11, 341, 777, 914, 8889, 51726], "temperature": 0.0, "avg_logprob": -0.12821526960893112, "compression_ratio": 1.6610878661087867, "no_speech_prob": 0.0636926218867302}, {"id": 95, "seek": 46240, "start": 462.4, "end": 468.35999999999996, "text": " error would be minimized until a working combination of beam stiffness values is identified", "tokens": [50364, 6713, 576, 312, 4464, 1602, 1826, 257, 1364, 6562, 295, 14269, 37759, 4190, 307, 9234, 50662], "temperature": 0.0, "avg_logprob": -0.14300640519843044, "compression_ratio": 1.9305555555555556, "no_speech_prob": 0.1621606945991516}, {"id": 96, "seek": 46240, "start": 468.35999999999996, "end": 473.4, "text": " that successfully achieves the first and second behaviors simultaneously.", "tokens": [50662, 300, 10727, 3538, 977, 264, 700, 293, 1150, 15501, 16561, 13, 50914], "temperature": 0.0, "avg_logprob": -0.14300640519843044, "compression_ratio": 1.9305555555555556, "no_speech_prob": 0.1621606945991516}, {"id": 97, "seek": 46240, "start": 473.4, "end": 478.2, "text": " Note that the tunable beams all remain the same shade of blue regardless of whether the", "tokens": [50914, 11633, 300, 264, 4267, 712, 31040, 439, 6222, 264, 912, 11466, 295, 3344, 10060, 295, 1968, 264, 51154], "temperature": 0.0, "avg_logprob": -0.14300640519843044, "compression_ratio": 1.9305555555555556, "no_speech_prob": 0.1621606945991516}, {"id": 98, "seek": 46240, "start": 478.2, "end": 482.67999999999995, "text": " lattice is actuated with the loads of the first or the second behaviors because the", "tokens": [51154, 34011, 307, 605, 27275, 365, 264, 12668, 295, 264, 700, 420, 264, 1150, 15501, 570, 264, 51378], "temperature": 0.0, "avg_logprob": -0.14300640519843044, "compression_ratio": 1.9305555555555556, "no_speech_prob": 0.1621606945991516}, {"id": 99, "seek": 46240, "start": 482.67999999999995, "end": 487.59999999999997, "text": " same combination of beam stiffness values successfully achieves both behaviors.", "tokens": [51378, 912, 6562, 295, 14269, 37759, 4190, 10727, 3538, 977, 1293, 15501, 13, 51624], "temperature": 0.0, "avg_logprob": -0.14300640519843044, "compression_ratio": 1.9305555555555556, "no_speech_prob": 0.1621606945991516}, {"id": 100, "seek": 48760, "start": 487.6, "end": 492.52000000000004, "text": " It's also important to recognize that mechanical neural networks can achieve the same desired", "tokens": [50364, 467, 311, 611, 1021, 281, 5521, 300, 12070, 18161, 9590, 393, 4584, 264, 912, 14721, 50610], "temperature": 0.0, "avg_logprob": -0.11596318990877359, "compression_ratio": 2.1844262295081966, "no_speech_prob": 0.6948064565658569}, {"id": 101, "seek": 48760, "start": 492.52000000000004, "end": 497.64000000000004, "text": " set of behaviors using many different combinations of beam stiffness values.", "tokens": [50610, 992, 295, 15501, 1228, 867, 819, 21267, 295, 14269, 37759, 4190, 13, 50866], "temperature": 0.0, "avg_logprob": -0.11596318990877359, "compression_ratio": 2.1844262295081966, "no_speech_prob": 0.6948064565658569}, {"id": 102, "seek": 48760, "start": 497.64000000000004, "end": 502.68, "text": " Note for instance that although this second solution exhibits the same desired behaviors", "tokens": [50866, 11633, 337, 5197, 300, 4878, 341, 1150, 3827, 39205, 264, 912, 14721, 15501, 51118], "temperature": 0.0, "avg_logprob": -0.11596318990877359, "compression_ratio": 2.1844262295081966, "no_speech_prob": 0.6948064565658569}, {"id": 103, "seek": 48760, "start": 502.68, "end": 507.68, "text": " as our first solution, it does so with an entirely different combination of beam stiffness", "tokens": [51118, 382, 527, 700, 3827, 11, 309, 775, 370, 365, 364, 7696, 819, 6562, 295, 14269, 37759, 51368], "temperature": 0.0, "avg_logprob": -0.11596318990877359, "compression_ratio": 2.1844262295081966, "no_speech_prob": 0.6948064565658569}, {"id": 104, "seek": 48760, "start": 507.68, "end": 508.68, "text": " values.", "tokens": [51368, 4190, 13, 51418], "temperature": 0.0, "avg_logprob": -0.11596318990877359, "compression_ratio": 2.1844262295081966, "no_speech_prob": 0.6948064565658569}, {"id": 105, "seek": 48760, "start": 508.68, "end": 512.5600000000001, "text": " The fact that many different combinations of beam stiffness values can achieve the same", "tokens": [51418, 440, 1186, 300, 867, 819, 21267, 295, 14269, 37759, 4190, 393, 4584, 264, 912, 51612], "temperature": 0.0, "avg_logprob": -0.11596318990877359, "compression_ratio": 2.1844262295081966, "no_speech_prob": 0.6948064565658569}, {"id": 106, "seek": 48760, "start": 512.5600000000001, "end": 517.36, "text": " behaviors allows mechanical neural networks to learn more and more new behaviors while", "tokens": [51612, 15501, 4045, 12070, 18161, 9590, 281, 1466, 544, 293, 544, 777, 15501, 1339, 51852], "temperature": 0.0, "avg_logprob": -0.11596318990877359, "compression_ratio": 2.1844262295081966, "no_speech_prob": 0.6948064565658569}, {"id": 107, "seek": 51736, "start": 517.36, "end": 520.52, "text": " retaining memory of previously learned behaviors.", "tokens": [50364, 34936, 4675, 295, 8046, 3264, 15501, 13, 50522], "temperature": 0.0, "avg_logprob": -0.1644544379655705, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.015183784067630768}, {"id": 108, "seek": 51736, "start": 520.52, "end": 525.2, "text": " Finally, it's also worth noting that mechanical neural networks are not limited to learning", "tokens": [50522, 6288, 11, 309, 311, 611, 3163, 26801, 300, 12070, 18161, 9590, 366, 406, 5567, 281, 2539, 50756], "temperature": 0.0, "avg_logprob": -0.1644544379655705, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.015183784067630768}, {"id": 109, "seek": 51736, "start": 525.2, "end": 531.12, "text": " shape morphing behaviors only but can learn almost any combination of quasi-static, thermal,", "tokens": [50756, 3909, 1896, 79, 571, 15501, 787, 457, 393, 1466, 1920, 604, 6562, 295, 20954, 12, 34632, 11, 15070, 11, 51052], "temperature": 0.0, "avg_logprob": -0.1644544379655705, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.015183784067630768}, {"id": 110, "seek": 51736, "start": 531.12, "end": 536.5600000000001, "text": " and even dynamic mechanical behaviors including the control of wave propagation within their", "tokens": [51052, 293, 754, 8546, 12070, 15501, 3009, 264, 1969, 295, 5772, 38377, 1951, 641, 51324], "temperature": 0.0, "avg_logprob": -0.1644544379655705, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.015183784067630768}, {"id": 111, "seek": 51736, "start": 536.5600000000001, "end": 539.62, "text": " lattice.", "tokens": [51324, 34011, 13, 51477], "temperature": 0.0, "avg_logprob": -0.1644544379655705, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.015183784067630768}, {"id": 112, "seek": 51736, "start": 539.62, "end": 544.64, "text": " To experimentally demonstrate the concept of a mechanical neural network, it was important", "tokens": [51477, 1407, 5120, 379, 11698, 264, 3410, 295, 257, 12070, 18161, 3209, 11, 309, 390, 1021, 51728], "temperature": 0.0, "avg_logprob": -0.1644544379655705, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.015183784067630768}, {"id": 113, "seek": 54464, "start": 544.64, "end": 549.6, "text": " to first design a tunable beam that could achieve adjustable stiffness along its axis.", "tokens": [50364, 281, 700, 1715, 257, 4267, 712, 14269, 300, 727, 4584, 27804, 37759, 2051, 1080, 10298, 13, 50612], "temperature": 0.0, "avg_logprob": -0.10279700992343661, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.36253389716148376}, {"id": 114, "seek": 54464, "start": 549.6, "end": 554.08, "text": " After comparing multiple concepts, we settled on this compliant design.", "tokens": [50612, 2381, 15763, 3866, 10392, 11, 321, 14819, 322, 341, 36248, 1715, 13, 50836], "temperature": 0.0, "avg_logprob": -0.10279700992343661, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.36253389716148376}, {"id": 115, "seek": 54464, "start": 554.08, "end": 558.72, "text": " It consists of two parallel blade flexors that deform to guide the translational extension", "tokens": [50836, 467, 14689, 295, 732, 8952, 10959, 5896, 830, 300, 36094, 281, 5934, 264, 5105, 1478, 10320, 51068], "temperature": 0.0, "avg_logprob": -0.10279700992343661, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.36253389716148376}, {"id": 116, "seek": 54464, "start": 558.72, "end": 563.92, "text": " and contraction of the beam along its axis while rigidly constraining all other directions.", "tokens": [51068, 293, 37372, 295, 264, 14269, 2051, 1080, 10298, 1339, 22195, 356, 11525, 1760, 439, 661, 11095, 13, 51328], "temperature": 0.0, "avg_logprob": -0.10279700992343661, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.36253389716148376}, {"id": 117, "seek": 54464, "start": 563.92, "end": 569.04, "text": " A bracket is attached to the beam's housing in part to provide a hard stop so that the", "tokens": [51328, 316, 16904, 307, 8570, 281, 264, 14269, 311, 6849, 294, 644, 281, 2893, 257, 1152, 1590, 370, 300, 264, 51584], "temperature": 0.0, "avg_logprob": -0.10279700992343661, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.36253389716148376}, {"id": 118, "seek": 54464, "start": 569.04, "end": 573.24, "text": " parallel blade flexors are not allowed to deform to a point where they would yield,", "tokens": [51584, 8952, 10959, 5896, 830, 366, 406, 4350, 281, 36094, 281, 257, 935, 689, 436, 576, 11257, 11, 51794], "temperature": 0.0, "avg_logprob": -0.10279700992343661, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.36253389716148376}, {"id": 119, "seek": 57324, "start": 573.24, "end": 576.52, "text": " i.e. be permanently damaged beyond their elastic limit.", "tokens": [50364, 741, 13, 68, 13, 312, 24042, 14080, 4399, 641, 17115, 4948, 13, 50528], "temperature": 0.0, "avg_logprob": -0.1337880196972428, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.1224164068698883}, {"id": 120, "seek": 57324, "start": 576.52, "end": 582.12, "text": " The bracket is also attached to the magnet end of a voice coil actuator which is aligned", "tokens": [50528, 440, 16904, 307, 611, 8570, 281, 264, 15211, 917, 295, 257, 3177, 22225, 34964, 1639, 597, 307, 17962, 50808], "temperature": 0.0, "avg_logprob": -0.1337880196972428, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.1224164068698883}, {"id": 121, "seek": 57324, "start": 582.12, "end": 584.04, "text": " with the beam's central axis.", "tokens": [50808, 365, 264, 14269, 311, 5777, 10298, 13, 50904], "temperature": 0.0, "avg_logprob": -0.1337880196972428, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.1224164068698883}, {"id": 122, "seek": 57324, "start": 584.04, "end": 588.72, "text": " The actuator's other mating end, which consists of a coil of copper wire wrapped around a", "tokens": [50904, 440, 34964, 1639, 311, 661, 49955, 917, 11, 597, 14689, 295, 257, 22225, 295, 15007, 6234, 14226, 926, 257, 51138], "temperature": 0.0, "avg_logprob": -0.1337880196972428, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.1224164068698883}, {"id": 123, "seek": 57324, "start": 588.72, "end": 593.5600000000001, "text": " drum, is attached to another bracket that is attached to the other side of the beam's", "tokens": [51138, 10206, 11, 307, 8570, 281, 1071, 16904, 300, 307, 8570, 281, 264, 661, 1252, 295, 264, 14269, 311, 51380], "temperature": 0.0, "avg_logprob": -0.1337880196972428, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.1224164068698883}, {"id": 124, "seek": 57324, "start": 593.5600000000001, "end": 594.5600000000001, "text": " housing.", "tokens": [51380, 6849, 13, 51430], "temperature": 0.0, "avg_logprob": -0.1337880196972428, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.1224164068698883}, {"id": 125, "seek": 57324, "start": 594.5600000000001, "end": 598.52, "text": " Depending on the direction and magnitude of the current flowing through the wrapped wire,", "tokens": [51430, 22539, 322, 264, 3513, 293, 15668, 295, 264, 2190, 13974, 807, 264, 14226, 6234, 11, 51628], "temperature": 0.0, "avg_logprob": -0.1337880196972428, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.1224164068698883}, {"id": 126, "seek": 59852, "start": 598.52, "end": 603.28, "text": " the magnetic field can be induced by the coil that pushes or pulls on the voice coil's", "tokens": [50364, 264, 12688, 2519, 393, 312, 33991, 538, 264, 22225, 300, 21020, 420, 16982, 322, 264, 3177, 22225, 311, 50602], "temperature": 0.0, "avg_logprob": -0.09768004993815999, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.0001634611253393814}, {"id": 127, "seek": 59852, "start": 603.28, "end": 608.8, "text": " magnet end, thus actuating the beam along its axis in either direction.", "tokens": [50602, 15211, 917, 11, 8807, 605, 32438, 264, 14269, 2051, 1080, 10298, 294, 2139, 3513, 13, 50878], "temperature": 0.0, "avg_logprob": -0.09768004993815999, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.0001634611253393814}, {"id": 128, "seek": 59852, "start": 608.8, "end": 613.28, "text": " Two strain gauge sensors are mounted on either side of one of the parallel blade flexors", "tokens": [50878, 4453, 14249, 17924, 14840, 366, 19138, 322, 2139, 1252, 295, 472, 295, 264, 8952, 10959, 5896, 830, 51102], "temperature": 0.0, "avg_logprob": -0.09768004993815999, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.0001634611253393814}, {"id": 129, "seek": 59852, "start": 613.28, "end": 618.66, "text": " at its base to accurately measure the resulting displacement of the beam along its axis by", "tokens": [51102, 412, 1080, 3096, 281, 20095, 3481, 264, 16505, 21899, 295, 264, 14269, 2051, 1080, 10298, 538, 51371], "temperature": 0.0, "avg_logprob": -0.09768004993815999, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.0001634611253393814}, {"id": 130, "seek": 59852, "start": 618.66, "end": 623.56, "text": " transforming the flexor's deformation strain into a proportional voltage signal.", "tokens": [51371, 27210, 264, 5896, 284, 311, 34364, 14249, 666, 257, 24969, 8352, 6358, 13, 51616], "temperature": 0.0, "avg_logprob": -0.09768004993815999, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.0001634611253393814}, {"id": 131, "seek": 62356, "start": 623.56, "end": 629.0799999999999, "text": " In this way, closed loop control can be applied to actively tune the beam's axial stiffness", "tokens": [50364, 682, 341, 636, 11, 5395, 6367, 1969, 393, 312, 6456, 281, 13022, 10864, 264, 14269, 311, 46851, 37759, 50640], "temperature": 0.0, "avg_logprob": -0.11647854036497839, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.3170594871044159}, {"id": 132, "seek": 62356, "start": 629.0799999999999, "end": 632.3199999999999, "text": " to achieve any value between an upper and a lower limit.", "tokens": [50640, 281, 4584, 604, 2158, 1296, 364, 6597, 293, 257, 3126, 4948, 13, 50802], "temperature": 0.0, "avg_logprob": -0.11647854036497839, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.3170594871044159}, {"id": 133, "seek": 62356, "start": 632.3199999999999, "end": 637.3199999999999, "text": " You could imagine that the highest axial stiffness would be achieved if when the beam is loaded,", "tokens": [50802, 509, 727, 3811, 300, 264, 6343, 46851, 37759, 576, 312, 11042, 498, 562, 264, 14269, 307, 13210, 11, 51052], "temperature": 0.0, "avg_logprob": -0.11647854036497839, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.3170594871044159}, {"id": 134, "seek": 62356, "start": 637.3199999999999, "end": 642.88, "text": " the voice coil responds by resisting the load with the largest actuated force possible in", "tokens": [51052, 264, 3177, 22225, 27331, 538, 43940, 264, 3677, 365, 264, 6443, 605, 27275, 3464, 1944, 294, 51330], "temperature": 0.0, "avg_logprob": -0.11647854036497839, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.3170594871044159}, {"id": 135, "seek": 62356, "start": 642.88, "end": 645.4799999999999, "text": " the opposite direction as the applied load.", "tokens": [51330, 264, 6182, 3513, 382, 264, 6456, 3677, 13, 51460], "temperature": 0.0, "avg_logprob": -0.11647854036497839, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.3170594871044159}, {"id": 136, "seek": 62356, "start": 645.4799999999999, "end": 649.92, "text": " Likewise, the lowest axial stiffness would be achieved if when the beam is loaded, the", "tokens": [51460, 30269, 11, 264, 12437, 46851, 37759, 576, 312, 11042, 498, 562, 264, 14269, 307, 13210, 11, 264, 51682], "temperature": 0.0, "avg_logprob": -0.11647854036497839, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.3170594871044159}, {"id": 137, "seek": 64992, "start": 649.92, "end": 655.16, "text": " voice coil responds by assisting the load with the largest actuated force possible along", "tokens": [50364, 3177, 22225, 27331, 538, 40368, 264, 3677, 365, 264, 6443, 605, 27275, 3464, 1944, 2051, 50626], "temperature": 0.0, "avg_logprob": -0.10006766416588608, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00370673811994493}, {"id": 138, "seek": 64992, "start": 655.16, "end": 657.76, "text": " the same direction as the applied load.", "tokens": [50626, 264, 912, 3513, 382, 264, 6456, 3677, 13, 50756], "temperature": 0.0, "avg_logprob": -0.10006766416588608, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00370673811994493}, {"id": 139, "seek": 64992, "start": 657.76, "end": 663.76, "text": " In this way, the tunable beams could be made to achieve zero or even negative stiffness.", "tokens": [50756, 682, 341, 636, 11, 264, 4267, 712, 31040, 727, 312, 1027, 281, 4584, 4018, 420, 754, 3671, 37759, 13, 51056], "temperature": 0.0, "avg_logprob": -0.10006766416588608, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00370673811994493}, {"id": 140, "seek": 64992, "start": 663.76, "end": 668.88, "text": " The beam's housing inflectures were cut from an aluminum sheet using wire EDM and its brackets", "tokens": [51056, 440, 14269, 311, 6849, 1536, 1809, 1303, 645, 1723, 490, 364, 15656, 8193, 1228, 6234, 18050, 44, 293, 1080, 26179, 51312], "temperature": 0.0, "avg_logprob": -0.10006766416588608, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00370673811994493}, {"id": 141, "seek": 64992, "start": 668.88, "end": 671.76, "text": " were machined from aluminum L brackets.", "tokens": [51312, 645, 2246, 2001, 490, 15656, 441, 26179, 13, 51456], "temperature": 0.0, "avg_logprob": -0.10006766416588608, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00370673811994493}, {"id": 142, "seek": 64992, "start": 671.76, "end": 676.76, "text": " We applied proportional and derivative closed loop control as detailed by this diagram to", "tokens": [51456, 492, 6456, 24969, 293, 13760, 5395, 6367, 1969, 382, 9942, 538, 341, 10686, 281, 51706], "temperature": 0.0, "avg_logprob": -0.10006766416588608, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00370673811994493}, {"id": 143, "seek": 67676, "start": 676.76, "end": 680.24, "text": " achieve the desired stiffness control of the tunable beams.", "tokens": [50364, 4584, 264, 14721, 37759, 1969, 295, 264, 4267, 712, 31040, 13, 50538], "temperature": 0.0, "avg_logprob": -0.12904333387102399, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.005554527509957552}, {"id": 144, "seek": 67676, "start": 680.24, "end": 685.76, "text": " An instant testing machine was used to individually calibrate each beam by generating these four", "tokens": [50538, 1107, 9836, 4997, 3479, 390, 1143, 281, 16652, 21583, 4404, 1184, 14269, 538, 17746, 613, 1451, 50814], "temperature": 0.0, "avg_logprob": -0.12904333387102399, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.005554527509957552}, {"id": 145, "seek": 67676, "start": 685.76, "end": 688.8, "text": " plots to inform the controller as shown.", "tokens": [50814, 28609, 281, 1356, 264, 10561, 382, 4898, 13, 50966], "temperature": 0.0, "avg_logprob": -0.12904333387102399, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.005554527509957552}, {"id": 146, "seek": 67676, "start": 688.8, "end": 694.64, "text": " If this function is set to EK in the control loop and the proportional gain Kp is set to", "tokens": [50966, 759, 341, 2445, 307, 992, 281, 46078, 294, 264, 1969, 6367, 293, 264, 24969, 6052, 591, 79, 307, 992, 281, 51258], "temperature": 0.0, "avg_logprob": -0.12904333387102399, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.005554527509957552}, {"id": 147, "seek": 67676, "start": 694.64, "end": 700.0, "text": " a desired value, the resulting forced displacement response of the actively controlled beam will", "tokens": [51258, 257, 14721, 2158, 11, 264, 16505, 7579, 21899, 4134, 295, 264, 13022, 10164, 14269, 486, 51526], "temperature": 0.0, "avg_logprob": -0.12904333387102399, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.005554527509957552}, {"id": 148, "seek": 67676, "start": 700.0, "end": 705.12, "text": " be linear and will possess an unchanging slope, i.e. stiffness, that is equal to the", "tokens": [51526, 312, 8213, 293, 486, 17490, 364, 517, 27123, 13525, 11, 741, 13, 68, 13, 37759, 11, 300, 307, 2681, 281, 264, 51782], "temperature": 0.0, "avg_logprob": -0.12904333387102399, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.005554527509957552}, {"id": 149, "seek": 70512, "start": 705.12, "end": 708.28, "text": " proportional gain Kp value set.", "tokens": [50364, 24969, 6052, 591, 79, 2158, 992, 13, 50522], "temperature": 0.0, "avg_logprob": -0.14080274623373282, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.00317242369055748}, {"id": 150, "seek": 70512, "start": 708.28, "end": 712.96, "text": " This plot, measured using an instant testing machine, shows the linear forced displacement", "tokens": [50522, 639, 7542, 11, 12690, 1228, 364, 9836, 4997, 3479, 11, 3110, 264, 8213, 7579, 21899, 50756], "temperature": 0.0, "avg_logprob": -0.14080274623373282, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.00317242369055748}, {"id": 151, "seek": 70512, "start": 712.96, "end": 718.48, "text": " responses of a tunable beam being controlled with different Kp values to achieve corresponding", "tokens": [50756, 13019, 295, 257, 4267, 712, 14269, 885, 10164, 365, 819, 591, 79, 4190, 281, 4584, 11760, 51032], "temperature": 0.0, "avg_logprob": -0.14080274623373282, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.00317242369055748}, {"id": 152, "seek": 70512, "start": 718.48, "end": 721.52, "text": " positive and negative axial stiffness values.", "tokens": [51032, 3353, 293, 3671, 46851, 37759, 4190, 13, 51184], "temperature": 0.0, "avg_logprob": -0.14080274623373282, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.00317242369055748}, {"id": 153, "seek": 70512, "start": 721.52, "end": 725.84, "text": " The maximum and minimum stiffness values that the beam could be controlled to achieve without", "tokens": [51184, 440, 6674, 293, 7285, 37759, 4190, 300, 264, 14269, 727, 312, 10164, 281, 4584, 1553, 51400], "temperature": 0.0, "avg_logprob": -0.14080274623373282, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.00317242369055748}, {"id": 154, "seek": 70512, "start": 725.84, "end": 733.28, "text": " becoming unstable was measured to be 2.3 Nm and negative 2 Nm respectively.", "tokens": [51400, 5617, 23742, 390, 12690, 281, 312, 568, 13, 18, 426, 76, 293, 3671, 568, 426, 76, 25009, 13, 51772], "temperature": 0.0, "avg_logprob": -0.14080274623373282, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.00317242369055748}, {"id": 155, "seek": 73328, "start": 733.28, "end": 738.28, "text": " With a working tunable beam that could be controlled to achieve any desired axial stiffness", "tokens": [50364, 2022, 257, 1364, 4267, 712, 14269, 300, 727, 312, 10164, 281, 4584, 604, 14721, 46851, 37759, 50614], "temperature": 0.0, "avg_logprob": -0.08324277167226754, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.14595729112625122}, {"id": 156, "seek": 73328, "start": 738.28, "end": 744.0, "text": " between its maximum and minimum stiffness values, 21 such tunable beams were fabricated", "tokens": [50614, 1296, 1080, 6674, 293, 7285, 37759, 4190, 11, 5080, 1270, 4267, 712, 31040, 645, 7253, 770, 50900], "temperature": 0.0, "avg_logprob": -0.08324277167226754, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.14595729112625122}, {"id": 157, "seek": 73328, "start": 744.0, "end": 749.3199999999999, "text": " and assembled within a triangular configuration as shown by these blue lines to demonstrate", "tokens": [50900, 293, 24204, 1951, 257, 38190, 11694, 382, 4898, 538, 613, 3344, 3876, 281, 11698, 51166], "temperature": 0.0, "avg_logprob": -0.08324277167226754, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.14595729112625122}, {"id": 158, "seek": 73328, "start": 749.3199999999999, "end": 752.0, "text": " learning within a mechanical neural network.", "tokens": [51166, 2539, 1951, 257, 12070, 18161, 3209, 13, 51300], "temperature": 0.0, "avg_logprob": -0.08324277167226754, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.14595729112625122}, {"id": 159, "seek": 73328, "start": 752.0, "end": 756.72, "text": " Four additional voice coil actuators were used in conjunction with decoupling flexures", "tokens": [51300, 7451, 4497, 3177, 22225, 34964, 3391, 645, 1143, 294, 27482, 365, 979, 263, 11970, 5896, 1303, 51536], "temperature": 0.0, "avg_logprob": -0.08324277167226754, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.14595729112625122}, {"id": 160, "seek": 73328, "start": 756.72, "end": 760.72, "text": " to drive the two input nodes on the left side of the lattice with forces that can be made", "tokens": [51536, 281, 3332, 264, 732, 4846, 13891, 322, 264, 1411, 1252, 295, 264, 34011, 365, 5874, 300, 393, 312, 1027, 51736], "temperature": 0.0, "avg_logprob": -0.08324277167226754, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.14595729112625122}, {"id": 161, "seek": 76072, "start": 760.72, "end": 763.8000000000001, "text": " to point in any in-plane direction desired.", "tokens": [50364, 281, 935, 294, 604, 294, 12, 36390, 3513, 14721, 13, 50518], "temperature": 0.0, "avg_logprob": -0.13520509369519293, "compression_ratio": 1.7078651685393258, "no_speech_prob": 0.47961074113845825}, {"id": 162, "seek": 76072, "start": 763.8000000000001, "end": 769.8000000000001, "text": " Two cameras mounted on a frame directly measure the displacement of pins inserted at the center", "tokens": [50518, 4453, 8622, 19138, 322, 257, 3920, 3838, 3481, 264, 21899, 295, 16392, 27992, 412, 264, 3056, 50818], "temperature": 0.0, "avg_logprob": -0.13520509369519293, "compression_ratio": 1.7078651685393258, "no_speech_prob": 0.47961074113845825}, {"id": 163, "seek": 76072, "start": 769.8000000000001, "end": 775.36, "text": " of both output nodes and black felt is used to contrast the white color of the pin heads", "tokens": [50818, 295, 1293, 5598, 13891, 293, 2211, 2762, 307, 1143, 281, 8712, 264, 2418, 2017, 295, 264, 5447, 8050, 51096], "temperature": 0.0, "avg_logprob": -0.13520509369519293, "compression_ratio": 1.7078651685393258, "no_speech_prob": 0.47961074113845825}, {"id": 164, "seek": 76072, "start": 775.36, "end": 777.08, "text": " so that they stand out.", "tokens": [51096, 370, 300, 436, 1463, 484, 13, 51182], "temperature": 0.0, "avg_logprob": -0.13520509369519293, "compression_ratio": 1.7078651685393258, "no_speech_prob": 0.47961074113845825}, {"id": 165, "seek": 76072, "start": 777.08, "end": 781.76, "text": " This colored computer generated image helps clarify other important features within the", "tokens": [51182, 639, 14332, 3820, 10833, 3256, 3665, 17594, 661, 1021, 4122, 1951, 264, 51416], "temperature": 0.0, "avg_logprob": -0.13520509369519293, "compression_ratio": 1.7078651685393258, "no_speech_prob": 0.47961074113845825}, {"id": 166, "seek": 76072, "start": 781.76, "end": 783.44, "text": " mechanical neural network.", "tokens": [51416, 12070, 18161, 3209, 13, 51500], "temperature": 0.0, "avg_logprob": -0.13520509369519293, "compression_ratio": 1.7078651685393258, "no_speech_prob": 0.47961074113845825}, {"id": 167, "seek": 76072, "start": 783.44, "end": 788.4, "text": " Note the purple colored rotational flexures centered around each of the network's nodes.", "tokens": [51500, 11633, 264, 9656, 14332, 45420, 5896, 1303, 18988, 926, 1184, 295, 264, 3209, 311, 13891, 13, 51748], "temperature": 0.0, "avg_logprob": -0.13520509369519293, "compression_ratio": 1.7078651685393258, "no_speech_prob": 0.47961074113845825}, {"id": 168, "seek": 78840, "start": 788.4, "end": 793.76, "text": " These flexures passively deform to accommodate the expansions and contractions of the tunable", "tokens": [50364, 1981, 5896, 1303, 1320, 3413, 36094, 281, 21410, 264, 9672, 626, 293, 4364, 626, 295, 264, 4267, 712, 50632], "temperature": 0.0, "avg_logprob": -0.10104204944728576, "compression_ratio": 1.6475095785440612, "no_speech_prob": 0.000911012408323586}, {"id": 169, "seek": 78840, "start": 793.76, "end": 796.84, "text": " beams as the network is loaded during learning.", "tokens": [50632, 31040, 382, 264, 3209, 307, 13210, 1830, 2539, 13, 50786], "temperature": 0.0, "avg_logprob": -0.10104204944728576, "compression_ratio": 1.6475095785440612, "no_speech_prob": 0.000911012408323586}, {"id": 170, "seek": 78840, "start": 796.84, "end": 802.12, "text": " Also note the green colored flexures that decouple the input actuators due to their cleverly", "tokens": [50786, 2743, 3637, 264, 3092, 14332, 5896, 1303, 300, 979, 263, 781, 264, 4846, 34964, 3391, 3462, 281, 641, 13494, 356, 51050], "temperature": 0.0, "avg_logprob": -0.10104204944728576, "compression_ratio": 1.6475095785440612, "no_speech_prob": 0.000911012408323586}, {"id": 171, "seek": 78840, "start": 802.12, "end": 803.64, "text": " stacked arrangement.", "tokens": [51050, 28867, 17620, 13, 51126], "temperature": 0.0, "avg_logprob": -0.10104204944728576, "compression_ratio": 1.6475095785440612, "no_speech_prob": 0.000911012408323586}, {"id": 172, "seek": 78840, "start": 803.64, "end": 808.48, "text": " Hard stops are built around all the flexures in the system to prevent them from yielding.", "tokens": [51126, 11817, 10094, 366, 3094, 926, 439, 264, 5896, 1303, 294, 264, 1185, 281, 4871, 552, 490, 11257, 278, 13, 51368], "temperature": 0.0, "avg_logprob": -0.10104204944728576, "compression_ratio": 1.6475095785440612, "no_speech_prob": 0.000911012408323586}, {"id": 173, "seek": 78840, "start": 808.48, "end": 813.0, "text": " Although the machine's two mounted cameras can directly measure the lattice's output", "tokens": [51368, 5780, 264, 3479, 311, 732, 19138, 8622, 393, 3838, 3481, 264, 34011, 311, 5598, 51594], "temperature": 0.0, "avg_logprob": -0.10104204944728576, "compression_ratio": 1.6475095785440612, "no_speech_prob": 0.000911012408323586}, {"id": 174, "seek": 81300, "start": 813.0, "end": 818.56, "text": " node displacements, note that the strain gauge sensors on each beam can directly measure", "tokens": [50364, 9984, 14996, 41140, 11, 3637, 300, 264, 14249, 17924, 14840, 322, 1184, 14269, 393, 3838, 3481, 50642], "temperature": 0.0, "avg_logprob": -0.08434791954196229, "compression_ratio": 2.008298755186722, "no_speech_prob": 0.14028501510620117}, {"id": 175, "seek": 81300, "start": 818.56, "end": 823.36, "text": " the beam's extension and contraction and that information can be used to indirectly", "tokens": [50642, 264, 14269, 311, 10320, 293, 37372, 293, 300, 1589, 393, 312, 1143, 281, 37779, 50882], "temperature": 0.0, "avg_logprob": -0.08434791954196229, "compression_ratio": 2.008298755186722, "no_speech_prob": 0.14028501510620117}, {"id": 176, "seek": 81300, "start": 823.36, "end": 827.6, "text": " calculate the displacements of all the nodes in the mechanical neural network including", "tokens": [50882, 8873, 264, 14996, 41140, 295, 439, 264, 13891, 294, 264, 12070, 18161, 3209, 3009, 51094], "temperature": 0.0, "avg_logprob": -0.08434791954196229, "compression_ratio": 2.008298755186722, "no_speech_prob": 0.14028501510620117}, {"id": 177, "seek": 81300, "start": 827.6, "end": 829.88, "text": " the displacements of its output nodes.", "tokens": [51094, 264, 14996, 41140, 295, 1080, 5598, 13891, 13, 51208], "temperature": 0.0, "avg_logprob": -0.08434791954196229, "compression_ratio": 2.008298755186722, "no_speech_prob": 0.14028501510620117}, {"id": 178, "seek": 81300, "start": 829.88, "end": 834.56, "text": " This strain gauge approach to indirectly sensing the output node displacements can predict", "tokens": [51208, 639, 14249, 17924, 3109, 281, 37779, 30654, 264, 5598, 9984, 14996, 41140, 393, 6069, 51442], "temperature": 0.0, "avg_logprob": -0.08434791954196229, "compression_ratio": 2.008298755186722, "no_speech_prob": 0.14028501510620117}, {"id": 179, "seek": 81300, "start": 834.56, "end": 839.68, "text": " the displacements with a much higher sampling rate compared to the frame rate of the cameras.", "tokens": [51442, 264, 14996, 41140, 365, 257, 709, 2946, 21179, 3314, 5347, 281, 264, 3920, 3314, 295, 264, 8622, 13, 51698], "temperature": 0.0, "avg_logprob": -0.08434791954196229, "compression_ratio": 2.008298755186722, "no_speech_prob": 0.14028501510620117}, {"id": 180, "seek": 83968, "start": 839.68, "end": 844.4399999999999, "text": " These plots show how accurately the strain gauge approach tracked the cameras measured", "tokens": [50364, 1981, 28609, 855, 577, 20095, 264, 14249, 17924, 3109, 31703, 264, 8622, 12690, 50602], "temperature": 0.0, "avg_logprob": -0.09451538754492692, "compression_ratio": 1.7872340425531914, "no_speech_prob": 0.05183073878288269}, {"id": 181, "seek": 83968, "start": 844.4399999999999, "end": 849.0, "text": " output node displacements when the lattice was loaded with a random combination of axial", "tokens": [50602, 5598, 9984, 14996, 41140, 562, 264, 34011, 390, 13210, 365, 257, 4974, 6562, 295, 46851, 50830], "temperature": 0.0, "avg_logprob": -0.09451538754492692, "compression_ratio": 1.7872340425531914, "no_speech_prob": 0.05183073878288269}, {"id": 182, "seek": 83968, "start": 849.0, "end": 852.7199999999999, "text": " stiffness values uploaded to each tunable beam in the lattice.", "tokens": [50830, 37759, 4190, 17135, 281, 1184, 4267, 712, 14269, 294, 264, 34011, 13, 51016], "temperature": 0.0, "avg_logprob": -0.09451538754492692, "compression_ratio": 1.7872340425531914, "no_speech_prob": 0.05183073878288269}, {"id": 183, "seek": 83968, "start": 852.7199999999999, "end": 856.68, "text": " The strain gauge approach is also important to the functionality of mechanical neural", "tokens": [51016, 440, 14249, 17924, 3109, 307, 611, 1021, 281, 264, 14980, 295, 12070, 18161, 51214], "temperature": 0.0, "avg_logprob": -0.09451538754492692, "compression_ratio": 1.7872340425531914, "no_speech_prob": 0.05183073878288269}, {"id": 184, "seek": 83968, "start": 856.68, "end": 861.4, "text": " networks because without the approach such networks cannot learn without being placed", "tokens": [51214, 9590, 570, 1553, 264, 3109, 1270, 9590, 2644, 1466, 1553, 885, 7074, 51450], "temperature": 0.0, "avg_logprob": -0.09451538754492692, "compression_ratio": 1.7872340425531914, "no_speech_prob": 0.05183073878288269}, {"id": 185, "seek": 83968, "start": 861.4, "end": 866.68, "text": " in a testing rig which is not practical for most applications that require in-field learning.", "tokens": [51450, 294, 257, 4997, 8329, 597, 307, 406, 8496, 337, 881, 5821, 300, 3651, 294, 12, 7610, 2539, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09451538754492692, "compression_ratio": 1.7872340425531914, "no_speech_prob": 0.05183073878288269}, {"id": 186, "seek": 86668, "start": 866.68, "end": 871.3599999999999, "text": " Moreover, the ability to accurately measure the displacements of all the nodes in the", "tokens": [50364, 19838, 11, 264, 3485, 281, 20095, 3481, 264, 14996, 41140, 295, 439, 264, 13891, 294, 264, 50598], "temperature": 0.0, "avg_logprob": -0.08099001929873512, "compression_ratio": 1.7830508474576272, "no_speech_prob": 0.030203506350517273}, {"id": 187, "seek": 86668, "start": 871.3599999999999, "end": 876.56, "text": " network when it is subjected to unanticipated and changing ambient loading scenarios is", "tokens": [50598, 3209, 562, 309, 307, 32153, 281, 517, 394, 6537, 770, 293, 4473, 22997, 15114, 15077, 307, 50858], "temperature": 0.0, "avg_logprob": -0.08099001929873512, "compression_ratio": 1.7830508474576272, "no_speech_prob": 0.030203506350517273}, {"id": 188, "seek": 86668, "start": 876.56, "end": 881.8, "text": " necessary for mechanical neural networks to be able to identify when those loads correspond", "tokens": [50858, 4818, 337, 12070, 18161, 9590, 281, 312, 1075, 281, 5876, 562, 729, 12668, 6805, 51120], "temperature": 0.0, "avg_logprob": -0.08099001929873512, "compression_ratio": 1.7830508474576272, "no_speech_prob": 0.030203506350517273}, {"id": 189, "seek": 86668, "start": 881.8, "end": 886.4799999999999, "text": " to the input forces of their desired behaviors being learned so that the network can then", "tokens": [51120, 281, 264, 4846, 5874, 295, 641, 14721, 15501, 885, 3264, 370, 300, 264, 3209, 393, 550, 51354], "temperature": 0.0, "avg_logprob": -0.08099001929873512, "compression_ratio": 1.7830508474576272, "no_speech_prob": 0.030203506350517273}, {"id": 190, "seek": 86668, "start": 886.4799999999999, "end": 891.0799999999999, "text": " calculate its mean squared error and minimize it as described previously.", "tokens": [51354, 8873, 1080, 914, 8889, 6713, 293, 17522, 309, 382, 7619, 8046, 13, 51584], "temperature": 0.0, "avg_logprob": -0.08099001929873512, "compression_ratio": 1.7830508474576272, "no_speech_prob": 0.030203506350517273}, {"id": 191, "seek": 86668, "start": 891.0799999999999, "end": 896.4799999999999, "text": " Note that the input node forces can be indirectly calculated at any given time using the current", "tokens": [51584, 11633, 300, 264, 4846, 9984, 5874, 393, 312, 37779, 15598, 412, 604, 2212, 565, 1228, 264, 2190, 51854], "temperature": 0.0, "avg_logprob": -0.08099001929873512, "compression_ratio": 1.7830508474576272, "no_speech_prob": 0.030203506350517273}, {"id": 192, "seek": 89648, "start": 896.48, "end": 901.8000000000001, "text": " combination of beam stiffness values uploaded to the network at that time and the corresponding", "tokens": [50364, 6562, 295, 14269, 37759, 4190, 17135, 281, 264, 3209, 412, 300, 565, 293, 264, 11760, 50630], "temperature": 0.0, "avg_logprob": -0.12513590407097477, "compression_ratio": 1.6828358208955223, "no_speech_prob": 0.00460908142849803}, {"id": 193, "seek": 89648, "start": 901.8000000000001, "end": 906.24, "text": " strain gauge measured displacements of all the network's nodes that resulted from these", "tokens": [50630, 14249, 17924, 12690, 14996, 41140, 295, 439, 264, 3209, 311, 13891, 300, 18753, 490, 613, 50852], "temperature": 0.0, "avg_logprob": -0.12513590407097477, "compression_ratio": 1.6828358208955223, "no_speech_prob": 0.00460908142849803}, {"id": 194, "seek": 89648, "start": 906.24, "end": 908.4, "text": " loading forces.", "tokens": [50852, 15114, 5874, 13, 50960], "temperature": 0.0, "avg_logprob": -0.12513590407097477, "compression_ratio": 1.6828358208955223, "no_speech_prob": 0.00460908142849803}, {"id": 195, "seek": 89648, "start": 908.4, "end": 913.6, "text": " Our 21 beam mechanical neural network first demonstrated its ability to learn by learning", "tokens": [50960, 2621, 5080, 14269, 12070, 18161, 3209, 700, 18772, 1080, 3485, 281, 1466, 538, 2539, 51220], "temperature": 0.0, "avg_logprob": -0.12513590407097477, "compression_ratio": 1.6828358208955223, "no_speech_prob": 0.00460908142849803}, {"id": 196, "seek": 89648, "start": 913.6, "end": 918.16, "text": " two behaviors simultaneously using the approach described previously.", "tokens": [51220, 732, 15501, 16561, 1228, 264, 3109, 7619, 8046, 13, 51448], "temperature": 0.0, "avg_logprob": -0.12513590407097477, "compression_ratio": 1.6828358208955223, "no_speech_prob": 0.00460908142849803}, {"id": 197, "seek": 89648, "start": 918.16, "end": 923.64, "text": " For the first behavior shown exaggerated in red here, output node 1 should displace outward", "tokens": [51448, 1171, 264, 700, 5223, 4898, 36196, 294, 2182, 510, 11, 5598, 9984, 502, 820, 717, 6742, 26914, 51722], "temperature": 0.0, "avg_logprob": -0.12513590407097477, "compression_ratio": 1.6828358208955223, "no_speech_prob": 0.00460908142849803}, {"id": 198, "seek": 92364, "start": 923.64, "end": 929.08, "text": " 0.5 millimeters while output node 2 should displace inward 0.5 millimeters when the input", "tokens": [50364, 1958, 13, 20, 24388, 1339, 5598, 9984, 568, 820, 717, 6742, 29876, 1958, 13, 20, 24388, 562, 264, 4846, 50636], "temperature": 0.0, "avg_logprob": -0.11045153935750325, "compression_ratio": 2.1363636363636362, "no_speech_prob": 0.11432091891765594}, {"id": 199, "seek": 92364, "start": 929.08, "end": 932.0, "text": " nodes are loaded with 1 Newton horizontal forces.", "tokens": [50636, 13891, 366, 13210, 365, 502, 19541, 12750, 5874, 13, 50782], "temperature": 0.0, "avg_logprob": -0.11045153935750325, "compression_ratio": 2.1363636363636362, "no_speech_prob": 0.11432091891765594}, {"id": 200, "seek": 92364, "start": 932.0, "end": 937.1999999999999, "text": " For the second behavior shown exaggerated in green here, the output node 1 should displace", "tokens": [50782, 1171, 264, 1150, 5223, 4898, 36196, 294, 3092, 510, 11, 264, 5598, 9984, 502, 820, 717, 6742, 51042], "temperature": 0.0, "avg_logprob": -0.11045153935750325, "compression_ratio": 2.1363636363636362, "no_speech_prob": 0.11432091891765594}, {"id": 201, "seek": 92364, "start": 937.1999999999999, "end": 942.72, "text": " inward 0.5 millimeters while output node 2 should displace outward 0.5 millimeters when", "tokens": [51042, 29876, 1958, 13, 20, 24388, 1339, 5598, 9984, 568, 820, 717, 6742, 26914, 1958, 13, 20, 24388, 562, 51318], "temperature": 0.0, "avg_logprob": -0.11045153935750325, "compression_ratio": 2.1363636363636362, "no_speech_prob": 0.11432091891765594}, {"id": 202, "seek": 92364, "start": 942.72, "end": 946.36, "text": " the input nodes are loaded with 1 Newton vertical forces.", "tokens": [51318, 264, 4846, 13891, 366, 13210, 365, 502, 19541, 9429, 5874, 13, 51500], "temperature": 0.0, "avg_logprob": -0.11045153935750325, "compression_ratio": 2.1363636363636362, "no_speech_prob": 0.11432091891765594}, {"id": 203, "seek": 92364, "start": 946.36, "end": 950.92, "text": " The first optimization algorithm that we use to determine what combination of axial stiffness", "tokens": [51500, 440, 700, 19618, 9284, 300, 321, 764, 281, 6997, 437, 6562, 295, 46851, 37759, 51728], "temperature": 0.0, "avg_logprob": -0.11045153935750325, "compression_ratio": 2.1363636363636362, "no_speech_prob": 0.11432091891765594}, {"id": 204, "seek": 95092, "start": 950.92, "end": 955.7199999999999, "text": " values should be uploaded to each tunable beam in lattice during each step of the learning", "tokens": [50364, 4190, 820, 312, 17135, 281, 1184, 4267, 712, 14269, 294, 34011, 1830, 1184, 1823, 295, 264, 2539, 50604], "temperature": 0.0, "avg_logprob": -0.10762472050164336, "compression_ratio": 1.754646840148699, "no_speech_prob": 0.011330265551805496}, {"id": 205, "seek": 95092, "start": 955.7199999999999, "end": 958.56, "text": " approach was a genetic algorithm.", "tokens": [50604, 3109, 390, 257, 12462, 9284, 13, 50746], "temperature": 0.0, "avg_logprob": -0.10762472050164336, "compression_ratio": 1.754646840148699, "no_speech_prob": 0.011330265551805496}, {"id": 206, "seek": 95092, "start": 958.56, "end": 963.28, "text": " The algorithm samples 1000 random beam stiffness combinations.", "tokens": [50746, 440, 9284, 10938, 9714, 4974, 14269, 37759, 21267, 13, 50982], "temperature": 0.0, "avg_logprob": -0.10762472050164336, "compression_ratio": 1.754646840148699, "no_speech_prob": 0.011330265551805496}, {"id": 207, "seek": 95092, "start": 963.28, "end": 968.28, "text": " It then identifies and plots the combination that achieved the lowest resulting output", "tokens": [50982, 467, 550, 34597, 293, 28609, 264, 6562, 300, 11042, 264, 12437, 16505, 5598, 51232], "temperature": 0.0, "avg_logprob": -0.10762472050164336, "compression_ratio": 1.754646840148699, "no_speech_prob": 0.011330265551805496}, {"id": 208, "seek": 95092, "start": 968.28, "end": 970.52, "text": " node displacement mean squared error.", "tokens": [51232, 9984, 21899, 914, 8889, 6713, 13, 51344], "temperature": 0.0, "avg_logprob": -0.10762472050164336, "compression_ratio": 1.754646840148699, "no_speech_prob": 0.011330265551805496}, {"id": 209, "seek": 95092, "start": 970.52, "end": 976.3199999999999, "text": " A new, more promising group of 1000 beam stiffness combinations is then generated by crossing", "tokens": [51344, 316, 777, 11, 544, 20257, 1594, 295, 9714, 14269, 37759, 21267, 307, 550, 10833, 538, 14712, 51634], "temperature": 0.0, "avg_logprob": -0.10762472050164336, "compression_ratio": 1.754646840148699, "no_speech_prob": 0.011330265551805496}, {"id": 210, "seek": 95092, "start": 976.3199999999999, "end": 980.24, "text": " the most successful combinations attempted in the previous group.", "tokens": [51634, 264, 881, 4406, 21267, 18997, 294, 264, 3894, 1594, 13, 51830], "temperature": 0.0, "avg_logprob": -0.10762472050164336, "compression_ratio": 1.754646840148699, "no_speech_prob": 0.011330265551805496}, {"id": 211, "seek": 98024, "start": 980.24, "end": 985.64, "text": " The process is repeated until the mean squared error calculated stops changing from one group", "tokens": [50364, 440, 1399, 307, 10477, 1826, 264, 914, 8889, 6713, 15598, 10094, 4473, 490, 472, 1594, 50634], "temperature": 0.0, "avg_logprob": -0.08481635736382526, "compression_ratio": 1.7790697674418605, "no_speech_prob": 0.0003569558903109282}, {"id": 212, "seek": 98024, "start": 985.64, "end": 986.64, "text": " to the next.", "tokens": [50634, 281, 264, 958, 13, 50684], "temperature": 0.0, "avg_logprob": -0.08481635736382526, "compression_ratio": 1.7790697674418605, "no_speech_prob": 0.0003569558903109282}, {"id": 213, "seek": 98024, "start": 986.64, "end": 991.84, "text": " A plot showing how the algorithm reduced the mean squared error over time is shown here,", "tokens": [50684, 316, 7542, 4099, 577, 264, 9284, 9212, 264, 914, 8889, 6713, 670, 565, 307, 4898, 510, 11, 50944], "temperature": 0.0, "avg_logprob": -0.08481635736382526, "compression_ratio": 1.7790697674418605, "no_speech_prob": 0.0003569558903109282}, {"id": 214, "seek": 98024, "start": 991.84, "end": 997.16, "text": " along with a video showing the mechanical neural network learning in real time.", "tokens": [50944, 2051, 365, 257, 960, 4099, 264, 12070, 18161, 3209, 2539, 294, 957, 565, 13, 51210], "temperature": 0.0, "avg_logprob": -0.08481635736382526, "compression_ratio": 1.7790697674418605, "no_speech_prob": 0.0003569558903109282}, {"id": 215, "seek": 98024, "start": 997.16, "end": 1002.28, "text": " This animation shows how both output nodes displaced progressively closer to their target", "tokens": [51210, 639, 9603, 3110, 577, 1293, 5598, 13891, 33692, 46667, 4966, 281, 641, 3779, 51466], "temperature": 0.0, "avg_logprob": -0.08481635736382526, "compression_ratio": 1.7790697674418605, "no_speech_prob": 0.0003569558903109282}, {"id": 216, "seek": 98024, "start": 1002.28, "end": 1008.32, "text": " locations as improved beam stiffness combinations were identified from one group to the next.", "tokens": [51466, 9253, 382, 9689, 14269, 37759, 21267, 645, 9234, 490, 472, 1594, 281, 264, 958, 13, 51768], "temperature": 0.0, "avg_logprob": -0.08481635736382526, "compression_ratio": 1.7790697674418605, "no_speech_prob": 0.0003569558903109282}, {"id": 217, "seek": 100832, "start": 1008.32, "end": 1013.2800000000001, "text": " The initial starting and ending locations of those output nodes are shown here without", "tokens": [50364, 440, 5883, 2891, 293, 8121, 9253, 295, 729, 5598, 13891, 366, 4898, 510, 1553, 50612], "temperature": 0.0, "avg_logprob": -0.10758264014061461, "compression_ratio": 1.7147887323943662, "no_speech_prob": 0.0010648943716660142}, {"id": 218, "seek": 100832, "start": 1013.2800000000001, "end": 1015.72, "text": " the visual clutter of the path taken.", "tokens": [50612, 264, 5056, 40614, 295, 264, 3100, 2726, 13, 50734], "temperature": 0.0, "avg_logprob": -0.10758264014061461, "compression_ratio": 1.7147887323943662, "no_speech_prob": 0.0010648943716660142}, {"id": 219, "seek": 100832, "start": 1015.72, "end": 1021.5200000000001, "text": " You can see that their final locations are almost directly on top of the target locations.", "tokens": [50734, 509, 393, 536, 300, 641, 2572, 9253, 366, 1920, 3838, 322, 1192, 295, 264, 3779, 9253, 13, 51024], "temperature": 0.0, "avg_logprob": -0.10758264014061461, "compression_ratio": 1.7147887323943662, "no_speech_prob": 0.0010648943716660142}, {"id": 220, "seek": 100832, "start": 1021.5200000000001, "end": 1026.72, "text": " Once learning was successfully demonstrated in this way, using the genetic algorithm described", "tokens": [51024, 3443, 2539, 390, 10727, 18772, 294, 341, 636, 11, 1228, 264, 12462, 9284, 7619, 51284], "temperature": 0.0, "avg_logprob": -0.10758264014061461, "compression_ratio": 1.7147887323943662, "no_speech_prob": 0.0010648943716660142}, {"id": 221, "seek": 100832, "start": 1026.72, "end": 1032.64, "text": " previously, we then conducted a study to compare the performance of five other optimization", "tokens": [51284, 8046, 11, 321, 550, 13809, 257, 2979, 281, 6794, 264, 3389, 295, 1732, 661, 19618, 51580], "temperature": 0.0, "avg_logprob": -0.10758264014061461, "compression_ratio": 1.7147887323943662, "no_speech_prob": 0.0010648943716660142}, {"id": 222, "seek": 100832, "start": 1032.64, "end": 1037.44, "text": " algorithms to determine which algorithm is best suited for mechanical neural network", "tokens": [51580, 14642, 281, 6997, 597, 9284, 307, 1151, 24736, 337, 12070, 18161, 3209, 51820], "temperature": 0.0, "avg_logprob": -0.10758264014061461, "compression_ratio": 1.7147887323943662, "no_speech_prob": 0.0010648943716660142}, {"id": 223, "seek": 103744, "start": 1037.44, "end": 1039.04, "text": " learning in general.", "tokens": [50364, 2539, 294, 2674, 13, 50444], "temperature": 0.0, "avg_logprob": -0.1431133550241453, "compression_ratio": 1.9429657794676807, "no_speech_prob": 0.19667968153953552}, {"id": 224, "seek": 103744, "start": 1039.04, "end": 1044.4, "text": " The five additional algorithms studied were full pattern search, partial pattern search,", "tokens": [50444, 440, 1732, 4497, 14642, 9454, 645, 1577, 5102, 3164, 11, 14641, 5102, 3164, 11, 50712], "temperature": 0.0, "avg_logprob": -0.1431133550241453, "compression_ratio": 1.9429657794676807, "no_speech_prob": 0.19667968153953552}, {"id": 225, "seek": 103744, "start": 1044.4, "end": 1048.88, "text": " interior point, sequential quadratic programming, and Nelder mean.", "tokens": [50712, 10636, 935, 11, 42881, 37262, 9410, 11, 293, 426, 338, 1068, 914, 13, 50936], "temperature": 0.0, "avg_logprob": -0.1431133550241453, "compression_ratio": 1.9429657794676807, "no_speech_prob": 0.19667968153953552}, {"id": 226, "seek": 103744, "start": 1048.88, "end": 1053.2, "text": " We compared how low the final mean squared error could be made using each algorithm,", "tokens": [50936, 492, 5347, 577, 2295, 264, 2572, 914, 8889, 6713, 727, 312, 1027, 1228, 1184, 9284, 11, 51152], "temperature": 0.0, "avg_logprob": -0.1431133550241453, "compression_ratio": 1.9429657794676807, "no_speech_prob": 0.19667968153953552}, {"id": 227, "seek": 103744, "start": 1053.2, "end": 1058.16, "text": " i.e. how accurately the mechanical neural network could successfully learn its behaviors,", "tokens": [51152, 741, 13, 68, 13, 577, 20095, 264, 12070, 18161, 3209, 727, 10727, 1466, 1080, 15501, 11, 51400], "temperature": 0.0, "avg_logprob": -0.1431133550241453, "compression_ratio": 1.9429657794676807, "no_speech_prob": 0.19667968153953552}, {"id": 228, "seek": 103744, "start": 1058.16, "end": 1063.48, "text": " and how many iterations the algorithm required to achieve that final mean squared error, i.e.", "tokens": [51400, 293, 577, 867, 36540, 264, 9284, 4739, 281, 4584, 300, 2572, 914, 8889, 6713, 11, 741, 13, 68, 13, 51666], "temperature": 0.0, "avg_logprob": -0.1431133550241453, "compression_ratio": 1.9429657794676807, "no_speech_prob": 0.19667968153953552}, {"id": 229, "seek": 103744, "start": 1063.48, "end": 1067.16, "text": " how fast the mechanical neural network could learn its behaviors.", "tokens": [51666, 577, 2370, 264, 12070, 18161, 3209, 727, 1466, 1080, 15501, 13, 51850], "temperature": 0.0, "avg_logprob": -0.1431133550241453, "compression_ratio": 1.9429657794676807, "no_speech_prob": 0.19667968153953552}, {"id": 230, "seek": 106716, "start": 1067.16, "end": 1071.4, "text": " It was determined that Nelder mean was the best suited algorithm for mechanical neural", "tokens": [50364, 467, 390, 9540, 300, 426, 338, 1068, 914, 390, 264, 1151, 24736, 9284, 337, 12070, 18161, 50576], "temperature": 0.0, "avg_logprob": -0.10531929211738782, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.014058307744562626}, {"id": 231, "seek": 106716, "start": 1071.4, "end": 1076.8400000000001, "text": " networks due to the algorithm's practical learning speed, impressive learning accuracy,", "tokens": [50576, 9590, 3462, 281, 264, 9284, 311, 8496, 2539, 3073, 11, 8992, 2539, 14170, 11, 50848], "temperature": 0.0, "avg_logprob": -0.10531929211738782, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.014058307744562626}, {"id": 232, "seek": 106716, "start": 1076.8400000000001, "end": 1079.28, "text": " and its insensitivity to system noise.", "tokens": [50848, 293, 1080, 1028, 694, 270, 4253, 281, 1185, 5658, 13, 50970], "temperature": 0.0, "avg_logprob": -0.10531929211738782, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.014058307744562626}, {"id": 233, "seek": 106716, "start": 1079.28, "end": 1083.52, "text": " The details of that study were published in the Journal of Mechanical Design and a link", "tokens": [50970, 440, 4365, 295, 300, 2979, 645, 6572, 294, 264, 16936, 295, 30175, 804, 12748, 293, 257, 2113, 51182], "temperature": 0.0, "avg_logprob": -0.10531929211738782, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.014058307744562626}, {"id": 234, "seek": 106716, "start": 1083.52, "end": 1086.48, "text": " to the paper is provided in the description below.", "tokens": [51182, 281, 264, 3035, 307, 5649, 294, 264, 3855, 2507, 13, 51330], "temperature": 0.0, "avg_logprob": -0.10531929211738782, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.014058307744562626}, {"id": 235, "seek": 106716, "start": 1086.48, "end": 1091.28, "text": " We were also interested to use the mechanical neural network to determine whether beams", "tokens": [51330, 492, 645, 611, 3102, 281, 764, 264, 12070, 18161, 3209, 281, 6997, 1968, 31040, 51570], "temperature": 0.0, "avg_logprob": -0.10531929211738782, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.014058307744562626}, {"id": 236, "seek": 106716, "start": 1091.28, "end": 1096.0400000000002, "text": " that are tuned to exhibit non-linear stiffness, i.e. stiffness that changes as the beams", "tokens": [51570, 300, 366, 10870, 281, 20487, 2107, 12, 28263, 37759, 11, 741, 13, 68, 13, 37759, 300, 2962, 382, 264, 31040, 51808], "temperature": 0.0, "avg_logprob": -0.10531929211738782, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.014058307744562626}, {"id": 237, "seek": 109604, "start": 1096.04, "end": 1100.8, "text": " deform, are favorable for learning compared to beams that are tuned to exhibit linear", "tokens": [50364, 36094, 11, 366, 29557, 337, 2539, 5347, 281, 31040, 300, 366, 10870, 281, 20487, 8213, 50602], "temperature": 0.0, "avg_logprob": -0.16329917522391887, "compression_ratio": 1.7378277153558053, "no_speech_prob": 0.13467401266098022}, {"id": 238, "seek": 109604, "start": 1100.8, "end": 1101.8, "text": " stiffness.", "tokens": [50602, 37759, 13, 50652], "temperature": 0.0, "avg_logprob": -0.16329917522391887, "compression_ratio": 1.7378277153558053, "no_speech_prob": 0.13467401266098022}, {"id": 239, "seek": 109604, "start": 1101.8, "end": 1105.44, "text": " Our closed loop controller was designed to test this hypothesis.", "tokens": [50652, 2621, 5395, 6367, 10561, 390, 4761, 281, 1500, 341, 17291, 13, 50834], "temperature": 0.0, "avg_logprob": -0.16329917522391887, "compression_ratio": 1.7378277153558053, "no_speech_prob": 0.13467401266098022}, {"id": 240, "seek": 109604, "start": 1105.44, "end": 1111.6, "text": " If this f of ek function is changed from ek to a different function, like tangent ek,", "tokens": [50834, 759, 341, 283, 295, 13359, 2445, 307, 3105, 490, 13359, 281, 257, 819, 2445, 11, 411, 27747, 13359, 11, 51142], "temperature": 0.0, "avg_logprob": -0.16329917522391887, "compression_ratio": 1.7378277153558053, "no_speech_prob": 0.13467401266098022}, {"id": 241, "seek": 109604, "start": 1111.6, "end": 1116.12, "text": " then the resulting force displacement plot exhibited by the actively controlled beam", "tokens": [51142, 550, 264, 16505, 3464, 21899, 7542, 49446, 538, 264, 13022, 10164, 14269, 51368], "temperature": 0.0, "avg_logprob": -0.16329917522391887, "compression_ratio": 1.7378277153558053, "no_speech_prob": 0.13467401266098022}, {"id": 242, "seek": 109604, "start": 1116.12, "end": 1118.68, "text": " would be a non-linear tangent function.", "tokens": [51368, 576, 312, 257, 2107, 12, 28263, 27747, 2445, 13, 51496], "temperature": 0.0, "avg_logprob": -0.16329917522391887, "compression_ratio": 1.7378277153558053, "no_speech_prob": 0.13467401266098022}, {"id": 243, "seek": 109604, "start": 1118.68, "end": 1123.6, "text": " This plot shows the tunable beam's force displacement response measured using an instrument", "tokens": [51496, 639, 7542, 3110, 264, 4267, 712, 14269, 311, 3464, 21899, 4134, 12690, 1228, 364, 7198, 51742], "temperature": 0.0, "avg_logprob": -0.16329917522391887, "compression_ratio": 1.7378277153558053, "no_speech_prob": 0.13467401266098022}, {"id": 244, "seek": 112360, "start": 1123.6, "end": 1130.1999999999998, "text": " testing machine with f of ek equaling ek and tangent ek for different proportional gain", "tokens": [50364, 4997, 3479, 365, 283, 295, 13359, 2681, 278, 13359, 293, 27747, 13359, 337, 819, 24969, 6052, 50694], "temperature": 0.0, "avg_logprob": -0.1301776552663266, "compression_ratio": 1.6555555555555554, "no_speech_prob": 0.06752432137727737}, {"id": 245, "seek": 112360, "start": 1130.1999999999998, "end": 1134.24, "text": " values, i.e. a kp of 1, 0, and negative 1.", "tokens": [50694, 4190, 11, 741, 13, 68, 13, 257, 350, 79, 295, 502, 11, 1958, 11, 293, 3671, 502, 13, 50896], "temperature": 0.0, "avg_logprob": -0.1301776552663266, "compression_ratio": 1.6555555555555554, "no_speech_prob": 0.06752432137727737}, {"id": 246, "seek": 112360, "start": 1134.24, "end": 1139.28, "text": " We then trained the mechanical neural network to learn random shape morphing behaviors using", "tokens": [50896, 492, 550, 8895, 264, 12070, 18161, 3209, 281, 1466, 4974, 3909, 1896, 79, 571, 15501, 1228, 51148], "temperature": 0.0, "avg_logprob": -0.1301776552663266, "compression_ratio": 1.6555555555555554, "no_speech_prob": 0.06752432137727737}, {"id": 247, "seek": 112360, "start": 1139.28, "end": 1145.24, "text": " both linear and non-linear tangent force displacement responses and compared their mean squared error", "tokens": [51148, 1293, 8213, 293, 2107, 12, 28263, 27747, 3464, 21899, 13019, 293, 5347, 641, 914, 8889, 6713, 51446], "temperature": 0.0, "avg_logprob": -0.1301776552663266, "compression_ratio": 1.6555555555555554, "no_speech_prob": 0.06752432137727737}, {"id": 248, "seek": 112360, "start": 1145.24, "end": 1147.9599999999998, "text": " versus time plots as shown here.", "tokens": [51446, 5717, 565, 28609, 382, 4898, 510, 13, 51582], "temperature": 0.0, "avg_logprob": -0.1301776552663266, "compression_ratio": 1.6555555555555554, "no_speech_prob": 0.06752432137727737}, {"id": 249, "seek": 112360, "start": 1147.9599999999998, "end": 1153.3999999999999, "text": " Much to our surprise, the plots suggest that tunable beams that achieve linear stiffness", "tokens": [51582, 12313, 281, 527, 6365, 11, 264, 28609, 3402, 300, 4267, 712, 31040, 300, 4584, 8213, 37759, 51854], "temperature": 0.0, "avg_logprob": -0.1301776552663266, "compression_ratio": 1.6555555555555554, "no_speech_prob": 0.06752432137727737}, {"id": 250, "seek": 115340, "start": 1153.4, "end": 1158.3600000000001, "text": " can learn behaviors with greater accuracy, i.e. lower mean squared error, than tunable", "tokens": [50364, 393, 1466, 15501, 365, 5044, 14170, 11, 741, 13, 68, 13, 3126, 914, 8889, 6713, 11, 813, 4267, 712, 50612], "temperature": 0.0, "avg_logprob": -0.0766264626739222, "compression_ratio": 1.7385159010600706, "no_speech_prob": 0.03159283846616745}, {"id": 251, "seek": 115340, "start": 1158.3600000000001, "end": 1161.3600000000001, "text": " beams that achieve non-linear stiffness.", "tokens": [50612, 31040, 300, 4584, 2107, 12, 28263, 37759, 13, 50762], "temperature": 0.0, "avg_logprob": -0.0766264626739222, "compression_ratio": 1.7385159010600706, "no_speech_prob": 0.03159283846616745}, {"id": 252, "seek": 115340, "start": 1161.3600000000001, "end": 1166.64, "text": " We then created a computational tool to simulate the behavior of our mechanical neural network", "tokens": [50762, 492, 550, 2942, 257, 28270, 2290, 281, 27817, 264, 5223, 295, 527, 12070, 18161, 3209, 51026], "temperature": 0.0, "avg_logprob": -0.0766264626739222, "compression_ratio": 1.7385159010600706, "no_speech_prob": 0.03159283846616745}, {"id": 253, "seek": 115340, "start": 1166.64, "end": 1172.2, "text": " design so that we could use the tool to predict how well larger versions of the same design", "tokens": [51026, 1715, 370, 300, 321, 727, 764, 264, 2290, 281, 6069, 577, 731, 4833, 9606, 295, 264, 912, 1715, 51304], "temperature": 0.0, "avg_logprob": -0.0766264626739222, "compression_ratio": 1.7385159010600706, "no_speech_prob": 0.03159283846616745}, {"id": 254, "seek": 115340, "start": 1172.2, "end": 1177.3200000000002, "text": " would learn if we had the time and resources to build and incorporate many more tunable", "tokens": [51304, 576, 1466, 498, 321, 632, 264, 565, 293, 3593, 281, 1322, 293, 16091, 867, 544, 4267, 712, 51560], "temperature": 0.0, "avg_logprob": -0.0766264626739222, "compression_ratio": 1.7385159010600706, "no_speech_prob": 0.03159283846616745}, {"id": 255, "seek": 115340, "start": 1177.3200000000002, "end": 1182.96, "text": " beams within its lattice as depicted by this photoshopped image of a much larger lattice.", "tokens": [51560, 31040, 1951, 1080, 34011, 382, 30207, 538, 341, 2409, 18000, 3452, 3256, 295, 257, 709, 4833, 34011, 13, 51842], "temperature": 0.0, "avg_logprob": -0.0766264626739222, "compression_ratio": 1.7385159010600706, "no_speech_prob": 0.03159283846616745}, {"id": 256, "seek": 118296, "start": 1182.96, "end": 1188.24, "text": " Our computational tool models the tunable beams as linear beams, which are depicted", "tokens": [50364, 2621, 28270, 2290, 5245, 264, 4267, 712, 31040, 382, 8213, 31040, 11, 597, 366, 30207, 50628], "temperature": 0.0, "avg_logprob": -0.10376026654484297, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.007576253730803728}, {"id": 257, "seek": 118296, "start": 1188.24, "end": 1193.16, "text": " as blue lines, and their lengths are set to be the length of the beams in our fabricated", "tokens": [50628, 382, 3344, 3876, 11, 293, 641, 26329, 366, 992, 281, 312, 264, 4641, 295, 264, 31040, 294, 527, 7253, 770, 50874], "temperature": 0.0, "avg_logprob": -0.10376026654484297, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.007576253730803728}, {"id": 258, "seek": 118296, "start": 1193.16, "end": 1197.3600000000001, "text": " mechanical neural network, i.e. 6 inches from node to node.", "tokens": [50874, 12070, 18161, 3209, 11, 741, 13, 68, 13, 1386, 8478, 490, 9984, 281, 9984, 13, 51084], "temperature": 0.0, "avg_logprob": -0.10376026654484297, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.007576253730803728}, {"id": 259, "seek": 118296, "start": 1197.3600000000001, "end": 1202.24, "text": " We restricted each beam in our simulation to only achieve axial stiffness values between", "tokens": [51084, 492, 20608, 1184, 14269, 294, 527, 16575, 281, 787, 4584, 46851, 37759, 4190, 1296, 51328], "temperature": 0.0, "avg_logprob": -0.10376026654484297, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.007576253730803728}, {"id": 260, "seek": 118296, "start": 1202.24, "end": 1207.92, "text": " the maximum and minimum stiffness values measured from our fabricated beam, i.e. 2.3 Newtons", "tokens": [51328, 264, 6674, 293, 7285, 37759, 4190, 12690, 490, 527, 7253, 770, 14269, 11, 741, 13, 68, 13, 568, 13, 18, 1873, 83, 892, 51612], "temperature": 0.0, "avg_logprob": -0.10376026654484297, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.007576253730803728}, {"id": 261, "seek": 120792, "start": 1207.92, "end": 1212.44, "text": " per millimeter and negative 2 Newtons per millimeter respectively, and we set their passive", "tokens": [50364, 680, 17942, 293, 3671, 568, 1873, 83, 892, 680, 17942, 25009, 11, 293, 321, 992, 641, 14975, 50590], "temperature": 0.0, "avg_logprob": -0.12040851185622725, "compression_ratio": 1.718978102189781, "no_speech_prob": 0.6071898937225342}, {"id": 262, "seek": 120792, "start": 1212.44, "end": 1218.28, "text": " non-axial stiffness values equal to the values calculated using finite element analysis as", "tokens": [50590, 2107, 12, 2797, 831, 37759, 4190, 2681, 281, 264, 4190, 15598, 1228, 19362, 4478, 5215, 382, 50882], "temperature": 0.0, "avg_logprob": -0.12040851185622725, "compression_ratio": 1.718978102189781, "no_speech_prob": 0.6071898937225342}, {"id": 263, "seek": 120792, "start": 1218.28, "end": 1219.28, "text": " shown here.", "tokens": [50882, 4898, 510, 13, 50932], "temperature": 0.0, "avg_logprob": -0.12040851185622725, "compression_ratio": 1.718978102189781, "no_speech_prob": 0.6071898937225342}, {"id": 264, "seek": 120792, "start": 1219.28, "end": 1224.4, "text": " We also restricted the simulated beams from extending or contracting more than plus and", "tokens": [50932, 492, 611, 20608, 264, 41713, 31040, 490, 24360, 420, 36095, 544, 813, 1804, 293, 51188], "temperature": 0.0, "avg_logprob": -0.12040851185622725, "compression_ratio": 1.718978102189781, "no_speech_prob": 0.6071898937225342}, {"id": 265, "seek": 120792, "start": 1224.4, "end": 1229.28, "text": " minus 2.5 millimeters, which is the limit of our fabricated beams as governed by their", "tokens": [51188, 3175, 568, 13, 20, 24388, 11, 597, 307, 264, 4948, 295, 527, 7253, 770, 31040, 382, 35529, 538, 641, 51432], "temperature": 0.0, "avg_logprob": -0.12040851185622725, "compression_ratio": 1.718978102189781, "no_speech_prob": 0.6071898937225342}, {"id": 266, "seek": 120792, "start": 1229.28, "end": 1230.64, "text": " hard stops.", "tokens": [51432, 1152, 10094, 13, 51500], "temperature": 0.0, "avg_logprob": -0.12040851185622725, "compression_ratio": 1.718978102189781, "no_speech_prob": 0.6071898937225342}, {"id": 267, "seek": 120792, "start": 1230.64, "end": 1235.76, "text": " Finite element analysis was used to validate the computational tool's accuracy by loading", "tokens": [51500, 3773, 642, 4478, 5215, 390, 1143, 281, 29562, 264, 28270, 2290, 311, 14170, 538, 15114, 51756], "temperature": 0.0, "avg_logprob": -0.12040851185622725, "compression_ratio": 1.718978102189781, "no_speech_prob": 0.6071898937225342}, {"id": 268, "seek": 123576, "start": 1235.76, "end": 1241.08, "text": " a 21-beam version of the design in its passive state, i.e. without any closed loop stiffness", "tokens": [50364, 257, 5080, 12, 650, 335, 3037, 295, 264, 1715, 294, 1080, 14975, 1785, 11, 741, 13, 68, 13, 1553, 604, 5395, 6367, 37759, 50630], "temperature": 0.0, "avg_logprob": -0.10464656714237097, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.017982767894864082}, {"id": 269, "seek": 123576, "start": 1241.08, "end": 1247.12, "text": " control activated, with 25 random force combinations imparted on its two input nodes.", "tokens": [50630, 1969, 18157, 11, 365, 3552, 4974, 3464, 21267, 32177, 292, 322, 1080, 732, 4846, 13891, 13, 50932], "temperature": 0.0, "avg_logprob": -0.10464656714237097, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.017982767894864082}, {"id": 270, "seek": 123576, "start": 1247.12, "end": 1252.56, "text": " The X and Y components of the lattice's resulting output node displacements, calculated using", "tokens": [50932, 440, 1783, 293, 398, 6677, 295, 264, 34011, 311, 16505, 5598, 9984, 14996, 41140, 11, 15598, 1228, 51204], "temperature": 0.0, "avg_logprob": -0.10464656714237097, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.017982767894864082}, {"id": 271, "seek": 123576, "start": 1252.56, "end": 1259.0, "text": " both finite element analysis and our computational tool, are plotted here showing good correspondence", "tokens": [51204, 1293, 19362, 4478, 5215, 293, 527, 28270, 2290, 11, 366, 43288, 510, 4099, 665, 38135, 51526], "temperature": 0.0, "avg_logprob": -0.10464656714237097, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.017982767894864082}, {"id": 272, "seek": 123576, "start": 1259.0, "end": 1265.24, "text": " between each of the 25 force combinations, once configured to mimic our fabricated mechanical", "tokens": [51526, 1296, 1184, 295, 264, 3552, 3464, 21267, 11, 1564, 30538, 281, 31075, 527, 7253, 770, 12070, 51838], "temperature": 0.0, "avg_logprob": -0.10464656714237097, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.017982767894864082}, {"id": 273, "seek": 126524, "start": 1265.24, "end": 1266.24, "text": " neural network.", "tokens": [50364, 18161, 3209, 13, 50414], "temperature": 0.0, "avg_logprob": -0.13859894252059482, "compression_ratio": 1.757462686567164, "no_speech_prob": 0.17309390008449554}, {"id": 274, "seek": 126524, "start": 1266.24, "end": 1271.26, "text": " The computational tool was then used to simulate the effect that the number of layers would", "tokens": [50414, 440, 28270, 2290, 390, 550, 1143, 281, 27817, 264, 1802, 300, 264, 1230, 295, 7914, 576, 50665], "temperature": 0.0, "avg_logprob": -0.13859894252059482, "compression_ratio": 1.757462686567164, "no_speech_prob": 0.17309390008449554}, {"id": 275, "seek": 126524, "start": 1271.26, "end": 1276.92, "text": " have on the ability for a triangularly configured mechanical neural network consisting of eight", "tokens": [50665, 362, 322, 264, 3485, 337, 257, 19335, 1040, 356, 30538, 12070, 18161, 3209, 33921, 295, 3180, 50948], "temperature": 0.0, "avg_logprob": -0.13859894252059482, "compression_ratio": 1.757462686567164, "no_speech_prob": 0.17309390008449554}, {"id": 276, "seek": 126524, "start": 1276.92, "end": 1282.44, "text": " input and output nodes to learn different numbers of random shape morphing behaviors.", "tokens": [50948, 4846, 293, 5598, 13891, 281, 1466, 819, 3547, 295, 4974, 3909, 1896, 79, 571, 15501, 13, 51224], "temperature": 0.0, "avg_logprob": -0.13859894252059482, "compression_ratio": 1.757462686567164, "no_speech_prob": 0.17309390008449554}, {"id": 277, "seek": 126524, "start": 1282.44, "end": 1287.36, "text": " The results of the study indicate, one, that mechanical learning improves with more layers,", "tokens": [51224, 440, 3542, 295, 264, 2979, 13330, 11, 472, 11, 300, 12070, 2539, 24771, 365, 544, 7914, 11, 51470], "temperature": 0.0, "avg_logprob": -0.13859894252059482, "compression_ratio": 1.757462686567164, "no_speech_prob": 0.17309390008449554}, {"id": 278, "seek": 126524, "start": 1287.36, "end": 1291.92, "text": " likely because there are more tunable beams with which to learn, and two, the more random", "tokens": [51470, 3700, 570, 456, 366, 544, 4267, 712, 31040, 365, 597, 281, 1466, 11, 293, 732, 11, 264, 544, 4974, 51698], "temperature": 0.0, "avg_logprob": -0.13859894252059482, "compression_ratio": 1.757462686567164, "no_speech_prob": 0.17309390008449554}, {"id": 279, "seek": 129192, "start": 1291.92, "end": 1296.42, "text": " behaviors that are required to be learned, the less accurately all the behaviors can", "tokens": [50364, 15501, 300, 366, 4739, 281, 312, 3264, 11, 264, 1570, 20095, 439, 264, 15501, 393, 50589], "temperature": 0.0, "avg_logprob": -0.12288481990496318, "compression_ratio": 1.876984126984127, "no_speech_prob": 0.1822650283575058}, {"id": 280, "seek": 129192, "start": 1296.42, "end": 1298.44, "text": " be learned simultaneously.", "tokens": [50589, 312, 3264, 16561, 13, 50690], "temperature": 0.0, "avg_logprob": -0.12288481990496318, "compression_ratio": 1.876984126984127, "no_speech_prob": 0.1822650283575058}, {"id": 281, "seek": 129192, "start": 1298.44, "end": 1303.28, "text": " This plot was similarly generated, but for only two, four, and eight layers, and for", "tokens": [50690, 639, 7542, 390, 14138, 10833, 11, 457, 337, 787, 732, 11, 1451, 11, 293, 3180, 7914, 11, 293, 337, 50932], "temperature": 0.0, "avg_logprob": -0.12288481990496318, "compression_ratio": 1.876984126984127, "no_speech_prob": 0.1822650283575058}, {"id": 282, "seek": 129192, "start": 1303.28, "end": 1308.3600000000001, "text": " both triangular and square lattice configurations, shown green and red respectively.", "tokens": [50932, 1293, 38190, 293, 3732, 34011, 31493, 11, 4898, 3092, 293, 2182, 25009, 13, 51186], "temperature": 0.0, "avg_logprob": -0.12288481990496318, "compression_ratio": 1.876984126984127, "no_speech_prob": 0.1822650283575058}, {"id": 283, "seek": 129192, "start": 1308.3600000000001, "end": 1313.68, "text": " It is clear from these results that triangular lattice configurations can, in general, learn", "tokens": [51186, 467, 307, 1850, 490, 613, 3542, 300, 38190, 34011, 31493, 393, 11, 294, 2674, 11, 1466, 51452], "temperature": 0.0, "avg_logprob": -0.12288481990496318, "compression_ratio": 1.876984126984127, "no_speech_prob": 0.1822650283575058}, {"id": 284, "seek": 129192, "start": 1313.68, "end": 1319.1200000000001, "text": " different numbers of shape morphing behaviors more effectively than square lattice configurations.", "tokens": [51452, 819, 3547, 295, 3909, 1896, 79, 571, 15501, 544, 8659, 813, 3732, 34011, 31493, 13, 51724], "temperature": 0.0, "avg_logprob": -0.12288481990496318, "compression_ratio": 1.876984126984127, "no_speech_prob": 0.1822650283575058}, {"id": 285, "seek": 131912, "start": 1319.12, "end": 1324.2399999999998, "text": " The reason is likely because triangular lattices have more beams for the same number of layers,", "tokens": [50364, 440, 1778, 307, 3700, 570, 38190, 29025, 1473, 362, 544, 31040, 337, 264, 912, 1230, 295, 7914, 11, 50620], "temperature": 0.0, "avg_logprob": -0.09899980545043946, "compression_ratio": 1.781954887218045, "no_speech_prob": 0.0033762245438992977}, {"id": 286, "seek": 131912, "start": 1324.2399999999998, "end": 1329.1999999999998, "text": " and they can propagate displacements in all directions, rather than just along orthogonal", "tokens": [50620, 293, 436, 393, 48256, 14996, 41140, 294, 439, 11095, 11, 2831, 813, 445, 2051, 41488, 50868], "temperature": 0.0, "avg_logprob": -0.09899980545043946, "compression_ratio": 1.781954887218045, "no_speech_prob": 0.0033762245438992977}, {"id": 287, "seek": 131912, "start": 1329.1999999999998, "end": 1332.2399999999998, "text": " directions, as is the case with square lattices.", "tokens": [50868, 11095, 11, 382, 307, 264, 1389, 365, 3732, 29025, 1473, 13, 51020], "temperature": 0.0, "avg_logprob": -0.09899980545043946, "compression_ratio": 1.781954887218045, "no_speech_prob": 0.0033762245438992977}, {"id": 288, "seek": 131912, "start": 1332.2399999999998, "end": 1337.1999999999998, "text": " To learn the effect that the number of layers and output nodes have on mechanical learning,", "tokens": [51020, 1407, 1466, 264, 1802, 300, 264, 1230, 295, 7914, 293, 5598, 13891, 362, 322, 12070, 2539, 11, 51268], "temperature": 0.0, "avg_logprob": -0.09899980545043946, "compression_ratio": 1.781954887218045, "no_speech_prob": 0.0033762245438992977}, {"id": 289, "seek": 131912, "start": 1337.1999999999998, "end": 1342.6799999999998, "text": " we used our computational tool to generate the following plot for triangular lattices", "tokens": [51268, 321, 1143, 527, 28270, 2290, 281, 8460, 264, 3480, 7542, 337, 38190, 29025, 1473, 51542], "temperature": 0.0, "avg_logprob": -0.09899980545043946, "compression_ratio": 1.781954887218045, "no_speech_prob": 0.0033762245438992977}, {"id": 290, "seek": 131912, "start": 1342.6799999999998, "end": 1346.28, "text": " that learn the two sinusoidal behaviors described previously.", "tokens": [51542, 300, 1466, 264, 732, 41503, 17079, 304, 15501, 7619, 8046, 13, 51722], "temperature": 0.0, "avg_logprob": -0.09899980545043946, "compression_ratio": 1.781954887218045, "no_speech_prob": 0.0033762245438992977}, {"id": 291, "seek": 134628, "start": 1346.28, "end": 1351.48, "text": " The plot indicates that once the lattice possesses two or more layers, the number of output nodes", "tokens": [50364, 440, 7542, 16203, 300, 1564, 264, 34011, 17490, 279, 732, 420, 544, 7914, 11, 264, 1230, 295, 5598, 13891, 50624], "temperature": 0.0, "avg_logprob": -0.10077113792544505, "compression_ratio": 2.0190114068441063, "no_speech_prob": 0.08751321583986282}, {"id": 292, "seek": 134628, "start": 1351.48, "end": 1353.12, "text": " does not seem to matter.", "tokens": [50624, 775, 406, 1643, 281, 1871, 13, 50706], "temperature": 0.0, "avg_logprob": -0.10077113792544505, "compression_ratio": 2.0190114068441063, "no_speech_prob": 0.08751321583986282}, {"id": 293, "seek": 134628, "start": 1353.12, "end": 1358.04, "text": " It's true that the more output nodes a lattice has, the more output node displacement requirements", "tokens": [50706, 467, 311, 2074, 300, 264, 544, 5598, 13891, 257, 34011, 575, 11, 264, 544, 5598, 9984, 21899, 7728, 50952], "temperature": 0.0, "avg_logprob": -0.10077113792544505, "compression_ratio": 2.0190114068441063, "no_speech_prob": 0.08751321583986282}, {"id": 294, "seek": 134628, "start": 1358.04, "end": 1362.8799999999999, "text": " the output nodes must satisfy, but it's also true that the more output nodes a lattice has,", "tokens": [50952, 264, 5598, 13891, 1633, 19319, 11, 457, 309, 311, 611, 2074, 300, 264, 544, 5598, 13891, 257, 34011, 575, 11, 51194], "temperature": 0.0, "avg_logprob": -0.10077113792544505, "compression_ratio": 2.0190114068441063, "no_speech_prob": 0.08751321583986282}, {"id": 295, "seek": 134628, "start": 1362.8799999999999, "end": 1367.76, "text": " the more beams the lattice can employ to satisfy those requirements during learning, so both", "tokens": [51194, 264, 544, 31040, 264, 34011, 393, 3188, 281, 19319, 729, 7728, 1830, 2539, 11, 370, 1293, 51438], "temperature": 0.0, "avg_logprob": -0.10077113792544505, "compression_ratio": 2.0190114068441063, "no_speech_prob": 0.08751321583986282}, {"id": 296, "seek": 134628, "start": 1367.76, "end": 1369.76, "text": " effects seem to negate each other.", "tokens": [51438, 5065, 1643, 281, 2485, 473, 1184, 661, 13, 51538], "temperature": 0.0, "avg_logprob": -0.10077113792544505, "compression_ratio": 2.0190114068441063, "no_speech_prob": 0.08751321583986282}, {"id": 297, "seek": 134628, "start": 1369.76, "end": 1374.04, "text": " If you'd like to learn more about the details presented in this video, I encourage you to", "tokens": [51538, 759, 291, 1116, 411, 281, 1466, 544, 466, 264, 4365, 8212, 294, 341, 960, 11, 286, 5373, 291, 281, 51752], "temperature": 0.0, "avg_logprob": -0.10077113792544505, "compression_ratio": 2.0190114068441063, "no_speech_prob": 0.08751321583986282}, {"id": 298, "seek": 137404, "start": 1374.04, "end": 1378.32, "text": " read our first published journal article on the topic of mechanical neural networks", "tokens": [50364, 1401, 527, 700, 6572, 6708, 7222, 322, 264, 4829, 295, 12070, 18161, 9590, 50578], "temperature": 0.0, "avg_logprob": -0.12356369904797486, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.7732093930244446}, {"id": 299, "seek": 137404, "start": 1378.32, "end": 1382.76, "text": " in Science Robotics, where our work was featured on the journal's front cover.", "tokens": [50578, 294, 8976, 29601, 1167, 11, 689, 527, 589, 390, 13822, 322, 264, 6708, 311, 1868, 2060, 13, 50800], "temperature": 0.0, "avg_logprob": -0.12356369904797486, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.7732093930244446}, {"id": 300, "seek": 137404, "start": 1382.76, "end": 1387.68, "text": " A link to the paper is provided in the description below, along with a link to my Thingiverse", "tokens": [50800, 316, 2113, 281, 264, 3035, 307, 5649, 294, 264, 3855, 2507, 11, 2051, 365, 257, 2113, 281, 452, 30902, 5376, 51046], "temperature": 0.0, "avg_logprob": -0.12356369904797486, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.7732093930244446}, {"id": 301, "seek": 137404, "start": 1387.68, "end": 1392.36, "text": " account where you can download the part files necessary to fabricate our mechanical neural", "tokens": [51046, 2696, 689, 291, 393, 5484, 264, 644, 7098, 4818, 281, 7253, 473, 527, 12070, 18161, 51280], "temperature": 0.0, "avg_logprob": -0.12356369904797486, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.7732093930244446}, {"id": 302, "seek": 137404, "start": 1392.36, "end": 1393.36, "text": " network.", "tokens": [51280, 3209, 13, 51330], "temperature": 0.0, "avg_logprob": -0.12356369904797486, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.7732093930244446}, {"id": 303, "seek": 137404, "start": 1393.36, "end": 1398.0, "text": " Finally, I want to thank my students Ryan Lee, who built and tested the mechanical neural", "tokens": [51330, 6288, 11, 286, 528, 281, 1309, 452, 1731, 9116, 6957, 11, 567, 3094, 293, 8246, 264, 12070, 18161, 51562], "temperature": 0.0, "avg_logprob": -0.12356369904797486, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.7732093930244446}, {"id": 304, "seek": 139800, "start": 1398.0, "end": 1404.16, "text": " network, Erwin Mulder, who developed our computational tool, P. H. R. Sainaghi, who helped perform", "tokens": [50364, 3209, 11, 3300, 9136, 376, 13432, 260, 11, 567, 4743, 527, 28270, 2290, 11, 430, 13, 389, 13, 497, 13, 318, 491, 559, 4954, 11, 567, 4254, 2042, 50672], "temperature": 0.0, "avg_logprob": -0.16812301504200902, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.8647056221961975}, {"id": 305, "seek": 139800, "start": 1404.16, "end": 1408.96, "text": " the optimization algorithm comparison study, and all the other students who contributed", "tokens": [50672, 264, 19618, 9284, 9660, 2979, 11, 293, 439, 264, 661, 1731, 567, 18434, 50912], "temperature": 0.0, "avg_logprob": -0.16812301504200902, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.8647056221961975}, {"id": 306, "seek": 139800, "start": 1408.96, "end": 1411.96, "text": " in smaller ways to the success of this project.", "tokens": [50912, 294, 4356, 2098, 281, 264, 2245, 295, 341, 1716, 13, 51062], "temperature": 0.0, "avg_logprob": -0.16812301504200902, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.8647056221961975}, {"id": 307, "seek": 139800, "start": 1411.96, "end": 1417.68, "text": " I am especially grateful to my AFOSR program manager, Les Lee, for making this research", "tokens": [51062, 286, 669, 2318, 7941, 281, 452, 20389, 4367, 49, 1461, 6598, 11, 6965, 6957, 11, 337, 1455, 341, 2132, 51348], "temperature": 0.0, "avg_logprob": -0.16812301504200902, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.8647056221961975}, {"id": 308, "seek": 139800, "start": 1417.68, "end": 1422.16, "text": " possible through his continued funding and generous support of my group.", "tokens": [51348, 1944, 807, 702, 7014, 6137, 293, 14537, 1406, 295, 452, 1594, 13, 51572], "temperature": 0.0, "avg_logprob": -0.16812301504200902, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.8647056221961975}, {"id": 309, "seek": 139800, "start": 1422.16, "end": 1426.24, "text": " If you'd like to support my channel, I've provided instructions in the description", "tokens": [51572, 759, 291, 1116, 411, 281, 1406, 452, 2269, 11, 286, 600, 5649, 9415, 294, 264, 3855, 51776], "temperature": 0.0, "avg_logprob": -0.16812301504200902, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.8647056221961975}, {"id": 310, "seek": 139800, "start": 1426.24, "end": 1427.24, "text": " below.", "tokens": [51776, 2507, 13, 51826], "temperature": 0.0, "avg_logprob": -0.16812301504200902, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.8647056221961975}, {"id": 311, "seek": 142724, "start": 1427.24, "end": 1430.0, "text": " Thanks for watching the Facts of Mechanical Design.", "tokens": [50366, 2561, 337, 1976, 264, 479, 15295, 295, 30175, 804, 12748, 13, 50502], "temperature": 0.0, "avg_logprob": -0.4423468453543527, "compression_ratio": 0.8793103448275862, "no_speech_prob": 0.8121625781059265}], "language": "en"}