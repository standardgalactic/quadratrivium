start	end	text
0	9560	Hello, everybody, and
9560	10800	welcome to another YouTube
10800	12840	video. In this video, I'm
12840	13560	going to be showing you
13560	14640	how to make a planet
14640	16120	simulation using
16120	17680	Python. Now, the goal of
17680	18400	this is going to be to
18400	19560	simulate the orbits of
19560	20280	different planets
20280	21560	around the sun. We're
21560	22440	going to use real
22440	23840	astronomical values. So
23840	24680	the real mass of the
24680	25680	sun, the real distance
25680	26760	from Earth to the sun,
27040	27920	all of that type of
27920	28880	stuff. And we're going
28880	29960	to apply the force of
29960	31200	gravity between all of
31200	32080	the different planets.
32120	32960	So we actually get an
33000	34200	accurate elliptical
34240	35800	orbit. Now here it does
35800	36880	look like the orbit is
36880	38400	circular. It is not. You
38400	39200	can see I'm actually
39200	40520	writing the distance of
40520	42320	the planet to the sun on
42320	43080	each planet. So it's
43080	43960	changing as we go
43960	45160	around the orbit. Well,
45160	46080	this is really cool.
46120	46960	We're kind of mixing a
46960	48040	bit of physics with
48080	49600	Python and looking at a
49600	51280	cool simulation. Now, I
51280	52080	will mention that this
52080	53400	tutorial is not designed
53400	54480	for complete beginners.
54640	55480	You should have some
55480	56560	knowledge of Python.
56720	57440	However, if you don't
57440	58000	know anything about
58000	59120	physics, don't worry.
59160	60000	I will teach you the
60000	60920	different physics we need
60920	62400	to know to actually, I
62400	63280	guess, perform this
63280	64560	simulation. It's not
64560	65640	very complicated. I
65640	66960	myself am not a physics
66960	68600	major or a physics guy.
68760	69560	And I was able to figure
69560	70400	it out pretty quickly.
70720	71600	Anyways, with that said,
71600	72360	let's go ahead and get
72360	73480	into the code after a
73480	74600	quick word from our
74600	75640	sponsor. Thanks to
75640	76920	Backtrace for sponsoring
76920	78480	this video. Backtrace
78480	79600	provides application
79600	80520	monitoring, as well as
80520	81760	error and crash reporting
81760	83320	for games. We've all
83320	84240	been there excited to
84240	85160	launch a brand new
85160	86360	video game just to be
86360	87640	tormented by crashes,
87760	89320	bugs and an overall bad
89320	91280	user experience. Backtrace
91280	92280	wants to help limit that
92280	93480	by providing a platform
93480	94600	that gives game developers
94600	96000	the best error and crash
96000	97240	reporting with the most
97240	98360	complete and helpful
98360	99920	information. Backtrace
99920	101160	works with any platform,
101200	102520	any engine and at any
102520	104320	scale and provides 24 seven
104320	105240	monitoring so you can
105240	106480	retain more players and
106480	107640	get better ratings.
108000	109120	Backtrace helps you fix
109120	110320	issues fast by providing
110320	111440	accurate call stacks,
111640	112800	regression detection,
112840	113960	querying and analytics
114120	114960	and integration with
114960	115920	Microsoft teams,
116040	117800	Discord, Slack and more.
118080	118920	You can get started with
118920	119960	Backtrace today and
119960	121520	manage up to 25,000
121520	122960	monthly errors with one
122960	124320	month retention and 10
124320	125400	gigabytes of storage
125400	127000	completely for free.
127320	128080	Check it out from the
128080	129120	link in the description
129240	130000	and thanks again to
130000	131400	Backtrace for sponsoring
131400	133000	this video. All right.
133000	133920	So let's go ahead and
133920	135240	get started. Now, I will
135240	136240	mention that right here,
136240	137440	I'm not simulating every
137440	138560	single planet. You can
138560	139400	easily adjust the
139400	140600	simulation to add as
140600	141520	many planets as you
141520	142320	would like. You can even
142320	143520	put something like stars
143520	144720	or satellites, whatever.
144720	145600	You can put any of that
145600	146720	here because of the
146720	147440	way we're going to set
147440	148800	this up. However, the
148800	149760	planets I'm simulating
149760	150600	right now are just the
150600	152160	four closest to the sun.
152320	153520	So we have Earth, Mars,
153600	155040	Venus and Mercury.
155320	156080	We're just doing that.
156080	157520	So we get a nice visual
157520	158120	and we can see
158120	159320	everything nice and large.
159440	160560	If you were to simulate
160560	161200	the planets that are
161200	162280	much further away from
162280	163120	the sun, then you're
163120	163960	going to see all of
163960	164680	these plants kind of
164680	165800	smushed really close to
165800	166840	the sun and then the
166840	168640	huge orbits around the
168640	169600	sun from the larger
169600	170440	planets, if that makes
170440	171240	sense. And the planets
171240	172040	that are much further
172040	172960	away. So this is just
172960	174160	a nice visualization.
174320	175240	Again, you can adjust
175280	176000	this however you like,
176000	176960	and I'll show you how to
176960	178160	do that. So with that
178160	179280	said, let's dive into
179280	179840	this. I'm going to
179840	180680	close this and just
180680	181960	open up a new window
181960	183240	here and we'll start
183240	184560	writing some code. Now,
184560	185240	the first thing we do
185240	185920	actually need to do is
185920	187200	install Pi game. So if
187200	188080	you don't already have
188320	189560	Pi game installed, then
189560	190400	just open up your
190400	191600	terminal or command
191600	192800	prompt, depending on
192800	193760	your operating system
194000	194880	and type in the
194880	196200	following command, PIP
196200	197840	install Pi game. That
197840	198480	doesn't work for you.
198480	199720	Try PIP three install
199720	200960	Pi game. If that
200960	201640	doesn't work for you,
201640	203880	try Python hyphen M and
203920	205440	then PIP install Pi game.
205640	206360	If that doesn't work,
206360	207920	try Python three hyphen M
207920	209040	PIP install Pi game.
209320	209920	And if none of those
209920	210680	commands work, I have
210680	211480	two videos that I'll
211480	212280	put on the screen that
212280	213360	show you how to fix
213360	214240	your PIP command.
214680	215280	Anyways, I'm going to
215280	215880	assume that you have
215880	216880	Pi game installed.
217080	217880	This is just a 2D
217880	218960	graphics library that
218960	219800	we're going to use for
219800	221000	the simulation. If you
221000	221840	don't know Pi game,
221880	222680	don't worry, we're going
222680	223600	to use very limited
223600	224600	features from it. And
224600	225560	I'll talk about how all
225560	226840	of them work. So the
226840	227320	first thing I'm going
227320	228680	to do here is just
228680	230040	import Pi game. And
230040	230600	then I'm going to say
230600	233120	Pi game dot a knit
233520	234520	just to initialize the
234520	235640	module. I'm also going
235640	236560	to import the math
236560	237240	module because we're
237240	237880	going to have to use
237880	238640	that in this code.
239360	240800	Okay. So continuing
240840	242040	since I'm using Pi game,
242040	242720	the first thing I want
242720	243480	to do is set up my
243480	244880	Pi game window. Now to
244880	245520	do this, we need to
245520	246720	pick a width and height
246760	248000	in pixels for our
248000	249080	window. So I'm going to
249080	250840	say the width comma the
250840	252160	height in all capitals
252160	252840	because this is a
252840	254320	constant is going to be
254360	256520	800 800 can make this
256520	257200	whatever width and
257200	257920	height you want, but I
257920	258840	recommend you make it
258840	260040	square. And then we're
260080	260600	going to set up a
260600	261960	window. So I'm going to
261960	263680	say when is equal to
263680	265400	Pi game dot display
265440	266560	dot set underscore
266560	267920	mode. Now this is just
267920	268680	going to take in the
268680	269440	coordinates for the
269440	271040	size of our window. So
271040	271920	we're going to pass as
271920	272880	a couple here, the
272880	273720	width and the height.
274320	274880	This is going to give
274880	275520	us what's known as a
275520	277040	Pi game surface. We're
277040	277640	going to call it the
277640	278480	window because it's the
278480	279320	main window that we're
279320	280560	going to draw onto. And
280560	281560	we need to have access
281560	282480	to this surface to be
282480	283200	able to put something
283200	283760	on the screen and
283760	284680	actually see something
284680	286080	moving around. Now what
286080	286680	I'm also going to do is
286680	287920	just set a caption for
287920	289080	this window. So Pi game
289080	290880	dot display dot set
290920	292400	underscore caption. Now
292400	293160	the caption is just
293160	293880	going to be kind of the
293880	295160	title of the window. I'll
295160	295880	show you what it looks
295880	297480	like in one second. And
297480	298320	for this, we'll just do
298320	301320	planet simulation. Okay,
301320	302800	perfect. So now that we
302800	303640	have this, what I want to
303640	304440	do is create something
304440	305560	known as the Pi game
305600	306760	event loop. Now this is
306760	307800	essentially an infinite
307800	308680	loop that's going to run
308680	309760	the entire time that
309760	311080	the simulation is going.
311280	312000	Whenever you're working
312000	312840	with some type of game,
312840	313800	you need some type of
313800	314960	loop that's constantly
314960	315920	running. They can keep
315920	316720	track of the different
316720	317800	events that are occurring.
318000	318920	In this case, the only
318920	319840	event is going to be
319840	320640	moving the different
320640	321760	planets, but we need to
321760	322720	have some type of loops
322720	323360	that the window doesn't
323360	324600	just open and instantly
324600	325400	close. We need something
325400	326320	keeping the program
326320	327440	running. So I'm going to
327440	328560	make a function here and
328560	329280	I'm going to call this
329280	330720	main and inside of here,
330720	331080	I'm going to make a
331080	332040	variable. I'm going to
332040	333120	say run is equal to
333120	334280	true. Then we're going
334280	335840	to say, well, run like
335840	337280	this and this loop will
337280	338400	run while this variable
338400	339920	run is true. Now inside
339920	341000	of here, I'm going to
341000	341760	get the different
341760	342840	events that are occurring
342840	343920	in Pi game. So I'm going
343920	345480	to say for event in Pi
345480	346720	game dot event dot get.
347000	347720	Now this is going to give
347720	348800	us a list of all of the
348800	349640	different events that
349640	351640	occur. So key presses,
351640	352480	mouse movements,
352480	353320	whatever. Now when you're
353320	354400	coding a more complex
354400	354880	game, you're going to
354880	355720	handle those different
355720	357040	events. However, the
357040	358240	only event that we want
358240	359400	to handle is when the
359400	360600	user presses the X
360600	361480	button to close the
361480	363040	window. Now that event
363040	364080	is the following. I'm
364080	365040	going to say if event
365040	367520	dot type is equal to
367520	368960	Pi game dot quit in
368960	370480	all capitals, then all
370480	371000	we're going to do is
371000	371960	say run is equal to
371960	373600	false. And then outside
373600	374320	of our wall loop, we're
374320	375480	going to say Pi game dot
375480	376880	quit. So this is
376880	377720	literally all we need
377720	378400	for the event loop,
378440	379440	at least for right now,
379720	380400	what's going to happen
380400	380800	is we're going to
380800	381840	continually run, we're
381840	382600	going to get all of the
382600	383960	events. If one of the
383960	384680	events that occurred
384680	385720	was we hit the X
385720	386880	button in the window,
387120	388040	then we are going to
388040	388880	close the window by
388880	389880	making run equal to
389880	391000	false. Since that's
391000	391800	going to exit our loop,
391800	392480	we're going to quit
392480	393360	Pi game and then we'll
393360	395080	be done. Perfect. So
395080	395880	all we need to do here
395880	397080	is just call this main
397080	398200	function. And now that
398200	399000	we do this, we should
399000	400000	see a Pi game window
400000	401040	pop up and then we can
401040	402400	close it and get out of
402400	404120	the program safely. So
404120	405520	let's try this. And
405520	406080	there we go. We get
406080	407120	planet simulation.
407120	408000	This is the caption I
408000	408600	was talking about. You
408600	409280	could see it kind of
409280	410160	right here beside the
410160	411160	little Pi game logo.
411520	412360	Then if I click the X
412360	413200	button, we're going to
413200	414120	close and we are all
414480	415200	okay. We have set up
415240	416840	our event loop. Nice.
417440	418240	So now that we have
418240	419040	done that, I just want
419040	419960	to show you how we can
419960	421040	draw something onto
421040	422240	the screen and kind of
422280	423720	update the screen. So
423720	425000	let's do that. So at
425000	426040	the top of this loop
426040	426760	here, I'm actually
426760	427200	going to set up
427200	427920	something called a
427920	429760	clock. Now a clock
429760	430640	is essentially going
430640	431360	to make it so that the
431360	432760	frame rate of our game
432760	434080	won't go past a certain
434080	435400	value. I'll talk about
435400	436600	why we need this, but
436600	437720	the idea here is that
437840	438920	if we don't implement
438920	440040	some type of clock, so
440040	441320	some way to synchronize
441320	442280	our game, essentially,
442640	443880	you're going to run
443880	445000	the simulation at the
445000	446160	speed of your computer.
446200	447160	Now, some people want
447160	447880	that to happen. They
447880	448720	want it to run super
448720	449360	fast. If you're on a
449360	450760	super fast computer and
450760	451600	then super slow, if
451600	452120	you're on a super
452120	453480	slow one, but ideally
453480	454600	for me, I don't care
454600	455240	about what type of
455240	456640	processor you have. I
456640	457400	just want you to run
457400	458160	the simulation at the
458160	459040	same speed. So it
459040	461040	looks normal. Hopefully
461040	461720	that makes a bit of
461720	462240	sense, but we can
462240	463120	kind of regulate the
463120	463960	frame rate and how
463960	465080	many times our game is
465080	466360	refreshing. So the way
466360	467280	we do that is we say
467320	468160	clock is equal to
468160	469160	pie game dot time
469160	470280	dot clock. And then
470280	471160	we go here and we say
471160	472720	clock dot tick. And
472720	473320	then we put in the
473320	474320	number of times that
474320	475520	we want this to update
475520	477000	per second. Now, this
477000	477600	does not mean you're
477600	478560	always going to update
478560	479840	at, in this case, 60
479840	480840	frames per second.
481120	482040	However, this is the
482040	483040	maximum that you will
483040	484360	be able to update at.
484360	485040	So we're saying clock
485040	486040	dot tick 60. That
486040	486520	means we're going to
486520	487560	update this loop or
487560	489120	run this loop a maximum
489120	490400	of 60 times per second
490560	491440	to ensure our games
491440	492320	not going too fast.
492640	493400	Okay. So now we have
493400	494600	our clock. And as I
494600	495240	was saying, we want to
495240	496280	draw something on the
496280	497720	screen. So to draw
497720	498560	something, I'm going to
498560	499760	use my window right
499760	500640	here. And I'm going to
500640	502960	say win dot fill. And
502960	503880	then I need to pass an
503880	505520	RGB color here that's
505520	506320	going to be the color
506320	507320	that I want to fill the
507320	508640	entire window with on
508640	509840	the screen. So I'm just
509840	510440	going to define a
510440	511240	color. Let's just go
511240	512760	with white for now. And
512760	513800	white will be equal to
513800	517080	255, 255, 255. Okay.
517080	518680	So that's our RGB value
518680	519920	for white. And then I'm
519920	520920	going to pass white
520920	522280	inside of here. And we
522280	523560	should see in a second
523560	524160	that we're going to get
524160	524920	the screen actually
524920	525760	updating. And now it's
525760	526440	going to have a white
526440	527480	background rather than a
527480	529120	black. However, I will
529120	530320	show you if I currently
530320	531640	run the code, we
531640	532680	actually don't get any
532680	534080	white on the screen. And
534080	534880	the reason we don't get
534880	535800	any white on the screen
535800	536440	is because we're not
536440	538040	updating the display. So
538040	538960	what I need to do is say
538960	540880	pie game dot display dot
541000	542640	update, not clear. And
542640	543480	what this does is
543480	544640	actually take all of the
544640	545640	drawing actions that
545640	546920	we've done since the
546920	548400	last update and then
548400	549320	kind of paste them and
549320	550200	draws them onto the
550200	551240	screen. So what I'm
551240	552600	doing is every loop, I'm
552600	553280	going to fill the
553280	554240	background with white
554320	554840	and then I'm going to
554840	556160	update the display. Okay.
556160	557280	So now if I run this,
557720	558480	you're going to see that
558480	559800	we get a white back. Now
559800	560680	we don't actually want
560680	561320	a white background. I
561320	562440	want a black one. So
562440	563080	I'm going to get rid of
563080	563800	this. I just wanted to
563800	564920	show you how we fill the
564920	565960	screen. Okay. So let's
565960	566680	comment these out for
566680	568520	right now. Perfect. So
568520	569320	now that we've done this,
569320	570600	let's start implementing
570600	571920	a plan because obviously
571920	572440	we want to put some
572440	573440	planets on the screen.
573680	574360	And to do this, I'm
574360	575200	going to make a class.
575960	577000	So I'm going to say class
577120	579360	planet. And inside of
579360	580040	here, I'm going to define
580040	581760	an initialization. I'm
581760	582760	going to say define a
582760	584440	knit. I'm going to say
584440	586200	self. We need an X and a
586200	587400	Y. Now the X and the Y
587400	588000	is going to be the
588000	588880	position that we want
588880	589840	this planet to be on
589840	591560	the screen. We also
591560	592360	are going to need a
592360	593640	radius. We're going to
593640	595440	need a color. And then
595440	596200	let me just check if we
596200	596960	want to take anything
596960	597560	else. We're also going
597560	598760	to need a mass for the
598760	600520	planet. Okay. So these
600520	600920	are kind of the
600920	602000	initialization values
602000	603520	that we have. So I'm
603520	604240	going to say self dot
604240	606480	X is equal to X self
606480	607960	dot Y is equal to Y
608640	609840	self dot radius is
609840	610600	equal to radius.
610600	611200	Obviously we're going
611200	611760	to have circular
611800	613200	planets, self dot
613200	614000	color is equal to
614000	615480	color. We might want to
615480	616400	make our planets more
616400	617120	detailed and have
617120	618040	multiple colors, but
618040	618640	for now we're just
618640	619040	going to go with a
619040	620440	single color. And then
620440	621400	the mass is going to
621400	622360	be the mass in
622360	623480	kilograms of this
623480	624360	planet. We're going to
624360	625320	have to use that mass
625320	626080	to calculate the
626080	627160	attraction between the
627160	627920	different planets and
627920	628640	then generate the
628640	630000	actual circular orbit,
630360	631120	which we'll get to when
631120	631960	we start talking about
631960	633200	the physics. Now there's
633200	633920	a few other things that
633920	634920	we want our planets to
634920	635800	have. They're going to
635800	636880	have to have an X
636880	638080	velocity as well as a
638080	639440	Y velocity. So I'm
639440	640280	going to say self dot
640280	641360	underscore X, well, is
641360	642880	equal to zero and
642880	644480	self dot Y, well, is
644480	645800	equal to zero. Now
645800	646520	I'll explain how all
646520	647400	of these concepts work
647400	648400	in a second, but the
648400	649120	idea is we're going to
649120	650000	be moving our planet
650000	651080	in a circle. And in
651080	651720	order to move in a
651720	652960	circle, we have a
652960	654320	velocity in multiple
654320	655360	directions. So we're
655360	656480	going to have it in the
656480	657440	X direction, which is
657440	658160	the horizontal
658160	659240	direction and then in
659240	660680	the Y direction. And by
660680	661520	moving in two
661520	662520	directions at the same
662520	663280	time, we're able to
663280	665120	generate a circle and
665120	666480	have kind of, I don't
666480	667320	want to call it
667920	669000	centripetal force or
669000	669960	some, some tripetal
669960	670760	motion, but something
670800	671640	along those lines, right?
671640	672120	Well, we're actually
672120	673440	moving in a circle
673440	675200	around an object at a
675200	677000	constant speed. Okay.
677720	678280	Hopefully this is
678280	679400	making sense so far.
679440	680400	Another thing that I
680400	681800	want to do here is I
681800	682800	want to have something
682800	683600	that says self that
683600	685280	sun is equal to false.
685480	685960	Now this is going to
685960	687000	tell us if the planet
687000	688640	is the sun. The reason
688640	689680	we want that is because
689680	690640	we're going to draw the
690680	691840	orbit of the planet
691840	693080	moving around. And I
693080	693920	don't want to draw the
693920	695880	orbit for the sun. So I
695880	696560	need to know if it's a
696560	697680	sun to either draw it
697680	699120	or to not draw it. And
699120	699840	then I'm going to have
699880	701680	the self.distance to
701680	702840	the sun. I'm just going
702840	703600	to make this equal to
703600	704800	zero right now. And
704800	705560	we're going to update
705560	707160	this value for every
707160	708000	single planet that we
708000	709480	have so that we know
709480	710360	what its distances and
710360	711200	we can then draw that
711200	712400	on the screen. And then
712400	713200	the last thing that I
713200	715960	want is self.orbit is
715960	717160	equal to an empty list.
717520	718320	We're going to use this
718320	719440	to keep track of all of
719440	720680	the points that this
720680	721800	planet has traveled
721800	723200	along so we can draw a
723200	724200	circular orbit
724200	725280	representing well, the
725280	726200	orbit of the planet.
726920	728360	Okay. Again, all this
728360	729080	will start to make sense
729160	729960	as we get into more of
729960	730800	these concepts. I'm just
730800	731680	kind of setting up all
731680	732640	of the initialization
732640	734320	values. Now, a few
734320	734840	other things that I
734840	736240	want to do here is
736240	737240	just write out a few
737240	738160	constants that we're
738160	739640	going to use for our
739640	741080	simulation. Now, the
741080	742040	first constant we're
742040	743000	going to do as a class
743000	744160	variable in the planet
744160	744880	class. And this is
744880	746280	going to be a you. Now,
746280	747680	a you is astronomical
747680	748640	units. And this is
748640	749960	approximately equal to
749960	750800	the distance of the
750800	752280	earth to the sun. Now,
752280	753360	I want to use a you
753360	753960	because it's going to
753960	755280	simplify the math that
755280	756440	we need to do to
756440	757480	calculate the distance
757480	758240	between the current
758240	760080	planet and the sun and
760120	761280	allow us to initialize
761280	762200	our planets at the
762200	763800	correct a you from the
763800	764600	sun. So they're kind of
764600	765560	the correct distance
765560	766720	away. Hopefully that
766720	767440	makes a bit of sense,
767440	769320	but one a you is equal
769320	770000	to. And I just have to
770000	770920	copy this from my other
770920	772440	screen. One point four
772440	774520	nine dot six to the
774520	775600	exponent six, which is
775600	776840	what this E six stands
776840	777800	for, and then
777800	778840	multiplied by a
778840	779840	thousand. And I don't
779880	780560	actually need these
780560	781280	in parentheses. So I
781280	782040	don't know why I had it
782040	783920	there. Okay. So what
783920	784960	this is saying is we
784960	786080	are one hundred and
786080	787920	forty nine thousand. I
787920	788840	guess this is sorry,
788840	789720	one hundred forty nine
789720	790920	million and then six
790920	791920	hundred thousand
791920	793320	kilometers. That's what
793320	794200	this stands for right
794200	795400	here, but we want this
795400	796600	to be in meters. So I'm
796600	797520	going to multiply it by
797520	798480	a thousand to get the
798480	799840	distance from the sun
800240	802320	in meters. One a you
802400	803160	that that's what this
803160	803840	is. Hopefully that makes
803840	804520	sense. Again, want to
804520	805440	use the distance from
805440	806320	the earth to the sun
806640	808400	approximately. And here
808400	809240	we're converting this
809360	810320	from kilometers to
810320	811400	meters by multiplying
811400	813280	it by a thousand. Okay.
813640	814440	Now, we also want the
814440	815800	gravitational constant
815960	816920	now. This is not
816920	818080	negative nine point eight.
818080	819640	That's the acceleration
819640	821560	of gravity. I actually
821560	822240	yeah, I think it's
822240	822960	the acceleration of
822960	824040	gravity. I might be
824040	824720	messing that up, but
824720	825160	it's something to do
825160	825800	with gravity, but the
825800	827120	gravitational constant
827120	828640	is used in finding the
828640	829600	force of attraction
829600	830640	between objects, which
830640	831520	is what we want to do.
831840	833280	And G is different than
833280	834400	the regular gravity one.
834400	836480	It is six point six seven
836720	837720	and actually is four
837720	838760	point two eight either
838760	839520	the negative eleven.
839520	840400	Okay. That's great. My
840400	841440	autocomplete is working
841440	843000	very well there. Nice.
843440	844240	Now, the last two
844240	845160	things we want here is
845200	846800	a scale. Since we're
846800	847320	actually going to be
847320	848400	simulating the real
848400	849960	values here for the
849960	852320	orbits, we can't draw
852320	853320	them at the position
853320	854200	that we have them at.
854520	855200	I know that's probably
855200	856280	a confusing line, but
856280	857720	the idea is if our
857720	858840	planet is moving at,
858840	860040	you know, something
860040	861080	kilometers per second,
861080	862000	seven kilometers per
862000	863280	second, 29 kilometers
863280	864400	per second, I can't
864400	865760	draw my planet at a
865760	867120	million kilometers in
867120	868160	my pie game window.
868360	869520	I need to draw it in
869640	871080	a kind of appropriate
871080	872560	scale, right? So I'm
872560	873360	going to have to figure
873360	874560	out what one meter
874600	875720	represents in terms of
875720	877200	pixels in my pie game
877200	878400	scale here, because I'm
878400	879680	only working with 800
879680	880800	pixels high and 800
880800	882680	pixels wide. Hopefully
882680	883520	this is making a little
883520	884520	bit of sense. What I'm
884520	885280	going to do here is say
885280	887480	250 divided by A.U. is
887480	888680	the scale. Now, this
888680	890160	scale essentially says
890280	891840	that one astronomical
891840	892680	unit is going to be
892680	894120	about 100 pixels in my
894120	895600	pie game program. You
895600	896400	can look at the math to
896400	897040	figure out how that
897040	898120	works. But for now, I'll
898120	898920	leave a comment. We're
898920	900640	going to say one A.U. is
900640	901640	equal to 100 pixels.
902280	903000	OK, that's kind of the
903000	903840	scale that we're going
903880	905200	with here. So we can
905200	906760	draw things to scale in
906760	908200	the window. And then the
908200	909840	last thing I want is the
909840	911520	time step. And this is
911520	913120	going to represent how
913120	915720	much of time I want to
915720	916480	represent in my
916480	917760	simulation or that I
917760	919360	want to simulate is
919360	921040	being a lapse. So the
921040	922080	idea here is every time
922080	923720	I update the frame, I'm
923720	925320	going to pass a certain
925320	926960	time step and say, OK, I
926960	928480	want to look at one hour
928480	929520	of this planet's movement
929520	931040	at a time or one day of
931040	931920	this planet's movement at
931920	932520	a time, because I don't
932520	933120	want to look at one
933120	933720	second. It's going to
933720	934520	take a really, really
934520	935680	long time to simulate.
935880	936560	Instead, I want to look
936560	937800	at a larger time step.
938120	938800	So what I'm going to do
938800	940440	is say 3600, which is
940440	941920	the number of seconds in
941960	944160	a what is this in an
944160	945080	hour? Yeah, I think
945080	945960	this number of seconds
945960	947280	in an hour. And then I'm
947280	948240	going to multiply this
948240	949840	by 24. And that's going
949840	951280	to give me one day. OK,
951280	952360	so this is representing
952800	955800	one day. I think that's
955800	956680	correct. Yeah, OK, I'm
956680	957920	pretty certain that is
957920	958600	correct. This would be
958600	959480	the number of seconds in
959480	960280	an hour, right? If you
960280	961600	go 60 times 60, I think
961600	962800	that gives you 3600.
963040	964080	And then multiply that by
964080	965240	24. And that is the
965240	966240	time step that we're
966240	967240	going to be doing the
967240	968400	simulation on. So kind
968400	969320	of one day at a time
969320	970080	will be updating the
970080	971640	planet. All right.
971640	972560	Hopefully I'm not
972560	973360	confusing you guys too
973360	974200	much. I do understand
974200	974800	this is a lot. We've
974800	975280	got to go through a
975280	976080	bunch of physics and
976080	976920	stuff here to make this
976920	978160	work. But there you go.
978200	980160	That is a planet. Now,
980160	980960	the next thing I want to
980960	982120	do is implement a draw
982120	983240	method. Now, this draw
983240	983880	method just going to
983880	984960	draw the planet on the
984960	986000	screen. So what I'm
986000	986640	going to do is say
986640	987880	self and I'm going to
987880	988880	take a window that I
988880	989640	need to draw this
989640	991560	planet on. So the X and Y
991600	992720	for my planet, as well
992720	993840	as the X velocity and
993840	994920	the Y velocity for my
994920	996040	planet is going to be
996040	997040	in meters. So the
997040	998120	number of meters that
998120	999520	I am away from the sun,
999560	1000640	that's what X and Y is
1000640	1001880	going to represent. So
1001880	1002760	I need to take those
1002760	1004280	values and then draw
1004280	1005600	them to scale, right?
1005600	1006320	Because I again, I
1006320	1007440	can't draw like
1007480	1008480	something million
1008480	1009560	kilometers or million
1009560	1010640	meters away. I need to
1010640	1011520	draw it in accurate
1011520	1012920	scale in pie game. So
1012920	1013480	this is where the
1013480	1014360	scale is going to come
1014360	1015320	in. I'm going to say
1015320	1017160	that my X is equal to
1017200	1017960	and then this is
1017960	1018880	going to be the self
1018880	1021080	dot X multiplied by
1021120	1022200	my scale. OK, so it's
1022200	1022800	going to be self
1022800	1024160	dot scale and self
1024160	1024720	that scale is going to
1024720	1025440	be a really, really
1025440	1026400	tiny number that will
1026400	1027360	now take this number
1027360	1028200	and bring it to scale.
1028720	1029360	And I'm going to say
1029360	1030440	Y is equal to self
1030440	1031720	dot Y and I'm going to
1031720	1033280	multiply that by self
1033280	1035520	dot scale. OK, nice.
1035840	1036960	Now, one other thing
1036960	1037960	I need to do is make
1037960	1038760	sure that I'm drawing
1038760	1039480	all of this in the
1039480	1041040	center of my screen
1041280	1041920	because I haven't
1041920	1042760	mentioned yet when
1042760	1043520	we're talking about
1043520	1045200	pie game, zero, zero
1045200	1046080	is actually the top
1046080	1046920	left hand corner.
1046920	1047320	So let me just
1047320	1047920	quickly open the
1047920	1049280	window here, right
1049280	1050280	here where my mouse is.
1050320	1051360	So top left hand corner.
1051360	1052400	This is zero, zero.
1052680	1053720	If I go all the way
1053720	1054840	to the right, this would
1054840	1056280	be eight hundred zero.
1056440	1057160	If I go all the way
1057160	1057800	to the bottom right
1057800	1058480	hand corner, this would
1058480	1059480	be eight hundred, eight
1059480	1060600	hundred. So rather than
1060600	1061640	having zero zero in the
1061640	1062320	middle, which you might
1062320	1062960	be used to, it's the
1062960	1064280	top left. So I don't
1064280	1065080	want to draw my stuff
1065080	1065800	in the top left.
1065800	1066720	I want to draw it in
1066720	1067800	the center. So that
1067800	1068720	means I need to take
1068720	1069920	every single value I
1069920	1071560	have. I need to offset
1071560	1072400	it by the center of
1072400	1073680	the screen so that we
1073680	1074760	draw stuff in the
1074760	1075920	middle. Hopefully that
1075920	1076880	makes a tiny bit of
1076880	1078280	sense. But the way we
1078280	1079920	do this is we say plus
1080400	1081080	and then this is going
1081080	1082240	to be width over two,
1082920	1083600	and then this is going
1083600	1084640	to be plus. And then
1084640	1085200	this is going to be
1085200	1086480	height over two. And
1086480	1087200	those values are
1087200	1087960	right here. OK, so the
1087960	1088600	width and the height.
1088720	1089480	We could just write
1089480	1090480	four hundred, but I'm
1090480	1091560	going to do width and
1091560	1092240	height. So that if we
1092240	1092960	change the width and
1092960	1093520	the height, this is
1093520	1094240	going to update
1094280	1095920	automatically. OK, so
1095920	1097080	now we have our X and Y
1097360	1098120	and now I can actually
1098120	1098920	draw this onto the
1098920	1100440	screen. So I'm going to
1100440	1103800	say pie game dot draw
1104480	1106040	dot circle. And I'm
1106040	1106680	going to pass the
1106680	1107760	window, which is where
1107760	1108520	we want to draw this
1108520	1109480	circle. I'm going to
1109520	1110680	pass the color that I
1110680	1111680	want to draw the
1111680	1112480	circle in. So this is
1112480	1113080	going to be self
1113080	1114520	color. I'm going to
1114520	1115600	pass the position that
1115600	1116280	I want to draw it in,
1116280	1116920	which is going to be
1116960	1117880	X, Y. That's the
1117880	1119040	center of the circle.
1119360	1120160	And then lastly, I'm
1120160	1120720	going to pass the
1120720	1122160	radius. So self dot
1122160	1124120	radius. OK, so now
1124120	1124560	we're actually going
1124560	1125560	to draw the circle on
1125560	1126480	the screen when we
1126480	1127600	call this draw method.
1128200	1129640	OK, hopefully this is
1129640	1130320	all making a bit of
1130320	1131400	sense. And let's now
1131400	1132440	go and actually draw a
1132440	1133840	few planets and
1133840	1134640	initialize some of
1134640	1136000	their constants. So the
1136000	1136800	first planet we probably
1136800	1137400	want to draw is the
1137400	1139040	sun. Can you call the
1139080	1139960	sun a planet? I guess
1139960	1141520	it's a star. Again, not
1141520	1142480	a big physics guy, but
1142480	1143320	the first thing we
1143320	1144160	want to draw is the
1144160	1145000	sun. OK, so I'm going
1145000	1146120	to say sun is equal to
1146120	1147560	planet. And we're
1147560	1149160	going to pass zero, zero
1149160	1150440	for its X, Y. OK, so
1150440	1151360	zero, zero right here
1151960	1152960	for the radius of the
1152960	1153880	sun. We can kind of
1153880	1155040	pick whatever value we
1155040	1156160	want here. We're just
1156160	1156720	going to be kind of
1156720	1157560	randomly picking the
1157560	1158920	radius is based on
1158920	1160040	the relative mass of
1160040	1161160	the planets. So we
1161160	1162000	want the sun to be the
1162000	1162760	biggest. And what I
1162760	1163480	have in my other
1163480	1164920	program here is 30 for
1164920	1165680	the radius. So we'll go
1165680	1166920	with that. And for the
1166920	1167840	color, I want this to
1167840	1168960	be yellow. So just
1169000	1169800	make this a bit easier
1169800	1170920	to read. I'm going to
1170920	1172160	define yellow up here
1172400	1173800	and yellow. Actually,
1173800	1174600	how do you even make
1174600	1175640	yellow? Let's look at
1175640	1176520	this. Yellow is going
1176520	1179520	to be 255, 255 and
1179520	1180800	zero. OK, so that's
1180800	1181880	the RGB value for
1181880	1182960	yellow. Obviously,
1182960	1183560	that's the color we
1183560	1184760	want the sun. So let's
1184760	1186440	now put the color as
1186440	1187440	yellow. And then the
1187440	1188200	last thing we need to
1188200	1189960	pass is the mass and
1189960	1190760	the mass. I need to
1190760	1191680	look at my cheat sheet
1191680	1192160	here because,
1192160	1192920	unfortunately, I don't
1192920	1193920	have this memorized
1194800	1195880	is going to be the
1195880	1197520	following. Let me
1197520	1200560	paste this in 1.9 8 8 9
1200560	1202040	2 times 10 to the
1202040	1203440	exponent 30. And in
1203440	1204160	case you're wondering
1204160	1205560	this is in kilograms.
1206160	1206640	Again, we're going to
1206640	1207920	use the accurate masses
1208160	1209360	on astronomical units
1209360	1210160	and stuff for all of
1210160	1211400	these planets. OK, so
1211400	1213240	that is the sun. And
1213240	1214080	for the sun, we're just
1214080	1214960	going to say sun dot
1214960	1216760	sun is equal to true.
1217200	1217920	Because remember, we
1217920	1218840	have this property
1218840	1220280	here that says sun. And
1220280	1220720	we're going to make
1220720	1221560	this true so that we
1221560	1222920	don't draw the distance
1222920	1224040	to the sun from the
1224040	1224840	sun and we don't draw
1224840	1225680	the orbit for the sun,
1225680	1226240	which we don't need.
1227000	1228120	OK, so now that we
1228120	1228840	have this, let's just
1228840	1229600	see if we can draw this
1229600	1231040	on the screen. So
1231040	1234080	let's go. Planets is
1234080	1234880	equal to and let's
1234880	1235680	make a list of all of
1235680	1236320	the planets, because
1236320	1236760	we're going to add a
1236760	1238000	few more. And then
1238000	1239040	inside of our loop
1239040	1239960	here, we're going to
1239960	1242480	say for planet in
1242480	1243560	planets. And we're
1243560	1244320	going to say planet
1244720	1246280	dot draw. And we're
1246280	1246800	going to pass the
1246800	1247520	window that we want to
1247520	1248680	draw it on, which is
1248680	1250160	win in all capitals.
1250280	1251880	OK. Nice. And we
1251880	1252520	also need to make sure
1252520	1253160	that we're updating
1253160	1253960	this place. So let's
1253960	1255680	steal this here. And
1255720	1257360	let's put it down
1257360	1258400	there. OK. Nice. So
1258400	1259120	we're saying for planet
1259120	1260200	and planet plan to draw
1260480	1261280	by game display
1261280	1262640	dot update. Let's see
1262640	1263800	if this works. Fingers
1263800	1264600	crossed. Let's run the
1264600	1266760	code. OK. There we go.
1266760	1267600	We get a sun in the
1267600	1268400	middle of the screen.
1268480	1269360	Very nice. That is
1269360	1270520	exactly what we want.
1271360	1272200	All right. Now, the
1272200	1272920	next thing we want to
1272920	1273800	do is draw a few more
1273800	1275080	plans, right? So let's
1275080	1276360	create earth, mercury,
1276360	1277600	all of those. OK. So
1277600	1278000	we're going to start
1278000	1278720	with earth. I'm going
1278720	1279640	to say earth is equal
1279640	1281320	to planet. Now, the
1281320	1282040	earth is actually
1282040	1283040	going to be negative
1283040	1285080	one multiplied by
1285440	1286760	planet with an all
1286760	1289360	capital dot a U. This
1289360	1289840	is going to be the
1289840	1291080	distance from the sun.
1291080	1291560	So we're going to put
1291560	1292480	that as the X
1292480	1293920	coordinate. And for the
1293920	1294640	Y coordinate, we're
1294640	1295200	just going to make it
1295200	1296160	zero for right now.
1296760	1297840	The color of the earth
1297840	1298800	is going to be blue.
1298960	1300240	We'll write that RGB
1300440	1301360	variable in a second.
1301800	1302760	And then the mass of
1302760	1304560	the earth. Actually,
1304560	1305120	sorry, we need the
1305120	1307000	radius as well. Let's
1307000	1307760	put the radius first.
1307760	1308400	What was the radius
1308400	1309920	of the earth? I had
1309920	1310800	60 in here as the
1310800	1312800	radius. And then the
1312800	1314280	mass of the earth is
1314960	1316840	this number. Let me
1316840	1319600	copy it in 5.9742
1320160	1321040	times 10 to the
1321040	1322680	exponent 24. OK. That's
1322680	1323360	a mass of the earth.
1324080	1324840	Now, I will actually
1324840	1325560	mention here before I
1325560	1326600	continue that there
1326600	1327840	isn't a great article.
1327840	1328680	I'm going to open it up
1328680	1329840	so I can show it to you
1329840	1331520	guys. Let me get it on
1331520	1332600	my Google Chrome here
1333160	1333800	that I'm actually
1333800	1334960	inspired by making
1334960	1336040	this program that has
1336040	1337000	all of these values
1337000	1338080	already. So this is
1338080	1338840	the article. Leave it
1338840	1339920	in the description, but
1339920	1340480	it essentially
1340480	1341320	implements the same
1341320	1341920	thing we're going to
1341960	1343120	implement here in
1343120	1343920	turtle. Now, I didn't
1343920	1344800	want to do it in turtle
1344800	1345560	because pie game is a
1345560	1346280	lot better and it's a
1346280	1347760	lot faster. But if you
1347760	1348640	look here, all the
1348640	1349560	values that I'm using
1349560	1350200	are just coming from
1350200	1350960	here. Right. So like
1351000	1352840	the earth mass, the
1352840	1354000	earth distance, negative
1354000	1355400	one times a you, the
1355400	1356600	sun mass, just wanted
1356600	1357400	to give credit to this
1357400	1358320	article. I'll leave it
1358320	1359000	in the description.
1359800	1360560	Anyways, enough of that.
1361120	1362600	We have the distance to
1362600	1363520	the sun, which is this.
1363680	1365640	We have zero, 16 blue.
1365680	1367680	This is the mass. And I
1367680	1368760	think that's all we need
1368760	1369880	for the earth right now.
1370480	1371520	Let's now put earth
1371560	1372640	inside of here and see
1372640	1373880	if when we draw it, we
1373880	1375160	get it in an accurate
1375160	1376680	position. OK, so let's
1376680	1378920	run this. And we get
1378920	1379800	blue is not fine. OK, I
1379800	1380400	forgot to do that.
1380400	1381240	Let's define the color
1381240	1382960	blue. Blue is going to
1382960	1384600	be equal to. And then I
1384600	1385400	want kind of a nice
1385400	1387120	light blue. So I just
1387200	1387840	picked one of these
1387840	1388560	before. It's going to be
1388560	1391880	100 149 237. This is
1391880	1393040	the RGB value for kind
1393040	1394400	of a lighter blue. If
1394400	1395160	you just wanted to be
1395160	1396080	regular blue, then you
1396080	1397360	could go zero, zero,
1397360	1398800	and then 255. And I
1398800	1399720	give you a nice dark
1399720	1402080	blue. OK, so let's run
1402080	1403600	this now and see if
1403600	1404560	this works. And there
1404560	1406000	we go. We get the the
1406000	1407120	earth, which is, you
1407120	1408560	know, one way from the
1408560	1410480	sun. Hopefully that
1410480	1411240	makes sense. But this
1411240	1411880	is how the scales
1411880	1413200	working. We put it at
1413200	1414240	negative one, which
1414240	1414800	means we're going to
1414800	1415760	the left. If we put at
1415920	1417280	one, we would have gone
1417280	1418280	to the right. Doesn't
1418280	1419000	really matter where we
1419000	1420760	started. And there we
1420760	1423160	go. OK, so now we have
1423160	1424640	the earth, the next
1424640	1425480	planet that I want to
1425480	1426720	do. Let's look here is
1426720	1428080	going to be Mars. So
1428080	1429600	let's say Mars is equal
1429640	1431520	to a planet. Now, the
1431520	1433880	distance for Mars is
1433880	1435280	going to be this. Let
1435280	1436120	me just copy it in.
1437000	1437840	It's going to be negative
1437840	1438960	one point five to four
1438960	1441400	times planet.au. Again,
1441400	1441960	we're going to put its
1441960	1443080	Y coordinate at zero.
1443560	1444880	The radius of Mars,
1444960	1446160	it's much smaller than
1446160	1446680	Earth. We're going to
1446680	1448760	go with 12. It's going
1448760	1449640	to be red, which I'll
1449640	1451120	define in a second. And
1451120	1452280	then the mass of Mars
1452280	1453040	is a little bit less
1453040	1454960	than Earth as well. So
1454960	1455800	that's going to be six
1455800	1456880	point three nine times
1456880	1457920	10 to the exponent
1457920	1459400	twenty three. Now, for
1459400	1460680	red, we need to define
1460680	1461840	this. Now, again, I
1461840	1462720	want to kind of a nice
1462720	1463640	looking red. So I
1463640	1465440	picked a custom RGB
1465440	1466760	value here, and this
1466760	1467640	value is going to be
1467640	1469920	one eighty eight thirty
1469920	1473080	nine and fifty. OK. And
1473080	1474080	now we have Mars. So
1474080	1474800	now that we have Mars,
1474800	1475600	we're going to put Mars
1475600	1477360	inside of here, and we
1477360	1478400	should now draw Mars
1478400	1479040	at the appropriate
1479040	1480000	scale. So let's look
1480000	1481560	at this and we see the
1481560	1482800	Mars over here. So
1482800	1483560	notice that Mars is
1483560	1484320	kind of right by the
1484320	1485760	border. I'm fine with
1485760	1486560	that. But if you wanted
1486560	1487400	to move everything in
1487440	1488600	closer, then what you
1488600	1490960	would do is reduce
1490960	1492000	this number right here.
1492040	1492800	So rather than doing
1492800	1493760	250, you would do
1493760	1495360	something like 200. And
1495360	1496280	you're going to notice
1496440	1497120	this is going to move
1497120	1497800	us in a little bit
1497800	1498720	closer. So that's kind
1498720	1499400	of how you can mess
1499400	1500640	with things. Just make
1500640	1501240	the number here
1501240	1502400	smaller. If you want
1502400	1502960	everything to get
1502960	1504840	closer to the sun. OK,
1504840	1505800	so we'll go to 50
1505800	1507520	AU for now. All right.
1507520	1508400	So now we have Mars.
1508400	1509480	Let's do our other
1509480	1510800	planets. So the other
1510800	1512200	planets we have is
1512200	1513360	Mercury. This is going
1513360	1514960	to be equal to planet
1515800	1517280	this distance.
1517280	1518280	This is the closest
1518280	1519720	one to the sun.
1520400	1521440	My understanding is at
1521440	1522680	least this is going to
1522680	1523880	be zero. We're going
1523880	1524680	to have to make this
1524680	1525440	smaller. So we're going
1525440	1526840	to go to zero. The
1526840	1527440	color is going to be
1527440	1528280	dark gray, which
1528280	1529120	will implement in the
1529120	1530720	second. And then the
1530720	1531880	mass. Let me just
1531880	1534320	copy this in is going
1534320	1537160	to be 0.3 30 times
1537160	1538720	10 to the exponent 24.
1539000	1539480	If you wanted to be
1539480	1540320	consistent, we could go
1540320	1542240	3.3 times 10 to the
1542240	1543800	exponent 23. That
1543800	1544560	gives us the same thing.
1544760	1545560	OK, so let's implement
1545560	1547080	dark gray now. So let's
1547080	1548320	go up to colors.
1549040	1551680	Dark gray is equal to
1551720	1552920	and then what did I
1552920	1553880	have dark gray at?
1553880	1554960	Let me just look here.
1555480	1559000	This is going to be 80 71.
1559000	1561520	No, 78 and 81.
1562200	1562920	Getting a mess with these
1562920	1563600	colors. If you want,
1563600	1564320	I'm just picking some
1564320	1565200	custom ones that look
1565200	1565840	a little bit nicer.
1566440	1567040	OK, so now we have
1567040	1568040	Mercury. So let's put
1568560	1570360	Mercury in here and we
1570360	1571400	can just go right on
1571440	1572600	to Venus, which I
1572600	1573800	believe is next planet.
1574000	1574560	So we're going to say
1574560	1575880	Venus is equal to
1575880	1577960	planet. It's distance
1577960	1580320	is going to be 0.7 to
1580320	1583760	3 times planet.au.
1584240	1584920	In case you're wondering
1584920	1586560	planet.au is referencing
1586560	1587440	this right here, just
1587440	1588240	because it's inside of
1588240	1590000	the planet class. OK,
1590040	1591520	so planet.au, we're going
1591520	1592920	to have zero. This is
1592920	1593680	a little bit larger.
1593680	1594080	So we're going to have a
1594080	1595760	14. The color of this
1595760	1596760	will just be a regular
1596760	1598560	white. And then the mass
1598600	1599480	is going to be this.
1599840	1603320	Let me copy it in 4.8685
1603360	1604560	times 10 to the exponent
1604560	1606200	of 24. OK, let me zoom
1606200	1606920	in so you guys can read
1606920	1607800	that a little bit better.
1608040	1610480	Let's now put Venus in
1610480	1612280	the list. And let me go
1612280	1613280	ahead and run this and
1613280	1614040	see if we're getting all
1614040	1616760	of our plants. OK, nice.
1616800	1617480	So there we go. And I've
1617480	1618200	just put the plants on
1618200	1619200	different sides. Again,
1619200	1620080	you can kind of put put
1620080	1620800	them wherever you want.
1620800	1621440	Doesn't really matter.
1621440	1622160	We could put them all in
1622160	1623080	the same side and have
1623080	1624200	them move at the same time.
1624400	1625400	I'm just staggering them a
1625400	1627040	bit. Maybe some of you
1627040	1628040	will have issue with that
1628040	1628920	based on your physics
1628920	1630080	knowledge. This is what
1630080	1630880	we're going to do for
1630880	1632200	right now. OK, there we
1632200	1633040	go. We have all of our
1633040	1634400	plants. So now that we
1634400	1635440	have all of our planets,
1635920	1636760	the next thing we need to
1636760	1637840	do is start moving them.
1638200	1639240	Now, moving them is
1639240	1640440	complicated. But again,
1640440	1641240	as I mentioned, we're
1641240	1642040	going to be moving them
1642040	1643440	by their X velocity and
1643440	1644960	their Y velocity. But we
1644960	1645920	need to determine what
1645920	1647080	those velocities are.
1647280	1648160	And those velocities are
1648160	1649280	determined by the force
1649280	1650760	of attraction. So
1650760	1651600	essentially the force of
1651600	1652760	gravity between the
1652760	1653960	different planets. All
1653960	1654480	right. So I'm going to
1654480	1655720	start explaining the math
1655720	1656600	that's going to go on here
1656600	1657560	to actually move the
1657560	1659200	planets around the sun.
1659400	1660400	And before I can do that,
1660400	1661280	I just want to give you a
1661280	1662600	general understanding of
1662600	1664320	gravity and how planets
1664320	1665400	actually orbit around the
1665400	1666080	sun, in case you're
1666080	1667840	unfamiliar. So the reason
1667840	1669320	why when we jump up, we
1669320	1670080	fall down. And when we
1670080	1671240	throw a ball up, it comes
1671240	1672480	down is because of gravity.
1672680	1674040	Now, we all know gravity,
1674040	1675600	but gravity is relative
1675600	1677120	to different objects. OK.
1677360	1678480	So all objects are
1678480	1679600	actually attracting one
1679600	1680920	another. And the force of
1680920	1681880	attraction that they have
1681880	1683080	on one another is based
1683080	1684320	on the mass of those
1684320	1685760	objects. Now, this only
1685760	1687080	really becomes relevant
1687080	1688200	when you have very, very
1688200	1689520	massive objects like
1689600	1690880	planets. So when we're
1690880	1691560	talking about something
1691560	1693160	like Earth, this a massive
1693160	1694240	body, right? Is something
1694240	1696480	like, you know, six to six
1696480	1697440	multiplied by 10 to the
1697440	1698840	exponent, 24 kilograms
1699000	1699960	or whatever the number is.
1699960	1701200	It's a very, very massive
1701200	1702880	body. So relative to our
1702880	1704080	mass, which is maybe 60
1704080	1705280	kilograms, 70 kilograms,
1705280	1706440	80 kilograms, whatever it
1706440	1708320	is, it's way, way larger.
1708520	1709720	So it actually exerts a
1709720	1711240	massive force on us that
1711240	1712560	pulls us downwards
1712560	1714280	towards the earth. Now,
1714280	1715560	what actually determines
1715560	1716680	the strength of this force
1716800	1718360	is the distance from us
1718360	1719960	to the center of the earth.
1720160	1721120	Hence why when you go up
1721120	1722160	in space, you have zero
1722160	1722920	gravity because you're
1722920	1724480	much further away from
1724480	1726400	the earth. Now, all objects
1726400	1727920	again, exert forces on
1727920	1728600	each other. And those
1728600	1729680	forces depend on the two
1729680	1730920	masses of the objects, as
1730920	1732120	well as the distance of
1732120	1733240	the objects. But if you're
1733240	1734240	just naively looking at
1734240	1735240	this equation here, which
1735240	1736200	is actually the force of
1736200	1737440	attraction, you'll see
1737440	1738760	that the distance between
1738760	1739560	the center of the two
1739560	1740920	objects is the most
1740920	1742120	important when it comes
1742120	1743320	to what type of the force,
1743360	1744160	what type of force you're
1744160	1745080	going to get, because it's
1745080	1746560	R squared. So the further
1746560	1748560	away you go, exponentially,
1748560	1749520	the less gravity you're
1749520	1750600	going to have the closer
1750600	1751760	you get exponentially,
1751760	1752840	the more gravity you're
1752840	1753800	going to get. Now, again,
1753800	1754800	I'm not a physics major,
1754800	1755840	so take everything with a
1755840	1756680	grain of salt here.
1756880	1757560	That's the basic
1757560	1758720	understanding of gravity.
1759120	1759840	Now, when we're talking
1759840	1760800	about planets, we're
1760800	1762320	talking about multiple
1762440	1764320	massive objects that
1764320	1765440	are moving around each
1765440	1766840	other. So when we talk
1766840	1767880	about an object like
1767920	1769280	earth here, right? The
1769280	1770480	earth is moving at a
1770480	1771800	constant velocity. Well,
1771840	1772920	not necessarily constant,
1772920	1773920	but it's moving at a
1773960	1775000	relatively constant
1775000	1776280	velocity around the sun.
1776600	1777680	Now, what forces it to
1777680	1779520	move around the sun is
1779560	1780800	gravity. So the earth is
1780800	1782240	already on a trajectory
1782240	1784040	moving in the x direction.
1784080	1785400	OK, so it has some speed
1785400	1786680	going in the x direction.
1787000	1788360	And then there is a force
1788360	1790000	pulling it towards the sun.
1790240	1791760	That force is gravity or
1791760	1793120	the attraction between
1793120	1794040	the earth and the sun.
1794360	1795120	Now, the reason why
1795120	1796440	there's an attraction is
1796440	1797840	because the sun is much,
1797840	1799040	much larger than the earth.
1799160	1800200	If the earth was larger
1800200	1800920	than the sun, then the
1800920	1801760	sun would be orbiting
1801760	1803160	around it. Great example.
1803160	1804120	If you think of the moon,
1804120	1805040	right, the moon is much
1805040	1805800	smaller than the earth.
1806000	1806840	It's very close to the
1806840	1808080	earth. And so it orbits
1808120	1810120	around the earth.
1810280	1811480	OK, hopefully this is
1811480	1812280	making a little bit of
1812280	1813640	sense. But the idea is
1813640	1814840	that you have some force
1815160	1816640	and that force,
1816640	1818040	essentially, is causing
1818040	1819120	the earth to move around
1819120	1820200	the sun. And the reason
1820200	1821080	why the earth doesn't just
1821080	1822640	shoot directly towards
1822640	1823480	the sun, like we shoot
1823480	1824680	directly down on earth
1824680	1825680	when we jump up is
1825680	1826760	because it already has
1826760	1827800	momentum moving in
1827800	1828600	another direction.
1828840	1829880	And so there's multiple
1829880	1830840	forces affecting it,
1831080	1832160	causing it to go in an
1832160	1833240	orbit. Again, very
1833240	1834360	simplified explanation
1834360	1835080	of what's going on.
1835320	1836200	But hopefully that makes
1836200	1837240	a bit of sense. Now, the
1837240	1838160	reason I'm saying this
1838200	1839080	is because we have
1839080	1840360	multiple planets that
1840360	1841120	are orbiting around
1841120	1841680	the earth, right?
1841680	1842520	Maybe we have another
1842520	1843720	planet. I know I
1843720	1844240	probably shouldn't have
1844240	1844920	drawn it in blue.
1845240	1846240	But the point is there's
1846240	1847160	a distance between
1847160	1848080	these two planets, and
1848080	1849040	they also have a force
1849040	1849920	of attraction on each
1849920	1851000	other. And that's why
1851000	1851520	you're going to have
1851520	1852880	different orbits and
1852880	1854560	different speeds based
1854560	1855280	on the location of
1855280	1856440	other planets and kind
1856440	1857240	of their orbital
1857240	1858600	trajectory. So if you
1858600	1859760	have two planets here,
1859760	1860640	as well as a planet
1860640	1861600	here, well, this guy's
1861600	1862560	still orbiting around
1862560	1863200	the sun, because the
1863200	1864200	sun is much larger
1864200	1865240	than him, but he's going
1865240	1866480	to be orbiting slower
1866520	1867520	than the earth is
1867680	1868480	because he's not as
1868480	1869800	close. However, the
1869800	1870520	earth is going to be
1870560	1871720	attracting or having
1871720	1872360	some force of
1872360	1873160	attraction on this
1873160	1874080	planet, and this
1874080	1874680	planet is going to have
1874680	1875800	some force of attraction
1875800	1877000	on the earth. And so
1877000	1878360	you need to take that
1878360	1879040	into account when
1879040	1879640	you're actually
1879640	1880240	calculating the
1880240	1881120	different orbits of
1881120	1882760	the planets. All right.
1882960	1883760	I know this is a lot.
1884360	1885400	Very, very math and
1885400	1886600	physics has heavy here,
1886600	1887680	but the idea is every
1887680	1888920	single object exhibits
1888920	1889840	some force on each
1889840	1890720	other. And we need to
1890720	1891680	calculate what all of
1891680	1893000	those forces are when
1893000	1893840	we are actually
1893880	1895000	determining the orbit
1895200	1896200	so that we are going
1896200	1896880	to be orbiting
1896960	1898000	appropriate to where
1898000	1898960	the other planets are.
1898960	1899640	So we can't just
1899640	1900400	calculate the force
1900440	1901600	to the sun. We need to
1901600	1902400	also calculate the
1902400	1903040	force to the other
1903040	1904000	planets, and that's
1904000	1904520	going to give us a
1904520	1905320	somewhat elliptical
1905320	1907160	orbit as well. OK.
1907920	1908920	Hopefully this makes a
1908920	1909600	little bit of sense.
1909600	1910400	Now let's talk about
1910400	1911760	how we actually do
1911760	1913080	this. So as I kind
1913080	1914080	of already hinted at,
1914080	1915080	if you look to the
1915080	1916400	left of my screen,
1916880	1917600	you can see that I
1917600	1918840	have the equation here
1918840	1920080	for the force of
1920120	1920960	attraction between
1920960	1922600	two objects. Now, this
1922600	1923400	force is the
1923400	1924640	straight line force
1924640	1925640	between two objects.
1925640	1926320	So let me just move
1926320	1927200	the earth a bit here.
1927640	1928600	So I can explain kind
1928600	1929440	of what I mean by that
1929440	1930240	and why we need to do
1930240	1930680	a little bit of
1930680	1932280	trigonometry. So let's
1932280	1933120	say we have the earth
1933120	1935400	over here. This will
1935400	1936880	say is the force of
1936880	1937680	gravity or the force
1937680	1938520	of attraction between
1938520	1939240	the two objects. Now
1939240	1940240	to calculate this is
1940240	1941440	fairly simple. We just
1941440	1942400	need to first calculate
1942400	1943280	the distance between
1943280	1944160	the two objects, which
1944160	1945840	we can do. We then
1945840	1946600	need to know the masses,
1946600	1947320	which we already know
1947560	1948920	and the gravitational
1948920	1949800	constant, which we know
1949800	1950840	as well. So let's say
1950840	1951440	we know the force.
1951680	1952400	Well, if we know the
1952400	1953360	force, the issue is
1953360	1954040	it's giving us the
1954040	1955440	straight line force.
1955760	1957440	We want to break this
1957440	1958920	force into two
1958960	1960400	components so that we
1960400	1961920	are able to move the
1961920	1963720	earth in an X direction,
1964120	1965640	as well as a Y direction.
1965920	1966800	So we need to kind of
1966800	1967680	understand this, that
1967680	1968360	it's giving us the
1968360	1969240	straight line force.
1969360	1970360	We need to break that
1970360	1971600	force into X and Y
1971600	1972840	components so we can
1972840	1974160	actually move the earth
1974160	1975160	around the sun in both
1975160	1976240	the X and the Y
1976240	1977720	direction. Now, this is
1977720	1978400	the same way that we're
1978400	1979200	going to calculate the
1979200	1980720	distance. It's very
1980720	1981640	easy for us to actually
1981640	1982440	find the distance
1982440	1983640	because we're looking
1983640	1984440	for. Let me just
1984440	1985440	redraw all of this,
1985880	1986600	this right here. So
1986600	1987120	this is going to be
1987160	1988480	R. We don't know what
1988480	1990800	R is, but we know what
1990800	1992280	the Y distances and
1992280	1993680	the X distance distances
1993680	1994800	between these two points
1994800	1995480	because for both these
1995480	1996760	points, we have an X and
1996760	1997920	a Y, right? So we have
1997920	2000360	like X two and Y two.
2000400	2001320	So if we know both of
2001320	2002520	those points, we can
2002520	2003480	calculate the difference
2003480	2004560	in X and the difference
2004560	2005600	in Y. And then to
2005600	2006800	figure out what R is
2006800	2007760	relative to our right
2007760	2009080	triangle here, what
2009080	2009920	equation do we use?
2009920	2010840	Well, Pythagorean
2010840	2011960	theorem. I know I
2011960	2012800	completely butchered
2012800	2014120	that that name, but
2014320	2015280	it's going to be X squared
2015280	2016560	plus Y squared. Take the
2016560	2017680	root of that and that's
2017680	2019160	going to give us R. OK,
2019160	2019880	so we are able to
2019880	2020840	calculate R. Then
2020840	2021480	obviously we can take
2021480	2022920	the square. So once we
2022920	2023840	do that, we calculate
2023840	2024680	the distance, then
2024680	2025400	we're going to calculate
2025400	2026360	the force and then we
2026360	2026960	need to go in the
2026960	2028080	opposite direction
2028080	2029840	from the force back
2029840	2031600	to the X and Y components.
2032360	2033760	OK, so let's redraw this.
2034040	2035000	So now let's say we know
2035000	2036880	the force. OK. And again,
2036880	2037760	we need to split this
2037760	2039600	into X and Y. So we
2039600	2040720	need to have, I guess,
2040720	2043680	F X and F Y. Now, the
2043680	2044600	way that we do this is
2044600	2045440	we need to calculate
2045440	2047120	the angle here, because
2047120	2047960	if we have any two
2047960	2049040	aspects of a triangle,
2049040	2049840	so if we have one
2049840	2050880	side length and an
2050880	2051920	angle and it's a right
2051920	2053080	angle triangle, we can
2053080	2053920	calculate any other
2053920	2054920	angle or any other
2054920	2055760	side length, right?
2055760	2056520	That's just a property
2056520	2057280	of a right triangle.
2057520	2058600	So we know F and we
2058600	2059640	should know this angle.
2059720	2060440	And the reason we know
2060440	2061320	this angle is because
2061320	2063720	we know X and we know
2063720	2065040	why. So the way we
2065040	2066680	calculate this angle is
2066680	2068000	we take the arc tangent,
2068160	2069880	so the tan inverse of
2070400	2072200	Y over X. Now, to
2072200	2073400	derive why this is
2073400	2074120	going to give us the
2074120	2075600	angle, theta, let's
2075600	2076960	look at the equation
2077680	2080080	of tan of theta is
2080080	2081000	equal to. And then
2081000	2081520	this is going to be
2081520	2083280	the opposite over the
2083280	2084240	adjacent. Now, I like
2084240	2085240	to remember this as
2085280	2087440	Toa. OK, but this is
2087440	2088880	the equation. You know,
2088880	2089840	this is a property of a
2089840	2091160	right triangle. So if I
2091160	2092560	have tan theta is equal
2092560	2093400	to the opposite over
2093400	2094120	the adjacent, and
2094120	2094720	we're talking about
2094720	2095880	this right here, the
2095880	2096960	opposite side length is
2096960	2098520	why the adjacent side
2098520	2100560	length is X. And so we
2100560	2101280	can kind of sub those
2101280	2102480	values in, right? And we
2102520	2104800	get Y and X. If we want
2104800	2106080	to isolate for theta, we
2106080	2107080	need to take the inverse
2107080	2108040	tangent. So that's what
2108040	2109320	we do. We take tan inverse
2109320	2110920	of Y over X. That gives
2110920	2112320	us theta. OK, so now
2112320	2113400	that we know theta, we
2113400	2114520	can now use theta to
2114520	2116680	calculate what the F force
2116680	2118080	component is or the X
2118200	2119640	force component is as
2119640	2120600	well as the Y force
2120600	2122320	component. So to do
2122320	2123320	that, we need to use
2123320	2124120	some other properties.
2124120	2125720	So we have a property.
2125720	2128320	It is so let me write
2128320	2129920	this property. So
2130640	2132800	katoa, this is the way
2132800	2133560	that I always remember
2133560	2135280	these, but we can say
2135640	2137680	that the sign of theta
2137840	2138720	is equal to the
2138720	2140080	opposite over the
2140080	2141320	hypotenuse. And since
2141320	2141960	we're looking for the
2141960	2143520	opposite, which is F Y,
2143600	2145200	we can say sign of the
2145200	2146120	angle theta, which we
2146120	2147800	know is equal to the F
2147800	2149920	of Y over H. H is F.
2149920	2151120	We know F and we're
2151120	2153120	able to find what F of
2153120	2154440	Y is by just isolating
2154440	2155680	for F of Y. So multiplying
2155680	2157360	F by sine theta. And
2157360	2158280	then same thing. If we
2158280	2159480	want to find what F X
2159520	2161200	is, we can say F X is
2161200	2162440	equal to this is going
2162440	2164040	to be the coast of theta
2164680	2166720	multiplied by F. That
2166720	2167640	will give us the F X
2167640	2168880	component. And then once
2168880	2169840	we know the X and Y
2169840	2170880	velocity, we can very
2170880	2172120	easily move this around
2172120	2173480	the sun. All right.
2173880	2175280	Math lesson is now
2175280	2177120	over. Hopefully I
2177120	2178360	didn't confuse you too
2178360	2179560	badly. Again, I'm trying
2179560	2180480	to squeeze in what is
2180480	2181640	probably taught an entire
2181640	2183560	year of grade 12 physics
2183720	2185360	in about 10 minutes. But
2185360	2186240	that is the math that
2186240	2187240	we need to understand to
2187240	2188400	be able to move these
2188440	2189720	objects around. Can't
2189720	2190320	really make it much
2190320	2191240	simpler than that. If
2191240	2191840	you don't understand
2191840	2192840	basic trigonometry,
2192840	2193840	then I'm sure this was
2193840	2195160	a lot, but you can
2195160	2195920	kind of just trust the
2195920	2196960	properties that I showed
2196960	2197840	you here and I will
2197840	2198400	show you how to
2198400	2199280	implement them in code.
2199520	2200240	You don't understand
2200280	2201120	totally fine. You can
2201120	2202000	still follow along and
2202000	2202920	you will have a working
2202920	2204080	simulation. With that
2204080	2205320	said, let's go back to
2205320	2206200	the code. All right. So
2206200	2207680	I'm back in the code and
2207680	2209200	it is time to do some
2209200	2210720	math inside of code. Now
2210720	2211280	I know we just did a
2211280	2211960	lot of math, but now
2211960	2212880	we're doing it in code.
2213160	2214440	Hopefully that gave
2214440	2215160	you an explanation of
2215160	2215920	what I'm about to write
2215920	2217320	here. So I'm on my
2217360	2218680	planet class and I'm
2218680	2219280	going to write a
2219280	2220240	method that will
2220240	2221520	calculate the force of
2221520	2223280	attraction between
2223360	2225400	another object and the
2225400	2226560	current object. Okay.
2227120	2227600	So I'm going to say
2227760	2230000	define attraction like
2230000	2230880	that. I'm going to
2230880	2232040	take in self and I'm
2232040	2232600	going to take in an
2232600	2234320	other object. Now the
2234320	2234960	other is going to be
2234960	2236000	another planet. Okay.
2236880	2237480	So the first thing I'm
2237480	2238640	going to do is say that
2238640	2240080	my other underscore X
2240920	2242920	other underscore Y is
2242920	2244480	equal to other dot X
2245400	2248360	and other dot Y. Okay.
2248800	2249880	Now, the first thing we
2249880	2250800	need to do here is we
2250800	2251680	need to calculate the
2251680	2253120	distance between the
2253120	2254280	current object and the
2254280	2255680	other object. So let's
2255680	2256600	do that. We're going to
2256600	2258000	say the distance in X
2258240	2259680	is equal to, and this is
2259680	2260520	going to be the other
2260520	2263640	X minus the self dot X.
2263640	2264840	Okay. And then the
2264840	2266640	distance in Y is going
2266640	2267320	to be equal to the
2267320	2270120	other Y minus the
2270120	2271360	self dot Y. Now it
2271360	2272120	doesn't matter if you
2272120	2273160	take the self dot X and
2273160	2274000	subtract it from other
2274040	2275360	dot X. It doesn't matter
2275360	2276080	what way you do it. It's
2276080	2276800	going to give us the
2277560	2278440	the magnitude, which is
2278440	2279800	what we, which is what
2279800	2281160	we want. Sorry, because
2281160	2282880	once we take the square
2282880	2283640	of both these values,
2283640	2284000	we're going to get a
2284000	2284840	positive value, no
2284840	2286480	matter what. So I have
2286480	2287200	the distance X and the
2287200	2288480	distance Y. Now I'm
2288480	2290120	going to say distance is
2290160	2292320	equal to, and this is
2292320	2295680	going to be the math dot
2295720	2299240	sqrt of the distance X
2299240	2301160	to the exponent to plus
2301160	2303560	the distance Y to the
2303600	2304800	exponent to. Okay. Let
2304800	2305520	me just check and make
2305520	2306080	sure I haven't messed
2306080	2307320	this up yet. Looks
2307320	2308320	good. We have found the
2308320	2309800	distance. Okay. Now the
2309800	2310320	first thing I'm going to
2310320	2311200	do is I'm going to say
2311280	2313880	if the other dot sun,
2314320	2315520	then I'm going to say
2316800	2318400	the self dot distance to
2318400	2319880	sun is equal to distance.
2320600	2321360	Now the reason I'm doing
2321360	2322560	this is because if the
2322560	2323360	other object that we're
2323360	2324480	calculating the force of
2324480	2325360	attraction with is the
2325360	2326840	sun, I just calculated
2326840	2328000	the distance to the sun.
2328240	2328680	And I just want to
2328680	2329720	update the distance to
2329720	2331240	sun property here so that
2331240	2332360	I can use that when I
2332400	2333560	actually want to draw
2333640	2334640	the distance to the sun
2334680	2336160	on top of the plan. Again,
2336160	2336840	we're just checking is
2336840	2337440	the other object, the
2337440	2338640	sun. If it is, okay, we
2338640	2339400	know the distance. So
2339400	2340320	let's just plug that in
2340320	2341440	and save that value
2341440	2342840	inside of the class. That
2342840	2343240	way we're not
2343240	2344320	recalculating it later
2344320	2345160	on. We already have the
2345160	2346560	value. Okay. So now that
2346560	2347320	we've done that, we need
2347320	2348480	to calculate the force
2348520	2349680	of attraction. So we're
2349680	2351160	going to say the force.
2352040	2352840	Yeah. I think it's force
2352880	2353520	is going to be equal to
2353520	2355320	self dot G. We're going
2355320	2356840	to multiply this by
2356880	2358280	our self dot mass
2358800	2360400	multiplied by the other
2360400	2362240	dot mass. And then we're
2362240	2364000	going to divide this by
2364000	2365760	the distance to the
2365760	2367240	exponent to why did I
2367240	2367880	write it like that? It's
2367880	2368640	going to be distance to
2368640	2370480	the exponent to. And I
2370480	2372600	think that's good. Okay.
2372600	2373200	Now we don't need to do
2373200	2374080	any parentheses because
2374080	2374920	these have the same order
2374920	2376360	of operations and
2376360	2377680	exponent to the exponent
2377680	2379480	to is going to happen
2379480	2380920	first anyways. Okay. So
2380920	2381680	this is how we calculate
2381680	2382800	the force. Now remember,
2382800	2384080	this is the straight line
2384080	2385600	force. We need to break
2385600	2386840	this force down into the
2386840	2388280	X and to the Y component,
2388440	2389280	which is why we had to do
2389280	2390320	all of that trigonometry.
2390800	2392040	So now we need to
2392040	2393520	calculate the angle theta.
2393640	2394200	So we're going to say
2394200	2396520	theta is equal to, and
2396520	2397600	then this is going to be
2397600	2399360	the math dot arc tangent
2399480	2400560	of, and it's actually
2400560	2401320	going to be here at the
2401320	2403240	distance Y over the
2403240	2404280	distance X. Now, the
2404280	2405800	reason I'm doing a 10 to
2405960	2406680	is because this is a
2406680	2407920	special function in
2407920	2409160	Python that's going to
2409160	2411120	take the Y over the X
2411120	2411880	and then give us the
2411880	2413040	angle associated with it.
2413040	2414360	So make sure you use a 10
2414360	2416120	to from the math library.
2416240	2417600	If you just use a 10,
2417600	2418240	that's not going to work.
2418240	2419400	You need a 10 to. Okay.
2419640	2420640	So math dot eight and
2420640	2422280	distance X, distance Y.
2422520	2423880	Now we know the angle theta.
2424360	2425400	Now that we know the angle
2425400	2426440	theta, we can calculate
2426440	2427760	the X velocity and the Y
2427760	2429200	velocity. So we're going to
2429200	2430440	say or sorry, not the X
2430440	2431000	velocity, we're going to
2431000	2432040	calculate the X force and
2432040	2433320	the Y force. So we're
2433320	2434520	going to say the force X
2435040	2436520	is equal to this is going
2436520	2438320	to be math dot cosine
2438920	2440760	of theta multiplied
2441320	2442080	by the force.
2442800	2443880	OK, and then the force
2443880	2445280	underscore Y is going to
2445280	2446320	be equal to the math dot
2446320	2448600	sign of the theta.
2450400	2453160	Multiplied by the force.
2453360	2454000	OK, and then we're going to
2454000	2455960	return from here the force
2455960	2457800	X and the force Y.
2458640	2460000	OK, let's break down what we
2460000	2460920	did here. I understand this
2460920	2461560	is probably a little bit
2461560	2462280	confusing still.
2462720	2463960	We first calculate the
2463960	2464960	distance between the two
2464960	2465920	objects. There we go.
2465920	2466840	We have distance.
2467000	2468280	Great. Then what we're
2468280	2469120	going to do is determine
2469120	2470160	if the other object is the
2470160	2471200	sun. If it is, we're just
2471200	2471760	going to store that
2471760	2472880	distance in a property
2472880	2473600	here, because we want to
2473600	2474480	know what that value is.
2475040	2475960	Now, after that, we want
2475960	2476880	to calculate the force of
2476880	2477760	attraction. So this is
2477760	2478600	the force of attraction
2478600	2480120	here. It's F equals M,
2480160	2483280	lowercase M over
2483520	2484960	R squared multiplied by
2484960	2485920	the gravitational constant
2485920	2486920	G. OK, so that's what
2486920	2487720	we're doing. So self that
2487720	2489600	G times mass multiplied
2489600	2490720	by other mass over
2490760	2492000	distance squared.
2492600	2493960	OK, then we want to
2493960	2495200	break this distance down
2495200	2496240	into the two components.
2496240	2497640	So the sorry, the force
2497640	2498800	into the X force and the
2498800	2500480	Y force. So we first need
2500480	2501520	to calculate the angle.
2501680	2502640	So we say the math, the
2502640	2503720	arc tangent to of the
2503720	2504960	distance Y over distance
2504960	2506360	X gives us the angle
2506360	2507480	that we want. Then we're
2507480	2508680	going to say the force X
2508680	2509600	is equal to the math
2509600	2511000	dot cosine of theta
2511000	2512880	multiplied by force and
2512880	2514160	the force Y is equal to
2514160	2515360	the math dot sine theta
2515360	2516560	multiplied by the force.
2517240	2518720	Now, remember here that
2518720	2519920	all of these distances
2520200	2521400	and all of these forces
2521520	2522880	are real distances and
2522880	2523640	forces. These are
2523680	2524880	actually the distances
2524880	2525720	and the forces that you
2525720	2526800	would see. I mean, it's
2526800	2528000	an approximation in the
2528000	2529280	real solar system. So I'm
2529280	2530440	not using really small
2530440	2531880	pixel values in pi game.
2532000	2533320	I'm using massive, you
2533320	2534640	know, meter per squared
2535080	2536280	kilogram squared values,
2536280	2537120	whatever the units are
2537120	2538360	of these forces, I'm
2538360	2539240	actually using the
2539240	2540640	correct numbers, like
2540640	2541840	the large two scale
2541840	2543000	numbers. I just want to
2543000	2543720	make that clear here
2543720	2545040	because like if we were
2545040	2546320	to print out what X
2546320	2547600	were and print out what
2547600	2548280	the force were, you
2548280	2549320	would see really, really
2549320	2550240	massive numbers
2550440	2551440	because that's actually
2551440	2552240	what they are in the real
2552240	2553120	world because we're trying
2553120	2554160	to do a simulation here.
2554640	2556280	Okay. Anyway, so we have
2556280	2557640	attraction. Now that we
2557640	2558160	have the force of
2558160	2559280	attraction, what we need
2559280	2560440	to do is actually update
2560440	2561600	the position of each
2561600	2563080	planet based on the
2563080	2563960	force of attraction
2563960	2565200	between every single
2565200	2566400	other planet, because
2566440	2567560	we can't just do it from
2567560	2568720	the sun. We need to look
2568720	2569680	at all the other planets
2569680	2570760	as I was discussing kind
2570760	2571440	of in the whiteboard
2571440	2572720	section. So what I'm
2572720	2574080	going to do is make a
2574320	2574960	method here. I'm going
2574960	2576640	to say update position.
2577360	2578120	And this is going to take
2578120	2580120	in self and planets.
2580120	2582160	Okay. So what we're
2582160	2582760	going to do is loop
2582760	2583360	through all of the
2583360	2584520	planets. We're going to
2584520	2585440	calculate the force of
2585440	2586960	attraction between the
2586960	2588040	current planet and all
2588040	2588840	of the other planets.
2589080	2589840	We're then going to
2589840	2590640	calculate what the
2590640	2592480	velocity needs to be
2592920	2594240	for these planets. Then
2594240	2594920	we're going to move them
2594920	2596600	by that velocity. So
2596600	2598000	we're going to say the
2598000	2599280	total force in the X
2599280	2600840	direction is equal to
2600840	2601760	the total force in the
2601760	2602800	Y direction, which is
2602800	2603760	currently equal to zero.
2604000	2604800	And we're going to sum
2604800	2605720	all of the forces
2605720	2607040	together from all of the
2607040	2608280	planets. So we're going
2608280	2610080	to say for planet in
2610080	2611160	planets, we're going to
2611160	2612160	pass a list of plants
2612160	2612640	here. That's what we're
2612640	2614040	taking in. We're going to
2614040	2616360	say if self is equal to
2616360	2618080	planet, then continue
2618080	2618760	because we don't want to
2618760	2619640	calculate the force with
2619640	2621080	ourself. In fact, that
2621080	2622080	would just give us a zero
2622080	2623680	division error because
2623680	2624520	the distance between
2624520	2625400	ourself and ourself is
2625400	2626600	zero, right? So we can't
2627200	2628160	do this division with
2628160	2629880	the arch tangent or
2629880	2630800	sorry, with the distance
2630800	2631400	squared, that would give
2631400	2632680	us an issue. Anyways,
2632680	2634360	continuing. Now what
2634360	2635040	we're going to do is say
2635040	2637040	that the force X force Y
2637080	2638320	is equal to, and this is
2638320	2639080	going to be the self
2639080	2641160	dot attraction to
2642240	2643720	this plant. Okay. So
2643720	2644560	again, for every single
2644560	2645640	planet, we're going to
2645640	2646720	calculate the force X and
2646720	2647520	the force Y that's
2647520	2648840	exerting on this planet.
2649120	2649880	We're going to say self
2649880	2651000	dot attraction is equal
2651000	2651720	to planet. That's what's
2651720	2652600	doing the calculation
2652600	2653920	here that gives us the FX
2653960	2655040	and FY. Now we're just
2655040	2656280	going to sum these two
2656280	2657160	variables or add to
2657160	2657960	these two variables. So
2657960	2659800	self that X FX plus
2659800	2662560	equals FX and total FY
2662680	2664800	plus equals FY. Okay.
2665240	2666080	So now that we know what
2666080	2667080	the total forces that's
2667080	2668200	being exerted on us and
2668200	2669560	the X and the Y direction,
2669600	2670480	we need to use these
2670480	2671320	forces to actually
2671320	2672040	calculate with the
2672040	2673240	velocity of the planet's
2673240	2674280	going to be. All right.
2674280	2675280	So the way we calculate
2675280	2676840	the velocity here is
2676840	2677800	we're going to say that
2677800	2679200	the self dot X underscore
2679200	2680680	Vell is equal to the
2680680	2682920	total FX divided by
2682920	2684160	the self dot mass
2684480	2687480	multiplied by the self
2687520	2688760	dots. And then this is
2688760	2689720	going to be time step.
2690200	2691280	Now, I'm going to explain
2691280	2692320	how this works, but this
2692320	2693040	is using kind of the
2693040	2694760	famous equation F equals
2694800	2695960	M a case. We have this
2695960	2698120	equation F equals M a
2698400	2699360	and this stands for the
2699360	2700480	total force is equal to
2700480	2701760	the mass divided by
2701760	2703360	the acceleration. Now
2703400	2704480	you can use this to
2704480	2705520	solve for the acceleration,
2705520	2706320	which is what we're doing
2706320	2707400	here. So we're saying
2708040	2709360	the acceleration is equal
2709360	2711760	to F over M. So I'm taking
2711760	2713960	my total FX and my total
2713960	2715080	mass, right? And I'm
2715080	2716200	dividing those to get
2716200	2717360	the acceleration. Now,
2717360	2718120	the thing is I'm going to
2718120	2719200	be adding to this. I'm
2719200	2720760	saying self that XL plus
2720800	2722240	equals. So the way this
2722240	2723960	works is I'm increasing
2723960	2725800	my velocity by my
2725800	2727800	acceleration multiplied
2727800	2729120	by the time step. Now,
2729120	2729880	there's another equation
2729880	2730840	that has to do with time
2730840	2731640	and acceleration to
2731640	2732640	equal velocity and all
2732640	2733440	those kinds of things.
2733960	2734920	Anyways, the point is
2734920	2735920	though, since we're
2735920	2736960	simulating this over a
2736960	2738280	period of time, we're
2738280	2739320	going to take the time
2739320	2740320	step, which is right
2740320	2741520	here, which is one day
2742040	2743240	we're going to multiply
2743240	2744960	that by whatever the
2744960	2746360	acceleration is. Now,
2746360	2747160	we're going to take that
2747160	2748680	value and add that to
2748680	2750280	the current velocity. Now,
2750280	2751040	why this is going to
2751040	2751960	give us a perfect
2751960	2753920	elliptical is because as
2753920	2755200	soon as we start going
2755360	2756160	to the left or to the
2756160	2757040	right of the planet and
2757040	2758120	the distances and the
2758120	2759960	angles change, our force
2760000	2760920	is going to be either
2760920	2762360	negative or positive,
2762640	2763440	saying that we're going
2763440	2764200	kind of right or we're
2764200	2764800	going left or we're
2764800	2765640	going up or we're going
2765640	2766840	down. So by doing a
2766840	2768000	total summation of all
2768000	2769160	of these forces, what
2769160	2770040	ends up happening is we
2770040	2771320	go in a complete circle
2771520	2772520	because by the time we
2772520	2773640	get to a certain point in
2773640	2775560	the orbit, the velocity
2775560	2776520	is going to be changing
2776520	2778000	and either getting more
2778000	2779160	positive or more negative,
2779160	2780080	moving us to the left
2780080	2781960	or to the right. Hopefully
2781960	2782960	that makes a tiny bit of
2782960	2783720	sense. But the point is
2783720	2784760	we're going to constantly
2784760	2785840	add this and you'll
2785840	2786680	notice that we're not
2786680	2787760	going to go faster.
2787920	2788440	We're just going to
2788440	2790000	change in directions
2790000	2790720	because what's going to
2790720	2792360	happen is X velocity is
2792360	2793280	going to be decreasing
2793280	2794640	while the Y velocity is
2794640	2795600	increasing when we're at
2795600	2796480	a certain point in the
2796480	2797560	circle. And then that's
2797560	2798400	going to continually
2798400	2799440	change and change
2799480	2800880	directions as we move
2800880	2802720	around. So you'll see
2802720	2803480	when we start running
2803480	2804800	this, but that's how
2804800	2805640	this works. Now we do the
2805640	2806600	exact same thing with the
2806600	2808120	Y. So plus equals the
2808120	2810280	total F Y over the
2810280	2812600	self dot mass can then
2812600	2814160	multiplied by the self
2814160	2816360	dot timestamp. OK, so
2816360	2817400	now that we have that,
2817520	2818320	what we need to do is
2818320	2819560	just increment the X and
2819560	2820480	the Y because this is
2820480	2822040	just the velocity. So
2822040	2822960	from acceleration, you
2822960	2823920	get velocity from
2823920	2824600	velocity, you get
2824600	2826040	displacement or distance,
2826040	2826720	which is what we're now
2826720	2827760	going to do. So we're
2827760	2828840	going to say self dot X.
2829440	2830160	And then this is going to
2830160	2832280	be plus equals self dot
2832360	2833920	X underscore Vell. And
2833920	2834760	then we need to multiply
2834760	2835920	this by the time step as
2835920	2837000	well. And then we're going
2837000	2840120	to say self dots Y plus
2840160	2841520	equals. This needs to be
2841520	2843280	self dot Y Vell multiplied
2843280	2844720	by self dot timestamp. And
2844720	2846520	then let's fix this to be
2846520	2848240	self dot X. Well, OK, and
2848240	2850240	then lastly here, we can
2850240	2851440	actually say the self
2851440	2854360	dot orbit and then dot
2854360	2856360	append. And I'm going to
2856360	2858680	append just a tuple
2858680	2859520	here, which is going to
2859520	2861600	be self dot X, self
2861600	2863800	dot Y. And yeah, I think
2863800	2864800	that's actually good for
2864800	2866480	the orbit. OK, so let me
2867000	2867880	break this down one more
2867880	2869320	time. What we're doing is
2869320	2869960	we're getting the total
2869960	2871800	forces exerted on this
2871800	2872920	planet from all other
2872920	2873640	plants that are not
2873640	2875200	itself. We are then
2875200	2876840	going to figure out with
2876840	2878120	the X and the Y velocity
2878120	2879080	is using the equations I
2879080	2880200	describe. Then we are
2880200	2881440	going to update the X and
2881440	2882880	Y position by using the
2882880	2883720	velocity. We need to
2883720	2884920	multiply by the time step
2884920	2885760	to make sure we're moving
2885800	2886640	in the accurate amount of
2886640	2888600	time here. OK. And then
2888600	2889560	we have self that orbit
2890160	2890960	dot append and we're
2890960	2892000	appending the X and Y
2892000	2892640	position that we're
2892640	2893760	currently at so that now
2893760	2895560	we can draw the orbit
2895600	2896560	forward this planet,
2896560	2897760	which I'm going to do in
2897760	2899360	a second. OK, so there
2899360	2900040	we go. We actually have
2900040	2900800	all of the hard stuff
2900800	2901840	done. Now we just need
2901840	2903320	to call the update
2903320	2905600	position method here on
2905600	2906760	all of our planets. And
2906760	2907280	you'll see that they'll
2907280	2908080	start moving around the
2908080	2909160	screen. So I'm going to
2909160	2910640	go to right before planet
2910640	2911840	dot draw. And I'm going
2911840	2913400	to say planet dot. And
2913400	2915080	then this is going to be
2915800	2917640	update position. And I'm
2917640	2918560	just going to pass to it
2918560	2921800	planets. OK. And that's
2921800	2922440	actually all we need to
2922440	2923480	start moving the planet.
2923960	2925520	And let's just run this
2925520	2926560	now and see if it works.
2927560	2929400	OK, so let's see. And we
2929400	2930480	can see that our planets
2930480	2931600	are moving, but we're
2931600	2932120	getting a bit of an
2932120	2932680	issue. And I'm going to
2932680	2934040	explain why that happens.
2934320	2935840	So first of all, the
2935840	2936760	reason why we were seeing
2936760	2938160	our planets like thousands
2938160	2939520	of times on the screen is
2939520	2940520	because we need to
2940520	2942360	refresh the screen by
2942360	2943800	kind of redrawing a
2943800	2945000	background on top of it
2945000	2946160	before we draw everything
2946160	2947000	again. So what's
2947000	2947720	happening right now is
2947720	2948400	we're continually
2948400	2949200	drawing the planets,
2949400	2950120	we're not drawing
2950120	2951200	anything on top of the
2951200	2952240	old planets. And so we
2952240	2953040	keep seeing the old
2953040	2954240	planets. So all I need to
2954240	2955280	do here, say wind up
2955280	2956640	fill. And I'm just going
2956640	2957720	to put inside of here
2958960	2960040	zero, zero, zero, which
2960040	2961200	is just the color black.
2961480	2962720	And now if I run this,
2963360	2963960	you're going to see that
2963960	2965360	the planets just zoom
2965360	2966920	towards the sun. Now,
2967000	2967680	the reason they're
2967680	2968560	zooming towards the sun
2968560	2969320	is because they don't
2969320	2970680	have a velocity in the
2970680	2973160	Y or sorry, in the X is
2973160	2973960	the X. No, it's in the
2973960	2975680	Y direction. So
2975760	2976600	currently, right? If
2976600	2977440	again, if I run this,
2977600	2978520	you see that they just
2978520	2979640	zoom right towards the
2979640	2980600	sun and then keep going.
2980880	2981360	The reason they're
2981360	2982040	doing that is because
2982040	2982800	we don't have another
2982800	2983840	velocity. And that's
2983840	2984840	what would happen if
2984840	2985800	they weren't already
2985800	2987200	moving in another
2987200	2988480	direction. So we need to
2988480	2989680	apply an existing
2989680	2991560	velocity in the Y
2991560	2992640	direction to these
2992640	2993800	planets so that they
2993800	2995360	will be moving around
2995360	2996160	the sun, so that the
2996160	2997360	force attracted them to
2997360	2998640	the sun causes this
2998680	2999560	kind of centripetal
2999560	3001080	motion or the circular
3001080	3002200	motion around the plant.
3003000	3004240	I know this is like
3004240	3005080	there's a lot of physics
3005080	3006040	that I wasn't actually
3006040	3007360	can considering how many
3007360	3008120	physics I would need to
3008120	3009240	explain here. But the
3009240	3010280	idea is for all of these
3010280	3011400	planets, they need some
3011400	3012520	starting velocity in the
3012520	3014040	Y direction. Otherwise,
3014040	3015000	the only force being
3015000	3016560	applied is directly X
3017000	3018320	because of kind of where
3018320	3019200	the planets are placed
3019200	3019880	and the fact that we're
3019880	3021600	just going straight down
3021600	3022480	towards the sun. That's
3022480	3023200	the only force being
3023200	3023960	applied currently,
3024200	3024720	because we don't have
3024720	3026240	another velocity. So
3026240	3027000	let's apply the other
3027000	3028600	velocities. I'm just
3028600	3029320	going to copy them in
3029320	3030800	from my other screen. So
3030800	3031480	this is the earth
3031520	3033440	velocity. I'll pause so
3033440	3034200	we can read them all in
3034200	3035480	a second. This is the
3035480	3038080	Mars velocity. This is
3038080	3039400	the mercury velocity.
3040440	3041840	And then this is the
3041840	3044640	Venus velocity. OK, so
3044640	3046200	the earth Y velocity is
3046200	3047240	twenty nine point seven
3047240	3047960	eight three. This is
3047960	3049280	kilometers per second
3049320	3050520	multiplied by a thousand,
3050520	3051560	which gives us meters
3051560	3052200	per second, because
3052200	3052880	that's what we're using.
3053920	3055640	Excuse me. The Mars
3055640	3056600	velocity, twenty four
3056600	3058080	point zero seven seven
3058080	3059080	multiplied by a thousand
3059080	3060080	again, this meters per
3060080	3061160	second. So kilometers,
3061160	3062120	then we convert to meters
3062680	3063600	forty seven point four
3063600	3065080	for mercury and then
3065080	3065880	negative thirty five
3065880	3067160	point oh two times a
3067160	3069040	thousand for Venus. Now
3069040	3069960	you'll notice that for
3069960	3071000	some of these, we have
3071000	3073640	positive and negative
3073640	3074760	or not positive, not
3074760	3075480	negative, right? Like we
3075480	3076560	have a negative plant, A
3076560	3078040	U moving us to the left
3078320	3078840	and then we have a
3078840	3080280	positive Y velocity.
3081000	3081600	Then for this one,
3081600	3082080	right, we have a
3082080	3083840	negative and positive.
3084120	3084960	And then here we have a
3084960	3085960	positive and this
3085960	3086760	actually needs to be
3086760	3087960	negative to make sure
3087960	3088560	that it's going to be
3088560	3089560	moving in the correct
3089560	3090720	direction. So if you
3090720	3091880	have one, this positive,
3091880	3092760	the other one needs to be
3092760	3093760	negative so that they're
3093760	3094560	all moving in the same
3094560	3096280	direction vice versa.
3096280	3096880	Hopefully that makes
3096880	3097840	sense, but you'll see
3097840	3099000	here when this starts
3099000	3100440	running. OK, so let me
3100440	3101360	actually just run this
3101360	3102600	now and we should see
3102600	3103640	that they orbit. So
3103640	3105400	let's have a look. OK,
3105400	3106120	so there we go. Now we
3106120	3107400	have an orbit. Obviously
3107400	3108080	doesn't look as cool.
3108080	3109040	We're not drawing the
3109040	3110000	orbits, but notice that
3110000	3110880	they're all moving in
3110880	3111760	the same direction and
3111760	3112600	obviously the ones that
3112600	3113680	are closer to the sun
3113960	3115120	are moving faster.
3115880	3116400	Perfect. So the
3116400	3117880	simulation seems to be
3117880	3119720	working. OK, so let's
3119720	3121000	now draw the orbits
3121000	3122760	around and the way that
3122760	3123400	we're going to do that
3123400	3123960	is we're going to use
3123960	3124840	all of the points that
3124840	3125600	we're storing in this
3125600	3126480	orbit list, because
3126480	3127600	every time that we call
3127600	3128280	this, we're going to add
3128280	3129640	a point to the orbit
3129640	3131520	list and we're going
3131520	3132840	to draw them. So what
3132840	3134320	I'm going to do is
3134320	3136440	add something here and
3136440	3141760	say four point in self
3141760	3143120	that orbit and I
3143120	3143880	actually want to draw
3143880	3145040	this. Yeah, I'll draw
3145040	3145840	this before I draw the
3145840	3147600	circle. I'm going to say
3147640	3152040	X Y equals point. And
3152040	3152760	then I'm going to say
3152760	3154520	X is equal to X
3154520	3155960	multiplied by self
3155960	3157680	that scale. And then
3157680	3158160	this is going to be
3158160	3160320	plus width over two.
3162000	3162880	And I'm going to say
3162880	3164640	Y is equal to Y
3165000	3167120	multiplied by self
3167240	3170520	that scale plus height
3170880	3173480	over two. And then
3173480	3174720	we are going to
3175440	3176560	actually store these in
3176560	3178480	an updated points list.
3178480	3178840	We're going to say
3178840	3179840	updated points equal
3179840	3183320	to this updated points
3183760	3186680	dot append point. And
3186680	3187240	then we're going to
3187240	3188120	draw all these points
3188120	3189760	as a line. So we're
3189760	3190040	going to say
3190040	3193160	pie game dot draw dot
3193160	3195760	line. And is it lines?
3195760	3196520	Let me just have a look
3196520	3197240	here to see actually
3197240	3198280	exactly what we need to
3198280	3200040	drew to do. So this is
3200040	3200560	actually going to be
3200560	3201600	lines. Sorry, we're
3201600	3203040	going to pass win. We're
3203040	3204480	going to pass self dot
3204480	3206040	color. We're going to
3206080	3208160	pass false, which means
3208160	3208960	this is not an
3208960	3210400	enclosed line. So we're
3210400	3211040	not going to draw an
3211040	3212400	ending line, essentially.
3212840	3213400	And then we're going to
3213400	3215360	pass the updated points
3216080	3216760	and we'll pass a
3216760	3218400	thickness of two. OK, let
3218400	3219000	me explain what I did.
3219000	3219960	I understand. I kind of
3219960	3220600	just went through this
3220600	3221640	without any explanation.
3222080	3222840	So what I'm doing is
3222840	3223600	I'm getting a list of
3223640	3224560	updated points, which
3224560	3225240	are going to be all of
3225240	3226560	the X, Y coordinates to
3226560	3227480	scale, right? Because I
3227480	3228600	need to get them to scale.
3228840	3229760	Otherwise, I can't draw
3229760	3231120	these properly. So I
3231120	3232160	take them. I do what I
3232160	3232880	need to do to get them
3232880	3233880	to scale exactly what I
3233880	3235120	did right here. And then
3235120	3236920	I update, I make a new
3237080	3237800	list here, updated
3237800	3239760	points and append, sorry,
3239760	3241800	not the point, the new
3241800	3243840	X, Y that I made right
3243840	3245320	here. OK, then I'm going
3245320	3246760	to draw lines. Now, what
3246760	3247680	this does is it takes a
3247680	3248920	list of points, which is
3248920	3250120	right here, and it
3250160	3252480	essentially just draws a
3252480	3254320	bunch of a bunch of lines
3254320	3254960	between the different
3254960	3255920	points, and it doesn't
3255960	3256880	enclose them because I
3256880	3258440	passed false. Now, this
3258440	3259800	is the thickness that I
3259800	3260560	want to draw the lines,
3260560	3261320	which is going to be two
3261320	3262720	pixels. Now, one thing I
3262720	3263600	do need to do is just
3263600	3264440	put an if statement here
3264440	3267480	and say if the length of
3267520	3270240	self dot points is less
3270240	3272200	than two, actually less
3272200	3272840	than or equal to two,
3272840	3273720	because I believe we need
3273720	3274600	at least three points,
3274840	3276320	then I don't want to do
3276320	3277440	any of this. So we're
3277440	3278320	going to say actually
3278320	3279480	the opposite. We're going
3279480	3280840	to say if, yeah, if the
3280840	3281400	line of points is
3281400	3283360	greater than two. So
3283360	3284280	meaning that it is at
3284280	3285560	least three, then it
3285560	3286440	will do this. Just
3286440	3287440	confusing myself there.
3287480	3288080	We need at least three
3288080	3288840	points. So if the line
3288840	3289480	of points greater than
3289480	3290760	two, do all of this.
3291000	3292000	Otherwise, don't do it.
3292080	3292960	That should give us the
3292960	3294400	orbit. So let's see now
3294520	3295280	if we're going to get kind
3295280	3296320	of the orbital ring
3296320	3298040	around. Let's run this
3298320	3299560	and planet object has no
3299560	3300960	actually points. Sorry,
3300960	3302600	it's not points. It is
3302640	3305280	orbit. And I think I did
3305280	3306200	this right. Self that
3306200	3307160	orbit. Yes. OK, self
3307160	3309080	that. Nice. All right.
3309600	3310480	Let's see. There we go.
3310480	3311440	Now we get the orbits
3311440	3312800	being drawn as the
3312800	3314520	planets are moving around.
3315320	3316560	Very nice. So I mean, you
3316560	3317720	can run the simulation as
3317720	3318920	long as you like and see
3318920	3320560	everything working. Now
3320560	3321840	what I want to do is
3321840	3323120	implement the distance to
3323160	3324640	the sun, just to show
3324640	3325800	you that this is not a
3325800	3326920	perfect circle. It is
3326920	3327840	actually elliptical. I
3327840	3328400	know it looks like a
3328400	3329560	perfect circle, but
3329560	3332320	since the scale is so, I
3332320	3333600	guess, small here that
3333600	3334280	we're drawing this out,
3334440	3335880	you can't really see the
3335880	3337120	ellipticalness of the
3337120	3339200	orbits. OK, so now what
3339200	3340160	I want to do is also
3340160	3341320	draw that distance on
3341320	3342440	top. So to do that, I
3342440	3343440	need to initialize a
3343440	3345200	font in Pygame. So I'm
3345200	3346120	just going to say font
3346200	3347880	is equal to Pygame dot
3347880	3350120	font dot S Y S font like
3350120	3351920	that. And I'm going to
3351920	3353520	pass inside of here,
3353520	3355440	comic sans as my font.
3356200	3357240	And for the font size,
3357240	3357640	we'll just go with
3357640	3359200	something like 16. So
3359200	3360080	this is the font you
3360080	3360880	want. And this is the
3360880	3361840	size. That's how you
3361840	3363480	initialize the font. And
3363480	3364440	then what I need to do if
3364440	3365440	I want to draw the
3365440	3367160	distance is I need to
3367160	3368600	say, first of all, if
3368960	3371840	not self dot sun and
3371880	3373160	forgot working in Python.
3373160	3374080	So let's use the actual
3374080	3375120	not because I don't want
3375120	3375840	to draw the distance
3375840	3376480	between the sun and the
3376480	3377240	sun, which is always
3377240	3378400	going to be zero. So I'm
3378400	3379560	going to say if not self
3379560	3382080	dot sun, then we'll say
3382160	3384000	distance underscore text
3384240	3387600	is equal to font dot
3387600	3388560	render. This is how you
3388560	3389520	actually create a text
3389560	3390680	object that you can draw.
3391080	3391720	I'm going to say font
3391720	3392920	render and do an F
3392920	3394040	string. And this is
3394040	3395480	simply going to be the
3395480	3397120	self dot distance to
3397120	3398600	the sun. And then this is
3398600	3399840	going to be in meters. So
3399840	3400640	what I can do is I can
3400640	3401760	divide this value by
3401760	3402880	1000 if I want to get
3402880	3403880	kilometers to make it a
3403880	3405200	little bit smaller. So
3405200	3406440	let's do that divide by
3406440	3407880	1000 in kilometers. I'm
3407880	3408800	also just going to round
3408800	3409920	this just so that we
3409920	3410840	don't get a massive
3410840	3412800	number here. So let's
3412800	3414240	just round this to one
3414240	3415400	decimal point, put that
3415400	3416920	in kilometers. And then
3416920	3418360	we want anti aliasing one,
3418360	3419040	which is the next
3419040	3421120	argument. And then the
3421120	3422720	last argument, I believe
3422760	3424080	is the color that I want
3424080	3425480	to draw this in, which we
3425480	3427240	can just make, I guess
3427240	3427840	it shouldn't be self
3427840	3429480	color. We'll do white.
3430760	3433240	OK, perfect. So that is
3433240	3434440	now the text object
3434440	3435840	created. Again, you have
3435840	3437280	to use a font object to
3437280	3438480	create a text object,
3438520	3439200	which then you can
3439360	3440840	render on the screen. Now
3440840	3441640	I want to draw it on the
3441640	3443080	screen. So I'm going to
3443080	3445880	say win dot bullet. I'm
3445880	3446920	going to pass the
3446920	3448840	distance text. And then
3448840	3449760	the position that I want
3449760	3451120	to draw this at is a
3451120	3452360	little bit complicated.
3453320	3454280	And also, guys, sorry, I
3454280	3455680	just realized I made a
3455680	3456960	little bit of a mistake
3456960	3458960	here. Actually, no,
3458960	3460280	maybe this is OK the way
3460280	3462400	it is. When I define X,
3462400	3463440	Y inside the for loop,
3463440	3464120	this might be
3464120	3465160	interfering with this,
3465160	3466120	although it didn't seem
3466120	3468440	like it was. So I guess
3468480	3469400	we can just proceed, but
3469400	3470360	I don't like having these
3470360	3471240	names shadow each other.
3471320	3472160	OK, we'll just proceed
3472160	3473880	for now, but that's kind
3473880	3474720	of what I was realizing
3474720	3475520	and why I pause there.
3475840	3476640	Anyways, what I'm going to
3476640	3479520	do is draw this at X, Y,
3479800	3480640	and we're referencing
3480640	3482200	this X, Y here, which is
3482200	3482960	going to be the center of
3482960	3484120	the circle. Now, the
3484120	3485120	issue is if I draw this
3485120	3485760	at the center of the
3485760	3486960	circle, since I start
3486960	3487920	drawing the text from
3487920	3489480	the top left hand corner,
3489880	3490760	you'll see actually, let
3490760	3491400	me just run the code
3491400	3491840	and you'll see what
3491840	3492720	happens here when I do
3492720	3494240	this. So you'll notice
3494240	3496640	that the actual text is
3496640	3498400	kind of at the bottom
3498400	3499480	right of the center.
3500000	3500880	Now, that looks really
3500880	3501720	ugly. Obviously don't
3501720	3502560	want that to be there.
3502560	3503440	So what I'm going to do
3503440	3505320	instead is I'm going to
3505320	3506160	make it so it's drawn
3506160	3507040	directly in the center.
3507080	3508200	Now, do that. I take the
3508200	3509840	X and need to subtract
3509840	3510920	this from the distance
3510920	3513120	underscore text dot get
3513120	3514400	underscore width divided
3514400	3516200	by two. So if I take the
3516200	3516920	width of the text and
3516920	3517880	divide that by two and
3517880	3518960	then subtract that from
3518960	3520360	the X that shifts me to
3520360	3521840	the left, some exactly
3521840	3523160	in the middle. And then
3523160	3523840	the same thing with the
3523840	3525080	Y. So why is distance
3525080	3526040	text dot get underscore
3526040	3527760	height over two? Okay.
3528400	3530480	Nice. Hopefully that is
3530520	3532040	all clear. Now, I'm
3532040	3532760	just going to take all
3532760	3533960	of this and we're going
3533960	3535120	to put this below when
3535120	3536120	we're drawing the circle
3536120	3537280	so that it gets drawn on
3537280	3538280	top and we don't have
3538280	3540000	any overlap or we don't
3540000	3540880	have the circle kind of
3540880	3541880	overlapping the text.
3542520	3543520	OK, so let's close that.
3543840	3544480	You guys can pause the
3544480	3545040	video if you want to
3545040	3545680	have a look at this.
3545960	3546720	Let's run the code,
3546720	3547880	though, and let's see
3547880	3548920	what we get. Nice. OK,
3548920	3550080	so now we actually have
3550080	3551800	the text being drawn on
3551800	3552960	top. And for some of
3552960	3553720	the planets, given it
3553720	3554760	is a bit hard to see,
3555520	3557160	but that is all working.
3558000	3559120	Nice. So with that said,
3559120	3560120	I think I'm going to end
3560120	3561160	this tutorial here.
3561160	3562200	This was a lot of stuff
3562200	3563200	to go through. I hope
3563200	3564160	you guys appreciated
3564160	3565160	this and all of the math
3565160	3566160	and explanations.
3566480	3567400	If you did, please make
3567400	3568280	sure you leave a like.
3568520	3569160	Obviously, you can
3569160	3570160	extend this as much as
3570160	3570800	you would like. You can
3570800	3571800	mess around with the scale.
3571800	3572440	You can mess around with
3572440	3573200	the speed. You can
3573200	3574160	change the time step.
3574360	3575080	This is a really, really
3575080	3576240	flexible program.
3576360	3577120	And all of the hard
3577120	3578400	physics and math is done.
3578520	3579400	So if you want to add
3579400	3580200	more planets, you can
3580200	3581360	really easily do that.
3581560	3582440	This is a realistic
3582440	3583520	simulation, something
3583520	3584280	I haven't done on the
3584280	3585360	channel before and that
3585360	3586200	I hope you guys
3586200	3587440	appreciate. All right.
3587440	3588320	With that said, I am going
3588320	3589440	to end the video again.
3589440	3590440	Please like the video,
3590480	3591440	subscribe to the channel
3591440	3592400	and I will see you in
3592440	3593000	another one.
