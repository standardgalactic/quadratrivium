1
00:00:00,000 --> 00:00:29,000
I guess you've learned just about all you need to know about me, but let me repeat a little bit.

2
00:00:29,000 --> 00:00:34,000
I moved into this area about 15 years ago. I'm sorry, I apologize. Your mic's not on.

3
00:00:34,000 --> 00:00:38,000
We're going to have your interest in it again, so we're going to re-rack.

4
00:00:38,000 --> 00:01:06,000
Again, please welcome Chuck Moore.

5
00:01:06,000 --> 00:01:26,000
Thank you for being here. I moved into this area about 15 years ago from Silicon Valley.

6
00:01:26,000 --> 00:01:36,000
I love it here. I moved first to Sierra City in California, which is on the Pacific Crest Trail, a long trail.

7
00:01:36,000 --> 00:01:46,000
I hiked it many times. Then I moved to Assets, which is five miles closer to the ridge of Sierra.

8
00:01:46,000 --> 00:01:52,000
I'm in the inclined village. I'm in the Carson City, and I'm living in Rollington.

9
00:01:52,000 --> 00:01:57,000
All this generation, the Reno, has remained my social city.

10
00:01:58,000 --> 00:02:06,000
The libraries are fantastic, and I'm a great library person.

11
00:02:06,000 --> 00:02:15,000
I've been ever since I started this genre of software development, basically.

12
00:02:16,000 --> 00:02:24,000
I invented the fourth language in 1968. That was at the same time that the sea was invented.

13
00:02:24,000 --> 00:02:32,000
It was a wondrous, creative period for inventing languages, computer languages.

14
00:02:33,000 --> 00:02:48,000
There are three kinds of computer languages.

15
00:02:48,000 --> 00:02:56,000
Based on the notation, C, for instance, has expressions like A plus B equals something.

16
00:02:56,000 --> 00:03:02,000
It's called in-fix notation. The operator is in between the two arguments.

17
00:03:02,000 --> 00:03:10,000
This has a prefix notation, which would be plus AB with the operator coming first.

18
00:03:10,000 --> 00:03:17,000
Fourth is post-fix notation, where you have AB plus.

19
00:03:17,000 --> 00:03:26,000
In my mind, that is by far the superior notation. It leads to much simpler programs.

20
00:03:26,000 --> 00:03:34,000
For instance, in C, you have a lot of parentheses, unless you have an enormous number of parentheses.

21
00:03:34,000 --> 00:03:37,000
In fourth, you have no parentheses.

22
00:03:37,000 --> 00:03:46,000
It's a much more natural language for human beings who did not learn algebra in grade school.

23
00:03:46,000 --> 00:03:52,000
Algebra teaches you to put the operator in between the arguments, which is unnatural.

24
00:03:52,000 --> 00:04:02,000
The operator really goes last. You have a column of numbers, and the sum is at the bottom.

25
00:04:02,000 --> 00:04:05,000
The sum is the last thing you develop.

26
00:04:05,000 --> 00:04:14,000
I developed fourth, and I used it very profitably in my programming.

27
00:04:14,000 --> 00:04:17,000
I convinced a few other people to use it.

28
00:04:17,000 --> 00:04:23,000
Back in the 70s, there was quite a community of thousands of fourth programmers all over the world.

29
00:04:23,000 --> 00:04:26,000
A lot of them in Germany and Russia and China.

30
00:04:26,000 --> 00:04:33,000
As faded, there are still thousands of fourth programmers, but they're invisible.

31
00:04:34,000 --> 00:04:37,000
Partly because fourth can be used to trade secret.

32
00:04:37,000 --> 00:04:44,000
If you write fourth programs, they'll be smaller, faster, and bug-free.

33
00:04:44,000 --> 00:04:51,000
These are attributes that people don't like to share. They like to hold them close.

34
00:04:52,000 --> 00:05:05,000
I took a great pride in writing programs that I could use to do things that I wanted to do.

35
00:05:05,000 --> 00:05:15,000
I had to write programs for other people in order to earn money, but those were not really satisfactory experiences.

36
00:05:15,000 --> 00:05:18,000
It's better to do my thing my way.

37
00:05:19,000 --> 00:05:23,000
One of the first things I did was design circuit boards.

38
00:05:23,000 --> 00:05:28,000
It's very convenient that this slide is out there.

39
00:05:30,000 --> 00:05:42,000
I would like to suggest that some of you, some of the younger of you, might like to write their own software.

40
00:05:42,000 --> 00:05:49,000
Back in the 70s, that's what you did. You could not buy software. There was no software to buy.

41
00:05:49,000 --> 00:05:57,000
I thought the future would be everyone writing their own software using the most efficient language, the simplest language they could,

42
00:05:57,000 --> 00:06:04,000
until Bill Gates came along and persuaded everybody to buy software instead of building it.

43
00:06:05,000 --> 00:06:13,000
In fact, his genius was he persuaded you to buy it over and over and over.

44
00:06:15,000 --> 00:06:22,000
That is the way he corrected the bugs, lack of features, and the original versions.

45
00:06:22,000 --> 00:06:30,000
Fourth software is simpler than C software. What does this program did C?

46
00:06:30,000 --> 00:06:32,000
What makes this program do C?

47
00:06:32,000 --> 00:06:42,000
OS, I think you probably see. There's only two languages in the world today, C, Java, and Fourth.

48
00:06:42,000 --> 00:06:48,000
And you've never heard of Fourth, but it is orbiting Saturn.

49
00:06:49,000 --> 00:06:56,000
The first program I wrote for my own use was the design circuit boards.

50
00:06:56,000 --> 00:07:03,000
All I recorded was a small Fourth program and the ability to draw rectangles.

51
00:07:03,000 --> 00:07:08,000
So that is a good exercise in programming.

52
00:07:08,000 --> 00:07:15,000
If you can find any language on a computer that you have, and they can draw pictures,

53
00:07:15,000 --> 00:07:20,000
draw rectangles and move them around and make circuit boards.

54
00:07:20,000 --> 00:07:33,000
You can see the rectangles, most lines are rectangles, and most, well, these are contacts of octagon, or taxidons, but they could be rectangles.

55
00:07:33,000 --> 00:07:37,000
And you can do something on trivial and you can have a lot of fun doing it.

56
00:07:37,000 --> 00:07:42,000
You can add a lot of color, dark color pictures. That's fun.

57
00:07:43,000 --> 00:07:49,000
The reason for doing that is that current languages can do everything.

58
00:07:49,000 --> 00:07:53,000
C is designed to do everything you want to do.

59
00:07:53,000 --> 00:07:57,000
Windows is designed to let you do everything you want to do.

60
00:07:57,000 --> 00:08:04,000
Fourth does not do that. Fourth lets you do anything, but not everything.

61
00:08:04,000 --> 00:08:07,000
Fourth is what I call extensible.

62
00:08:07,000 --> 00:08:15,000
If you want to add a new command to do something you had not anticipated wanting to do, you can do that easily.

63
00:08:15,000 --> 00:08:19,000
You can build the language in whatever direction you want to go.

64
00:08:19,000 --> 00:08:26,000
Everything isn't there at the beginning, so you don't have that overhead.

65
00:08:26,000 --> 00:08:29,000
Now the overhead is significant.

66
00:08:30,000 --> 00:08:38,000
The design of a circuit board might take a megabyte of code.

67
00:08:38,000 --> 00:08:42,000
And fourth will take a kilobyte.

68
00:08:42,000 --> 00:08:47,000
Three orders of magnitude less code.

69
00:08:47,000 --> 00:08:53,000
Three orders of magnitude, not one percent, but one tenth of one percent of the amount of code.

70
00:08:53,000 --> 00:09:00,000
I have demonstrated this numerous times nobody wants to know.

71
00:09:00,000 --> 00:09:09,000
There's a whole industry built up around large, inefficient buggy software.

72
00:09:09,000 --> 00:09:12,000
It starts with Windows.

73
00:09:12,000 --> 00:09:21,000
It even goes into the standards committee with this bug they found recently in the secure socket layer.

74
00:09:21,000 --> 00:09:27,000
You might say it's shocking, you might say it's fraudulent, you might say it's a conspiracy,

75
00:09:27,000 --> 00:09:31,000
but it's good business because people are willing to pay money.

76
00:09:31,000 --> 00:09:34,000
It makes a lot of jobs.

77
00:09:34,000 --> 00:09:45,000
You don't want a disruptive technology that will put nine million of the ten million programmers out of work.

78
00:09:45,000 --> 00:09:52,000
But you can write your own software, do your own thing, and get a lot of satisfaction from it.

79
00:09:52,000 --> 00:09:58,000
It's a lot more fun than the possible puzzles.

80
00:09:58,000 --> 00:10:04,000
After designing circuit boards, I thought it would be fun to design computers.

81
00:10:04,000 --> 00:10:14,000
So I took the same philosophy I used with circuit boards, and I dragged it down three orders of magnitude and designed a computer chip.

82
00:10:15,000 --> 00:10:18,000
It isn't as hard as you might think.

83
00:10:18,000 --> 00:10:24,000
In fact, it's really quite easy to know what you have to do is draw rectangles.

84
00:10:24,000 --> 00:10:30,000
The fact that the rectangles are tiny instead of macroscopic is not important.

85
00:10:30,000 --> 00:10:36,000
And you lay out these rectangles nicely, three or four layers of them, and you have a computer chip.

86
00:10:37,000 --> 00:10:51,000
To actually make such a chip will cost you from $5,000 to $25 million, depending on exactly what you're doing.

87
00:10:51,000 --> 00:10:56,000
It's really not affordable, but actually making the chip is not important.

88
00:10:56,000 --> 00:11:06,000
What you want to do is design it, and simulate it, and test it in virtual space instead of in real space.

89
00:11:06,000 --> 00:11:15,000
And if you get a really hot design that you like, and you can convince someone else to finance, then you've got a product.

90
00:11:15,000 --> 00:11:24,000
Now, we've got a product. We've got 144 computers on a one centimeter chip.

91
00:11:24,000 --> 00:11:33,000
And a very conservative technology that's what it costs us $5,000 to make in small quantities.

92
00:11:33,000 --> 00:11:39,000
So it can be done. Why would you do that?

93
00:11:40,000 --> 00:11:47,000
Personally, I'm doing it to prove out how everyone else is the few man job.

94
00:11:47,000 --> 00:11:54,000
My software is making 100 kilobytes to design the chip.

95
00:11:54,000 --> 00:12:04,000
Cadence and metro graphics are the standard tools the industry uses to design chips, and they're 100 megabytes.

96
00:12:04,000 --> 00:12:12,000
You hear of programs that contain a million lines of code.

97
00:12:12,000 --> 00:12:21,000
I know the software used in fighter planes, F-22, has more than a million lines of code, several million.

98
00:12:21,000 --> 00:12:25,000
A million lines of code is my following.

99
00:12:25,000 --> 00:12:28,000
You stack the paper this deep.

100
00:12:28,000 --> 00:12:31,000
You can't read a million lines of code.

101
00:12:32,000 --> 00:12:37,000
You've got a thousand people contributing to a million lines of code.

102
00:12:37,000 --> 00:12:40,000
Nobody knows what it does.

103
00:12:40,000 --> 00:12:42,000
No one person does.

104
00:12:42,000 --> 00:12:49,000
It takes the entire corporation to know what that code does.

105
00:12:49,000 --> 00:12:56,000
And no one in that corporation can answer your question or you have to ask it.

106
00:12:57,000 --> 00:13:01,000
You have to trust that somehow it all works together.

107
00:13:01,000 --> 00:13:05,000
And we all know how badly it works.

108
00:13:05,000 --> 00:13:09,000
The Windows comes out every year.

109
00:13:09,000 --> 00:13:13,000
And it's probably a million lines of code.

110
00:13:13,000 --> 00:13:17,000
But it isn't as big as some of the big codes.

111
00:13:17,000 --> 00:13:23,000
Big codes are for weather forecasting, for new test simulation,

112
00:13:23,000 --> 00:13:28,000
for coordinating the motion of all the chips in the world.

113
00:13:28,000 --> 00:13:36,000
There are big problems and there are big data, but they don't require big programs.

114
00:13:36,000 --> 00:13:43,000
You can see this for yourself when you download an app to your smart phone.

115
00:13:43,000 --> 00:13:49,000
Apps are of 10 megabytes of code.

116
00:13:49,000 --> 00:13:52,000
10 megabytes.

117
00:13:52,000 --> 00:13:57,000
If I were to do that in fourth, it would be 10 megabytes.

118
00:13:57,000 --> 00:14:03,000
On the other hand, I would have to program the entire phone in order to get that kind of an advantage.

119
00:14:03,000 --> 00:14:09,000
And so far, I've been unwilling to program on a smart phone.

120
00:14:09,000 --> 00:14:11,000
Maybe I will.

121
00:14:11,000 --> 00:14:18,000
I have 144 little computers that can do it.

122
00:14:18,000 --> 00:14:22,000
You do need memory to store images.

123
00:14:22,000 --> 00:14:24,000
You need memory for large databases.

124
00:14:24,000 --> 00:14:26,000
Memory is a good thing.

125
00:14:26,000 --> 00:14:30,000
But memory is not a good thing to show off the software.

126
00:14:30,000 --> 00:14:35,000
Because 10 megabytes of code has bugs.

127
00:14:35,000 --> 00:14:40,000
10 kilobytes of code does not.

128
00:14:40,000 --> 00:14:46,000
If you want efficiency, if you want compactness, if you want viability,

129
00:14:46,000 --> 00:14:49,000
you want small programs.

130
00:14:49,000 --> 00:14:54,000
That means the program can do everything but it can do anything.

131
00:14:54,000 --> 00:14:58,000
We've written a browser in fourth.

132
00:14:58,000 --> 00:15:00,000
It was small.

133
00:15:00,000 --> 00:15:04,000
It wasn't as small as I would make it because I didn't like the way they were doing it,

134
00:15:04,000 --> 00:15:06,000
but it's possible.

135
00:15:06,000 --> 00:15:10,000
You can write an email application.

136
00:15:10,000 --> 00:15:16,000
The way phones work, the way everything works in this world,

137
00:15:16,000 --> 00:15:19,000
people don't really write software.

138
00:15:19,000 --> 00:15:28,000
They take software packages from various sources and stick them together.

139
00:15:28,000 --> 00:15:31,000
It's the same way to make software.

140
00:15:31,000 --> 00:15:39,000
The software in the cell phone contains a chip which does amazingly many things.

141
00:15:39,000 --> 00:15:46,000
A component from here, a component from there, all glued together.

142
00:15:46,000 --> 00:15:50,000
This uses 10 times as much energy, 10 times as much area,

143
00:15:50,000 --> 00:15:54,000
10 times as much design effort as it needs to,

144
00:15:54,000 --> 00:15:57,000
but that's the way people are doing fixed holidays.

145
00:15:57,000 --> 00:15:59,000
Not conspiracy.

146
00:15:59,000 --> 00:16:02,000
It just seems to be the easiest way to do it.

147
00:16:02,000 --> 00:16:06,000
It's the way the corporate managers want you to do it.

148
00:16:06,000 --> 00:16:08,000
It doesn't have to be that way.

149
00:16:08,000 --> 00:16:13,000
We can do better, smaller, faster, cheaper,

150
00:16:13,000 --> 00:16:19,000
and it's up to the young generation coming along to change some of these trade-offs.

151
00:16:19,000 --> 00:16:23,000
The way you do it is to write a program that does something you're interested in,

152
00:16:23,000 --> 00:16:27,000
show it off a little bit, and prove it.

153
00:16:27,000 --> 00:16:31,000
It's quite true on software.

154
00:16:31,000 --> 00:16:36,000
One of the things about fourth is perhaps to help the back.

155
00:16:36,000 --> 00:16:42,000
It's very easy to write a fourth operating system, fourth system.

156
00:16:42,000 --> 00:16:48,000
It only takes about 10k of code.

157
00:16:48,000 --> 00:16:53,000
Everyone who got interested in fourth wrote their own system.

158
00:16:53,000 --> 00:16:55,000
There's many systems out there.

159
00:16:55,000 --> 00:17:02,000
You want to know about it just to Google and find all kinds of references.

160
00:17:02,000 --> 00:17:07,000
I have a website up there called ColorForce.com.

161
00:17:07,000 --> 00:17:11,000
That's C-O-L-O-R-F-O-R-T-H.

162
00:17:11,000 --> 00:17:16,000
The company I'm working with now is called Greenerays.

163
00:17:16,000 --> 00:17:18,000
They have a website.

164
00:17:18,000 --> 00:17:26,000
There's a fourth.com website, which has been around for as long as the internet.

165
00:17:26,000 --> 00:17:29,000
Lots of information out there.

166
00:17:29,000 --> 00:17:35,000
One thing I'm very pleased to have been involved in.

167
00:17:35,000 --> 00:17:40,000
The conventional way of doing things is not always the right way.

168
00:17:40,000 --> 00:17:45,000
It was probably arranged as a historical accident.

169
00:17:45,000 --> 00:17:47,000
That's kind of true for a fourth.

170
00:17:47,000 --> 00:17:53,000
A fourth came along and became what it is more or less accidentally.

171
00:17:53,000 --> 00:17:58,000
If I had not been a fourth, I don't think it would have been a third.

172
00:17:58,000 --> 00:18:00,000
It's not a popular way of doing things.

173
00:18:00,000 --> 00:18:04,000
There's no great opportunity working there.

174
00:18:04,000 --> 00:18:06,000
It's turned out to be a good thing.

175
00:18:06,000 --> 00:18:08,000
I'm very proud of it.

176
00:18:08,000 --> 00:18:10,000
Thank you for listening to me.

