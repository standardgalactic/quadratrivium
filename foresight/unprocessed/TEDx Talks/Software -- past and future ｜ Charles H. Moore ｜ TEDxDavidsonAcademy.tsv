start	end	text
0	29000	I guess you've learned just about all you need to know about me, but let me repeat a little bit.
29000	34000	I moved into this area about 15 years ago. I'm sorry, I apologize. Your mic's not on.
34000	38000	We're going to have your interest in it again, so we're going to re-rack.
38000	66000	Again, please welcome Chuck Moore.
66000	86000	Thank you for being here. I moved into this area about 15 years ago from Silicon Valley.
86000	96000	I love it here. I moved first to Sierra City in California, which is on the Pacific Crest Trail, a long trail.
96000	106000	I hiked it many times. Then I moved to Assets, which is five miles closer to the ridge of Sierra.
106000	112000	I'm in the inclined village. I'm in the Carson City, and I'm living in Rollington.
112000	117000	All this generation, the Reno, has remained my social city.
118000	126000	The libraries are fantastic, and I'm a great library person.
126000	135000	I've been ever since I started this genre of software development, basically.
136000	144000	I invented the fourth language in 1968. That was at the same time that the sea was invented.
144000	152000	It was a wondrous, creative period for inventing languages, computer languages.
153000	168000	There are three kinds of computer languages.
168000	176000	Based on the notation, C, for instance, has expressions like A plus B equals something.
176000	182000	It's called in-fix notation. The operator is in between the two arguments.
182000	190000	This has a prefix notation, which would be plus AB with the operator coming first.
190000	197000	Fourth is post-fix notation, where you have AB plus.
197000	206000	In my mind, that is by far the superior notation. It leads to much simpler programs.
206000	214000	For instance, in C, you have a lot of parentheses, unless you have an enormous number of parentheses.
214000	217000	In fourth, you have no parentheses.
217000	226000	It's a much more natural language for human beings who did not learn algebra in grade school.
226000	232000	Algebra teaches you to put the operator in between the arguments, which is unnatural.
232000	242000	The operator really goes last. You have a column of numbers, and the sum is at the bottom.
242000	245000	The sum is the last thing you develop.
245000	254000	I developed fourth, and I used it very profitably in my programming.
254000	257000	I convinced a few other people to use it.
257000	263000	Back in the 70s, there was quite a community of thousands of fourth programmers all over the world.
263000	266000	A lot of them in Germany and Russia and China.
266000	273000	As faded, there are still thousands of fourth programmers, but they're invisible.
274000	277000	Partly because fourth can be used to trade secret.
277000	284000	If you write fourth programs, they'll be smaller, faster, and bug-free.
284000	291000	These are attributes that people don't like to share. They like to hold them close.
292000	305000	I took a great pride in writing programs that I could use to do things that I wanted to do.
305000	315000	I had to write programs for other people in order to earn money, but those were not really satisfactory experiences.
315000	318000	It's better to do my thing my way.
319000	323000	One of the first things I did was design circuit boards.
323000	328000	It's very convenient that this slide is out there.
330000	342000	I would like to suggest that some of you, some of the younger of you, might like to write their own software.
342000	349000	Back in the 70s, that's what you did. You could not buy software. There was no software to buy.
349000	357000	I thought the future would be everyone writing their own software using the most efficient language, the simplest language they could,
357000	364000	until Bill Gates came along and persuaded everybody to buy software instead of building it.
365000	373000	In fact, his genius was he persuaded you to buy it over and over and over.
375000	382000	That is the way he corrected the bugs, lack of features, and the original versions.
382000	390000	Fourth software is simpler than C software. What does this program did C?
390000	392000	What makes this program do C?
392000	402000	OS, I think you probably see. There's only two languages in the world today, C, Java, and Fourth.
402000	408000	And you've never heard of Fourth, but it is orbiting Saturn.
409000	416000	The first program I wrote for my own use was the design circuit boards.
416000	423000	All I recorded was a small Fourth program and the ability to draw rectangles.
423000	428000	So that is a good exercise in programming.
428000	435000	If you can find any language on a computer that you have, and they can draw pictures,
435000	440000	draw rectangles and move them around and make circuit boards.
440000	453000	You can see the rectangles, most lines are rectangles, and most, well, these are contacts of octagon, or taxidons, but they could be rectangles.
453000	457000	And you can do something on trivial and you can have a lot of fun doing it.
457000	462000	You can add a lot of color, dark color pictures. That's fun.
463000	469000	The reason for doing that is that current languages can do everything.
469000	473000	C is designed to do everything you want to do.
473000	477000	Windows is designed to let you do everything you want to do.
477000	484000	Fourth does not do that. Fourth lets you do anything, but not everything.
484000	487000	Fourth is what I call extensible.
487000	495000	If you want to add a new command to do something you had not anticipated wanting to do, you can do that easily.
495000	499000	You can build the language in whatever direction you want to go.
499000	506000	Everything isn't there at the beginning, so you don't have that overhead.
506000	509000	Now the overhead is significant.
510000	518000	The design of a circuit board might take a megabyte of code.
518000	522000	And fourth will take a kilobyte.
522000	527000	Three orders of magnitude less code.
527000	533000	Three orders of magnitude, not one percent, but one tenth of one percent of the amount of code.
533000	540000	I have demonstrated this numerous times nobody wants to know.
540000	549000	There's a whole industry built up around large, inefficient buggy software.
549000	552000	It starts with Windows.
552000	561000	It even goes into the standards committee with this bug they found recently in the secure socket layer.
561000	567000	You might say it's shocking, you might say it's fraudulent, you might say it's a conspiracy,
567000	571000	but it's good business because people are willing to pay money.
571000	574000	It makes a lot of jobs.
574000	585000	You don't want a disruptive technology that will put nine million of the ten million programmers out of work.
585000	592000	But you can write your own software, do your own thing, and get a lot of satisfaction from it.
592000	598000	It's a lot more fun than the possible puzzles.
598000	604000	After designing circuit boards, I thought it would be fun to design computers.
604000	614000	So I took the same philosophy I used with circuit boards, and I dragged it down three orders of magnitude and designed a computer chip.
615000	618000	It isn't as hard as you might think.
618000	624000	In fact, it's really quite easy to know what you have to do is draw rectangles.
624000	630000	The fact that the rectangles are tiny instead of macroscopic is not important.
630000	636000	And you lay out these rectangles nicely, three or four layers of them, and you have a computer chip.
637000	651000	To actually make such a chip will cost you from $5,000 to $25 million, depending on exactly what you're doing.
651000	656000	It's really not affordable, but actually making the chip is not important.
656000	666000	What you want to do is design it, and simulate it, and test it in virtual space instead of in real space.
666000	675000	And if you get a really hot design that you like, and you can convince someone else to finance, then you've got a product.
675000	684000	Now, we've got a product. We've got 144 computers on a one centimeter chip.
684000	693000	And a very conservative technology that's what it costs us $5,000 to make in small quantities.
693000	699000	So it can be done. Why would you do that?
700000	707000	Personally, I'm doing it to prove out how everyone else is the few man job.
707000	714000	My software is making 100 kilobytes to design the chip.
714000	724000	Cadence and metro graphics are the standard tools the industry uses to design chips, and they're 100 megabytes.
724000	732000	You hear of programs that contain a million lines of code.
732000	741000	I know the software used in fighter planes, F-22, has more than a million lines of code, several million.
741000	745000	A million lines of code is my following.
745000	748000	You stack the paper this deep.
748000	751000	You can't read a million lines of code.
752000	757000	You've got a thousand people contributing to a million lines of code.
757000	760000	Nobody knows what it does.
760000	762000	No one person does.
762000	769000	It takes the entire corporation to know what that code does.
769000	776000	And no one in that corporation can answer your question or you have to ask it.
777000	781000	You have to trust that somehow it all works together.
781000	785000	And we all know how badly it works.
785000	789000	The Windows comes out every year.
789000	793000	And it's probably a million lines of code.
793000	797000	But it isn't as big as some of the big codes.
797000	803000	Big codes are for weather forecasting, for new test simulation,
803000	808000	for coordinating the motion of all the chips in the world.
808000	816000	There are big problems and there are big data, but they don't require big programs.
816000	823000	You can see this for yourself when you download an app to your smart phone.
823000	829000	Apps are of 10 megabytes of code.
829000	832000	10 megabytes.
832000	837000	If I were to do that in fourth, it would be 10 megabytes.
837000	843000	On the other hand, I would have to program the entire phone in order to get that kind of an advantage.
843000	849000	And so far, I've been unwilling to program on a smart phone.
849000	851000	Maybe I will.
851000	858000	I have 144 little computers that can do it.
858000	862000	You do need memory to store images.
862000	864000	You need memory for large databases.
864000	866000	Memory is a good thing.
866000	870000	But memory is not a good thing to show off the software.
870000	875000	Because 10 megabytes of code has bugs.
875000	880000	10 kilobytes of code does not.
880000	886000	If you want efficiency, if you want compactness, if you want viability,
886000	889000	you want small programs.
889000	894000	That means the program can do everything but it can do anything.
894000	898000	We've written a browser in fourth.
898000	900000	It was small.
900000	904000	It wasn't as small as I would make it because I didn't like the way they were doing it,
904000	906000	but it's possible.
906000	910000	You can write an email application.
910000	916000	The way phones work, the way everything works in this world,
916000	919000	people don't really write software.
919000	928000	They take software packages from various sources and stick them together.
928000	931000	It's the same way to make software.
931000	939000	The software in the cell phone contains a chip which does amazingly many things.
939000	946000	A component from here, a component from there, all glued together.
946000	950000	This uses 10 times as much energy, 10 times as much area,
950000	954000	10 times as much design effort as it needs to,
954000	957000	but that's the way people are doing fixed holidays.
957000	959000	Not conspiracy.
959000	962000	It just seems to be the easiest way to do it.
962000	966000	It's the way the corporate managers want you to do it.
966000	968000	It doesn't have to be that way.
968000	973000	We can do better, smaller, faster, cheaper,
973000	979000	and it's up to the young generation coming along to change some of these trade-offs.
979000	983000	The way you do it is to write a program that does something you're interested in,
983000	987000	show it off a little bit, and prove it.
987000	991000	It's quite true on software.
991000	996000	One of the things about fourth is perhaps to help the back.
996000	1002000	It's very easy to write a fourth operating system, fourth system.
1002000	1008000	It only takes about 10k of code.
1008000	1013000	Everyone who got interested in fourth wrote their own system.
1013000	1015000	There's many systems out there.
1015000	1022000	You want to know about it just to Google and find all kinds of references.
1022000	1027000	I have a website up there called ColorForce.com.
1027000	1031000	That's C-O-L-O-R-F-O-R-T-H.
1031000	1036000	The company I'm working with now is called Greenerays.
1036000	1038000	They have a website.
1038000	1046000	There's a fourth.com website, which has been around for as long as the internet.
1046000	1049000	Lots of information out there.
1049000	1055000	One thing I'm very pleased to have been involved in.
1055000	1060000	The conventional way of doing things is not always the right way.
1060000	1065000	It was probably arranged as a historical accident.
1065000	1067000	That's kind of true for a fourth.
1067000	1073000	A fourth came along and became what it is more or less accidentally.
1073000	1078000	If I had not been a fourth, I don't think it would have been a third.
1078000	1080000	It's not a popular way of doing things.
1080000	1084000	There's no great opportunity working there.
1084000	1086000	It's turned out to be a good thing.
1086000	1088000	I'm very proud of it.
1088000	1090000	Thank you for listening to me.
