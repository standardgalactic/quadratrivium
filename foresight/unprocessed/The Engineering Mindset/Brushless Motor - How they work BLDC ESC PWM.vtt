WEBVTT

00:00.000 --> 00:08.000
This is a brushless motor. It is often used for creating lift and it uses three phase electricity.

00:08.000 --> 00:16.000
I'm going to show you how they work and even how to control one with an Arduino in this video which is sponsored by Brilliant.org.

00:16.000 --> 00:22.000
You can get a 20% discount by using the link below. More about that later.

00:22.000 --> 00:26.000
A brushless DC motor looks something like this.

00:26.000 --> 00:33.000
They come in various sizes and designs but they all convert electrical energy into mechanical energy.

00:33.000 --> 00:40.000
We can use that mechanical rotation, for example on a drone, to spin the blades and create lift.

00:40.000 --> 00:46.000
We find these motors used in PC cooling fans. This CD drive uses a brushless motor

00:46.000 --> 00:51.000
and even this battery power drill also uses a brushless motor.

00:51.000 --> 00:55.000
What makes this different to a standard DC motor?

00:55.000 --> 01:03.000
When we compare the two, we can notice that both have magnets in the outer casing and both have coils of wire at the centre.

01:03.000 --> 01:08.000
However, with a standard DC motor, we find these brushes at the rear.

01:08.000 --> 01:18.000
This refers to the arms and the carbon blocks which rub against the commutator plates and allow electricity to flow through the coils while it rotates.

01:18.000 --> 01:27.000
The gaps in the commutator plates cause the coils to energise and de-energise in a certain order to cause the rotation.

01:27.000 --> 01:33.000
Because the brushes rub against the commutator plates, they wear down over time due to friction.

01:33.000 --> 01:36.000
So the motor will need to be repaired or replaced.

01:36.000 --> 01:40.000
When we look at a brushless motor, there are no brushes.

01:40.000 --> 01:46.000
That's because in this design, the outer casing rotates and the coils remain stationary.

01:46.000 --> 01:53.000
As there are no brushes, there is very little friction which makes the motor more efficient and it lasts longer.

01:53.000 --> 01:58.000
We can also get in-runner motors where the rotor turns inside.

01:58.000 --> 02:04.000
But most applications use out-runner motors where the rotor turns outside the motor.

02:04.000 --> 02:12.000
In-runner motors typically rotate faster but out-runner motors have much more torque which is why they are more commonly used.

02:12.000 --> 02:16.000
So we will only discuss this version in this video.

02:16.000 --> 02:25.000
With a standard DC motor, we have just two wires and it rotates as soon as we connect it to a sufficient electrical supply.

02:25.000 --> 02:29.000
However, a brushless motor has three wires.

02:29.000 --> 02:32.000
These connect to an electronic speed controller.

02:32.000 --> 02:38.000
A main controller sends signals using pulse width modulation to the speed controller.

02:38.000 --> 02:49.000
The speed controller increases, maintains or decreases the speed of the motor by controlling when current can flow through the three wires and into the motor.

02:49.000 --> 02:52.000
We will see how it does that later on in the video.

02:52.000 --> 02:59.000
By the way, we have covered how DC motors work in detail previously and you can even learn how to build your own motor too.

02:59.000 --> 03:01.000
Links down below for that.

03:02.000 --> 03:09.000
When we look at the brushless motor, we notice there are three wires entering the base of the motor.

03:09.000 --> 03:13.000
These are usually coloured differently to represent the different phases.

03:13.000 --> 03:19.000
The base of the motor has some threaded holes which are used to mount the motor to a surface.

03:19.000 --> 03:22.000
There is also a clip which holds the shaft in position.

03:22.000 --> 03:28.000
The shaft runs the length of the motor and it also extends out the front of the motor.

03:28.000 --> 03:33.000
We can connect attachments to this to make use of the rotation.

03:33.000 --> 03:39.000
Notice when the shaft rotates, it also rotates the front half of the motor casing.

03:39.000 --> 03:43.000
Therefore, this is the rotor and this part is the stator.

03:43.000 --> 03:49.000
The rotor and the stator both have holes in their casing to vent heat which is generated by the coils.

03:49.000 --> 03:53.000
That's because if too much heat was to build up inside,

03:53.000 --> 04:00.000
it will melt the protective enamel insulation of the wires causing a short circuit which will destroy the motor.

04:00.000 --> 04:05.000
If we remove the clip on the back, we can remove the shaft and the rotor to look inside.

04:05.000 --> 04:13.000
Looking at the stator, we can see the shaft passes through a set of bearings to ensure a smooth low friction rotation.

04:13.000 --> 04:17.000
There are 12 teeth on the stator in this design.

04:17.000 --> 04:22.000
These are made of laminated thin sheets of metal which are electrically isolated from each other.

04:22.000 --> 04:26.000
This is to reduce the eddy currents inside the motor.

04:26.000 --> 04:32.000
These are caused by the magnetic field and waste energy by creating heat instead of rotation.

04:32.000 --> 04:38.000
We can also notice that there are 12 coils of wire grouped into three different sets.

04:38.000 --> 04:42.000
The wire is enameled which electrically insulates it.

04:42.000 --> 04:48.000
This means the current has to pass through the entire length of the wire to reach the other end.

04:48.000 --> 04:53.000
If it was not insulated, then the current would take the shortest path possible

04:53.000 --> 04:58.000
and we wouldn't get a strong magnetic field so the motor wouldn't work.

04:58.000 --> 05:01.000
Each set of coils connects to a different phase.

05:01.000 --> 05:03.000
There are three phases in total.

05:03.000 --> 05:10.000
If we look at the back of the stator, we can see the ends of each coil are joined to another set of coils.

05:10.000 --> 05:16.000
The wires from the speed controller then connect to these points to provide the electrical current.

05:16.000 --> 05:22.000
Notice that in this design the two adjoining coils are wrapped in opposite directions.

05:22.000 --> 05:25.000
Clockwise and anticlockwise.

05:25.000 --> 05:28.000
We will see why later on in this video.

05:28.000 --> 05:31.000
This is the most common method for wiring a brushless motor.

05:31.000 --> 05:34.000
It is known as a DL-RK winding.

05:34.000 --> 05:37.000
We see it creates a delta connection.

05:37.000 --> 05:41.000
There are other configurations but this is the most common.

05:41.000 --> 05:49.000
Looking now inside the rotor, we find a number of high strength permanent magnets surrounding the inner surface.

05:49.000 --> 05:55.000
These are actually magnetized meaning the polarity is different on either side.

05:55.000 --> 05:59.000
These are arranged so that the polarity alternates with each magnet.

05:59.000 --> 06:05.000
Notice that in this example there are 14 magnets but 12 stator coils.

06:05.000 --> 06:11.000
So we have 12 stator poles and 14 magnetic poles which is a common design.

06:11.000 --> 06:15.000
The difference prevents the magnets and coils from aligning.

06:15.000 --> 06:20.000
The rotor constantly rotates by trying to align but it will be unable to.

06:20.000 --> 06:23.000
Let's understand how the motor works.

06:23.000 --> 06:26.000
But first where have you seen brushless motors used?

06:26.000 --> 06:31.000
Let me know in the comment section down below.

06:31.000 --> 06:34.000
So now let's understand how this motor works.

06:34.000 --> 06:46.000
But don't forget to check out brilliant.org where you can take courses on everything from electricity and magnetism, classical mechanics, scientific thinking, computer science and even cryptocurrency.

06:46.000 --> 06:54.000
Their hands on interactive problem solving makes learning fun and easy to visualize so you can master essential skills with confidence.

06:54.000 --> 07:00.000
Personally I've been enjoying refreshing my knowledge on relativity with interesting problems to solve

07:00.000 --> 07:02.000
and I think you'll enjoy this too.

07:02.000 --> 07:08.000
That's why our viewers can get started for free by visiting brilliant.org forward slash the engineering mindset

07:08.000 --> 07:11.000
all by clicking the link in the video description down below.

07:11.000 --> 07:16.000
The first 200 people to do so will get 20% off their annual premium membership.

07:16.000 --> 07:20.000
I highly recommend you check this out, links down below.

07:20.000 --> 07:27.000
The brushless motor has three wires which connect onto the three sets of coils inside the motor.

07:27.000 --> 07:37.000
This is also connected to a controller which sends a pulse width modulation signal to the speed controller telling it what speed to rotate the motor.

07:37.000 --> 07:43.000
The signal could be sent from something like an Arduino or a simple servo tester.

07:43.000 --> 07:48.000
We will learn how to control the speed of the motor with an Arduino later on in this video.

07:48.000 --> 07:53.000
Speed controllers are usually a very compact design like this one.

07:53.000 --> 07:59.000
But we can also get larger units like this one where you can see the components more easily.

07:59.000 --> 08:04.000
The speed controller uses six MOSFETs which are a type of electronic switch.

08:04.000 --> 08:10.000
The MOSFET will block the flow of current unless we provide a voltage to the control pin.

08:10.000 --> 08:14.000
This then closes the switch and allows current to flow through it.

08:14.000 --> 08:19.000
The MOSFETs are grouped into three pairs, one pair for each phase.

08:19.000 --> 08:23.000
These are connected across the positive and the ground of the battery.

08:23.000 --> 08:31.000
The pulse width modulation signal is received by the internal controller which controls the MOSFETs, turning them on and off.

08:31.000 --> 08:36.000
The coils inside the stator then connect to the phases between the MOSFETs.

08:36.000 --> 08:46.000
The motor uses coils of wire because when we pass a current through the coil it generates an electromagnetic field which we can see with a compass.

08:46.000 --> 08:56.000
We can reverse the polarity by simply reversing the direction of current or we can change the orientation of the coil.

08:56.000 --> 09:04.000
Notice the coils in the motor are in opposite directions. This creates opposite polarities making the motor stronger.

09:04.000 --> 09:10.000
We know that magnets interact by pushing and pulling. We can use them to cause rotation.

09:10.000 --> 09:15.000
We can control the coils to precisely control the rotation also.

09:15.000 --> 09:25.000
So if we energize a phase it will push and pull the magnets in the rotor at multiple points causing rotation and giving us a very powerful motor.

09:25.000 --> 09:32.000
The controller receives a pulse width modulation signal. This means voltage is sent in pulses down the wire.

09:32.000 --> 09:39.000
The width of the pulse can be varied. This is similar to when we press a switch to turn a light on.

09:39.000 --> 09:49.000
The longer we press the switch the longer the pulse will be. These pulses are sent every 20 milliseconds so it sends them 50 times per second.

09:49.000 --> 09:53.000
We can see the pulse by connecting the device to an oscilloscope.

09:53.000 --> 10:01.000
If I zoom in we can see the width of the pulse there is as I turn the dial which is why it's called pulse width modulation.

10:01.000 --> 10:08.000
If I change the voltage we see the pulse becomes a higher voltage but it doesn't change the width of the pulse.

10:08.000 --> 10:17.000
The internal controller receives these pulses and will open and close the MOSFETs in a certain order to energize the coils in the stator.

10:17.000 --> 10:27.000
The speed it does this depends on the width of the pulse received. This causes a rotating electromagnetic field which occurs in six stages.

10:27.000 --> 10:37.000
There are only three sets of coils so the direction of current reverses each time it is energised and so the polarity also alternates.

10:37.000 --> 10:42.000
The faster the MOSFETs open and close the faster the rotation will be.

10:42.000 --> 10:49.000
We can see using this oscilloscope that as the width of the pulse increases the motor turns faster.

10:49.000 --> 10:56.000
So the width of the pulse determines the speed the MOSFETs turn on and off which changes the speed of the motor.

10:56.000 --> 11:00.000
The speed controller needs to know the orientation of the motor.

11:00.000 --> 11:12.000
Some motors use a Hall Effect Sensor which detects the change in polarity of the magnets and from this it generates a unique pattern which the controller can map the rotor position from.

11:12.000 --> 11:22.000
However most hobby motors like this one do not use Hall Effect Sensors. Instead the speed controller measures the back EMF.

11:22.000 --> 11:30.000
We know that when we pass a current through a coil it generates an electromagnetic field which can move another magnet.

11:30.000 --> 11:36.000
But equally if we move a magnet past a coil the coil will generate a voltage.

11:36.000 --> 11:41.000
The speed controller does not energize all the coils at the same time.

11:41.000 --> 11:49.000
When the magnets move past a non-energized coil it induces a voltage in that coil which is sent back to the controller.

11:49.000 --> 11:52.000
We call this back EMF.

11:52.000 --> 11:59.000
So the speed controller monitors the coils for when it is supplied electricity or generates electricity.

11:59.000 --> 12:04.000
From this it creates a unique pattern and determines the position of the rotor.

12:04.000 --> 12:13.000
When you start the motor it makes some noises and rotates small amounts. This is to determine the orientation.

12:13.000 --> 12:21.000
So let's now build this circuit and learn how to control a brushless motor with an Arduino.

12:21.000 --> 12:27.000
We are going to learn how to control a brushless motor with an Arduino and a potentiometer.

12:27.000 --> 12:36.000
For that we need an Arduino, a brushless motor, a potentiometer, a speed controller, a power supply and some wires.

12:36.000 --> 12:40.000
Next we need to connect the brushless motor to the speed controller.

12:40.000 --> 12:46.000
Then connect the white signal wire of the speed controller to port 9 of the Arduino.

12:46.000 --> 12:52.000
The Arduino will send a pulse width modulation signal to the speed controller through this wire.

12:52.000 --> 12:57.000
Then connect the red wire from the speed controller to the positive rail of the breadboard.

12:57.000 --> 13:00.000
This will provide around 5 volts to the breadboard.

13:00.000 --> 13:05.000
Then connect a red wire from the positive rail to the 5 volt port of the Arduino.

13:05.000 --> 13:07.000
This will power the Arduino.

13:07.000 --> 13:13.000
Then connect a black wire from the Arduino ground port to the ground rail of the breadboard.

13:13.000 --> 13:19.000
Then connect a black wire from the ground rail to the speed controller ground port.

13:19.000 --> 13:22.000
Next we will need to connect the potentiometer.

13:22.000 --> 13:28.000
So we connect the left side to the positive rail and then the right side to the negative rail.

13:28.000 --> 13:33.000
Finally we connect the center pin to port A0 of the Arduino.

13:33.000 --> 13:38.000
Now connect your Arduino to the computer to start writing the program.

13:38.000 --> 13:42.000
You can download my Arduino code for free, links down below for that.

13:42.000 --> 13:44.000
Then we type this code.

13:44.000 --> 13:49.000
This tells the Arduino to use the pre-built servo instruction library.

13:49.000 --> 13:54.000
A servo is a different type of motor but it will work fine for this project.

13:54.000 --> 13:59.000
If you want to learn how that motor works you can find a link in the video description down below.

13:59.000 --> 14:04.000
Then we type this which creates an object called ESC.

14:04.000 --> 14:07.000
Although you can call it whatever you wish.

14:07.000 --> 14:12.000
Then we type this line of code which creates a variable integer called speed.

14:12.000 --> 14:20.000
Then we type this line of code which tells the Arduino that the object called ESC is connected to pin 9.

14:20.000 --> 14:25.000
It will send a pulse width modulation signal out of pin 9.

14:25.000 --> 14:30.000
The pulses will be between 1ms and 2ms in length.

14:30.000 --> 14:37.000
The motor will still rotate without this last part but the motor will stall when the potentiometer is at its maximum.

14:37.000 --> 14:40.000
So we will include this in the code.

14:40.000 --> 14:42.000
Then we type this.

14:42.000 --> 14:51.000
This takes a voltage reading from the potentiometer on port A0 and it associates this with a variable we created called speed.

14:51.000 --> 14:57.000
We are sending 5 volts through the potentiometer and reading the voltage we get back from this

14:57.000 --> 15:01.000
which varies depending on the position of the potentiometer.

15:01.000 --> 15:08.000
The Arduino receives this and converts the voltage into a number between 0 and 1023.

15:08.000 --> 15:12.000
When it receives 5 volts it is 1023.

15:12.000 --> 15:14.000
When it is 0 volts it is 0.

15:14.000 --> 15:18.000
The servo library we are using doesn't understand these numbers.

15:18.000 --> 15:22.000
It only understands values between 0 and 180.

15:22.000 --> 15:26.000
So we are creating a scale here to convert between them.

15:26.000 --> 15:34.000
Then the final part of the code takes this value and sends it as a pulse width modulation signal to the speed controller.

15:34.000 --> 15:42.000
So we send this code to the Arduino, then we disconnect the USB cable and connect the power supply to the speed controller.

15:42.000 --> 15:52.000
The motor will create a few beeps as it configures itself and then after a short while we can start to control the speed of the motor using the potentiometer.

15:52.000 --> 16:00.000
Check out one of these videos on screen now to continue learning about electronics engineering and I'll catch you there for the next lesson.

