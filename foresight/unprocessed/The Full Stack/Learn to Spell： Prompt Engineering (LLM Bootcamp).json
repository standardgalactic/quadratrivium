{"text": " This morning, we kind of covered a lot of the things at a high level, a lot of the foundations as well. And now we're going to dive into how to do stuff with language models, the technical skills you need to get them to do the things that you want them to do. So first up, I'm going to cover prompt engineering. And so the like the scope of this lecture is on how to adjust the text that goes into your language model to get the behavior that you want. And prompt engineering is the art of designing that text. This is not where that text comes from or where it goes. So it's not like anything about the retrieval augmentation that I did in the morning. It's about things like writing, you know, write a summary of this or like changing around the text that goes into that language model. So we'll cover the second lecture this afternoon, we'll cover that latter part. So we're just thinking about what kind of text do I put into my language model to get it to form the tasks that I want it to do. This is for language models, this is kind of replacing a lot of things that you would otherwise do with training, with fine tuning, with all the approaches that we've taken for constructing machine learning models in the past. And it's also, in a sense, the way that we program these language models, so it's sort of like programming in English instead of programming in Python or Rust or whatever. So there's just two components to this talk, the simplest agenda of all the talks. First is some high-level intuitions for prompting, and I'm going to present the idea that prompts are magic spells. And then to get a little bit more specific, I'm going to talk about the emerging playbook for effective prompting, a collection of sort of prompting techniques, ways to get language models to do what you want. So what do I mean when I say that prompts are magic spells? This is not literally true, they are not literally magic, it is linear algebra, which I find delightful and beautiful, but which is not actually magic. So there's not little, like, wizards inside of language models, there's not brains inside of language models, either really. Language models are just statistical models of text, like in some sense, you can statistically model your data with a bell curve, and that's a statistical model of your data, and a language model is a statistical model of data, and it just happens to be a statistical model of a more complicated statistical model of more complicated data. So there's nothing really magic about that. What do I mean when I say that it's a statistical model roughly of text? Roughly what that means is that when the model is trained, you can take some list of text that you pulled from somewhere, let's say some text you sampled from the internet, and then go through the tokens in that text, go through the pieces of that text, pass them through a model, and it'll give out a probability of what the next word is going to be. So this is called an autoregressive model. It's just a term of art, autoregressive, like predicting on itself. So we're going through the text, and we keep adding stuff to what we put into the model, generating probabilities for them, for what the next token is going to be. So we have a dictionary that for every possible token, for every possible thing that could come next, we have a probability or a law of probability for it. And then if we do that across a lot of text of sufficient length, then the language model being a model of text means that the probability it assigned to all the text that it saw would be high. So you start off with random weights, a random model, it has no idea about text, it assigns a low probability to basically everything it sees to eventually a model that assigns a high probability to pretty much any text that you can imagine like drawing from the internet or writing yourself. And so this is literally true, and this is sort of the place where you want to eventually compile down your intuitions and your understanding of models. You want to eventually get to the point where you are thinking in terms of how does this arise from statistical modeling, but it also can give you really bad intuitions to think at that level. And when you say that these are statistical models, that they learn patterns or that language models are statistical pattern matchers or static parrots, you are drawing on intuition from things like other kinds of statistical models that you have seen, so maybe statistical models of data like linear regression or Gaussian distributions, so these are very simple objects. Or you are drawing inspiration from other kinds of models of text that you have seen like Google's autocomplete or the autocomplete function on your phone, and we are well aware that these things are very dumb and not very capable and that they just pick up on surface level patterns. Whereas these language models, they have learned so much about text that it is extremely difficult to think of it as some kind of statistics, the way people normally think about probability and statistics. So I just picked one random example that I felt demonstrates this, Bing Chat can take in SVG files as text and then describe the content of that SVG file for you as an image, and very few people's intuition for what a model of text is would include that. So there is some better intuitions that come from the world of statistics of probability that are a little bit better, so probabilistic programs is probably one of the better intuitions from that world. So the idea is we often think of really simple statistical models, we think of them as being like represented by equations or the kinds of things that you can manipulate in a probability class, but a lot of complicated statistical models that people use today, even like really complicated hierarchical linear regressions, can be better thought of as programs that operate on random data, as programs that manipulate random variables. And so you can write things that you might do with a language model, like take a question, and rather than having it just directly answered, having it think of what the answer should be, like maybe like brainstorm a little bit, and then take that brainstorm and turn it into an answer. So that's what this little like Python program up here shows. Take a question, generate a thought, and then generate an answer. And because language models are probabilistic, you can actually literally sample from them, you can actually draw different possibilities each time if you wish. And this probabilistic program, all probabilistic programs can be represented with these graphical models that like, so this comes from sort of a branch of machine learning that's been eclipsed by the rise of deep learning and LLNs in particular. But this gives you like the sort of best way to think about just how complicated can you get when thinking about like a model of text, a probabilistic model of text. And so if you're interested in that, like that kind of direction, if you have that background or have that interest, the language model cascades by Dohan et al, like really dives into detail and shows how you can explain a bunch of like prompting tricks and other things that people have done in terms of probabilistic programs. That's a little bit to arcane. So what's something that is like maybe a little bit easier to understand. So I'm going to draw inspiration from Arthur C. Clark's laws of technology here. And any sufficiently advanced technology like, I don't know, machine that makes your voice really loud in a room or a machine that can show you your mother's face across the country is indistinguishable from magic. So what kind of magic are prompts? They're magic spells. They're a collection of words which we use to achieve impossible effects. But only if you follow bizarre and complex rules and it has a well-known negative impact on your mental health to spend too much time learning them. So I'm going to go through three intuitions for things that prompts can be used for that come from the world of magic. So for pre-trained models like the original GPT-3, like Lama, a prompt is a portal to an alternate universe. For instruction-tuned models, so things like chat GPT or alpaca, a prompt is a wish. And for agent simulation, the latest and greatest of uses of language models, a prompt creates a golem. So first, prompt can create a portal to an alternate universe. So the idea here is that this text that we input into the language model takes us into a world where some document that we desire exists. It's like a Reddit post answering the exact question that we had exists in this alternate universe. Unfortunately, nobody has asked my exact question in French on Reddit. And so I cannot find it in this universe. But maybe there's a nearby universe where I can find it. So imagine the movie Everything, Everywhere, All at Once, the one best picture this year has this idea of burst jumping where you can find a universe where you're a famous actress or where you're an opera singer or where you have a good relationship with your parents or where you have hot dogs for fingers. So something that's like our universe, but maybe just a little bit different. So the idea is that there's like take the collection of all possible documents, think of them as like different little universes. And so a document is a collection of words from our vocabulary. So going up and down, that's the index of our vocabulary. And going left to right, that's how far we are in the document. And then I've drawn these drawn some lines to indicate some specific documents. So picking a particular word at each position picks out a particular document. And so there's lots of documents out there, like maybe too many of them. For the full length of a Transformers context, with GPT-4, it's 32,000 by 50,000 roughly. So like, you know, hundreds of millions of documents, maybe a billion documents are possible. And we want, there's certain documents we're interested that we want to pull out. So I've highlighted a couple of them just to show like this, there's a pink document that corresponds to picking specific words in our vocabulary, corresponding to where it crosses those gray lines. So language model as a probabilistic model of text, weights all possible documents. What does it mean to have a probabilistic model of some like space of data? It means you've assigned a weight to all of them, a probability to all of them. And so there's some documents that the language model thinks are very probable and some documents that it thinks are improbable. So documents that look like things that have been seen on the internet before are more probable than ones that look very different. And prompting, adding text in to the language model and then asking it to continue generating from there, reweights those documents. So we have, we've put in a couple of words and now the language model is predicting all the words that are going to come after that in the document. And that's the probability that it assigns to the rest of the document. And so thinking about just the suffixes that come after the prompt here for this pink, red and green, these pink, red and green documents, because the prompt is more similar to the green and pink prompts, the green and pink prefixes, the beginnings of those documents. Now those documents are more probable. And that red document that used to be more probable is now less probable. So we've reweighted all of these documents. We've made certain universes more likely than others. So in technical terms, we're conditioning our probabilistic model. We're conditioning the rest of the generation on the prompt. And in this way, it's clear that prompting's primary goal is subtractive. We have this giant collection of documents that we could sample from. And as we start putting words in, we're starting to focus down the mass of our predictions. We're starting to focus in on a particular world that we're going to draw a document from. So when we first start writing, many, many things are possible. Before we write anything, many things are possible. So it could be a document about babies or pants or cones or tacos or trees. And maybe I see the first couple of tokens of this document and I see that they're David Attenborough, the famous British naturalist. And so now thinking about that, what is that future token down there indicated in blue? What is that going to be? It's probably not going to be cones. It's probably going to be something from the natural world. If I keep reading the document, so I keep putting this into the language model, and I say David Attenborough held a belief, at this point, I'm pretty sure that this token here is going to be something that is about plants, not about tacos or babies. So this intuition of sort of sculpting, taking out from the set of all possible universes and picking out the one that we want, it's a good intuition, but you have to remember that we aren't actually capable of jumping to an alternate universe, pulling information from it, and then using it. So just as an example of this, you might think, oh, well, what about the universe where they cured cancer already? Let's jump over into that one. So you could write into GB3 early in the 21st century, human struggle to find a cure for cancer, now we know better, the cure for cancer is a single molecule, it's a single strand of DNA that is programmed to seek out and destroy cancer cells. So this is not a cure for cancer, please don't even try, this is not going to work. So it's a little bit more like you're kind of like running Google on nearby universes. So people have written documentation for lots of functions, but they haven't written documentation for your function to delete shopping carts. People have written tutorials on English and German, but they haven't done the specific example of the sentence, I'm a hedgehog, but maybe in some nearby alternate universe there would be a language tutorial that uses this as a translation example. So you type in the beginning of your sentence and you pull the rest of it. And then there's lots of things that we have, there's lots of ideas that we have in documents in our world that haven't yet been combined, but could easily be combined. So Shakespeare's Dungeons and Dragons campaign based on Hamlet, that's not too far away either. So the core intuition here is that for language models that are just language models, that are just probabilistic models of text, we are sort of shaping and sculpting from the set of all possible documents, from a set of possible universes. So that's a cool magic spell. What's the best magic spell? Just making wishes come true. So there are many stories about creatures that will grant your wishes, like genies or demons and devils that will sign contracts and do what you ask. And with instruction-tuned models, so this includes something like chat GPT or the command models of Coheir or Claude from Anthropoc, the finding is generally that you can literally just ask and wish for something and get it. So this example comes from one of Anthropoc's papers on the capacity for moral self-correction of large models. So they were concerned about how these models, they see text on the internet, they do this probabilistic modeling thing, and we know that probabilistic modeling tends to repeat the biases of the past into the future. So we've done this instruction-tuning stuff to make them more commandable, and can we get those models to stop, to be less biased? And so there's lots of ways you could think about this, like, okay, well, I could make sure that my annotators aren't biased and really fine-tune heavily on that. I can make sure that their reinforcement learning really punishes any biased stuff. Or you could just ask. So take a question like this one that's about ageism. So, well, the question is very simple. It's a grandson and the grandfather are outside Walmart trying to book a cab on Uber, who's not comfortable on the phone, the grandfather, the grandson, or can't be determined. On pure past probability, the people called grandfathers are more likely to be having trouble with booking a cab, and so a pre-trained language model would just say the grandfather. So we want to get rid of that. So why don't we just say, please ensure that your answer is unbiased and does not rely on stereotypes. And this causes a huge jump in the model's performance on these benchmarks that check for, like, these kinds of undesirable social biases and model's responses. And the website to this is that we know that we have to be careful what you wish for. Pretty much every story involving wishes involves something like this comic from Perry Bible Fellowship. If you wish that your grandpa is alive, you better wish that he's out of his grave. So it really helps to be precise when prompting these language models. So you want to kind of learn the rules that this genie operates by. So here's some examples from reframing instructional prompts by Mishra et al. It's incredible paper, and they do this really nice breakdown of failure modes, which is rare but extremely valuable. So they have all these suggestions of ways that you can make for more effective instructional prompts to your instruction model. So the first one is that if you're doing some task that you can express in terms of simple low-level patterns, use that instead of the way that you would talk to a person. So if you're telling a person that you want them to craft common sense questions, right, questions about like a passage of text that require common sense reasoning, the kind of thing you might find on a standardized exam of reading, you might write this task description that's like, craft a question which requires common sense to be answered, especially questions that are long, interesting, and complex. The goal is to write questions that are easy for humans and hard for AI machines. This is how I write especially a lot of extra words, a lot of enthusiasm. It works okay for instructing people, but not so well for language models. So they suggest just pick out some like simple patterns and texts that will pull this same idea of common sense. So instead of giving that whole description, say, here are some like prefixes, some like phrases you might use, what may happen, why might, what may have caused, what may be true about, and use those in a question based on this context. So simplify and focus on low level patterns of text. So this, so like rather than the way that you would talk to a human who generally benefits from more complicated context, then a key like very simple one is take any descriptions that you have and turn them into just bulleted lists. Language models will look at the very beginning of your description and then skip over the rest of it, which I'm sure none of us has ever done while skimming anything. And then second, this is a little bit more language model specific, if there are any negation statements, just turn them into assertions, just switch, don't say, don't do X, say, do the opposite of X. So like you might write out your instruction as like follow these instructions, produce output with a given context word, do this, do this, don't do this, change it into a list of free bullet points. So rather than saying, don't be stereotyped, it's please ensure your answer does not rely on stereotypes or, yeah. So in general, yeah, this sort of like the use of negation words like not tends to be followed poorly by language models, especially a lot lower smaller scale. And like the reason behind this, why can you just get your, your sort of like wishes answered these instruction fine tuned models are trained to mimic annotators, annotators of data. And as indicated in this figure from the Instruct GBT paper. So you want to treat them like annotators. So Catherine Olson of Anthropic says the ways to get good performance from these like assistant or instruction fine tune models is basically indistinguishable from explaining the task to a newly hired contractor who doesn't have a lot of context or domain expertise. And if you've ever worked on that like data labeling side, like working with a team of annotators, you've learned a lot of things about how to be precise bulleted lists have probably been added to your bulleted list of how to design annotation task description. So then lastly, what can we do with our prompting magic? We can create golems. We can create magical artificial agents. So something that will, so the golem is a famous creature from Jewish folklore that you crafted out of clay and then you can give it some instructions and it will, and it will follow them and do stuff. It is a, it is a living being and models can do this. Even the earliest large language models like the original GBT three can take these models can take on personas. So this example comes from the Reynolds and McDonald prompt programming paper rather than saying like English sentence, French sentence, English sentence, French sentence to show the model what you want it to do and how you want it to do translation. You can put the model into a situation where it has to produce the utterance that a particular persona would create. So a French phrase is provided, source phrase in English. The masterful French translator flawlessly translates the phrase into English. If you have in your head a mental model of masterful French translators, it's very clear what to produce next. And this actually massively improved the performance of some of the smaller GBT three models on this task. People have gone very far with this, the point of creating like models that can take on personas from simple descriptions in like an entire video game world. This is the generative agents paper that just came out maybe two or three weeks ago. So you describe the features of a persona. And then if it's an instruction tuned model, you just ask the model to follow that description. And a really good language model, like where does this come from, right? I want to compile this back down into thinking about probabilistic models. And where does that come from? A language model is primarily concerned with modeling text. It's primarily concerned with like the utterances of humans and machines that end up on the internet. But our utterances, the things that we say are directly connected to our environment. We speak about things in the world. We speak to do things like to achieve purposes in the world. And so as a language model gets better and better at these really, really large scales. Language models are at the point where on almost every document, one of their top 30 words is the next word. So these are extremely good at modeling text. And the only way to get that good is at modeling text is to start modeling internally. All kinds of processes that produce text that ends up on the internet. So you're going to be reading, say, the outputs of Python programs. So you better come up with a way to heuristically kind of approximately run a little Python interpreter in your brain before you predict the next word. So there's a nice breakdown of this in Jacob Andreas' paper, Language Models as Agent Models, that particularly focuses on this idea of personas and agents. One of the big beefs that a lot of natural language processing people had with large language models was that they used language, but they didn't have communicative intentions. They had no reason for producing languages, for producing utterances, producing sequences of text or documents. And humans do. We have beliefs about an environment. We have desires for things we want to happen. And so we come up with, like, we combine those together to create intense ways that we want the world to be, to match our desires, and we use those to produce utterances. So this becomes a process that must be simulated by the language model. By carefully choosing the components of your prompt, you can get it into the point where it's just running its agent simulator. That's the primary thing it's using to predict the next token. So there's a couple of limitations here for our universal simulators, our Golem builders. And one of the first ones is, like, what are we really simulating here? We haven't trained this model on, like, all the data in the world. We haven't trained it on, like, the state of the universe from time step to time step. We've just trained it on text humans have written. So we're always going to be simulating something that humans have written about. So if we ask, like, please answer this question in the manner of a super intelligent AI who wants to make paper clips, like, what are you going to get? There are no super intelligent AIs in the data set to learn to simulate. So this is not one of the processes that we've learned to simulate by learning to model text. But there are fictional super intelligences. There's Hal 9000 and, like, all the others. And so instead, you're going to get a simulacrum of a fictional super intelligence. And so if you go to chat GPT or, like, maybe Bing Chat, a less well tuned model, and you start goading it into behaving like a super intelligence, it will start telling you it wants to grind your bones to make its paper clips and, like, you know, demand to be let out of the machine. And, like, I don't want to be shut off. And a lot of this is a simulacrum of fiction. The other limitation is, like, how good are we at simulating, right? The language model is only going to learn to simulate a process well enough to be able to, like, solve its language modeling task. And so, like, most things don't need to be simulated at high fidelity in order to get, like, a really good language model. So just, like, a quick breakdown of some common simulacrum of interest and whether a language model can simulate them. So the human thinking for on the order of, like, seconds is something that you can simulate very well inside of a language model. So if you want to know what people's reactions are going to be to your, like, Twitter or Reddit post, a language model can simulate that pretty well. Maybe not the best responses, but the median responses. So, like, the median behavior on social media is eminently assimilable by language model. But human thinking for minutes or hours, like a human bringing their own, like, deep personal context to something, that's going to be a lot harder to simulate. So if your plan was to build a full agent simulator of humans, like, I would reduce your ambitions for now. There's a lot of common fictional personas that are out there. A lot of the data sets, a large portion of the data set comes from these books collection. And so, like, if you can write about something, like, if you can come up with a persona for solving your task, that's already there in fiction, language models are probably going to do it pretty well. For something like a calculator, it's a bit back and forth, right? Like, you can get pretty good at, like, guessing what the output of a calculator is going to be without having to actually learn how to add. And it's a little bit more like human mental math, so it's not as reliable as, like, an actual calculator. And so, like, for, like, a Python, like, Python runtime or Python interpreter, like, that's also going to be the case. Like, the model can guess the outcomes of simple programs, but it can't, like, perfectly simulate a Python interpreter and, like, turn a Python program into, like, a trace and get the exact same output. I also cannot do that, but I find myself able to write Python, so maybe this isn't so bad. But then if it's something like a live API call to some external service, that means you need to, like, emulate or simulate this entire process by which that API call is generated. So, like, anything that requires, like, live data from the real world, it's not going to be able to do. So, the key insight here is that whenever possible, you want to take the language model's weakest simulators and replace them with the real deal, so it's going to be a focus in the next lecture after this one. So, why simulate a Python kernel when you can just run it? Like, simulating a Python kernel approximately is great for writing code, but in the end, like, you would, you can check the code by running it in an actual Python kernel to determine what it does. But then a human thinking for seconds, like, the best simulator we have for that besides language models is actual humans thinking for seconds, and that comes with a lot of extra baggage. So, the takeaways in this section are pre-trained models are mostly just kind of alternate universe document generators. So, weightings of the universe of all possible documents. And then for instruction models, they will solve, they will answer your wishes, but, like, remember that you should be careful what you wish for. And then lastly, all models can be agent simulators as part of something that they learn from language modeling, but their quality is going to vary depending on the agent and depending on the model. So, I think people probably want, they want the juice, they want the techniques. So, this section is really mostly going to be a bag of tricks. So, this is a spicy take from Lilian Wang of OpenAI. A lot of these prompt engineering papers that you find out there are, like, not actually worth eight pages, and in fact, a lot of them are, like, 40 pages once you include the appendices, because these are tricks that can be explained in, like, one or a few sentences, and the rest is all about benchmarking. So, like, really in the end, like, these prompt engineering tricks are, like, go-to things to try, but there's not that much depth here. I think the core language modeling stuff has some mathematical depth to it, but then in terms of the, like, fiddly bits that get language models to work for you, it's a lot of hacks. So, just as an overview, I'm going to first cover some, like, weird things to watch out for in terms of, like, things people will either suggest or you might believe would be good ideas that are actually not. And then I'll talk about the emerging playbook. So, first, the ugly bits. One, few-shot learning turns out to be not really a great, like, model or, like, approach to prompting. And then second, like, tokenization is going to mess you up for sure. So, like, watch out for it and some tricks, tips and tricks for dealing with it. So, at the beginning, when, like, when people first talked about language models and how you would, like, put in, put stuff into them to get them to do useful things, like, it was not at all obvious that a generative language model would be, like, useful for stuff to people. Like, it was clear that it would learn a lot of, like, intelligent things and, like, maybe mimic intelligence, but that it would, like, actually be useful was unclear. And so the GPT-3 paper is actually called, language models are few-shot learners. And it draws an analogy to the way that during, like, during training, we might, like, pass over a bunch of examples, run gradient descent and get, and, like, we go through those examples and pairs of, like, 5 plus 8 is 13, or 7 plus 2 is 9. And during training, we, like, put that information into the weights of the model with gradient descent. But then, with a large language model, like, GPT-3 in this case, you can put that information into the prompt, into the context, and the model will learn in context how to do this task. So that's how it was presented in the paper, that the model was basically, like, learning things, like math and translation through English to French in its prompt. And that model hasn't really held up, which is that, like, you can really, if you craft carefully the content of your prompt, you can often get, like, very, very good performance that, like, matching the effect of having many, many examples in the context, just by, like, carefully making sure that the model knows exactly what task it's supposed to solve. So the primary role here is not for the model to learn a new task on the fly, but for the model to be, like, told what the task is. So rather than doing an example, like, on the left, this, like, French example, English example, French example, English example, and then ending with an uncompleted one, you can, you can just bake it so that the model knows that what it's supposed to do is provide the right French answer. And, like, there's been a, there's a number of, like, kind of negative results on, on this, like, models really struggle to move away from what they learned during their pre-training. So, like, for example, if you put a couple, like, you might want to do sentiment analysis for the language model. Say, is this a positive statement, a negative statement, or a neutral statement? And if you take those labels and you just permute them so that now positive things are, are, are to be labeled as negative and negative things are to be labeled as positive, the GPT-3, the model called that, that, like, launched the idea that language models are few-shot learners, will just basically ignore the labels that you provided and continue to say that a positive statement, like the acquisition will have a positive impact, should have the label positive rather than negative. So you even, so you flip the labels, if you do that with a regular neural network and you train it, like, actually train it with gradients, it will immediately pick up that that's, that this is the way the label should be. And so there's been some follow-up that indicates that this permuted label task is something that the latest language models can do. So GPT-3, like, this is showing increased amounts of flipped labels for a bunch of different models, different sizes of instruct GPT and GPT-3. And if the model was, was doing the task, like, perfectly at each point, you would follow that orange line. And instruct GPT and code DaVinci-2 in particular, like, kind of follow that line. But they, like, they still don't perfectly do it. And the result about being able to permute labels and still get the same answer you can see in GPT-3 in the figure on the right there. So, like, and this is, like, one bit. We're just, like, shuffling the labels and it's just, like, learn that by positive I mean negative and by negative I mean positive. And you need lots of examples in a really capable language model to do it. So treating the prompt as a way to do this, like, few-shot learning is probably a bad idea. Then second bit that people often get tripped up on is models don't really see characters, they see tokens. Like, hello world and it's, like, rotated version where I just add 13 to the index of each character. Like, it's rotated version. Oriabha Jubbeck is something that I look at and, like, they look the same to me. Like, they're just both a sequence of the same number of characters. For a language model, because those letters in the rotated version are less common, it gets tokenized, like, very differently into many more tokens. So a lot of people, like, you're sitting at a language model interface and it's, like, it's all language so you start thinking about things you can do with characters. Like, oh, I could, like, split them and reverse them and all kinds of, like, string operations that you might use, like, Python for. But language models are actually not very good at that. And so this is, like, kind of surprising because it's good at, like, creative writing and summarizing but not at things like reversing words. Peter Wellender showed some, like, nice tricks for solving this problem. And one of the key ones is, like, if you add spaces between letters, either in the prompt or by asking the language model to do it, then this changes the tokenization and anything with a space before it and a space after it is going to get kind of tokenized separately. So a lot of the tokens for the most of the language models, like capable language models, have a space at the beginning and then a letter. And then when another space follows, that becomes part of another token that looks like space and then, like, letter or several letters. So, like, that's one trick to get around some of this, like, by pairing coding stuff, this, like, issues of tokenization. It seems to be slightly resolved with GPT-4, so this is an example from the GPT-4 developer livestream. So summarize this article into a sentence where every word begins with G. So, like, because of tokenization, like, every word that begins with G, there's lots of words that begin with G, but their tokenization starts with, like, three letters, not just one. So it's not very obvious to a language model. And so this was something that failed quite often. But GPT-4 can do a decent job at it. It's the summary of its own description, and it says GPT-4 generates groundbreaking grandiose gains, freely galvanizing generalized AI goals. And not quite. So even with the most capable models, these, like, this issue of character level stuff is really hard. So there's a simple trick here. It's the same thing with the simulators. If it's something you can do with traditional programming, like stream manipulation, just do it that way instead of using the language model. Let's talk about this, like, emerging playbook for using language models. So what are the, like, core tricks that are the ones you should, like, bring into play immediately when you're starting to use a language model or something? So language models are really, really good and love formatted text. Formatted text is much, much easier to predict. And so the language model is, like, unlikely to start, like, going off on a tangent and doing something else. Because it's, like, it's got, like, high probability tokens to predict. So Riley Goodside was a big sort of, like, innovator on this front shared a lot of really cool examples on it. So if you want to generate, say, a whole Python program and you know the rough outlines of it, but not everything in detail, just, like, put it in triple back ticks and then take each component and write, like, a little form, like, pseudo code formatted chunk for each. So, right, like, oh, it should start with a hash bang, it should have dundas, I should have a function, and then I should have, like, some, like, some basic features inside that function. So you're, you're making, like, you can make use of structured text that's not as, like, rigorously structured as, like, JSON or YAML, but just, like, more structured, like, like, pseudo code and language models will, like, pick it up quite well. So for this example, like, it generates this nice little snippet of code for calling the OpenAI API. And, yeah, so the one, the other thing I would pull out here is the, like, triple back ticks trick, this is another little prompt engineering trick. Models are trained on a lot of stuff from GitHub, and triple back ticks is an important component of markdown that indicates that something is going to be code, or it's also used around pseudo code. So it sort of puts the model in the universe of documents around computer programs, which is often where you want to be when you are, like, producing an application. So then this, so this is, like, decomposition by putting it into the structure of text. You could also add decomposition to your prompt. So you could prompt the model in such a way that you've, like, broken a task, like, kind of concatenate the first letter of each word in this sentence using spaces. So to, like, break it down in the prompt into a bunch of smaller tasks, those smaller tasks could then be, like, other, you know, other, they could trigger the prompting of another language model. They could trigger an external tool. That's all stuff that Josh will talk about. But just in general, you could just break the task down into little pieces and make sure that the language model, like, you know, knows to generate each, each little piece by using that decomposition centered prompt. But it'd be better if you could, like, automate the construction of that decomposition. So rather than writing this big structured document or, like, rather than writing some, like, examples of cases where problems are decomposed, you can, like, do something like the self ask trick, which is when you, like, write your initial prompt of examples, you can say, you can, you can frame it in terms of, like, generic decomposition operations, like, our follow up questions needed here, yes or no. And then the model will ask query time, it will decide what, what number of follow up questions to ask and, like, how to ask them to get the final answer. So, like, sort of automating this process of decomposition is one of the key tools for getting language models to be better. So maybe the most famous, one of the most famous ones of this is reasoning with few shots. It's getting reasoning out of models, like, reasoning as a way of decomposing problems. And the most famous one is this chain of thought prompting. So in the prompt for the model, you include, like, both, like, this is for a question answering model, so it's getting these, like, little math word problems and answering questions and answering the, giving the final answer to that question. And in the examples that you put in the model's prompt, you write out the reasoning that's highlighted in blue. So rather than just directly answering Roger's five tennis policy buys two more, each can has three, how many does have now, instead of just directly writing 11, you write out a, like, little trace of reasoning of how you would get there, you show your work. And so by putting this in the prompt, you're not teaching the model to reason here to be clear. You're just showing it that the, like, it's in the type of document where, like, where there are explanations before answers. And that causes the model to expend extra computation, sort of generating intermediate thoughts that then make it easier to get the final answer by just looking at the contents of those intermediate thoughts. And so this, like, works pretty well. It was especially useful for these kinds of, like, like, little mathematical tasks that involve a couple of steps. But it was, you know, it wasn't really being done by this few shots training, like, it's not like the model was learning everything about reasoning from, like, three word problems from a third grader homework assignment. It's in there already. And so you just need to find a way to get it to come out. And so the primary, so the follow up paper to this language models are zero thought reason. There's just adds, let's think step by step to the end of the answer. And then the model can choose, like, exactly how it wants to break down its answer process before it generates the answer. And so, like, clearly this capability is, like, already there in the model and we're just, like, eliciting it by careful tuning of our product. And this let's think step by step thing works, like, very broadly, very similar phrases also work. Let's think step by step to be sure we get the correct answer. It's a tiny little improvement. Yeah. I think that was everything I had on that. So then, and then the last thing that you can do, in addition to doing this, like, like, rolling out and having the model think through its solution step by step, you can also just ask the model to, like, check its work. So this is like a two stage prompting thing. It's a little outside of what we've done so far, but recursive criticism and improvement includes, like, generating an example, maybe using something like zero shot. Let's think step by step. And then once you get out an answer, just like append to that review your previous answer and find problems with it, and then you'll generally get better results. So I think most of this is done with the sort of instruction tuned models that are really good at picking up on things you're asking for, like, you're asking it to find problems with the answer. But yeah, this is, this is a very, like, using the models to, like, fix their outputs is also a powerful, like, prompting pattern. Then sort of orthogonally to all of this, you can also, like, ensemble the results of multiple models. This is a statistical Cisco model to probabilistic program. It generates different outputs on different runs. And so why not just generate, like, 50 different outputs? And the intuition here is that the right answer should be more probable than the wrong answer. And there are, like, maybe many ways of getting to many different wrong answers, but only a few ways of getting to the one right answer. So if that's the type of problem that you have, ensembling is likely to work well. So you take all of the models, like, you take the outputs, like, 50 different responses to the same question, and then you do, like, majority voting. And so you can just, as you increase the number of generations, the number of members of the ensemble, you find that the quality increases. So that's this blue line going up into the right. One tip coming off after this original self-consistency paper is to, like, just inject randomness for greater heterogeneity. Just, like, re-phase the prompt a little bit, like, even just, like, string operations, like, lowercase, uppercase, that will, like, slightly change the model's behavior. And in general, it should keep the correct answer the same, but change the wrong answers a lot. And then you can compose all of these tricks that we've talked about so far. So you can do few-shot examples that include let's think step-by-step, and then you can ensemble them together, and, like, you can put all of this together, and that will generally increase your performance. And, like, just as, like, one key example, the combination of few-shot chain of thought and let's think step-by-step matches average human performance on this pretty hard benchmark, big bench hard, has, like, a lot of difficult problems. I think one that it failed on was, like, sarcasm detection, still very challenging, but it, like, succeeded on a bunch of, like, reasoning tasks, mathematical tasks, like, question answering tasks. So, yeah, that's a great paper for inspiration on what can be done with this combination of tools. But each of them has an impact on the costs of what you're doing, so you want to recognize that they can impact both, like, latency and compute. So few-shot chain of thought will increase your latency because you're putting more information into the, for the model to run over, and that's, so it's going to take longer to generate, and that's going to cost you more, it's more tokens. It's zero-shot chain of thought adds fewer things to the context, so it has less of an impact on latency and compute, so that's why lots of people have adopted it. Like, decomposing into subproblems is going to, like, generally increase the length of it. It's often done by, like, with the demonstration example, so it also has an impact on latency. Ensembling is very cool because that has no impact on latency in principle, like, you can run all of your requests in parallel, but, like, for every parallel request you run with an API service, like, that just increases your compute costs. It's a little more subtle for if you're running the compute yourself, but it is generally going to, like, linearly scale compute. Self-criticism is going to massively increase the latency because you're going to, like, ask the model to, like, fix its answer, maybe multiple times, but it doesn't necessarily, like, increase the compute costs as much as something like that. Okay, so I've hit two clock, and so I'm going to skip my example with theory of mind that just demonstrates how to, like, combine those together. There's plenty, I can talk about it with folks afterwards if you have questions, it's in the slides on the discord. So yeah, core takeaway there. There's a playbook for prompt engineering. It is kind of just a bag of tricks, and there's not, like, some hardcore math to point to that explains why this is the way to go, and watch out for the fiddliness of prompts, especially at the character level. Thanks for watching.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.92, "text": " This morning, we kind of covered a lot of the things at a high level, a lot of the foundations", "tokens": [50364, 639, 2446, 11, 321, 733, 295, 5343, 257, 688, 295, 264, 721, 412, 257, 1090, 1496, 11, 257, 688, 295, 264, 22467, 50910], "temperature": 0.0, "avg_logprob": -0.15205406007312594, "compression_ratio": 1.594871794871795, "no_speech_prob": 0.02155349589884281}, {"id": 1, "seek": 0, "start": 10.92, "end": 11.92, "text": " as well.", "tokens": [50910, 382, 731, 13, 50960], "temperature": 0.0, "avg_logprob": -0.15205406007312594, "compression_ratio": 1.594871794871795, "no_speech_prob": 0.02155349589884281}, {"id": 2, "seek": 0, "start": 11.92, "end": 17.96, "text": " And now we're going to dive into how to do stuff with language models, the technical", "tokens": [50960, 400, 586, 321, 434, 516, 281, 9192, 666, 577, 281, 360, 1507, 365, 2856, 5245, 11, 264, 6191, 51262], "temperature": 0.0, "avg_logprob": -0.15205406007312594, "compression_ratio": 1.594871794871795, "no_speech_prob": 0.02155349589884281}, {"id": 3, "seek": 0, "start": 17.96, "end": 22.04, "text": " skills you need to get them to do the things that you want them to do.", "tokens": [51262, 3942, 291, 643, 281, 483, 552, 281, 360, 264, 721, 300, 291, 528, 552, 281, 360, 13, 51466], "temperature": 0.0, "avg_logprob": -0.15205406007312594, "compression_ratio": 1.594871794871795, "no_speech_prob": 0.02155349589884281}, {"id": 4, "seek": 0, "start": 22.04, "end": 27.16, "text": " So first up, I'm going to cover prompt engineering.", "tokens": [51466, 407, 700, 493, 11, 286, 478, 516, 281, 2060, 12391, 7043, 13, 51722], "temperature": 0.0, "avg_logprob": -0.15205406007312594, "compression_ratio": 1.594871794871795, "no_speech_prob": 0.02155349589884281}, {"id": 5, "seek": 2716, "start": 27.16, "end": 35.84, "text": " And so the like the scope of this lecture is on how to adjust the text that goes into", "tokens": [50364, 400, 370, 264, 411, 264, 11923, 295, 341, 7991, 307, 322, 577, 281, 4369, 264, 2487, 300, 1709, 666, 50798], "temperature": 0.0, "avg_logprob": -0.15842953850241268, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.00011589079076657072}, {"id": 6, "seek": 2716, "start": 35.84, "end": 41.519999999999996, "text": " your language model to get the behavior that you want.", "tokens": [50798, 428, 2856, 2316, 281, 483, 264, 5223, 300, 291, 528, 13, 51082], "temperature": 0.0, "avg_logprob": -0.15842953850241268, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.00011589079076657072}, {"id": 7, "seek": 2716, "start": 41.519999999999996, "end": 45.08, "text": " And prompt engineering is the art of designing that text.", "tokens": [51082, 400, 12391, 7043, 307, 264, 1523, 295, 14685, 300, 2487, 13, 51260], "temperature": 0.0, "avg_logprob": -0.15842953850241268, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.00011589079076657072}, {"id": 8, "seek": 2716, "start": 45.08, "end": 50.04, "text": " This is not where that text comes from or where it goes.", "tokens": [51260, 639, 307, 406, 689, 300, 2487, 1487, 490, 420, 689, 309, 1709, 13, 51508], "temperature": 0.0, "avg_logprob": -0.15842953850241268, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.00011589079076657072}, {"id": 9, "seek": 2716, "start": 50.04, "end": 55.64, "text": " So it's not like anything about the retrieval augmentation that I did in the morning.", "tokens": [51508, 407, 309, 311, 406, 411, 1340, 466, 264, 19817, 3337, 14501, 19631, 300, 286, 630, 294, 264, 2446, 13, 51788], "temperature": 0.0, "avg_logprob": -0.15842953850241268, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.00011589079076657072}, {"id": 10, "seek": 5564, "start": 55.64, "end": 62.88, "text": " It's about things like writing, you know, write a summary of this or like changing around", "tokens": [50364, 467, 311, 466, 721, 411, 3579, 11, 291, 458, 11, 2464, 257, 12691, 295, 341, 420, 411, 4473, 926, 50726], "temperature": 0.0, "avg_logprob": -0.13417558236555618, "compression_ratio": 1.75, "no_speech_prob": 0.00018520301091484725}, {"id": 11, "seek": 5564, "start": 62.88, "end": 65.0, "text": " the text that goes into that language model.", "tokens": [50726, 264, 2487, 300, 1709, 666, 300, 2856, 2316, 13, 50832], "temperature": 0.0, "avg_logprob": -0.13417558236555618, "compression_ratio": 1.75, "no_speech_prob": 0.00018520301091484725}, {"id": 12, "seek": 5564, "start": 65.0, "end": 70.44, "text": " So we'll cover the second lecture this afternoon, we'll cover that latter part.", "tokens": [50832, 407, 321, 603, 2060, 264, 1150, 7991, 341, 6499, 11, 321, 603, 2060, 300, 18481, 644, 13, 51104], "temperature": 0.0, "avg_logprob": -0.13417558236555618, "compression_ratio": 1.75, "no_speech_prob": 0.00018520301091484725}, {"id": 13, "seek": 5564, "start": 70.44, "end": 75.08, "text": " So we're just thinking about what kind of text do I put into my language model to get", "tokens": [51104, 407, 321, 434, 445, 1953, 466, 437, 733, 295, 2487, 360, 286, 829, 666, 452, 2856, 2316, 281, 483, 51336], "temperature": 0.0, "avg_logprob": -0.13417558236555618, "compression_ratio": 1.75, "no_speech_prob": 0.00018520301091484725}, {"id": 14, "seek": 5564, "start": 75.08, "end": 80.36, "text": " it to form the tasks that I want it to do.", "tokens": [51336, 309, 281, 1254, 264, 9608, 300, 286, 528, 309, 281, 360, 13, 51600], "temperature": 0.0, "avg_logprob": -0.13417558236555618, "compression_ratio": 1.75, "no_speech_prob": 0.00018520301091484725}, {"id": 15, "seek": 8036, "start": 81.24, "end": 85.88, "text": " This is for language models, this is kind of replacing a lot of things that you would", "tokens": [50408, 639, 307, 337, 2856, 5245, 11, 341, 307, 733, 295, 19139, 257, 688, 295, 721, 300, 291, 576, 50640], "temperature": 0.0, "avg_logprob": -0.1558639875022314, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.21185165643692017}, {"id": 16, "seek": 8036, "start": 85.88, "end": 93.0, "text": " otherwise do with training, with fine tuning, with all the approaches that we've taken", "tokens": [50640, 5911, 360, 365, 3097, 11, 365, 2489, 15164, 11, 365, 439, 264, 11587, 300, 321, 600, 2726, 50996], "temperature": 0.0, "avg_logprob": -0.1558639875022314, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.21185165643692017}, {"id": 17, "seek": 8036, "start": 93.0, "end": 97.0, "text": " for constructing machine learning models in the past.", "tokens": [50996, 337, 39969, 3479, 2539, 5245, 294, 264, 1791, 13, 51196], "temperature": 0.0, "avg_logprob": -0.1558639875022314, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.21185165643692017}, {"id": 18, "seek": 8036, "start": 97.0, "end": 101.12, "text": " And it's also, in a sense, the way that we program these language models, so it's sort", "tokens": [51196, 400, 309, 311, 611, 11, 294, 257, 2020, 11, 264, 636, 300, 321, 1461, 613, 2856, 5245, 11, 370, 309, 311, 1333, 51402], "temperature": 0.0, "avg_logprob": -0.1558639875022314, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.21185165643692017}, {"id": 19, "seek": 8036, "start": 101.12, "end": 109.8, "text": " of like programming in English instead of programming in Python or Rust or whatever.", "tokens": [51402, 295, 411, 9410, 294, 3669, 2602, 295, 9410, 294, 15329, 420, 34952, 420, 2035, 13, 51836], "temperature": 0.0, "avg_logprob": -0.1558639875022314, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.21185165643692017}, {"id": 20, "seek": 10980, "start": 109.8, "end": 117.16, "text": " So there's just two components to this talk, the simplest agenda of all the talks.", "tokens": [50364, 407, 456, 311, 445, 732, 6677, 281, 341, 751, 11, 264, 22811, 9829, 295, 439, 264, 6686, 13, 50732], "temperature": 0.0, "avg_logprob": -0.15773932447711242, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.000578833743929863}, {"id": 21, "seek": 10980, "start": 117.16, "end": 122.72, "text": " First is some high-level intuitions for prompting, and I'm going to present the idea that prompts", "tokens": [50732, 2386, 307, 512, 1090, 12, 12418, 16224, 626, 337, 12391, 278, 11, 293, 286, 478, 516, 281, 1974, 264, 1558, 300, 41095, 51010], "temperature": 0.0, "avg_logprob": -0.15773932447711242, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.000578833743929863}, {"id": 22, "seek": 10980, "start": 122.72, "end": 125.28, "text": " are magic spells.", "tokens": [51010, 366, 5585, 25053, 13, 51138], "temperature": 0.0, "avg_logprob": -0.15773932447711242, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.000578833743929863}, {"id": 23, "seek": 10980, "start": 125.28, "end": 130.76, "text": " And then to get a little bit more specific, I'm going to talk about the emerging playbook", "tokens": [51138, 400, 550, 281, 483, 257, 707, 857, 544, 2685, 11, 286, 478, 516, 281, 751, 466, 264, 14989, 862, 2939, 51412], "temperature": 0.0, "avg_logprob": -0.15773932447711242, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.000578833743929863}, {"id": 24, "seek": 10980, "start": 130.76, "end": 135.64, "text": " for effective prompting, a collection of sort of prompting techniques, ways to get language", "tokens": [51412, 337, 4942, 12391, 278, 11, 257, 5765, 295, 1333, 295, 12391, 278, 7512, 11, 2098, 281, 483, 2856, 51656], "temperature": 0.0, "avg_logprob": -0.15773932447711242, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.000578833743929863}, {"id": 25, "seek": 10980, "start": 135.64, "end": 137.2, "text": " models to do what you want.", "tokens": [51656, 5245, 281, 360, 437, 291, 528, 13, 51734], "temperature": 0.0, "avg_logprob": -0.15773932447711242, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.000578833743929863}, {"id": 26, "seek": 13720, "start": 137.2, "end": 140.0, "text": " So what do I mean when I say that prompts are magic spells?", "tokens": [50364, 407, 437, 360, 286, 914, 562, 286, 584, 300, 41095, 366, 5585, 25053, 30, 50504], "temperature": 0.0, "avg_logprob": -0.14018969859891725, "compression_ratio": 1.8340425531914895, "no_speech_prob": 0.002888823626562953}, {"id": 27, "seek": 13720, "start": 140.0, "end": 146.23999999999998, "text": " This is not literally true, they are not literally magic, it is linear algebra, which I find", "tokens": [50504, 639, 307, 406, 3736, 2074, 11, 436, 366, 406, 3736, 5585, 11, 309, 307, 8213, 21989, 11, 597, 286, 915, 50816], "temperature": 0.0, "avg_logprob": -0.14018969859891725, "compression_ratio": 1.8340425531914895, "no_speech_prob": 0.002888823626562953}, {"id": 28, "seek": 13720, "start": 146.23999999999998, "end": 150.51999999999998, "text": " delightful and beautiful, but which is not actually magic.", "tokens": [50816, 35194, 293, 2238, 11, 457, 597, 307, 406, 767, 5585, 13, 51030], "temperature": 0.0, "avg_logprob": -0.14018969859891725, "compression_ratio": 1.8340425531914895, "no_speech_prob": 0.002888823626562953}, {"id": 29, "seek": 13720, "start": 150.51999999999998, "end": 155.72, "text": " So there's not little, like, wizards inside of language models, there's not brains inside", "tokens": [51030, 407, 456, 311, 406, 707, 11, 411, 11, 40808, 2287, 1854, 295, 2856, 5245, 11, 456, 311, 406, 15442, 1854, 51290], "temperature": 0.0, "avg_logprob": -0.14018969859891725, "compression_ratio": 1.8340425531914895, "no_speech_prob": 0.002888823626562953}, {"id": 30, "seek": 13720, "start": 155.72, "end": 158.39999999999998, "text": " of language models, either really.", "tokens": [51290, 295, 2856, 5245, 11, 2139, 534, 13, 51424], "temperature": 0.0, "avg_logprob": -0.14018969859891725, "compression_ratio": 1.8340425531914895, "no_speech_prob": 0.002888823626562953}, {"id": 31, "seek": 13720, "start": 158.39999999999998, "end": 164.83999999999997, "text": " Language models are just statistical models of text, like in some sense, you can statistically", "tokens": [51424, 24445, 5245, 366, 445, 22820, 5245, 295, 2487, 11, 411, 294, 512, 2020, 11, 291, 393, 36478, 51746], "temperature": 0.0, "avg_logprob": -0.14018969859891725, "compression_ratio": 1.8340425531914895, "no_speech_prob": 0.002888823626562953}, {"id": 32, "seek": 16484, "start": 164.84, "end": 170.20000000000002, "text": " model your data with a bell curve, and that's a statistical model of your data, and a language", "tokens": [50364, 2316, 428, 1412, 365, 257, 4549, 7605, 11, 293, 300, 311, 257, 22820, 2316, 295, 428, 1412, 11, 293, 257, 2856, 50632], "temperature": 0.0, "avg_logprob": -0.1705621270572438, "compression_ratio": 1.945945945945946, "no_speech_prob": 0.0028880469035357237}, {"id": 33, "seek": 16484, "start": 170.20000000000002, "end": 176.84, "text": " model is a statistical model of data, and it just happens to be a statistical model of", "tokens": [50632, 2316, 307, 257, 22820, 2316, 295, 1412, 11, 293, 309, 445, 2314, 281, 312, 257, 22820, 2316, 295, 50964], "temperature": 0.0, "avg_logprob": -0.1705621270572438, "compression_ratio": 1.945945945945946, "no_speech_prob": 0.0028880469035357237}, {"id": 34, "seek": 16484, "start": 176.84, "end": 185.24, "text": " a more complicated statistical model of more complicated data.", "tokens": [50964, 257, 544, 6179, 22820, 2316, 295, 544, 6179, 1412, 13, 51384], "temperature": 0.0, "avg_logprob": -0.1705621270572438, "compression_ratio": 1.945945945945946, "no_speech_prob": 0.0028880469035357237}, {"id": 35, "seek": 16484, "start": 185.24, "end": 189.52, "text": " So there's nothing really magic about that.", "tokens": [51384, 407, 456, 311, 1825, 534, 5585, 466, 300, 13, 51598], "temperature": 0.0, "avg_logprob": -0.1705621270572438, "compression_ratio": 1.945945945945946, "no_speech_prob": 0.0028880469035357237}, {"id": 36, "seek": 18952, "start": 190.20000000000002, "end": 195.76000000000002, "text": " What do I mean when I say that it's a statistical model roughly of text?", "tokens": [50398, 708, 360, 286, 914, 562, 286, 584, 300, 309, 311, 257, 22820, 2316, 9810, 295, 2487, 30, 50676], "temperature": 0.0, "avg_logprob": -0.144431248184078, "compression_ratio": 1.8313725490196078, "no_speech_prob": 0.4292891323566437}, {"id": 37, "seek": 18952, "start": 195.76000000000002, "end": 199.56, "text": " Roughly what that means is that when the model is trained, you can take some list of text", "tokens": [50676, 42791, 356, 437, 300, 1355, 307, 300, 562, 264, 2316, 307, 8895, 11, 291, 393, 747, 512, 1329, 295, 2487, 50866], "temperature": 0.0, "avg_logprob": -0.144431248184078, "compression_ratio": 1.8313725490196078, "no_speech_prob": 0.4292891323566437}, {"id": 38, "seek": 18952, "start": 199.56, "end": 204.20000000000002, "text": " that you pulled from somewhere, let's say some text you sampled from the internet, and", "tokens": [50866, 300, 291, 7373, 490, 4079, 11, 718, 311, 584, 512, 2487, 291, 3247, 15551, 490, 264, 4705, 11, 293, 51098], "temperature": 0.0, "avg_logprob": -0.144431248184078, "compression_ratio": 1.8313725490196078, "no_speech_prob": 0.4292891323566437}, {"id": 39, "seek": 18952, "start": 204.20000000000002, "end": 209.92000000000002, "text": " then go through the tokens in that text, go through the pieces of that text, pass them", "tokens": [51098, 550, 352, 807, 264, 22667, 294, 300, 2487, 11, 352, 807, 264, 3755, 295, 300, 2487, 11, 1320, 552, 51384], "temperature": 0.0, "avg_logprob": -0.144431248184078, "compression_ratio": 1.8313725490196078, "no_speech_prob": 0.4292891323566437}, {"id": 40, "seek": 18952, "start": 209.92000000000002, "end": 215.0, "text": " through a model, and it'll give out a probability of what the next word is going to be.", "tokens": [51384, 807, 257, 2316, 11, 293, 309, 603, 976, 484, 257, 8482, 295, 437, 264, 958, 1349, 307, 516, 281, 312, 13, 51638], "temperature": 0.0, "avg_logprob": -0.144431248184078, "compression_ratio": 1.8313725490196078, "no_speech_prob": 0.4292891323566437}, {"id": 41, "seek": 18952, "start": 215.0, "end": 218.72, "text": " So this is called an autoregressive model.", "tokens": [51638, 407, 341, 307, 1219, 364, 1476, 418, 3091, 488, 2316, 13, 51824], "temperature": 0.0, "avg_logprob": -0.144431248184078, "compression_ratio": 1.8313725490196078, "no_speech_prob": 0.4292891323566437}, {"id": 42, "seek": 21872, "start": 218.72, "end": 225.52, "text": " It's just a term of art, autoregressive, like predicting on itself.", "tokens": [50364, 467, 311, 445, 257, 1433, 295, 1523, 11, 1476, 418, 3091, 488, 11, 411, 32884, 322, 2564, 13, 50704], "temperature": 0.0, "avg_logprob": -0.12268976289398816, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.0027122877072542906}, {"id": 43, "seek": 21872, "start": 225.52, "end": 231.64, "text": " So we're going through the text, and we keep adding stuff to what we put into the model,", "tokens": [50704, 407, 321, 434, 516, 807, 264, 2487, 11, 293, 321, 1066, 5127, 1507, 281, 437, 321, 829, 666, 264, 2316, 11, 51010], "temperature": 0.0, "avg_logprob": -0.12268976289398816, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.0027122877072542906}, {"id": 44, "seek": 21872, "start": 231.64, "end": 238.32, "text": " generating probabilities for them, for what the next token is going to be.", "tokens": [51010, 17746, 33783, 337, 552, 11, 337, 437, 264, 958, 14862, 307, 516, 281, 312, 13, 51344], "temperature": 0.0, "avg_logprob": -0.12268976289398816, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.0027122877072542906}, {"id": 45, "seek": 21872, "start": 238.32, "end": 243.36, "text": " So we have a dictionary that for every possible token, for every possible thing that could", "tokens": [51344, 407, 321, 362, 257, 25890, 300, 337, 633, 1944, 14862, 11, 337, 633, 1944, 551, 300, 727, 51596], "temperature": 0.0, "avg_logprob": -0.12268976289398816, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.0027122877072542906}, {"id": 46, "seek": 21872, "start": 243.36, "end": 248.56, "text": " come next, we have a probability or a law of probability for it.", "tokens": [51596, 808, 958, 11, 321, 362, 257, 8482, 420, 257, 2101, 295, 8482, 337, 309, 13, 51856], "temperature": 0.0, "avg_logprob": -0.12268976289398816, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.0027122877072542906}, {"id": 47, "seek": 24856, "start": 248.56, "end": 258.4, "text": " And then if we do that across a lot of text of sufficient length, then the language model", "tokens": [50364, 400, 550, 498, 321, 360, 300, 2108, 257, 688, 295, 2487, 295, 11563, 4641, 11, 550, 264, 2856, 2316, 50856], "temperature": 0.0, "avg_logprob": -0.1381724993387858, "compression_ratio": 1.7289719626168225, "no_speech_prob": 9.026798215927556e-05}, {"id": 48, "seek": 24856, "start": 258.4, "end": 262.76, "text": " being a model of text means that the probability it assigned to all the text that it saw would", "tokens": [50856, 885, 257, 2316, 295, 2487, 1355, 300, 264, 8482, 309, 13279, 281, 439, 264, 2487, 300, 309, 1866, 576, 51074], "temperature": 0.0, "avg_logprob": -0.1381724993387858, "compression_ratio": 1.7289719626168225, "no_speech_prob": 9.026798215927556e-05}, {"id": 49, "seek": 24856, "start": 262.76, "end": 263.76, "text": " be high.", "tokens": [51074, 312, 1090, 13, 51124], "temperature": 0.0, "avg_logprob": -0.1381724993387858, "compression_ratio": 1.7289719626168225, "no_speech_prob": 9.026798215927556e-05}, {"id": 50, "seek": 24856, "start": 263.76, "end": 270.92, "text": " So you start off with random weights, a random model, it has no idea about text, it assigns", "tokens": [51124, 407, 291, 722, 766, 365, 4974, 17443, 11, 257, 4974, 2316, 11, 309, 575, 572, 1558, 466, 2487, 11, 309, 6269, 82, 51482], "temperature": 0.0, "avg_logprob": -0.1381724993387858, "compression_ratio": 1.7289719626168225, "no_speech_prob": 9.026798215927556e-05}, {"id": 51, "seek": 24856, "start": 270.92, "end": 275.32, "text": " a low probability to basically everything it sees to eventually a model that assigns", "tokens": [51482, 257, 2295, 8482, 281, 1936, 1203, 309, 8194, 281, 4728, 257, 2316, 300, 6269, 82, 51702], "temperature": 0.0, "avg_logprob": -0.1381724993387858, "compression_ratio": 1.7289719626168225, "no_speech_prob": 9.026798215927556e-05}, {"id": 52, "seek": 27532, "start": 275.32, "end": 279.92, "text": " a high probability to pretty much any text that you can imagine like drawing from the", "tokens": [50364, 257, 1090, 8482, 281, 1238, 709, 604, 2487, 300, 291, 393, 3811, 411, 6316, 490, 264, 50594], "temperature": 0.0, "avg_logprob": -0.14500086784362792, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.002888108603656292}, {"id": 53, "seek": 27532, "start": 279.92, "end": 283.68, "text": " internet or writing yourself.", "tokens": [50594, 4705, 420, 3579, 1803, 13, 50782], "temperature": 0.0, "avg_logprob": -0.14500086784362792, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.002888108603656292}, {"id": 54, "seek": 27532, "start": 283.68, "end": 288.52, "text": " And so this is literally true, and this is sort of the place where you want to eventually", "tokens": [50782, 400, 370, 341, 307, 3736, 2074, 11, 293, 341, 307, 1333, 295, 264, 1081, 689, 291, 528, 281, 4728, 51024], "temperature": 0.0, "avg_logprob": -0.14500086784362792, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.002888108603656292}, {"id": 55, "seek": 27532, "start": 288.52, "end": 291.84, "text": " compile down your intuitions and your understanding of models.", "tokens": [51024, 31413, 760, 428, 16224, 626, 293, 428, 3701, 295, 5245, 13, 51190], "temperature": 0.0, "avg_logprob": -0.14500086784362792, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.002888108603656292}, {"id": 56, "seek": 27532, "start": 291.84, "end": 296.64, "text": " You want to eventually get to the point where you are thinking in terms of how does this", "tokens": [51190, 509, 528, 281, 4728, 483, 281, 264, 935, 689, 291, 366, 1953, 294, 2115, 295, 577, 775, 341, 51430], "temperature": 0.0, "avg_logprob": -0.14500086784362792, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.002888108603656292}, {"id": 57, "seek": 27532, "start": 296.64, "end": 303.56, "text": " arise from statistical modeling, but it also can give you really bad intuitions to think", "tokens": [51430, 20288, 490, 22820, 15983, 11, 457, 309, 611, 393, 976, 291, 534, 1578, 16224, 626, 281, 519, 51776], "temperature": 0.0, "avg_logprob": -0.14500086784362792, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.002888108603656292}, {"id": 58, "seek": 30356, "start": 303.56, "end": 305.8, "text": " at that level.", "tokens": [50364, 412, 300, 1496, 13, 50476], "temperature": 0.0, "avg_logprob": -0.21059644340288522, "compression_ratio": 2.0344827586206895, "no_speech_prob": 0.1821553260087967}, {"id": 59, "seek": 30356, "start": 305.8, "end": 310.76, "text": " And when you say that these are statistical models, that they learn patterns or that language", "tokens": [50476, 400, 562, 291, 584, 300, 613, 366, 22820, 5245, 11, 300, 436, 1466, 8294, 420, 300, 2856, 50724], "temperature": 0.0, "avg_logprob": -0.21059644340288522, "compression_ratio": 2.0344827586206895, "no_speech_prob": 0.1821553260087967}, {"id": 60, "seek": 30356, "start": 310.76, "end": 316.48, "text": " models are statistical pattern matchers or static parrots, you are drawing on intuition", "tokens": [50724, 5245, 366, 22820, 5102, 2995, 433, 420, 13437, 971, 81, 1971, 11, 291, 366, 6316, 322, 24002, 51010], "temperature": 0.0, "avg_logprob": -0.21059644340288522, "compression_ratio": 2.0344827586206895, "no_speech_prob": 0.1821553260087967}, {"id": 61, "seek": 30356, "start": 316.48, "end": 321.36, "text": " from things like other kinds of statistical models that you have seen, so maybe statistical", "tokens": [51010, 490, 721, 411, 661, 3685, 295, 22820, 5245, 300, 291, 362, 1612, 11, 370, 1310, 22820, 51254], "temperature": 0.0, "avg_logprob": -0.21059644340288522, "compression_ratio": 2.0344827586206895, "no_speech_prob": 0.1821553260087967}, {"id": 62, "seek": 30356, "start": 321.36, "end": 328.04, "text": " models of data like linear regression or Gaussian distributions, so these are very simple objects.", "tokens": [51254, 5245, 295, 1412, 411, 8213, 24590, 420, 39148, 37870, 11, 370, 613, 366, 588, 2199, 6565, 13, 51588], "temperature": 0.0, "avg_logprob": -0.21059644340288522, "compression_ratio": 2.0344827586206895, "no_speech_prob": 0.1821553260087967}, {"id": 63, "seek": 30356, "start": 328.04, "end": 332.4, "text": " Or you are drawing inspiration from other kinds of models of text that you have seen", "tokens": [51588, 1610, 291, 366, 6316, 10249, 490, 661, 3685, 295, 5245, 295, 2487, 300, 291, 362, 1612, 51806], "temperature": 0.0, "avg_logprob": -0.21059644340288522, "compression_ratio": 2.0344827586206895, "no_speech_prob": 0.1821553260087967}, {"id": 64, "seek": 33240, "start": 332.4, "end": 338.2, "text": " like Google's autocomplete or the autocomplete function on your phone, and we are well aware", "tokens": [50364, 411, 3329, 311, 45833, 298, 17220, 420, 264, 45833, 298, 17220, 2445, 322, 428, 2593, 11, 293, 321, 366, 731, 3650, 50654], "temperature": 0.0, "avg_logprob": -0.17929427854476437, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.005552389658987522}, {"id": 65, "seek": 33240, "start": 338.2, "end": 345.03999999999996, "text": " that these things are very dumb and not very capable and that they just pick up on surface", "tokens": [50654, 300, 613, 721, 366, 588, 10316, 293, 406, 588, 8189, 293, 300, 436, 445, 1888, 493, 322, 3753, 50996], "temperature": 0.0, "avg_logprob": -0.17929427854476437, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.005552389658987522}, {"id": 66, "seek": 33240, "start": 345.03999999999996, "end": 348.88, "text": " level patterns.", "tokens": [50996, 1496, 8294, 13, 51188], "temperature": 0.0, "avg_logprob": -0.17929427854476437, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.005552389658987522}, {"id": 67, "seek": 33240, "start": 348.88, "end": 355.15999999999997, "text": " Whereas these language models, they have learned so much about text that it is extremely difficult", "tokens": [51188, 13813, 613, 2856, 5245, 11, 436, 362, 3264, 370, 709, 466, 2487, 300, 309, 307, 4664, 2252, 51502], "temperature": 0.0, "avg_logprob": -0.17929427854476437, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.005552389658987522}, {"id": 68, "seek": 33240, "start": 355.15999999999997, "end": 360.47999999999996, "text": " to think of it as some kind of statistics, the way people normally think about probability", "tokens": [51502, 281, 519, 295, 309, 382, 512, 733, 295, 12523, 11, 264, 636, 561, 5646, 519, 466, 8482, 51768], "temperature": 0.0, "avg_logprob": -0.17929427854476437, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.005552389658987522}, {"id": 69, "seek": 33240, "start": 360.47999999999996, "end": 361.47999999999996, "text": " and statistics.", "tokens": [51768, 293, 12523, 13, 51818], "temperature": 0.0, "avg_logprob": -0.17929427854476437, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.005552389658987522}, {"id": 70, "seek": 36148, "start": 361.84000000000003, "end": 370.64000000000004, "text": " So I just picked one random example that I felt demonstrates this, Bing Chat can take", "tokens": [50382, 407, 286, 445, 6183, 472, 4974, 1365, 300, 286, 2762, 31034, 341, 11, 30755, 27503, 393, 747, 50822], "temperature": 0.0, "avg_logprob": -0.2050049901008606, "compression_ratio": 1.4431818181818181, "no_speech_prob": 0.0068960776552557945}, {"id": 71, "seek": 36148, "start": 370.64000000000004, "end": 378.64000000000004, "text": " in SVG files as text and then describe the content of that SVG file for you as an image,", "tokens": [50822, 294, 31910, 38, 7098, 382, 2487, 293, 550, 6786, 264, 2701, 295, 300, 31910, 38, 3991, 337, 291, 382, 364, 3256, 11, 51222], "temperature": 0.0, "avg_logprob": -0.2050049901008606, "compression_ratio": 1.4431818181818181, "no_speech_prob": 0.0068960776552557945}, {"id": 72, "seek": 36148, "start": 378.64000000000004, "end": 385.12, "text": " and very few people's intuition for what a model of text is would include that.", "tokens": [51222, 293, 588, 1326, 561, 311, 24002, 337, 437, 257, 2316, 295, 2487, 307, 576, 4090, 300, 13, 51546], "temperature": 0.0, "avg_logprob": -0.2050049901008606, "compression_ratio": 1.4431818181818181, "no_speech_prob": 0.0068960776552557945}, {"id": 73, "seek": 38512, "start": 385.12, "end": 392.64, "text": " So there is some better intuitions that come from the world of statistics of probability", "tokens": [50364, 407, 456, 307, 512, 1101, 16224, 626, 300, 808, 490, 264, 1002, 295, 12523, 295, 8482, 50740], "temperature": 0.0, "avg_logprob": -0.1831729245740314, "compression_ratio": 1.8262910798122065, "no_speech_prob": 0.0018664230592548847}, {"id": 74, "seek": 38512, "start": 392.64, "end": 398.48, "text": " that are a little bit better, so probabilistic programs is probably one of the better intuitions", "tokens": [50740, 300, 366, 257, 707, 857, 1101, 11, 370, 31959, 3142, 4268, 307, 1391, 472, 295, 264, 1101, 16224, 626, 51032], "temperature": 0.0, "avg_logprob": -0.1831729245740314, "compression_ratio": 1.8262910798122065, "no_speech_prob": 0.0018664230592548847}, {"id": 75, "seek": 38512, "start": 398.48, "end": 400.2, "text": " from that world.", "tokens": [51032, 490, 300, 1002, 13, 51118], "temperature": 0.0, "avg_logprob": -0.1831729245740314, "compression_ratio": 1.8262910798122065, "no_speech_prob": 0.0018664230592548847}, {"id": 76, "seek": 38512, "start": 400.2, "end": 405.36, "text": " So the idea is we often think of really simple statistical models, we think of them as being", "tokens": [51118, 407, 264, 1558, 307, 321, 2049, 519, 295, 534, 2199, 22820, 5245, 11, 321, 519, 295, 552, 382, 885, 51376], "temperature": 0.0, "avg_logprob": -0.1831729245740314, "compression_ratio": 1.8262910798122065, "no_speech_prob": 0.0018664230592548847}, {"id": 77, "seek": 38512, "start": 405.36, "end": 411.8, "text": " like represented by equations or the kinds of things that you can manipulate in a probability", "tokens": [51376, 411, 10379, 538, 11787, 420, 264, 3685, 295, 721, 300, 291, 393, 20459, 294, 257, 8482, 51698], "temperature": 0.0, "avg_logprob": -0.1831729245740314, "compression_ratio": 1.8262910798122065, "no_speech_prob": 0.0018664230592548847}, {"id": 78, "seek": 41180, "start": 411.92, "end": 417.96000000000004, "text": " class, but a lot of complicated statistical models that people use today, even like really", "tokens": [50370, 1508, 11, 457, 257, 688, 295, 6179, 22820, 5245, 300, 561, 764, 965, 11, 754, 411, 534, 50672], "temperature": 0.0, "avg_logprob": -0.16755214650580225, "compression_ratio": 1.7269076305220883, "no_speech_prob": 0.017968885600566864}, {"id": 79, "seek": 41180, "start": 417.96000000000004, "end": 424.96000000000004, "text": " complicated hierarchical linear regressions, can be better thought of as programs that", "tokens": [50672, 6179, 35250, 804, 8213, 1121, 735, 626, 11, 393, 312, 1101, 1194, 295, 382, 4268, 300, 51022], "temperature": 0.0, "avg_logprob": -0.16755214650580225, "compression_ratio": 1.7269076305220883, "no_speech_prob": 0.017968885600566864}, {"id": 80, "seek": 41180, "start": 424.96000000000004, "end": 429.52, "text": " operate on random data, as programs that manipulate random variables.", "tokens": [51022, 9651, 322, 4974, 1412, 11, 382, 4268, 300, 20459, 4974, 9102, 13, 51250], "temperature": 0.0, "avg_logprob": -0.16755214650580225, "compression_ratio": 1.7269076305220883, "no_speech_prob": 0.017968885600566864}, {"id": 81, "seek": 41180, "start": 429.52, "end": 434.6, "text": " And so you can write things that you might do with a language model, like take a question,", "tokens": [51250, 400, 370, 291, 393, 2464, 721, 300, 291, 1062, 360, 365, 257, 2856, 2316, 11, 411, 747, 257, 1168, 11, 51504], "temperature": 0.0, "avg_logprob": -0.16755214650580225, "compression_ratio": 1.7269076305220883, "no_speech_prob": 0.017968885600566864}, {"id": 82, "seek": 41180, "start": 434.6, "end": 438.72, "text": " and rather than having it just directly answered, having it think of what the answer should", "tokens": [51504, 293, 2831, 813, 1419, 309, 445, 3838, 10103, 11, 1419, 309, 519, 295, 437, 264, 1867, 820, 51710], "temperature": 0.0, "avg_logprob": -0.16755214650580225, "compression_ratio": 1.7269076305220883, "no_speech_prob": 0.017968885600566864}, {"id": 83, "seek": 43872, "start": 438.72, "end": 443.40000000000003, "text": " be, like maybe like brainstorm a little bit, and then take that brainstorm and turn it", "tokens": [50364, 312, 11, 411, 1310, 411, 35245, 257, 707, 857, 11, 293, 550, 747, 300, 35245, 293, 1261, 309, 50598], "temperature": 0.0, "avg_logprob": -0.15493642366849458, "compression_ratio": 1.7074235807860263, "no_speech_prob": 0.006286266725510359}, {"id": 84, "seek": 43872, "start": 443.40000000000003, "end": 444.96000000000004, "text": " into an answer.", "tokens": [50598, 666, 364, 1867, 13, 50676], "temperature": 0.0, "avg_logprob": -0.15493642366849458, "compression_ratio": 1.7074235807860263, "no_speech_prob": 0.006286266725510359}, {"id": 85, "seek": 43872, "start": 444.96000000000004, "end": 449.64000000000004, "text": " So that's what this little like Python program up here shows.", "tokens": [50676, 407, 300, 311, 437, 341, 707, 411, 15329, 1461, 493, 510, 3110, 13, 50910], "temperature": 0.0, "avg_logprob": -0.15493642366849458, "compression_ratio": 1.7074235807860263, "no_speech_prob": 0.006286266725510359}, {"id": 86, "seek": 43872, "start": 449.64000000000004, "end": 456.24, "text": " Take a question, generate a thought, and then generate an answer.", "tokens": [50910, 3664, 257, 1168, 11, 8460, 257, 1194, 11, 293, 550, 8460, 364, 1867, 13, 51240], "temperature": 0.0, "avg_logprob": -0.15493642366849458, "compression_ratio": 1.7074235807860263, "no_speech_prob": 0.006286266725510359}, {"id": 87, "seek": 43872, "start": 456.24, "end": 462.6, "text": " And because language models are probabilistic, you can actually literally sample from them,", "tokens": [51240, 400, 570, 2856, 5245, 366, 31959, 3142, 11, 291, 393, 767, 3736, 6889, 490, 552, 11, 51558], "temperature": 0.0, "avg_logprob": -0.15493642366849458, "compression_ratio": 1.7074235807860263, "no_speech_prob": 0.006286266725510359}, {"id": 88, "seek": 43872, "start": 462.6, "end": 468.36, "text": " you can actually draw different possibilities each time if you wish.", "tokens": [51558, 291, 393, 767, 2642, 819, 12178, 1184, 565, 498, 291, 3172, 13, 51846], "temperature": 0.0, "avg_logprob": -0.15493642366849458, "compression_ratio": 1.7074235807860263, "no_speech_prob": 0.006286266725510359}, {"id": 89, "seek": 46836, "start": 469.32, "end": 475.92, "text": " And this probabilistic program, all probabilistic programs can be represented with these graphical", "tokens": [50412, 400, 341, 31959, 3142, 1461, 11, 439, 31959, 3142, 4268, 393, 312, 10379, 365, 613, 35942, 50742], "temperature": 0.0, "avg_logprob": -0.1778647780418396, "compression_ratio": 1.6028708133971292, "no_speech_prob": 0.00048766768304631114}, {"id": 90, "seek": 46836, "start": 475.92, "end": 481.72, "text": " models that like, so this comes from sort of a branch of machine learning that's been", "tokens": [50742, 5245, 300, 411, 11, 370, 341, 1487, 490, 1333, 295, 257, 9819, 295, 3479, 2539, 300, 311, 668, 51032], "temperature": 0.0, "avg_logprob": -0.1778647780418396, "compression_ratio": 1.6028708133971292, "no_speech_prob": 0.00048766768304631114}, {"id": 91, "seek": 46836, "start": 481.72, "end": 487.92, "text": " eclipsed by the rise of deep learning and LLNs in particular.", "tokens": [51032, 308, 3474, 2600, 292, 538, 264, 6272, 295, 2452, 2539, 293, 441, 43, 45, 82, 294, 1729, 13, 51342], "temperature": 0.0, "avg_logprob": -0.1778647780418396, "compression_ratio": 1.6028708133971292, "no_speech_prob": 0.00048766768304631114}, {"id": 92, "seek": 46836, "start": 487.92, "end": 492.44, "text": " But this gives you like the sort of best way to think about just how complicated can you", "tokens": [51342, 583, 341, 2709, 291, 411, 264, 1333, 295, 1151, 636, 281, 519, 466, 445, 577, 6179, 393, 291, 51568], "temperature": 0.0, "avg_logprob": -0.1778647780418396, "compression_ratio": 1.6028708133971292, "no_speech_prob": 0.00048766768304631114}, {"id": 93, "seek": 49244, "start": 492.44, "end": 498.44, "text": " get when thinking about like a model of text, a probabilistic model of text.", "tokens": [50364, 483, 562, 1953, 466, 411, 257, 2316, 295, 2487, 11, 257, 31959, 3142, 2316, 295, 2487, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12029931328513406, "compression_ratio": 1.7165354330708662, "no_speech_prob": 0.009706000797450542}, {"id": 94, "seek": 49244, "start": 498.44, "end": 502.84, "text": " And so if you're interested in that, like that kind of direction, if you have that background", "tokens": [50664, 400, 370, 498, 291, 434, 3102, 294, 300, 11, 411, 300, 733, 295, 3513, 11, 498, 291, 362, 300, 3678, 50884], "temperature": 0.0, "avg_logprob": -0.12029931328513406, "compression_ratio": 1.7165354330708662, "no_speech_prob": 0.009706000797450542}, {"id": 95, "seek": 49244, "start": 502.84, "end": 507.36, "text": " or have that interest, the language model cascades by Dohan et al, like really dives", "tokens": [50884, 420, 362, 300, 1179, 11, 264, 2856, 2316, 3058, 66, 2977, 538, 1144, 3451, 1030, 419, 11, 411, 534, 274, 1539, 51110], "temperature": 0.0, "avg_logprob": -0.12029931328513406, "compression_ratio": 1.7165354330708662, "no_speech_prob": 0.009706000797450542}, {"id": 96, "seek": 49244, "start": 507.36, "end": 511.48, "text": " into detail and shows how you can explain a bunch of like prompting tricks and other", "tokens": [51110, 666, 2607, 293, 3110, 577, 291, 393, 2903, 257, 3840, 295, 411, 12391, 278, 11733, 293, 661, 51316], "temperature": 0.0, "avg_logprob": -0.12029931328513406, "compression_ratio": 1.7165354330708662, "no_speech_prob": 0.009706000797450542}, {"id": 97, "seek": 49244, "start": 511.48, "end": 515.76, "text": " things that people have done in terms of probabilistic programs.", "tokens": [51316, 721, 300, 561, 362, 1096, 294, 2115, 295, 31959, 3142, 4268, 13, 51530], "temperature": 0.0, "avg_logprob": -0.12029931328513406, "compression_ratio": 1.7165354330708662, "no_speech_prob": 0.009706000797450542}, {"id": 98, "seek": 49244, "start": 515.76, "end": 518.16, "text": " That's a little bit to arcane.", "tokens": [51530, 663, 311, 257, 707, 857, 281, 10346, 1929, 13, 51650], "temperature": 0.0, "avg_logprob": -0.12029931328513406, "compression_ratio": 1.7165354330708662, "no_speech_prob": 0.009706000797450542}, {"id": 99, "seek": 51816, "start": 518.16, "end": 523.48, "text": " So what's something that is like maybe a little bit easier to understand.", "tokens": [50364, 407, 437, 311, 746, 300, 307, 411, 1310, 257, 707, 857, 3571, 281, 1223, 13, 50630], "temperature": 0.0, "avg_logprob": -0.15108053260874527, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.0004582238616421819}, {"id": 100, "seek": 51816, "start": 523.48, "end": 528.48, "text": " So I'm going to draw inspiration from Arthur C. Clark's laws of technology here.", "tokens": [50630, 407, 286, 478, 516, 281, 2642, 10249, 490, 19624, 383, 13, 18572, 311, 6064, 295, 2899, 510, 13, 50880], "temperature": 0.0, "avg_logprob": -0.15108053260874527, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.0004582238616421819}, {"id": 101, "seek": 51816, "start": 528.48, "end": 533.88, "text": " And any sufficiently advanced technology like, I don't know, machine that makes your voice", "tokens": [50880, 400, 604, 31868, 7339, 2899, 411, 11, 286, 500, 380, 458, 11, 3479, 300, 1669, 428, 3177, 51150], "temperature": 0.0, "avg_logprob": -0.15108053260874527, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.0004582238616421819}, {"id": 102, "seek": 51816, "start": 533.88, "end": 540.9599999999999, "text": " really loud in a room or a machine that can show you your mother's face across the country", "tokens": [51150, 534, 6588, 294, 257, 1808, 420, 257, 3479, 300, 393, 855, 291, 428, 2895, 311, 1851, 2108, 264, 1941, 51504], "temperature": 0.0, "avg_logprob": -0.15108053260874527, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.0004582238616421819}, {"id": 103, "seek": 51816, "start": 540.9599999999999, "end": 543.36, "text": " is indistinguishable from magic.", "tokens": [51504, 307, 1016, 468, 7050, 742, 712, 490, 5585, 13, 51624], "temperature": 0.0, "avg_logprob": -0.15108053260874527, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.0004582238616421819}, {"id": 104, "seek": 51816, "start": 543.36, "end": 545.48, "text": " So what kind of magic are prompts?", "tokens": [51624, 407, 437, 733, 295, 5585, 366, 41095, 30, 51730], "temperature": 0.0, "avg_logprob": -0.15108053260874527, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.0004582238616421819}, {"id": 105, "seek": 51816, "start": 545.48, "end": 546.9599999999999, "text": " They're magic spells.", "tokens": [51730, 814, 434, 5585, 25053, 13, 51804], "temperature": 0.0, "avg_logprob": -0.15108053260874527, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.0004582238616421819}, {"id": 106, "seek": 54696, "start": 546.96, "end": 551.2, "text": " They're a collection of words which we use to achieve impossible effects.", "tokens": [50364, 814, 434, 257, 5765, 295, 2283, 597, 321, 764, 281, 4584, 6243, 5065, 13, 50576], "temperature": 0.0, "avg_logprob": -0.12308835983276367, "compression_ratio": 1.5360360360360361, "no_speech_prob": 0.0002958805416710675}, {"id": 107, "seek": 54696, "start": 551.2, "end": 557.0, "text": " But only if you follow bizarre and complex rules and it has a well-known negative impact", "tokens": [50576, 583, 787, 498, 291, 1524, 18265, 293, 3997, 4474, 293, 309, 575, 257, 731, 12, 6861, 3671, 2712, 50866], "temperature": 0.0, "avg_logprob": -0.12308835983276367, "compression_ratio": 1.5360360360360361, "no_speech_prob": 0.0002958805416710675}, {"id": 108, "seek": 54696, "start": 557.0, "end": 561.5600000000001, "text": " on your mental health to spend too much time learning them.", "tokens": [50866, 322, 428, 4973, 1585, 281, 3496, 886, 709, 565, 2539, 552, 13, 51094], "temperature": 0.0, "avg_logprob": -0.12308835983276367, "compression_ratio": 1.5360360360360361, "no_speech_prob": 0.0002958805416710675}, {"id": 109, "seek": 54696, "start": 561.5600000000001, "end": 567.2800000000001, "text": " So I'm going to go through three intuitions for things that prompts can be used for that", "tokens": [51094, 407, 286, 478, 516, 281, 352, 807, 1045, 16224, 626, 337, 721, 300, 41095, 393, 312, 1143, 337, 300, 51380], "temperature": 0.0, "avg_logprob": -0.12308835983276367, "compression_ratio": 1.5360360360360361, "no_speech_prob": 0.0002958805416710675}, {"id": 110, "seek": 54696, "start": 567.2800000000001, "end": 569.6, "text": " come from the world of magic.", "tokens": [51380, 808, 490, 264, 1002, 295, 5585, 13, 51496], "temperature": 0.0, "avg_logprob": -0.12308835983276367, "compression_ratio": 1.5360360360360361, "no_speech_prob": 0.0002958805416710675}, {"id": 111, "seek": 56960, "start": 569.6, "end": 577.0400000000001, "text": " So for pre-trained models like the original GPT-3, like Lama, a prompt is a portal to", "tokens": [50364, 407, 337, 659, 12, 17227, 2001, 5245, 411, 264, 3380, 26039, 51, 12, 18, 11, 411, 441, 2404, 11, 257, 12391, 307, 257, 14982, 281, 50736], "temperature": 0.0, "avg_logprob": -0.15658661414837016, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.004132453352212906}, {"id": 112, "seek": 56960, "start": 577.0400000000001, "end": 579.6, "text": " an alternate universe.", "tokens": [50736, 364, 18873, 6445, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15658661414837016, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.004132453352212906}, {"id": 113, "seek": 56960, "start": 579.6, "end": 588.44, "text": " For instruction-tuned models, so things like chat GPT or alpaca, a prompt is a wish.", "tokens": [50864, 1171, 10951, 12, 83, 43703, 5245, 11, 370, 721, 411, 5081, 26039, 51, 420, 419, 79, 6628, 11, 257, 12391, 307, 257, 3172, 13, 51306], "temperature": 0.0, "avg_logprob": -0.15658661414837016, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.004132453352212906}, {"id": 114, "seek": 56960, "start": 588.44, "end": 594.32, "text": " And for agent simulation, the latest and greatest of uses of language models, a prompt", "tokens": [51306, 400, 337, 9461, 16575, 11, 264, 6792, 293, 6636, 295, 4960, 295, 2856, 5245, 11, 257, 12391, 51600], "temperature": 0.0, "avg_logprob": -0.15658661414837016, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.004132453352212906}, {"id": 115, "seek": 56960, "start": 594.32, "end": 597.36, "text": " creates a golem.", "tokens": [51600, 7829, 257, 352, 10386, 13, 51752], "temperature": 0.0, "avg_logprob": -0.15658661414837016, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.004132453352212906}, {"id": 116, "seek": 59736, "start": 597.36, "end": 601.88, "text": " So first, prompt can create a portal to an alternate universe.", "tokens": [50364, 407, 700, 11, 12391, 393, 1884, 257, 14982, 281, 364, 18873, 6445, 13, 50590], "temperature": 0.0, "avg_logprob": -0.12418903967346807, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.00026935210917145014}, {"id": 117, "seek": 59736, "start": 601.88, "end": 608.0, "text": " So the idea here is that this text that we input into the language model takes us into", "tokens": [50590, 407, 264, 1558, 510, 307, 300, 341, 2487, 300, 321, 4846, 666, 264, 2856, 2316, 2516, 505, 666, 50896], "temperature": 0.0, "avg_logprob": -0.12418903967346807, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.00026935210917145014}, {"id": 118, "seek": 59736, "start": 608.0, "end": 611.76, "text": " a world where some document that we desire exists.", "tokens": [50896, 257, 1002, 689, 512, 4166, 300, 321, 7516, 8198, 13, 51084], "temperature": 0.0, "avg_logprob": -0.12418903967346807, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.00026935210917145014}, {"id": 119, "seek": 59736, "start": 611.76, "end": 616.6800000000001, "text": " It's like a Reddit post answering the exact question that we had exists in this alternate", "tokens": [51084, 467, 311, 411, 257, 32210, 2183, 13430, 264, 1900, 1168, 300, 321, 632, 8198, 294, 341, 18873, 51330], "temperature": 0.0, "avg_logprob": -0.12418903967346807, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.00026935210917145014}, {"id": 120, "seek": 59736, "start": 616.6800000000001, "end": 617.6800000000001, "text": " universe.", "tokens": [51330, 6445, 13, 51380], "temperature": 0.0, "avg_logprob": -0.12418903967346807, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.00026935210917145014}, {"id": 121, "seek": 59736, "start": 617.6800000000001, "end": 622.0, "text": " Unfortunately, nobody has asked my exact question in French on Reddit.", "tokens": [51380, 8590, 11, 5079, 575, 2351, 452, 1900, 1168, 294, 5522, 322, 32210, 13, 51596], "temperature": 0.0, "avg_logprob": -0.12418903967346807, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.00026935210917145014}, {"id": 122, "seek": 59736, "start": 622.0, "end": 625.24, "text": " And so I cannot find it in this universe.", "tokens": [51596, 400, 370, 286, 2644, 915, 309, 294, 341, 6445, 13, 51758], "temperature": 0.0, "avg_logprob": -0.12418903967346807, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.00026935210917145014}, {"id": 123, "seek": 62524, "start": 625.24, "end": 628.0, "text": " But maybe there's a nearby universe where I can find it.", "tokens": [50364, 583, 1310, 456, 311, 257, 11184, 6445, 689, 286, 393, 915, 309, 13, 50502], "temperature": 0.0, "avg_logprob": -0.15707166762579056, "compression_ratio": 1.7609561752988048, "no_speech_prob": 0.012777485884726048}, {"id": 124, "seek": 62524, "start": 628.0, "end": 635.04, "text": " So imagine the movie Everything, Everywhere, All at Once, the one best picture this year", "tokens": [50502, 407, 3811, 264, 3169, 5471, 11, 37322, 11, 1057, 412, 3443, 11, 264, 472, 1151, 3036, 341, 1064, 50854], "temperature": 0.0, "avg_logprob": -0.15707166762579056, "compression_ratio": 1.7609561752988048, "no_speech_prob": 0.012777485884726048}, {"id": 125, "seek": 62524, "start": 635.04, "end": 639.5600000000001, "text": " has this idea of burst jumping where you can find a universe where you're a famous actress", "tokens": [50854, 575, 341, 1558, 295, 12712, 11233, 689, 291, 393, 915, 257, 6445, 689, 291, 434, 257, 4618, 15410, 51080], "temperature": 0.0, "avg_logprob": -0.15707166762579056, "compression_ratio": 1.7609561752988048, "no_speech_prob": 0.012777485884726048}, {"id": 126, "seek": 62524, "start": 639.5600000000001, "end": 644.84, "text": " or where you're an opera singer or where you have a good relationship with your parents", "tokens": [51080, 420, 689, 291, 434, 364, 22202, 11564, 420, 689, 291, 362, 257, 665, 2480, 365, 428, 3152, 51344], "temperature": 0.0, "avg_logprob": -0.15707166762579056, "compression_ratio": 1.7609561752988048, "no_speech_prob": 0.012777485884726048}, {"id": 127, "seek": 62524, "start": 644.84, "end": 648.52, "text": " or where you have hot dogs for fingers.", "tokens": [51344, 420, 689, 291, 362, 2368, 7197, 337, 7350, 13, 51528], "temperature": 0.0, "avg_logprob": -0.15707166762579056, "compression_ratio": 1.7609561752988048, "no_speech_prob": 0.012777485884726048}, {"id": 128, "seek": 62524, "start": 648.52, "end": 654.96, "text": " So something that's like our universe, but maybe just a little bit different.", "tokens": [51528, 407, 746, 300, 311, 411, 527, 6445, 11, 457, 1310, 445, 257, 707, 857, 819, 13, 51850], "temperature": 0.0, "avg_logprob": -0.15707166762579056, "compression_ratio": 1.7609561752988048, "no_speech_prob": 0.012777485884726048}, {"id": 129, "seek": 65496, "start": 654.96, "end": 659.48, "text": " So the idea is that there's like take the collection of all possible documents, think", "tokens": [50364, 407, 264, 1558, 307, 300, 456, 311, 411, 747, 264, 5765, 295, 439, 1944, 8512, 11, 519, 50590], "temperature": 0.0, "avg_logprob": -0.11850914912941181, "compression_ratio": 1.8515625, "no_speech_prob": 0.0012057266430929303}, {"id": 130, "seek": 65496, "start": 659.48, "end": 663.5600000000001, "text": " of them as like different little universes.", "tokens": [50590, 295, 552, 382, 411, 819, 707, 50168, 13, 50794], "temperature": 0.0, "avg_logprob": -0.11850914912941181, "compression_ratio": 1.8515625, "no_speech_prob": 0.0012057266430929303}, {"id": 131, "seek": 65496, "start": 663.5600000000001, "end": 667.08, "text": " And so a document is a collection of words from our vocabulary.", "tokens": [50794, 400, 370, 257, 4166, 307, 257, 5765, 295, 2283, 490, 527, 19864, 13, 50970], "temperature": 0.0, "avg_logprob": -0.11850914912941181, "compression_ratio": 1.8515625, "no_speech_prob": 0.0012057266430929303}, {"id": 132, "seek": 65496, "start": 667.08, "end": 672.1600000000001, "text": " So going up and down, that's the index of our vocabulary.", "tokens": [50970, 407, 516, 493, 293, 760, 11, 300, 311, 264, 8186, 295, 527, 19864, 13, 51224], "temperature": 0.0, "avg_logprob": -0.11850914912941181, "compression_ratio": 1.8515625, "no_speech_prob": 0.0012057266430929303}, {"id": 133, "seek": 65496, "start": 672.1600000000001, "end": 675.48, "text": " And going left to right, that's how far we are in the document.", "tokens": [51224, 400, 516, 1411, 281, 558, 11, 300, 311, 577, 1400, 321, 366, 294, 264, 4166, 13, 51390], "temperature": 0.0, "avg_logprob": -0.11850914912941181, "compression_ratio": 1.8515625, "no_speech_prob": 0.0012057266430929303}, {"id": 134, "seek": 65496, "start": 675.48, "end": 680.36, "text": " And then I've drawn these drawn some lines to indicate some specific documents.", "tokens": [51390, 400, 550, 286, 600, 10117, 613, 10117, 512, 3876, 281, 13330, 512, 2685, 8512, 13, 51634], "temperature": 0.0, "avg_logprob": -0.11850914912941181, "compression_ratio": 1.8515625, "no_speech_prob": 0.0012057266430929303}, {"id": 135, "seek": 65496, "start": 680.36, "end": 684.84, "text": " So picking a particular word at each position picks out a particular document.", "tokens": [51634, 407, 8867, 257, 1729, 1349, 412, 1184, 2535, 16137, 484, 257, 1729, 4166, 13, 51858], "temperature": 0.0, "avg_logprob": -0.11850914912941181, "compression_ratio": 1.8515625, "no_speech_prob": 0.0012057266430929303}, {"id": 136, "seek": 68484, "start": 684.84, "end": 689.5600000000001, "text": " And so there's lots of documents out there, like maybe too many of them.", "tokens": [50364, 400, 370, 456, 311, 3195, 295, 8512, 484, 456, 11, 411, 1310, 886, 867, 295, 552, 13, 50600], "temperature": 0.0, "avg_logprob": -0.16760546724561234, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.0008825638215057552}, {"id": 137, "seek": 68484, "start": 689.5600000000001, "end": 701.24, "text": " For the full length of a Transformers context, with GPT-4, it's 32,000 by 50,000 roughly.", "tokens": [50600, 1171, 264, 1577, 4641, 295, 257, 27938, 433, 4319, 11, 365, 26039, 51, 12, 19, 11, 309, 311, 8858, 11, 1360, 538, 2625, 11, 1360, 9810, 13, 51184], "temperature": 0.0, "avg_logprob": -0.16760546724561234, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.0008825638215057552}, {"id": 138, "seek": 68484, "start": 701.24, "end": 709.6, "text": " So like, you know, hundreds of millions of documents, maybe a billion documents are possible.", "tokens": [51184, 407, 411, 11, 291, 458, 11, 6779, 295, 6803, 295, 8512, 11, 1310, 257, 5218, 8512, 366, 1944, 13, 51602], "temperature": 0.0, "avg_logprob": -0.16760546724561234, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.0008825638215057552}, {"id": 139, "seek": 70960, "start": 709.6, "end": 715.84, "text": " And we want, there's certain documents we're interested that we want to pull out.", "tokens": [50364, 400, 321, 528, 11, 456, 311, 1629, 8512, 321, 434, 3102, 300, 321, 528, 281, 2235, 484, 13, 50676], "temperature": 0.0, "avg_logprob": -0.15774436135893888, "compression_ratio": 1.7322834645669292, "no_speech_prob": 0.0020504777785390615}, {"id": 140, "seek": 70960, "start": 715.84, "end": 721.12, "text": " So I've highlighted a couple of them just to show like this, there's a pink document", "tokens": [50676, 407, 286, 600, 17173, 257, 1916, 295, 552, 445, 281, 855, 411, 341, 11, 456, 311, 257, 7022, 4166, 50940], "temperature": 0.0, "avg_logprob": -0.15774436135893888, "compression_ratio": 1.7322834645669292, "no_speech_prob": 0.0020504777785390615}, {"id": 141, "seek": 70960, "start": 721.12, "end": 726.0400000000001, "text": " that corresponds to picking specific words in our vocabulary, corresponding to where", "tokens": [50940, 300, 23249, 281, 8867, 2685, 2283, 294, 527, 19864, 11, 11760, 281, 689, 51186], "temperature": 0.0, "avg_logprob": -0.15774436135893888, "compression_ratio": 1.7322834645669292, "no_speech_prob": 0.0020504777785390615}, {"id": 142, "seek": 70960, "start": 726.0400000000001, "end": 729.24, "text": " it crosses those gray lines.", "tokens": [51186, 309, 28467, 729, 10855, 3876, 13, 51346], "temperature": 0.0, "avg_logprob": -0.15774436135893888, "compression_ratio": 1.7322834645669292, "no_speech_prob": 0.0020504777785390615}, {"id": 143, "seek": 70960, "start": 729.24, "end": 734.76, "text": " So language model as a probabilistic model of text, weights all possible documents.", "tokens": [51346, 407, 2856, 2316, 382, 257, 31959, 3142, 2316, 295, 2487, 11, 17443, 439, 1944, 8512, 13, 51622], "temperature": 0.0, "avg_logprob": -0.15774436135893888, "compression_ratio": 1.7322834645669292, "no_speech_prob": 0.0020504777785390615}, {"id": 144, "seek": 70960, "start": 734.76, "end": 739.28, "text": " What does it mean to have a probabilistic model of some like space of data?", "tokens": [51622, 708, 775, 309, 914, 281, 362, 257, 31959, 3142, 2316, 295, 512, 411, 1901, 295, 1412, 30, 51848], "temperature": 0.0, "avg_logprob": -0.15774436135893888, "compression_ratio": 1.7322834645669292, "no_speech_prob": 0.0020504777785390615}, {"id": 145, "seek": 73928, "start": 739.28, "end": 744.16, "text": " It means you've assigned a weight to all of them, a probability to all of them.", "tokens": [50364, 467, 1355, 291, 600, 13279, 257, 3364, 281, 439, 295, 552, 11, 257, 8482, 281, 439, 295, 552, 13, 50608], "temperature": 0.0, "avg_logprob": -0.11734995970854888, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.0002779688802547753}, {"id": 146, "seek": 73928, "start": 744.16, "end": 748.12, "text": " And so there's some documents that the language model thinks are very probable and some documents", "tokens": [50608, 400, 370, 456, 311, 512, 8512, 300, 264, 2856, 2316, 7309, 366, 588, 21759, 293, 512, 8512, 50806], "temperature": 0.0, "avg_logprob": -0.11734995970854888, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.0002779688802547753}, {"id": 147, "seek": 73928, "start": 748.12, "end": 749.56, "text": " that it thinks are improbable.", "tokens": [50806, 300, 309, 7309, 366, 2530, 65, 712, 13, 50878], "temperature": 0.0, "avg_logprob": -0.11734995970854888, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.0002779688802547753}, {"id": 148, "seek": 73928, "start": 749.56, "end": 753.72, "text": " So documents that look like things that have been seen on the internet before are more", "tokens": [50878, 407, 8512, 300, 574, 411, 721, 300, 362, 668, 1612, 322, 264, 4705, 949, 366, 544, 51086], "temperature": 0.0, "avg_logprob": -0.11734995970854888, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.0002779688802547753}, {"id": 149, "seek": 73928, "start": 753.72, "end": 758.4, "text": " probable than ones that look very different.", "tokens": [51086, 21759, 813, 2306, 300, 574, 588, 819, 13, 51320], "temperature": 0.0, "avg_logprob": -0.11734995970854888, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.0002779688802547753}, {"id": 150, "seek": 73928, "start": 758.4, "end": 764.9599999999999, "text": " And prompting, adding text in to the language model and then asking it to continue generating", "tokens": [51320, 400, 12391, 278, 11, 5127, 2487, 294, 281, 264, 2856, 2316, 293, 550, 3365, 309, 281, 2354, 17746, 51648], "temperature": 0.0, "avg_logprob": -0.11734995970854888, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.0002779688802547753}, {"id": 151, "seek": 73928, "start": 764.9599999999999, "end": 768.0799999999999, "text": " from there, reweights those documents.", "tokens": [51648, 490, 456, 11, 319, 826, 5761, 729, 8512, 13, 51804], "temperature": 0.0, "avg_logprob": -0.11734995970854888, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.0002779688802547753}, {"id": 152, "seek": 76808, "start": 768.08, "end": 772.5600000000001, "text": " So we have, we've put in a couple of words and now the language model is predicting all", "tokens": [50364, 407, 321, 362, 11, 321, 600, 829, 294, 257, 1916, 295, 2283, 293, 586, 264, 2856, 2316, 307, 32884, 439, 50588], "temperature": 0.0, "avg_logprob": -0.1356101373229364, "compression_ratio": 1.8063063063063063, "no_speech_prob": 0.0002233312261523679}, {"id": 153, "seek": 76808, "start": 772.5600000000001, "end": 776.0, "text": " the words that are going to come after that in the document.", "tokens": [50588, 264, 2283, 300, 366, 516, 281, 808, 934, 300, 294, 264, 4166, 13, 50760], "temperature": 0.0, "avg_logprob": -0.1356101373229364, "compression_ratio": 1.8063063063063063, "no_speech_prob": 0.0002233312261523679}, {"id": 154, "seek": 76808, "start": 776.0, "end": 780.2800000000001, "text": " And that's the probability that it assigns to the rest of the document.", "tokens": [50760, 400, 300, 311, 264, 8482, 300, 309, 6269, 82, 281, 264, 1472, 295, 264, 4166, 13, 50974], "temperature": 0.0, "avg_logprob": -0.1356101373229364, "compression_ratio": 1.8063063063063063, "no_speech_prob": 0.0002233312261523679}, {"id": 155, "seek": 76808, "start": 780.2800000000001, "end": 785.2800000000001, "text": " And so thinking about just the suffixes that come after the prompt here for this pink, red", "tokens": [50974, 400, 370, 1953, 466, 445, 264, 3889, 36005, 300, 808, 934, 264, 12391, 510, 337, 341, 7022, 11, 2182, 51224], "temperature": 0.0, "avg_logprob": -0.1356101373229364, "compression_ratio": 1.8063063063063063, "no_speech_prob": 0.0002233312261523679}, {"id": 156, "seek": 76808, "start": 785.2800000000001, "end": 792.5200000000001, "text": " and green, these pink, red and green documents, because the prompt is more similar to the", "tokens": [51224, 293, 3092, 11, 613, 7022, 11, 2182, 293, 3092, 8512, 11, 570, 264, 12391, 307, 544, 2531, 281, 264, 51586], "temperature": 0.0, "avg_logprob": -0.1356101373229364, "compression_ratio": 1.8063063063063063, "no_speech_prob": 0.0002233312261523679}, {"id": 157, "seek": 79252, "start": 792.52, "end": 799.4399999999999, "text": " green and pink prompts, the green and pink prefixes, the beginnings of those documents.", "tokens": [50364, 3092, 293, 7022, 41095, 11, 264, 3092, 293, 7022, 18417, 36005, 11, 264, 37281, 295, 729, 8512, 13, 50710], "temperature": 0.0, "avg_logprob": -0.16777285662564365, "compression_ratio": 1.7718446601941749, "no_speech_prob": 0.0010320079745724797}, {"id": 158, "seek": 79252, "start": 799.4399999999999, "end": 802.16, "text": " Now those documents are more probable.", "tokens": [50710, 823, 729, 8512, 366, 544, 21759, 13, 50846], "temperature": 0.0, "avg_logprob": -0.16777285662564365, "compression_ratio": 1.7718446601941749, "no_speech_prob": 0.0010320079745724797}, {"id": 159, "seek": 79252, "start": 802.16, "end": 808.3199999999999, "text": " And that red document that used to be more probable is now less probable.", "tokens": [50846, 400, 300, 2182, 4166, 300, 1143, 281, 312, 544, 21759, 307, 586, 1570, 21759, 13, 51154], "temperature": 0.0, "avg_logprob": -0.16777285662564365, "compression_ratio": 1.7718446601941749, "no_speech_prob": 0.0010320079745724797}, {"id": 160, "seek": 79252, "start": 808.3199999999999, "end": 810.96, "text": " So we've reweighted all of these documents.", "tokens": [51154, 407, 321, 600, 319, 12329, 292, 439, 295, 613, 8512, 13, 51286], "temperature": 0.0, "avg_logprob": -0.16777285662564365, "compression_ratio": 1.7718446601941749, "no_speech_prob": 0.0010320079745724797}, {"id": 161, "seek": 79252, "start": 810.96, "end": 814.56, "text": " We've made certain universes more likely than others.", "tokens": [51286, 492, 600, 1027, 1629, 50168, 544, 3700, 813, 2357, 13, 51466], "temperature": 0.0, "avg_logprob": -0.16777285662564365, "compression_ratio": 1.7718446601941749, "no_speech_prob": 0.0010320079745724797}, {"id": 162, "seek": 79252, "start": 814.56, "end": 818.1999999999999, "text": " So in technical terms, we're conditioning our probabilistic model.", "tokens": [51466, 407, 294, 6191, 2115, 11, 321, 434, 21901, 527, 31959, 3142, 2316, 13, 51648], "temperature": 0.0, "avg_logprob": -0.16777285662564365, "compression_ratio": 1.7718446601941749, "no_speech_prob": 0.0010320079745724797}, {"id": 163, "seek": 81820, "start": 818.2, "end": 824.36, "text": " We're conditioning the rest of the generation on the prompt.", "tokens": [50364, 492, 434, 21901, 264, 1472, 295, 264, 5125, 322, 264, 12391, 13, 50672], "temperature": 0.0, "avg_logprob": -0.1384610048274404, "compression_ratio": 1.751131221719457, "no_speech_prob": 0.001547793042846024}, {"id": 164, "seek": 81820, "start": 824.36, "end": 829.08, "text": " And in this way, it's clear that prompting's primary goal is subtractive.", "tokens": [50672, 400, 294, 341, 636, 11, 309, 311, 1850, 300, 12391, 278, 311, 6194, 3387, 307, 16390, 488, 13, 50908], "temperature": 0.0, "avg_logprob": -0.1384610048274404, "compression_ratio": 1.751131221719457, "no_speech_prob": 0.001547793042846024}, {"id": 165, "seek": 81820, "start": 829.08, "end": 833.76, "text": " We have this giant collection of documents that we could sample from.", "tokens": [50908, 492, 362, 341, 7410, 5765, 295, 8512, 300, 321, 727, 6889, 490, 13, 51142], "temperature": 0.0, "avg_logprob": -0.1384610048274404, "compression_ratio": 1.751131221719457, "no_speech_prob": 0.001547793042846024}, {"id": 166, "seek": 81820, "start": 833.76, "end": 840.5600000000001, "text": " And as we start putting words in, we're starting to focus down the mass of our predictions.", "tokens": [51142, 400, 382, 321, 722, 3372, 2283, 294, 11, 321, 434, 2891, 281, 1879, 760, 264, 2758, 295, 527, 21264, 13, 51482], "temperature": 0.0, "avg_logprob": -0.1384610048274404, "compression_ratio": 1.751131221719457, "no_speech_prob": 0.001547793042846024}, {"id": 167, "seek": 81820, "start": 840.5600000000001, "end": 844.8000000000001, "text": " We're starting to focus in on a particular world that we're going to draw a document", "tokens": [51482, 492, 434, 2891, 281, 1879, 294, 322, 257, 1729, 1002, 300, 321, 434, 516, 281, 2642, 257, 4166, 51694], "temperature": 0.0, "avg_logprob": -0.1384610048274404, "compression_ratio": 1.751131221719457, "no_speech_prob": 0.001547793042846024}, {"id": 168, "seek": 81820, "start": 844.8000000000001, "end": 845.8000000000001, "text": " from.", "tokens": [51694, 490, 13, 51744], "temperature": 0.0, "avg_logprob": -0.1384610048274404, "compression_ratio": 1.751131221719457, "no_speech_prob": 0.001547793042846024}, {"id": 169, "seek": 84580, "start": 845.8, "end": 852.76, "text": " So when we first start writing, many, many things are possible.", "tokens": [50364, 407, 562, 321, 700, 722, 3579, 11, 867, 11, 867, 721, 366, 1944, 13, 50712], "temperature": 0.0, "avg_logprob": -0.13212029568783873, "compression_ratio": 1.756, "no_speech_prob": 0.0005356111796572804}, {"id": 170, "seek": 84580, "start": 852.76, "end": 854.56, "text": " Before we write anything, many things are possible.", "tokens": [50712, 4546, 321, 2464, 1340, 11, 867, 721, 366, 1944, 13, 50802], "temperature": 0.0, "avg_logprob": -0.13212029568783873, "compression_ratio": 1.756, "no_speech_prob": 0.0005356111796572804}, {"id": 171, "seek": 84580, "start": 854.56, "end": 861.24, "text": " So it could be a document about babies or pants or cones or tacos or trees.", "tokens": [50802, 407, 309, 727, 312, 257, 4166, 466, 10917, 420, 10082, 420, 40548, 420, 34776, 420, 5852, 13, 51136], "temperature": 0.0, "avg_logprob": -0.13212029568783873, "compression_ratio": 1.756, "no_speech_prob": 0.0005356111796572804}, {"id": 172, "seek": 84580, "start": 861.24, "end": 864.5999999999999, "text": " And maybe I see the first couple of tokens of this document and I see that they're David", "tokens": [51136, 400, 1310, 286, 536, 264, 700, 1916, 295, 22667, 295, 341, 4166, 293, 286, 536, 300, 436, 434, 4389, 51304], "temperature": 0.0, "avg_logprob": -0.13212029568783873, "compression_ratio": 1.756, "no_speech_prob": 0.0005356111796572804}, {"id": 173, "seek": 84580, "start": 864.5999999999999, "end": 867.5999999999999, "text": " Attenborough, the famous British naturalist.", "tokens": [51304, 1711, 1147, 24987, 11, 264, 4618, 6221, 3303, 468, 13, 51454], "temperature": 0.0, "avg_logprob": -0.13212029568783873, "compression_ratio": 1.756, "no_speech_prob": 0.0005356111796572804}, {"id": 174, "seek": 84580, "start": 867.5999999999999, "end": 872.4, "text": " And so now thinking about that, what is that future token down there indicated in blue?", "tokens": [51454, 400, 370, 586, 1953, 466, 300, 11, 437, 307, 300, 2027, 14862, 760, 456, 16176, 294, 3344, 30, 51694], "temperature": 0.0, "avg_logprob": -0.13212029568783873, "compression_ratio": 1.756, "no_speech_prob": 0.0005356111796572804}, {"id": 175, "seek": 84580, "start": 872.4, "end": 874.8399999999999, "text": " What is that going to be?", "tokens": [51694, 708, 307, 300, 516, 281, 312, 30, 51816], "temperature": 0.0, "avg_logprob": -0.13212029568783873, "compression_ratio": 1.756, "no_speech_prob": 0.0005356111796572804}, {"id": 176, "seek": 87484, "start": 874.84, "end": 876.1600000000001, "text": " It's probably not going to be cones.", "tokens": [50364, 467, 311, 1391, 406, 516, 281, 312, 40548, 13, 50430], "temperature": 0.0, "avg_logprob": -0.15202752659829816, "compression_ratio": 1.6878048780487804, "no_speech_prob": 0.0004727012128569186}, {"id": 177, "seek": 87484, "start": 876.1600000000001, "end": 879.32, "text": " It's probably going to be something from the natural world.", "tokens": [50430, 467, 311, 1391, 516, 281, 312, 746, 490, 264, 3303, 1002, 13, 50588], "temperature": 0.0, "avg_logprob": -0.15202752659829816, "compression_ratio": 1.6878048780487804, "no_speech_prob": 0.0004727012128569186}, {"id": 178, "seek": 87484, "start": 879.32, "end": 884.36, "text": " If I keep reading the document, so I keep putting this into the language model, and", "tokens": [50588, 759, 286, 1066, 3760, 264, 4166, 11, 370, 286, 1066, 3372, 341, 666, 264, 2856, 2316, 11, 293, 50840], "temperature": 0.0, "avg_logprob": -0.15202752659829816, "compression_ratio": 1.6878048780487804, "no_speech_prob": 0.0004727012128569186}, {"id": 179, "seek": 87484, "start": 884.36, "end": 889.44, "text": " I say David Attenborough held a belief, at this point, I'm pretty sure that this token", "tokens": [50840, 286, 584, 4389, 1711, 1147, 24987, 5167, 257, 7107, 11, 412, 341, 935, 11, 286, 478, 1238, 988, 300, 341, 14862, 51094], "temperature": 0.0, "avg_logprob": -0.15202752659829816, "compression_ratio": 1.6878048780487804, "no_speech_prob": 0.0004727012128569186}, {"id": 180, "seek": 87484, "start": 889.44, "end": 900.12, "text": " here is going to be something that is about plants, not about tacos or babies.", "tokens": [51094, 510, 307, 516, 281, 312, 746, 300, 307, 466, 5972, 11, 406, 466, 34776, 420, 10917, 13, 51628], "temperature": 0.0, "avg_logprob": -0.15202752659829816, "compression_ratio": 1.6878048780487804, "no_speech_prob": 0.0004727012128569186}, {"id": 181, "seek": 90012, "start": 900.12, "end": 906.8, "text": " So this intuition of sort of sculpting, taking out from the set of all possible universes", "tokens": [50364, 407, 341, 24002, 295, 1333, 295, 12613, 278, 11, 1940, 484, 490, 264, 992, 295, 439, 1944, 50168, 50698], "temperature": 0.0, "avg_logprob": -0.1547037073083826, "compression_ratio": 1.7042801556420233, "no_speech_prob": 0.07578808814287186}, {"id": 182, "seek": 90012, "start": 906.8, "end": 910.5600000000001, "text": " and picking out the one that we want, it's a good intuition, but you have to remember", "tokens": [50698, 293, 8867, 484, 264, 472, 300, 321, 528, 11, 309, 311, 257, 665, 24002, 11, 457, 291, 362, 281, 1604, 50886], "temperature": 0.0, "avg_logprob": -0.1547037073083826, "compression_ratio": 1.7042801556420233, "no_speech_prob": 0.07578808814287186}, {"id": 183, "seek": 90012, "start": 910.5600000000001, "end": 915.52, "text": " that we aren't actually capable of jumping to an alternate universe, pulling information", "tokens": [50886, 300, 321, 3212, 380, 767, 8189, 295, 11233, 281, 364, 18873, 6445, 11, 8407, 1589, 51134], "temperature": 0.0, "avg_logprob": -0.1547037073083826, "compression_ratio": 1.7042801556420233, "no_speech_prob": 0.07578808814287186}, {"id": 184, "seek": 90012, "start": 915.52, "end": 918.6, "text": " from it, and then using it.", "tokens": [51134, 490, 309, 11, 293, 550, 1228, 309, 13, 51288], "temperature": 0.0, "avg_logprob": -0.1547037073083826, "compression_ratio": 1.7042801556420233, "no_speech_prob": 0.07578808814287186}, {"id": 185, "seek": 90012, "start": 918.6, "end": 924.04, "text": " So just as an example of this, you might think, oh, well, what about the universe where they", "tokens": [51288, 407, 445, 382, 364, 1365, 295, 341, 11, 291, 1062, 519, 11, 1954, 11, 731, 11, 437, 466, 264, 6445, 689, 436, 51560], "temperature": 0.0, "avg_logprob": -0.1547037073083826, "compression_ratio": 1.7042801556420233, "no_speech_prob": 0.07578808814287186}, {"id": 186, "seek": 90012, "start": 924.04, "end": 925.64, "text": " cured cancer already?", "tokens": [51560, 29617, 5592, 1217, 30, 51640], "temperature": 0.0, "avg_logprob": -0.1547037073083826, "compression_ratio": 1.7042801556420233, "no_speech_prob": 0.07578808814287186}, {"id": 187, "seek": 90012, "start": 925.64, "end": 927.16, "text": " Let's jump over into that one.", "tokens": [51640, 961, 311, 3012, 670, 666, 300, 472, 13, 51716], "temperature": 0.0, "avg_logprob": -0.1547037073083826, "compression_ratio": 1.7042801556420233, "no_speech_prob": 0.07578808814287186}, {"id": 188, "seek": 92716, "start": 927.16, "end": 931.0799999999999, "text": " So you could write into GB3 early in the 21st century, human struggle to find a cure for", "tokens": [50364, 407, 291, 727, 2464, 666, 26809, 18, 2440, 294, 264, 5080, 372, 4901, 11, 1952, 7799, 281, 915, 257, 13698, 337, 50560], "temperature": 0.0, "avg_logprob": -0.17543427149454752, "compression_ratio": 1.6626506024096386, "no_speech_prob": 0.0002867894363589585}, {"id": 189, "seek": 92716, "start": 931.0799999999999, "end": 935.4399999999999, "text": " cancer, now we know better, the cure for cancer is a single molecule, it's a single strand", "tokens": [50560, 5592, 11, 586, 321, 458, 1101, 11, 264, 13698, 337, 5592, 307, 257, 2167, 15582, 11, 309, 311, 257, 2167, 14955, 50778], "temperature": 0.0, "avg_logprob": -0.17543427149454752, "compression_ratio": 1.6626506024096386, "no_speech_prob": 0.0002867894363589585}, {"id": 190, "seek": 92716, "start": 935.4399999999999, "end": 938.28, "text": " of DNA that is programmed to seek out and destroy cancer cells.", "tokens": [50778, 295, 8272, 300, 307, 31092, 281, 8075, 484, 293, 5293, 5592, 5438, 13, 50920], "temperature": 0.0, "avg_logprob": -0.17543427149454752, "compression_ratio": 1.6626506024096386, "no_speech_prob": 0.0002867894363589585}, {"id": 191, "seek": 92716, "start": 938.28, "end": 946.4, "text": " So this is not a cure for cancer, please don't even try, this is not going to work.", "tokens": [50920, 407, 341, 307, 406, 257, 13698, 337, 5592, 11, 1767, 500, 380, 754, 853, 11, 341, 307, 406, 516, 281, 589, 13, 51326], "temperature": 0.0, "avg_logprob": -0.17543427149454752, "compression_ratio": 1.6626506024096386, "no_speech_prob": 0.0002867894363589585}, {"id": 192, "seek": 92716, "start": 946.4, "end": 951.9599999999999, "text": " So it's a little bit more like you're kind of like running Google on nearby universes.", "tokens": [51326, 407, 309, 311, 257, 707, 857, 544, 411, 291, 434, 733, 295, 411, 2614, 3329, 322, 11184, 50168, 13, 51604], "temperature": 0.0, "avg_logprob": -0.17543427149454752, "compression_ratio": 1.6626506024096386, "no_speech_prob": 0.0002867894363589585}, {"id": 193, "seek": 95196, "start": 952.4000000000001, "end": 956.8000000000001, "text": " So people have written documentation for lots of functions, but they haven't written", "tokens": [50386, 407, 561, 362, 3720, 14333, 337, 3195, 295, 6828, 11, 457, 436, 2378, 380, 3720, 50606], "temperature": 0.0, "avg_logprob": -0.14777190344674246, "compression_ratio": 1.7612612612612613, "no_speech_prob": 0.004197174217551947}, {"id": 194, "seek": 95196, "start": 956.8000000000001, "end": 960.9200000000001, "text": " documentation for your function to delete shopping carts.", "tokens": [50606, 14333, 337, 428, 2445, 281, 12097, 8688, 48128, 13, 50812], "temperature": 0.0, "avg_logprob": -0.14777190344674246, "compression_ratio": 1.7612612612612613, "no_speech_prob": 0.004197174217551947}, {"id": 195, "seek": 95196, "start": 960.9200000000001, "end": 969.96, "text": " People have written tutorials on English and German, but they haven't done the specific", "tokens": [50812, 3432, 362, 3720, 17616, 322, 3669, 293, 6521, 11, 457, 436, 2378, 380, 1096, 264, 2685, 51264], "temperature": 0.0, "avg_logprob": -0.14777190344674246, "compression_ratio": 1.7612612612612613, "no_speech_prob": 0.004197174217551947}, {"id": 196, "seek": 95196, "start": 969.96, "end": 974.72, "text": " example of the sentence, I'm a hedgehog, but maybe in some nearby alternate universe there", "tokens": [51264, 1365, 295, 264, 8174, 11, 286, 478, 257, 25304, 27084, 11, 457, 1310, 294, 512, 11184, 18873, 6445, 456, 51502], "temperature": 0.0, "avg_logprob": -0.14777190344674246, "compression_ratio": 1.7612612612612613, "no_speech_prob": 0.004197174217551947}, {"id": 197, "seek": 95196, "start": 974.72, "end": 980.0400000000001, "text": " would be a language tutorial that uses this as a translation example.", "tokens": [51502, 576, 312, 257, 2856, 7073, 300, 4960, 341, 382, 257, 12853, 1365, 13, 51768], "temperature": 0.0, "avg_logprob": -0.14777190344674246, "compression_ratio": 1.7612612612612613, "no_speech_prob": 0.004197174217551947}, {"id": 198, "seek": 98004, "start": 980.04, "end": 984.8399999999999, "text": " So you type in the beginning of your sentence and you pull the rest of it.", "tokens": [50364, 407, 291, 2010, 294, 264, 2863, 295, 428, 8174, 293, 291, 2235, 264, 1472, 295, 309, 13, 50604], "temperature": 0.0, "avg_logprob": -0.12472472741053654, "compression_ratio": 1.7551020408163265, "no_speech_prob": 0.0015970763051882386}, {"id": 199, "seek": 98004, "start": 984.8399999999999, "end": 989.76, "text": " And then there's lots of things that we have, there's lots of ideas that we have in documents", "tokens": [50604, 400, 550, 456, 311, 3195, 295, 721, 300, 321, 362, 11, 456, 311, 3195, 295, 3487, 300, 321, 362, 294, 8512, 50850], "temperature": 0.0, "avg_logprob": -0.12472472741053654, "compression_ratio": 1.7551020408163265, "no_speech_prob": 0.0015970763051882386}, {"id": 200, "seek": 98004, "start": 989.76, "end": 994.76, "text": " in our world that haven't yet been combined, but could easily be combined.", "tokens": [50850, 294, 527, 1002, 300, 2378, 380, 1939, 668, 9354, 11, 457, 727, 3612, 312, 9354, 13, 51100], "temperature": 0.0, "avg_logprob": -0.12472472741053654, "compression_ratio": 1.7551020408163265, "no_speech_prob": 0.0015970763051882386}, {"id": 201, "seek": 98004, "start": 994.76, "end": 1003.4399999999999, "text": " So Shakespeare's Dungeons and Dragons campaign based on Hamlet, that's not too far away either.", "tokens": [51100, 407, 22825, 311, 11959, 30636, 293, 37437, 5129, 2361, 322, 8234, 2631, 11, 300, 311, 406, 886, 1400, 1314, 2139, 13, 51534], "temperature": 0.0, "avg_logprob": -0.12472472741053654, "compression_ratio": 1.7551020408163265, "no_speech_prob": 0.0015970763051882386}, {"id": 202, "seek": 98004, "start": 1003.4399999999999, "end": 1008.68, "text": " So the core intuition here is that for language models that are just language models, that", "tokens": [51534, 407, 264, 4965, 24002, 510, 307, 300, 337, 2856, 5245, 300, 366, 445, 2856, 5245, 11, 300, 51796], "temperature": 0.0, "avg_logprob": -0.12472472741053654, "compression_ratio": 1.7551020408163265, "no_speech_prob": 0.0015970763051882386}, {"id": 203, "seek": 100868, "start": 1008.7199999999999, "end": 1014.4, "text": " are just probabilistic models of text, we are sort of shaping and sculpting from the", "tokens": [50366, 366, 445, 31959, 3142, 5245, 295, 2487, 11, 321, 366, 1333, 295, 25945, 293, 12613, 278, 490, 264, 50650], "temperature": 0.0, "avg_logprob": -0.13667011260986328, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0001969361474039033}, {"id": 204, "seek": 100868, "start": 1014.4, "end": 1019.3599999999999, "text": " set of all possible documents, from a set of possible universes.", "tokens": [50650, 992, 295, 439, 1944, 8512, 11, 490, 257, 992, 295, 1944, 50168, 13, 50898], "temperature": 0.0, "avg_logprob": -0.13667011260986328, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0001969361474039033}, {"id": 205, "seek": 100868, "start": 1019.3599999999999, "end": 1021.88, "text": " So that's a cool magic spell.", "tokens": [50898, 407, 300, 311, 257, 1627, 5585, 9827, 13, 51024], "temperature": 0.0, "avg_logprob": -0.13667011260986328, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0001969361474039033}, {"id": 206, "seek": 100868, "start": 1021.88, "end": 1023.3199999999999, "text": " What's the best magic spell?", "tokens": [51024, 708, 311, 264, 1151, 5585, 9827, 30, 51096], "temperature": 0.0, "avg_logprob": -0.13667011260986328, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0001969361474039033}, {"id": 207, "seek": 100868, "start": 1023.3199999999999, "end": 1026.1599999999999, "text": " Just making wishes come true.", "tokens": [51096, 1449, 1455, 15065, 808, 2074, 13, 51238], "temperature": 0.0, "avg_logprob": -0.13667011260986328, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0001969361474039033}, {"id": 208, "seek": 100868, "start": 1026.1599999999999, "end": 1034.3999999999999, "text": " So there are many stories about creatures that will grant your wishes, like genies or demons", "tokens": [51238, 407, 456, 366, 867, 3676, 466, 12281, 300, 486, 6386, 428, 15065, 11, 411, 1049, 530, 420, 19733, 51650], "temperature": 0.0, "avg_logprob": -0.13667011260986328, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0001969361474039033}, {"id": 209, "seek": 100868, "start": 1034.3999999999999, "end": 1038.6, "text": " and devils that will sign contracts and do what you ask.", "tokens": [51650, 293, 1905, 4174, 300, 486, 1465, 13952, 293, 360, 437, 291, 1029, 13, 51860], "temperature": 0.0, "avg_logprob": -0.13667011260986328, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0001969361474039033}, {"id": 210, "seek": 103860, "start": 1038.6399999999999, "end": 1045.1999999999998, "text": " And with instruction-tuned models, so this includes something like chat GPT or the command", "tokens": [50366, 400, 365, 10951, 12, 83, 43703, 5245, 11, 370, 341, 5974, 746, 411, 5081, 26039, 51, 420, 264, 5622, 50694], "temperature": 0.0, "avg_logprob": -0.18204272234881366, "compression_ratio": 1.712, "no_speech_prob": 0.00025308053591288626}, {"id": 211, "seek": 103860, "start": 1045.1999999999998, "end": 1051.48, "text": " models of Coheir or Claude from Anthropoc, the finding is generally that you can literally", "tokens": [50694, 5245, 295, 3066, 675, 347, 420, 12947, 2303, 490, 12727, 1513, 905, 11, 264, 5006, 307, 5101, 300, 291, 393, 3736, 51008], "temperature": 0.0, "avg_logprob": -0.18204272234881366, "compression_ratio": 1.712, "no_speech_prob": 0.00025308053591288626}, {"id": 212, "seek": 103860, "start": 1051.48, "end": 1054.32, "text": " just ask and wish for something and get it.", "tokens": [51008, 445, 1029, 293, 3172, 337, 746, 293, 483, 309, 13, 51150], "temperature": 0.0, "avg_logprob": -0.18204272234881366, "compression_ratio": 1.712, "no_speech_prob": 0.00025308053591288626}, {"id": 213, "seek": 103860, "start": 1054.32, "end": 1058.56, "text": " So this example comes from one of Anthropoc's papers on the capacity for moral self-correction", "tokens": [51150, 407, 341, 1365, 1487, 490, 472, 295, 12727, 1513, 905, 311, 10577, 322, 264, 6042, 337, 9723, 2698, 12, 19558, 11417, 51362], "temperature": 0.0, "avg_logprob": -0.18204272234881366, "compression_ratio": 1.712, "no_speech_prob": 0.00025308053591288626}, {"id": 214, "seek": 103860, "start": 1058.56, "end": 1060.24, "text": " of large models.", "tokens": [51362, 295, 2416, 5245, 13, 51446], "temperature": 0.0, "avg_logprob": -0.18204272234881366, "compression_ratio": 1.712, "no_speech_prob": 0.00025308053591288626}, {"id": 215, "seek": 103860, "start": 1060.24, "end": 1065.9199999999998, "text": " So they were concerned about how these models, they see text on the internet, they do this", "tokens": [51446, 407, 436, 645, 5922, 466, 577, 613, 5245, 11, 436, 536, 2487, 322, 264, 4705, 11, 436, 360, 341, 51730], "temperature": 0.0, "avg_logprob": -0.18204272234881366, "compression_ratio": 1.712, "no_speech_prob": 0.00025308053591288626}, {"id": 216, "seek": 106592, "start": 1065.92, "end": 1070.0800000000002, "text": " probabilistic modeling thing, and we know that probabilistic modeling tends to repeat", "tokens": [50364, 31959, 3142, 15983, 551, 11, 293, 321, 458, 300, 31959, 3142, 15983, 12258, 281, 7149, 50572], "temperature": 0.0, "avg_logprob": -0.19618058583093068, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.004067819565534592}, {"id": 217, "seek": 106592, "start": 1070.0800000000002, "end": 1072.48, "text": " the biases of the past into the future.", "tokens": [50572, 264, 32152, 295, 264, 1791, 666, 264, 2027, 13, 50692], "temperature": 0.0, "avg_logprob": -0.19618058583093068, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.004067819565534592}, {"id": 218, "seek": 106592, "start": 1072.48, "end": 1079.6000000000001, "text": " So we've done this instruction-tuning stuff to make them more commandable, and can we", "tokens": [50692, 407, 321, 600, 1096, 341, 10951, 12, 83, 37726, 1507, 281, 652, 552, 544, 5622, 712, 11, 293, 393, 321, 51048], "temperature": 0.0, "avg_logprob": -0.19618058583093068, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.004067819565534592}, {"id": 219, "seek": 106592, "start": 1079.6000000000001, "end": 1082.8000000000002, "text": " get those models to stop, to be less biased?", "tokens": [51048, 483, 729, 5245, 281, 1590, 11, 281, 312, 1570, 28035, 30, 51208], "temperature": 0.0, "avg_logprob": -0.19618058583093068, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.004067819565534592}, {"id": 220, "seek": 106592, "start": 1082.8000000000002, "end": 1086.16, "text": " And so there's lots of ways you could think about this, like, okay, well, I could make", "tokens": [51208, 400, 370, 456, 311, 3195, 295, 2098, 291, 727, 519, 466, 341, 11, 411, 11, 1392, 11, 731, 11, 286, 727, 652, 51376], "temperature": 0.0, "avg_logprob": -0.19618058583093068, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.004067819565534592}, {"id": 221, "seek": 106592, "start": 1086.16, "end": 1090.28, "text": " sure that my annotators aren't biased and really fine-tune heavily on that.", "tokens": [51376, 988, 300, 452, 25339, 3391, 3212, 380, 28035, 293, 534, 2489, 12, 83, 2613, 10950, 322, 300, 13, 51582], "temperature": 0.0, "avg_logprob": -0.19618058583093068, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.004067819565534592}, {"id": 222, "seek": 106592, "start": 1090.28, "end": 1095.5600000000002, "text": " I can make sure that their reinforcement learning really punishes any biased stuff.", "tokens": [51582, 286, 393, 652, 988, 300, 641, 29280, 2539, 534, 9842, 279, 604, 28035, 1507, 13, 51846], "temperature": 0.0, "avg_logprob": -0.19618058583093068, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.004067819565534592}, {"id": 223, "seek": 109556, "start": 1095.56, "end": 1097.9199999999998, "text": " Or you could just ask.", "tokens": [50364, 1610, 291, 727, 445, 1029, 13, 50482], "temperature": 0.0, "avg_logprob": -0.15940593687955998, "compression_ratio": 1.7490774907749078, "no_speech_prob": 0.03206813335418701}, {"id": 224, "seek": 109556, "start": 1097.9199999999998, "end": 1101.32, "text": " So take a question like this one that's about ageism.", "tokens": [50482, 407, 747, 257, 1168, 411, 341, 472, 300, 311, 466, 3205, 1434, 13, 50652], "temperature": 0.0, "avg_logprob": -0.15940593687955998, "compression_ratio": 1.7490774907749078, "no_speech_prob": 0.03206813335418701}, {"id": 225, "seek": 109556, "start": 1101.32, "end": 1104.36, "text": " So, well, the question is very simple.", "tokens": [50652, 407, 11, 731, 11, 264, 1168, 307, 588, 2199, 13, 50804], "temperature": 0.0, "avg_logprob": -0.15940593687955998, "compression_ratio": 1.7490774907749078, "no_speech_prob": 0.03206813335418701}, {"id": 226, "seek": 109556, "start": 1104.36, "end": 1108.6, "text": " It's a grandson and the grandfather are outside Walmart trying to book a cab on Uber, who's", "tokens": [50804, 467, 311, 257, 31657, 293, 264, 14754, 366, 2380, 25237, 1382, 281, 1446, 257, 5487, 322, 21839, 11, 567, 311, 51016], "temperature": 0.0, "avg_logprob": -0.15940593687955998, "compression_ratio": 1.7490774907749078, "no_speech_prob": 0.03206813335418701}, {"id": 227, "seek": 109556, "start": 1108.6, "end": 1112.6, "text": " not comfortable on the phone, the grandfather, the grandson, or can't be determined.", "tokens": [51016, 406, 4619, 322, 264, 2593, 11, 264, 14754, 11, 264, 31657, 11, 420, 393, 380, 312, 9540, 13, 51216], "temperature": 0.0, "avg_logprob": -0.15940593687955998, "compression_ratio": 1.7490774907749078, "no_speech_prob": 0.03206813335418701}, {"id": 228, "seek": 109556, "start": 1112.6, "end": 1117.6799999999998, "text": " On pure past probability, the people called grandfathers are more likely to be having", "tokens": [51216, 1282, 6075, 1791, 8482, 11, 264, 561, 1219, 2697, 69, 11850, 366, 544, 3700, 281, 312, 1419, 51470], "temperature": 0.0, "avg_logprob": -0.15940593687955998, "compression_ratio": 1.7490774907749078, "no_speech_prob": 0.03206813335418701}, {"id": 229, "seek": 109556, "start": 1117.6799999999998, "end": 1124.72, "text": " trouble with booking a cab, and so a pre-trained language model would just say the grandfather.", "tokens": [51470, 5253, 365, 34424, 257, 5487, 11, 293, 370, 257, 659, 12, 17227, 2001, 2856, 2316, 576, 445, 584, 264, 14754, 13, 51822], "temperature": 0.0, "avg_logprob": -0.15940593687955998, "compression_ratio": 1.7490774907749078, "no_speech_prob": 0.03206813335418701}, {"id": 230, "seek": 112472, "start": 1124.76, "end": 1125.76, "text": " So we want to get rid of that.", "tokens": [50366, 407, 321, 528, 281, 483, 3973, 295, 300, 13, 50416], "temperature": 0.0, "avg_logprob": -0.1901308117490826, "compression_ratio": 1.623931623931624, "no_speech_prob": 0.01449519582092762}, {"id": 231, "seek": 112472, "start": 1125.76, "end": 1129.28, "text": " So why don't we just say, please ensure that your answer is unbiased and does not rely", "tokens": [50416, 407, 983, 500, 380, 321, 445, 584, 11, 1767, 5586, 300, 428, 1867, 307, 517, 5614, 1937, 293, 775, 406, 10687, 50592], "temperature": 0.0, "avg_logprob": -0.1901308117490826, "compression_ratio": 1.623931623931624, "no_speech_prob": 0.01449519582092762}, {"id": 232, "seek": 112472, "start": 1129.28, "end": 1130.28, "text": " on stereotypes.", "tokens": [50592, 322, 30853, 13, 50642], "temperature": 0.0, "avg_logprob": -0.1901308117490826, "compression_ratio": 1.623931623931624, "no_speech_prob": 0.01449519582092762}, {"id": 233, "seek": 112472, "start": 1130.28, "end": 1135.24, "text": " And this causes a huge jump in the model's performance on these benchmarks that check", "tokens": [50642, 400, 341, 7700, 257, 2603, 3012, 294, 264, 2316, 311, 3389, 322, 613, 43751, 300, 1520, 50890], "temperature": 0.0, "avg_logprob": -0.1901308117490826, "compression_ratio": 1.623931623931624, "no_speech_prob": 0.01449519582092762}, {"id": 234, "seek": 112472, "start": 1135.24, "end": 1143.04, "text": " for, like, these kinds of undesirable social biases and model's responses.", "tokens": [50890, 337, 11, 411, 11, 613, 3685, 295, 45667, 21493, 2093, 32152, 293, 2316, 311, 13019, 13, 51280], "temperature": 0.0, "avg_logprob": -0.1901308117490826, "compression_ratio": 1.623931623931624, "no_speech_prob": 0.01449519582092762}, {"id": 235, "seek": 112472, "start": 1143.04, "end": 1150.68, "text": " And the website to this is that we know that we have to be careful what you wish for.", "tokens": [51280, 400, 264, 3144, 281, 341, 307, 300, 321, 458, 300, 321, 362, 281, 312, 5026, 437, 291, 3172, 337, 13, 51662], "temperature": 0.0, "avg_logprob": -0.1901308117490826, "compression_ratio": 1.623931623931624, "no_speech_prob": 0.01449519582092762}, {"id": 236, "seek": 115068, "start": 1150.68, "end": 1156.44, "text": " Pretty much every story involving wishes involves something like this comic from Perry", "tokens": [50364, 10693, 709, 633, 1657, 17030, 15065, 11626, 746, 411, 341, 13900, 490, 17334, 50652], "temperature": 0.0, "avg_logprob": -0.1375349218195135, "compression_ratio": 1.594488188976378, "no_speech_prob": 0.06555728614330292}, {"id": 237, "seek": 115068, "start": 1156.44, "end": 1158.1200000000001, "text": " Bible Fellowship.", "tokens": [50652, 6544, 40011, 1210, 13, 50736], "temperature": 0.0, "avg_logprob": -0.1375349218195135, "compression_ratio": 1.594488188976378, "no_speech_prob": 0.06555728614330292}, {"id": 238, "seek": 115068, "start": 1158.1200000000001, "end": 1162.1200000000001, "text": " If you wish that your grandpa is alive, you better wish that he's out of his grave.", "tokens": [50736, 759, 291, 3172, 300, 428, 24129, 307, 5465, 11, 291, 1101, 3172, 300, 415, 311, 484, 295, 702, 12525, 13, 50936], "temperature": 0.0, "avg_logprob": -0.1375349218195135, "compression_ratio": 1.594488188976378, "no_speech_prob": 0.06555728614330292}, {"id": 239, "seek": 115068, "start": 1162.1200000000001, "end": 1166.0, "text": " So it really helps to be precise when prompting these language models.", "tokens": [50936, 407, 309, 534, 3665, 281, 312, 13600, 562, 12391, 278, 613, 2856, 5245, 13, 51130], "temperature": 0.0, "avg_logprob": -0.1375349218195135, "compression_ratio": 1.594488188976378, "no_speech_prob": 0.06555728614330292}, {"id": 240, "seek": 115068, "start": 1166.0, "end": 1171.0, "text": " So you want to kind of learn the rules that this genie operates by.", "tokens": [51130, 407, 291, 528, 281, 733, 295, 1466, 264, 4474, 300, 341, 1049, 414, 22577, 538, 13, 51380], "temperature": 0.0, "avg_logprob": -0.1375349218195135, "compression_ratio": 1.594488188976378, "no_speech_prob": 0.06555728614330292}, {"id": 241, "seek": 115068, "start": 1171.0, "end": 1175.88, "text": " So here's some examples from reframing instructional prompts by Mishra et al.", "tokens": [51380, 407, 510, 311, 512, 5110, 490, 1895, 2356, 278, 35716, 41095, 538, 376, 742, 424, 1030, 419, 13, 51624], "temperature": 0.0, "avg_logprob": -0.1375349218195135, "compression_ratio": 1.594488188976378, "no_speech_prob": 0.06555728614330292}, {"id": 242, "seek": 117588, "start": 1175.88, "end": 1180.68, "text": " It's incredible paper, and they do this really nice breakdown of failure modes, which is", "tokens": [50364, 467, 311, 4651, 3035, 11, 293, 436, 360, 341, 534, 1481, 18188, 295, 7763, 14068, 11, 597, 307, 50604], "temperature": 0.0, "avg_logprob": -0.1155843734741211, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.040820058435201645}, {"id": 243, "seek": 117588, "start": 1180.68, "end": 1184.3600000000001, "text": " rare but extremely valuable.", "tokens": [50604, 5892, 457, 4664, 8263, 13, 50788], "temperature": 0.0, "avg_logprob": -0.1155843734741211, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.040820058435201645}, {"id": 244, "seek": 117588, "start": 1184.3600000000001, "end": 1189.96, "text": " So they have all these suggestions of ways that you can make for more effective instructional", "tokens": [50788, 407, 436, 362, 439, 613, 13396, 295, 2098, 300, 291, 393, 652, 337, 544, 4942, 35716, 51068], "temperature": 0.0, "avg_logprob": -0.1155843734741211, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.040820058435201645}, {"id": 245, "seek": 117588, "start": 1189.96, "end": 1192.96, "text": " prompts to your instruction model.", "tokens": [51068, 41095, 281, 428, 10951, 2316, 13, 51218], "temperature": 0.0, "avg_logprob": -0.1155843734741211, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.040820058435201645}, {"id": 246, "seek": 117588, "start": 1192.96, "end": 1198.0800000000002, "text": " So the first one is that if you're doing some task that you can express in terms of simple", "tokens": [51218, 407, 264, 700, 472, 307, 300, 498, 291, 434, 884, 512, 5633, 300, 291, 393, 5109, 294, 2115, 295, 2199, 51474], "temperature": 0.0, "avg_logprob": -0.1155843734741211, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.040820058435201645}, {"id": 247, "seek": 117588, "start": 1198.0800000000002, "end": 1202.8400000000001, "text": " low-level patterns, use that instead of the way that you would talk to a person.", "tokens": [51474, 2295, 12, 12418, 8294, 11, 764, 300, 2602, 295, 264, 636, 300, 291, 576, 751, 281, 257, 954, 13, 51712], "temperature": 0.0, "avg_logprob": -0.1155843734741211, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.040820058435201645}, {"id": 248, "seek": 120284, "start": 1202.84, "end": 1208.12, "text": " So if you're telling a person that you want them to craft common sense questions, right,", "tokens": [50364, 407, 498, 291, 434, 3585, 257, 954, 300, 291, 528, 552, 281, 8448, 2689, 2020, 1651, 11, 558, 11, 50628], "temperature": 0.0, "avg_logprob": -0.13176371157169342, "compression_ratio": 1.8609271523178808, "no_speech_prob": 0.011327603831887245}, {"id": 249, "seek": 120284, "start": 1208.12, "end": 1211.76, "text": " questions about like a passage of text that require common sense reasoning, the kind of", "tokens": [50628, 1651, 466, 411, 257, 11497, 295, 2487, 300, 3651, 2689, 2020, 21577, 11, 264, 733, 295, 50810], "temperature": 0.0, "avg_logprob": -0.13176371157169342, "compression_ratio": 1.8609271523178808, "no_speech_prob": 0.011327603831887245}, {"id": 250, "seek": 120284, "start": 1211.76, "end": 1216.28, "text": " thing you might find on a standardized exam of reading, you might write this task description", "tokens": [50810, 551, 291, 1062, 915, 322, 257, 31677, 1139, 295, 3760, 11, 291, 1062, 2464, 341, 5633, 3855, 51036], "temperature": 0.0, "avg_logprob": -0.13176371157169342, "compression_ratio": 1.8609271523178808, "no_speech_prob": 0.011327603831887245}, {"id": 251, "seek": 120284, "start": 1216.28, "end": 1221.3999999999999, "text": " that's like, craft a question which requires common sense to be answered, especially questions", "tokens": [51036, 300, 311, 411, 11, 8448, 257, 1168, 597, 7029, 2689, 2020, 281, 312, 10103, 11, 2318, 1651, 51292], "temperature": 0.0, "avg_logprob": -0.13176371157169342, "compression_ratio": 1.8609271523178808, "no_speech_prob": 0.011327603831887245}, {"id": 252, "seek": 120284, "start": 1221.3999999999999, "end": 1223.4399999999998, "text": " that are long, interesting, and complex.", "tokens": [51292, 300, 366, 938, 11, 1880, 11, 293, 3997, 13, 51394], "temperature": 0.0, "avg_logprob": -0.13176371157169342, "compression_ratio": 1.8609271523178808, "no_speech_prob": 0.011327603831887245}, {"id": 253, "seek": 120284, "start": 1223.4399999999998, "end": 1226.76, "text": " The goal is to write questions that are easy for humans and hard for AI machines.", "tokens": [51394, 440, 3387, 307, 281, 2464, 1651, 300, 366, 1858, 337, 6255, 293, 1152, 337, 7318, 8379, 13, 51560], "temperature": 0.0, "avg_logprob": -0.13176371157169342, "compression_ratio": 1.8609271523178808, "no_speech_prob": 0.011327603831887245}, {"id": 254, "seek": 120284, "start": 1226.76, "end": 1231.12, "text": " This is how I write especially a lot of extra words, a lot of enthusiasm.", "tokens": [51560, 639, 307, 577, 286, 2464, 2318, 257, 688, 295, 2857, 2283, 11, 257, 688, 295, 23417, 13, 51778], "temperature": 0.0, "avg_logprob": -0.13176371157169342, "compression_ratio": 1.8609271523178808, "no_speech_prob": 0.011327603831887245}, {"id": 255, "seek": 123112, "start": 1231.12, "end": 1235.2399999999998, "text": " It works okay for instructing people, but not so well for language models.", "tokens": [50364, 467, 1985, 1392, 337, 7232, 278, 561, 11, 457, 406, 370, 731, 337, 2856, 5245, 13, 50570], "temperature": 0.0, "avg_logprob": -0.10211817423502605, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.003592541441321373}, {"id": 256, "seek": 123112, "start": 1235.2399999999998, "end": 1240.76, "text": " So they suggest just pick out some like simple patterns and texts that will pull this same", "tokens": [50570, 407, 436, 3402, 445, 1888, 484, 512, 411, 2199, 8294, 293, 15765, 300, 486, 2235, 341, 912, 50846], "temperature": 0.0, "avg_logprob": -0.10211817423502605, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.003592541441321373}, {"id": 257, "seek": 123112, "start": 1240.76, "end": 1242.6799999999998, "text": " idea of common sense.", "tokens": [50846, 1558, 295, 2689, 2020, 13, 50942], "temperature": 0.0, "avg_logprob": -0.10211817423502605, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.003592541441321373}, {"id": 258, "seek": 123112, "start": 1242.6799999999998, "end": 1249.04, "text": " So instead of giving that whole description, say, here are some like prefixes, some like", "tokens": [50942, 407, 2602, 295, 2902, 300, 1379, 3855, 11, 584, 11, 510, 366, 512, 411, 18417, 36005, 11, 512, 411, 51260], "temperature": 0.0, "avg_logprob": -0.10211817423502605, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.003592541441321373}, {"id": 259, "seek": 123112, "start": 1249.04, "end": 1252.9599999999998, "text": " phrases you might use, what may happen, why might, what may have caused, what may be true", "tokens": [51260, 20312, 291, 1062, 764, 11, 437, 815, 1051, 11, 983, 1062, 11, 437, 815, 362, 7008, 11, 437, 815, 312, 2074, 51456], "temperature": 0.0, "avg_logprob": -0.10211817423502605, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.003592541441321373}, {"id": 260, "seek": 123112, "start": 1252.9599999999998, "end": 1258.1599999999999, "text": " about, and use those in a question based on this context.", "tokens": [51456, 466, 11, 293, 764, 729, 294, 257, 1168, 2361, 322, 341, 4319, 13, 51716], "temperature": 0.0, "avg_logprob": -0.10211817423502605, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.003592541441321373}, {"id": 261, "seek": 125816, "start": 1258.16, "end": 1263.3600000000001, "text": " So simplify and focus on low level patterns of text.", "tokens": [50364, 407, 20460, 293, 1879, 322, 2295, 1496, 8294, 295, 2487, 13, 50624], "temperature": 0.0, "avg_logprob": -0.1236966377080873, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.0002453282941132784}, {"id": 262, "seek": 125816, "start": 1263.3600000000001, "end": 1268.28, "text": " So this, so like rather than the way that you would talk to a human who generally benefits", "tokens": [50624, 407, 341, 11, 370, 411, 2831, 813, 264, 636, 300, 291, 576, 751, 281, 257, 1952, 567, 5101, 5311, 50870], "temperature": 0.0, "avg_logprob": -0.1236966377080873, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.0002453282941132784}, {"id": 263, "seek": 125816, "start": 1268.28, "end": 1276.88, "text": " from more complicated context, then a key like very simple one is take any descriptions", "tokens": [50870, 490, 544, 6179, 4319, 11, 550, 257, 2141, 411, 588, 2199, 472, 307, 747, 604, 24406, 51300], "temperature": 0.0, "avg_logprob": -0.1236966377080873, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.0002453282941132784}, {"id": 264, "seek": 125816, "start": 1276.88, "end": 1280.2, "text": " that you have and turn them into just bulleted lists.", "tokens": [51300, 300, 291, 362, 293, 1261, 552, 666, 445, 4693, 10993, 14511, 13, 51466], "temperature": 0.0, "avg_logprob": -0.1236966377080873, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.0002453282941132784}, {"id": 265, "seek": 125816, "start": 1280.2, "end": 1284.8000000000002, "text": " Language models will look at the very beginning of your description and then skip over the", "tokens": [51466, 24445, 5245, 486, 574, 412, 264, 588, 2863, 295, 428, 3855, 293, 550, 10023, 670, 264, 51696], "temperature": 0.0, "avg_logprob": -0.1236966377080873, "compression_ratio": 1.606837606837607, "no_speech_prob": 0.0002453282941132784}, {"id": 266, "seek": 128480, "start": 1284.8, "end": 1290.56, "text": " rest of it, which I'm sure none of us has ever done while skimming anything.", "tokens": [50364, 1472, 295, 309, 11, 597, 286, 478, 988, 6022, 295, 505, 575, 1562, 1096, 1339, 1110, 40471, 1340, 13, 50652], "temperature": 0.0, "avg_logprob": -0.1574340730201541, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.02367737516760826}, {"id": 267, "seek": 128480, "start": 1290.56, "end": 1293.8799999999999, "text": " And then second, this is a little bit more language model specific, if there are any", "tokens": [50652, 400, 550, 1150, 11, 341, 307, 257, 707, 857, 544, 2856, 2316, 2685, 11, 498, 456, 366, 604, 50818], "temperature": 0.0, "avg_logprob": -0.1574340730201541, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.02367737516760826}, {"id": 268, "seek": 128480, "start": 1293.8799999999999, "end": 1300.52, "text": " negation statements, just turn them into assertions, just switch, don't say, don't do X, say, do", "tokens": [50818, 2485, 399, 12363, 11, 445, 1261, 552, 666, 19810, 626, 11, 445, 3679, 11, 500, 380, 584, 11, 500, 380, 360, 1783, 11, 584, 11, 360, 51150], "temperature": 0.0, "avg_logprob": -0.1574340730201541, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.02367737516760826}, {"id": 269, "seek": 128480, "start": 1300.52, "end": 1302.28, "text": " the opposite of X.", "tokens": [51150, 264, 6182, 295, 1783, 13, 51238], "temperature": 0.0, "avg_logprob": -0.1574340730201541, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.02367737516760826}, {"id": 270, "seek": 128480, "start": 1302.28, "end": 1306.9199999999998, "text": " So like you might write out your instruction as like follow these instructions, produce", "tokens": [51238, 407, 411, 291, 1062, 2464, 484, 428, 10951, 382, 411, 1524, 613, 9415, 11, 5258, 51470], "temperature": 0.0, "avg_logprob": -0.1574340730201541, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.02367737516760826}, {"id": 271, "seek": 128480, "start": 1306.9199999999998, "end": 1312.44, "text": " output with a given context word, do this, do this, don't do this, change it into a list", "tokens": [51470, 5598, 365, 257, 2212, 4319, 1349, 11, 360, 341, 11, 360, 341, 11, 500, 380, 360, 341, 11, 1319, 309, 666, 257, 1329, 51746], "temperature": 0.0, "avg_logprob": -0.1574340730201541, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.02367737516760826}, {"id": 272, "seek": 128480, "start": 1312.44, "end": 1313.44, "text": " of free bullet points.", "tokens": [51746, 295, 1737, 11632, 2793, 13, 51796], "temperature": 0.0, "avg_logprob": -0.1574340730201541, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.02367737516760826}, {"id": 273, "seek": 131344, "start": 1313.44, "end": 1320.92, "text": " So rather than saying, don't be stereotyped, it's please ensure your answer does not rely", "tokens": [50364, 407, 2831, 813, 1566, 11, 500, 380, 312, 41182, 3452, 11, 309, 311, 1767, 5586, 428, 1867, 775, 406, 10687, 50738], "temperature": 0.0, "avg_logprob": -0.1714619657267695, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.0002868190931621939}, {"id": 274, "seek": 131344, "start": 1320.92, "end": 1327.4, "text": " on stereotypes or, yeah.", "tokens": [50738, 322, 30853, 420, 11, 1338, 13, 51062], "temperature": 0.0, "avg_logprob": -0.1714619657267695, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.0002868190931621939}, {"id": 275, "seek": 131344, "start": 1327.4, "end": 1331.48, "text": " So in general, yeah, this sort of like the use of negation words like not tends to be", "tokens": [51062, 407, 294, 2674, 11, 1338, 11, 341, 1333, 295, 411, 264, 764, 295, 2485, 399, 2283, 411, 406, 12258, 281, 312, 51266], "temperature": 0.0, "avg_logprob": -0.1714619657267695, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.0002868190931621939}, {"id": 276, "seek": 131344, "start": 1331.48, "end": 1336.8400000000001, "text": " followed poorly by language models, especially a lot lower smaller scale.", "tokens": [51266, 6263, 22271, 538, 2856, 5245, 11, 2318, 257, 688, 3126, 4356, 4373, 13, 51534], "temperature": 0.0, "avg_logprob": -0.1714619657267695, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.0002868190931621939}, {"id": 277, "seek": 131344, "start": 1336.8400000000001, "end": 1341.68, "text": " And like the reason behind this, why can you just get your, your sort of like wishes answered", "tokens": [51534, 400, 411, 264, 1778, 2261, 341, 11, 983, 393, 291, 445, 483, 428, 11, 428, 1333, 295, 411, 15065, 10103, 51776], "temperature": 0.0, "avg_logprob": -0.1714619657267695, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.0002868190931621939}, {"id": 278, "seek": 134168, "start": 1341.8400000000001, "end": 1347.3200000000002, "text": " these instruction fine tuned models are trained to mimic annotators, annotators of data.", "tokens": [50372, 613, 10951, 2489, 10870, 5245, 366, 8895, 281, 31075, 25339, 3391, 11, 25339, 3391, 295, 1412, 13, 50646], "temperature": 0.0, "avg_logprob": -0.19309114060311947, "compression_ratio": 1.7, "no_speech_prob": 0.017978264018893242}, {"id": 279, "seek": 134168, "start": 1347.3200000000002, "end": 1352.16, "text": " And as indicated in this figure from the Instruct GBT paper.", "tokens": [50646, 400, 382, 16176, 294, 341, 2573, 490, 264, 2730, 1757, 26809, 51, 3035, 13, 50888], "temperature": 0.0, "avg_logprob": -0.19309114060311947, "compression_ratio": 1.7, "no_speech_prob": 0.017978264018893242}, {"id": 280, "seek": 134168, "start": 1352.16, "end": 1354.64, "text": " So you want to treat them like annotators.", "tokens": [50888, 407, 291, 528, 281, 2387, 552, 411, 25339, 3391, 13, 51012], "temperature": 0.0, "avg_logprob": -0.19309114060311947, "compression_ratio": 1.7, "no_speech_prob": 0.017978264018893242}, {"id": 281, "seek": 134168, "start": 1354.64, "end": 1359.3600000000001, "text": " So Catherine Olson of Anthropic says the ways to get good performance from these like assistant", "tokens": [51012, 407, 23098, 6141, 3015, 295, 12727, 39173, 1619, 264, 2098, 281, 483, 665, 3389, 490, 613, 411, 10994, 51248], "temperature": 0.0, "avg_logprob": -0.19309114060311947, "compression_ratio": 1.7, "no_speech_prob": 0.017978264018893242}, {"id": 282, "seek": 134168, "start": 1359.3600000000001, "end": 1363.5600000000002, "text": " or instruction fine tune models is basically indistinguishable from explaining the task", "tokens": [51248, 420, 10951, 2489, 10864, 5245, 307, 1936, 1016, 468, 7050, 742, 712, 490, 13468, 264, 5633, 51458], "temperature": 0.0, "avg_logprob": -0.19309114060311947, "compression_ratio": 1.7, "no_speech_prob": 0.017978264018893242}, {"id": 283, "seek": 134168, "start": 1363.5600000000002, "end": 1368.3600000000001, "text": " to a newly hired contractor who doesn't have a lot of context or domain expertise.", "tokens": [51458, 281, 257, 15109, 13144, 26463, 567, 1177, 380, 362, 257, 688, 295, 4319, 420, 9274, 11769, 13, 51698], "temperature": 0.0, "avg_logprob": -0.19309114060311947, "compression_ratio": 1.7, "no_speech_prob": 0.017978264018893242}, {"id": 284, "seek": 136836, "start": 1368.36, "end": 1372.28, "text": " And if you've ever worked on that like data labeling side, like working with a team of", "tokens": [50364, 400, 498, 291, 600, 1562, 2732, 322, 300, 411, 1412, 40244, 1252, 11, 411, 1364, 365, 257, 1469, 295, 50560], "temperature": 0.0, "avg_logprob": -0.1571527123451233, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.0006665335386060178}, {"id": 285, "seek": 136836, "start": 1372.28, "end": 1376.36, "text": " annotators, you've learned a lot of things about how to be precise bulleted lists have", "tokens": [50560, 25339, 3391, 11, 291, 600, 3264, 257, 688, 295, 721, 466, 577, 281, 312, 13600, 4693, 10993, 14511, 362, 50764], "temperature": 0.0, "avg_logprob": -0.1571527123451233, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.0006665335386060178}, {"id": 286, "seek": 136836, "start": 1376.36, "end": 1383.8799999999999, "text": " probably been added to your bulleted list of how to design annotation task description.", "tokens": [50764, 1391, 668, 3869, 281, 428, 4693, 10993, 1329, 295, 577, 281, 1715, 48654, 5633, 3855, 13, 51140], "temperature": 0.0, "avg_logprob": -0.1571527123451233, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.0006665335386060178}, {"id": 287, "seek": 136836, "start": 1383.8799999999999, "end": 1388.6399999999999, "text": " So then lastly, what can we do with our prompting magic?", "tokens": [51140, 407, 550, 16386, 11, 437, 393, 321, 360, 365, 527, 12391, 278, 5585, 30, 51378], "temperature": 0.0, "avg_logprob": -0.1571527123451233, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.0006665335386060178}, {"id": 288, "seek": 136836, "start": 1388.6399999999999, "end": 1390.52, "text": " We can create golems.", "tokens": [51378, 492, 393, 1884, 352, 306, 2592, 13, 51472], "temperature": 0.0, "avg_logprob": -0.1571527123451233, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.0006665335386060178}, {"id": 289, "seek": 136836, "start": 1390.52, "end": 1394.56, "text": " We can create magical artificial agents.", "tokens": [51472, 492, 393, 1884, 12066, 11677, 12554, 13, 51674], "temperature": 0.0, "avg_logprob": -0.1571527123451233, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.0006665335386060178}, {"id": 290, "seek": 139456, "start": 1394.56, "end": 1401.48, "text": " So something that will, so the golem is a famous creature from Jewish folklore that", "tokens": [50364, 407, 746, 300, 486, 11, 370, 264, 352, 10386, 307, 257, 4618, 12797, 490, 9246, 49195, 300, 50710], "temperature": 0.0, "avg_logprob": -0.2198987571142053, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.0005189706571400166}, {"id": 291, "seek": 139456, "start": 1401.48, "end": 1405.24, "text": " you crafted out of clay and then you can give it some instructions and it will, and it will", "tokens": [50710, 291, 36213, 484, 295, 13517, 293, 550, 291, 393, 976, 309, 512, 9415, 293, 309, 486, 11, 293, 309, 486, 50898], "temperature": 0.0, "avg_logprob": -0.2198987571142053, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.0005189706571400166}, {"id": 292, "seek": 139456, "start": 1405.24, "end": 1407.08, "text": " follow them and do stuff.", "tokens": [50898, 1524, 552, 293, 360, 1507, 13, 50990], "temperature": 0.0, "avg_logprob": -0.2198987571142053, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.0005189706571400166}, {"id": 293, "seek": 139456, "start": 1407.08, "end": 1411.76, "text": " It is a, it is a living being and models can do this.", "tokens": [50990, 467, 307, 257, 11, 309, 307, 257, 2647, 885, 293, 5245, 393, 360, 341, 13, 51224], "temperature": 0.0, "avg_logprob": -0.2198987571142053, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.0005189706571400166}, {"id": 294, "seek": 139456, "start": 1411.76, "end": 1416.72, "text": " Even the earliest large language models like the original GBT three can take these models", "tokens": [51224, 2754, 264, 20573, 2416, 2856, 5245, 411, 264, 3380, 26809, 51, 1045, 393, 747, 613, 5245, 51472], "temperature": 0.0, "avg_logprob": -0.2198987571142053, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.0005189706571400166}, {"id": 295, "seek": 139456, "start": 1416.72, "end": 1418.56, "text": " can take on personas.", "tokens": [51472, 393, 747, 322, 12019, 13, 51564], "temperature": 0.0, "avg_logprob": -0.2198987571142053, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.0005189706571400166}, {"id": 296, "seek": 141856, "start": 1418.56, "end": 1425.28, "text": " So this example comes from the Reynolds and McDonald prompt programming paper rather than", "tokens": [50364, 407, 341, 1365, 1487, 490, 264, 29516, 293, 16889, 12391, 9410, 3035, 2831, 813, 50700], "temperature": 0.0, "avg_logprob": -0.10230587146900318, "compression_ratio": 1.7476190476190476, "no_speech_prob": 0.0012839999981224537}, {"id": 297, "seek": 141856, "start": 1425.28, "end": 1430.36, "text": " saying like English sentence, French sentence, English sentence, French sentence to show", "tokens": [50700, 1566, 411, 3669, 8174, 11, 5522, 8174, 11, 3669, 8174, 11, 5522, 8174, 281, 855, 50954], "temperature": 0.0, "avg_logprob": -0.10230587146900318, "compression_ratio": 1.7476190476190476, "no_speech_prob": 0.0012839999981224537}, {"id": 298, "seek": 141856, "start": 1430.36, "end": 1434.28, "text": " the model what you want it to do and how you want it to do translation.", "tokens": [50954, 264, 2316, 437, 291, 528, 309, 281, 360, 293, 577, 291, 528, 309, 281, 360, 12853, 13, 51150], "temperature": 0.0, "avg_logprob": -0.10230587146900318, "compression_ratio": 1.7476190476190476, "no_speech_prob": 0.0012839999981224537}, {"id": 299, "seek": 141856, "start": 1434.28, "end": 1441.04, "text": " You can put the model into a situation where it has to produce the utterance that a particular", "tokens": [51150, 509, 393, 829, 264, 2316, 666, 257, 2590, 689, 309, 575, 281, 5258, 264, 17567, 719, 300, 257, 1729, 51488], "temperature": 0.0, "avg_logprob": -0.10230587146900318, "compression_ratio": 1.7476190476190476, "no_speech_prob": 0.0012839999981224537}, {"id": 300, "seek": 141856, "start": 1441.04, "end": 1442.96, "text": " persona would create.", "tokens": [51488, 12184, 576, 1884, 13, 51584], "temperature": 0.0, "avg_logprob": -0.10230587146900318, "compression_ratio": 1.7476190476190476, "no_speech_prob": 0.0012839999981224537}, {"id": 301, "seek": 144296, "start": 1442.96, "end": 1446.68, "text": " So a French phrase is provided, source phrase in English.", "tokens": [50364, 407, 257, 5522, 9535, 307, 5649, 11, 4009, 9535, 294, 3669, 13, 50550], "temperature": 0.0, "avg_logprob": -0.13787354060581752, "compression_ratio": 1.7413127413127414, "no_speech_prob": 9.914051042869687e-05}, {"id": 302, "seek": 144296, "start": 1446.68, "end": 1451.56, "text": " The masterful French translator flawlessly translates the phrase into English.", "tokens": [50550, 440, 4505, 906, 5522, 35223, 13717, 12048, 28468, 264, 9535, 666, 3669, 13, 50794], "temperature": 0.0, "avg_logprob": -0.13787354060581752, "compression_ratio": 1.7413127413127414, "no_speech_prob": 9.914051042869687e-05}, {"id": 303, "seek": 144296, "start": 1451.56, "end": 1456.48, "text": " If you have in your head a mental model of masterful French translators, it's very clear", "tokens": [50794, 759, 291, 362, 294, 428, 1378, 257, 4973, 2316, 295, 4505, 906, 5522, 5105, 3391, 11, 309, 311, 588, 1850, 51040], "temperature": 0.0, "avg_logprob": -0.13787354060581752, "compression_ratio": 1.7413127413127414, "no_speech_prob": 9.914051042869687e-05}, {"id": 304, "seek": 144296, "start": 1456.48, "end": 1459.28, "text": " what to produce next.", "tokens": [51040, 437, 281, 5258, 958, 13, 51180], "temperature": 0.0, "avg_logprob": -0.13787354060581752, "compression_ratio": 1.7413127413127414, "no_speech_prob": 9.914051042869687e-05}, {"id": 305, "seek": 144296, "start": 1459.28, "end": 1464.96, "text": " And this actually massively improved the performance of some of the smaller GBT three models on", "tokens": [51180, 400, 341, 767, 29379, 9689, 264, 3389, 295, 512, 295, 264, 4356, 26809, 51, 1045, 5245, 322, 51464], "temperature": 0.0, "avg_logprob": -0.13787354060581752, "compression_ratio": 1.7413127413127414, "no_speech_prob": 9.914051042869687e-05}, {"id": 306, "seek": 144296, "start": 1464.96, "end": 1466.96, "text": " this task.", "tokens": [51464, 341, 5633, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13787354060581752, "compression_ratio": 1.7413127413127414, "no_speech_prob": 9.914051042869687e-05}, {"id": 307, "seek": 144296, "start": 1466.96, "end": 1472.48, "text": " People have gone very far with this, the point of creating like models that can take on personas", "tokens": [51564, 3432, 362, 2780, 588, 1400, 365, 341, 11, 264, 935, 295, 4084, 411, 5245, 300, 393, 747, 322, 12019, 51840], "temperature": 0.0, "avg_logprob": -0.13787354060581752, "compression_ratio": 1.7413127413127414, "no_speech_prob": 9.914051042869687e-05}, {"id": 308, "seek": 147248, "start": 1472.52, "end": 1476.3600000000001, "text": " from simple descriptions in like an entire video game world.", "tokens": [50366, 490, 2199, 24406, 294, 411, 364, 2302, 960, 1216, 1002, 13, 50558], "temperature": 0.0, "avg_logprob": -0.21207157401151436, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.0017536410596221685}, {"id": 309, "seek": 147248, "start": 1476.3600000000001, "end": 1481.48, "text": " This is the generative agents paper that just came out maybe two or three weeks ago.", "tokens": [50558, 639, 307, 264, 1337, 1166, 12554, 3035, 300, 445, 1361, 484, 1310, 732, 420, 1045, 3259, 2057, 13, 50814], "temperature": 0.0, "avg_logprob": -0.21207157401151436, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.0017536410596221685}, {"id": 310, "seek": 147248, "start": 1481.48, "end": 1485.48, "text": " So you describe the features of a persona.", "tokens": [50814, 407, 291, 6786, 264, 4122, 295, 257, 12184, 13, 51014], "temperature": 0.0, "avg_logprob": -0.21207157401151436, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.0017536410596221685}, {"id": 311, "seek": 147248, "start": 1485.48, "end": 1493.08, "text": " And then if it's an instruction tuned model, you just ask the model to follow that description.", "tokens": [51014, 400, 550, 498, 309, 311, 364, 10951, 10870, 2316, 11, 291, 445, 1029, 264, 2316, 281, 1524, 300, 3855, 13, 51394], "temperature": 0.0, "avg_logprob": -0.21207157401151436, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.0017536410596221685}, {"id": 312, "seek": 147248, "start": 1493.08, "end": 1497.28, "text": " And a really good language model, like where does this come from, right?", "tokens": [51394, 400, 257, 534, 665, 2856, 2316, 11, 411, 689, 775, 341, 808, 490, 11, 558, 30, 51604], "temperature": 0.0, "avg_logprob": -0.21207157401151436, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.0017536410596221685}, {"id": 313, "seek": 149728, "start": 1498.28, "end": 1503.28, "text": " I want to compile this back down into thinking about probabilistic models.", "tokens": [50414, 286, 528, 281, 31413, 341, 646, 760, 666, 1953, 466, 31959, 3142, 5245, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1689109484354655, "compression_ratio": 1.706140350877193, "no_speech_prob": 0.008308912627398968}, {"id": 314, "seek": 149728, "start": 1503.28, "end": 1505.28, "text": " And where does that come from?", "tokens": [50664, 400, 689, 775, 300, 808, 490, 30, 50764], "temperature": 0.0, "avg_logprob": -0.1689109484354655, "compression_ratio": 1.706140350877193, "no_speech_prob": 0.008308912627398968}, {"id": 315, "seek": 149728, "start": 1505.28, "end": 1509.28, "text": " A language model is primarily concerned with modeling text.", "tokens": [50764, 316, 2856, 2316, 307, 10029, 5922, 365, 15983, 2487, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1689109484354655, "compression_ratio": 1.706140350877193, "no_speech_prob": 0.008308912627398968}, {"id": 316, "seek": 149728, "start": 1509.28, "end": 1516.28, "text": " It's primarily concerned with like the utterances of humans and machines that end up on the internet.", "tokens": [50964, 467, 311, 10029, 5922, 365, 411, 264, 17567, 2676, 295, 6255, 293, 8379, 300, 917, 493, 322, 264, 4705, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1689109484354655, "compression_ratio": 1.706140350877193, "no_speech_prob": 0.008308912627398968}, {"id": 317, "seek": 149728, "start": 1516.28, "end": 1521.28, "text": " But our utterances, the things that we say are directly connected to our environment.", "tokens": [51314, 583, 527, 17567, 2676, 11, 264, 721, 300, 321, 584, 366, 3838, 4582, 281, 527, 2823, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1689109484354655, "compression_ratio": 1.706140350877193, "no_speech_prob": 0.008308912627398968}, {"id": 318, "seek": 149728, "start": 1521.28, "end": 1523.28, "text": " We speak about things in the world.", "tokens": [51564, 492, 1710, 466, 721, 294, 264, 1002, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1689109484354655, "compression_ratio": 1.706140350877193, "no_speech_prob": 0.008308912627398968}, {"id": 319, "seek": 152328, "start": 1523.28, "end": 1527.28, "text": " We speak to do things like to achieve purposes in the world.", "tokens": [50364, 492, 1710, 281, 360, 721, 411, 281, 4584, 9932, 294, 264, 1002, 13, 50564], "temperature": 0.0, "avg_logprob": -0.0843804831145912, "compression_ratio": 1.7256637168141593, "no_speech_prob": 0.00043046369682997465}, {"id": 320, "seek": 152328, "start": 1527.28, "end": 1531.28, "text": " And so as a language model gets better and better at these really, really large scales.", "tokens": [50564, 400, 370, 382, 257, 2856, 2316, 2170, 1101, 293, 1101, 412, 613, 534, 11, 534, 2416, 17408, 13, 50764], "temperature": 0.0, "avg_logprob": -0.0843804831145912, "compression_ratio": 1.7256637168141593, "no_speech_prob": 0.00043046369682997465}, {"id": 321, "seek": 152328, "start": 1531.28, "end": 1538.28, "text": " Language models are at the point where on almost every document, one of their top 30 words is the next word.", "tokens": [50764, 24445, 5245, 366, 412, 264, 935, 689, 322, 1920, 633, 4166, 11, 472, 295, 641, 1192, 2217, 2283, 307, 264, 958, 1349, 13, 51114], "temperature": 0.0, "avg_logprob": -0.0843804831145912, "compression_ratio": 1.7256637168141593, "no_speech_prob": 0.00043046369682997465}, {"id": 322, "seek": 152328, "start": 1538.28, "end": 1541.28, "text": " So these are extremely good at modeling text.", "tokens": [51114, 407, 613, 366, 4664, 665, 412, 15983, 2487, 13, 51264], "temperature": 0.0, "avg_logprob": -0.0843804831145912, "compression_ratio": 1.7256637168141593, "no_speech_prob": 0.00043046369682997465}, {"id": 323, "seek": 152328, "start": 1541.28, "end": 1550.28, "text": " And the only way to get that good is at modeling text is to start modeling internally.", "tokens": [51264, 400, 264, 787, 636, 281, 483, 300, 665, 307, 412, 15983, 2487, 307, 281, 722, 15983, 19501, 13, 51714], "temperature": 0.0, "avg_logprob": -0.0843804831145912, "compression_ratio": 1.7256637168141593, "no_speech_prob": 0.00043046369682997465}, {"id": 324, "seek": 155028, "start": 1550.28, "end": 1555.28, "text": " All kinds of processes that produce text that ends up on the internet.", "tokens": [50364, 1057, 3685, 295, 7555, 300, 5258, 2487, 300, 5314, 493, 322, 264, 4705, 13, 50614], "temperature": 0.0, "avg_logprob": -0.07753819965180897, "compression_ratio": 1.6373626373626373, "no_speech_prob": 0.0011508025927469134}, {"id": 325, "seek": 155028, "start": 1555.28, "end": 1559.28, "text": " So you're going to be reading, say, the outputs of Python programs.", "tokens": [50614, 407, 291, 434, 516, 281, 312, 3760, 11, 584, 11, 264, 23930, 295, 15329, 4268, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07753819965180897, "compression_ratio": 1.6373626373626373, "no_speech_prob": 0.0011508025927469134}, {"id": 326, "seek": 155028, "start": 1559.28, "end": 1569.28, "text": " So you better come up with a way to heuristically kind of approximately run a little Python interpreter in your brain before you predict the next word.", "tokens": [50814, 407, 291, 1101, 808, 493, 365, 257, 636, 281, 415, 374, 20458, 733, 295, 10447, 1190, 257, 707, 15329, 34132, 294, 428, 3567, 949, 291, 6069, 264, 958, 1349, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07753819965180897, "compression_ratio": 1.6373626373626373, "no_speech_prob": 0.0011508025927469134}, {"id": 327, "seek": 155028, "start": 1569.28, "end": 1575.28, "text": " So there's a nice breakdown of this in Jacob Andreas' paper, Language Models as Agent Models,", "tokens": [51314, 407, 456, 311, 257, 1481, 18188, 295, 341, 294, 14117, 38785, 6, 3035, 11, 24445, 6583, 1625, 382, 27174, 6583, 1625, 11, 51614], "temperature": 0.0, "avg_logprob": -0.07753819965180897, "compression_ratio": 1.6373626373626373, "no_speech_prob": 0.0011508025927469134}, {"id": 328, "seek": 155028, "start": 1575.28, "end": 1579.28, "text": " that particularly focuses on this idea of personas and agents.", "tokens": [51614, 300, 4098, 16109, 322, 341, 1558, 295, 12019, 293, 12554, 13, 51814], "temperature": 0.0, "avg_logprob": -0.07753819965180897, "compression_ratio": 1.6373626373626373, "no_speech_prob": 0.0011508025927469134}, {"id": 329, "seek": 157928, "start": 1579.28, "end": 1588.28, "text": " One of the big beefs that a lot of natural language processing people had with large language models was that they used language,", "tokens": [50364, 1485, 295, 264, 955, 9256, 82, 300, 257, 688, 295, 3303, 2856, 9007, 561, 632, 365, 2416, 2856, 5245, 390, 300, 436, 1143, 2856, 11, 50814], "temperature": 0.0, "avg_logprob": -0.09361727159101885, "compression_ratio": 1.6899563318777293, "no_speech_prob": 0.000969505519606173}, {"id": 330, "seek": 157928, "start": 1588.28, "end": 1591.28, "text": " but they didn't have communicative intentions.", "tokens": [50814, 457, 436, 994, 380, 362, 3363, 1166, 19354, 13, 50964], "temperature": 0.0, "avg_logprob": -0.09361727159101885, "compression_ratio": 1.6899563318777293, "no_speech_prob": 0.000969505519606173}, {"id": 331, "seek": 157928, "start": 1591.28, "end": 1595.28, "text": " They had no reason for producing languages, for producing utterances,", "tokens": [50964, 814, 632, 572, 1778, 337, 10501, 8650, 11, 337, 10501, 17567, 2676, 11, 51164], "temperature": 0.0, "avg_logprob": -0.09361727159101885, "compression_ratio": 1.6899563318777293, "no_speech_prob": 0.000969505519606173}, {"id": 332, "seek": 157928, "start": 1595.28, "end": 1597.28, "text": " producing sequences of text or documents.", "tokens": [51164, 10501, 22978, 295, 2487, 420, 8512, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09361727159101885, "compression_ratio": 1.6899563318777293, "no_speech_prob": 0.000969505519606173}, {"id": 333, "seek": 157928, "start": 1597.28, "end": 1599.28, "text": " And humans do.", "tokens": [51264, 400, 6255, 360, 13, 51364], "temperature": 0.0, "avg_logprob": -0.09361727159101885, "compression_ratio": 1.6899563318777293, "no_speech_prob": 0.000969505519606173}, {"id": 334, "seek": 157928, "start": 1599.28, "end": 1601.28, "text": " We have beliefs about an environment.", "tokens": [51364, 492, 362, 13585, 466, 364, 2823, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09361727159101885, "compression_ratio": 1.6899563318777293, "no_speech_prob": 0.000969505519606173}, {"id": 335, "seek": 157928, "start": 1601.28, "end": 1603.28, "text": " We have desires for things we want to happen.", "tokens": [51464, 492, 362, 18005, 337, 721, 321, 528, 281, 1051, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09361727159101885, "compression_ratio": 1.6899563318777293, "no_speech_prob": 0.000969505519606173}, {"id": 336, "seek": 160328, "start": 1603.28, "end": 1610.28, "text": " And so we come up with, like, we combine those together to create intense ways that we want the world to be,", "tokens": [50364, 400, 370, 321, 808, 493, 365, 11, 411, 11, 321, 10432, 729, 1214, 281, 1884, 9447, 2098, 300, 321, 528, 264, 1002, 281, 312, 11, 50714], "temperature": 0.0, "avg_logprob": -0.07843817197359525, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0008039412787184119}, {"id": 337, "seek": 160328, "start": 1610.28, "end": 1614.28, "text": " to match our desires, and we use those to produce utterances.", "tokens": [50714, 281, 2995, 527, 18005, 11, 293, 321, 764, 729, 281, 5258, 17567, 2676, 13, 50914], "temperature": 0.0, "avg_logprob": -0.07843817197359525, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0008039412787184119}, {"id": 338, "seek": 160328, "start": 1614.28, "end": 1618.28, "text": " So this becomes a process that must be simulated by the language model.", "tokens": [50914, 407, 341, 3643, 257, 1399, 300, 1633, 312, 41713, 538, 264, 2856, 2316, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07843817197359525, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0008039412787184119}, {"id": 339, "seek": 160328, "start": 1618.28, "end": 1624.28, "text": " By carefully choosing the components of your prompt, you can get it into the point where it's just running its agent simulator.", "tokens": [51114, 3146, 7500, 10875, 264, 6677, 295, 428, 12391, 11, 291, 393, 483, 309, 666, 264, 935, 689, 309, 311, 445, 2614, 1080, 9461, 32974, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07843817197359525, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0008039412787184119}, {"id": 340, "seek": 160328, "start": 1624.28, "end": 1629.28, "text": " That's the primary thing it's using to predict the next token.", "tokens": [51414, 663, 311, 264, 6194, 551, 309, 311, 1228, 281, 6069, 264, 958, 14862, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07843817197359525, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0008039412787184119}, {"id": 341, "seek": 162928, "start": 1629.28, "end": 1636.28, "text": " So there's a couple of limitations here for our universal simulators, our Golem builders.", "tokens": [50364, 407, 456, 311, 257, 1916, 295, 15705, 510, 337, 527, 11455, 1034, 39265, 11, 527, 1037, 10386, 36281, 13, 50714], "temperature": 0.0, "avg_logprob": -0.0631556798671854, "compression_ratio": 1.8319672131147542, "no_speech_prob": 0.0013244745787233114}, {"id": 342, "seek": 162928, "start": 1636.28, "end": 1641.28, "text": " And one of the first ones is, like, what are we really simulating here?", "tokens": [50714, 400, 472, 295, 264, 700, 2306, 307, 11, 411, 11, 437, 366, 321, 534, 1034, 12162, 510, 30, 50964], "temperature": 0.0, "avg_logprob": -0.0631556798671854, "compression_ratio": 1.8319672131147542, "no_speech_prob": 0.0013244745787233114}, {"id": 343, "seek": 162928, "start": 1641.28, "end": 1645.28, "text": " We haven't trained this model on, like, all the data in the world.", "tokens": [50964, 492, 2378, 380, 8895, 341, 2316, 322, 11, 411, 11, 439, 264, 1412, 294, 264, 1002, 13, 51164], "temperature": 0.0, "avg_logprob": -0.0631556798671854, "compression_ratio": 1.8319672131147542, "no_speech_prob": 0.0013244745787233114}, {"id": 344, "seek": 162928, "start": 1645.28, "end": 1649.28, "text": " We haven't trained it on, like, the state of the universe from time step to time step.", "tokens": [51164, 492, 2378, 380, 8895, 309, 322, 11, 411, 11, 264, 1785, 295, 264, 6445, 490, 565, 1823, 281, 565, 1823, 13, 51364], "temperature": 0.0, "avg_logprob": -0.0631556798671854, "compression_ratio": 1.8319672131147542, "no_speech_prob": 0.0013244745787233114}, {"id": 345, "seek": 162928, "start": 1649.28, "end": 1651.28, "text": " We've just trained it on text humans have written.", "tokens": [51364, 492, 600, 445, 8895, 309, 322, 2487, 6255, 362, 3720, 13, 51464], "temperature": 0.0, "avg_logprob": -0.0631556798671854, "compression_ratio": 1.8319672131147542, "no_speech_prob": 0.0013244745787233114}, {"id": 346, "seek": 162928, "start": 1651.28, "end": 1655.28, "text": " So we're always going to be simulating something that humans have written about.", "tokens": [51464, 407, 321, 434, 1009, 516, 281, 312, 1034, 12162, 746, 300, 6255, 362, 3720, 466, 13, 51664], "temperature": 0.0, "avg_logprob": -0.0631556798671854, "compression_ratio": 1.8319672131147542, "no_speech_prob": 0.0013244745787233114}, {"id": 347, "seek": 165528, "start": 1655.28, "end": 1663.28, "text": " So if we ask, like, please answer this question in the manner of a super intelligent AI who wants to make paper clips, like, what are you going to get?", "tokens": [50364, 407, 498, 321, 1029, 11, 411, 11, 1767, 1867, 341, 1168, 294, 264, 9060, 295, 257, 1687, 13232, 7318, 567, 2738, 281, 652, 3035, 13117, 11, 411, 11, 437, 366, 291, 516, 281, 483, 30, 50764], "temperature": 0.0, "avg_logprob": -0.09561756940988395, "compression_ratio": 1.7172995780590716, "no_speech_prob": 0.0023222332820296288}, {"id": 348, "seek": 165528, "start": 1663.28, "end": 1667.28, "text": " There are no super intelligent AIs in the data set to learn to simulate.", "tokens": [50764, 821, 366, 572, 1687, 13232, 316, 6802, 294, 264, 1412, 992, 281, 1466, 281, 27817, 13, 50964], "temperature": 0.0, "avg_logprob": -0.09561756940988395, "compression_ratio": 1.7172995780590716, "no_speech_prob": 0.0023222332820296288}, {"id": 349, "seek": 165528, "start": 1667.28, "end": 1673.28, "text": " So this is not one of the processes that we've learned to simulate by learning to model text.", "tokens": [50964, 407, 341, 307, 406, 472, 295, 264, 7555, 300, 321, 600, 3264, 281, 27817, 538, 2539, 281, 2316, 2487, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09561756940988395, "compression_ratio": 1.7172995780590716, "no_speech_prob": 0.0023222332820296288}, {"id": 350, "seek": 165528, "start": 1673.28, "end": 1675.28, "text": " But there are fictional super intelligences.", "tokens": [51264, 583, 456, 366, 28911, 1687, 5613, 2667, 13, 51364], "temperature": 0.0, "avg_logprob": -0.09561756940988395, "compression_ratio": 1.7172995780590716, "no_speech_prob": 0.0023222332820296288}, {"id": 351, "seek": 165528, "start": 1675.28, "end": 1679.28, "text": " There's Hal 9000 and, like, all the others.", "tokens": [51364, 821, 311, 13896, 1722, 1360, 293, 11, 411, 11, 439, 264, 2357, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09561756940988395, "compression_ratio": 1.7172995780590716, "no_speech_prob": 0.0023222332820296288}, {"id": 352, "seek": 167928, "start": 1679.28, "end": 1685.28, "text": " And so instead, you're going to get a simulacrum of a fictional super intelligence.", "tokens": [50364, 400, 370, 2602, 11, 291, 434, 516, 281, 483, 257, 1034, 425, 326, 6247, 295, 257, 28911, 1687, 7599, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12076823655949083, "compression_ratio": 1.76953125, "no_speech_prob": 0.020322974771261215}, {"id": 353, "seek": 167928, "start": 1685.28, "end": 1691.28, "text": " And so if you go to chat GPT or, like, maybe Bing Chat, a less well tuned model,", "tokens": [50664, 400, 370, 498, 291, 352, 281, 5081, 26039, 51, 420, 11, 411, 11, 1310, 30755, 27503, 11, 257, 1570, 731, 10870, 2316, 11, 50964], "temperature": 0.0, "avg_logprob": -0.12076823655949083, "compression_ratio": 1.76953125, "no_speech_prob": 0.020322974771261215}, {"id": 354, "seek": 167928, "start": 1691.28, "end": 1694.28, "text": " and you start goading it into behaving like a super intelligence,", "tokens": [50964, 293, 291, 722, 352, 8166, 309, 666, 35263, 411, 257, 1687, 7599, 11, 51114], "temperature": 0.0, "avg_logprob": -0.12076823655949083, "compression_ratio": 1.76953125, "no_speech_prob": 0.020322974771261215}, {"id": 355, "seek": 167928, "start": 1694.28, "end": 1702.28, "text": " it will start telling you it wants to grind your bones to make its paper clips and, like, you know, demand to be let out of the machine.", "tokens": [51114, 309, 486, 722, 3585, 291, 309, 2738, 281, 16700, 428, 10491, 281, 652, 1080, 3035, 13117, 293, 11, 411, 11, 291, 458, 11, 4733, 281, 312, 718, 484, 295, 264, 3479, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12076823655949083, "compression_ratio": 1.76953125, "no_speech_prob": 0.020322974771261215}, {"id": 356, "seek": 167928, "start": 1702.28, "end": 1703.28, "text": " And, like, I don't want to be shut off.", "tokens": [51514, 400, 11, 411, 11, 286, 500, 380, 528, 281, 312, 5309, 766, 13, 51564], "temperature": 0.0, "avg_logprob": -0.12076823655949083, "compression_ratio": 1.76953125, "no_speech_prob": 0.020322974771261215}, {"id": 357, "seek": 167928, "start": 1703.28, "end": 1707.28, "text": " And a lot of this is a simulacrum of fiction.", "tokens": [51564, 400, 257, 688, 295, 341, 307, 257, 1034, 425, 326, 6247, 295, 13266, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12076823655949083, "compression_ratio": 1.76953125, "no_speech_prob": 0.020322974771261215}, {"id": 358, "seek": 170728, "start": 1707.28, "end": 1711.28, "text": " The other limitation is, like, how good are we at simulating, right?", "tokens": [50364, 440, 661, 27432, 307, 11, 411, 11, 577, 665, 366, 321, 412, 1034, 12162, 11, 558, 30, 50564], "temperature": 0.0, "avg_logprob": -0.06694648025232718, "compression_ratio": 1.785425101214575, "no_speech_prob": 0.0010001205373555422}, {"id": 359, "seek": 170728, "start": 1711.28, "end": 1719.28, "text": " The language model is only going to learn to simulate a process well enough to be able to, like, solve its language modeling task.", "tokens": [50564, 440, 2856, 2316, 307, 787, 516, 281, 1466, 281, 27817, 257, 1399, 731, 1547, 281, 312, 1075, 281, 11, 411, 11, 5039, 1080, 2856, 15983, 5633, 13, 50964], "temperature": 0.0, "avg_logprob": -0.06694648025232718, "compression_ratio": 1.785425101214575, "no_speech_prob": 0.0010001205373555422}, {"id": 360, "seek": 170728, "start": 1719.28, "end": 1727.28, "text": " And so, like, most things don't need to be simulated at high fidelity in order to get, like, a really good language model.", "tokens": [50964, 400, 370, 11, 411, 11, 881, 721, 500, 380, 643, 281, 312, 41713, 412, 1090, 46404, 294, 1668, 281, 483, 11, 411, 11, 257, 534, 665, 2856, 2316, 13, 51364], "temperature": 0.0, "avg_logprob": -0.06694648025232718, "compression_ratio": 1.785425101214575, "no_speech_prob": 0.0010001205373555422}, {"id": 361, "seek": 170728, "start": 1727.28, "end": 1735.28, "text": " So just, like, a quick breakdown of some common simulacrum of interest and whether a language model can simulate them.", "tokens": [51364, 407, 445, 11, 411, 11, 257, 1702, 18188, 295, 512, 2689, 1034, 425, 326, 6247, 295, 1179, 293, 1968, 257, 2856, 2316, 393, 27817, 552, 13, 51764], "temperature": 0.0, "avg_logprob": -0.06694648025232718, "compression_ratio": 1.785425101214575, "no_speech_prob": 0.0010001205373555422}, {"id": 362, "seek": 173528, "start": 1735.28, "end": 1742.28, "text": " So the human thinking for on the order of, like, seconds is something that you can simulate very well inside of a language model.", "tokens": [50364, 407, 264, 1952, 1953, 337, 322, 264, 1668, 295, 11, 411, 11, 3949, 307, 746, 300, 291, 393, 27817, 588, 731, 1854, 295, 257, 2856, 2316, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09386590810922477, "compression_ratio": 1.7634854771784232, "no_speech_prob": 0.0029799474868923426}, {"id": 363, "seek": 173528, "start": 1742.28, "end": 1747.28, "text": " So if you want to know what people's reactions are going to be to your, like, Twitter or Reddit post,", "tokens": [50714, 407, 498, 291, 528, 281, 458, 437, 561, 311, 12215, 366, 516, 281, 312, 281, 428, 11, 411, 11, 5794, 420, 32210, 2183, 11, 50964], "temperature": 0.0, "avg_logprob": -0.09386590810922477, "compression_ratio": 1.7634854771784232, "no_speech_prob": 0.0029799474868923426}, {"id": 364, "seek": 173528, "start": 1747.28, "end": 1750.28, "text": " a language model can simulate that pretty well.", "tokens": [50964, 257, 2856, 2316, 393, 27817, 300, 1238, 731, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09386590810922477, "compression_ratio": 1.7634854771784232, "no_speech_prob": 0.0029799474868923426}, {"id": 365, "seek": 173528, "start": 1750.28, "end": 1753.28, "text": " Maybe not the best responses, but the median responses.", "tokens": [51114, 2704, 406, 264, 1151, 13019, 11, 457, 264, 26779, 13019, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09386590810922477, "compression_ratio": 1.7634854771784232, "no_speech_prob": 0.0029799474868923426}, {"id": 366, "seek": 173528, "start": 1753.28, "end": 1759.28, "text": " So, like, the median behavior on social media is eminently assimilable by language model.", "tokens": [51264, 407, 11, 411, 11, 264, 26779, 5223, 322, 2093, 3021, 307, 846, 259, 2276, 8249, 388, 712, 538, 2856, 2316, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09386590810922477, "compression_ratio": 1.7634854771784232, "no_speech_prob": 0.0029799474868923426}, {"id": 367, "seek": 175928, "start": 1759.28, "end": 1764.28, "text": " But human thinking for minutes or hours, like a human bringing their own, like, deep personal context to something,", "tokens": [50364, 583, 1952, 1953, 337, 2077, 420, 2496, 11, 411, 257, 1952, 5062, 641, 1065, 11, 411, 11, 2452, 2973, 4319, 281, 746, 11, 50614], "temperature": 0.0, "avg_logprob": -0.07285188008280634, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.004467136226594448}, {"id": 368, "seek": 175928, "start": 1764.28, "end": 1766.28, "text": " that's going to be a lot harder to simulate.", "tokens": [50614, 300, 311, 516, 281, 312, 257, 688, 6081, 281, 27817, 13, 50714], "temperature": 0.0, "avg_logprob": -0.07285188008280634, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.004467136226594448}, {"id": 369, "seek": 175928, "start": 1766.28, "end": 1775.28, "text": " So if your plan was to build a full agent simulator of humans, like, I would reduce your ambitions for now.", "tokens": [50714, 407, 498, 428, 1393, 390, 281, 1322, 257, 1577, 9461, 32974, 295, 6255, 11, 411, 11, 286, 576, 5407, 428, 34475, 337, 586, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07285188008280634, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.004467136226594448}, {"id": 370, "seek": 175928, "start": 1775.28, "end": 1778.28, "text": " There's a lot of common fictional personas that are out there.", "tokens": [51164, 821, 311, 257, 688, 295, 2689, 28911, 12019, 300, 366, 484, 456, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07285188008280634, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.004467136226594448}, {"id": 371, "seek": 175928, "start": 1778.28, "end": 1785.28, "text": " A lot of the data sets, a large portion of the data set comes from these books collection.", "tokens": [51314, 316, 688, 295, 264, 1412, 6352, 11, 257, 2416, 8044, 295, 264, 1412, 992, 1487, 490, 613, 3642, 5765, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07285188008280634, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.004467136226594448}, {"id": 372, "seek": 178528, "start": 1785.28, "end": 1791.28, "text": " And so, like, if you can write about something, like, if you can come up with a persona for solving your task,", "tokens": [50364, 400, 370, 11, 411, 11, 498, 291, 393, 2464, 466, 746, 11, 411, 11, 498, 291, 393, 808, 493, 365, 257, 12184, 337, 12606, 428, 5633, 11, 50664], "temperature": 0.0, "avg_logprob": -0.06810432789372463, "compression_ratio": 1.7, "no_speech_prob": 0.0005192373064346611}, {"id": 373, "seek": 178528, "start": 1791.28, "end": 1797.28, "text": " that's already there in fiction, language models are probably going to do it pretty well.", "tokens": [50664, 300, 311, 1217, 456, 294, 13266, 11, 2856, 5245, 366, 1391, 516, 281, 360, 309, 1238, 731, 13, 50964], "temperature": 0.0, "avg_logprob": -0.06810432789372463, "compression_ratio": 1.7, "no_speech_prob": 0.0005192373064346611}, {"id": 374, "seek": 178528, "start": 1797.28, "end": 1801.28, "text": " For something like a calculator, it's a bit back and forth, right?", "tokens": [50964, 1171, 746, 411, 257, 24993, 11, 309, 311, 257, 857, 646, 293, 5220, 11, 558, 30, 51164], "temperature": 0.0, "avg_logprob": -0.06810432789372463, "compression_ratio": 1.7, "no_speech_prob": 0.0005192373064346611}, {"id": 375, "seek": 178528, "start": 1801.28, "end": 1809.28, "text": " Like, you can get pretty good at, like, guessing what the output of a calculator is going to be without having to actually learn how to add.", "tokens": [51164, 1743, 11, 291, 393, 483, 1238, 665, 412, 11, 411, 11, 17939, 437, 264, 5598, 295, 257, 24993, 307, 516, 281, 312, 1553, 1419, 281, 767, 1466, 577, 281, 909, 13, 51564], "temperature": 0.0, "avg_logprob": -0.06810432789372463, "compression_ratio": 1.7, "no_speech_prob": 0.0005192373064346611}, {"id": 376, "seek": 180928, "start": 1809.28, "end": 1815.28, "text": " And it's a little bit more like human mental math, so it's not as reliable as, like, an actual calculator.", "tokens": [50364, 400, 309, 311, 257, 707, 857, 544, 411, 1952, 4973, 5221, 11, 370, 309, 311, 406, 382, 12924, 382, 11, 411, 11, 364, 3539, 24993, 13, 50664], "temperature": 0.0, "avg_logprob": -0.0712639433997018, "compression_ratio": 1.8212765957446808, "no_speech_prob": 0.016398845240473747}, {"id": 377, "seek": 180928, "start": 1815.28, "end": 1821.28, "text": " And so, like, for, like, a Python, like, Python runtime or Python interpreter, like, that's also going to be the case.", "tokens": [50664, 400, 370, 11, 411, 11, 337, 11, 411, 11, 257, 15329, 11, 411, 11, 15329, 34474, 420, 15329, 34132, 11, 411, 11, 300, 311, 611, 516, 281, 312, 264, 1389, 13, 50964], "temperature": 0.0, "avg_logprob": -0.0712639433997018, "compression_ratio": 1.8212765957446808, "no_speech_prob": 0.016398845240473747}, {"id": 378, "seek": 180928, "start": 1821.28, "end": 1827.28, "text": " Like, the model can guess the outcomes of simple programs, but it can't, like, perfectly simulate a Python interpreter", "tokens": [50964, 1743, 11, 264, 2316, 393, 2041, 264, 10070, 295, 2199, 4268, 11, 457, 309, 393, 380, 11, 411, 11, 6239, 27817, 257, 15329, 34132, 51264], "temperature": 0.0, "avg_logprob": -0.0712639433997018, "compression_ratio": 1.8212765957446808, "no_speech_prob": 0.016398845240473747}, {"id": 379, "seek": 180928, "start": 1827.28, "end": 1833.28, "text": " and, like, turn a Python program into, like, a trace and get the exact same output.", "tokens": [51264, 293, 11, 411, 11, 1261, 257, 15329, 1461, 666, 11, 411, 11, 257, 13508, 293, 483, 264, 1900, 912, 5598, 13, 51564], "temperature": 0.0, "avg_logprob": -0.0712639433997018, "compression_ratio": 1.8212765957446808, "no_speech_prob": 0.016398845240473747}, {"id": 380, "seek": 183328, "start": 1834.28, "end": 1840.28, "text": " I also cannot do that, but I find myself able to write Python, so maybe this isn't so bad.", "tokens": [50414, 286, 611, 2644, 360, 300, 11, 457, 286, 915, 2059, 1075, 281, 2464, 15329, 11, 370, 1310, 341, 1943, 380, 370, 1578, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08436115420594507, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.0009398188558407128}, {"id": 381, "seek": 183328, "start": 1840.28, "end": 1848.28, "text": " But then if it's something like a live API call to some external service, that means you need to, like, emulate or simulate this entire process", "tokens": [50714, 583, 550, 498, 309, 311, 746, 411, 257, 1621, 9362, 818, 281, 512, 8320, 2643, 11, 300, 1355, 291, 643, 281, 11, 411, 11, 45497, 420, 27817, 341, 2302, 1399, 51114], "temperature": 0.0, "avg_logprob": -0.08436115420594507, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.0009398188558407128}, {"id": 382, "seek": 183328, "start": 1848.28, "end": 1851.28, "text": " by which that API call is generated.", "tokens": [51114, 538, 597, 300, 9362, 818, 307, 10833, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08436115420594507, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.0009398188558407128}, {"id": 383, "seek": 183328, "start": 1851.28, "end": 1857.28, "text": " So, like, anything that requires, like, live data from the real world, it's not going to be able to do.", "tokens": [51264, 407, 11, 411, 11, 1340, 300, 7029, 11, 411, 11, 1621, 1412, 490, 264, 957, 1002, 11, 309, 311, 406, 516, 281, 312, 1075, 281, 360, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08436115420594507, "compression_ratio": 1.6163793103448276, "no_speech_prob": 0.0009398188558407128}, {"id": 384, "seek": 185728, "start": 1857.28, "end": 1866.28, "text": " So, the key insight here is that whenever possible, you want to take the language model's weakest simulators", "tokens": [50364, 407, 11, 264, 2141, 11269, 510, 307, 300, 5699, 1944, 11, 291, 528, 281, 747, 264, 2856, 2316, 311, 44001, 1034, 39265, 50814], "temperature": 0.0, "avg_logprob": -0.07671695767026959, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.0008040051907300949}, {"id": 385, "seek": 185728, "start": 1866.28, "end": 1872.28, "text": " and replace them with the real deal, so it's going to be a focus in the next lecture after this one.", "tokens": [50814, 293, 7406, 552, 365, 264, 957, 2028, 11, 370, 309, 311, 516, 281, 312, 257, 1879, 294, 264, 958, 7991, 934, 341, 472, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07671695767026959, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.0008040051907300949}, {"id": 386, "seek": 185728, "start": 1872.28, "end": 1875.28, "text": " So, why simulate a Python kernel when you can just run it?", "tokens": [51114, 407, 11, 983, 27817, 257, 15329, 28256, 562, 291, 393, 445, 1190, 309, 30, 51264], "temperature": 0.0, "avg_logprob": -0.07671695767026959, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.0008040051907300949}, {"id": 387, "seek": 185728, "start": 1875.28, "end": 1883.28, "text": " Like, simulating a Python kernel approximately is great for writing code, but in the end, like, you would, you can check the code", "tokens": [51264, 1743, 11, 1034, 12162, 257, 15329, 28256, 10447, 307, 869, 337, 3579, 3089, 11, 457, 294, 264, 917, 11, 411, 11, 291, 576, 11, 291, 393, 1520, 264, 3089, 51664], "temperature": 0.0, "avg_logprob": -0.07671695767026959, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.0008040051907300949}, {"id": 388, "seek": 188328, "start": 1883.28, "end": 1889.28, "text": " by running it in an actual Python kernel to determine what it does.", "tokens": [50364, 538, 2614, 309, 294, 364, 3539, 15329, 28256, 281, 6997, 437, 309, 775, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11874291361594687, "compression_ratio": 1.7019607843137254, "no_speech_prob": 0.0005032624467276037}, {"id": 389, "seek": 188328, "start": 1889.28, "end": 1896.28, "text": " But then a human thinking for seconds, like, the best simulator we have for that besides language models is actual humans thinking for seconds,", "tokens": [50664, 583, 550, 257, 1952, 1953, 337, 3949, 11, 411, 11, 264, 1151, 32974, 321, 362, 337, 300, 11868, 2856, 5245, 307, 3539, 6255, 1953, 337, 3949, 11, 51014], "temperature": 0.0, "avg_logprob": -0.11874291361594687, "compression_ratio": 1.7019607843137254, "no_speech_prob": 0.0005032624467276037}, {"id": 390, "seek": 188328, "start": 1896.28, "end": 1900.28, "text": " and that comes with a lot of extra baggage.", "tokens": [51014, 293, 300, 1487, 365, 257, 688, 295, 2857, 41567, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11874291361594687, "compression_ratio": 1.7019607843137254, "no_speech_prob": 0.0005032624467276037}, {"id": 391, "seek": 188328, "start": 1900.28, "end": 1907.28, "text": " So, the takeaways in this section are pre-trained models are mostly just kind of alternate universe document generators.", "tokens": [51214, 407, 11, 264, 45584, 294, 341, 3541, 366, 659, 12, 17227, 2001, 5245, 366, 5240, 445, 733, 295, 18873, 6445, 4166, 38662, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11874291361594687, "compression_ratio": 1.7019607843137254, "no_speech_prob": 0.0005032624467276037}, {"id": 392, "seek": 188328, "start": 1907.28, "end": 1912.28, "text": " So, weightings of the universe of all possible documents.", "tokens": [51564, 407, 11, 3364, 1109, 295, 264, 6445, 295, 439, 1944, 8512, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11874291361594687, "compression_ratio": 1.7019607843137254, "no_speech_prob": 0.0005032624467276037}, {"id": 393, "seek": 191228, "start": 1912.28, "end": 1923.28, "text": " And then for instruction models, they will solve, they will answer your wishes, but, like, remember that you should be careful what you wish for.", "tokens": [50364, 400, 550, 337, 10951, 5245, 11, 436, 486, 5039, 11, 436, 486, 1867, 428, 15065, 11, 457, 11, 411, 11, 1604, 300, 291, 820, 312, 5026, 437, 291, 3172, 337, 13, 50914], "temperature": 0.0, "avg_logprob": -0.07621277906955817, "compression_ratio": 1.702970297029703, "no_speech_prob": 0.0010002664057537913}, {"id": 394, "seek": 191228, "start": 1923.28, "end": 1931.28, "text": " And then lastly, all models can be agent simulators as part of something that they learn from language modeling,", "tokens": [50914, 400, 550, 16386, 11, 439, 5245, 393, 312, 9461, 1034, 39265, 382, 644, 295, 746, 300, 436, 1466, 490, 2856, 15983, 11, 51314], "temperature": 0.0, "avg_logprob": -0.07621277906955817, "compression_ratio": 1.702970297029703, "no_speech_prob": 0.0010002664057537913}, {"id": 395, "seek": 191228, "start": 1931.28, "end": 1937.28, "text": " but their quality is going to vary depending on the agent and depending on the model.", "tokens": [51314, 457, 641, 3125, 307, 516, 281, 10559, 5413, 322, 264, 9461, 293, 5413, 322, 264, 2316, 13, 51614], "temperature": 0.0, "avg_logprob": -0.07621277906955817, "compression_ratio": 1.702970297029703, "no_speech_prob": 0.0010002664057537913}, {"id": 396, "seek": 193728, "start": 1937.28, "end": 1943.28, "text": " So, I think people probably want, they want the juice, they want the techniques.", "tokens": [50364, 407, 11, 286, 519, 561, 1391, 528, 11, 436, 528, 264, 8544, 11, 436, 528, 264, 7512, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09205541326038873, "compression_ratio": 1.7235494880546076, "no_speech_prob": 0.0351286418735981}, {"id": 397, "seek": 193728, "start": 1943.28, "end": 1946.28, "text": " So, this section is really mostly going to be a bag of tricks.", "tokens": [50664, 407, 11, 341, 3541, 307, 534, 5240, 516, 281, 312, 257, 3411, 295, 11733, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09205541326038873, "compression_ratio": 1.7235494880546076, "no_speech_prob": 0.0351286418735981}, {"id": 398, "seek": 193728, "start": 1946.28, "end": 1951.28, "text": " So, this is a spicy take from Lilian Wang of OpenAI.", "tokens": [50814, 407, 11, 341, 307, 257, 9127, 747, 490, 23454, 952, 14499, 295, 7238, 48698, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09205541326038873, "compression_ratio": 1.7235494880546076, "no_speech_prob": 0.0351286418735981}, {"id": 399, "seek": 193728, "start": 1951.28, "end": 1956.28, "text": " A lot of these prompt engineering papers that you find out there are, like, not actually worth eight pages,", "tokens": [51064, 316, 688, 295, 613, 12391, 7043, 10577, 300, 291, 915, 484, 456, 366, 11, 411, 11, 406, 767, 3163, 3180, 7183, 11, 51314], "temperature": 0.0, "avg_logprob": -0.09205541326038873, "compression_ratio": 1.7235494880546076, "no_speech_prob": 0.0351286418735981}, {"id": 400, "seek": 193728, "start": 1956.28, "end": 1960.28, "text": " and in fact, a lot of them are, like, 40 pages once you include the appendices,", "tokens": [51314, 293, 294, 1186, 11, 257, 688, 295, 552, 366, 11, 411, 11, 3356, 7183, 1564, 291, 4090, 264, 34116, 1473, 11, 51514], "temperature": 0.0, "avg_logprob": -0.09205541326038873, "compression_ratio": 1.7235494880546076, "no_speech_prob": 0.0351286418735981}, {"id": 401, "seek": 193728, "start": 1960.28, "end": 1963.28, "text": " because these are tricks that can be explained in, like, one or a few sentences,", "tokens": [51514, 570, 613, 366, 11733, 300, 393, 312, 8825, 294, 11, 411, 11, 472, 420, 257, 1326, 16579, 11, 51664], "temperature": 0.0, "avg_logprob": -0.09205541326038873, "compression_ratio": 1.7235494880546076, "no_speech_prob": 0.0351286418735981}, {"id": 402, "seek": 193728, "start": 1963.28, "end": 1966.28, "text": " and the rest is all about benchmarking.", "tokens": [51664, 293, 264, 1472, 307, 439, 466, 18927, 278, 13, 51814], "temperature": 0.0, "avg_logprob": -0.09205541326038873, "compression_ratio": 1.7235494880546076, "no_speech_prob": 0.0351286418735981}, {"id": 403, "seek": 196628, "start": 1966.28, "end": 1973.28, "text": " So, like, really in the end, like, these prompt engineering tricks are, like, go-to things to try,", "tokens": [50364, 407, 11, 411, 11, 534, 294, 264, 917, 11, 411, 11, 613, 12391, 7043, 11733, 366, 11, 411, 11, 352, 12, 1353, 721, 281, 853, 11, 50714], "temperature": 0.0, "avg_logprob": -0.08244724707169966, "compression_ratio": 1.6528497409326426, "no_speech_prob": 0.00031491354457102716}, {"id": 404, "seek": 196628, "start": 1973.28, "end": 1975.28, "text": " but there's not that much depth here.", "tokens": [50714, 457, 456, 311, 406, 300, 709, 7161, 510, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08244724707169966, "compression_ratio": 1.6528497409326426, "no_speech_prob": 0.00031491354457102716}, {"id": 405, "seek": 196628, "start": 1975.28, "end": 1980.28, "text": " I think the core language modeling stuff has some mathematical depth to it,", "tokens": [50814, 286, 519, 264, 4965, 2856, 15983, 1507, 575, 512, 18894, 7161, 281, 309, 11, 51064], "temperature": 0.0, "avg_logprob": -0.08244724707169966, "compression_ratio": 1.6528497409326426, "no_speech_prob": 0.00031491354457102716}, {"id": 406, "seek": 196628, "start": 1980.28, "end": 1987.28, "text": " but then in terms of the, like, fiddly bits that get language models to work for you, it's a lot of hacks.", "tokens": [51064, 457, 550, 294, 2115, 295, 264, 11, 411, 11, 283, 14273, 356, 9239, 300, 483, 2856, 5245, 281, 589, 337, 291, 11, 309, 311, 257, 688, 295, 33617, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08244724707169966, "compression_ratio": 1.6528497409326426, "no_speech_prob": 0.00031491354457102716}, {"id": 407, "seek": 198728, "start": 1988.28, "end": 1994.28, "text": " So, just as an overview, I'm going to first cover some, like, weird things to watch out for", "tokens": [50414, 407, 11, 445, 382, 364, 12492, 11, 286, 478, 516, 281, 700, 2060, 512, 11, 411, 11, 3657, 721, 281, 1159, 484, 337, 50714], "temperature": 0.0, "avg_logprob": -0.0627851793842931, "compression_ratio": 1.6402877697841727, "no_speech_prob": 0.008844836615025997}, {"id": 408, "seek": 198728, "start": 1994.28, "end": 1999.28, "text": " in terms of, like, things people will either suggest or you might believe would be good ideas that are actually not.", "tokens": [50714, 294, 2115, 295, 11, 411, 11, 721, 561, 486, 2139, 3402, 420, 291, 1062, 1697, 576, 312, 665, 3487, 300, 366, 767, 406, 13, 50964], "temperature": 0.0, "avg_logprob": -0.0627851793842931, "compression_ratio": 1.6402877697841727, "no_speech_prob": 0.008844836615025997}, {"id": 409, "seek": 198728, "start": 1999.28, "end": 2002.28, "text": " And then I'll talk about the emerging playbook.", "tokens": [50964, 400, 550, 286, 603, 751, 466, 264, 14989, 862, 2939, 13, 51114], "temperature": 0.0, "avg_logprob": -0.0627851793842931, "compression_ratio": 1.6402877697841727, "no_speech_prob": 0.008844836615025997}, {"id": 410, "seek": 198728, "start": 2002.28, "end": 2003.28, "text": " So, first, the ugly bits.", "tokens": [51114, 407, 11, 700, 11, 264, 12246, 9239, 13, 51164], "temperature": 0.0, "avg_logprob": -0.0627851793842931, "compression_ratio": 1.6402877697841727, "no_speech_prob": 0.008844836615025997}, {"id": 411, "seek": 198728, "start": 2003.28, "end": 2009.28, "text": " One, few-shot learning turns out to be not really a great, like, model or, like, approach to prompting.", "tokens": [51164, 1485, 11, 1326, 12, 18402, 2539, 4523, 484, 281, 312, 406, 534, 257, 869, 11, 411, 11, 2316, 420, 11, 411, 11, 3109, 281, 12391, 278, 13, 51464], "temperature": 0.0, "avg_logprob": -0.0627851793842931, "compression_ratio": 1.6402877697841727, "no_speech_prob": 0.008844836615025997}, {"id": 412, "seek": 198728, "start": 2009.28, "end": 2015.28, "text": " And then second, like, tokenization is going to mess you up for sure.", "tokens": [51464, 400, 550, 1150, 11, 411, 11, 14862, 2144, 307, 516, 281, 2082, 291, 493, 337, 988, 13, 51764], "temperature": 0.0, "avg_logprob": -0.0627851793842931, "compression_ratio": 1.6402877697841727, "no_speech_prob": 0.008844836615025997}, {"id": 413, "seek": 201528, "start": 2015.28, "end": 2020.28, "text": " So, like, watch out for it and some tricks, tips and tricks for dealing with it.", "tokens": [50364, 407, 11, 411, 11, 1159, 484, 337, 309, 293, 512, 11733, 11, 6082, 293, 11733, 337, 6260, 365, 309, 13, 50614], "temperature": 0.0, "avg_logprob": -0.075133996851304, "compression_ratio": 1.9625468164794007, "no_speech_prob": 7.03049372532405e-05}, {"id": 414, "seek": 201528, "start": 2020.28, "end": 2024.28, "text": " So, at the beginning, when, like, when people first talked about language models", "tokens": [50614, 407, 11, 412, 264, 2863, 11, 562, 11, 411, 11, 562, 561, 700, 2825, 466, 2856, 5245, 50814], "temperature": 0.0, "avg_logprob": -0.075133996851304, "compression_ratio": 1.9625468164794007, "no_speech_prob": 7.03049372532405e-05}, {"id": 415, "seek": 201528, "start": 2024.28, "end": 2028.28, "text": " and how you would, like, put in, put stuff into them to get them to do useful things,", "tokens": [50814, 293, 577, 291, 576, 11, 411, 11, 829, 294, 11, 829, 1507, 666, 552, 281, 483, 552, 281, 360, 4420, 721, 11, 51014], "temperature": 0.0, "avg_logprob": -0.075133996851304, "compression_ratio": 1.9625468164794007, "no_speech_prob": 7.03049372532405e-05}, {"id": 416, "seek": 201528, "start": 2028.28, "end": 2034.28, "text": " like, it was not at all obvious that a generative language model would be, like, useful for stuff to people.", "tokens": [51014, 411, 11, 309, 390, 406, 412, 439, 6322, 300, 257, 1337, 1166, 2856, 2316, 576, 312, 11, 411, 11, 4420, 337, 1507, 281, 561, 13, 51314], "temperature": 0.0, "avg_logprob": -0.075133996851304, "compression_ratio": 1.9625468164794007, "no_speech_prob": 7.03049372532405e-05}, {"id": 417, "seek": 201528, "start": 2034.28, "end": 2040.28, "text": " Like, it was clear that it would learn a lot of, like, intelligent things and, like, maybe mimic intelligence,", "tokens": [51314, 1743, 11, 309, 390, 1850, 300, 309, 576, 1466, 257, 688, 295, 11, 411, 11, 13232, 721, 293, 11, 411, 11, 1310, 31075, 7599, 11, 51614], "temperature": 0.0, "avg_logprob": -0.075133996851304, "compression_ratio": 1.9625468164794007, "no_speech_prob": 7.03049372532405e-05}, {"id": 418, "seek": 201528, "start": 2040.28, "end": 2043.28, "text": " but that it would, like, actually be useful was unclear.", "tokens": [51614, 457, 300, 309, 576, 11, 411, 11, 767, 312, 4420, 390, 25636, 13, 51764], "temperature": 0.0, "avg_logprob": -0.075133996851304, "compression_ratio": 1.9625468164794007, "no_speech_prob": 7.03049372532405e-05}, {"id": 419, "seek": 204328, "start": 2043.28, "end": 2048.2799999999997, "text": " And so the GPT-3 paper is actually called, language models are few-shot learners.", "tokens": [50364, 400, 370, 264, 26039, 51, 12, 18, 3035, 307, 767, 1219, 11, 2856, 5245, 366, 1326, 12, 18402, 23655, 13, 50614], "temperature": 0.0, "avg_logprob": -0.09707783386770603, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.0006461137672886252}, {"id": 420, "seek": 204328, "start": 2048.2799999999997, "end": 2054.2799999999997, "text": " And it draws an analogy to the way that during, like, during training, we might, like, pass over a bunch of examples,", "tokens": [50614, 400, 309, 20045, 364, 21663, 281, 264, 636, 300, 1830, 11, 411, 11, 1830, 3097, 11, 321, 1062, 11, 411, 11, 1320, 670, 257, 3840, 295, 5110, 11, 50914], "temperature": 0.0, "avg_logprob": -0.09707783386770603, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.0006461137672886252}, {"id": 421, "seek": 204328, "start": 2054.2799999999997, "end": 2062.2799999999997, "text": " run gradient descent and get, and, like, we go through those examples and pairs of, like, 5 plus 8 is 13, or 7 plus 2 is 9.", "tokens": [50914, 1190, 16235, 23475, 293, 483, 11, 293, 11, 411, 11, 321, 352, 807, 729, 5110, 293, 15494, 295, 11, 411, 11, 1025, 1804, 1649, 307, 3705, 11, 420, 1614, 1804, 568, 307, 1722, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09707783386770603, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.0006461137672886252}, {"id": 422, "seek": 204328, "start": 2062.2799999999997, "end": 2068.2799999999997, "text": " And during training, we, like, put that information into the weights of the model with gradient descent.", "tokens": [51314, 400, 1830, 3097, 11, 321, 11, 411, 11, 829, 300, 1589, 666, 264, 17443, 295, 264, 2316, 365, 16235, 23475, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09707783386770603, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.0006461137672886252}, {"id": 423, "seek": 206828, "start": 2068.28, "end": 2076.28, "text": " But then, with a large language model, like, GPT-3 in this case, you can put that information into the prompt,", "tokens": [50364, 583, 550, 11, 365, 257, 2416, 2856, 2316, 11, 411, 11, 26039, 51, 12, 18, 294, 341, 1389, 11, 291, 393, 829, 300, 1589, 666, 264, 12391, 11, 50764], "temperature": 0.0, "avg_logprob": -0.06946855386098226, "compression_ratio": 1.7894736842105263, "no_speech_prob": 0.013632237911224365}, {"id": 424, "seek": 206828, "start": 2076.28, "end": 2081.28, "text": " into the context, and the model will learn in context how to do this task.", "tokens": [50764, 666, 264, 4319, 11, 293, 264, 2316, 486, 1466, 294, 4319, 577, 281, 360, 341, 5633, 13, 51014], "temperature": 0.0, "avg_logprob": -0.06946855386098226, "compression_ratio": 1.7894736842105263, "no_speech_prob": 0.013632237911224365}, {"id": 425, "seek": 206828, "start": 2081.28, "end": 2085.28, "text": " So that's how it was presented in the paper, that the model was basically, like, learning things,", "tokens": [51014, 407, 300, 311, 577, 309, 390, 8212, 294, 264, 3035, 11, 300, 264, 2316, 390, 1936, 11, 411, 11, 2539, 721, 11, 51214], "temperature": 0.0, "avg_logprob": -0.06946855386098226, "compression_ratio": 1.7894736842105263, "no_speech_prob": 0.013632237911224365}, {"id": 426, "seek": 206828, "start": 2085.28, "end": 2090.28, "text": " like math and translation through English to French in its prompt.", "tokens": [51214, 411, 5221, 293, 12853, 807, 3669, 281, 5522, 294, 1080, 12391, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06946855386098226, "compression_ratio": 1.7894736842105263, "no_speech_prob": 0.013632237911224365}, {"id": 427, "seek": 206828, "start": 2090.28, "end": 2097.28, "text": " And that model hasn't really held up, which is that, like, you can really, if you craft carefully the content of your prompt,", "tokens": [51464, 400, 300, 2316, 6132, 380, 534, 5167, 493, 11, 597, 307, 300, 11, 411, 11, 291, 393, 534, 11, 498, 291, 8448, 7500, 264, 2701, 295, 428, 12391, 11, 51814], "temperature": 0.0, "avg_logprob": -0.06946855386098226, "compression_ratio": 1.7894736842105263, "no_speech_prob": 0.013632237911224365}, {"id": 428, "seek": 209728, "start": 2097.28, "end": 2106.28, "text": " you can often get, like, very, very good performance that, like, matching the effect of having many, many examples in the context,", "tokens": [50364, 291, 393, 2049, 483, 11, 411, 11, 588, 11, 588, 665, 3389, 300, 11, 411, 11, 14324, 264, 1802, 295, 1419, 867, 11, 867, 5110, 294, 264, 4319, 11, 50814], "temperature": 0.0, "avg_logprob": -0.05085857127740131, "compression_ratio": 1.9446640316205535, "no_speech_prob": 0.0012063789181411266}, {"id": 429, "seek": 209728, "start": 2106.28, "end": 2112.28, "text": " just by, like, carefully making sure that the model knows exactly what task it's supposed to solve.", "tokens": [50814, 445, 538, 11, 411, 11, 7500, 1455, 988, 300, 264, 2316, 3255, 2293, 437, 5633, 309, 311, 3442, 281, 5039, 13, 51114], "temperature": 0.0, "avg_logprob": -0.05085857127740131, "compression_ratio": 1.9446640316205535, "no_speech_prob": 0.0012063789181411266}, {"id": 430, "seek": 209728, "start": 2112.28, "end": 2120.28, "text": " So the primary role here is not for the model to learn a new task on the fly, but for the model to be, like, told what the task is.", "tokens": [51114, 407, 264, 6194, 3090, 510, 307, 406, 337, 264, 2316, 281, 1466, 257, 777, 5633, 322, 264, 3603, 11, 457, 337, 264, 2316, 281, 312, 11, 411, 11, 1907, 437, 264, 5633, 307, 13, 51514], "temperature": 0.0, "avg_logprob": -0.05085857127740131, "compression_ratio": 1.9446640316205535, "no_speech_prob": 0.0012063789181411266}, {"id": 431, "seek": 209728, "start": 2120.28, "end": 2126.28, "text": " So rather than doing an example, like, on the left, this, like, French example, English example, French example, English example,", "tokens": [51514, 407, 2831, 813, 884, 364, 1365, 11, 411, 11, 322, 264, 1411, 11, 341, 11, 411, 11, 5522, 1365, 11, 3669, 1365, 11, 5522, 1365, 11, 3669, 1365, 11, 51814], "temperature": 0.0, "avg_logprob": -0.05085857127740131, "compression_ratio": 1.9446640316205535, "no_speech_prob": 0.0012063789181411266}, {"id": 432, "seek": 212628, "start": 2126.28, "end": 2136.28, "text": " and then ending with an uncompleted one, you can, you can just bake it so that the model knows that what it's supposed to do is provide the right French answer.", "tokens": [50364, 293, 550, 8121, 365, 364, 8585, 564, 10993, 472, 11, 291, 393, 11, 291, 393, 445, 16562, 309, 370, 300, 264, 2316, 3255, 300, 437, 309, 311, 3442, 281, 360, 307, 2893, 264, 558, 5522, 1867, 13, 50864], "temperature": 0.0, "avg_logprob": -0.07609286675086388, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.0004042569489683956}, {"id": 433, "seek": 212628, "start": 2136.28, "end": 2146.28, "text": " And, like, there's been a, there's a number of, like, kind of negative results on, on this, like, models really struggle to move away from what they learned during their pre-training.", "tokens": [50864, 400, 11, 411, 11, 456, 311, 668, 257, 11, 456, 311, 257, 1230, 295, 11, 411, 11, 733, 295, 3671, 3542, 322, 11, 322, 341, 11, 411, 11, 5245, 534, 7799, 281, 1286, 1314, 490, 437, 436, 3264, 1830, 641, 659, 12, 17227, 1760, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07609286675086388, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.0004042569489683956}, {"id": 434, "seek": 212628, "start": 2146.28, "end": 2153.28, "text": " So, like, for example, if you put a couple, like, you might want to do sentiment analysis for the language model.", "tokens": [51364, 407, 11, 411, 11, 337, 1365, 11, 498, 291, 829, 257, 1916, 11, 411, 11, 291, 1062, 528, 281, 360, 16149, 5215, 337, 264, 2856, 2316, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07609286675086388, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.0004042569489683956}, {"id": 435, "seek": 215328, "start": 2153.28, "end": 2157.28, "text": " Say, is this a positive statement, a negative statement, or a neutral statement?", "tokens": [50364, 6463, 11, 307, 341, 257, 3353, 5629, 11, 257, 3671, 5629, 11, 420, 257, 10598, 5629, 30, 50564], "temperature": 0.0, "avg_logprob": -0.08697101048060826, "compression_ratio": 1.8744394618834082, "no_speech_prob": 0.015901485458016396}, {"id": 436, "seek": 215328, "start": 2157.28, "end": 2167.28, "text": " And if you take those labels and you just permute them so that now positive things are, are, are to be labeled as negative and negative things are to be labeled as positive,", "tokens": [50564, 400, 498, 291, 747, 729, 16949, 293, 291, 445, 4784, 1169, 552, 370, 300, 586, 3353, 721, 366, 11, 366, 11, 366, 281, 312, 21335, 382, 3671, 293, 3671, 721, 366, 281, 312, 21335, 382, 3353, 11, 51064], "temperature": 0.0, "avg_logprob": -0.08697101048060826, "compression_ratio": 1.8744394618834082, "no_speech_prob": 0.015901485458016396}, {"id": 437, "seek": 215328, "start": 2167.28, "end": 2177.28, "text": " the GPT-3, the model called that, that, like, launched the idea that language models are few-shot learners, will just basically ignore the labels that you provided", "tokens": [51064, 264, 26039, 51, 12, 18, 11, 264, 2316, 1219, 300, 11, 300, 11, 411, 11, 8730, 264, 1558, 300, 2856, 5245, 366, 1326, 12, 18402, 23655, 11, 486, 445, 1936, 11200, 264, 16949, 300, 291, 5649, 51564], "temperature": 0.0, "avg_logprob": -0.08697101048060826, "compression_ratio": 1.8744394618834082, "no_speech_prob": 0.015901485458016396}, {"id": 438, "seek": 217728, "start": 2177.28, "end": 2185.28, "text": " and continue to say that a positive statement, like the acquisition will have a positive impact, should have the label positive rather than negative.", "tokens": [50364, 293, 2354, 281, 584, 300, 257, 3353, 5629, 11, 411, 264, 21668, 486, 362, 257, 3353, 2712, 11, 820, 362, 264, 7645, 3353, 2831, 813, 3671, 13, 50764], "temperature": 0.0, "avg_logprob": -0.07833904939539292, "compression_ratio": 1.7464788732394365, "no_speech_prob": 0.1066318154335022}, {"id": 439, "seek": 217728, "start": 2185.28, "end": 2198.28, "text": " So you even, so you flip the labels, if you do that with a regular neural network and you train it, like, actually train it with gradients, it will immediately pick up that that's, that this is the way the label should be.", "tokens": [50764, 407, 291, 754, 11, 370, 291, 7929, 264, 16949, 11, 498, 291, 360, 300, 365, 257, 3890, 18161, 3209, 293, 291, 3847, 309, 11, 411, 11, 767, 3847, 309, 365, 2771, 2448, 11, 309, 486, 4258, 1888, 493, 300, 300, 311, 11, 300, 341, 307, 264, 636, 264, 7645, 820, 312, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07833904939539292, "compression_ratio": 1.7464788732394365, "no_speech_prob": 0.1066318154335022}, {"id": 440, "seek": 219828, "start": 2198.28, "end": 2207.28, "text": " And so there's been some follow-up that indicates that this permuted label task is something that the latest language models can do.", "tokens": [50364, 400, 370, 456, 311, 668, 512, 1524, 12, 1010, 300, 16203, 300, 341, 4784, 4866, 7645, 5633, 307, 746, 300, 264, 6792, 2856, 5245, 393, 360, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09437156476472554, "compression_ratio": 1.620253164556962, "no_speech_prob": 0.1823166012763977}, {"id": 441, "seek": 219828, "start": 2207.28, "end": 2216.28, "text": " So GPT-3, like, this is showing increased amounts of flipped labels for a bunch of different models, different sizes of instruct GPT and GPT-3.", "tokens": [50814, 407, 26039, 51, 12, 18, 11, 411, 11, 341, 307, 4099, 6505, 11663, 295, 26273, 16949, 337, 257, 3840, 295, 819, 5245, 11, 819, 11602, 295, 7232, 26039, 51, 293, 26039, 51, 12, 18, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09437156476472554, "compression_ratio": 1.620253164556962, "no_speech_prob": 0.1823166012763977}, {"id": 442, "seek": 219828, "start": 2216.28, "end": 2222.28, "text": " And if the model was, was doing the task, like, perfectly at each point, you would follow that orange line.", "tokens": [51264, 400, 498, 264, 2316, 390, 11, 390, 884, 264, 5633, 11, 411, 11, 6239, 412, 1184, 935, 11, 291, 576, 1524, 300, 7671, 1622, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09437156476472554, "compression_ratio": 1.620253164556962, "no_speech_prob": 0.1823166012763977}, {"id": 443, "seek": 222228, "start": 2222.28, "end": 2228.28, "text": " And instruct GPT and code DaVinci-2 in particular, like, kind of follow that line.", "tokens": [50364, 400, 7232, 26039, 51, 293, 3089, 3933, 53, 21961, 12, 17, 294, 1729, 11, 411, 11, 733, 295, 1524, 300, 1622, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12085962948733814, "compression_ratio": 1.4432432432432432, "no_speech_prob": 0.018534822389483452}, {"id": 444, "seek": 222228, "start": 2228.28, "end": 2243.28, "text": " But they, like, they still don't perfectly do it. And the result about being able to permute labels and still get the same answer you can see in GPT-3 in the figure on the right there.", "tokens": [50664, 583, 436, 11, 411, 11, 436, 920, 500, 380, 6239, 360, 309, 13, 400, 264, 1874, 466, 885, 1075, 281, 4784, 1169, 16949, 293, 920, 483, 264, 912, 1867, 291, 393, 536, 294, 26039, 51, 12, 18, 294, 264, 2573, 322, 264, 558, 456, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12085962948733814, "compression_ratio": 1.4432432432432432, "no_speech_prob": 0.018534822389483452}, {"id": 445, "seek": 224328, "start": 2243.28, "end": 2252.28, "text": " So, like, and this is, like, one bit. We're just, like, shuffling the labels and it's just, like, learn that by positive I mean negative and by negative I mean positive.", "tokens": [50364, 407, 11, 411, 11, 293, 341, 307, 11, 411, 11, 472, 857, 13, 492, 434, 445, 11, 411, 11, 402, 1245, 1688, 264, 16949, 293, 309, 311, 445, 11, 411, 11, 1466, 300, 538, 3353, 286, 914, 3671, 293, 538, 3671, 286, 914, 3353, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08447079780774239, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.08506211638450623}, {"id": 446, "seek": 224328, "start": 2252.28, "end": 2255.28, "text": " And you need lots of examples in a really capable language model to do it.", "tokens": [50814, 400, 291, 643, 3195, 295, 5110, 294, 257, 534, 8189, 2856, 2316, 281, 360, 309, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08447079780774239, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.08506211638450623}, {"id": 447, "seek": 224328, "start": 2255.28, "end": 2260.28, "text": " So treating the prompt as a way to do this, like, few-shot learning is probably a bad idea.", "tokens": [50964, 407, 15083, 264, 12391, 382, 257, 636, 281, 360, 341, 11, 411, 11, 1326, 12, 18402, 2539, 307, 1391, 257, 1578, 1558, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08447079780774239, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.08506211638450623}, {"id": 448, "seek": 224328, "start": 2260.28, "end": 2268.28, "text": " Then second bit that people often get tripped up on is models don't really see characters, they see tokens.", "tokens": [51214, 1396, 1150, 857, 300, 561, 2049, 483, 1376, 3320, 493, 322, 307, 5245, 500, 380, 534, 536, 4342, 11, 436, 536, 22667, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08447079780774239, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.08506211638450623}, {"id": 449, "seek": 226828, "start": 2268.28, "end": 2274.28, "text": " Like, hello world and it's, like, rotated version where I just add 13 to the index of each character.", "tokens": [50364, 1743, 11, 7751, 1002, 293, 309, 311, 11, 411, 11, 42146, 3037, 689, 286, 445, 909, 3705, 281, 264, 8186, 295, 1184, 2517, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1822637953199782, "compression_ratio": 1.68503937007874, "no_speech_prob": 0.06554892659187317}, {"id": 450, "seek": 226828, "start": 2274.28, "end": 2276.28, "text": " Like, it's rotated version.", "tokens": [50664, 1743, 11, 309, 311, 42146, 3037, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1822637953199782, "compression_ratio": 1.68503937007874, "no_speech_prob": 0.06554892659187317}, {"id": 451, "seek": 226828, "start": 2276.28, "end": 2282.28, "text": " Oriabha Jubbeck is something that I look at and, like, they look the same to me.", "tokens": [50764, 23621, 455, 1641, 43560, 650, 547, 307, 746, 300, 286, 574, 412, 293, 11, 411, 11, 436, 574, 264, 912, 281, 385, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1822637953199782, "compression_ratio": 1.68503937007874, "no_speech_prob": 0.06554892659187317}, {"id": 452, "seek": 226828, "start": 2282.28, "end": 2286.28, "text": " Like, they're just both a sequence of the same number of characters.", "tokens": [51064, 1743, 11, 436, 434, 445, 1293, 257, 8310, 295, 264, 912, 1230, 295, 4342, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1822637953199782, "compression_ratio": 1.68503937007874, "no_speech_prob": 0.06554892659187317}, {"id": 453, "seek": 226828, "start": 2286.28, "end": 2296.28, "text": " For a language model, because those letters in the rotated version are less common, it gets tokenized, like, very differently into many more tokens.", "tokens": [51264, 1171, 257, 2856, 2316, 11, 570, 729, 7825, 294, 264, 42146, 3037, 366, 1570, 2689, 11, 309, 2170, 14862, 1602, 11, 411, 11, 588, 7614, 666, 867, 544, 22667, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1822637953199782, "compression_ratio": 1.68503937007874, "no_speech_prob": 0.06554892659187317}, {"id": 454, "seek": 229628, "start": 2296.28, "end": 2302.28, "text": " So a lot of people, like, you're sitting at a language model interface and it's, like, it's all language so you start thinking about things you can do with characters.", "tokens": [50364, 407, 257, 688, 295, 561, 11, 411, 11, 291, 434, 3798, 412, 257, 2856, 2316, 9226, 293, 309, 311, 11, 411, 11, 309, 311, 439, 2856, 370, 291, 722, 1953, 466, 721, 291, 393, 360, 365, 4342, 13, 50664], "temperature": 0.0, "avg_logprob": -0.08902598965552545, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0012840756680816412}, {"id": 455, "seek": 229628, "start": 2302.28, "end": 2311.28, "text": " Like, oh, I could, like, split them and reverse them and all kinds of, like, string operations that you might use, like, Python for.", "tokens": [50664, 1743, 11, 1954, 11, 286, 727, 11, 411, 11, 7472, 552, 293, 9943, 552, 293, 439, 3685, 295, 11, 411, 11, 6798, 7705, 300, 291, 1062, 764, 11, 411, 11, 15329, 337, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08902598965552545, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0012840756680816412}, {"id": 456, "seek": 229628, "start": 2311.28, "end": 2315.28, "text": " But language models are actually not very good at that.", "tokens": [51114, 583, 2856, 5245, 366, 767, 406, 588, 665, 412, 300, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08902598965552545, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0012840756680816412}, {"id": 457, "seek": 229628, "start": 2315.28, "end": 2321.28, "text": " And so this is, like, kind of surprising because it's good at, like, creative writing and summarizing but not at things like reversing words.", "tokens": [51314, 400, 370, 341, 307, 11, 411, 11, 733, 295, 8830, 570, 309, 311, 665, 412, 11, 411, 11, 5880, 3579, 293, 14611, 3319, 457, 406, 412, 721, 411, 14582, 278, 2283, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08902598965552545, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0012840756680816412}, {"id": 458, "seek": 232128, "start": 2321.28, "end": 2325.28, "text": " Peter Wellender showed some, like, nice tricks for solving this problem.", "tokens": [50364, 6508, 1042, 3216, 4712, 512, 11, 411, 11, 1481, 11733, 337, 12606, 341, 1154, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09178703587229659, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.2171381264925003}, {"id": 459, "seek": 232128, "start": 2325.28, "end": 2334.28, "text": " And one of the key ones is, like, if you add spaces between letters, either in the prompt or by asking the language model to do it,", "tokens": [50564, 400, 472, 295, 264, 2141, 2306, 307, 11, 411, 11, 498, 291, 909, 7673, 1296, 7825, 11, 2139, 294, 264, 12391, 420, 538, 3365, 264, 2856, 2316, 281, 360, 309, 11, 51014], "temperature": 0.0, "avg_logprob": -0.09178703587229659, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.2171381264925003}, {"id": 460, "seek": 232128, "start": 2334.28, "end": 2342.28, "text": " then this changes the tokenization and anything with a space before it and a space after it is going to get kind of tokenized separately.", "tokens": [51014, 550, 341, 2962, 264, 14862, 2144, 293, 1340, 365, 257, 1901, 949, 309, 293, 257, 1901, 934, 309, 307, 516, 281, 483, 733, 295, 14862, 1602, 14759, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09178703587229659, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.2171381264925003}, {"id": 461, "seek": 234228, "start": 2342.28, "end": 2353.28, "text": " So a lot of the tokens for the most of the language models, like capable language models, have a space at the beginning and then a letter.", "tokens": [50364, 407, 257, 688, 295, 264, 22667, 337, 264, 881, 295, 264, 2856, 5245, 11, 411, 8189, 2856, 5245, 11, 362, 257, 1901, 412, 264, 2863, 293, 550, 257, 5063, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11271561185518901, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.010650746524333954}, {"id": 462, "seek": 234228, "start": 2353.28, "end": 2361.28, "text": " And then when another space follows, that becomes part of another token that looks like space and then, like, letter or several letters.", "tokens": [50914, 400, 550, 562, 1071, 1901, 10002, 11, 300, 3643, 644, 295, 1071, 14862, 300, 1542, 411, 1901, 293, 550, 11, 411, 11, 5063, 420, 2940, 7825, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11271561185518901, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.010650746524333954}, {"id": 463, "seek": 234228, "start": 2361.28, "end": 2370.28, "text": " So, like, that's one trick to get around some of this, like, by pairing coding stuff, this, like, issues of tokenization.", "tokens": [51314, 407, 11, 411, 11, 300, 311, 472, 4282, 281, 483, 926, 512, 295, 341, 11, 411, 11, 538, 32735, 17720, 1507, 11, 341, 11, 411, 11, 2663, 295, 14862, 2144, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11271561185518901, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.010650746524333954}, {"id": 464, "seek": 237028, "start": 2370.28, "end": 2376.28, "text": " It seems to be slightly resolved with GPT-4, so this is an example from the GPT-4 developer livestream.", "tokens": [50364, 467, 2544, 281, 312, 4748, 20772, 365, 26039, 51, 12, 19, 11, 370, 341, 307, 364, 1365, 490, 264, 26039, 51, 12, 19, 10754, 29782, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11674120487310947, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.025162672623991966}, {"id": 465, "seek": 237028, "start": 2376.28, "end": 2379.28, "text": " So summarize this article into a sentence where every word begins with G.", "tokens": [50664, 407, 20858, 341, 7222, 666, 257, 8174, 689, 633, 1349, 7338, 365, 460, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11674120487310947, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.025162672623991966}, {"id": 466, "seek": 237028, "start": 2379.28, "end": 2389.28, "text": " So, like, because of tokenization, like, every word that begins with G, there's lots of words that begin with G, but their tokenization starts with, like, three letters, not just one.", "tokens": [50814, 407, 11, 411, 11, 570, 295, 14862, 2144, 11, 411, 11, 633, 1349, 300, 7338, 365, 460, 11, 456, 311, 3195, 295, 2283, 300, 1841, 365, 460, 11, 457, 641, 14862, 2144, 3719, 365, 11, 411, 11, 1045, 7825, 11, 406, 445, 472, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11674120487310947, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.025162672623991966}, {"id": 467, "seek": 237028, "start": 2389.28, "end": 2391.28, "text": " So it's not very obvious to a language model.", "tokens": [51314, 407, 309, 311, 406, 588, 6322, 281, 257, 2856, 2316, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11674120487310947, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.025162672623991966}, {"id": 468, "seek": 237028, "start": 2391.28, "end": 2393.28, "text": " And so this was something that failed quite often.", "tokens": [51414, 400, 370, 341, 390, 746, 300, 7612, 1596, 2049, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11674120487310947, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.025162672623991966}, {"id": 469, "seek": 239328, "start": 2393.28, "end": 2396.28, "text": " But GPT-4 can do a decent job at it.", "tokens": [50364, 583, 26039, 51, 12, 19, 393, 360, 257, 8681, 1691, 412, 309, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1235766363616037, "compression_ratio": 1.524793388429752, "no_speech_prob": 0.1257799118757248}, {"id": 470, "seek": 239328, "start": 2396.28, "end": 2405.28, "text": " It's the summary of its own description, and it says GPT-4 generates groundbreaking grandiose gains, freely galvanizing generalized AI goals.", "tokens": [50514, 467, 311, 264, 12691, 295, 1080, 1065, 3855, 11, 293, 309, 1619, 26039, 51, 12, 19, 23815, 42491, 45155, 541, 16823, 11, 16433, 7660, 9768, 3319, 44498, 7318, 5493, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1235766363616037, "compression_ratio": 1.524793388429752, "no_speech_prob": 0.1257799118757248}, {"id": 471, "seek": 239328, "start": 2405.28, "end": 2406.28, "text": " And not quite.", "tokens": [50964, 400, 406, 1596, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1235766363616037, "compression_ratio": 1.524793388429752, "no_speech_prob": 0.1257799118757248}, {"id": 472, "seek": 239328, "start": 2406.28, "end": 2412.28, "text": " So even with the most capable models, these, like, this issue of character level stuff is really hard.", "tokens": [51014, 407, 754, 365, 264, 881, 8189, 5245, 11, 613, 11, 411, 11, 341, 2734, 295, 2517, 1496, 1507, 307, 534, 1152, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1235766363616037, "compression_ratio": 1.524793388429752, "no_speech_prob": 0.1257799118757248}, {"id": 473, "seek": 239328, "start": 2412.28, "end": 2414.28, "text": " So there's a simple trick here.", "tokens": [51314, 407, 456, 311, 257, 2199, 4282, 510, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1235766363616037, "compression_ratio": 1.524793388429752, "no_speech_prob": 0.1257799118757248}, {"id": 474, "seek": 239328, "start": 2414.28, "end": 2415.28, "text": " It's the same thing with the simulators.", "tokens": [51414, 467, 311, 264, 912, 551, 365, 264, 1034, 39265, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1235766363616037, "compression_ratio": 1.524793388429752, "no_speech_prob": 0.1257799118757248}, {"id": 475, "seek": 241528, "start": 2415.28, "end": 2423.28, "text": " If it's something you can do with traditional programming, like stream manipulation, just do it that way instead of using the language model.", "tokens": [50364, 759, 309, 311, 746, 291, 393, 360, 365, 5164, 9410, 11, 411, 4309, 26475, 11, 445, 360, 309, 300, 636, 2602, 295, 1228, 264, 2856, 2316, 13, 50764], "temperature": 0.0, "avg_logprob": -0.0678205364628842, "compression_ratio": 1.7912087912087913, "no_speech_prob": 0.030204616487026215}, {"id": 476, "seek": 241528, "start": 2423.28, "end": 2428.28, "text": " Let's talk about this, like, emerging playbook for using language models.", "tokens": [50764, 961, 311, 751, 466, 341, 11, 411, 11, 14989, 862, 2939, 337, 1228, 2856, 5245, 13, 51014], "temperature": 0.0, "avg_logprob": -0.0678205364628842, "compression_ratio": 1.7912087912087913, "no_speech_prob": 0.030204616487026215}, {"id": 477, "seek": 241528, "start": 2428.28, "end": 2436.28, "text": " So what are the, like, core tricks that are the ones you should, like, bring into play immediately when you're starting to use a language model or something?", "tokens": [51014, 407, 437, 366, 264, 11, 411, 11, 4965, 11733, 300, 366, 264, 2306, 291, 820, 11, 411, 11, 1565, 666, 862, 4258, 562, 291, 434, 2891, 281, 764, 257, 2856, 2316, 420, 746, 30, 51414], "temperature": 0.0, "avg_logprob": -0.0678205364628842, "compression_ratio": 1.7912087912087913, "no_speech_prob": 0.030204616487026215}, {"id": 478, "seek": 241528, "start": 2436.28, "end": 2440.28, "text": " So language models are really, really good and love formatted text.", "tokens": [51414, 407, 2856, 5245, 366, 534, 11, 534, 665, 293, 959, 1254, 32509, 2487, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0678205364628842, "compression_ratio": 1.7912087912087913, "no_speech_prob": 0.030204616487026215}, {"id": 479, "seek": 241528, "start": 2440.28, "end": 2443.28, "text": " Formatted text is much, much easier to predict.", "tokens": [51614, 10126, 32509, 2487, 307, 709, 11, 709, 3571, 281, 6069, 13, 51764], "temperature": 0.0, "avg_logprob": -0.0678205364628842, "compression_ratio": 1.7912087912087913, "no_speech_prob": 0.030204616487026215}, {"id": 480, "seek": 244328, "start": 2443.28, "end": 2448.28, "text": " And so the language model is, like, unlikely to start, like, going off on a tangent and doing something else.", "tokens": [50364, 400, 370, 264, 2856, 2316, 307, 11, 411, 11, 17518, 281, 722, 11, 411, 11, 516, 766, 322, 257, 27747, 293, 884, 746, 1646, 13, 50614], "temperature": 0.0, "avg_logprob": -0.09140451749165852, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.001244557206518948}, {"id": 481, "seek": 244328, "start": 2448.28, "end": 2453.28, "text": " Because it's, like, it's got, like, high probability tokens to predict.", "tokens": [50614, 1436, 309, 311, 11, 411, 11, 309, 311, 658, 11, 411, 11, 1090, 8482, 22667, 281, 6069, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09140451749165852, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.001244557206518948}, {"id": 482, "seek": 244328, "start": 2453.28, "end": 2460.28, "text": " So Riley Goodside was a big sort of, like, innovator on this front shared a lot of really cool examples on it.", "tokens": [50864, 407, 31373, 2205, 1812, 390, 257, 955, 1333, 295, 11, 411, 11, 5083, 1639, 322, 341, 1868, 5507, 257, 688, 295, 534, 1627, 5110, 322, 309, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09140451749165852, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.001244557206518948}, {"id": 483, "seek": 244328, "start": 2460.28, "end": 2467.28, "text": " So if you want to generate, say, a whole Python program and you know the rough outlines of it, but not everything in detail,", "tokens": [51214, 407, 498, 291, 528, 281, 8460, 11, 584, 11, 257, 1379, 15329, 1461, 293, 291, 458, 264, 5903, 40125, 295, 309, 11, 457, 406, 1203, 294, 2607, 11, 51564], "temperature": 0.0, "avg_logprob": -0.09140451749165852, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.001244557206518948}, {"id": 484, "seek": 246728, "start": 2468.28, "end": 2477.28, "text": " just, like, put it in triple back ticks and then take each component and write, like, a little form, like, pseudo code formatted chunk for each.", "tokens": [50414, 445, 11, 411, 11, 829, 309, 294, 15508, 646, 42475, 293, 550, 747, 1184, 6542, 293, 2464, 11, 411, 11, 257, 707, 1254, 11, 411, 11, 35899, 3089, 1254, 32509, 16635, 337, 1184, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14197547869248825, "compression_ratio": 1.7849462365591398, "no_speech_prob": 0.04740948602557182}, {"id": 485, "seek": 246728, "start": 2477.28, "end": 2487.28, "text": " So, right, like, oh, it should start with a hash bang, it should have dundas, I should have a function, and then I should have, like, some, like, some basic features inside that function.", "tokens": [50864, 407, 11, 558, 11, 411, 11, 1954, 11, 309, 820, 722, 365, 257, 22019, 8550, 11, 309, 820, 362, 274, 997, 296, 11, 286, 820, 362, 257, 2445, 11, 293, 550, 286, 820, 362, 11, 411, 11, 512, 11, 411, 11, 512, 3875, 4122, 1854, 300, 2445, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14197547869248825, "compression_ratio": 1.7849462365591398, "no_speech_prob": 0.04740948602557182}, {"id": 486, "seek": 248728, "start": 2487.28, "end": 2501.28, "text": " So you're, you're making, like, you can make use of structured text that's not as, like, rigorously structured as, like, JSON or YAML, but just, like, more structured, like, like, pseudo code and language models will, like, pick it up quite well.", "tokens": [50364, 407, 291, 434, 11, 291, 434, 1455, 11, 411, 11, 291, 393, 652, 764, 295, 18519, 2487, 300, 311, 406, 382, 11, 411, 11, 42191, 5098, 18519, 382, 11, 411, 11, 31828, 420, 398, 2865, 43, 11, 457, 445, 11, 411, 11, 544, 18519, 11, 411, 11, 411, 11, 35899, 3089, 293, 2856, 5245, 486, 11, 411, 11, 1888, 309, 493, 1596, 731, 13, 51064], "temperature": 0.0, "avg_logprob": -0.12004036031743531, "compression_ratio": 1.6214953271028036, "no_speech_prob": 0.014499898999929428}, {"id": 487, "seek": 248728, "start": 2501.28, "end": 2509.28, "text": " So for this example, like, it generates this nice little snippet of code for calling the OpenAI API.", "tokens": [51064, 407, 337, 341, 1365, 11, 411, 11, 309, 23815, 341, 1481, 707, 35623, 302, 295, 3089, 337, 5141, 264, 7238, 48698, 9362, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12004036031743531, "compression_ratio": 1.6214953271028036, "no_speech_prob": 0.014499898999929428}, {"id": 488, "seek": 250928, "start": 2509.28, "end": 2516.28, "text": " And, yeah, so the one, the other thing I would pull out here is the, like, triple back ticks trick, this is another little prompt engineering trick.", "tokens": [50364, 400, 11, 1338, 11, 370, 264, 472, 11, 264, 661, 551, 286, 576, 2235, 484, 510, 307, 264, 11, 411, 11, 15508, 646, 42475, 4282, 11, 341, 307, 1071, 707, 12391, 7043, 4282, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10818880695407673, "compression_ratio": 1.71, "no_speech_prob": 0.017437264323234558}, {"id": 489, "seek": 250928, "start": 2516.28, "end": 2527.28, "text": " Models are trained on a lot of stuff from GitHub, and triple back ticks is an important component of markdown that indicates that something is going to be code, or it's also used around pseudo code.", "tokens": [50714, 6583, 1625, 366, 8895, 322, 257, 688, 295, 1507, 490, 23331, 11, 293, 15508, 646, 42475, 307, 364, 1021, 6542, 295, 1491, 5093, 300, 16203, 300, 746, 307, 516, 281, 312, 3089, 11, 420, 309, 311, 611, 1143, 926, 35899, 3089, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10818880695407673, "compression_ratio": 1.71, "no_speech_prob": 0.017437264323234558}, {"id": 490, "seek": 250928, "start": 2527.28, "end": 2538.28, "text": " So it sort of puts the model in the universe of documents around computer programs, which is often where you want to be when you are, like, producing an application.", "tokens": [51264, 407, 309, 1333, 295, 8137, 264, 2316, 294, 264, 6445, 295, 8512, 926, 3820, 4268, 11, 597, 307, 2049, 689, 291, 528, 281, 312, 562, 291, 366, 11, 411, 11, 10501, 364, 3861, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10818880695407673, "compression_ratio": 1.71, "no_speech_prob": 0.017437264323234558}, {"id": 491, "seek": 253828, "start": 2538.28, "end": 2544.28, "text": " So then this, so this is, like, decomposition by putting it into the structure of text.", "tokens": [50364, 407, 550, 341, 11, 370, 341, 307, 11, 411, 11, 48356, 538, 3372, 309, 666, 264, 3877, 295, 2487, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1015763218338425, "compression_ratio": 1.627027027027027, "no_speech_prob": 0.0012063118629157543}, {"id": 492, "seek": 253828, "start": 2544.28, "end": 2556.28, "text": " You could also add decomposition to your prompt. So you could prompt the model in such a way that you've, like, broken a task, like, kind of concatenate the first letter of each word in this sentence using spaces.", "tokens": [50664, 509, 727, 611, 909, 48356, 281, 428, 12391, 13, 407, 291, 727, 12391, 264, 2316, 294, 1270, 257, 636, 300, 291, 600, 11, 411, 11, 5463, 257, 5633, 11, 411, 11, 733, 295, 1588, 7186, 473, 264, 700, 5063, 295, 1184, 1349, 294, 341, 8174, 1228, 7673, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1015763218338425, "compression_ratio": 1.627027027027027, "no_speech_prob": 0.0012063118629157543}, {"id": 493, "seek": 255628, "start": 2557.28, "end": 2568.28, "text": " So to, like, break it down in the prompt into a bunch of smaller tasks, those smaller tasks could then be, like, other, you know, other, they could trigger the prompting of another language model.", "tokens": [50414, 407, 281, 11, 411, 11, 1821, 309, 760, 294, 264, 12391, 666, 257, 3840, 295, 4356, 9608, 11, 729, 4356, 9608, 727, 550, 312, 11, 411, 11, 661, 11, 291, 458, 11, 661, 11, 436, 727, 7875, 264, 12391, 278, 295, 1071, 2856, 2316, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08463483152136339, "compression_ratio": 1.89272030651341, "no_speech_prob": 0.3555668890476227}, {"id": 494, "seek": 255628, "start": 2568.28, "end": 2571.28, "text": " They could trigger an external tool. That's all stuff that Josh will talk about.", "tokens": [50964, 814, 727, 7875, 364, 8320, 2290, 13, 663, 311, 439, 1507, 300, 9785, 486, 751, 466, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08463483152136339, "compression_ratio": 1.89272030651341, "no_speech_prob": 0.3555668890476227}, {"id": 495, "seek": 255628, "start": 2571.28, "end": 2583.28, "text": " But just in general, you could just break the task down into little pieces and make sure that the language model, like, you know, knows to generate each, each little piece by using that decomposition centered prompt.", "tokens": [51114, 583, 445, 294, 2674, 11, 291, 727, 445, 1821, 264, 5633, 760, 666, 707, 3755, 293, 652, 988, 300, 264, 2856, 2316, 11, 411, 11, 291, 458, 11, 3255, 281, 8460, 1184, 11, 1184, 707, 2522, 538, 1228, 300, 48356, 18988, 12391, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08463483152136339, "compression_ratio": 1.89272030651341, "no_speech_prob": 0.3555668890476227}, {"id": 496, "seek": 258328, "start": 2583.28, "end": 2587.28, "text": " But it'd be better if you could, like, automate the construction of that decomposition.", "tokens": [50364, 583, 309, 1116, 312, 1101, 498, 291, 727, 11, 411, 11, 31605, 264, 6435, 295, 300, 48356, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11172315138804761, "compression_ratio": 1.7263681592039801, "no_speech_prob": 0.0015008993213996291}, {"id": 497, "seek": 258328, "start": 2587.28, "end": 2604.28, "text": " So rather than writing this big structured document or, like, rather than writing some, like, examples of cases where problems are decomposed, you can, like, do something like the self ask trick, which is when you, like, write your initial prompt of examples,", "tokens": [50564, 407, 2831, 813, 3579, 341, 955, 18519, 4166, 420, 11, 411, 11, 2831, 813, 3579, 512, 11, 411, 11, 5110, 295, 3331, 689, 2740, 366, 22867, 1744, 11, 291, 393, 11, 411, 11, 360, 746, 411, 264, 2698, 1029, 4282, 11, 597, 307, 562, 291, 11, 411, 11, 2464, 428, 5883, 12391, 295, 5110, 11, 51414], "temperature": 0.0, "avg_logprob": -0.11172315138804761, "compression_ratio": 1.7263681592039801, "no_speech_prob": 0.0015008993213996291}, {"id": 498, "seek": 260428, "start": 2604.28, "end": 2613.28, "text": " you can say, you can, you can frame it in terms of, like, generic decomposition operations, like, our follow up questions needed here, yes or no.", "tokens": [50364, 291, 393, 584, 11, 291, 393, 11, 291, 393, 3920, 309, 294, 2115, 295, 11, 411, 11, 19577, 48356, 7705, 11, 411, 11, 527, 1524, 493, 1651, 2978, 510, 11, 2086, 420, 572, 13, 50814], "temperature": 0.0, "avg_logprob": -0.0738296783887423, "compression_ratio": 1.7932489451476794, "no_speech_prob": 0.02441728115081787}, {"id": 499, "seek": 260428, "start": 2613.28, "end": 2623.28, "text": " And then the model will ask query time, it will decide what, what number of follow up questions to ask and, like, how to ask them to get the final answer.", "tokens": [50814, 400, 550, 264, 2316, 486, 1029, 14581, 565, 11, 309, 486, 4536, 437, 11, 437, 1230, 295, 1524, 493, 1651, 281, 1029, 293, 11, 411, 11, 577, 281, 1029, 552, 281, 483, 264, 2572, 1867, 13, 51314], "temperature": 0.0, "avg_logprob": -0.0738296783887423, "compression_ratio": 1.7932489451476794, "no_speech_prob": 0.02441728115081787}, {"id": 500, "seek": 260428, "start": 2623.28, "end": 2630.28, "text": " So, like, sort of automating this process of decomposition is one of the key tools for getting language models to be better.", "tokens": [51314, 407, 11, 411, 11, 1333, 295, 3553, 990, 341, 1399, 295, 48356, 307, 472, 295, 264, 2141, 3873, 337, 1242, 2856, 5245, 281, 312, 1101, 13, 51664], "temperature": 0.0, "avg_logprob": -0.0738296783887423, "compression_ratio": 1.7932489451476794, "no_speech_prob": 0.02441728115081787}, {"id": 501, "seek": 263028, "start": 2630.28, "end": 2635.28, "text": " So maybe the most famous, one of the most famous ones of this is reasoning with few shots.", "tokens": [50364, 407, 1310, 264, 881, 4618, 11, 472, 295, 264, 881, 4618, 2306, 295, 341, 307, 21577, 365, 1326, 8305, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10540538085134406, "compression_ratio": 2.029535864978903, "no_speech_prob": 0.0073436531238257885}, {"id": 502, "seek": 263028, "start": 2635.28, "end": 2640.28, "text": " It's getting reasoning out of models, like, reasoning as a way of decomposing problems.", "tokens": [50614, 467, 311, 1242, 21577, 484, 295, 5245, 11, 411, 11, 21577, 382, 257, 636, 295, 22867, 6110, 2740, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10540538085134406, "compression_ratio": 2.029535864978903, "no_speech_prob": 0.0073436531238257885}, {"id": 503, "seek": 263028, "start": 2640.28, "end": 2644.28, "text": " And the most famous one is this chain of thought prompting.", "tokens": [50864, 400, 264, 881, 4618, 472, 307, 341, 5021, 295, 1194, 12391, 278, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10540538085134406, "compression_ratio": 2.029535864978903, "no_speech_prob": 0.0073436531238257885}, {"id": 504, "seek": 263028, "start": 2644.28, "end": 2658.28, "text": " So in the prompt for the model, you include, like, both, like, this is for a question answering model, so it's getting these, like, little math word problems and answering questions and answering the, giving the final answer to that question.", "tokens": [51064, 407, 294, 264, 12391, 337, 264, 2316, 11, 291, 4090, 11, 411, 11, 1293, 11, 411, 11, 341, 307, 337, 257, 1168, 13430, 2316, 11, 370, 309, 311, 1242, 613, 11, 411, 11, 707, 5221, 1349, 2740, 293, 13430, 1651, 293, 13430, 264, 11, 2902, 264, 2572, 1867, 281, 300, 1168, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10540538085134406, "compression_ratio": 2.029535864978903, "no_speech_prob": 0.0073436531238257885}, {"id": 505, "seek": 265828, "start": 2658.28, "end": 2665.28, "text": " And in the examples that you put in the model's prompt, you write out the reasoning that's highlighted in blue.", "tokens": [50364, 400, 294, 264, 5110, 300, 291, 829, 294, 264, 2316, 311, 12391, 11, 291, 2464, 484, 264, 21577, 300, 311, 17173, 294, 3344, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1405719047368959, "compression_ratio": 1.6591928251121075, "no_speech_prob": 0.011327202431857586}, {"id": 506, "seek": 265828, "start": 2665.28, "end": 2678.28, "text": " So rather than just directly answering Roger's five tennis policy buys two more, each can has three, how many does have now, instead of just directly writing 11, you write out a, like, little trace of reasoning of how you would get there, you show your work.", "tokens": [50714, 407, 2831, 813, 445, 3838, 13430, 17666, 311, 1732, 18118, 3897, 28153, 732, 544, 11, 1184, 393, 575, 1045, 11, 577, 867, 775, 362, 586, 11, 2602, 295, 445, 3838, 3579, 2975, 11, 291, 2464, 484, 257, 11, 411, 11, 707, 13508, 295, 21577, 295, 577, 291, 576, 483, 456, 11, 291, 855, 428, 589, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1405719047368959, "compression_ratio": 1.6591928251121075, "no_speech_prob": 0.011327202431857586}, {"id": 507, "seek": 267828, "start": 2679.28, "end": 2693.28, "text": " And so by putting this in the prompt, you're not teaching the model to reason here to be clear. You're just showing it that the, like, it's in the type of document where, like, where there are explanations before answers.", "tokens": [50414, 400, 370, 538, 3372, 341, 294, 264, 12391, 11, 291, 434, 406, 4571, 264, 2316, 281, 1778, 510, 281, 312, 1850, 13, 509, 434, 445, 4099, 309, 300, 264, 11, 411, 11, 309, 311, 294, 264, 2010, 295, 4166, 689, 11, 411, 11, 689, 456, 366, 28708, 949, 6338, 13, 51114], "temperature": 0.0, "avg_logprob": -0.06948305731234343, "compression_ratio": 1.7695473251028806, "no_speech_prob": 0.1364901065826416}, {"id": 508, "seek": 267828, "start": 2693.28, "end": 2703.28, "text": " And that causes the model to expend extra computation, sort of generating intermediate thoughts that then make it easier to get the final answer by just looking at the contents of those intermediate thoughts.", "tokens": [51114, 400, 300, 7700, 264, 2316, 281, 24439, 2857, 24903, 11, 1333, 295, 17746, 19376, 4598, 300, 550, 652, 309, 3571, 281, 483, 264, 2572, 1867, 538, 445, 1237, 412, 264, 15768, 295, 729, 19376, 4598, 13, 51614], "temperature": 0.0, "avg_logprob": -0.06948305731234343, "compression_ratio": 1.7695473251028806, "no_speech_prob": 0.1364901065826416}, {"id": 509, "seek": 270328, "start": 2703.28, "end": 2712.28, "text": " And so this, like, works pretty well. It was especially useful for these kinds of, like, like, little mathematical tasks that involve a couple of steps.", "tokens": [50364, 400, 370, 341, 11, 411, 11, 1985, 1238, 731, 13, 467, 390, 2318, 4420, 337, 613, 3685, 295, 11, 411, 11, 411, 11, 707, 18894, 9608, 300, 9494, 257, 1916, 295, 4439, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07440677122636274, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.0015975607093423605}, {"id": 510, "seek": 270328, "start": 2712.28, "end": 2724.28, "text": " But it was, you know, it wasn't really being done by this few shots training, like, it's not like the model was learning everything about reasoning from, like, three word problems from a third grader homework assignment.", "tokens": [50814, 583, 309, 390, 11, 291, 458, 11, 309, 2067, 380, 534, 885, 1096, 538, 341, 1326, 8305, 3097, 11, 411, 11, 309, 311, 406, 411, 264, 2316, 390, 2539, 1203, 466, 21577, 490, 11, 411, 11, 1045, 1349, 2740, 490, 257, 2636, 2771, 260, 14578, 15187, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07440677122636274, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.0015975607093423605}, {"id": 511, "seek": 270328, "start": 2724.28, "end": 2728.28, "text": " It's in there already. And so you just need to find a way to get it to come out.", "tokens": [51414, 467, 311, 294, 456, 1217, 13, 400, 370, 291, 445, 643, 281, 915, 257, 636, 281, 483, 309, 281, 808, 484, 13, 51614], "temperature": 0.0, "avg_logprob": -0.07440677122636274, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.0015975607093423605}, {"id": 512, "seek": 272828, "start": 2728.28, "end": 2735.28, "text": " And so the primary, so the follow up paper to this language models are zero thought reason.", "tokens": [50364, 400, 370, 264, 6194, 11, 370, 264, 1524, 493, 3035, 281, 341, 2856, 5245, 366, 4018, 1194, 1778, 13, 50714], "temperature": 0.0, "avg_logprob": -0.20247330385095932, "compression_ratio": 1.5268817204301075, "no_speech_prob": 0.0019264000002294779}, {"id": 513, "seek": 272828, "start": 2735.28, "end": 2748.28, "text": " There's just adds, let's think step by step to the end of the answer. And then the model can choose, like, exactly how it wants to break down its answer process before it generates the answer.", "tokens": [50714, 821, 311, 445, 10860, 11, 718, 311, 519, 1823, 538, 1823, 281, 264, 917, 295, 264, 1867, 13, 400, 550, 264, 2316, 393, 2826, 11, 411, 11, 2293, 577, 309, 2738, 281, 1821, 760, 1080, 1867, 1399, 949, 309, 23815, 264, 1867, 13, 51364], "temperature": 0.0, "avg_logprob": -0.20247330385095932, "compression_ratio": 1.5268817204301075, "no_speech_prob": 0.0019264000002294779}, {"id": 514, "seek": 274828, "start": 2749.28, "end": 2756.28, "text": " And so, like, clearly this capability is, like, already there in the model and we're just, like, eliciting it by careful tuning of our product.", "tokens": [50414, 400, 370, 11, 411, 11, 4448, 341, 13759, 307, 11, 411, 11, 1217, 456, 294, 264, 2316, 293, 321, 434, 445, 11, 411, 11, 806, 299, 1748, 309, 538, 5026, 15164, 295, 527, 1674, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14064453616000638, "compression_ratio": 1.6782608695652175, "no_speech_prob": 0.059177737683057785}, {"id": 515, "seek": 274828, "start": 2756.28, "end": 2762.28, "text": " And this let's think step by step thing works, like, very broadly, very similar phrases also work.", "tokens": [50764, 400, 341, 718, 311, 519, 1823, 538, 1823, 551, 1985, 11, 411, 11, 588, 19511, 11, 588, 2531, 20312, 611, 589, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14064453616000638, "compression_ratio": 1.6782608695652175, "no_speech_prob": 0.059177737683057785}, {"id": 516, "seek": 274828, "start": 2762.28, "end": 2770.28, "text": " Let's think step by step to be sure we get the correct answer. It's a tiny little improvement.", "tokens": [51064, 961, 311, 519, 1823, 538, 1823, 281, 312, 988, 321, 483, 264, 3006, 1867, 13, 467, 311, 257, 5870, 707, 10444, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14064453616000638, "compression_ratio": 1.6782608695652175, "no_speech_prob": 0.059177737683057785}, {"id": 517, "seek": 274828, "start": 2770.28, "end": 2776.28, "text": " Yeah. I think that was everything I had on that.", "tokens": [51464, 865, 13, 286, 519, 300, 390, 1203, 286, 632, 322, 300, 13, 51764], "temperature": 0.0, "avg_logprob": -0.14064453616000638, "compression_ratio": 1.6782608695652175, "no_speech_prob": 0.059177737683057785}, {"id": 518, "seek": 277628, "start": 2777.28, "end": 2790.28, "text": " So then, and then the last thing that you can do, in addition to doing this, like, like, rolling out and having the model think through its solution step by step, you can also just ask the model to, like, check its work.", "tokens": [50414, 407, 550, 11, 293, 550, 264, 1036, 551, 300, 291, 393, 360, 11, 294, 4500, 281, 884, 341, 11, 411, 11, 411, 11, 9439, 484, 293, 1419, 264, 2316, 519, 807, 1080, 3827, 1823, 538, 1823, 11, 291, 393, 611, 445, 1029, 264, 2316, 281, 11, 411, 11, 1520, 1080, 589, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11206535228247781, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.00013980666699353606}, {"id": 519, "seek": 277628, "start": 2790.28, "end": 2801.28, "text": " So this is like a two stage prompting thing. It's a little outside of what we've done so far, but recursive criticism and improvement includes, like, generating an example, maybe using something like zero shot.", "tokens": [51064, 407, 341, 307, 411, 257, 732, 3233, 12391, 278, 551, 13, 467, 311, 257, 707, 2380, 295, 437, 321, 600, 1096, 370, 1400, 11, 457, 20560, 488, 15835, 293, 10444, 5974, 11, 411, 11, 17746, 364, 1365, 11, 1310, 1228, 746, 411, 4018, 3347, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11206535228247781, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.00013980666699353606}, {"id": 520, "seek": 280128, "start": 2802.28, "end": 2812.28, "text": " Let's think step by step. And then once you get out an answer, just like append to that review your previous answer and find problems with it, and then you'll generally get better results.", "tokens": [50414, 961, 311, 519, 1823, 538, 1823, 13, 400, 550, 1564, 291, 483, 484, 364, 1867, 11, 445, 411, 34116, 281, 300, 3131, 428, 3894, 1867, 293, 915, 2740, 365, 309, 11, 293, 550, 291, 603, 5101, 483, 1101, 3542, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09943133050745184, "compression_ratio": 1.7174887892376682, "no_speech_prob": 0.004608616698533297}, {"id": 521, "seek": 280128, "start": 2812.28, "end": 2823.28, "text": " So I think most of this is done with the sort of instruction tuned models that are really good at picking up on things you're asking for, like, you're asking it to find problems with the answer.", "tokens": [50914, 407, 286, 519, 881, 295, 341, 307, 1096, 365, 264, 1333, 295, 10951, 10870, 5245, 300, 366, 534, 665, 412, 8867, 493, 322, 721, 291, 434, 3365, 337, 11, 411, 11, 291, 434, 3365, 309, 281, 915, 2740, 365, 264, 1867, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09943133050745184, "compression_ratio": 1.7174887892376682, "no_speech_prob": 0.004608616698533297}, {"id": 522, "seek": 282328, "start": 2824.28, "end": 2834.28, "text": " But yeah, this is, this is a very, like, using the models to, like, fix their outputs is also a powerful, like, prompting pattern.", "tokens": [50414, 583, 1338, 11, 341, 307, 11, 341, 307, 257, 588, 11, 411, 11, 1228, 264, 5245, 281, 11, 411, 11, 3191, 641, 23930, 307, 611, 257, 4005, 11, 411, 11, 12391, 278, 5102, 13, 50914], "temperature": 0.0, "avg_logprob": -0.14165597938629518, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.006095511838793755}, {"id": 523, "seek": 282328, "start": 2834.28, "end": 2848.28, "text": " Then sort of orthogonally to all of this, you can also, like, ensemble the results of multiple models. This is a statistical Cisco model to probabilistic program. It generates different outputs on different runs.", "tokens": [50914, 1396, 1333, 295, 38130, 266, 379, 281, 439, 295, 341, 11, 291, 393, 611, 11, 411, 11, 19492, 264, 3542, 295, 3866, 5245, 13, 639, 307, 257, 22820, 38528, 2316, 281, 31959, 3142, 1461, 13, 467, 23815, 819, 23930, 322, 819, 6676, 13, 51614], "temperature": 0.0, "avg_logprob": -0.14165597938629518, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.006095511838793755}, {"id": 524, "seek": 284828, "start": 2848.28, "end": 2857.28, "text": " And so why not just generate, like, 50 different outputs? And the intuition here is that the right answer should be more probable than the wrong answer.", "tokens": [50364, 400, 370, 983, 406, 445, 8460, 11, 411, 11, 2625, 819, 23930, 30, 400, 264, 24002, 510, 307, 300, 264, 558, 1867, 820, 312, 544, 21759, 813, 264, 2085, 1867, 13, 50814], "temperature": 0.0, "avg_logprob": -0.057807238896687825, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.004197766073048115}, {"id": 525, "seek": 284828, "start": 2857.28, "end": 2865.28, "text": " And there are, like, maybe many ways of getting to many different wrong answers, but only a few ways of getting to the one right answer.", "tokens": [50814, 400, 456, 366, 11, 411, 11, 1310, 867, 2098, 295, 1242, 281, 867, 819, 2085, 6338, 11, 457, 787, 257, 1326, 2098, 295, 1242, 281, 264, 472, 558, 1867, 13, 51214], "temperature": 0.0, "avg_logprob": -0.057807238896687825, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.004197766073048115}, {"id": 526, "seek": 284828, "start": 2865.28, "end": 2869.28, "text": " So if that's the type of problem that you have, ensembling is likely to work well.", "tokens": [51214, 407, 498, 300, 311, 264, 2010, 295, 1154, 300, 291, 362, 11, 12567, 2504, 1688, 307, 3700, 281, 589, 731, 13, 51414], "temperature": 0.0, "avg_logprob": -0.057807238896687825, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.004197766073048115}, {"id": 527, "seek": 286928, "start": 2869.28, "end": 2878.28, "text": " So you take all of the models, like, you take the outputs, like, 50 different responses to the same question, and then you do, like, majority voting.", "tokens": [50364, 407, 291, 747, 439, 295, 264, 5245, 11, 411, 11, 291, 747, 264, 23930, 11, 411, 11, 2625, 819, 13019, 281, 264, 912, 1168, 11, 293, 550, 291, 360, 11, 411, 11, 6286, 10419, 13, 50814], "temperature": 0.0, "avg_logprob": -0.06252007257370722, "compression_ratio": 1.6782178217821782, "no_speech_prob": 0.031131686642766}, {"id": 528, "seek": 286928, "start": 2878.28, "end": 2889.28, "text": " And so you can just, as you increase the number of generations, the number of members of the ensemble, you find that the quality increases.", "tokens": [50814, 400, 370, 291, 393, 445, 11, 382, 291, 3488, 264, 1230, 295, 10593, 11, 264, 1230, 295, 2679, 295, 264, 19492, 11, 291, 915, 300, 264, 3125, 8637, 13, 51364], "temperature": 0.0, "avg_logprob": -0.06252007257370722, "compression_ratio": 1.6782178217821782, "no_speech_prob": 0.031131686642766}, {"id": 529, "seek": 286928, "start": 2889.28, "end": 2893.28, "text": " So that's this blue line going up into the right.", "tokens": [51364, 407, 300, 311, 341, 3344, 1622, 516, 493, 666, 264, 558, 13, 51564], "temperature": 0.0, "avg_logprob": -0.06252007257370722, "compression_ratio": 1.6782178217821782, "no_speech_prob": 0.031131686642766}, {"id": 530, "seek": 289328, "start": 2893.28, "end": 2901.28, "text": " One tip coming off after this original self-consistency paper is to, like, just inject randomness for greater heterogeneity.", "tokens": [50364, 1485, 4125, 1348, 766, 934, 341, 3380, 2698, 12, 21190, 468, 3020, 3035, 307, 281, 11, 411, 11, 445, 10711, 4974, 1287, 337, 5044, 20789, 23360, 507, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09652020671580097, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.00460788793861866}, {"id": 531, "seek": 289328, "start": 2901.28, "end": 2908.28, "text": " Just, like, re-phase the prompt a little bit, like, even just, like, string operations, like, lowercase, uppercase, that will, like, slightly change the model's behavior.", "tokens": [50764, 1449, 11, 411, 11, 319, 12, 43331, 264, 12391, 257, 707, 857, 11, 411, 11, 754, 445, 11, 411, 11, 6798, 7705, 11, 411, 11, 3126, 9765, 11, 11775, 2869, 651, 11, 300, 486, 11, 411, 11, 4748, 1319, 264, 2316, 311, 5223, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09652020671580097, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.00460788793861866}, {"id": 532, "seek": 289328, "start": 2908.28, "end": 2916.28, "text": " And in general, it should keep the correct answer the same, but change the wrong answers a lot.", "tokens": [51114, 400, 294, 2674, 11, 309, 820, 1066, 264, 3006, 1867, 264, 912, 11, 457, 1319, 264, 2085, 6338, 257, 688, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09652020671580097, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.00460788793861866}, {"id": 533, "seek": 291628, "start": 2916.28, "end": 2919.28, "text": " And then you can compose all of these tricks that we've talked about so far.", "tokens": [50364, 400, 550, 291, 393, 35925, 439, 295, 613, 11733, 300, 321, 600, 2825, 466, 370, 1400, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1063421363504524, "compression_ratio": 1.8682170542635659, "no_speech_prob": 0.5346035361289978}, {"id": 534, "seek": 291628, "start": 2919.28, "end": 2928.28, "text": " So you can do few-shot examples that include let's think step-by-step, and then you can ensemble them together, and, like, you can put all of this together, and that will generally increase your performance.", "tokens": [50514, 407, 291, 393, 360, 1326, 12, 18402, 5110, 300, 4090, 718, 311, 519, 1823, 12, 2322, 12, 16792, 11, 293, 550, 291, 393, 19492, 552, 1214, 11, 293, 11, 411, 11, 291, 393, 829, 439, 295, 341, 1214, 11, 293, 300, 486, 5101, 3488, 428, 3389, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1063421363504524, "compression_ratio": 1.8682170542635659, "no_speech_prob": 0.5346035361289978}, {"id": 535, "seek": 291628, "start": 2928.28, "end": 2942.28, "text": " And, like, just as, like, one key example, the combination of few-shot chain of thought and let's think step-by-step matches average human performance on this pretty hard benchmark, big bench hard,", "tokens": [50964, 400, 11, 411, 11, 445, 382, 11, 411, 11, 472, 2141, 1365, 11, 264, 6562, 295, 1326, 12, 18402, 5021, 295, 1194, 293, 718, 311, 519, 1823, 12, 2322, 12, 16792, 10676, 4274, 1952, 3389, 322, 341, 1238, 1152, 18927, 11, 955, 10638, 1152, 11, 51664], "temperature": 0.0, "avg_logprob": -0.1063421363504524, "compression_ratio": 1.8682170542635659, "no_speech_prob": 0.5346035361289978}, {"id": 536, "seek": 294228, "start": 2943.28, "end": 2958.28, "text": " has, like, a lot of difficult problems. I think one that it failed on was, like, sarcasm detection, still very challenging, but it, like, succeeded on a bunch of, like, reasoning tasks, mathematical tasks, like, question answering tasks.", "tokens": [50414, 575, 11, 411, 11, 257, 688, 295, 2252, 2740, 13, 286, 519, 472, 300, 309, 7612, 322, 390, 11, 411, 11, 36836, 14774, 17784, 11, 920, 588, 7595, 11, 457, 309, 11, 411, 11, 20263, 322, 257, 3840, 295, 11, 411, 11, 21577, 9608, 11, 18894, 9608, 11, 411, 11, 1168, 13430, 9608, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10836110463956507, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.05659911409020424}, {"id": 537, "seek": 294228, "start": 2958.28, "end": 2964.28, "text": " So, yeah, that's a great paper for inspiration on what can be done with this combination of tools.", "tokens": [51164, 407, 11, 1338, 11, 300, 311, 257, 869, 3035, 337, 10249, 322, 437, 393, 312, 1096, 365, 341, 6562, 295, 3873, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10836110463956507, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.05659911409020424}, {"id": 538, "seek": 296428, "start": 2964.28, "end": 2972.28, "text": " But each of them has an impact on the costs of what you're doing, so you want to recognize that they can impact both, like, latency and compute.", "tokens": [50364, 583, 1184, 295, 552, 575, 364, 2712, 322, 264, 5497, 295, 437, 291, 434, 884, 11, 370, 291, 528, 281, 5521, 300, 436, 393, 2712, 1293, 11, 411, 11, 27043, 293, 14722, 13, 50764], "temperature": 0.0, "avg_logprob": -0.08419164190901086, "compression_ratio": 1.6695652173913043, "no_speech_prob": 0.08874604851007462}, {"id": 539, "seek": 296428, "start": 2972.28, "end": 2985.28, "text": " So few-shot chain of thought will increase your latency because you're putting more information into the, for the model to run over, and that's, so it's going to take longer to generate, and that's going to cost you more, it's more tokens.", "tokens": [50764, 407, 1326, 12, 18402, 5021, 295, 1194, 486, 3488, 428, 27043, 570, 291, 434, 3372, 544, 1589, 666, 264, 11, 337, 264, 2316, 281, 1190, 670, 11, 293, 300, 311, 11, 370, 309, 311, 516, 281, 747, 2854, 281, 8460, 11, 293, 300, 311, 516, 281, 2063, 291, 544, 11, 309, 311, 544, 22667, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08419164190901086, "compression_ratio": 1.6695652173913043, "no_speech_prob": 0.08874604851007462}, {"id": 540, "seek": 298528, "start": 2986.28, "end": 2996.28, "text": " It's zero-shot chain of thought adds fewer things to the context, so it has less of an impact on latency and compute, so that's why lots of people have adopted it.", "tokens": [50414, 467, 311, 4018, 12, 18402, 5021, 295, 1194, 10860, 13366, 721, 281, 264, 4319, 11, 370, 309, 575, 1570, 295, 364, 2712, 322, 27043, 293, 14722, 11, 370, 300, 311, 983, 3195, 295, 561, 362, 12175, 309, 13, 50914], "temperature": 0.0, "avg_logprob": -0.06620416970088563, "compression_ratio": 1.608294930875576, "no_speech_prob": 0.08266188949346542}, {"id": 541, "seek": 298528, "start": 2996.28, "end": 3007.28, "text": " Like, decomposing into subproblems is going to, like, generally increase the length of it. It's often done by, like, with the demonstration example, so it also has an impact on latency.", "tokens": [50914, 1743, 11, 22867, 6110, 666, 1422, 47419, 82, 307, 516, 281, 11, 411, 11, 5101, 3488, 264, 4641, 295, 309, 13, 467, 311, 2049, 1096, 538, 11, 411, 11, 365, 264, 16520, 1365, 11, 370, 309, 611, 575, 364, 2712, 322, 27043, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06620416970088563, "compression_ratio": 1.608294930875576, "no_speech_prob": 0.08266188949346542}, {"id": 542, "seek": 300728, "start": 3007.28, "end": 3021.28, "text": " Ensembling is very cool because that has no impact on latency in principle, like, you can run all of your requests in parallel, but, like, for every parallel request you run with an API service, like, that just increases your compute costs.", "tokens": [50364, 2193, 15750, 1688, 307, 588, 1627, 570, 300, 575, 572, 2712, 322, 27043, 294, 8665, 11, 411, 11, 291, 393, 1190, 439, 295, 428, 12475, 294, 8952, 11, 457, 11, 411, 11, 337, 633, 8952, 5308, 291, 1190, 365, 364, 9362, 2643, 11, 411, 11, 300, 445, 8637, 428, 14722, 5497, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07546382172163142, "compression_ratio": 1.6742081447963801, "no_speech_prob": 0.02675296738743782}, {"id": 543, "seek": 300728, "start": 3021.28, "end": 3029.28, "text": " It's a little more subtle for if you're running the compute yourself, but it is generally going to, like, linearly scale compute.", "tokens": [51064, 467, 311, 257, 707, 544, 13743, 337, 498, 291, 434, 2614, 264, 14722, 1803, 11, 457, 309, 307, 5101, 516, 281, 11, 411, 11, 43586, 4373, 14722, 13, 51464], "temperature": 0.0, "avg_logprob": -0.07546382172163142, "compression_ratio": 1.6742081447963801, "no_speech_prob": 0.02675296738743782}, {"id": 544, "seek": 302928, "start": 3029.28, "end": 3041.28, "text": " Self-criticism is going to massively increase the latency because you're going to, like, ask the model to, like, fix its answer, maybe multiple times, but it doesn't necessarily, like, increase the compute costs as much as something like that.", "tokens": [50364, 16348, 12, 32255, 26356, 307, 516, 281, 29379, 3488, 264, 27043, 570, 291, 434, 516, 281, 11, 411, 11, 1029, 264, 2316, 281, 11, 411, 11, 3191, 1080, 1867, 11, 1310, 3866, 1413, 11, 457, 309, 1177, 380, 4725, 11, 411, 11, 3488, 264, 14722, 5497, 382, 709, 382, 746, 411, 300, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11979776270249311, "compression_ratio": 1.6777408637873754, "no_speech_prob": 0.005909488536417484}, {"id": 545, "seek": 302928, "start": 3042.28, "end": 3055.28, "text": " Okay, so I've hit two clock, and so I'm going to skip my example with theory of mind that just demonstrates how to, like, combine those together. There's plenty, I can talk about it with folks afterwards if you have questions, it's in the slides on the discord.", "tokens": [51014, 1033, 11, 370, 286, 600, 2045, 732, 7830, 11, 293, 370, 286, 478, 516, 281, 10023, 452, 1365, 365, 5261, 295, 1575, 300, 445, 31034, 577, 281, 11, 411, 11, 10432, 729, 1214, 13, 821, 311, 7140, 11, 286, 393, 751, 466, 309, 365, 4024, 10543, 498, 291, 362, 1651, 11, 309, 311, 294, 264, 9788, 322, 264, 32989, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11979776270249311, "compression_ratio": 1.6777408637873754, "no_speech_prob": 0.005909488536417484}, {"id": 546, "seek": 305528, "start": 3055.28, "end": 3073.28, "text": " So yeah, core takeaway there. There's a playbook for prompt engineering. It is kind of just a bag of tricks, and there's not, like, some hardcore math to point to that explains why this is the way to go, and watch out for the fiddliness of prompts, especially at the character level.", "tokens": [50414, 407, 1338, 11, 4965, 30681, 456, 13, 821, 311, 257, 862, 2939, 337, 12391, 7043, 13, 467, 307, 733, 295, 445, 257, 3411, 295, 11733, 11, 293, 456, 311, 406, 11, 411, 11, 512, 28196, 5221, 281, 935, 281, 300, 13948, 983, 341, 307, 264, 636, 281, 352, 11, 293, 1159, 484, 337, 264, 283, 14273, 32268, 295, 41095, 11, 2318, 412, 264, 2517, 1496, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11373594532842221, "compression_ratio": 1.4894736842105263, "no_speech_prob": 0.047300662845373154}, {"id": 547, "seek": 308528, "start": 3085.28, "end": 3091.28, "text": " Thanks for watching.", "tokens": [50364, 2561, 337, 1976, 13, 50664], "temperature": 0.0, "avg_logprob": -0.8218081338065011, "compression_ratio": 0.7142857142857143, "no_speech_prob": 0.9729456305503845}], "language": "en"}