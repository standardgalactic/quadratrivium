start	end	text
0	5120	I think we're ready to begin um you saw me look at the camera used to be over
5120	11240	there now you're over here okay so I ran a poll 17 hours ago I asked if y'all
11240	17600	wanted me to do a video on the EU AI Act man god names gotta get better with
17600	23320	names I'm good with acronyms come to me for acronyms Gato Gaia ages okay anyways
23320	27520	so y'all were confused about what I meant by Haas which is something from
27520	32440	here in the south basically Haas means just something big right it's short it's
32440	40120	a southern dialect for horse or in particular a big horse so this document
40120	46760	is a Haas because look how freaking long it is it just keeps going so I plugged
46760	55720	it in over here and it is 70,000 tokens long so even if I had access to GPT-432
55720	59400	K which I did briefly and then they revoked it I think they got overwhelmed
59400	65320	because I used it I tried to use GPT-432 K on a couple things and it was just
65320	69880	like server is overloaded servers over anyways so hopefully I get that back but
69880	73520	the idea what there would be I could read it and you know chop it up into maybe
73520	77920	four sections three or four sections and read the whole thing but we don't have
77920	85040	that and I do have GPT-3.5 turbo 16k 0613 so this model is actually super
85320	93080	steerable it is actually better than original GPT-4 add a lot of things it's
93080	96800	still kind of dumb especially if the instructions are too complex but as long
96800	106600	as you give it just one task GPT-3.3.5 turbo 0613 the June 13th model is more
106600	110720	than adequate for most things now that being said because I'm interpreting
111040	118400	and I'm doing summarization I'm gonna use 04613 so the instructions that I gave
118400	123600	it just now and I know that I'm ready to start the video primary purpose zoom in
123600	128640	a little bit the primary purpose or the following is a chunk of legislation your
128640	134720	job is to summarize this legislation with two primary goals one drastically
134720	137920	reduce the word count and two retain enough context that it will still make
138000	141600	sense the reason for this is the current AI technology can only read chunks that
141600	145600	are so big method the user will give you a chunk of legislation via chat your
145600	148960	response must only be the summarized version do not chat with the user engage
148960	153480	with them or offer any other commentary summarize only so I copied the first
153480	161320	hundred lines of the legislation in you here and this is what it spit out so it
161320	165800	took all that and just said okay this is what it means so the first hundred
165800	174760	lines which you can see here so we've got 344,000 characters 3665 lines of
174760	178720	stuff to go through I'm not going to read the whole thing I'm not AI explained
179720	183760	that dude just like you all are impressed with how much work I can do I'm
183760	187760	impressed with how much that dude can read just honestly I'm maybe he uses
187760	195280	chat GPT I don't know anyways if you're watching it's just a joke okay so
195280	203480	anyways so ultimately basically that that first hundred lines was summarized
203480	207240	and condensed down to the European Commission proposes a regulation for
207240	210760	harmonized rules on artificial intelligence aiming to balance the
210760	215600	socioeconomic benefits of AI with potential risks the proposal seeks to
215600	219520	ensure AI systems are safe respect fundamental rights provide legal
219520	223680	certainty for investment and innovation enhance governance and prevent market
223680	228640	fragmentation so it has says nothing about existential risks or prevent AI
228640	232360	from killing everyone it's sort of implicit because like if AI kills
232360	235840	everyone you can't have investment in innovation but I would rather see
235840	240560	legislation that is explicit it proposes a risk-based approach prohibiting
240560	244800	certain harmful AI practices and setting requirements for high-risk AI systems
244800	249960	okay cool we'll see how they define that later the proposal also establishes a
249960	253520	governance system at member state level and a European artificial intelligence
253520	256760	board at union level okay cool so this is this is going to be an
256760	261080	international regulator great it is consistent with existing union
261080	264680	legislation and policies including data protection consumer protection
264680	268760	non-discrimination and gender equality so these are all very low-level risks
268760	273080	none of this is actually talking like when they say high risk they're probably
273080	278080	meaning like the social credit system that is used in China which that is a
278080	283080	high risk but it is not the highest risk the proposal is based on article 114 of
283120	288040	the Treaty of the Functioning of the European Union Union the TFEU which
288040	291880	ensures the establishment and functioning of the internal market okay so this is
291880	296000	mostly a market-oriented piece of legislation great so we know that this
296000	299480	works so let's go ahead and save this out I'm gonna walk you through the whole
299480	304680	process and then I'll yeah so this is this is how this is how we're gonna
304680	308240	proceed for those of you that are newer to my channel this is actually the
308240	311440	original format that I used where I would where I would walk you through the
311440	317080	entire process so just watch that on 2x and you'll see the whole process of how
317080	324600	I approach these things so we'll call this system summarize yes dot text and so
324600	328360	basically I give it a system a system message up with very very clear
328360	333240	instructions and and what I expect and and what it should expect and then it
333240	339920	gives you very clear consistent results so then we come over to do to do to do
339920	345320	to do step one simplify so this is I'm just re I'm borrowing code which I
345320	353920	always do so we've got this so this is what we're gonna use to do that this is
353920	357400	this is this is a KB service that I'm working on so I'll show you that in an
357400	366240	upcoming video but you don't get to see that yet we don't need KB functions so
366240	371120	delete that flask routes we're not gonna do a flask app so that's also fine
371120	375680	actually I guess I just delete most of it okay cool so we get rid of flask
375680	379040	cuz we're not gonna do that we're not gonna do threading we're not gonna we
379040	387800	don't need flask or logging or JSON or YAML okay clean it up I probably should
387800	391320	have done that before I started the video but it's good to it's good for you
391320	395600	to see how messy my process is I am the first person to tell you I am not a
395640	400120	professional developer I never was my professional background was I was in
400120	404000	virtualization and automation so I'm an automation engineer which is why I
404000	408960	approach things the way that I do which is creating discrete steps so you notice
408960	414400	the thought the title of this is step one simplify okay cool so basically what
414400	421760	we're gonna do is we're going to ask this handy dandy coding chatbot that I
421800	431440	built which you can use this it is available over here I had a bunch of
431440	438840	people submitting pull requests and they kept trying to like change the way that
438840	442880	this thing works so I just said it to public archive so here's the thing is I
442880	449320	welcome pull requests that are like simple fixes or small improvements don't
449320	453440	refactor my code just fork it right like there's 19 forks if you want to if you
453440	457600	want to fundamentally change how it works fine but I got tired of people
457600	461480	messing up my code so I just said it to public archive and guess what like
461480	464880	people you can still do whatever you want with it anyways so we're gonna use
464880	470320	this as a co-pilot tool because I got frustrated with GitHub because they're
470320	477440	co-pilot customer service whatever documentation is garbage okay let's see
477440	485680	I have here let's just write a function that accepts a gigantic string and
485680	496280	returns now let's see and let's see splits it by lines and then chunks 100
496280	512000	lines together and returns those chunks as strings so the final result will be a
512000	523880	list of strings each string represents 100 lines of the original okay so this
523880	530960	is this is my coding chatbot assistant that it uses it also uses GPT for you I
530960	538120	tried it you can actually switch it to oh it's using the old one hold on now I
538120	544560	need to update that hold on hold on that's the wrong model coding chatbot
544560	547880	assistant see this is what I mean is someone someone updated it oh no my
547880	552040	local one uses the right one so someone updated it with the wrong model and made
552040	555640	a bunch of other assumptions and I was just like no this is not this is not
555640	562760	what I wanted okay so here we go here's the function Python chunk strings line
562760	571320	lines equals split oh wow I did it in two lines cool this functions first splits
571320	580520	the string into lines using the delimiter then it uses a list comprehension
580520	585320	to create chunks of 100 lines each the range yep the result is a list of strings
585320	591280	cool excellent excellent excellent so I'm gonna go ahead and copy this out oh and
591280	596680	another good thing is that uh like well yeah you see how it works all right so
596680	605600	we'll go ahead and do that so chunk strings so first we want to just act
605680	616760	equals open file and I've got it named as act text just right here yep oh and
616760	623320	also this excuse me this this uses a scratch pad so what I can do is I can
623320	630840	actually populate the code that I'm working on over here so now it's aware
630840	635520	of what I'm working on so this scratch pad is a holdout so rather than giving it
635520	643600	the code in sequence the the coding chatbot actually has a it has here let me
643600	646840	show you the system message so here's the instructions your Python coding
646840	651000	assistant you know me turn on word wrap your Python coding assistant etc etc
651000	656040	scratch pad so basically tells you the scratch pad is usable you know so that
656040	659560	you know what the user is working on so that you can talk about this and this is
659560	665360	passed to the chatbot every time so whatever the conversation is like that
665360	670240	that is in the past I don't know if I'm explaining that well anyways point being
670240	674000	is that it see it can see the code that you're working on as long as you keep
674000	683560	this updated okay so that's the first hundred lines let's go ahead and see
683560	689120	where did it go step one simplify cool so act equals that and then we'll say
689160	697400	chunks equals see chunk string chunk string act all right so that this
697400	704600	basically creates the chunks that we're gonna be working on and that is that
704600	710680	let's see I'm gonna need to watch this because mmm well here let me just show
710680	717560	you something real quick so the first hundred lines if we take that over to
717840	723720	playground and paste it in here you see that a hundred lines is about 4,000
723720	729920	tokens so that would obviously be too big for text of inchio 3 but with with
729920	737320	GPT-4 we have 8,000 tokens and then with 3.5 16k we have 16,000 tokens so we
737320	743360	could actually probably do more but the thing is is that again 3.5 turbo is
743360	748440	actually you know it let's try it real quick heck with it heck with it while
748440	756080	we're here let's go back over to chat let's give it this chunk because if it
756080	762360	can if I can do it faster and cheaper why not why not and then we need this is
762360	769600	our system message we need to make sure that we're gonna use 3.5 turbo 16k so
769600	773920	that it's got enough space okay turn the temperature down we do not want you to
773920	779000	be creative thank you very much all right and then let's see how well it
779000	786160	summarizes it yeah so it's not this summarization is not nearly as elegant
786160	795520	or as concise but just glancing at it it's okay I think I'm gonna stick with
795800	801280	four but I'm glad I did this side-by-side so the the the GPT-4 it's a much more
801280	805880	elegant summary and it's also less worthy even though so it's not quite as
805880	810080	fast and it's not quite as cheap because we need to capture the essence of
810080	814640	something that's really important let's use the smarter model now that being
814640	821400	said again 3.5 turbo the the June 13th one plenty plenty good for a lot of
821400	828320	things okay cool so I'm glad I ran that test where are we what am I doing I don't
828320	834480	know I'm lost I'm always lost there's this meme it's like a pug in a field
834480	839720	with a wizard hat and it says that the meme is like not all who wander are
839720	845160	lost except Dave Dave is lost as fuck and that's me I'm the pug with a wizard
845160	850000	hat does that make any sense I need more coffee
851440	854640	okay all right I hope you find this entertaining because I just woke up and
854640	859540	I was like my brain's like hey we should work on this all right now we're back
859540	863400	here all right we've got our chunks so now what we need to do so this is this
863400	870760	is where it gets fun so four chunk in chunks this is super straightforward
870800	883920	let's see messages equals this is gonna be a list and then the role will be
883920	894200	user and the content wow I know how to type I promise it's just getting it from
894200	898640	my head to the to the hands on the keyboard to the screen that's too many
898680	905120	steps right now content equals chunk okay cool so basically what we're doing
905120	910640	right here is we're setting it up to look exactly like this so I'm putting
910640	914480	the chunk in here and then we also need to load the system message so what we're
914480	920840	gonna do is we're gonna do system equals open file system underscore
920840	927320	summarize so this is this is the instructions dot text so system message
927360	938360	is the new prompt engineering all right cool so then we'll do role system and
938360	946600	content is system all right so now we're ready to pass it up to our model right
946600	953880	here so then we'll just do response equals chatbot messages ta-da is that
953880	960360	simple so it's ready and so this response is going to be the summary and so
960360	964360	now I need to figure out how I want to save this save these summaries out in a
964360	977640	way that makes sense let's see let me ask my chatbot assistant okay cool great
977640	986800	now I want to pass a list of strings to a function and have that function save
986800	996440	them to a specified folder as a parameter and I want it to serialize
996800	1011080	those files like so so it'll be like file 001 dot text file 0002 dot text and so
1011080	1022760	on let's see you should see the script I'm working on all right cool so then
1022800	1029840	we're gonna we're gonna have summaries equals list and then summaries dot
1029840	1035720	append response so now basically we're gonna have the summaries all in order
1035720	1040120	and what I'm gonna do is I'm gonna copy and paste this into my scratch pad so
1040120	1044040	that the chatbot knows what I'm working on and I'll show you how that it says oh
1044040	1048800	okay cool I probably should have told it that I'm gonna do that with the summaries
1048960	1053760	it's usually pretty good at making the inference okay cool let's see def save
1053760	1060240	strings if os path exists or if it doesn't exist make it otherwise enumerate
1060240	1064720	strings so as long as I've been using Python I'm not entirely sure how
1064720	1072520	enumerate works maybe I should ask all right but let's go over here let's go
1072520	1087520	back to my script save strings cool file I05 interesting yes see I'm not even
1087520	1094120	sure how that works fantastic let's see if it let's see if it works though the
1094120	1098400	function first checks that the specified folder exists excellent then it uses it
1098400	1102480	to make it then then iterates over the list of strings using enumerate which
1102480	1106920	provides both the index and the value okay so that's what enumerate does the
1106920	1112480	index is used to generate the file name with I colon O5 in the f string
1112480	1119520	ensuring that the index is zero padded to five digits well that was easy cool
1119520	1128480	right and then it uses the right method yeah so instead I want I was hoping it
1128480	1136360	would use my save file but that's fine so let's go to here and we're gonna do
1136360	1145280	summaries and so instead we're going to assume that that is already there and
1145280	1164640	then we are going to do file path equals I was path join folder yeah that works
1164640	1181320	and then we are going to do save file because this so my save file function
1181320	1186800	encodes it in UTF-8 so just reuse something rather than do it here because
1186800	1190240	you see this doesn't do it in UTF-8 you want to make sure that you have a nice
1190280	1196000	standardized thing that's what I'm doing here file path and s so that should be
1196000	1204760	good fine all right so save strings so then we do save strings we'll do
1204760	1215360	summaries no I need to do yes summaries and then summaries that should work now
1215360	1223640	that being said I want to print the response as I get them there we go and
1223640	1234920	then response all right let's give this a whirl and see if it works CD what is this
1234920	1247000	EU AI act zoom in a little bit Python step 01 this will probably take a while
1247000	1257200	because we've got 3,000 line 3300 lines there we go cool hmm hold on oh right
1257200	1263480	right right I forgot about this okay so this is an important thing what I started
1263480	1268720	doing and I forgot to integrate this so what I started doing is I when I whenever
1268720	1273240	I call the chatbot I return the text and the token use so because this is
1273240	1276760	actually really helpful if you just go ahead and return the tokens so that you
1276760	1282400	know when to summarize it so instead what I need to do is response tokens
1282400	1288880	because I don't need to save I don't need to save a tuple out here but this
1288880	1297040	otherwise looks good and then what I'm gonna do is I'm gonna go grab something
1297040	1300160	to make the the printout look a little bit better
1300160	1306360	to do to do to do to do reflective journaling tool this one has this one
1306360	1320200	has good pretty output so we're gonna do formatted lines yep so take the formatted
1320200	1335620	lines here and then we'll do print new line new line new line and formatted
1335620	1343080	lines all right so that will that'll make it that'll make it prettier and then
1343080	1350840	we'll also use so this this is this is why I appreciate when people add feedback
1350840	1356080	is we added someone added the halo which is a little like thing that shows that
1356080	1364080	it's thinking so I'm gonna add that real quick as well and the way that you use
1364080	1367920	that is down here
1374040	1377480	and so once once this is running I'll pause the video so you don't have to
1377480	1380960	watch the whole thing so you're actually probably closer to the end if I had to
1380960	1383280	guess
1385760	1401200	oops spinner start so we'll say summarizing next chunk and then spinner stop
1404080	1409320	okay so let's try this make sure it works
1412200	1416560	summarizing next chunk hey look now it gives us some output better user
1416560	1424160	experience it tells me what it's doing text wrap is not defined whoops what do
1424160	1429360	you mean I need to import everything that you use import text wrap try that
1429360	1434120	again third time's a charm all right and if this works then I'll go ahead and
1434120	1437480	pause it and then we'll come back once the whole video is or once the whole
1437480	1445640	thing is done why is it in hold on hold on that's not right why are you giving
1445640	1454880	me this garbage that's not correct oh right I need to print out formatted
1454880	1458320	text my bad
1460880	1467000	don't give me this nonsense because basically what you want to do is you
1467000	1470400	want to have it formatted in such a way there we go see so now we have this nice
1470400	1474560	little block it's easier to read all right cool so this is working we'll watch
1474560	1479240	it just a couple times you see how fast it is the the June 13th update is much
1479280	1487720	much faster let's see excellent excellent excellent so we will I'm gonna pause the
1487720	1496320	video and we'll come back and and take a look at the final result cheers okay and
1496320	1501520	we're back so after running it all here let me just show you what the results
1501520	1509840	were we've got 37 files each with a summary and I wrote a really quick I
1509840	1514320	hacked together a really quick script that merged them all and so the merged
1514320	1521560	result is 34,000 characters long so we reduced it by a factor of 10 to 1 just
1521560	1527640	just shy of 10 to 1 which when you plug that in over here that's 6,000 tokens so
1527680	1532440	we went from from 60,000 or 70,000 tokens I don't remember exactly to 6,000
1532440	1536400	tokens one of the reasons that we had a more drastic reduction reduction of
1536400	1540920	token count is because we removed all the serial numbers and stuff because
1540920	1545400	that's kind of superfluous if you if you remove symbols and stuff like this
1545400	1550240	these are high token things if it's ordinary words like AI and each system
1550240	1556560	these are easy for the model to tokenize so that means what we can do now is we
1556560	1565200	can just take this whole thing and come over to chat and say let's see main
1565200	1578400	purpose here turn it believe that you are a chatbot tasked with discussing the
1578400	1587240	following legislation with the user make sure to well hell but I mean that
1587240	1597320	that's all it is use the legislation summary below to conduct the conversation
1597320	1604920	and that's it and so then we say a legislation summary and we'll copy paste
1604960	1610440	it here and so then we move over to we could do 16k because that'll be that'll
1610440	1614720	be faster actually here let's try that real quick let's try that temperature
1614720	1628040	there okay give me a high level overview of this legislation blah blah blah
1628160	1637480	okay cool we're new after five years how is it funded let's see the funding and
1637480	1640640	implementation of this legislation comes from the multi-annual financial
1640640	1645040	framework blah blah blah the financial impact includes allocation of resources
1645040	1656800	and having watched it go through how many employees will it cost there we go
1656800	1664840	ten full-time equivalent employees all right so we can clear that out just
1664840	1670360	because it ultimately is superfluous so some of the questions let's see will
1670360	1680280	this legislation hamper research and innovation let's see the legislation
1680280	1682920	aims to balance the benefits of AI research and innovation with the need
1682920	1686200	for safety and respect for fundamental rights it includes measures to support
1686240	1690640	innovation such as AI regulatory sandboxes and reducing the regulatory burden
1690640	1694920	on SMEs and startups so the SMEs are going to be subject matter experts like
1694920	1699520	UNI as well as startups the goal is to provide legal certainty and prevent
1699520	1704000	market fragmentation which can actually foster innovation by creating a level
1704000	1707680	playing field for AI developers however it imposes certain requirements and
1707680	1717840	obligations on high-risk AI how does this legislation define high-risk AI
1719560	1725120	let's see this legislation categorizes AI systems into three risk levels
1725120	1729840	unacceptable high and low or minimal high-risk AI is based on their intended
1729840	1734040	purpose and usage while the specific criteria may vary high-risk AI generally
1734040	1737360	include those use the safety components of products covered by union
1737360	1741080	harmonization legislation as well as AI used in critical infrastructure
1741080	1744360	management education vocational training employment and workers
1744360	1750160	management these high-risk AI systems are subject to requirements what are
1750160	1757880	unacceptable types the legislation prohibits certain AI practices that are
1757880	1761480	considered unacceptable due to their potential to violate fundamental rights
1761480	1766800	while the specific types may vary some examples include manipulate human
1766800	1769960	behavior exploit vulnerabilities or enable social scoring by public
1769960	1774880	authorities right so as I mentioned social credit system these practices are
1774880	1780200	deemed harmful freedom dignity democracy equality and fundamental rights okay
1780200	1790680	cool does this legislation address existential risk at all does it address
1790880	1798600	autonomous AI the legislation does not explicitly address existential risk or
1798600	1805320	autonomous AI systems wow okay now one thing that I will say is that if you look
1805320	1811640	at the legislation it does talk about like basically human supervision yeah
1811640	1820000	so like AI regulatory sandbox by one or more member stages no like here where
1820000	1824480	was it and talked about not supervision of the sandboxes but like AI systems
1824480	1831640	basically need to be steerable it's in there somewhere okay but let's see it
1831640	1834280	does not specifically address the potential risk associated with highly
1834280	1837440	autonomous or super intelligent AI systems that could pose existential
1837440	1840800	threats however the legislation's emphasis on risk management human
1840800	1843880	oversight oh that's what it was oversight not supervision and robustness
1843880	1848000	requirements for high-risk AI systems indirectly contributes to addressing the
1848000	1851960	safety concerns associated with AI technologies it is important to note
1851960	1855200	that addressing existential risk related to AI may require further research
1855200	1859800	discussions and potentially additional regular to regulations in the future okay
1859800	1870440	cool so there you have it this file is saved on as merged dot text let me go
1870440	1877000	ahead and send that up to get so you can all use it let's see get status I get
1877240	1884400	add get commit AM all done get push all right so there you have it you have a
1884400	1891520	much condensed version of the EU act here and merged you can plug it
1891520	1897080	into the playground and ask questions to your heart's content if you have access
1897080	1901240	to it but otherwise you can at least just read it here yeah I think we're all
1901240	1904000	done thanks for watching
