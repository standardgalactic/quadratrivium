1
00:00:00,000 --> 00:00:01,400
Check it, check it, check it, check it.

2
00:00:01,400 --> 00:00:02,360
Okay, level check.

3
00:00:02,360 --> 00:00:04,040
I think we're here.

4
00:00:04,040 --> 00:00:07,740
All right, so background.

5
00:00:07,740 --> 00:00:09,360
It's been a little while since I've done,

6
00:00:09,360 --> 00:00:10,800
you're over here now,

7
00:00:10,800 --> 00:00:13,200
since I've done one of these tutorial coding videos,

8
00:00:13,200 --> 00:00:15,200
but I woke up at like 2.30 in the morning

9
00:00:15,200 --> 00:00:16,960
and just had to work on this.

10
00:00:16,960 --> 00:00:17,880
So I hammered it out.

11
00:00:17,880 --> 00:00:21,160
Basically, the purpose of today's video

12
00:00:21,160 --> 00:00:23,720
is to demonstrate using ChromaDB,

13
00:00:23,720 --> 00:00:27,040
which is a local vector database.

14
00:00:27,040 --> 00:00:29,360
It's basically like SQLite.

15
00:00:29,360 --> 00:00:30,880
If you're familiar with that,

16
00:00:30,880 --> 00:00:34,520
which is a self-contained SQL database, relational database,

17
00:00:34,520 --> 00:00:37,560
this is functionally very similar to SQLite,

18
00:00:37,560 --> 00:00:39,040
except it is a vector database,

19
00:00:39,040 --> 00:00:41,200
meaning it does semantic search.

20
00:00:41,200 --> 00:00:42,720
One thing that's really great about it

21
00:00:42,720 --> 00:00:45,800
is that it has its own built-in embeddings tools.

22
00:00:45,800 --> 00:00:47,600
I think it's based on BERT.

23
00:00:47,600 --> 00:00:49,960
Anyways, you can check out all the documentation here

24
00:00:49,960 --> 00:00:52,400
on trichroma.com.

25
00:00:52,400 --> 00:00:54,520
The Getting Started and Usage Guide is pretty good.

26
00:00:54,520 --> 00:00:56,760
It's not complete every now and then.

27
00:00:56,760 --> 00:01:00,880
I find that I have to go to the actual repo

28
00:01:00,880 --> 00:01:03,000
to look at how some of the internals work,

29
00:01:03,000 --> 00:01:05,120
but it is pretty brain-dead simple.

30
00:01:05,120 --> 00:01:07,400
So let me just go ahead and show you.

31
00:01:07,400 --> 00:01:08,720
This is my private instance.

32
00:01:08,720 --> 00:01:10,640
Oh, so before we get too lost,

33
00:01:10,640 --> 00:01:12,880
I do have a public instance,

34
00:01:12,880 --> 00:01:16,160
daveshap slash chroma db underscore under chatbot

35
00:01:16,160 --> 00:01:17,760
underscore public.

36
00:01:17,760 --> 00:01:20,960
I've got a little integration guide usage.

37
00:01:20,960 --> 00:01:23,000
It's, I mean, you probably don't need this.

38
00:01:23,000 --> 00:01:23,840
You can futz around with it,

39
00:01:23,840 --> 00:01:26,320
but this will get you started.

40
00:01:26,320 --> 00:01:30,960
I also use chatGBT to just get a really basic explanation

41
00:01:30,960 --> 00:01:31,800
of the code.

42
00:01:31,800 --> 00:01:34,280
You probably won't need it once you take a look at it.

43
00:01:34,280 --> 00:01:37,720
So off the top, let me just show you how this thing works.

44
00:01:37,720 --> 00:01:40,280
So it's a basic chatbot.

45
00:01:40,280 --> 00:01:41,760
You can see I didn't specify it.

46
00:01:41,760 --> 00:01:46,760
So it's getting all mini-LML6v2 from Huggingface.

47
00:01:47,280 --> 00:01:51,000
Great, so it's like, hey, let's see.

48
00:01:51,000 --> 00:01:54,620
What were we talking about last?

49
00:01:54,620 --> 00:01:57,220
This probably won't work because it's just gonna,

50
00:01:57,220 --> 00:01:58,380
in the future, it wouldn't work

51
00:01:58,380 --> 00:02:00,220
because it's gonna have multiple KB articles

52
00:02:00,220 --> 00:02:01,940
in the background.

53
00:02:01,940 --> 00:02:04,300
Oh, I need to explain like all that.

54
00:02:04,300 --> 00:02:06,740
So I know that I just said like KB articles,

55
00:02:06,740 --> 00:02:08,100
don't worry, we'll get to it.

56
00:02:09,460 --> 00:02:11,980
But anyways, I wanna show you that I just started it up

57
00:02:11,980 --> 00:02:14,260
and what it's gonna do is it's gonna use

58
00:02:14,260 --> 00:02:18,340
the last few messages to search its internal KB article

59
00:02:18,340 --> 00:02:19,800
for the last information,

60
00:02:19,800 --> 00:02:22,660
but it also has a user profile for me.

61
00:02:22,660 --> 00:02:24,120
In our previous conversations,

62
00:02:24,120 --> 00:02:26,040
we discussed AI alignment, morality, ethics,

63
00:02:26,040 --> 00:02:27,920
and epistemology within AI development.

64
00:02:27,920 --> 00:02:29,280
You also shared your plans to communicate

65
00:02:29,280 --> 00:02:31,480
your ideas on YouTube, unplug your computer,

66
00:02:31,480 --> 00:02:32,680
and spend more time outdoors,

67
00:02:32,680 --> 00:02:33,840
and use digital wellness settings

68
00:02:33,840 --> 00:02:35,360
to improve your work-life balance.

69
00:02:35,360 --> 00:02:36,400
Working on that.

70
00:02:37,600 --> 00:02:39,280
Additionally, we talked about your recent experience

71
00:02:39,280 --> 00:02:40,840
with severe insomnia and the importance

72
00:02:40,840 --> 00:02:41,980
of maintaining a healthy balance

73
00:02:41,980 --> 00:02:43,520
between work and personal life.

74
00:02:43,520 --> 00:02:46,680
Yes, that's actually why I created this chatbot.

75
00:02:46,680 --> 00:02:47,520
Let me show you.

76
00:02:47,520 --> 00:02:48,360
So there was a,

77
00:02:49,360 --> 00:02:50,640
there was,

78
00:02:53,200 --> 00:02:54,040
there was,

79
00:02:55,760 --> 00:02:56,860
God, my brain.

80
00:02:57,960 --> 00:03:01,000
I was using chat GPT as a reflective journaling tool.

81
00:03:01,000 --> 00:03:03,840
So what I mean by that is

82
00:03:05,520 --> 00:03:08,000
if you plug in this message,

83
00:03:08,000 --> 00:03:10,520
and I know I'm scattered, I'm all over the place,

84
00:03:10,520 --> 00:03:12,480
this is what happens when I have severe insomnia.

85
00:03:12,480 --> 00:03:15,600
Anyways, so basically I use chat GPT

86
00:03:15,600 --> 00:03:17,760
as a reflective journaling tool to figure out

87
00:03:17,800 --> 00:03:19,420
like how I'm feeling about things,

88
00:03:19,420 --> 00:03:21,120
because as an autistic person,

89
00:03:21,120 --> 00:03:22,720
I often need help with this.

90
00:03:22,720 --> 00:03:25,320
And I don't like journaling because just talking to a page

91
00:03:25,320 --> 00:03:26,880
is kind of dumb,

92
00:03:26,880 --> 00:03:30,960
but it's like, hey, I need to talk something out.

93
00:03:30,960 --> 00:03:32,440
And so anyways,

94
00:03:34,840 --> 00:03:38,840
by workshopping this system message with chat GPT,

95
00:03:38,840 --> 00:03:42,760
I came up with a pretty good reflective journaling tool.

96
00:03:42,760 --> 00:03:45,360
So you could say that this is a therapeutic tool,

97
00:03:45,360 --> 00:03:48,440
but by couching it in the language of reflective journaling,

98
00:03:48,440 --> 00:03:52,200
it's not like medical therapy or psychotherapy or anything.

99
00:03:53,000 --> 00:03:55,440
But it's just like, you know, I can say like,

100
00:03:55,440 --> 00:04:00,360
I have been working so hard and I don't know why.

101
00:04:00,360 --> 00:04:01,680
I actually do know why now,

102
00:04:01,680 --> 00:04:04,640
but this is kind of a shorthand of the conversation I had.

103
00:04:05,520 --> 00:04:07,040
Let's try and figure out, it's driving you so hard.

104
00:04:07,040 --> 00:04:08,280
Can you think of any specific goals

105
00:04:08,280 --> 00:04:10,280
that might be pushing you to this extra effort?

106
00:04:10,280 --> 00:04:13,040
So you see how the tone of this is much more straightforward

107
00:04:13,040 --> 00:04:15,040
and it's very focused by asking

108
00:04:15,040 --> 00:04:17,560
those like kind of probing follow-up questions.

109
00:04:17,560 --> 00:04:21,720
This is why, you know, it's in the investigation phase.

110
00:04:21,720 --> 00:04:24,320
Anyways, so I had this idea and I was like, okay,

111
00:04:24,320 --> 00:04:25,880
this is great, but I need,

112
00:04:25,880 --> 00:04:28,760
if I'm gonna use this as a long-term journaling tool,

113
00:04:28,760 --> 00:04:30,320
I'm gonna need this locally

114
00:04:30,320 --> 00:04:32,200
and I'm gonna need persistent storage

115
00:04:32,200 --> 00:04:36,200
because as this is just the playground,

116
00:04:36,200 --> 00:04:39,160
if I do a refresh, it's gone and that's no good.

117
00:04:40,600 --> 00:04:42,960
So actually here, let me go ahead and just save this

118
00:04:43,800 --> 00:04:46,640
to the, we're gonna call this the system message

119
00:04:46,640 --> 00:04:48,920
for reflective journaling.

120
00:04:48,920 --> 00:04:50,480
So you can use this if you want.

121
00:04:51,400 --> 00:04:54,520
All right, so anyways, so you see it has this

122
00:04:54,520 --> 00:04:56,840
and then you see it says updating user profile

123
00:04:56,840 --> 00:05:00,680
and updating KB, okay, cool.

124
00:05:00,680 --> 00:05:04,000
So you see that it fundamentally basic chat bot.

125
00:05:04,000 --> 00:05:06,000
So now let's start to unpack it.

126
00:05:06,000 --> 00:05:11,000
So first we will go look at the, just the chat file.

127
00:05:11,000 --> 00:05:14,680
So this is a super brain dead simple chat bot

128
00:05:14,680 --> 00:05:16,720
with infinite memory, infinite memory.

129
00:05:16,720 --> 00:05:18,680
I know some people got grumpy when I said

130
00:05:18,680 --> 00:05:20,900
that Pinecone had infinite memory.

131
00:05:20,900 --> 00:05:22,040
From a human standpoint,

132
00:05:22,040 --> 00:05:23,720
it functionally has infinite memory

133
00:05:23,720 --> 00:05:26,440
because, you know, this thing can hold

134
00:05:26,440 --> 00:05:28,160
probably a million KB articles,

135
00:05:28,160 --> 00:05:31,960
which is more than enough to document your entire life.

136
00:05:31,960 --> 00:05:36,040
So from a human standpoint, it is functionally infinite.

137
00:05:36,040 --> 00:05:37,720
All right, so from the top,

138
00:05:37,720 --> 00:05:40,160
we've got a few basic utility functions,

139
00:05:40,160 --> 00:05:42,540
save yaml save file, open file,

140
00:05:42,540 --> 00:05:46,200
and then a chat bot, which calls the GPT-4 model.

141
00:05:46,200 --> 00:05:48,460
You could switch this out to 3.5 turbo.

142
00:05:48,460 --> 00:05:50,640
If you don't have access to GPT-4 yet,

143
00:05:50,640 --> 00:05:52,560
it does not work as well.

144
00:05:52,560 --> 00:05:55,280
There's a reason that I use GPT-4 because it is smarter.

145
00:05:55,280 --> 00:05:57,040
I also set the temperature to zero

146
00:05:57,040 --> 00:05:58,700
because I don't like it to be too creative,

147
00:05:58,700 --> 00:06:01,760
especially with a lot of the functions that I have it doing.

148
00:06:01,760 --> 00:06:04,200
You actually want it to be more deterministic

149
00:06:04,200 --> 00:06:06,240
or mechanistic and that you wanna get

150
00:06:06,240 --> 00:06:07,400
the same results every time,

151
00:06:07,400 --> 00:06:10,640
especially when you're updating the user profile

152
00:06:10,640 --> 00:06:12,520
and the KB articles.

153
00:06:12,520 --> 00:06:15,800
You can see right here that every time you call the chat bot,

154
00:06:15,800 --> 00:06:20,320
I dump the whole thing to apilogs slash convo

155
00:06:21,280 --> 00:06:22,480
and it's a yaml file.

156
00:06:22,480 --> 00:06:25,380
So here's my private one.

157
00:06:25,380 --> 00:06:27,640
So apilogs, here's an example.

158
00:06:27,640 --> 00:06:31,440
So each item is gonna be here.

159
00:06:31,440 --> 00:06:32,480
Actually, that's not a good one

160
00:06:32,480 --> 00:06:34,700
because I changed the way that it saves it.

161
00:06:34,700 --> 00:06:37,040
Let me show you a more recent one.

162
00:06:37,040 --> 00:06:40,600
So the first element is always gonna be the system message

163
00:06:42,280 --> 00:06:44,760
that was in the last convo.

164
00:06:44,760 --> 00:06:46,600
So then here's the KB article

165
00:06:46,600 --> 00:06:49,080
and you can see that it was updating the KB article.

166
00:06:49,080 --> 00:06:53,840
And so each one of these items is like,

167
00:06:55,320 --> 00:06:56,760
you'll see, but anyways,

168
00:06:56,760 --> 00:06:59,560
I just wanted to show that it logs everything

169
00:06:59,560 --> 00:07:01,640
because well, sometimes it does things

170
00:07:01,640 --> 00:07:03,200
that you don't understand.

171
00:07:03,200 --> 00:07:06,360
All right, so that's an example of the apilog

172
00:07:06,360 --> 00:07:08,920
and then if the conversation,

173
00:07:08,920 --> 00:07:11,200
if the overall conversation is too long,

174
00:07:11,200 --> 00:07:15,400
it'll go ahead and trim the oldest chat message.

175
00:07:15,400 --> 00:07:20,400
So the chat GPT web interface does this automatically

176
00:07:20,780 --> 00:07:24,300
where it'll just kind of groom the backlog of messages.

177
00:07:24,300 --> 00:07:25,640
So we have to do this manually.

178
00:07:25,640 --> 00:07:28,260
So I just have it cut off at 7,000 tokens.

179
00:07:28,260 --> 00:07:32,480
You could probably do like 7,500 if you want to

180
00:07:32,480 --> 00:07:34,620
because a lot of these are gonna be limited

181
00:07:34,620 --> 00:07:37,940
but you have a user profile and a KB article

182
00:07:37,940 --> 00:07:41,700
that gets wedged in which are both up to 1,000 words

183
00:07:41,700 --> 00:07:43,980
which could be around 1,000 tokens.

184
00:07:43,980 --> 00:07:46,980
So having it trim at 7,000 is probably where you want it.

185
00:07:47,940 --> 00:07:51,180
So that's the primary, those are the helper functions

186
00:07:51,180 --> 00:07:54,300
and then you have a super straightforward,

187
00:07:54,300 --> 00:07:57,400
you instantiate ChromaDB right here.

188
00:07:57,400 --> 00:07:59,580
So you set the persistent directory

189
00:07:59,580 --> 00:08:02,420
which is, I have it right here, ChromaDB.

190
00:08:02,420 --> 00:08:06,100
So this is my instance, my personal instance of ChromaDB.

191
00:08:06,100 --> 00:08:08,700
It's not gonna be the one that you find up here.

192
00:08:08,700 --> 00:08:09,860
This is the public version.

193
00:08:09,860 --> 00:08:11,140
So if you go into ChromaDB,

194
00:08:11,140 --> 00:08:13,660
you'll see just a placeholder file

195
00:08:13,660 --> 00:08:16,100
so that the folder's already there.

196
00:08:16,100 --> 00:08:18,600
You don't need to instantiate it.

197
00:08:18,600 --> 00:08:21,020
Let's see, going back to here.

198
00:08:21,020 --> 00:08:24,780
So ChromaClient, so we instantiate the ChromaDB client.

199
00:08:24,780 --> 00:08:27,340
This is again, almost identical to SQLite

200
00:08:28,580 --> 00:08:30,020
or other similar things.

201
00:08:30,020 --> 00:08:31,180
So about a year ago,

202
00:08:31,180 --> 00:08:32,900
I tried to do basically the same thing.

203
00:08:32,900 --> 00:08:35,220
I called it VDB Lite for Vector Database Lite

204
00:08:35,220 --> 00:08:38,580
instead of SQL Lite, Structured Query Language Lite.

205
00:08:38,580 --> 00:08:40,660
But this company went and did the same thing

206
00:08:40,660 --> 00:08:41,500
and I think they've already got

207
00:08:41,500 --> 00:08:43,380
like a $30 million valuation or something.

208
00:08:43,380 --> 00:08:45,960
I was like, damn, I should have stuck with that.

209
00:08:45,960 --> 00:08:47,480
Anyways, they figured it out.

210
00:08:47,480 --> 00:08:50,060
I think it's based on the same underpinning technology.

211
00:08:50,060 --> 00:08:53,580
They're using an open source embedding transformer.

212
00:08:53,580 --> 00:08:58,060
I think they're also using the Facebook AI semantic search

213
00:08:58,060 --> 00:09:01,940
and the device engine and the background.

214
00:09:01,940 --> 00:09:03,900
Anyways, so you instantiate the client.

215
00:09:03,900 --> 00:09:06,660
You need to use the settings to have a persistent directory

216
00:09:06,660 --> 00:09:11,000
because by default, this entire thing is fully ephemeral.

217
00:09:11,000 --> 00:09:12,500
I think it does cache it somewhere,

218
00:09:12,500 --> 00:09:15,180
but I wanted to be very explicit saying save it here

219
00:09:16,620 --> 00:09:18,100
for reusability.

220
00:09:18,100 --> 00:09:20,060
And so then collection is ChromaClient,

221
00:09:20,060 --> 00:09:23,120
get or create collection named Knowledge Base.

222
00:09:23,120 --> 00:09:26,220
So this is my personal Knowledge Base.

223
00:09:26,220 --> 00:09:29,620
Then we instantiate the conversation

224
00:09:29,620 --> 00:09:32,060
with open AI, the chatbot.

225
00:09:32,060 --> 00:09:36,460
And in this case, because we're saving everything necessary

226
00:09:36,460 --> 00:09:41,460
into a personal user profile and the KB articles,

227
00:09:43,100 --> 00:09:45,660
like why even load the conversation?

228
00:09:46,860 --> 00:09:49,580
All right, so let me show you the system default message.

229
00:09:49,580 --> 00:09:51,820
So the system default message is where it starts.

230
00:09:51,820 --> 00:09:54,340
Your chatbot is whose mission is to assist

231
00:09:54,340 --> 00:09:55,900
the following user, your ultimate objectives

232
00:09:55,900 --> 00:09:57,420
are to minimize suffering and hence prosperity

233
00:09:57,420 --> 00:09:59,260
and promote understanding.

234
00:09:59,260 --> 00:10:01,120
The provided information about the user

235
00:10:01,120 --> 00:10:02,220
and the Knowledge Base article

236
00:10:02,220 --> 00:10:04,320
should be integrated into your interactions.

237
00:10:04,320 --> 00:10:06,540
This is private information not visible to the user.

238
00:10:06,540 --> 00:10:09,180
The user profile compiled from past conversations

239
00:10:09,180 --> 00:10:11,660
encapsulates critical details about the user

240
00:10:11,660 --> 00:10:13,820
which can aid in shaping your responses effectively,

241
00:10:13,820 --> 00:10:15,420
which you saw here.

242
00:10:15,420 --> 00:10:18,160
So you see like it actually knows quite a bit about me

243
00:10:18,160 --> 00:10:19,820
from our past conversations.

244
00:10:19,820 --> 00:10:22,140
This was populated here in the user profile

245
00:10:22,140 --> 00:10:23,460
and the KB article.

246
00:10:23,460 --> 00:10:26,480
So basically it says, then it also explains

247
00:10:26,480 --> 00:10:29,420
that the KB article is a topic compiled similarly

248
00:10:29,420 --> 00:10:32,060
from past dialogue serving as your long-term memory.

249
00:10:32,060 --> 00:10:34,520
While numerous KB articles exist in your backend system,

250
00:10:34,520 --> 00:10:36,320
the one provided is deemed most relevant

251
00:10:36,320 --> 00:10:38,420
to the current conversation topic.

252
00:10:38,420 --> 00:10:40,900
Note that the recall system operates autonomously

253
00:10:40,900 --> 00:10:43,060
and it may not always retrieve the most suitable KB.

254
00:10:43,060 --> 00:10:44,580
If the user is asking about a topic

255
00:10:44,580 --> 00:10:47,060
that doesn't seem to align with the provided KB,

256
00:10:47,060 --> 00:10:48,580
inform them of the memory pulled

257
00:10:48,580 --> 00:10:50,520
and request them to specify their query

258
00:10:50,520 --> 00:10:51,460
or share more details.

259
00:10:51,460 --> 00:10:53,340
This can assist the autonomous system

260
00:10:53,340 --> 00:10:54,740
in retrieving the correct memory

261
00:10:54,740 --> 00:10:56,580
in the subsequent interaction.

262
00:10:56,580 --> 00:10:59,140
So basically that's instructing it

263
00:10:59,140 --> 00:11:01,060
to do the same thing that a human will do

264
00:11:01,060 --> 00:11:03,700
if I say like, hey, Bill, do you remember that time

265
00:11:03,700 --> 00:11:05,880
that like I accidentally shot you in the face

266
00:11:05,880 --> 00:11:06,720
with a Roman candle

267
00:11:06,720 --> 00:11:08,620
because that's something that would happen in the South?

268
00:11:08,620 --> 00:11:09,660
And Bob would be like, you know,

269
00:11:09,660 --> 00:11:10,740
I don't actually remember that.

270
00:11:10,740 --> 00:11:12,740
And I'm like, oh, well, you woke up in the hospital.

271
00:11:12,740 --> 00:11:14,660
Oh yeah, I remember that, right?

272
00:11:14,660 --> 00:11:16,460
So we prime each other's memory

273
00:11:16,460 --> 00:11:20,020
and human prompting is not that different from AI prompting.

274
00:11:20,460 --> 00:11:23,140
Remember that the clarity of your responses

275
00:11:23,140 --> 00:11:25,140
and the relevance of your information recall

276
00:11:25,140 --> 00:11:27,660
are crucial to delivering an optimal user experience.

277
00:11:27,660 --> 00:11:29,060
Please ask any clarifying questions

278
00:11:29,060 --> 00:11:33,140
or provide any input further for refinement if necessary.

279
00:11:33,140 --> 00:11:34,600
So this system message,

280
00:11:34,600 --> 00:11:37,780
I actually got help from chat GPT

281
00:11:37,780 --> 00:11:41,180
to create a really compelling system message.

282
00:11:41,180 --> 00:11:43,380
And one thing that I recommend that people do

283
00:11:43,380 --> 00:11:46,700
is actually use chat GPT to work on prompting.

284
00:11:46,700 --> 00:11:48,540
So this is, you could call this meta prompting

285
00:11:48,580 --> 00:11:51,500
where you use the thing to prompt the thing.

286
00:11:51,500 --> 00:11:53,780
And the reason that this works really well as one,

287
00:11:53,780 --> 00:11:56,620
chat GPT is more articulate than most humans,

288
00:11:56,620 --> 00:11:59,660
including myself when used correctly.

289
00:11:59,660 --> 00:12:01,660
But another thing is one thing that I noticed

290
00:12:01,660 --> 00:12:03,620
is that chat GPT tends to write

291
00:12:03,620 --> 00:12:05,780
in a way that it will understand.

292
00:12:05,780 --> 00:12:08,140
And so if you say, if you give it some context,

293
00:12:08,140 --> 00:12:09,580
like this is what I'm trying to do,

294
00:12:09,580 --> 00:12:13,700
here's my current prompt, here's what's weak about it.

295
00:12:13,700 --> 00:12:15,020
Can you make it better?

296
00:12:15,020 --> 00:12:17,240
And then you tell it like, ask me some questions

297
00:12:17,240 --> 00:12:18,080
if you have any.

298
00:12:18,100 --> 00:12:19,540
But no, I see what you're trying to do.

299
00:12:19,540 --> 00:12:22,020
Let me write better instructions for you.

300
00:12:22,020 --> 00:12:24,520
So instruction writing for anyone who's like a teacher

301
00:12:24,520 --> 00:12:26,300
or technical writer or whatever,

302
00:12:26,300 --> 00:12:29,440
instruction writing is a very, very particular skill set

303
00:12:29,440 --> 00:12:31,000
and chat GPT is really good at it.

304
00:12:31,000 --> 00:12:33,360
So this is the default system message,

305
00:12:33,360 --> 00:12:35,680
which is then populated with the user profile

306
00:12:35,680 --> 00:12:37,640
and the most relevant KB article.

307
00:12:37,640 --> 00:12:40,720
So now that we're up to there,

308
00:12:40,720 --> 00:12:42,300
we enter into the infinite loop,

309
00:12:42,300 --> 00:12:45,520
which is just get the user text,

310
00:12:45,520 --> 00:12:48,520
save it to the user log or the chat logs.

311
00:12:48,520 --> 00:12:50,460
So the chat logs are all saved out here.

312
00:12:50,460 --> 00:12:55,220
It's just plain text and the file name has the timestamp

313
00:12:55,220 --> 00:12:56,660
in it as well as the speaker.

314
00:12:56,660 --> 00:12:59,440
So user chat bot, user chat bot, so on and so forth.

315
00:12:59,440 --> 00:13:00,660
So you got the raw logs there

316
00:13:00,660 --> 00:13:03,140
just in case anything goes wrong.

317
00:13:03,140 --> 00:13:04,520
And then I've also got DB logs,

318
00:13:04,520 --> 00:13:06,820
which we'll get to in just a second.

319
00:13:06,820 --> 00:13:11,200
So then what we do is we take the quote main scratch pad,

320
00:13:11,200 --> 00:13:14,180
which is just the last five messages,

321
00:13:14,180 --> 00:13:19,040
both for the user and for the chat bot.

322
00:13:19,040 --> 00:13:23,280
And this is what we use as the context of like working memory.

323
00:13:23,280 --> 00:13:25,380
And so then we use this main scratch pad,

324
00:13:25,380 --> 00:13:27,340
which is the last five messages.

325
00:13:27,340 --> 00:13:32,340
We use it to search for the top most relevant KB article.

326
00:13:35,620 --> 00:13:37,960
And in my case, I still only have one KB article.

327
00:13:37,960 --> 00:13:39,300
So we'll see how it gets to,

328
00:13:39,300 --> 00:13:40,640
and I'll go through the logic

329
00:13:40,640 --> 00:13:43,420
of how it builds KB articles in just a minute.

330
00:13:43,420 --> 00:13:44,860
So basically it just says,

331
00:13:44,860 --> 00:13:46,380
okay, here's the most recent thing.

332
00:13:46,380 --> 00:13:49,100
Find the KB article that is most relevant

333
00:13:49,100 --> 00:13:51,740
to the most recent bits of conversation.

334
00:13:51,740 --> 00:13:54,420
And then it'll pull that,

335
00:13:54,420 --> 00:13:56,100
and it's again, super straightforward.

336
00:13:56,100 --> 00:13:58,820
All you have to do is pass the text to it,

337
00:13:58,820 --> 00:14:01,100
and it will automatically embed it for you.

338
00:14:01,100 --> 00:14:03,620
And then I said, just give me the one most recent.

339
00:14:03,620 --> 00:14:05,840
Once we have larger context windows,

340
00:14:05,840 --> 00:14:10,200
or maybe if we decide that recent chat history

341
00:14:10,200 --> 00:14:11,220
doesn't need to be as big,

342
00:14:11,220 --> 00:14:14,900
like let's say we wanna trim this down to like 3000 tokens,

343
00:14:14,900 --> 00:14:17,340
and we decide that actually having more KB articles

344
00:14:17,340 --> 00:14:20,220
is more important, we can absolutely do that.

345
00:14:20,220 --> 00:14:22,820
And what you would do then is just change the end results

346
00:14:22,820 --> 00:14:27,260
to let, let's say, give me the four most relevant KB articles

347
00:14:27,260 --> 00:14:29,740
instead of the one most relevant.

348
00:14:29,740 --> 00:14:31,860
That will allow it to have a more sophisticated

349
00:14:31,860 --> 00:14:32,820
working memory.

350
00:14:34,260 --> 00:14:37,700
Yeah, so, but right now we're just doing one.

351
00:14:37,700 --> 00:14:41,660
And so then what we do is we repopulate

352
00:14:41,660 --> 00:14:43,980
that system default message with the profile

353
00:14:43,980 --> 00:14:45,700
and the KB article.

354
00:14:45,700 --> 00:14:46,980
And so that's right here.

355
00:14:46,980 --> 00:14:48,520
So that gets populated there.

356
00:14:50,300 --> 00:14:52,700
And then, let's see,

357
00:14:52,700 --> 00:14:55,380
it looks like I accidentally changed something.

358
00:14:55,380 --> 00:14:57,480
So let me go ahead and show you my user profile.

359
00:14:57,480 --> 00:14:58,860
I don't mind sharing this

360
00:14:58,860 --> 00:15:00,180
because I've already told you everything.

361
00:15:00,180 --> 00:15:02,260
I'm pretty much an open book.

362
00:15:02,260 --> 00:15:06,380
So the format for this is what I call

363
00:15:07,380 --> 00:15:08,420
a labeled list.

364
00:15:08,420 --> 00:15:12,480
And so I realized back in GPT-3

365
00:15:12,480 --> 00:15:16,260
that GPT handles labeled lists very, very well.

366
00:15:16,260 --> 00:15:19,660
So that's where you use a hyphenated list, bullet list.

367
00:15:19,660 --> 00:15:21,620
It understands that intrinsically.

368
00:15:21,620 --> 00:15:24,420
And then you label the information, right?

369
00:15:24,420 --> 00:15:25,840
So it's just a hash table.

370
00:15:25,840 --> 00:15:27,420
If you're into computer science,

371
00:15:27,420 --> 00:15:29,700
this is called a hash table or a dictionary

372
00:15:29,700 --> 00:15:31,380
where it's you label the kind of,

373
00:15:31,380 --> 00:15:34,380
you have a parameter and then you label the parameter, right?

374
00:15:34,380 --> 00:15:36,180
So the data metadata.

375
00:15:36,180 --> 00:15:38,340
So name, David Shapiro, y'all know that.

376
00:15:38,340 --> 00:15:40,220
Profession, AI and cognitive architectures,

377
00:15:40,220 --> 00:15:41,340
y'all know that.

378
00:15:41,340 --> 00:15:44,900
Interests, it's got a whole bunch of interests.

379
00:15:44,900 --> 00:15:46,100
And oh, by the way,

380
00:15:46,100 --> 00:15:48,760
this was all distilled from other conversations.

381
00:15:50,180 --> 00:15:51,740
Beliefs, plans,

382
00:15:51,740 --> 00:15:54,240
and this is of course gonna get updated over time.

383
00:15:55,240 --> 00:15:57,220
So for instance,

384
00:15:57,220 --> 00:16:00,460
during some of the conversations that I just showed you

385
00:16:00,460 --> 00:16:02,820
with this brand new chatbot,

386
00:16:02,820 --> 00:16:05,140
it added this.

387
00:16:05,180 --> 00:16:06,580
When I told it, this is what I'm gonna do.

388
00:16:06,580 --> 00:16:08,260
It said, okay, I'm gonna,

389
00:16:08,260 --> 00:16:09,700
I think that that's relevant

390
00:16:09,700 --> 00:16:11,480
to what you're gonna be doing in the future.

391
00:16:11,480 --> 00:16:14,940
So let me just jot that down on my scratch pad for you.

392
00:16:14,940 --> 00:16:18,580
Preferences, so I manually added avoid superfluous words

393
00:16:18,580 --> 00:16:20,220
overly for both responses.

394
00:16:20,220 --> 00:16:21,260
And then you know how it says,

395
00:16:21,260 --> 00:16:23,460
as an AI model, I don't have personal opinions.

396
00:16:23,460 --> 00:16:24,980
I'm like, I know, I don't care.

397
00:16:24,980 --> 00:16:26,940
So I said, please interpret personal input

398
00:16:26,940 --> 00:16:29,780
as critical evaluation and valuable feedback.

399
00:16:29,780 --> 00:16:31,940
I said it a little bit more explicitly than that,

400
00:16:31,940 --> 00:16:34,540
but the point is, is that I told it that

401
00:16:34,580 --> 00:16:37,820
in natural language, I was down here and I said,

402
00:16:37,820 --> 00:16:42,820
I know you're an AI and have no personal opinions,

403
00:16:43,180 --> 00:16:47,580
but when I ask for them, this is what I mean.

404
00:16:47,580 --> 00:16:50,020
And so when I did that, it actually recorded that

405
00:16:50,020 --> 00:16:53,300
automatically because after every conversation,

406
00:16:53,300 --> 00:16:55,300
it checks the user profile.

407
00:16:55,300 --> 00:16:56,860
We need to find a way to speed this up

408
00:16:56,860 --> 00:16:59,580
because as you saw from the user interface,

409
00:16:59,580 --> 00:17:00,680
it's not the best.

410
00:17:02,100 --> 00:17:04,100
If I had more time, mental energy and patience,

411
00:17:04,660 --> 00:17:07,220
I would separate this out as a thread,

412
00:17:07,220 --> 00:17:09,900
as a separate threading thing that can be done,

413
00:17:09,900 --> 00:17:13,140
or even separate it out as a separate API.

414
00:17:14,220 --> 00:17:17,460
One of y'all can do that, submit a pull request

415
00:17:17,460 --> 00:17:18,980
on the public repo.

416
00:17:18,980 --> 00:17:23,980
And then health, so it added this entirely on its own

417
00:17:24,140 --> 00:17:29,140
because I said, hey, I woke up at like 2.30 in the morning

418
00:17:30,100 --> 00:17:32,140
because I had to work on this.

419
00:17:32,140 --> 00:17:34,420
And then I said, let's talk about that.

420
00:17:34,420 --> 00:17:36,900
And so it decided that that was a critical piece

421
00:17:36,900 --> 00:17:39,140
of information to add to my user profile.

422
00:17:39,140 --> 00:17:41,860
So that all gets populated here.

423
00:17:41,860 --> 00:17:45,540
And then the logs are all stored here.

424
00:17:45,540 --> 00:17:50,540
So you got the API logs, which will track all of that.

425
00:17:50,740 --> 00:17:54,180
Everything, so I use chat GPT API for everything

426
00:17:54,180 --> 00:17:56,780
just because that's the only way to get to GPT-4,

427
00:17:56,780 --> 00:17:58,140
which is the most powerful.

428
00:17:59,140 --> 00:18:00,300
Let's see.

429
00:18:02,460 --> 00:18:07,300
So then we update the system message every time.

430
00:18:07,300 --> 00:18:11,500
So it says, okay, whatever you said,

431
00:18:11,500 --> 00:18:12,860
update the system message,

432
00:18:12,860 --> 00:18:15,660
then we go ahead and generate a response first

433
00:18:16,740 --> 00:18:20,100
because the user profile is not gonna change

434
00:18:20,100 --> 00:18:21,500
all that much or all that often,

435
00:18:21,500 --> 00:18:24,180
so we can basically assume that it'll be usable.

436
00:18:24,180 --> 00:18:26,860
And then the KB articles also,

437
00:18:27,500 --> 00:18:28,820
I figured it would actually be better

438
00:18:28,820 --> 00:18:32,900
to update the KB articles after you have the user input

439
00:18:32,900 --> 00:18:34,740
and then the machine output

440
00:18:34,740 --> 00:18:38,540
because if you ask chat GPT for important information

441
00:18:38,540 --> 00:18:40,140
or it solves a problem for you,

442
00:18:40,140 --> 00:18:42,460
you actually wanna capture that.

443
00:18:43,460 --> 00:18:46,140
So we go ahead and generate the response

444
00:18:46,140 --> 00:18:48,140
and append that to everything.

445
00:18:48,140 --> 00:18:49,940
We go ahead and log it out.

446
00:18:49,940 --> 00:18:52,660
Then we update the user scratch pad again.

447
00:18:52,660 --> 00:18:54,140
Actually, why did I do this?

448
00:18:55,180 --> 00:18:56,780
Oh, no, this is the first time we did it.

449
00:18:56,820 --> 00:18:58,980
Okay, sorry, I apologize.

450
00:18:58,980 --> 00:19:01,340
So then we update the user scratch pad,

451
00:19:01,340 --> 00:19:03,060
which the user scratch pad

452
00:19:03,060 --> 00:19:05,140
is only the last few user messages.

453
00:19:05,140 --> 00:19:09,140
And the reason for that is because we want to exclude

454
00:19:10,220 --> 00:19:12,540
chat GPT's response

455
00:19:12,540 --> 00:19:14,100
because we don't want it to get confused

456
00:19:14,100 --> 00:19:15,700
about things that it has said about you

457
00:19:15,700 --> 00:19:17,660
or inferred or whatever.

458
00:19:17,660 --> 00:19:20,980
We only want to record your user profile

459
00:19:20,980 --> 00:19:22,540
from explicitly what you say.

460
00:19:22,540 --> 00:19:25,860
So I just captured the last three messages that you've sent

461
00:19:25,900 --> 00:19:27,980
and then it does a stare and compare

462
00:19:27,980 --> 00:19:29,700
basically where it says, okay,

463
00:19:29,700 --> 00:19:32,020
based on this most recent chat message,

464
00:19:32,020 --> 00:19:33,140
is there any,

465
00:19:33,140 --> 00:19:36,100
one, is there any relevant user information?

466
00:19:36,100 --> 00:19:37,540
And if so, go ahead and update it.

467
00:19:37,540 --> 00:19:39,580
So let me show you how it updates that.

468
00:19:39,580 --> 00:19:42,100
So system update user profile.

469
00:19:42,940 --> 00:19:47,660
So this is a user profile document updater chat bot.

470
00:19:47,660 --> 00:19:49,780
This is the system message.

471
00:19:49,780 --> 00:19:52,980
Your role is to manage and update a UPD and chat bot,

472
00:19:52,980 --> 00:19:55,300
the chat GPT came up with this idea on its own.

473
00:19:55,740 --> 00:19:59,620
It created the UPD definition.

474
00:19:59,620 --> 00:20:01,500
Your primary responsibility is to parse updates

475
00:20:01,500 --> 00:20:05,020
supplied by the user, meticulously analyze them.

476
00:20:06,020 --> 00:20:08,500
It could also extend elements such as user preferences,

477
00:20:08,500 --> 00:20:10,820
significant life events and deeply held beliefs.

478
00:20:10,820 --> 00:20:12,820
Please refrain from incorporating non-essential data

479
00:20:12,820 --> 00:20:14,900
or unrelated topics.

480
00:20:14,900 --> 00:20:16,860
The result of your efforts should exclusively be

481
00:20:16,860 --> 00:20:17,820
an updated UPD.

482
00:20:17,820 --> 00:20:19,820
If the user's update doesn't contribute

483
00:20:19,820 --> 00:20:21,260
any new or significant information,

484
00:20:21,260 --> 00:20:22,980
your output should mirror the current UPD

485
00:20:22,980 --> 00:20:24,580
as indicated below.

486
00:20:24,620 --> 00:20:26,780
However, if you discover any relevant new information,

487
00:20:26,780 --> 00:20:29,060
your output should feature an updated UPD

488
00:20:29,060 --> 00:20:31,060
that assimilates these modifications.

489
00:20:31,060 --> 00:20:34,700
So basically it's an absurd, right?

490
00:20:34,700 --> 00:20:39,540
Or if there's no differences, just keep it the same,

491
00:20:39,540 --> 00:20:41,540
otherwise update it.

492
00:20:41,540 --> 00:20:43,660
You must prioritize brevity and clarity in your output,

493
00:20:43,660 --> 00:20:45,780
combining condensed information when appropriate

494
00:20:45,780 --> 00:20:48,620
to ensure succinctness and improve comprehension.

495
00:20:48,620 --> 00:20:51,540
Totally rewrite or restructure UPD as necessary,

496
00:20:51,540 --> 00:20:53,380
adhering to the list format.

497
00:20:53,380 --> 00:20:55,580
Your response should not include explanatory text

498
00:20:55,580 --> 00:20:58,260
or context, because you know how sometimes chat GPT

499
00:20:58,260 --> 00:21:01,940
will say, this is your new, you know, blah, blah, blah.

500
00:21:01,940 --> 00:21:05,380
So in this case, I have it very reliably

501
00:21:05,380 --> 00:21:08,260
just spit out the user profile.

502
00:21:09,220 --> 00:21:11,100
Oh, and then another thing is that

503
00:21:11,100 --> 00:21:13,900
because we're working with a limited window,

504
00:21:13,900 --> 00:21:17,740
I say the UPD should not exceed approximately 1,000 words.

505
00:21:17,740 --> 00:21:19,940
When revising the UPD, give precedence

506
00:21:19,940 --> 00:21:22,140
to the most significant and relevant information,

507
00:21:22,140 --> 00:21:24,100
extraneous or less impactful information

508
00:21:24,100 --> 00:21:25,900
should be omitted, et cetera, et cetera.

509
00:21:25,900 --> 00:21:28,260
So I give it the current word count

510
00:21:28,260 --> 00:21:29,620
and then the current UPD.

511
00:21:29,620 --> 00:21:32,260
So that way it kind of knows, because chat GPT,

512
00:21:32,260 --> 00:21:35,540
especially GPT-4 is better at counting words,

513
00:21:35,540 --> 00:21:39,020
but just giving it the explicit number makes it easier,

514
00:21:39,020 --> 00:21:40,500
right?

515
00:21:40,500 --> 00:21:43,740
Yeah, so that's my current user profile.

516
00:21:43,740 --> 00:21:45,660
So now let's dive back in here.

517
00:21:45,660 --> 00:21:47,980
The hard part was updating the knowledge base.

518
00:21:47,980 --> 00:21:50,180
So if this is your first run,

519
00:21:50,180 --> 00:21:52,980
the collection count is gonna be zero.

520
00:21:52,980 --> 00:21:57,140
And so then basically you just instantiate the whole thing.

521
00:21:57,140 --> 00:21:59,300
So we take the most recent chat logs,

522
00:21:59,300 --> 00:22:03,900
the main scratch pad and start a new KB article.

523
00:22:03,900 --> 00:22:06,060
Now, if the collection count is not zero,

524
00:22:06,060 --> 00:22:09,500
which is gonna be most of the time once you get started,

525
00:22:09,500 --> 00:22:11,340
what you do is you basically do the same thing

526
00:22:11,340 --> 00:22:15,020
where you say, okay, based on the most recent conversation,

527
00:22:15,020 --> 00:22:17,540
give me the most relevant document,

528
00:22:17,540 --> 00:22:19,540
which I probably could compress this

529
00:22:19,580 --> 00:22:22,060
and just use the same information here.

530
00:22:22,060 --> 00:22:25,420
Because this is the same,

531
00:22:25,420 --> 00:22:28,220
this is, well, generally find the same thing.

532
00:22:28,220 --> 00:22:30,300
Actually, no, that's not necessarily true

533
00:22:30,300 --> 00:22:32,340
because we've updated the main scratch pad.

534
00:22:32,340 --> 00:22:33,340
So scratch that.

535
00:22:34,460 --> 00:22:39,460
So if the new user input and chat GPT output

536
00:22:40,460 --> 00:22:43,060
connects to a different KB article,

537
00:22:43,060 --> 00:22:46,140
let's go ahead and get that document and that document ID.

538
00:22:46,980 --> 00:22:48,340
And what we'll do is we'll go ahead

539
00:22:48,340 --> 00:22:52,220
and use system update existing KB article.

540
00:22:52,220 --> 00:22:55,420
So this is a system instruction

541
00:22:55,420 --> 00:22:57,420
where it basically says all the same stuff,

542
00:22:57,420 --> 00:22:59,220
here's the current KB article,

543
00:22:59,220 --> 00:23:01,180
and then the user will now provide you

544
00:23:01,180 --> 00:23:03,300
with the new information to evaluate.

545
00:23:03,300 --> 00:23:04,940
And so that is gonna be here

546
00:23:04,940 --> 00:23:07,460
where you supply it the current KB article

547
00:23:07,460 --> 00:23:09,820
that it found as well as the scratch pad.

548
00:23:10,780 --> 00:23:11,980
And so it's like, okay, cool,

549
00:23:11,980 --> 00:23:14,900
now let's do the same thing that we did with the user profile,

550
00:23:14,900 --> 00:23:16,700
which is merge that information.

551
00:23:16,700 --> 00:23:18,580
If there's nothing new that's relevant,

552
00:23:18,580 --> 00:23:22,100
leave it alone, but if there is, go ahead and update it.

553
00:23:22,100 --> 00:23:25,620
And so then it saves all this out to the DB logs.

554
00:23:25,620 --> 00:23:27,900
And so if you go to DB logs out here,

555
00:23:27,900 --> 00:23:30,220
you'll see a whole bunch of update statements.

556
00:23:30,220 --> 00:23:33,260
So it says update documented, it gives you the UUID,

557
00:23:33,260 --> 00:23:35,180
and this is the final output.

558
00:23:35,180 --> 00:23:37,340
Actually, probably what I should do is modify this

559
00:23:37,340 --> 00:23:39,500
so it gives you the original,

560
00:23:40,500 --> 00:23:42,340
the original, the new information,

561
00:23:42,340 --> 00:23:44,140
and then the final output.

562
00:23:44,140 --> 00:23:47,580
So I'll add that as a to-do item, actually.

563
00:23:50,700 --> 00:23:55,700
Let's see, to-do, save more info in DB logs,

564
00:23:57,780 --> 00:24:00,380
probably as YAML file,

565
00:24:01,420 --> 00:24:06,420
original article, new info, and then final article.

566
00:24:08,220 --> 00:24:09,780
So yeah, that's something that I'll do.

567
00:24:09,780 --> 00:24:12,900
Now, that being said, one of the biggest problems

568
00:24:12,940 --> 00:24:14,740
that we have always had,

569
00:24:14,740 --> 00:24:16,460
so this is the cream of the crop.

570
00:24:16,460 --> 00:24:18,700
This is the triple crown right here.

571
00:24:18,700 --> 00:24:21,020
The biggest problem that everyone has always had

572
00:24:21,020 --> 00:24:22,500
with long-term chatbot memory

573
00:24:22,500 --> 00:24:25,180
is how the heck do you keep track of memories?

574
00:24:25,180 --> 00:24:28,260
How the heck do you keep track of different types of memories?

575
00:24:28,260 --> 00:24:30,260
Like some people have internal thoughts

576
00:24:30,260 --> 00:24:33,140
versus external thoughts and episodic memories

577
00:24:33,140 --> 00:24:36,300
and this, that, and the other.

578
00:24:36,300 --> 00:24:41,300
And you can certainly try and tag and categorize memories

579
00:24:42,300 --> 00:24:46,860
with different context, right?

580
00:24:46,860 --> 00:24:48,900
With metadata, and I certainly recommend that,

581
00:24:48,900 --> 00:24:50,580
especially once your cognitive architectures

582
00:24:50,580 --> 00:24:52,380
get more sophisticated, right?

583
00:24:52,380 --> 00:24:55,260
If you do have an out-of-band like thought,

584
00:24:55,260 --> 00:24:56,900
like internal private thoughts,

585
00:24:56,900 --> 00:24:58,500
definitely keep that separate.

586
00:24:58,500 --> 00:25:01,260
If you have external sensory information,

587
00:25:01,260 --> 00:25:02,940
definitely keep that separate.

588
00:25:02,940 --> 00:25:04,460
But what I'm working on here,

589
00:25:04,460 --> 00:25:09,220
rather than just being a way to focus on episodic memory,

590
00:25:09,220 --> 00:25:12,420
which that's what REMO was my previous attempt,

591
00:25:12,420 --> 00:25:15,660
this is a way to accumulate declarative information.

592
00:25:16,660 --> 00:25:21,300
And so declarative information is like a statement of fact,

593
00:25:21,300 --> 00:25:22,140
right?

594
00:25:22,140 --> 00:25:23,180
That's why it's called a KB article.

595
00:25:23,180 --> 00:25:24,940
So rather than just a timeline,

596
00:25:24,940 --> 00:25:26,580
rather than just a log,

597
00:25:26,580 --> 00:25:29,340
keeping track of everything in chronological order,

598
00:25:29,340 --> 00:25:33,300
the idea here is to connect new information to a KB article.

599
00:25:33,300 --> 00:25:35,460
So there's no reason that you couldn't do both as well,

600
00:25:35,460 --> 00:25:38,180
right, because this is how human memory works.

601
00:25:38,660 --> 00:25:41,140
Human memory is associative, but it's also temporal.

602
00:25:42,100 --> 00:25:44,740
Now, if the KB article gets too large,

603
00:25:44,740 --> 00:25:46,900
if you added information,

604
00:25:46,900 --> 00:25:49,140
and now it's more than a thousand words,

605
00:25:49,140 --> 00:25:52,100
then I have another system prompt,

606
00:25:52,100 --> 00:25:54,660
which you can check them all out here.

607
00:25:54,660 --> 00:25:57,580
So there's system instantiate new KB,

608
00:25:57,580 --> 00:25:58,740
system reflective journaling,

609
00:25:58,740 --> 00:26:01,580
I just showed you what that was, system split KB.

610
00:26:01,580 --> 00:26:02,820
So that's this one.

611
00:26:02,820 --> 00:26:06,420
But update user profile, update KB article,

612
00:26:06,420 --> 00:26:09,060
new KB article, reflective journaling and split KB.

613
00:26:09,060 --> 00:26:10,300
So these are the operations.

614
00:26:10,300 --> 00:26:12,500
These are the cognitive operations,

615
00:26:12,500 --> 00:26:15,180
the cognitive memory operations that it's gonna be doing.

616
00:26:15,180 --> 00:26:17,620
And so then basically what it does is say,

617
00:26:17,620 --> 00:26:20,020
hey, we're gonna give you a long KB article,

618
00:26:20,020 --> 00:26:22,740
split it into two, into two equal parts.

619
00:26:23,580 --> 00:26:27,100
And so the idea here is that over time,

620
00:26:27,100 --> 00:26:29,220
as your KB article gets bigger,

621
00:26:29,220 --> 00:26:32,340
it'll branch and metastasize naturally.

622
00:26:32,660 --> 00:26:36,740
And so you could then add a lot of additional metadata

623
00:26:36,740 --> 00:26:40,540
to this, such as like access rate or related articles

624
00:26:40,540 --> 00:26:42,780
or parent articles or previous articles,

625
00:26:42,780 --> 00:26:45,820
which means that you can naturally evolve

626
00:26:45,820 --> 00:26:50,260
a knowledge graph of your knowledge base over time.

627
00:26:50,260 --> 00:26:52,860
You can also do this out of band,

628
00:26:52,860 --> 00:26:57,860
just by doing semantic similarity and entity links and stuff.

629
00:26:58,100 --> 00:26:59,340
But it would be really cool

630
00:26:59,340 --> 00:27:01,880
to have a more sophisticated version of this

631
00:27:01,880 --> 00:27:05,120
that allows it to kind of follow that branching tree

632
00:27:05,120 --> 00:27:06,280
over time.

633
00:27:06,280 --> 00:27:07,440
So there you have it.

634
00:27:07,440 --> 00:27:09,680
That's kind of the whole thing.

635
00:27:09,680 --> 00:27:11,000
So that's the chat.

636
00:27:11,000 --> 00:27:14,600
And all this is just real basic, just housekeeping stuff.

637
00:27:14,600 --> 00:27:16,860
And then at the end of every instance,

638
00:27:16,860 --> 00:27:19,280
it does ChromaClient persist.

639
00:27:19,280 --> 00:27:20,600
So now let me show you,

640
00:27:22,720 --> 00:27:25,800
I included a second Python script.

641
00:27:25,800 --> 00:27:27,560
So it's just ChromaDB peak,

642
00:27:27,560 --> 00:27:29,760
which uses the ChromaDB peak function here.

643
00:27:29,760 --> 00:27:31,760
Let me just show you that script real quick.

644
00:27:32,360 --> 00:27:33,720
ChromaDB peak.

645
00:27:33,720 --> 00:27:37,680
So same stuff, you instantiate the client,

646
00:27:37,680 --> 00:27:38,760
you connect to it.

647
00:27:39,640 --> 00:27:41,680
It tells you how many entries,

648
00:27:41,680 --> 00:27:44,080
and then it will show you the top 10 entries.

649
00:27:44,080 --> 00:27:46,740
And so in my case, I should only have one entry.

650
00:27:49,000 --> 00:27:51,080
Let's see, so let's go up to the top.

651
00:27:51,080 --> 00:27:53,880
Yep, KB presently has one entries,

652
00:27:53,880 --> 00:27:55,480
here below the top 10 entries.

653
00:27:55,480 --> 00:27:56,600
And so here you can see

654
00:27:56,600 --> 00:27:59,060
that it's actually got several topics,

655
00:27:59,060 --> 00:28:00,760
because the way that it works

656
00:28:00,760 --> 00:28:05,760
is that it searches for the top one most relevant KB articles.

657
00:28:07,040 --> 00:28:10,040
And so that's always gonna return the first one.

658
00:28:10,040 --> 00:28:11,920
And the first one is not yet long enough

659
00:28:11,920 --> 00:28:13,720
to justify splitting up.

660
00:28:13,720 --> 00:28:15,560
But whatever I end up talking about,

661
00:28:15,560 --> 00:28:17,200
I'll keep talking with the thing,

662
00:28:17,200 --> 00:28:18,500
and eventually it'll split it up.

663
00:28:18,500 --> 00:28:20,120
So in this case, it looks like

664
00:28:20,120 --> 00:28:22,240
it'll probably talk about AI alignment.

665
00:28:22,240 --> 00:28:26,240
And then it's gonna also talk about my obsession

666
00:28:26,240 --> 00:28:29,240
with artificial intelligence and work-life balance.

667
00:28:29,240 --> 00:28:34,040
Because those are kinda like two centroid in this.

668
00:28:34,040 --> 00:28:38,480
So let me just go ahead and actually show you

669
00:28:38,480 --> 00:28:39,920
how this will ultimately work.

670
00:28:39,920 --> 00:28:44,720
So if we go to API logs, it should be the last one.

671
00:28:45,760 --> 00:28:46,820
Yes, here we go.

672
00:28:46,820 --> 00:28:50,680
So if I plug this in, let's go here.

673
00:28:50,680 --> 00:28:52,800
So that's the message that I'm gonna want it.

674
00:28:52,800 --> 00:28:57,800
And then let's grab the split, the split message.

675
00:28:58,320 --> 00:29:03,040
So you'll see what I mean by how it will ultimately

676
00:29:03,040 --> 00:29:04,440
kinda metastasize.

677
00:29:04,440 --> 00:29:05,520
Zoom in a little bit.

678
00:29:05,520 --> 00:29:07,760
All right, we're using GPT-4, temperature zero,

679
00:29:07,760 --> 00:29:10,440
maximum length, a thousand.

680
00:29:10,440 --> 00:29:14,360
All right, so basically what it's gonna do is,

681
00:29:14,360 --> 00:29:16,960
the end says the user will now provide you

682
00:29:16,960 --> 00:29:18,500
with the KB article to split.

683
00:29:18,500 --> 00:29:21,420
So I submit it, and now it's gonna look at this,

684
00:29:21,420 --> 00:29:24,720
and it's gonna say article one, and then article two.

685
00:29:25,760 --> 00:29:27,200
So let's see what it ultimately does.

686
00:29:27,200 --> 00:29:28,760
And you can see how slow it is.

687
00:29:28,760 --> 00:29:32,120
So this is why ultimately you're gonna wanna do this

688
00:29:32,120 --> 00:29:36,400
out of band as a threaded process or do it periodically,

689
00:29:36,400 --> 00:29:40,400
maybe break it up and do it when the user's offline

690
00:29:40,400 --> 00:29:44,600
or whatever, but you see how each article now

691
00:29:44,600 --> 00:29:47,760
is much more specific.

692
00:29:47,760 --> 00:29:50,040
And so then once you go into each of these articles

693
00:29:50,040 --> 00:29:54,520
in the future, identifying factors

694
00:29:54,520 --> 00:29:57,520
and seeking professional help if necessary, yeah.

695
00:29:57,520 --> 00:30:00,840
And so basically it'll allow the articles

696
00:30:00,840 --> 00:30:02,640
to metastasize over time.

697
00:30:02,640 --> 00:30:07,640
Now that being said, if no new information

698
00:30:07,880 --> 00:30:10,040
is added to an article, it won't update it.

699
00:30:10,040 --> 00:30:11,640
It's that simple.

700
00:30:11,640 --> 00:30:15,200
Now that being said, there will probably be a need

701
00:30:15,200 --> 00:30:19,720
to do some KB article grooming over time,

702
00:30:19,720 --> 00:30:22,600
but the idea is that the KB will only grow

703
00:30:22,640 --> 00:30:26,120
as much as it needs to and no more, no less,

704
00:30:26,120 --> 00:30:27,840
and it will only grow based on the things

705
00:30:27,840 --> 00:30:30,200
that you have talked about, and it will record it

706
00:30:30,200 --> 00:30:34,200
in these very succinct, concise articles.

707
00:30:36,280 --> 00:30:39,640
So then what happens is that it splits these two up,

708
00:30:39,640 --> 00:30:42,040
and then the final thing that the chatbot does

709
00:30:42,040 --> 00:30:44,920
is it will do an update for the first one

710
00:30:44,920 --> 00:30:47,120
and then add the second one.

711
00:30:47,120 --> 00:30:48,240
So it's that simple.

712
00:30:48,240 --> 00:30:50,120
And then when you do an update, as long as you don't,

713
00:30:50,120 --> 00:30:52,320
if you don't specify the embedding,

714
00:30:52,320 --> 00:30:54,920
it'll automatically recalculate the embedding,

715
00:30:54,920 --> 00:30:55,760
and then you're good to go.

716
00:30:55,760 --> 00:30:58,720
So I haven't quite got here yet, so it might break,

717
00:30:58,720 --> 00:31:03,160
but I think this kinda, yeah, I think that's about it.

718
00:31:03,160 --> 00:31:04,840
So like I said, it's over here.

719
00:31:05,720 --> 00:31:09,360
ChromaDB, public, chatbot should be all set.

720
00:31:10,880 --> 00:31:14,720
Yeah, all right, cool.

