start	end	text
0	6400	I assume that everyone in the room knows something about BFO.
6400	13020	What I'm going to do now is provide a basic introduction to the contents of BFO, a basic
13020	20540	introduction to how it's being used and by whom and why, a basic introduction to what's
20540	27980	happening in Washington DC as we speak almost, to make BFO what we hope will be something
27980	33780	like the government ontology or rather the top level of the government ontology and by
33780	38620	that I do not mean that the only government is the one that's in Washington DC.
38620	45860	BFO is used by many groups and when people start building an ontology for a specific
45860	52580	purpose they very often examine different top level ontologies.
53180	62700	BFO is just one of a small number and some of them then say that they reject using BFO
62700	68940	because it does X and if you check you will find that usually it doesn't do X, in other
68940	74780	words they misunderstood something in BFO and thought they had a reason for not using
74780	75780	it.
75900	84020	Now one reason that people give for not using BFO is that BFO is a realist ontology and
84020	88540	I'm going to explain what that means and why some people think that that's a bad thing
88540	93380	and that they're not mistaken and there are reasons why a realist ontology might be a
93380	94380	bad thing.
94380	102780	Then I'll go over why people think they need ontologies and specifically top level ontologies.
102780	111420	I'll give some examples of successes and failures and I'll try and give a sufficient survey
111420	115540	that you will all go away feeling that you've learned something.
115540	121780	Alright so what does it mean that an ontology is a realist ontology?
121780	127460	So I need to start by saying that when we say BFO is a top level ontology what that
127500	132900	means is that it can be applied to any domain whatsoever.
132900	140220	Now in creating the ISO standard we had to specify what that might mean, can be applied
140220	142340	to any domain whatsoever.
142340	147860	If we have time today you will see that there are domains which BFO cannot be applied to
147860	155580	and I'll give you a clue, it begins with the letter Q and it's part of physics, that we
156020	159700	have three seconds to work out that.
159700	165580	So BFO is not entirely the main neutral, I think now I would say that it's the main neutral
165580	173380	for all areas of common sense and all areas of classical physics and all areas where we
173380	182780	collect empirical data and we'll leave Q to one side for the moment.
182780	195900	Now secondly we need to mention the requirement that BFO is realist in the sense that BFO requires
195900	202180	that all the classes in BFO have instances.
202180	210420	So we have the class object and I am an instance of the class object and I exist in space and
210420	211420	time.
211420	216860	Now I will explain why some people might think that we do not want to insist that all classes
216860	219460	have instances.
219460	227340	Now so BFO as all the classes have instances, we're not now talking about classes like protein
227340	233460	or person or planet, we're talking about classes like generically dependent continuum which
233460	235740	we'll come back to later on.
235740	239140	All BFO classes have instances.
239180	246900	Now people use BFO as a domain neutral ontology because it provides a good starting point
246900	252420	we think for making domain specific ontologies.
252420	260140	So if we take the cell ontology, the cell ontology is all about cells and all cells are objects
260140	263260	in the BFO sense of object.
263260	270220	And so all cells in the entire universe and in the entire history of the entire universe
270220	275300	are instances of the BFO class object.
275300	281260	Now a realist ontology is only interested in classes which have instances and when I
281260	291780	say have I might mean or have and I'm not going to say anything about the future.
291780	294900	We can worry about that later.
294900	299620	All right now we have evidence that cells exist.
299620	304420	We have evidence that instances of the class cell exist and therefore we have evidence
304420	308380	that instances of the BFO class object exist.
308380	313940	They all exist in space and time and we know this because that's what established science
313940	320060	says and we want BFO ontologies to be consistent with established science.
320060	328340	Some people I'm not in France now and so I won't mention French philosophers but some
328340	332820	people think that it's actually not a good criterion or something that it should be
332820	335140	conformant to established science.
335140	340900	I did say I wouldn't mention French philosophers so I won't.
340900	348540	Now but there are for different reasons BFO conformant domain ontologies which do not
348580	354100	satisfy the principle that all classes have to be instantiated by instances in space and
354100	355620	time.
355620	362260	For instance you might be building an ontology for military planning which is all about the
362260	371980	future and future things might never exist so some plans are realized that entities
371980	377260	inscribed by those plans and by the corresponding plan ontologies then exist but many plans
377340	383380	are not realized and you want a planning ontology to work independently of whether the plans
383380	390300	that you use the ontology to describe or represent or define are actually realized.
390300	396780	So planning is a good example where the realist ontology approach in the narrow sense does
396780	399500	not work.
399500	406420	Another example and so some people like to build ontologies of fiction or myth.
406420	415220	I don't want to talk about those frequently but there are chemists who try to synthesize
415220	422900	molecule which never gets synthesized and so a good chemistry ontology probably would
422900	428500	have to include classes which have no instances either in the past or in the present or in
428500	438500	the future because there are quite conceivably molecule diagrams which are chemically legal
438500	445580	but which are never actually synthesized because they're not synthesizable.
445580	451700	But in fact this fact is not a problem for BFO.
451700	457740	So BFO encourages people to build BFO conformant domain ontologies which satisfy the instantiation
457740	465980	principle but people can build other ontologies and they would still be conformant with BFO.
465980	473660	Realism is a kind of metaphysical slogan.
473660	477100	I think it's a very useful slogan when you're building ontologies.
477100	481540	You don't want to build ontologies which are not in the real world but if you have to build
481540	488380	ontologies for unsynthesized molecules you can still use BFO and it works perfectly well.
488380	494060	And in fact we have now methods which we've developed to help people who are working in
494060	499100	areas where for instance plans are not realized.
499100	505940	Just for those people who want to follow up on this, this goes under the heading of the
505940	510860	modal relation ontologies.
510860	518420	The modal relation ontology is an extension of BFO which works while working with things
518420	526700	like plans and other kinds of application domains where instantiation is not universal.
526700	531660	All right this is BFO, it's quite small.
531660	535940	I'm not going to go through every single piece of it.
535940	544020	What we have here is what we call the backbone taxonomy of BFO, in other words it is a hierarchy.
544020	550620	Now there are other relations in BFO which are lateral, so these are vertical relations,
550620	552820	they go from the bottom to the top.
552820	557660	So every Fiat surface is a continuous Fiat boundary.
557660	561140	I'll explain some of what that means in a minute.
561140	566540	That is our relation takes you from the bottom of BFO all the way to the very top because
566540	573260	everything, every class in BFO is a subclass of the class entity.
573260	580260	Now but there are relations such as is part of which does not go from bottom to top, it
580260	585460	goes from one side to the other and there are other lateral relations like that.
585460	595460	And an ontology in our view is a backbone taxonomy plus lateral relations.
595460	602220	The taxonomy is ISA and then you have maybe many lateral relations, sometimes called object
602220	608900	properties which connect the classes together in different ways.
608900	616340	So I'll just give you examples, immaterial entity in BFO is a subclass of independent
616340	622860	continuum, a continuum is something which exists through time and independent continuum
622860	629180	is something which does not require a bearer in which it inheres.
629180	636020	Qualities for instance require bearers, so the redness of your cheek can only exist if
636020	637020	you exist.
637020	643020	You are an independent continuum, the redness is a dependent continuum, the redness of your
643020	653940	cheek is an instance of the kind of redness which is a subkind of the BFO kind quality.
653940	664740	Alright so immaterial entities for BFO include boundaries are not made in matter, spatial
664740	669380	regions are also not made in matter and sites.
669380	677060	And for the sake of saving time I would just say that holes with an H are the principal
677060	678380	examples of sites.
678380	686980	So the interior of my mouth, the interior of this room are both examples of sites.
686980	695540	And now I'll take one more example, realizable entity, a quality is not realizable, if you
695540	699460	have a red cheek you just have a red cheek and that's it.
699460	706300	But a potential, a disposition or a function are realizable.
706300	718140	So if the function of my iPhone is to send and receive telephone messages, that function
718140	723620	is realized occasionally, but it's not always realized.
723620	727500	And so for some of the time it's just realizable.
727500	733940	And I'll be talking more about realisables in the course of the rest of this presentation.
733940	737700	And then I'll say something about fiat object parts.
737700	743620	So my arm is a part of me.
743620	750860	But it's not an object, it's a fiat part because the line or the plane between my arm and the
750860	757660	rest of me is a matter of our fiat, in other words our decision.
757660	768340	So fiat parts are parts which reflect decisions, that's somewhat simplified, but you can illustrate
768340	779420	it by saying that everything to the left of this boundary here is the smoking zone, kind
779420	780980	of cockles coming to you.
780980	789180	And then on the right of this line is the non-smoking zone, so that's a fiat boundary.
789180	797940	Now the boundary between Poland and Germany is also a fiat boundary.
797940	807900	All right, so now ontology was used by philosophers, so they tell me, for a long time, starting
807900	818180	in about 1652 in Germany as a Latin translation of, or a Latin word to correspond to the Greek
818180	821060	word metaphysics.
821060	831540	In around 1970 it started to be used by AI and robotics scientists, primarily in Stanford.
831540	837580	And basically they thought that the way to train a robot to behave like a human being
837780	847380	would be to describe human common sense using first order logic and then feed the first order
847380	851500	logic description of human common sense into the robot and then the robot would be able
851500	854420	to mimic human behavior.
854420	861420	And the behavior that they used as their prime example was buying, sorry, not buying salad.
861420	866220	Yeah, buying salad from a salad bar, this was the era of salad bars.
866220	873740	And so the robot would have to know how to pick up tomatoes using plastic implements
873740	877380	without squashing the tomato too much.
877380	882540	And it would have to learn that you can knock into a chair and you don't need to apologize
882540	886900	to the chair, but if you knock into a human being, you do need to apologize.
886900	890740	Those were the things that the robot had to learn.
890740	899820	The formal, the first order logic, formal representation of human common sense was called an ontology.
899820	903420	Sometimes it was called a folk ontology.
903420	908460	And the word ontology, they almost certainly took over from Quine.
908460	914100	So those of you who know some philosophy who are in the room will know that Quine had a very special
914100	924580	approach to ontology, which was, it led to the coinage of this word, folk ontology.
924580	932660	And then the next step was the fact that you have different groups building ontologies
932660	935620	and they needed to be able to compare them.
935620	941060	And so they invented something called knowledge interchange format.
941060	950860	And by a long, long set of stages, the knowledge interchange format eventually became what we now call OWL.
950860	960980	All right, now a famous man in all of this, another Stanford man from this group who is still alive and still selling his thing.
960980	969540	It was Doug Lennett who created a big database called Psyche, which is short for encyclopedia.
969540	973820	He now sometimes calls Psyche an ontology.
973820	987380	And it's full of folk knowledge, such as Albany is the capital of New York State and other such pieces of knowledge.
987380	994900	And as I say, he now calls it an ontology and it's sometimes regarded as being a successful, very large ontology.
994900	998980	It's, BFO is a very small ontology.
999020	1001220	We don't try and describe everything.
1001220	1007220	He is basically trying to describe everything, including the virgin birth.
1007220	1016540	There are facts, not the facts, but the virgin birth is an object which is described at some length in the axioms of Psyche.
1016540	1021620	One big problem with Psyche is that the axioms are not consistent.
1021620	1028060	And Doug Lennett says that's exactly as it should be because common sense is not consistent.
1028140	1031140	Now, BFO is consistently proved, isn't it?
1032900	1034900	All right, come back to that later.
1034900	1045100	So the first really interesting contribution to all of this was by Patrick Hayes in his naive physics manifesto,
1045100	1055380	which described the methodology of robotics that I just hinted at, but he described it in a formal theoretical way.
1055380	1064420	And I believe that it was Patrick Hayes' naive physics manifesto and accompanied by a paper called Ontology of Liquids,
1064420	1068500	which is the true origin of modern day ontology.
1069940	1073100	And they're still really interesting pieces.
1073100	1076340	And then we get knowledge interchange format.
1076340	1081220	Tom Gruber was an important person in the knowledge interchange format world.
1081220	1086620	And he, he, it was the begetter of Ciri.
1086620	1090220	So you all have, Ciri is an ontology app.
1090220	1095940	So you all have ontologies in your pockets, like it or not.
1095940	1098540	And this is what an ontology in Ciri might look like.
1098540	1104340	So you have universal for things like real event or movie event.
1104340	1113140	And then you have instances of things like cities where you might see movies or eat meals.
1113140	1119820	And this is, this is what I was talking about when I said that all classes in BFO have instances.
1119820	1125340	The ancient instances are the particulars, the city's particulars, zip codes and so on.
1125340	1135180	The classes are the universals, which are in the top of the diagram here.
1135180	1141380	All right, now the knowledge information format is being made more and more mature.
1141380	1150420	And Tim Berners-Lee and his colleagues in 1994 introduced the idea of the semantic web.
1150420	1160540	The idea was that now that we have a somewhat coherent version of owl, the web ontology language,
1160540	1165860	which is a kind of formalized version of HTML.
1165860	1169460	It's a long, long gap between HTML and owl.
1169460	1176780	But by 1994, we have something which can serve as the basis for a new kind of web, a semantic web.
1176780	1184300	And it's semantic because it's described using a formal language with a semantics in the classical model, model theoretic sense.
1184300	1188300	And it would be nice if we had a semantic web, wouldn't it?
1188300	1193580	Said the people in the paper in Scientific American in 1994.
1193580	1198100	And I agree, it would be nice, but we don't have anything like it.
1198100	1202220	We have a lot of things going on under the heading of semantic web.
1202220	1205340	Too many things going on under the heading of semantic web.
1205380	1207500	And some of it is good.
1207500	1210380	And then we have the resource description framework.
1210380	1212820	Then we have protege.
1212820	1219540	And then we have the first real version of owl in 2004.
1219540	1222940	And then we have the whoosh of linked open data.
1222940	1229020	And nowadays we have knowledge graphs, some of which is really good.
1229020	1231020	All right, now, but they all failed.
1231020	1236100	All of those ontologies are built, including psych, if you look at it.
1236100	1240500	They all failed.
1240500	1244460	So most semantic web ontologies fail.
1244460	1246580	And it's hard to think of ones that succeed.
1246580	1249180	And there are lots of reasons why they fail.
1249180	1253260	One reason is it's easy to build the damn things.
1253260	1254940	And so everybody wants to build one.
1254940	1257380	And so everybody has their own ontology.
1257420	1262700	And then people say, oh, ontology, no, they're brittle.
1262700	1269060	You use them once, and then you drop them, because they're obviously useless.
1269060	1271220	And so there are many reasons why they fail.
1274140	1276460	There were bad languages out there.
1276460	1278020	I mean, really bad languages.
1280740	1285260	And they didn't understand what definitions were.
1285260	1289220	And people today don't understand what definitions are.
1289220	1292540	And the ontologies were of poor quality.
1292540	1295100	There was no documentation.
1295100	1297420	All the links are broken.
1297420	1299980	Dolce is not bad.
1299980	1302420	I'm not including Dolce under this heading.
1302420	1304980	It's bad under other headings, but then so is BFO.
1307740	1309580	So they're all bad.
1309580	1312100	And this was ontology winter.
1312100	1317540	And I know that we are now, and thanks to this gentleman here,
1317540	1320700	we're in ontology high summer.
1320700	1323540	But there will be another winter.
1323540	1324580	He won't live forever.
1327740	1328660	All right, now.
1328660	1332300	So now I come into the picture.
1332300	1333420	Is he my throat?
1333420	1337540	It's got almost better.
1337540	1341820	In the 1990s, we had the Human Genome Project.
1341860	1345460	Now, the Human Genome Project was many projects.
1345460	1348860	And there were many institutions across the planet
1348860	1355740	who were collecting genomic and proteomic and toxicogenomics
1355740	1358060	and so on data.
1358060	1361900	And they were creating registries for these data.
1361900	1366300	And there was panic because every country
1366300	1368940	had its own collection of registries.
1368940	1371060	And even within a single country,
1371060	1372900	the registries would not be collected
1372900	1376220	and described in a consistent way.
1376220	1381020	And this was going to correct all the goals
1381020	1383780	of the Human Genome Project because it
1383780	1388740	meant that we really didn't have a consistent representation
1388740	1392540	of all the different human and fly and so on genomes
1392540	1395140	and all the proteomes and so on.
1395780	1404820	And so a group of four biologists, all of them
1404820	1410420	high up in the genome project world,
1410420	1413700	one of them was a fly person, one of them
1413700	1416580	was a mouse person, one of them was a fish person,
1416580	1420180	and the other was a person person.
1420180	1424260	And this was in, I believe it was in Montreal.
1424300	1428900	It was either in Montreal or in Melbourne, I forget.
1428900	1429740	They're in a pub.
1431940	1435420	The fly person, Michael Ashburner,
1435420	1439340	who is my hero in every possible way,
1439340	1442020	and he's still alive, but he's very sick.
1442020	1445860	Michael Ashburner was basically the head of the fly genome.
1445860	1449620	And he wrote down on the back of a cigarette
1449620	1453700	packet with a heavy smoker, which is relevant still
1453740	1457220	because he is still alive, but only just.
1457220	1463660	He wrote down a list of gene functions.
1463660	1468740	For instance, cell division might be on the list.
1468740	1471780	And he said, this list is going to serve as the basis
1471780	1476700	for creating order in all of these registers.
1476700	1479060	They're all going to use these words to describe gene
1479060	1479940	function.
1479980	1483100	Now there are, I don't know, 13,000 items
1483100	1486500	on the list of gene functions, or molecular functions
1486500	1487740	they're called.
1487740	1490140	And then there are other items on two other lists
1490140	1497580	for biological processes and for cellular constituents.
1497580	1501900	So that list on the back of that cigarette packet
1501900	1504100	became the gene ontology.
1504100	1508260	And the gene ontology has gone from strength to strength
1508260	1510180	ever since.
1510180	1514660	Upwards of $3 billion have been spent on the gene ontology,
1514660	1518460	not on building the ontology, but on using it
1518460	1520860	to regiment all the data.
1520860	1523660	All the data in biology, practically speaking,
1523660	1528540	gets touched somehow by the gene ontology.
1528540	1530660	All right, so this was the first success
1530660	1531860	in the ontology world.
1532780	1538740	And then because of this success, and because of,
1538740	1542580	well, no, Propagate actually was not causing problems
1542580	1543340	at this stage.
1543340	1547460	They had their own language for building ontologies,
1547460	1549780	which was a simple database language.
1549780	1551460	And I've forgotten what it's called.
1551460	1553940	Can anyone remind me?
1553940	1555460	Anyway, they have their own language.
1555460	1556580	They use OWL now.
1559980	1561740	So they were building ontologies.
1561780	1563180	So we have the gene ontology.
1563180	1563860	It's really good.
1563860	1565460	Now we need an anatomy ontology.
1565460	1567300	We need a fly anatomy ontology.
1567300	1569180	And we need a protein ontology.
1569180	1570780	We need a gene sequence ontology.
1570780	1571700	And they were right.
1571700	1573300	We didn't need all of those things.
1573300	1574940	So they started to build them.
1574940	1578860	But now they started to slip back into the old,
1578860	1580900	oh, I downloaded Propagate.
1580900	1583460	Now I can build an ontology, and then they built crap.
1584060	1591700	In 2002, I received a prize from the German government,
1591700	1599580	a lot of money, to found an institute for medical ontology.
1599580	1603180	I did not know anything about medicine.
1603180	1606540	I did not know anything about biology.
1606540	1610900	Somebody approached me very early on in my institute.
1610900	1613220	I had an institute in Leipzig.
1613220	1619180	And they said, what do you think is the gene ontology?
1619180	1622420	And I had never heard of the gene ontology.
1622420	1625380	And I looked at it.
1625380	1629100	And within 15 seconds, I realized three things.
1629100	1632140	Not all of which turned out to be true.
1632140	1634300	First thing was, within five seconds,
1634300	1638540	I realized that I would spend the rest of my life working
1638700	1640060	on the gene ontology.
1640060	1642460	But that isn't true, this is.
1642460	1645860	But that came into my head immediately.
1645860	1647660	The second thing which came into my head
1647660	1650020	was the gene ontology is exactly what we need.
1650020	1654780	This is what my new institute should be based on.
1654780	1656140	And that came true.
1656140	1664820	And then the third thing that I realized is that it's crap.
1665820	1671340	And it's crap because it's full of logical mistakes.
1671340	1674140	And I could talk for two hours just
1674140	1678140	listing the logical mistakes that they were making.
1678140	1680060	And so I had money.
1680060	1684300	I invited the leadership of the gene ontology to Leipzig.
1684300	1687500	They already knew about me.
1687500	1690860	I think I published a short paper on problems
1690860	1692260	with the gene ontology.
1692260	1696140	And they wanted to come and see what I was doing.
1696140	1700860	So they came and we had a workshop,
1700860	1704340	which was historically interesting for reasons
1704340	1707260	having to do with 2001.
1707260	1712700	And I presented a talk at this meeting.
1712700	1717860	So the gene ontology is called the GO, G-O.
1717860	1722140	And so my talk was called STOP, which
1722180	1726900	is short for smart terminology through ontological principles.
1726900	1729740	And I just went through all the mistakes
1729740	1732700	in the logic of the gene ontology.
1732700	1737700	And after this talk, Michael Ashburner
1737700	1742100	went, took me behind the curtain.
1742100	1746820	And he said, Barry, I will do a deal with you.
1746820	1751260	I will put you in charge of the logic of the gene ontology.
1751300	1753300	And in return, you will promise never
1753300	1758580	to criticize the gene ontology in public.
1758580	1761180	And I did the deal.
1761180	1763540	I sold my soul.
1763540	1767140	And you have just decided to follow up.
1767140	1771460	Oh, well, now that was moved to a new millennium question.
1771460	1774740	Now, I'm only criticizing as it was then.
1774740	1778660	So I think that the gene ontology community will admit
1778660	1781460	that I did clean up the gene ontology
1781460	1785460	from a logical point of view and that that was useful.
1785460	1788180	But in cleaning up the gene ontology,
1788180	1793300	I ended up cleaning up also some of the other ontologies
1793300	1797460	to make them fit the gene ontology in a proper logical way.
1797460	1803340	And that is the oboe foundry, the open biological and biomedical
1803340	1804500	ontology's foundry.
1804500	1806700	It's a collection of ontologies which
1806700	1809940	have been cleaned up logically so that they fit together.
1809940	1815940	And Michael wanted to call it the oboe smithing.
1815940	1819700	But I put my foot down on that.
1819700	1822420	And so we came to the idea of calling it the oboe foundry.
1822420	1827740	The idea is that to build these foundries is really hard work.
1827740	1829460	And it's hard work in the sense that you
1829460	1833420	have to ban things and people with hammers and things.
1833420	1834780	All right, so how do we do it?
1834780	1836260	How do we link them all together?
1836260	1839740	The answer is BFO.
1839740	1843860	So this is the original picture of the foundry.
1843860	1847900	The gene ontology is the yellow part.
1847900	1850860	And at the very top, we have the core of BFO.
1850860	1854260	We have independent continuance such as molecules and cells
1854260	1857860	and organism, dependent continuance such as qualities
1857860	1861780	and function, and occurrence, processes, which
1861780	1865820	corresponds exactly to the three parts of the gene ontology
1865860	1867980	biological processes, molecular functions,
1867980	1869460	and cellular development.
1869460	1873980	BFO is a reverse engineering of the genome's policy
1873980	1877500	to apply to everything, apart from things
1877500	1887140	beginning with Q. And so BFO grew in the course of creating
1887140	1888740	the oboe foundry.
1888740	1890620	And there are now, it's gone up.
1890620	1895300	It's probably about 490 ontologies
1895340	1896780	which are using BFO.
1896780	1900060	And you can find there's a list of users of BFO, which
1900060	1902900	we update periodically.
1902900	1906380	And not all of these ontologies are any good.
1906380	1908820	I wouldn't say that most of them are not very good,
1908820	1912220	but some of them are very good.
1912220	1916420	And the fact they use BFO helps, even
1916420	1918740	if they don't always use it correctly,
1918740	1920980	because at least they're trying to do something which
1920980	1925020	would be interoperable with other ontologies using BFO.
1925020	1926740	And they're also drawing on the talent
1926740	1931580	of people who have experienced building ontologies using BFO.
1931580	1935860	Now, in the beginning, which is to say, until about four
1935860	1939060	or five years ago, that all of these ontologies
1939060	1943700	practically speaking were biology or biomedicine
1943700	1946740	or something like that.
1946780	1956740	So now we have more foundries.
1956740	1960660	And not all of them have anything to do with biology.
1960660	1963340	And I'm going to be talking about the foundry
1963340	1966460	at the bottom, the diode foundry,
1966460	1968740	towards the end of this presentation.
1968740	1974340	So now we have more ontologies built using the BFO principles
1974340	1977180	and following the idea that you have to build ontologies
1977180	1982780	so that they work logically together in at least all
1982780	1983460	of these areas.
1983460	1986940	In fact, there are some more, which I will also talk about.
1986940	1989580	Now, one of them is called the common core ontologies, which
1989580	1993900	you can think of as a set of mid-level ontologies
1993900	1997580	for things like artifacts, events, relations, units
1997580	1998380	of measure.
1998380	2002180	And then we have many, many domain ontologies, many of which
2002180	2006380	have been funded by one or other military project, which
2006380	2009260	have been defined within the framework of the common core
2009260	2016980	mid-level ontology for various sorts of military applications
2016980	2020500	and intelligence community applications.
2020500	2025540	And now my view of what BFO is doing in all of this
2025540	2031340	gets more, I hope, more sophisticated as time goes by.
2031380	2036380	Now I like to compare BFO to the QWERTY keyboard.
2036380	2037900	It's a standard.
2037900	2040740	Lots of people like to use this standard.
2040740	2043180	They become skilled at using this standard.
2043180	2045100	And so you can't change it very easily
2045100	2049940	because you get very bad reactions from existing users.
2049940	2054620	It's not necessarily the best ontology or the best top-level
2054620	2058700	ontology, but it's certainly the most often used
2058740	2059940	top-level ontology.
2062380	2067900	And I think that it's a good idea to think of ontology
2067900	2073380	as being, in part, not an attempt to describe what is,
2073380	2079740	but an attempt to legislate about how we will describe what is.
2079740	2082380	And I'm not sure whether that's helpful,
2082380	2084860	just stated in this form.
2084860	2087020	But I know from my own experience
2087060	2089180	that very often when I'm arguing with people
2089180	2093180	in the course of building ontologies collectively,
2093180	2096700	that I repeatedly reach the point where I say,
2096700	2099460	here we just legislate.
2099460	2101980	It's like driving on the left.
2101980	2105180	It's obviously, it's not obviously the right side
2105180	2108780	of the road to drive, but you need to make a choice.
2108780	2112380	And that choice is a matter of legislation
2112380	2115140	and that kind of choice is very often necessary
2115180	2117220	when building ontology.
2117220	2121980	All right, so the ISO standard will exist pretty soon
2121980	2126980	in four parts, part one and part two already exist.
2127340	2131540	As you can see down there, you spend 118 francs.
2131540	2133620	You can get a PDF copy.
2133620	2136060	That's about 18 pages long.
2136060	2140380	But if you click on the link in the blue box here,
2140380	2141980	you can get it for free.
2142100	2147100	And that's because ISO gives away ISO standards free
2149620	2153900	if they are used to create other standards.
2155220	2159220	And this particular ISO standard, both part one and two,
2159220	2161980	and I assume this will apply to parts three and four,
2161980	2165220	also are used to build other standards.
2165220	2168580	That's what they're there for, and so they're free.
2168580	2170220	So this describes the requirements
2170260	2172220	for being a top-level ontology.
2172220	2176580	Part two describes BFO and shows that BFO
2176580	2178620	also meets those requirements.
2178620	2181700	And this part two, you can also get free
2181700	2184820	by pressing on the blue button.
2186220	2191220	And now this is a part of a list of ontologies today,
2192340	2194780	which is to say within the two years
2194780	2197420	of the appearance of the ISO standard,
2197420	2199660	which are outside biology and medicine.
2199660	2202740	So in other words, where BFO was initially used
2202740	2206180	primarily in the medical and biological sphere,
2206180	2208500	it's now used in many other spheres.
2208500	2212620	Not all of these are post-ISO,
2212620	2216940	but many of them are, and the more important ones are,
2216940	2219140	because people in different domains,
2219140	2221020	not just in biology and medicine,
2222140	2224900	but also in other domains, and I, military,
2224900	2228740	I keep repeating, they need ontology too,
2228740	2231940	and they have discovered that if you need ontology,
2231940	2233940	then you need ontologies, which are organized
2233940	2237260	in some kind of suite, and then you need a top-level
2237260	2240500	in order to give logical coherence to the suite.
2241860	2244740	All right, so let's, I was going to have a slide,
2244740	2247100	which would be my only French slide,
2247100	2252100	which said question, but I forgot, so any question?
2258740	2261100	I have a very ontological question.
2261100	2265620	Your example about the arm being a truantist part.
2265620	2269980	And your arm is kind of independent continuance,
2269980	2272060	even being attached to the body,
2272060	2276700	because it has a concept, this flow of personality.
2276700	2280300	Yes, the issue is exclusively the nature of the boundary.
2281460	2284700	If you tear off the arm, you have an object.
2284700	2288340	It's independent, so the criteria is the connection.
2289340	2291420	I have some for the discussion.
2291420	2293260	All right, we can go back to that.
2294460	2296540	Think of the no-smoking zone.
2296540	2299420	No, that's a boys' case, the boys' one.
2299420	2300260	Well, it's the same.
2300260	2301500	The left side of the room.
2301500	2304980	An arm belonging, and a not arm belonging zone,
2304980	2307020	and the arm belonging zone is up here.
2308380	2310620	And the line between them is here.
2310620	2313900	All right, so now let's go back to the BFO.
2313900	2317460	At the very top, we have continuance and occurrence.
2317460	2322300	So continuance exists through time, occurrence occur in time,
2322300	2325740	and the test is whether something has temporal parts.
2325740	2327460	Your life has temporal parts.
2327460	2331140	Your youth is a temporal part of your life.
2331140	2334940	It's not a part of you, it's a part of your life.
2334940	2336900	You do not have any temporal parts.
2336900	2340020	You have physical parts, or three-dimensional parts,
2340020	2343060	or spatial parts, your arm, for instance.
2344420	2346060	But your youth is not a part of you,
2346060	2347060	it's a part of your life.
2347060	2348780	So the life is an occurrence.
2348780	2350180	You are a continuance.
2351660	2357220	And we now distinguish between independent continuance
2357220	2358500	and dependent continuance.
2358500	2362100	Now, thing, object, and so on are words
2362100	2365140	which can be used to describe independent continuance,
2365140	2368260	and people use words like attribute or property
2368260	2371700	and so forth to describe dependent continuance.
2371700	2374020	We will talk about the different kinds
2374020	2376500	of dependent continuance in a minute.
2376500	2378740	And then occurrence are things like processes,
2378740	2382100	events, happenings, things we go on,
2383420	2386060	sometimes processes in which nothing goes on.
2386060	2390060	So the process of these lights being switched on
2391340	2393740	is an occurrence in BFO terms,
2393740	2395140	because it has temporal parts,
2395140	2398540	namely the morning lights being switched on
2398540	2400660	and the afternoon lights being switched on.
2401660	2404700	This is called a state or a stasis
2404700	2408580	in some people's dialect.
2409740	2414740	And now, qualities and roles are the two big groups
2418580	2421340	of attributes, and the qualities would be something
2421340	2424860	like your temperature, your height, your weight.
2425540	2430540	And every quality, every attribute demands a bearer.
2434140	2437860	So there is no height or weight or temperature
2437860	2439260	unless it is the height or weight
2439260	2441380	or temperature of some object.
2441380	2445660	So the dependent continuance depends on some bearer.
2447820	2449460	And then we have occurrence,
2449460	2451700	and the occurrence also depends.
2452580	2455780	Every event depends on some participant.
2455780	2458380	There are no events, no processes, no incidents,
2458380	2460620	no happenings which take place
2460620	2464020	unless there is some independent continuance
2464020	2467020	in which or between which they happen.
2468900	2472780	And all of these are axioms in the BFO axiom set.
2472780	2476220	And now we have instances which do not belong to BFO.
2476220	2480820	BFO is above the line, and then all the instances,
2480860	2482620	all the cells, all the molecules,
2482620	2484420	all the planets, all the galaxies,
2485380	2487900	are instances of the BFO kind object.
2488900	2493900	And so above the line we have what we sometimes call classes,
2495340	2499300	I think I use the word kind already, types, universals,
2499300	2502100	that really those words all mean the same thing.
2502100	2503340	They are what is general,
2503340	2506220	and then the instances are what is particular.
2506220	2509220	And qualities have instances.
2509220	2513020	Your weight is an instance of the kind weight,
2513020	2515420	and my weight is an instance of the kind weight.
2516820	2521820	And now databases typically are about instances
2521980	2525180	where ontologies again, typically are about types
2525180	2528220	or classes or categories or universals or generals.
2529580	2533740	And then we use the ontologies to tag the instance data.
2533740	2536860	So this is a very, very crude dichotomy.
2536860	2539300	We put the two together, we get knowledge back.
2541620	2545660	And now Ryan Ricucci again, I should change this slide.
2548100	2550220	Is an instance of the kind human being.
2550220	2554220	So that is actually him, it's not a photo of him.
2554220	2555420	Actually you can see it.
2557420	2559140	He is an instance of the kind human being,
2559140	2560820	which is a subkind of the kind object,
2560820	2563780	which is a subkind of the kind independent continuum.
2563780	2565620	And then there are lots of occurrences
2565620	2569940	which are instances of process.
2571620	2576620	And now we have more complicated examples,
2576940	2579780	the Hoover Dam and the resilience of the Hoover Dam.
2579780	2582180	Those are instances.
2582180	2585500	And the decline in resilience of the Hoover Dam over time
2585500	2587740	is an instance of the kind process.
2587740	2590660	So now we have a process, which is a change
2590660	2593020	in an attribute of an object,
2593860	2598660	rather than a process, which is an example
2598660	2602660	of an instantiation of change in an object.
2603620	2606940	Change in attributes means it gets less and less resilient.
2606940	2610740	Change in object means that it loses stones,
2610740	2612940	gradually becomes smaller.
2614300	2616060	So on the left we have what is
2616060	2618180	and on the right we have what happens.
2618180	2620500	And Ryan's here again.
2620540	2624300	So Ryan's temperature is an instance of the kind temperature,
2624300	2629140	which is a subclass or subkind of the kind quality.
2629140	2631660	And Ryan's life is an instance of the kind life.
2632980	2636220	And we can put all of those together with information.
2637700	2642700	So information entities are about all of these other things
2642820	2644940	and they come in different varieties
2644940	2647020	such as name, address, telephone number,
2647020	2649340	and they have instances too,
2649340	2652180	namely Ryan's name, Ryan's telephone number.
2652180	2656900	And there are seven Ryan Rikuchi's known to man,
2656900	2659300	I'm assuming there are at least seven,
2659300	2664300	but there's only one name of this Ryan Rikuchi.
2664940	2667460	It looks exactly the same as the other six names
2667460	2669020	of the other Ryan Rikuchi's,
2669020	2671580	but there are in fact seven names
2671580	2676140	of the seven Ryan Rikuchi and so on.
2676140	2678340	And that's a picture of Ryan, it's not him.
2679460	2680740	That's a picture of him.
2682380	2684380	All right, and then we've done this.
2684380	2685820	Oh yeah, realisables.
2685820	2688460	I mentioned realisable earlier
2688460	2691220	and I'll say something about them again.
2691220	2694420	So dispositions are the most interesting example
2694420	2695260	of realisable.
2695260	2699060	So dispositions are potentials, tendencies.
2699060	2701580	I have a disposition to lose hair.
2701580	2705300	Bananas have a disposition to get ripe and so on.
2705300	2707780	So they're tendencies, potentials.
2707820	2709740	We don't really know much about dispositions.
2709740	2711140	There are many of them.
2711140	2714020	There's lots of junk dispositions everywhere.
2714020	2716180	We don't have names for many of them.
2716180	2721180	Science is about them, diseases are dispositions.
2723060	2724760	Which snow med doesn't quite get.
2726500	2730180	But now some dispositions are really special
2730180	2732580	and that there are fewer of these.
2732580	2735820	And these are the dispositions which crudely speaking,
2735820	2740820	we want to have, we want there to be dispositions like this
2741460	2743900	and we call them capabilities.
2743900	2746740	So your car can play music.
2747620	2749940	I'm assuming you have a stereo in your car.
2751420	2753100	But that's not the function of your car.
2753100	2756220	It's just a capability and so on.
2756220	2758820	So people do the washing up
2758820	2761660	but that's not the function of people.
2761660	2764140	And you can use a screwdriver as a weapon
2764140	2765940	but that's not the function of a screwdriver.
2765940	2770940	So capabilities are dispositions which are like functions.
2771820	2774260	It's good to have them but they're not functions.
2774260	2777140	They are side effects, if you like.
2777140	2779340	And we're still trying to work out
2779340	2780860	a good definition of capability.
2780860	2784260	We don't, capability is not yet a term in BFO.
2784260	2787580	Disposition is in BFO and function is in BFO.
2787580	2790100	Capability, it might take 10 years
2790100	2793260	before we are really happy with the constitution.
2793260	2798260	And so that means that BFO develops slowly.
2801100	2804060	People who know a lot about BFO have been trained
2804060	2808460	to be really evil when it comes to finding arguments
2808460	2809700	against decisions.
2810660	2812820	And so that means decisions are made very slowly
2812820	2815340	and carefully, we'd like to think.
2815340	2818380	All right, now functions are a bit easier.
2818380	2821920	A function is the reason for the existence of its bearer.
2821960	2824600	So the function of a screwdriver is to screw screws.
2824600	2826760	That's why we have screwdriver.
2826760	2829760	The function of cars is to transport passengers.
2829760	2831640	Function of eyes is to see.
2831640	2834360	Function of your digestive system is to digest.
2836200	2837800	Functions are easy.
2837800	2841280	Capabilities are like functions but they're difficult.
2841280	2843840	And one definition of biological capability
2843840	2847840	is that they are dispositions
2847840	2850160	which contribute to the realization
2850200	2851680	of biological functions.
2853520	2855520	So you can go away and think about that.
2857560	2859720	All right, so we get the same kind of picture.
2859720	2863920	So we realize the function of John's eye
2863920	2866840	in John's seeing, which is a process.
2868480	2872200	And now only certain kinds of entities have functions.
2872200	2874400	And I don't know of any kinds of entities
2874400	2876560	other than the ones on this list.
2876600	2881160	So perhaps worker beings have functions.
2882240	2886640	And queen bees and worker ants and so-called carpenter ants.
2886640	2890360	I don't know, but organisms in general do not have function.
2891640	2893960	It is not my function to do on top of it.
2896760	2900640	I'm sure about that, even though it sometimes seems
2902320	2904320	not to be the case for me.
2904320	2907560	All right, now maybe companies, organizations have functions
2907560	2911080	but they're a bit like colonial organisms in this way, maybe.
2912960	2914520	So there are many more capabilities
2914520	2915680	than there are functions.
2917640	2919920	And this is how it might look.
2919920	2922120	The future BFO might look like this.
2923280	2925600	So we have dispositions of the broad class,
2925600	2927200	capabilities are a subclass
2927200	2930880	and then functions are a subclass of that subclass.
2931880	2934680	But now there are two kinds of realizable entities.
2934680	2939560	In addition to dispositions, we also have roles.
2939560	2942000	Now dispositions are defined
2942000	2944480	on the basis of the physics of the bearer.
2944480	2948720	So the reason why I have a disposition to go of all
2948720	2953920	is because of the physics of my head's metabolism, I don't know.
2954120	2956120	I don't know why I have that.
2957120	2962120	Roles are defined externally by decisions,
2963120	2968120	by demarcations, by stymings of contracts and so forth.
2969120	2976120	And so roles are the products of social organization, basically.
2976120	2979120	Being employed is a role, being fired is a role.
2979120	2983920	You can be employed because your contract
2983920	2986320	that you signed four days ago comes into effect
2986320	2987720	at midnight in a week.
2988720	2992720	You do not change physically at all at midnight in a week,
2992720	2996920	at all in a way which is relevant to being an employee,
2996920	3000120	but you have the role at that point in time
3000120	3002120	because that's what the contract is.
3003920	3006320	So roles are not a matter of physics,
3006320	3009320	they're a matter of a certain entity being
3009320	3012720	in certain social institutional circumstances
3014120	3017520	and in virtue of being in that set of circumstances
3017520	3022320	such as being the object described in an employment contract
3022320	3024320	you acquire or lose a certain role.
3025320	3028320	And this just repeats what I just said.
3028920	3032520	Now interestingly, there are roles which form systems.
3032520	3037520	These are examples of two-sided mutual dependence among roles,
3038520	3043520	which are rather simple ones and then there are more complicated ones.
3043520	3046520	Now, BFO has been used in many areas.
3047520	3053520	One area where we still do not have anything like usable ontology content
3053520	3054520	is the law.
3055520	3057520	We're working a little bit on economics,
3058520	3060520	but we don't have a good ontology of law.
3060520	3065520	This may be one way of starting the ontology of law in terms of role.
3066520	3070520	And there is an ontology called de-act, document act ontology,
3070520	3074520	which is following something like this line.
3074520	3079520	That may be where we start, but it's not established itself
3079520	3084520	in the way that it should establish itself as the ontology of law,
3084520	3085520	which is what we want.
3086520	3093520	And this is the authority ontology, or an authority ontology,
3093520	3095520	which again might serve as a starting point.
3097520	3099520	All right, so this is another picture of BFO.
3099520	3102520	I left out all the space and time and location.
3103520	3105520	I just have the things that we've talked about so far,
3105520	3107520	like qualities, roles and so forth.
3108520	3113520	And this gives us another opportunity to have question.
3116520	3119520	What are your thoughts on the genesis?
3136520	3140520	Yes, so Ryan Rikuchi's name is not just a string of letters.
3140520	3145520	It's in so many ways, it's not just a string of letters.
3145520	3150520	It came into existence at a certain time in history for instance.
3151520	3154520	And the string of letters existed prior to that.
3154520	3157520	There are almost certainly older Ryan Rikuchi somewhere out there.
3157520	3159520	I'm not sure about the Ryan part.
3159520	3162520	There is certainly other Rikuchi.
3164520	3166520	But I'll give you a puzzle.
3166520	3172520	John's credit card number is token for token identical
3172520	3175520	with Frank's social security number.
3175520	3178520	They're not the same number, they're not the same entity.
3179520	3184520	But regardless of strings, they are by definition the same string.
3185520	3189520	So this is the social objects get complicated very quickly.
3191520	3192520	Yes.
3192520	3193520	Yes.
3205520	3210520	So every child has at least two parents, I guess.
3210520	3212520	That would be a first guess.
3214520	3216520	But it doesn't go in the opposite direction.
3216520	3220520	Not every adult male human has a child.
3220520	3222520	Not every adult female human has a child.
3222520	3225520	Not every pair of adult males and females have a child.
3225520	3228520	So here you have one-sided dependence.
3228520	3232520	The example I gave on the screen were two-sided dependence.
3236520	3238520	Oh no, yes, you're right.
3238520	3241520	Not all of these dependence relations are going to be roles.
3243520	3249520	Now, when you adopt though, if you adopt a child, that would be a role.
3251520	3252520	Yes.
3252520	3256520	So having a child is biology, which is physics in the end.
3256520	3263520	Adoption is partly biology and partly physics, but the core of it is a role kind of phenomenon.
3263520	3268520	And there might be other similar role phenomena having to do with parents and children.
3268520	3274520	So, well, I don't want to think too hard about it.
3275520	3277520	Kidnapping.
3278520	3281520	All right, any more?
3282520	3286520	So we've seen this picture already, but now we have green at the top.
3286520	3291520	And I just mentioned that we have a granularity axis.
3291520	3296520	So molecules of small cells and cellular components are larger than organs and organisms are larger.
3296520	3300520	And then we have populations which are not on this chart.
3300520	3305520	But we've been adding to the elbow foundry over the years.
3305520	3307520	This is still the 2005 version.
3307520	3311520	Even then, this is something of an idealization even then.
3311520	3318520	First of all, we added the environment ontology, which covers all granularities because there are molecular environments.
3318520	3321520	There are cellular environments or environments of organisms.
3321520	3326520	Organisms, there are environments, all populations, tribe and so forth.
3327520	3334520	And then there is the ontology for biomedical investigations.
3334520	3341520	OB, which is one of the best of all the oboe foundry ontology when it comes to the quality of the engineering of the ontology.
3341520	3343520	And this is about experimental processes.
3343520	3346520	So it goes on the occurrence side.
3346520	3359520	So what happened was that the biologists in the world of the genome project knew that they needed ontologies of biological entities, processes, cells and so forth.
3359520	3365520	But then they discovered at a certain point in time, and I was at the meetings where this discovery was made.
3365520	3367520	It wasn't my idea.
3367520	3373520	They discovered that they needed ontologies to describe the experiments.
3373520	3395520	And they needed ontologies to describe the ontologies to describe the data coming from those experiments because how you interpret a biological argument or a biological hypothesis or a biological conclusion in a biological paper depends on the methods which were used to reach that conclusion.
3395520	3399520	And so you needed to have an ontology of experimental methods.
3399520	3401520	And that's what OB is.
3401520	3424520	It's an ontology, not just the methods, but also equipment, hypotheses, parameters, inputs, outputs, data, data processing, material processing processes.
3424520	3429520	Sometimes in biology, you do experiments by looking at data and processing.
3429520	3430520	And you have an output.
3430520	3432520	You have input is data, output is data.
3432520	3440520	Sometimes you do experiments by taking material as input, and then you have data as output data about that material.
3440520	3447520	Then they realized that they needed an ontology of the evidence that would be generated by an experiment.
3447520	3465520	So there is something called the evidence ontology, which distinguishes, for instance, between conclusions which were drawn by direct observation, conclusions drawn from computational computation.
3465520	3472520	And then I think one of them is something like inference drawn from paper.
3472520	3479520	So that it's not a very, not all of the codes in the evidence code ontology describe strong evidence.
3479520	3488520	The idea is that if you have multiple kinds of evidence for a given biological conclusion, then you should be able to document that in something like an ontology.
3488520	3493520	All right, so then we, so we have the ontology for biomedical investigation.
3493520	3517520	And we realized, and here I was involved directly in the decision making, we realized that we needed terms for things like footnotes, or sentences, or vowels, or instructions, or papers, or grants, or grant submission documents and so forth.
3517520	3525520	And so they were happily using protege to add all of these terms into OB.
3525520	3533520	But then I said footnotes are not biological. They don't belong in a biology ontology.
3533520	3541520	So it's not only biological investigations with biomedical investigations which use footnotes or vowels.
3541520	3548520	And so we, we started building an information artifact ontology.
3548520	3558520	And here too, I'm not sure this is a good thing, but here too I played a role as this decision. I named the ontology for biomedical investigations incidentally.
3558520	3572520	Originally it was a joke name for FUMO or something, functional genomics, something, FUGO, something.
3572520	3581520	And I said, no, it's not only about functional genomics. It's about all biomedical investigations. And so we should call it the ontology for biomedical investigations.
3581520	3586520	In fact, we should have called it the ontology for investigation because it can be applied to physics.
3586520	3594520	Maybe we should have called it the ontology for data and material processing activities because it can be applied to manufacturing.
3594520	3603520	And in fact, here you have inputs which are material and outputs which are material and that that kind of input output chain falls under OB2.
3603520	3606520	But anyway, we can't have everything.
3606520	3624520	But we could have, now what would we call it, the information what ontology, if we call it the information ontology, we commit what I argue for legislative purposes, not because it's true.
3624520	3626520	Although it is true.
3626520	3631520	I argue that you should never use mass nouns when building an ontology.
3631520	3648520	So if you think of sugar, sugar can mean the chemical substance, which is a kind of abstract universal, or it can mean two lumps of sugar, or it can mean all the sugar on the planet, or it can mean all the sugar ever in the history of the universe.
3648520	3660520	And it's completely ambiguous what sugar means. But if you say lump of sugar, which is not a mass noun, it's a count noun, then you have something with the meaning of which you know.
3660520	3671520	And if you look at snowmen, not today, but in the early days of snowmen, you find that they made mistakes because they used mass noun by blood.
3671520	3680520	And they didn't because they were using a mass now they made certain characteristic errors which people make when they use mass now. So I say never use mass now.
3680520	3683520	Information is a mass now.
3683520	3688520	And indeed, if you use the mass now information you make mistakes.
3688520	3698520	So people who say that the genome is information are making a mistake.
3698520	3714520	A sequence, which is created by a sequencer and a computer and printed out or printed on a screen or just stored in a database. That is a piece of information.
3714520	3727520	The other structures which that piece of information in somebody's hard drive picture or represent is not information it's biology molecules in patterns.
3727520	3739520	So many people, maybe fewer now than then but in that era, the idea that genomics was a branch of computer science or information science was very popular.
3739520	3758520	We wanted to work against that. And so we kind I coined the term for the ontology information artifact ontology so that we made it clear that we're dealing with artifacts, which is to say things made by human beings, streams, databases,
3758520	3766520	footnotes, grant submissions, addresses names, telephone numbers and so on. These are all information.
3766520	3772520	And that's what the information artifact ontology is all about.
3773520	3789520	I mean the information artifact ontology terms are representing instances, which are about instances of disease processes and all of the other things that biologists care about.
3790520	3804520	And that's the key term in the information artifact ontology and information artifact ontology is roughly speaking a copyable entity, which is about something.
3804520	3814520	We have modular suites of ontologies, like the over foundry. What do they bring us? Well, first of all, we have a division of labor.
3814520	3824520	I will do proteins and you will do RNA. And we won't that we will thereby have a clear boundary between what you do and what I do.
3824520	3831520	This also means that anyone who needs a protein ontology knows where to find it because it's called the protein ontology.
3831520	3834520	That's another rule that people often break.
3834520	3846520	So instead of calling their ontology the spider affordance ontology or, well, let's say the spider activity ontology in honor of the building that we're in.
3846520	3853520	Instead of calling the spider activity ontology, they call it the Santa Barbara something.
3853520	3861520	And nobody knows what it is. And so nobody uses it outside Santa Barbara.
3861520	3874520	All right, then it because people are working on modular suites of ontologies, they're using BFO over and over again, they become experts at using BFO over and over again.
3874520	3890520	Because somebody is in charge of the protein ontology and is known to be in charge of the protein ontology that somebody has a special reason to be devoting a great deal of scientific expertise and effort to make sure that protein ontology is done properly.
3891520	3908520	Also, users will be motivated to use the ontology and to find errors in and report those errors because if they're using the ontology they want the ontology to be good.
3908520	3915520	If it's if it's going to be good and you find an error you have to tell the ontology editors about the error.
3915520	3926520	That makes it better, which means gives you an even better motive for using it yourself in a kind of virtuous circle.
3926520	3932520	And I won't go through this. So there have been four versions of BFO.
3932520	3938520	Version number one was released in 2001.
3938520	3945520	And it nothing changed for six years but then we added the information artifact ontology.
3945520	3954520	And once we did that we realized that we needed a term in BFO, which would be the parent of information artifact.
3954520	3956520	And we didn't have one.
3956520	3960520	And so we created one and I'll talk about that in a minute.
3960520	3972520	In 2015, I'll to came out and so we did an overhaul of BFO 1.1 to make it conform with BFO 2.
3972520	3988520	And then in 20 in 2020, we released BFO 2020, which was released to take account of the fact that in the ISO standard data that so there is data associated with the ISO standard.
3989520	3999520	About the first order logic formalization of BFO and also about the consistency proof, which is part of the accompanying data to the ISO standard.
3999520	4006520	And so that is the core for the changes which we made in 2020 BFO itself.
4006520	4009520	The picture that you saw has changed hardly at all.
4009520	4012520	The definitions are a bit tidier.
4012520	4017520	The most important changes that we now have a first order logic formalization.
4019520	4021520	Alright, so that's the picture again.
4021520	4026520	And now I'm going to talk about how we dealt with information artifacts.
4026520	4031520	And so we've already seen this.
4031520	4034520	There are two kinds of specifically dependent continuance.
4034520	4047520	There are qualities, which include patterns, pattern of a chessboard, for instance, would be a pattern and a pattern in the BFO sense, which is a continuum.
4047520	4052520	And then there are realisables like functions and roles.
4052520	4057520	And now notice that we say that these are specifically dependent continuance.
4057520	4063520	In the Middle Ages, the philosophers who dealt with these questions had various axioms.
4063520	4068520	One axiom was accidents do not migrate.
4068520	4071520	So they had substances and they had accidents.
4071520	4082520	And one famous Italian metaphysician concluded, this was in the time of the plague, concluded from this axiom that the plague does not exist.
4082520	4085520	Because accidents do not migrate.
4085520	4089520	They couldn't see the bacteria or the virus.
4089520	4090520	I don't know if you are.
4090520	4092520	And so they didn't know that they were there.
4092520	4096520	They just saw the accidents, presumably the symptoms and so forth in the people.
4096520	4100520	Since accidents don't migrate, there can be no play.
4101520	4113520	This argument was seriously put forward and it's the motto for an Italian novel of some repute called You Promise Those Both Me.
4113520	4118520	Anyway, I recommend the novel and the motto is about why the plague does not exist.
4118520	4126520	Now the plague does exist because viruses can move around and bacteria can move around.
4127520	4131520	But specifically dependent continuance cannot migrate.
4131520	4133520	I cannot have your headed.
4133520	4135520	I cannot have your height.
4135520	4137520	I cannot have your name.
4137520	4142520	I cannot have your capabilities.
4142520	4151520	Even if my capabilities are qualitatively identical to your capability, my capabilities are mine and your capabilities are yours.
4151520	4155520	They are specifically dependent on their bear.
4155520	4163520	But there are some dependent continuance which can migrate and they are generically dependent on their bearers.
4163520	4168520	And an example would be, well, the PDF file on my laptop.
4168520	4170520	I have a certain PDF file.
4170520	4176520	I send it to Ryan and now the very same PDF file is in two places.
4176520	4178520	It's copyable.
4178520	4187520	And if I now destroy the PDF file on my laptop, the PDF file still exists because it's on his laptop.
4187520	4190520	And that's what we mean by generically dependent continuance.
4190520	4201520	We mean continuance which are dependent upon some independent, continuant bearer such as a hard drive, but which are not specifically dependent on any bearer.
4201520	4204520	All you need is one, but it could move around.
4204520	4206520	Typically there will be many copies.
4206520	4213520	So a novel is a specifically dependent, is a generically dependent continuance because the novel exists in many copies.
4213520	4221520	Emails that you send are generically dependent continuance because they exist both on the sender and on the receiver side.
4221520	4226520	And DNA sequences are generically dependent continuance.
4226520	4244520	Two, both in both senses, both the sense of the sequence in the sequence database and the sense of sequence as meaning a molecular pattern, which is copied as we all know trillions of times in every human being.
4244520	4248520	Alright, so that's where we get information artifacts into BFO.
4248520	4259520	They're all children of the new kind, new type, new universal that we introduced in BFO 2.0, namely generically dependent continuum.
4259520	4271520	Now we did not introduce the new kind information artifact because generically dependent continuance are entities which are domain neutral.
4271520	4286520	You can in principle find generically dependent continuance in any domain, but information artifacts are restricted to domains where there are entities like people who make copies of things like email.
4286520	4296520	And so we added the term generically dependent continuance because it was of the appropriate level to go into a top level ontology.
4296520	4302520	And now I don't think I'll go into this one maybe.
4302520	4308520	So in we now realize that we needed to add a new relation.
4308520	4314520	So let's suppose you make a plan, you maybe write it down, and it's in your head.
4314520	4322520	And you're going to deal and you have a team of people ready to follow the specification that you dictate.
4322520	4336520	Then the plan is concretized in patterns of ink on your printed document where you've been writing out or written document.
4336520	4342520	In other words, it's made concrete, it's turned into something which is more like a specifically dependent continuum.
4342520	4352520	Patterns of ink, different piles of ink, raised levels of ink, we call letters of the alphabet.
4352520	4360520	And also when you read the plan specification in your head, and there's something like a concretization of the plan in your head.
4360520	4368520	And that's what you will realize that will be the starting point for your realizing plan when you say you read it and you say to yourself I like this plan.
4368520	4375520	Let's realize this plan and then you tell all your underlings to go forth and realize.
4375520	4381520	And so we added the relation of concretization to BFO and the whole story looks like this.
4381520	4389520	So we have generic independent continuance, then there are information entities, there are things like gene sequences on the other side, the biological side.
4390520	4393520	And these are all examples of information artifacts.
4393520	4401520	So a symphony by that we mean that which is concretized in the score.
4401520	4408520	And sort of in the performance too. The performance is not so important, it's the score which matters.
4408520	4416520	And poems are the same.
4416520	4425520	And then we have information bearing entities, which are material entities, they have patterns according to what has been written onto them.
4425520	4434520	The pattern on your hard drive is an information quality entity, which is a kind of quality, which is a kind of specifically dependent continuum.
4434520	4443520	And then the information content, so the information artifact is concretized by the information quality entity which depends upon the information bearing entity.
4443520	4447520	All right. And that's the definition.
4447520	4456520	So an artifact is something created deliberately and an information artifact is an artifact that can be the bearer of information.
4456520	4462520	All right. Now we have more time for question. Anybody.
4462520	4469520	So my question is regarding the, you mentioned that UFO is a realist.
4469520	4470520	Yeah.
4470520	4478520	But we're wondering like, which isn't do you think it's the presentism or the universe.
4478520	4482520	We're wondering maybe you can affect all the plants that are there.
4482520	4489520	So I hate four-dimensionalists. And so there are some people who develop four-dimensionalist ontologies.
4489520	4494520	And we could talk for an hour about this.
4494520	4499520	And the oil industry actually is the principle hunting ground of these people.
4499520	4512520	I was a, for a time, a hero of our oil engineers in Norway because they were being forced to use a four-dimensional ontology and it made their life much more difficult than it needed to be made.
4512520	4518520	I don't like four-dimensionalist ontologies. And I think that they are incoherent.
4518520	4538520	And it's interesting that of all the ontologies which have been, which have some sort of a track record, namely psych, dolce, BFO, GFO, UFO, sumo, they're all three plus one dimensional.
4538520	4542520	In other words, three spatial and one temporal ontology.
4542520	4546520	None of them are four-dimensional. Four-dimensional ontology says that everything is a process.
4546520	4551520	So you are a process of, what's your name? Eric.
4551520	4557520	You're a process of continual erring. Continual erring going on over in that corner.
4557520	4566520	And that's silly. And it's really silly if you want to apply it to oil industry plant because the plant is not a process.
4566520	4573520	Also maybe like you have a present system that you just have a present and growing growth that you have a present and a past.
4573520	4583520	Yeah. So I guess I'd lean a little way towards the block version, but I left open the issue of reality in the future.
4583520	4591520	And I also left open the big Q question, which if we got time, we will actually address.
4591520	4595520	I was wondering about the generically dependent continuum.
4595520	4600520	On the one hand, we have some very simple examples of patterns, which are universal.
4600520	4605520	And maybe the chessboard pattern could be regarded as a universal. It's simply.
4605520	4612520	But if you take the pattern, which is the fields of Norway, that's too complicated to be a university.
4612520	4618520	It has to be thrown together by accidents. We know that it was by accidents and glaciation.
4619520	4622520	Many millennia, I guess.
4622520	4626520	Now, Tolstoy's war and peace was more like the Theodos of Norway.
4626520	4631520	And even a relatively short poem is more like Theodos of Norway.
4631520	4638520	And even the president of Italy, the president, the office is more like the Theodos of Norway.
4638520	4649520	Now, where is the line between Theodos of Norway type things on the one hand and universal, like square or triangle or vowel or...
4649520	4652520	I don't know. DNA.
4652520	4656520	Well, DNA, I think is on the Norway side of things.
4656520	4659520	So the DNA molecule is a universal.
4659520	4667520	But this DNA molecule, for which we need 36,000 lines of code or something in order to capture, that is not the universe.
4667520	4672520	Even though it's repeated many times, war and peace is repeated many times.
4672520	4674520	But that doesn't mean it's the universe.
4674520	4679520	War and peace is an instance. It's an instance of the type novel.
4679520	4684520	A copy of war and peace is an instance.
4684520	4688520	It's an instance of the type copy of war and peace.
4688520	4692520	But copy of war and peace is not going to count as a real university.
4692520	4696520	It's going to be a defining class. It's going to be a convenience class.
4701520	4705520	Okay, so now I'm going to talk about foundry.
4705520	4708520	So this is a hub and spokes picture that I like.
4708520	4712520	The idea is that when we build a foundry, we're networking ontology.
4712520	4715520	So the networking arises in a number of different ways.
4715520	4719520	So first of all, you start with the hub, which in many cases is BFO.
4719520	4723520	And then you define domain ontology terms by using the hub.
4723520	4727520	So you'd use the word object as a starting point for defining a cell.
4727520	4733520	And then you create all the different kinds of cells and you package the whole thing as a cell ontology.
4733520	4737520	And you do that for many other things. And it is being done for many other things.
4737520	4744520	But now in each case, when you introduce a new term and thereby a new class in your ontology,
4744520	4746520	you define that term.
4746520	4752520	And very often you will use terms from other ontologies in your network.
4752520	4759520	And all of these terms, both the terms as defined and the terms as they appear in definitions,
4759520	4762520	will be associated with IRI.
4762520	4766520	So they will be networked together within the internet.
4766520	4772520	But also they will be networked together because the same term might be used in 17 different definitions
4772520	4774520	from 14 different ontologies.
4774520	4782520	And so there are networking effects across ontologies through terms and through internet connections.
4782520	4790520	And the oboe foundry now has reached the point where it can maintain the ontologies as a whole,
4790520	4793520	where you make one change in one term.
4793520	4801520	Then that means that when that change is made, it may have impacts on the 14 other places where that term is used.
4801520	4810520	And they can control how these impacts are spread through the entire network in a very impressive way.
4810520	4816520	All right. Now, how do we go about building a top-level ontology?
4816520	4830520	So I was in a meeting in somewhere in, I can't remember where it was, in Europe, not long ago.
4830520	4832520	And there was a poster session.
4832520	4837520	And in the poster session, there were seven young ontologists.
4837520	4844520	All of them were working on slightly different aspects of, I don't know, lasers or something.
4844520	4850520	And they all had sort of interesting results and interesting bits of a laser process ontology.
4850520	4854520	But they were all working independently of each other.
4854520	4860520	And I said, it's clear that you are all working on the same arena of topics.
4860520	4865520	You should get together and build some kind of a foundry.
4865520	4869520	Or you should find other people who have already built a relevant foundry.
4869520	4874520	So you want to build a foundry.
4874520	4880520	You've decided that you don't want to continue to build small snippets of bits of ontology for yourself.
4880520	4884520	You want to do things which will contribute to science in the public sense.
4884520	4894520	And so you choose your top level, which should be small and well-documented and so forth.
4894520	4897520	So BFO might be chosen.
4897520	4900520	And your top level should have understandable definitions.
4900520	4907520	We're working on that, but we think we do pretty well, given the complexity of some of our needs.
4907520	4909520	It should be well formalized.
4909520	4912520	Well, we think we're doing pretty well on that front.
4912520	4914520	And this is the crucial thing.
4914520	4918520	It should be easily extendable by domain ontology.
4918520	4920520	So you need to know what a laser is.
4920520	4922520	Well, a laser is an object in BFO terms.
4922520	4924520	What is laser light?
4924520	4926520	What is the operation of a laser?
4926520	4929520	Well, you can find BFO terms for those things too.
4929520	4936520	And you can define them in such a way that you link the terms in your laser ontologies together through BFO.
4936520	4943520	And then because you're using BFO, you'll have people like me who can look at what you're doing and tell you that you're doing it wrong.
4943520	4945520	Or right even.
4945520	4952520	Where if you have your own secret methodology, then probably no one will ever tell you that you're doing it wrong.
4952520	4959520	And BFO also changes only slowly, which means you can trust it to have a half-life of five years.
4959520	4962520	And even then the change will be quite small.
4962520	4970520	And BFO is aggressively quality controlled.
4970520	4978520	And there are various principles that we impose upon the ontologies in the foundry.
4978520	4980520	So you have to have a top level.
4980520	4990520	There are some foundries which have been developed, which didn't have top levels, but they had relatively short half-lives.
4990520	4997520	You want to create ontology modules which are consistently developed,
4997520	5008520	which means that each group of developers of ontology A will be comparing notes with the developers of ontologies B, C and D,
5008520	5013520	because they are in neighboring domains to ensure consistency.
5013520	5020520	But you will also be communicating with the BCD people to make sure that there are no overlaps.
5020520	5028520	And the reason for that is that you want everybody to know where you find the ontology for proteins.
5028520	5034520	And if there are protein ontology terms in the RNA ontology or in the cell ontology,
5034520	5041520	then that will mean that people will be disappointed when they find that they've been using the protein ontology for seven years.
5041520	5050520	And no one told them about those proteins which, for forgotten reasons, were dealt with in cell ontology.
5050520	5059520	So, non-overlapping ontology modules which are developed in such a way as to be consistent.
5059520	5070520	And then what you need is users who will find gaps and errors and who will help you create useful documentation.
5070520	5079520	And I talked already about the virtuous cycle which arises when you have many users who point out mistakes in your ontology or gaps in your ontology.
5079520	5086520	And for that, and this is also an important principle, you need an effective feedback loop.
5086520	5098520	So, I don't know how it is today, but in the olden days, the gene ontology had a commitment to its users that they would have a response to feedback within 48 hours.
5099520	5105520	Now, the response was not always an answer to the question, but it would be at least an answer of the form.
5105520	5113520	We are now exploring the question you raised, but very often they gave answers to questions directly.
5113520	5118520	The most common answer would be the term you are looking for is already there.
5118520	5122520	It's just four lines lower down and three lines across.
5122520	5127520	So, effective feedback loops between the users and the developers.
5128520	5132520	And that too creates a virtuous cycle.
5132520	5135520	All right, so there are many foundries.
5135520	5142520	This is the digital construction ontology's foundry which goes on in Finland.
5142520	5151520	And they have all of these ontologies which are about bin, which is building information management, modeling.
5151520	5154520	Anyway, they have a lot of data.
5155520	5166520	And they have these ontologies which are developed in just the way that I am recommending as modules in a BFO framework.
5166520	5182520	And you can see the BFO here is a pancake shaped or amoeba shaped grouping in blue at the top and then all the building terms descend from there.
5182520	5190520	So, asset roll descends from roll, for instance, legal person roll descends from roll.
5190520	5201520	We have a disaster response ontologies foundry which has been developed in France for the French disaster relief agencies.
5201520	5206520	And now most importantly, we have the dialogue foundry.
5206520	5211520	I say most importantly, partly for purely chronological reasons.
5211520	5222520	So, we've been working for 12 years to get the dialogue foundry ontologies recognition on the part of the...
5222520	5228520	So, dialogue means the Department of Defense and the intelligence community.
5228520	5232520	So, the work was ignored or forgotten.
5232520	5237520	The working group was very active and then it died and then it became active again.
5237520	5250520	Finally, in June of this year, just a few days ago, we got definitive approval from high level officers,
5250520	5260520	not just of the intelligence community, but also from the Department of Defense, Digital and Artificial Intelligence Office,
5260520	5269520	formally recognizing the foundry projects or the foundry project plus a number of sub-projects
5269520	5279520	put forward by various DoD and IC agencies with a bit of help from ontology people on the academic side like me,
5279520	5284520	that they were going to be accepted as the standard across the DoD and the IC.
5284520	5289520	Now, next comes NATO.
5289520	5292520	That's next week. Actually, no, next week.
5292520	5297520	There is a NATO meeting at which this idea will be presented.
5297520	5303520	We only get 15 minutes in a three-day meeting, but it's the beginning.
5303520	5306520	And who knows what comes after NATO?
5306520	5309520	Well, this is what it might look like.
5309520	5317520	So this is the daiko verse like universe, but daiko is the Defense Intelligence Core ontology.
5317520	5325520	This is a group of ontologies, some of which don't exist yet, but there are teams of people who are building them or planning to build them,
5325520	5329520	some of which are already in use, the green ones are already in use.
5330520	5337520	And the idea is that the one of the ideas is that if you have a foundry like this,
5337520	5340520	and this is a small version in different colors of the same foundry,
5340520	5348520	then this will create not just interoperability among data, but also cross-organizational knowledge.
5348520	5358520	So people working in the process activity ontology world will know to some degree what's going on in the geographic features domain
5358520	5363520	because they're both building ontologies which use the same top level and they form part of the same foundry,
5363520	5368520	which means that they communicate with each other at regular meetings.
5368520	5377520	So I think I'd better say something about time.
5377520	5386520	So as you can hear from my throat, I won't be able to do this forever.
5386520	5390520	I'm not planning on any changes, but there might be changes in the future.
5390520	5394520	And so we have a kind of succession plan for BFO.
5394520	5404520	So the replacement king of ontology or king of BFO more precisely, you will hear from him in a few minutes.
5404520	5409520	He's going to give a short talk about current developments in the BFO world.
5409520	5415520	His name is John Beverly and he was just hired in our department in Buffalo.
5415520	5425520	Before that he worked for the Applied Physics Lab, which is a very large physics faculty which runs on government money.
5425520	5437520	They do physics for the government, for the DOD, but they have an ontology group which is populated primarily by former students of mine.
5437520	5446520	And he is one of them, but he's coming back to Buffalo because he believes in this succession plan.
5446520	5455520	But there is another member of the BFO succession, which he will not be talking today, but his name is Alan Rottenberg.
5455520	5461520	Now Alan Rottenberg is a pain in the neck, but he's also brilliant.
5461520	5466520	So John Beverly is brilliant. He's not a pain in the neck.
5466520	5470520	Alan is a pain in the neck because he wants to get everything right.
5470520	5478520	Owl has a problem. It's very hard to get time right in owl.
5478520	5485520	And BFO is not a four-dimensionalist ontology. It's a three plus T dimensional ontology.
5485520	5490520	In other three spaces, of course, one central dimension, we want to get time right.
5490520	5497520	One solution is not to use owl, but to use first-order logic. It's easy to get time right using first-order logic.
5497520	5503520	It's very hard to get time right in owl because owl will only allow two-place relations.
5503520	5516520	So you can say John loves Mary, you can say Mary loves John, but you can't say Mary loves John yesterday or tomorrow in owl because then you have a three-place relation.
5516520	5522520	Now Alan first of all understands owl probably better than anybody else.
5522520	5529520	So he plays three-dimensional chess with owl where the chess games extend into five years into the future.
5529520	5532520	So he knows what problems lurk behind the scenes.
5532520	5543520	And he knows that the current treatment of time in BFO actually and in any other ontology based on owl is problematic.
5543520	5552520	And for that reason, we released a version. It wasn't an official release.
5552520	5564520	It was a version released for public debate, which just deleted all the temporal relations which are affected by these out problems from the ontology.
5564520	5575520	So the classes were there, there is a hierarchy was there, all the time relations involving processes were there, but all the time relations involving occurrence were deleted.
5575520	5581520	And people hated that and they said, oh, BFO, it's become chaotic.
5581520	5588520	In fact, we were trying to be very, very careful and avoiding logical problems which we knew lay down the road.
5588520	5595520	And if I had more time, I could describe those logical problems.
5595520	5600520	Now we have found a way which keeps everybody happy.
5600520	5609520	So we're going to have a release version and John Beverly will talk a little bit about that when he joins us in half an hour or so.
5609520	5617520	But let me just describe Alan's solution. Alan's solution to these problems is indeed a solution.
5617520	5622520	No one will like it very much because it's more complicated than what they like to see.
5622520	5633520	But the solution goes like this. You can't say John does Mary at time t because that's a three place relation.
5633520	5640520	But if you define a new relation called loves at some time.
5640520	5652520	And another universe, another new relation called loves at all time, then you can say John loves Mary at all times and that's a two place relation.
5652520	5658520	Loves at all times is a two place relation. John and Mary are the two places fillers.
5658520	5667520	And John loves Mary sometimes is also a two place relation where John and Mary fill the two places in loves at all times.
5667520	5680520	Now you can generalize that you can generalize it to include John loves Mary at all times when the lights are switched on or when the grandmother is aware of you can generalize it but it gets more complicated.
5680520	5694520	And so no one likes it. And so Alan is working with John Beverly and with other people on finding a solution to this temporary relation problem that everyone will be happy with.
5694520	5705520	Now, the old version, before we deleted some of the relations in this inspection version worked.
5705520	5713520	So it had logical, small logical time bombs, small time loss built in, but it worked.
5713520	5717520	No one noticed. No one had examples where these time bombs made any difference.
5717520	5722520	Very hard to find examples where these time bombs make a difference and they're usually quite artificial.
5722520	5734520	So it's not a big problem in the practical sense. It's only a problem in the logical sense. If we want to get the logic right, we have to address temporalized relations.
5734520	5740520	So I'm not going to say anything more about that. I'm just filling you in on what goes on behind the scenes.
5740520	5752520	The piece that John Beverly will talk about in a few minutes is logically in good shape and it's also practically in good shape and the sense that you can understand it quite quickly and it seems natural.
5752520	5762520	All right. So now summary on BFO. I seem to remember that I have 200 slides here. So I'm not going to finish.
5762520	5771520	So BFO is very small. It evolves slowly. It has an active user forum. It has a really large user base and there are lots of people who know how to use it.
5771520	5780520	And we've seen the examples of suites. We've seen the Common Core ontologies. We've seen the principles. Talked about this already. I don't want to do all of this again.
5780520	5788520	This is more about the dates when these decisions were made. I keep repeating this. I must like it.
5788520	5796520	And this is one more piece that the Office of the Director of National Intelligence has approved recommending BFO as the standard.
5796520	5805520	And the problem is if you work with the intelligence community, you can't always know what they're doing and they can't always know what to do.
5805520	5818520	But he's created a space where ontologies can be developed with all the classification rules in place and maintained by people who know what they're doing.
5818520	5826520	And now the final piece in this puzzle is that Ryan Rikuchi over here, put your hand up, Ryan.
5826520	5839520	Ryan Rikuchi is in charge of a working group in the Department of Homeland Security to do for the Department of Homeland Security, which is, I don't know, 32 agencies or something like that.
5839520	5850520	What the DoDIC ontology working group is doing for the Department of Defense and the intelligence community. And he knows what he's talking about and he's very effective.
5850520	5861520	And E2 is going to be using BFO and it's going to be covering areas like infrastructure, cyber security and so forth. Do you want to add anything?
5861520	5864520	You might as well.
5864520	5878520	Well, I would say that we have two successful test events. We're working prototype for surveillance-enabled pattern recognition for sensors to be able to detect and reason autonomously about things in the air and take out,
5878520	5889520	human-in-a-loop tasks and then automate analyst queries for the routine things. We don't want to ask again and again that we can use computers to do instead of people because people are prone to error and so on.
5889520	5898520	And the second thing that we have going, we have five different ontology lines of effort that are not just thinking about it or talking about it. We're off the whiteboard into practical application.
5898520	5912520	And the second thing is working out in person-centric ontology so we can reason about the different types of people that come into our care to automate determining what they're entitled for resources and how we consume resources to then inform a classic optimization problem.
5912520	5921520	What to do with people in the walk order with the transportation logistics and self-capacities and medical care to treat people as expeditiously safe and humanely as possible.
5921520	5940520	So those are the type of problems that we're working on, time out with practical applications that we want to extend and then across the agency we're thinking about how to go about the next making sense of this big conglomeration of agencies that all have overlapping missions but very unique roles and we share work and leverage the virtuous cycle of development.
5940520	5941520	Thanks very much.
5941520	5947520	I will be here till the end of these two weeks.
5947520	5957520	So he's already given, I was going to say take away two of my students by giving them jobs.
5957520	5974520	The way of viewing an ontology is that it's a computable lexicon. So a lot of what I've been talking about is getting people in different groups to use terms consistently, which means to use terms that have definitions which people share.
5974520	5991520	And the terms are almost, no, I was in very many cases, ordinary terms that ordinary people understand. In biology you have, you very quickly move into very technical terms, but even there they are terms which ordinary biologists understand.
5991520	6020520	And this is one big difference between ontology and databases. So if ontology is a regulation of the lexicon and if the lexicon changes rather slowly, then that means that you can find in ontology a kind of infrastructure which will last for many years as long as
6020520	6032520	people who use those terms in that way last databases on the other hand move very quickly, but database technology database hardware and database software changes very quickly.
6032520	6047520	And you can make up database codes and new database structures also rather easily, which means that it doesn't provide this kind of foundation over long periods of time, which we find if we look at the ordinary lexicon.
6047520	6064520	So ontology tries to have the best of both worlds wants to have the kind of logical coherence that you find in database structures but conjoined with the kind of stability that you get from the lexicon.
6064520	6079520	And then that is how ontologies get to be used in large enterprises, including the Department of Defense. In large enterprises currently where data models dominate of one sort or another, the data models that people understand in one
6079520	6094520	enterprise will be completely unintelligible to data models used by people in such to the users of data model from other parts of the enterprise and every large enterprise data manager realizes these problems.
6094520	6113520	The Department of Defense realizes them. And that's one of the reasons for the tiny enthusiasm that they'd be begun to show about introducing ontology. I mean, in the Department of Homeland Security, there is a lot of enthusiasm, but in the Department of Defense, it's taken 12 years to get where we are.
6113520	6134520	All right. Now, so we solve the failures of interoperability across large organizations by introducing terminological consistency. So common terms used consistently with common definitions, both in natural language, not dictionary definitions, but form but semi formal natural
6134520	6160520	definitions and then logical definitions in logical languages like our own and first order logic, for instance. And so I've said something about this. Now, let's look at definitions, which is the important part. Now, if you look at definitions, and this is true in many, many highly reputable organizations, they are really impressingly bad.
6160520	6178520	They don't really know what a definition is commonly. So they're worse than dictionary definition. But look at many of the W3C publications and see what they, how they define basic words. So RDF, Army's resource.
6178520	6190520	Look at what, look at the definition of resource in the official RBS specification. It's not, it doesn't tell you anything. Maybe because the word resource is not meant to tell you.
6190520	6205520	All right. So we want formal definitions for computer reasoning and we want natural language definitions for human use. And in both cases, we want real definitions. Now, what is a real definition?
6205520	6216520	Well, it, I'm talking now about definitions for the terms in the ontology, not for the relations. In other words, not for the object, just for the terms in the is a hierarchy.
6216520	6226520	Definitions should be each definition should be a statement of individually necessary and jointly sufficient conditions.
6227520	6239520	Now, what does that mean? Well, look at the definition for a triangle at the bottom here. A triangle is a closed figure. It has exactly three sides. Each of these sizes straight and it lies in a plane.
6239520	6248520	It may be that we have too much here, but we can simplify it a little bit. But all of these are necessary.
6249520	6256520	In other words, every triangle is a closed figure. It is necessary of a triangle that it is a closed figure.
6256520	6266520	And all of them together are jointly sufficient. That is to say anything which satisfies everything on the right hand side is a triangle.
6266520	6273520	Now, this is what a definition should look like how to build definitions like this is coming next.
6273520	6287520	So this is a slightly simplified version of what we had before. And now here we have a certain form X is a triangle means X is a closed figure, which.
6288520	6307520	And now we can assume that a closed figure is going to be the parent of triangle in the backbone taxonomy of geometrical figures, along with square and the other ones rectangle circle.
6307520	6309520	They're all closed figures.
6310520	6321520	Now that's the key to a good definition. A good definition is a definition which specifies of its parent term.
6321520	6332520	What are the necessary features that an instance of that parent term has to have if it's going to be an instance of the term on the left.
6332520	6334520	So I'll repeat that.
6334520	6338520	I won't. I will repeat it in a minute.
6338520	6348520	So in the philosophical position, the which clause is called the specific difference.
6348520	6355520	The term that you're defining is called the species and the parent term is called the genus.
6355520	6364520	An example would be human being is defined as an animal.
6364520	6368520	That's the parent term, which is rational.
6368520	6371520	That's what Aristotle said.
6371520	6383520	Every definition should be an Aristotelian definition in just that sense when it's a definition of a term, except now we come to the the following issue.
6383520	6400520	Namely, there are some terms which are just so basic that you can't specify a parent term that would give you any additional meaning in the way in which human is a rational animal gives you additional meaning to the term animal.
6401520	6408520	Or triangle is a closed figure, which has exactly three sides, gives you additional meaning to closed figure.
6408520	6409520	You can't do that with object.
6409520	6422520	I can't explain what an object is by telling you that it's a thing which is object or thing which is connected or an entity which just one object is too basic.
6422520	6434520	And so every ontology is going to have primitive terms, which cannot be defined, and they will come at the very top of the relevant or near the very top of the relevant ontology tree, the back bone taxonomy.
6434520	6446520	And it's not that we are completely dumb or dumbfounded when it comes to primitive terms, but we can only provide what we call elucidations.
6446520	6448520	They're not definitions.
6449520	6456520	They are just necessary conditions, plus maybe some examples of how the term is to be used.
6456520	6459520	All right, now this is the recipe.
6459520	6469520	For a good definition, you have a parent term, you have the term you want to define, which is B in this case, and you have the specific difference, which is C.
6469520	6474520	And then you define B as an A which sees.
6474520	6487520	And this is, it's such a simple approach, but 99% of the definitions in otherwise highly reputable ontologies do not use this recipe.
6487520	6496520	And the recipe has the neat consequence that writing definitions is a good check on the quality of your taxonomy.
6496520	6504520	But also the taxonomy that you're building is a good step towards creating good definitions for the terms it contains.
6504520	6509520	So you, in principle, you get the best of both worlds.
6509520	6513520	All right, and now it doesn't work. That's the problem.
6513520	6518520	It doesn't work in every case, but this too is not necessarily a bad thing.
6518520	6520520	So this is the Aristotle example.
6520520	6521520	This is what we want.
6521520	6524520	We want our trees to look like this.
6524520	6536520	Every term or every class in the is a taxonomy has exactly one parent except for the very highest classes, which don't have any.
6536520	6546520	As long as every class has exactly one parent, we can use the Aristotelian rule for definitions without any problems.
6546520	6552520	But some, some people build ontologies and they have diamonds in them.
6552520	6556520	And by that, I do not mean diamonds in the rough.
6556520	6564520	I mean diamonds, which cause the rough and and the Department of Homeland Security has ontologies, which are full of diamonds.
6564520	6569520	And no, actually, which are suspiciously many times.
6569520	6574520	And so a dam is a water asset, but it's also an electric power asset.
6574520	6576520	Now, that's not quite true.
6576520	6580520	Not every dam is an electric power asset.
6580520	6586520	And so we have, we can easily chop away this one and just have water asset.
6586520	6588520	Every dam is a water asset.
6588520	6596520	And that's another general rule in good ontology building is always means every.
6596520	6599520	So if you say a is a B, you mean every a is a B.
6599520	6602520	If you say a is part of B, it's slightly different.
6602520	6610520	If you say a is part of B, you mean every a is part of some B.
6610520	6621520	And if you say a has part B, you mean every a is such that there is some B, which is a part of it.
6621520	6631520	And then the sum goes before a hidden instance of so a is part of B means every instance of a has some.
6631520	6635520	It is part of some instance of B.
6635520	6637520	This is called the all some rule.
6637520	6647520	So if there is a, it's just all every for other relations for lateral relations is all some every a is part of some B.
6647520	6650520	Every a is just adjacent to some B.
6650520	6651520	And so on.
6651520	6652520	All right.
6652520	6657520	Now, I think I'll just give you pictures of knowledge across.
6657520	6660520	Oh, there's Ryan again.
6661520	6664520	And more knowledge graphs.
6664520	6673520	And so knowledge graphs give you some of the benefits of ontology together with some of the benefits of databases.
6673520	6689520	Now, one of the reasons why the military in America and the AI part of the military in America are so interested in ontologies is because they think that on knowledge graphs are the way forward in collecting useful data.
6689520	6698520	And to have well behaved knowledge perhaps it's very good to have coherently structured ontologies.
6698520	6703520	And this is the physics part.
6703520	6711520	I think I so should I finish with the physics part of the AI part.
6711520	6713520	I guess I'll do the physics part.
6713520	6718520	So although I can't do physics in 13 minutes.
6718520	6723520	So, since the beginning of BFO.
6723520	6728520	And actually, you were doing something very similar with your snow med question.
6728520	6736520	I would receive requests from people that they needed a BFO conformant ontology of mathematics.
6736520	6740520	And my response was, you don't need an ontology of mathematics.
6740520	6742520	You just go to the supermarket.
6742520	6743520	You can get your money.
6743520	6744520	It's already there.
6744520	6745520	It's all been done.
6745520	6746520	There are no problems.
6747520	6754520	And but now we need at least an ontology of units of measure.
6754520	6775520	And if we're going to understand quantum physics, I use the keyword, then we're going to have to understand the mathematics of quantum physics because there isn't really much that you can understand outside mathematics when you're trying to do quantum physics.
6775520	6779520	I think that at the moment, maybe things will get better.
6779520	6789520	So we wrote this paper and I just mentioned that I co-authored with this man, Jobs Landkreber, a book which came out last year.
6789520	6804520	Basically the book about the ontology of systems, both simple systems such as the solar system and a laptop and complex systems such as your digestive system or the government of Ukraine.
6804520	6810520	You can't predict the behaviors of complex systems for complex reasons, which we document in the book.
6810520	6817520	And therefore you can't build a Turing machine which can emulate the behaviors of complex systems.
6817520	6830520	And therefore artificial general intelligence, that is to say artificial intelligence, which would be equal in power or superior in power to human intelligence is impossible.
6830520	6833520	That's the argument of the book.
6833520	6839520	All right, so in order to build a quantum physics ontology, we need to build a mathematics ontology.
6839520	6843520	And mathematics is basically set theory.
6843520	6848520	But understanding set theory ontologically is not trivial.
6848520	6851520	And we didn't want everything to be set.
6851520	6859520	So we wanted there to be some things which are part of the object domain of mathematics, which are not sets.
6859520	6872520	Because there has to be a starting point for building the set theoretic structures, which are the various kinds of structures which mathematicians like to deal with.
6872520	6875520	And we call these things monads.
6875520	6881520	And we give examples of monad zero on constant a variable and a geometric point.
6881520	6888520	We're not very happy with this selection, but we are confident that there has to be something like monads.
6888520	6891520	We're going to build coherent ontology mathematics.
6891520	6896520	Everything else is set theory or everything else is what you need to get set theory off the ground.
6896520	6903520	For instance, the set constructor, which takes a mathematical predicate and turns it into a set.
6903520	6905520	This is the structure corner.
6906520	6909520	So this here is a function.
6909520	6912520	Every mathematical function has this structure.
6912520	6915520	Every mathematical operator has this structure.
6915520	6920520	That's the field of real numbers and there are other fields of natural numbers and so forth.
6920520	6922520	None of these things fit into BFO.
6922520	6927520	What we're doing, and we have to do something like this, we have BFO.
6927520	6932520	We don't create math O as a child ontology BFO.
6932520	6934520	We create it as a sibling.
6934520	6937520	And we have physics, which will be a sibling of math.
6937520	6940520	But there are some areas of overlap.
6940520	6946520	So when it comes to physics, we have experiments and we have experimental results.
6946520	6951520	They fall under BFO experiments are processes in the BFO send.
6951520	6956520	So there are connections, even with the quantum world connection.
6956520	6961520	All right, so these are functionals and operators.
6961520	6966520	And now we already have some ontology to deal with some physics.
6966520	6969520	These are just for, I'm sure that there are others.
6969520	6972520	OB is already a BFO conformant ontology.
6972520	6975520	The open energy ontology is BFO conformant.
6975520	6980520	The physics based simulation ontology is very small, but it is also BFO conformant.
6980520	6985520	And the ontology of physics for biology, it wants to be BFO conformant.
6985520	6988520	So we may use some of the content here in due course.
6988520	6991520	But for the moment, we're working on the fundamental.
6991520	6993520	And this is where systems come in.
6993520	6999520	So systems form the heart of the AI book, simple systems and complex systems.
6999520	7003520	And we think that there are three important kinds of physics entity.
7003520	7008520	In other words, important in the sense that we believe that if we get three kinds of entity right,
7008520	7015520	then we will have dealt with all of the important kinds of entities in the realm of physics.
7015520	7017520	System entities are three kinds.
7017520	7019520	They're a system element.
7019520	7023520	When it says weight here, it does not mean the measurement weight.
7023520	7027520	It means that an actual lump of metal used with a weight.
7027520	7031520	And so we have elements such as weights or people or planets.
7031520	7033520	Planets are parts of systems.
7033520	7039520	Then we have interactions between these elements such as electromagnetic interaction or gravity.
7039520	7047520	And then we have the system itself, which is in the case we had in mind in the paper, is a weight on a spring.
7047520	7050520	So the harmonic oscillator, you have a spring and you have a weight.
7050520	7053520	And the weight goes up and down harmonically.
7053520	7057520	And the harmonic oscillator is a very important physical system,
7057520	7060520	which is found also in biology and chemistry everywhere,
7060520	7067520	and which we document in the paper ontologically as our example of classical physics.
7067520	7069520	And then we have magnitudes.
7069520	7071520	This was always a very hard problem.
7071520	7078520	And we still haven't corrected completely for BFO how to understand things like velocity or acceleration.
7078520	7084520	Because for complex reasons, BFO only allows continuance to have quality.
7084520	7091520	It doesn't allow qualities of processing and velocity sound like the quality of a process.
7091520	7095520	And so we just introduced the idea of a process.
7095520	7097520	We don't call it a process quality.
7097520	7099520	We call it a process factoristic.
7099520	7103520	That is a term which was already being used by the Eauble foundry.
7103520	7107520	And acceleration would be an example of a process characteristic.
7107520	7110520	And I think what we're doing here is pretty coherent.
7110520	7114520	It's not rocket science, but it's at least coherent.
7114520	7118520	And then finally, we have models.
7118520	7121520	And this brings it back to the oscillator.
7121520	7125520	So if you have a spring and you have a weight at the end of spring,
7125520	7127520	you pull the weight, it will vibrate for a while.
7127520	7130520	And then because of friction, it will come to rest.
7130520	7133520	That's a real thing, a real process.
7133520	7136520	But physics doesn't describe real processes.
7136520	7143520	Physics describes idealized, even mathematicized counterparts of those real processes.
7143520	7148520	So a force oscillated with dampening is never realized in the real world.
7148520	7157520	Just as the mathematical closed figure called a circle is never realized in the real world.
7157520	7159520	There are no circles.
7159520	7163520	Meaning there are no perfect circles in the mathematical sense.
7163520	7166520	And similarly, there are no force oscillators.
7166520	7173520	What we mean by force oscillator, the idealized case described by the equations of physics.
7173520	7177520	So models are important because they describe the idealization.
7177520	7183520	And now we do experiments in order to work out whether these idealizations in fact capture reality.
7183520	7187520	And if they do, we get our little green badge and we're a physicist.
7187520	7191520	And if they don't, we go back to work to do more experiments.
7191520	7199520	So models on this view are essential features of physics because physics deals not with reality, but with models.
7199520	7200520	All right.
7200520	7202520	And so, well, we've seen all of that.
7202520	7205520	These are some examples of systems.
7205520	7213520	So systems, simple systems like these are such that the system behavior can be predicted using classical physics.
7213520	7218520	And so the behavior of simple systems may be church during computable.
7218520	7230520	In other words, it may be that we can have computer can emulate the simple system, but complex systems are not going to be emulated by a machine.
7230520	7234520	And these are the, these are some examples of complex systems.
7235520	7238520	And the New York Stock Exchange.
7238520	7240520	And this is the book again.
7240520	7243520	And then now we're back to physics.
7243520	7246520	So magnitudes in classical physics are described here.
7246520	7249520	And I don't have time to go through this.
7249520	7252520	This is our ontology of magnitudes.
7252520	7253520	Oh, sorry.
7253520	7257520	This is what we had before just with examples that you can read now.
7257520	7263520	This is more on models, what models are, how we build them.
7263520	7266520	The models are built by people.
7266520	7271520	And that's all classical physics, roughly pre 1906.
7271520	7276520	Modern physics is general relativity theory plus quantum physics.
7276520	7286520	And the heart of quantum physics anyway is the idea of a Hilbert space, which we can already fit into our original mathematics ontology.
7286520	7298520	So a Hilbert space is a sub kind of the kind metric space, which is sub kind of the kind vector space, which is a sub kind of the kind algebraic structure, which is a sub kind of the kind structure, all of that is in the mathematics ontology.
7298520	7301520	And you can't do quantum physics without physics.
7301520	7307520	And, well, this is more, you can't do quantum physics without the idea of inner product.
7307520	7311520	And without the idea of operators and projectors and so on.
7311520	7320520	And so the Feynman said, if you think you understand quantum mechanics, you don't understand quantum mechanics.
7320520	7327520	They say, in fact, I think what he really said was this, that we can safely say that nobody understands quantum mechanics.
7327520	7330520	Now, what did he mean?
7330520	7332520	So what are the domains which we can understand?
7332520	7335520	Now, I think we can understand the domain of mathematics.
7335520	7337520	Mathematicians understand mathematics.
7337520	7339520	There's no mystery about that.
7339520	7342520	They build it and they understand.
7342520	7346520	What else can we understand apart from mathematics?
7346520	7353520	Answer is the domain of everything which falls under BFO.
7353520	7355520	That's it.
7355520	7360520	And so that's why we can't understand quantum mechanics because it doesn't fall under BFO.
7360520	7364520	And so some mathematics common sense.
7364520	7367520	So what is the common sense domain?
7367520	7370520	Now, we didn't make this up.
7370520	7373520	There is a certain amount of theory on common sense.
7373520	7376520	It goes under the name primary theory.
7376520	7385520	Primary, and this actually gets deep into the heart of ISOIC to want to create that too.
7385520	7389520	Robin Horton was an anthropologist who lived in Africa.
7389520	7391520	I think he was born in Africa.
7391520	7398520	He worked on the worldviews of different cultures, both Western and non-Western.
7398520	7404520	And he decided that there were two kinds of worldviews which you can formulate as theories.
7404520	7415520	One is primary theory and that is a theory which is about the common sense world.
7415520	7422520	The boats and snowballs and leaves and food and drinks and so on.
7422520	7428520	The things that you need in order to survive and behave in an everyday world.
7428520	7436520	And then secondary theory are theories which you only find in one culture or another which are not shared by every culture.
7436520	7449520	Examples of secondary theory would be quantum mechanics, Catholicism, Pythagoreans, which is the view that everything is made of nuns.
7449520	7454520	Panpsychism, which is the view that everything in the universe is conscious.
7454520	7458520	And solipsism, which is the view that only I exist.
7458520	7461520	All of these are secondary theories.
7461520	7466520	And now primary theory, common sense, is definable.
7466520	7469520	It's that which all cultures share.
7469520	7475520	And that is, roughly speaking, what you find in BFO, roughly speaking.
7475520	7477520	Mathematics is in the one side of...
7477520	7480520	Well, little bits of mathematics, but not much.
7480520	7484520	There are some cultures which are very small amounts of mathematics.
7484520	7487520	And so it goes like this.
7487520	7489520	You can study this while we...
7489520	7492520	Can we see if we can contact John?
7492520	7494520	He should by now be...
7494520	7496520	Oh, I'm here.
7496520	7497520	So that's John.
7497520	7498520	No, fine.
7498520	7499520	Yeah, this is...
7499520	7500520	Hi, I'm John.
7500520	7502520	Well, let me find the slides for...
7502520	7503520	Here we go.
7503520	7504520	Hi, everybody.
7504520	7506520	John Beverly, that's me at the top.
7506520	7507520	And also on your screen.
7507520	7512520	I'm going to be talking today about implementations of BFO.
7512520	7516520	Because there's sometimes some confusion about the difference between BFOs
7516520	7522520	used as a broad data model and BFO in its actual, you know, everyday hour.
7522520	7526520	And so I'm here to shed some light and illuminate that.
7526520	7530520	As you see, John Beverly, professor at the University of Buffalo,
7530520	7534520	colleague of Barry's, speaking here in capacity,
7534520	7537520	VP for the National Center of Ontological Research
7537520	7540520	and representative of the BFO community.
7540520	7541520	So here's what we'll do.
7541520	7545520	I'm going to talk about BFO ontology repo updates,
7545520	7548520	repo, a GitHub repo, because we have a lot of our...
7548520	7550520	We have our artifacts on a GitHub repo.
7550520	7554520	I'll also talk about clarification around some implementations of BFO,
7554520	7556520	what it means to implement BFO.
7556520	7557520	I'll do this real quick.
7557520	7559520	I know you guys probably want to go eat some pizza.
7559520	7560520	I saw the schedules pizza day.
7560520	7562520	I won't keep you from it.
7562520	7566520	Then we'll talk about a core BFO file and then temporal extensions.
7566520	7568520	And this is where it's going to get interesting.
7568520	7570520	So if you know anything about BFO,
7570520	7573520	you can probably already tell why it's going to be interesting.
7573520	7576520	And if you don't, well, hold on to your horses.
7576520	7577520	Okay. Here we go.
7577520	7578520	Clarifications.
7578520	7581520	So there has been some confusion concerning which BFO file
7581520	7583520	and the repo folks should use.
7583520	7585520	And that, that makes sense.
7585520	7586520	If you go to the GitHub repo,
7586520	7589520	I have a screenshot of what it used to look like over there,
7589520	7590520	right here on the right.
7590520	7591520	It's a little confusing.
7591520	7595520	You got the 21838-2, definitely ISO.
7595520	7597520	Good reference to ISO.
7597520	7600520	But you also see file or directories like common logic model
7600520	7604520	and a bunch of the files in different formats named BFO.
7604520	7606520	It's a little hard to parse sometimes.
7606520	7607520	Not the best documentation.
7607520	7608520	This is not knocking Alan.
7608520	7609520	I love Alan.
7609520	7611520	Alan did amazing work, but you know,
7611520	7612520	documentation is important.
7612520	7615520	So we're clarifying, cleaning this up.
7615520	7618520	So here's, here's the new structure.
7618520	7620520	And I'll walk through it real quick.
7620520	7624520	The development team, myself included work to clear this up
7624520	7625520	that is easier to understand.
7625520	7626520	It's on a fork right now.
7626520	7628520	I'm going to merge it shortly,
7628520	7630520	but here's the structure over on the right.
7630520	7631520	It should be clear.
7631520	7634520	And if it's not, hold on.
7634520	7639520	So we know that BFO is described in the standard
7639520	7641520	and described in this building ontology,
7641520	7643520	the basic formal ontology book,
7643520	7646520	describes a theory that outstrips the,
7646520	7650520	the, the expressivity of owl, right?
7650520	7652520	Which is what we typically use when we,
7652520	7655520	we're dealing with BFO or any ontologies, really.
7655520	7660520	So there, there are lots of different implementations of BFO.
7660520	7664520	Some of which more accurately, accurately represent or reflect
7664520	7667520	that broader model that is described in that,
7667520	7669520	the ISO standard in the text, right?
7669520	7672520	Common logic is one implementation of it.
7672520	7673520	It's a formal language.
7673520	7674520	It's a fan.
7674520	7675520	It's, I think it's actually Cliff,
7675520	7678520	but it's a representative and one of among your family
7678520	7682520	for first order logics that's used in computational reasoning.
7682520	7683520	First order logic.
7683520	7687520	This is a rather, a rather clearer, I would say,
7687520	7691520	if I had to measure a clear representation of first order logic
7691520	7694520	in this syntax, common logics, a little tough to parse,
7694520	7696520	usually used for documentation.
7696520	7700520	L-A-D-R, this is a less known syntax,
7700520	7702520	the library for automated deduction research.
7702520	7704520	This is used in model checking,
7704520	7706520	in particular with MACE for improver nine,
7706520	7710520	which Alan Ruttenberg had used to generate the consistency proof
7710520	7712520	for the broader theory.
7712520	7714520	Just, just pointing at these,
7714520	7718520	you probably don't care that much unless you're a nerd about logic like I am,
7718520	7723520	but what you're probably more interested in is this OWL file here.
7723520	7726520	So, so this is what folks typically mean,
7726520	7728520	or when they're talking about BFO in the wild,
7728520	7731520	they want to, they want to focus on this specific file.
7731520	7734520	So here, here's the updates, guys.
7734520	7736520	Okay, okay, calm down.
7736520	7737520	I see you're too excited.
7737520	7738520	Let's relax.
7738520	7739520	Okay, here's the updates.
7739520	7744520	So over here, the BFO implementation in OWL,
7744520	7746520	we're switching the name.
7746520	7747520	It's the core file.
7747520	7750520	Now BFO core OWL, and it,
7750520	7753520	it's switched from the previous file name,
7753520	7755520	which was not, wasn't the,
7755520	7759520	wasn't the full, full gamut of temporal and space and time and all that,
7759520	7763520	but it was called the BFO 2020 without some all times dot OWL file.
7763520	7767520	And this was basically all the classes, all the relations, et cetera,
7767520	7773520	but without the all and sometimes object properties.
7773520	7776520	Okay, so this, you see here, this again,
7776520	7781520	all the BFO classes in the 21A, or 21A38-2,
7781520	7786520	and all the binary relations that do not require a third index for time.
7786520	7787520	That's the important part.
7787520	7788520	Okay.
7788520	7789520	Why?
7789520	7791520	To remain computationally tractable.
7791520	7795520	OWL doesn't permit representing relations that hold between more than two things.
7795520	7800520	I assume you know that, but if not, blow in your mind, right?
7800520	7802520	John is next to Sally, fine and OWL.
7802520	7805520	John has armnet on Tuesday, not fine and OWL.
7805520	7806520	We can't represent that.
7806520	7810520	So representing time with only binary relations has been a persistent challenge
7810520	7813520	for the ontology community in general.
7813520	7818520	We have been working on this, on attempts to, to represent this information.
7819520	7824520	One of those attempts was Allen's temporalized relations strategy.
7824520	7825520	There are others.
7825520	7828520	There's, for instance, the Common Quarantology Suite,
7828520	7832520	and their team has developed an approach to this, this model,
7832520	7836520	a set of modeling patterns that kind of revolves around Stacey's,
7836520	7840520	which is like unchanging dependent continuance over time
7840520	7842520	that are related to histories and whatnot.
7842520	7845520	So here's some examples, temporalized relations,
7845520	7849520	location of at all times, located in at all times, the inverse.
7849520	7852520	You also have some times versions of these.
7852520	7856520	On the other hand, Stacey's, you just kind of get to use the same object properties
7856520	7858520	that you would see in the relations ontology, for instance,
7858520	7863520	location of and located in just with some more formal structure somewhere else
7863520	7865520	in your design pattern.
7865520	7871520	So temporalized relations, that strategy that was, that Allen developed,
7871520	7874520	it provides a semantically rich representation of time
7874520	7877520	and it does support sophisticated reasoning about time,
7877520	7880520	but it's hard to use, real hard to use.
7880520	7884520	Folks at a challenging time, like just, just trying to figure out when
7884520	7887520	located in at all times holds versus located in at some times.
7887520	7890520	And I can tell you, having worked in industry with folks,
7890520	7894520	subject matter experts who would, you know, task to represent stuff
7894520	7897520	with ontologies or like their domain with ontology,
7897520	7901520	they would typically just defer to using the sometimes relation
7901520	7906520	because it's the weakest and because they wouldn't know when all times held,
7906520	7909520	like when is something a part of something else at all times,
7909520	7913520	harder to say than when something is a part of something else at some times.
7913520	7916520	The problem is sometimes is, is logically weak.
7916520	7918520	It says almost nothing.
7918520	7919520	You don't get transitivity.
7919520	7921520	You don't, you don't get much, right?
7921520	7923520	It's just basically a tag.
7923520	7925520	The stasis approach developed by CCO,
7925520	7929520	it provides a semantically weak or weaker version of representation of time,
7929520	7933520	but it is easier to deploy and there are fewer mistakes and users have another
7933520	7936520	easier time understanding how to use it.
7936520	7941520	This is not just motivated by like practical considerations of users,
7941520	7945520	though, like sometimes some domains, I mean, domains do treat time differently.
7945520	7949520	Economists treat time as discrete physicists that continuous and some don't
7949520	7951520	even treat time at all.
7951520	7955520	Not all domains need require semantically rich representations of time.
7955520	7958520	Like a lot of folks in the logo foundry, for instance,
7958520	7962520	use disease ontologies to just tag articles with terms and dates.
7962520	7965520	They just do not need that kind of robot.
7965520	7969520	I mean, maybe in an ideal world, if they were really using reasoning over,
7969520	7972520	over these sorts of temporal structures, they, you know,
7972520	7975520	they would need this kind of robust semantics, but they don't.
7975520	7976520	They just kind of tack stuff.
7976520	7980520	So it's a lot, it's, it's a lot of work to get the time right.
7980520	7984520	So they're not interested in doing that, especially for their specifically for
7984520	7985520	their use cases.
7985520	7989520	Now other, other foundries do need this corner representation of time.
7989520	7993520	The industrial ontology foundry terms, they use temporalized relations.
7993520	7998520	They need this semantic, this ability to reason more than just tagging data or
7998520	8000520	date or terms and date times.
8000520	8003520	They need that semantic structure that can run reasoners over when they're
8003520	8007520	handling manufacturing and engineering content.
8007520	8008520	Okay.
8008520	8013520	So upshot here that temporalized relations strategy.
8013520	8018520	The thing with the all times and the sometimes that was previously part of
8018520	8020520	the approved version of BFO owl.
8020520	8025520	So that was like, when you use, when you were in conformance with BFO,
8025520	8029520	you were you, and you were using the owl file, you had to use that one.
8029520	8030520	Again, tough.
8030520	8032520	People used it incorrectly.
8032520	8033520	Got a lot of pushback.
8033520	8036520	We're taking a more flexible approach now.
8036520	8039520	Now we are backing up a little and saying, depending on your use case,
8039520	8043520	depending on your domain, you might need that not might not need that robust
8043520	8044520	theory of time.
8044520	8048520	You could also use Stacey's and potentially other extensions.
8048520	8052520	We'll call them temporal extensions of the BFO core.
8052520	8057520	But you are not necessarily required to use the temporalized relations version.
8057520	8060520	You are required to use one of the extensions.
8060520	8064520	Not just not, not a specific one.
8064520	8071520	So roughly speaking, or broadly speaking, then the core implementation of BFO and owl
8071520	8076520	is agnostic about representations of time that require more than binary relations.
8076520	8080520	So as you see over here in the right hand side, this, this is, this is the core.
8080520	8082520	These are the core relations.
8082520	8084520	You see this in the BFO core file.
8084520	8087520	They do not require reference to time.
8087520	8090520	Some of them are temporal, but they don't require a third index.
8090520	8096520	The temporal extensions of the core implementation of BFO, such as the temporalized relations
8096520	8101520	extension or the stasis extension, they provide representations of time which users can select
8101520	8103520	based on, from based on their needs.
8103520	8104520	So here are some examples.
8104520	8107520	You should see the temporalized relations on the right.
8107520	8111520	Aero pointing up is carry of it sometime carrier of it all times, et cetera.
8111520	8115520	Same for Stacey's you have generically depends on has part has member.
8115520	8121520	And again, the structure, the temporal structure there for Stacey's is it's, it's the semantics
8121520	8125520	of some, it's weaker than the temporalized relations representation.
8125520	8128520	There is additional structure for the Stacey's stuff.
8128520	8132520	It's just not built into the object property, the way the temporalized relations is it's
8132520	8137520	somewhere else is relying on like histories and this, this class called stasis.
8137520	8144520	So temporal extensions of the BFO core, they will import BFO core owl and add relations
8144520	8149520	for the purposes of representing relations holding at times and conformance to BFO now
8149520	8154520	requires using that core, of course, which nobody has problem with, and at least one
8154520	8156520	of those temporal extensions.
8156520	8163520	And then this is important because users deploying BFO can largely do so as they have.
8163520	8168520	So if you are using temporalized relations continue, if you are not, if you are using
8168520	8175520	something like RO, which CCO, the common core ontologies, which those are the developers
8175520	8177520	stasis, they are, they use RO too.
8177520	8182520	So if you are using those, and you are wanting to stay conformant with BFO, if you adopt
8182520	8188520	what, what the CCO, what CCO is doing with those RO relations, you will also be in conformance
8188520	8193520	with BFO, because you will in that way be adopting that temporal extension.
8193520	8200520	So in addition, lastly, the BFO development team will create mappings across these extensions.
8200520	8206520	So that is to say in this case between stasis and the temporalized relations, so that you
8206520	8212520	don't have drift of uses, like we don't want people like one group to use this temporalized
8212520	8214520	extension and another group to use another one.
8214520	8217520	And then they go off and do their modeling, and then they're not interoperable.
8217520	8222520	So we're creating mappings between them so that it really is, you know, choose, choose
8222520	8227520	your own adventure sort of situation and we'll, we'll map them together in the, in the back
8227520	8228520	end.
8228520	8229520	All right.
8229520	8235520	So in summary, core BFO file taxonomy specified in 21, 8, 3, 8, 2, and relations that don't
8235520	8241520	require temporal indexing extension, temporal extensions, import that core adding relations
8241520	8245520	that provide richer representations of time, some more rich than others in the development
8245520	8249520	team will provide guidance for selecting the temporal extension based on need and will
8249520	8253520	secure interoperability across extensions via mapping.
8253520	8254520	Look at that.
8254520	8260520	I did it and I have what, seven minutes left.
8260520	8262520	Can you hear me, John?
8262520	8263520	I can.
8263520	8266520	So you better explain what RO is.
8266520	8269520	Oh, I thought you already did it.
8269520	8270520	It's the relations ontology.
8270520	8276520	So relations ontology is a large number of ontology or a large number of object properties
8276520	8282520	that are used very often used by oboe foundry ontologies.
8282520	8288520	So they have things they include a lot of proper object properties like part of, but
8288520	8296520	they also have some more specific object properties for biological phenomena like, I don't know
8296520	8301520	what's a biology term, his titrate or something.
8301520	8302520	What's that?
8302520	8304520	Spider's leg.
8304520	8305520	Spider's leg.
8305520	8306520	Spider's leg.
8306520	8307520	Spider's leg.
8307520	8308520	Yeah.
8308520	8316520	Was there anything, any other clarifications?
8316520	8317520	I ran through that quick.
8317520	8325520	I didn't want to get in the way of you and Pete.
8325520	8326520	Yeah.
8326520	8327520	Go ahead.
8327520	8332520	I guess I need to control the audience.
8332520	8335520	So we'll start over there.
8335520	8339520	Are you going to question if a new vehicle goes over the oboe foundry?
8339520	8344520	Because you have seen a vehicle, too, and a written number of it.
8344520	8347520	I think that's the one that you thought.
8347520	8348520	Shall I do that one?
8348520	8349520	I couldn't hear him.
8349520	8350520	So yeah.
8350520	8351520	Okay.
8351520	8357520	So the question is, are we going to bring these goodies to the oboe foundry?
8357520	8359520	Three wise men.
8359520	8362520	I mean, you're going to try.
8362520	8363520	I'm trying.
8363520	8365520	I've been talking to Chris.
8365520	8369520	I was talking to Chris the other day, trying to, like, just, you know, finesse a little
8369520	8370520	bit.
8370520	8372520	We got to go through the, we got to go through the process of like vetting.
8372520	8373520	Like that's his big thing.
8373520	8374520	And I understand.
8374520	8375520	So yeah.
8375520	8381520	Complete what John just describes convincingly and then take it to the other country.
8381520	8386520	So there are members of the oboe foundry who I would like the whole foundry to be running
8386520	8388520	on both all the logic.
8388520	8391520	And in the first of the logic, you don't have any problems.
8391520	8392520	They all go away.
8392520	8399520	And that in a way, that's my dream of.
8399520	8400520	Yeah.
8401520	8403520	Thank you for that clarification.
8403520	8409520	What I do find a pity, however, is that in this new version, you have the so-called
8409520	8413520	temporary relations because they are not temporary relations.
8413520	8419520	They are, they're in labor only, but they cannot actually be admitted what you think
8419520	8421520	you are representing.
8421520	8423520	Because you need the temporal logic for that.
8423520	8426520	It's a labor lane work allowance.
8426520	8429520	That actually having a temporal logic.
8429520	8435520	There are, it's a central extension to our, if you don't want to go to the group first
8435520	8441520	or the logic for instance, there are alternatives to being almost to what the label actually
8441520	8442520	would mean.
8442520	8443520	So yeah.
8443520	8447520	I find it disappointing to see that that actually made it in there.
8447520	8452520	Are you to convert into a question?
8452520	8461520	Are you going to go to a powerful version that will be properly using a temporary logic
8461520	8466520	so that you can do the actual reasoning with it and the consistency checking of what you
8466520	8469520	think you are representing?
8469520	8474520	I mean, I think ultimately we have to, I share your dissatisfaction.
8474520	8479520	I mean, the temporalized relations, any representation of time, you go look at it, you can, you know,
8479520	8482520	you got the restrictions of hour so strong.
8482520	8486520	I mean, almost anything interesting is a non-simple property.
8486520	8488520	Like suddenly you can't say much.
8488520	8491520	Like we say, hey, I'm representing the Allen interval calculus.
8491520	8492520	No, you're not.
8492520	8493520	Hush.
8493520	8494520	Not an hour.
8494520	8495520	She can't.
8495520	8501520	So like, I totally understand the first order logic though, we have that intense logic or temporal logic.
8501520	8503520	We could represent the sorts of structures.
8503520	8508520	I think ultimately we're going to have to because ultimately I think that sort of temporal reasoning
8508520	8517520	or sophisticated temporal reasoning that hasn't really been a set like within use cases of ontology
8517520	8521520	are becoming more and more necessary.
8521520	8526520	Like the use cases that we're seeing now do want that kind of temporal reasoning.
8526520	8529520	They do want that semantic rich representation.
8529520	8532520	So we've been getting away for too long without it.
8532520	8535520	We have to appeal to some more tools.
8535520	8538520	So some folks have been working like Fabian.
8538520	8540520	I'm not sure Fabian's here.
8540520	8554520	Fabian has, Neuhaus has been developing some, some tools that are allow you kind of put kind of to put first order logic axioms on top of some owl axioms and, you know, generate a combine them,
8554520	8558520	generate a model and prove some theorems using vampire in that setting.
8558520	8563520	And then I think maybe there allows for a conversion back in the owl some to some extent.
8563520	8564520	I'm not sure.
8564520	8566520	So there's some research in that direction.
8566520	8573520	I myself have been trying to finesse shackle in combination with owl.
8573520	8587520	So using the expressivity of shackle with, you know, because it can also use sparkle with embedded within its shapes to try to maybe approach or get make some more progress towards representing temporal logic.
8587520	8589520	Really just work in progress.
8589520	8592520	I share your dissatisfaction is the answer.
8592520	8597520	And I also share the need.
8597520	8604520	One more.
8604520	8605520	Okay.
8605520	8606520	One minute.
8606520	8607520	Come on guys.
8607520	8609520	No other questions.
8609520	8610520	Yes.
8610520	8611520	Yes.
8611520	8612520	I do shave.
8612520	8613520	That's correct.
8613520	8617520	I know you're also going to.
8617520	8618520	All right.
8618520	8619520	Thank you all very much.
8619520	8621520	Thank you.
8621520	8623520	I guess.
