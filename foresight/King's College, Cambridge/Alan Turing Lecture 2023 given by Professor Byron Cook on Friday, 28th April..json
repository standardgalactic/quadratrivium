{"text": " Hello. Welcome everyone to the sixth annual Turing lecture. This lecture series is a part of a broader effort at Kings called the Alan Turing at Kings Initiative. And this is an initiative to raise funds for studentships, fellowships, and other academic endeavors. These lectures are essentially all of them are focused on topics that somehow relate legacy of Alan Turing. And today's talk is going to be about what computer scientists like to call formal methods. And this means applying logic and mathematics to the reasoning about the correctness of programs basically, or building tools to help people do that kind of thing. And our speaker Byron Cook is a professor at UCL and a vice president and distinguished scientist at Amazon. And Byron has been sort of at the cutting edge of actually applying formal methods in the real world. So the work he did, for example, at Intel very early on when Intel was having problems with chip design, I don't know if you remember the Pentium bug, but that certainly stimulated a lot of effort to use formal methods in proving the design of circuits correct. Byron then went on to Microsoft where he developed a lot of verification tools that were essentially solving the problems that Turing proved were unsolvable. And it turns out many of them are solvable in practice. And that sort of that work got rid of the blue screen. Remember the blue screen of death from Microsoft? Well, that work pretty much got rid of that blue screen of death. And then from there, Byron went on to Amazon where he really spearheaded the formation of formal methods groups at Amazon. And today Byron tells me there are over 600 people at Amazon working on formal methods, and over 20 groups doing that kind of thing. So apparently this kind of work touches every aspect of Amazon's development and rollout of their services. And I just want to say that when I did my PhD in kind of in this area back in the 80s, this was considered like kind of crazy stuff that no one would ever use, that was too impractical, it was focused on toy problems. No one is ever going to use this stuff. And I think for me, it's very satisfying to see what someone like Byron is doing now, like actually bringing these ideas and technologies into the real world, making real impact with them. So I'd like to introduce Byron. So we finally figured it out. And it's a huge honor for me to be invited and to be associated with Alan Turing and Kings. I hope you all read the abstract and know what you've signed yourself up for. So I'm going to tell you, I'm going to attempt to tell you something rather technical, but I've promised to aim it at a general audience, and I think I'm going to fail horribly, but let's have a good time together. So we'll see if that works. As I was preparing this talk, I'm like, oh, what have I done to myself? But I think this talk brings something for everyone. So I think that the technical people in the space will enjoy pieces of it. And then those of you who don't come from the space, I hope you'll take away something from it. That's interesting to you. So this talk takes a needle and thread through a bunch of characters that are Cambridge based. I was really excited to be invited to give this talk because it's a very Cambridge story. There's a King's story. So there's some characters that were King's people. Frank Ramsey is a really interesting character. I mean, he's a lot less well known than Turing, but also very, very important. King's person, sort of the boy of wonder actually born in Cambridge, born just on the other side of Jesus' dream at the locked bridge, the house when you cross the locked bridge. He was born there. And then because father was at Muddlin, and then he was here. And I think he worked with this chap quite a bit. And then, unfortunately, he died. I read his new biography about him. And from what I can work out from the biography, he died from a disease he caught by swimming in the camp. So you need to be comfortable. And then Alan Turing, I don't think I need to introduce. There's another character, which is the spinning beach ball on the top left, just above Frank Ramsey. And so some of you may be familiar with this concept. So I'm going to give you a bit of IT advice. So if you take nothing else away from this talk, you can take this. When you see that, what you need to do is you need to go into the force quit applications of your Mac, find the program, and kill it. And hopefully that will take care of it, though it might be there's an infant. So then what's happening here is there's an infinite loop in one of your programs, and it's causing it to hang. Hopefully it's not in the operating system, because now you're really in trouble. But if it's in, but if it's in the, but if it's in like a Chrome or Outlook or something like that, you'll kill it, you'll lose your data. But you know, that's, that's how it goes. And if you use Windows, this is kind of what it looks like in a similar situation. If you use a phone, this is what it would like to look like. But I believe the phones are designed that after a certain, quite short amount of time, they just reboot the phone. So the Mac, luckily, doesn't reboot itself every time that it gets stuck in an infinite loop. But the phones, I think, are designed to just, just reboot. So you may, and you may not even notice the way that the phones are assigned. But we also have this problem. So it turns out that our bodies get, there's little infinite loops sometimes that we find very unpleasant. So this is skin cancer. And it turns out that skin cancer is, in a sense, the, the, the regulatory mechanisms in your, in your body to maintain cell growth and death. And so skin cancer is your bug, is your body kind of going into one of these states. Okay. So the quest is to build tools that can talk now about what's going to happen in the future. So we want to, we want to build a tool that takes a program and says things that usually have the word eventually in them. So, hey, you know, like, when I press this button, does do the rockets eventually launch? Or, or, or when, you know, like, if I ask this question, will I eventually get the answer? Or if, or if I model disease as a, as a, as a system, and then I want to like make a change to characterize the change, I think that we should make for, for, for medicine. Now does the system eventually do the thing I wanted to do? Does the, does the, does the cell growth stop and, and, and, and, and we, we reach homeostasis. So that's, that's the kind of things we want to do. And we want to do this without actually running the system. We want to take the system and reason about it. Because we may not have the whole whole of the entire system. And also we don't want to like interact with the world, but we don't actually want to launch the rockets to learn the law, rockets will be launched. We want to ask, you know, in some theoretical world where we launch the rockets. Okay, so just a bit of bookkeeping. I know myself, and I'm going to use all these words to mean the same thing. So I just, just, just to take a moment, the halting problem, the question of program termination, finding infinite loops and talking about systems that, like trying to show that systems don't hang. It's all the same thing. So when you hear me talk, say, in one breath, I'm saying program termination and, you know, three breaths later, I'm talking about the halting problem. It's all the same thing. This is, this is again for the, for the non-technical people on the crowd. Okay, so what is program termination? So for those of you who know what program termination is and know what programs are, bear with me for a moment. We're going to take a one-minute tutorial on programs and program termination, but also this program will show up from time to time. So, so it's sort of worth it to everybody. So here's a program. I'm sort of assuming a few of you are in the, I know at least one or two people in the room don't, don't know how to program because they're my family. And, and so what this, this is a program written in Python, a language called Python. And what happens in this program is the first thing it does is it says, this is a, a while loop. So it says, Hey, is in greater than one? If, if so, go here, do what it says, come back and then ask again. Is in greater than one? Okay, go here, do what it says, come back, ask again. And the idea is, is that this code here is modifying in and the, and, and one would hope that eventually the code that's modifying in would make in be that not greater than one, in which case now the loop would terminate. Okay, so that's the idea. So this is a computer program. That's a while loop. Sometimes while loops, you want them to run forever. For example, like you're, you want your actual computer to run forever, but inside the computer, inside that loop is often some code that you really want to terminate. And that way you can get back to the start of the loop. So often systems are written with one big while loop that you want to run forever. And then code inside the while loop you want to terminate. And that code may look something like this. Okay, that was your one minute tutorial. This is a really interesting program. So this is a wicked little program actually. So this is called the Colatz conjecture. And no one knows if this program terminates. And what I mean by that is, so a program is, we would say it guarantees termination if for all possible values of in. So in here actually could range over all mathematical integers. And so for all possible values of in, does this program guarantee to exit? No one knows the answer to that question. So program guarantee termination, if you know that's true for all possible, no one knows. And this is, there's some really great quotes here. So I wonder if this has a pointer. Yeah. So this is called the Colatz conjecture, but it's also called the three and plus one problem. It has some great names, whereas it, the Hellstone numerals, the Thwaites conjecture. And then look at this great, great quote here that from Paul Orteff. Mathematics may not be ready for such problems. It's extraordinarily difficult, completely out of reach for present day mathematics. Look at that innocent little program. Okay, now as an aside, my colleague in Amazon, Marine Hula is so close to solving this puzzle. It's agonizing. I was really hoping I could say today, oh, and by the way, at Amazon, we solved it mic drop, but, but alas, I wasn't, alas, I wasn't able to. So he has this really, really fascinating paper that's very, very insightful, that combined some really beautiful, it's just, it's such a beautiful paper. So they're really making some serious headway on this problem that I'm very excited about. Anyways, and, and back to Cambridge, back to Cambridge. So, so there's another really interesting character that's, that's, that's, that's, so, so, Frank Ramsey was the Kings, Alan Turing was the Kings, and Byron Cook, oh, you know, cycled by Kings. For, for six years, I cycled by Kings, and I cycled by Kings on my way to Microsoft Research, which at the time was that in West Cambridge, now it's by the station. And when I cycled to, to, to, to, to Microsoft Research, a lot of my work was with these two jobs. So this is Andre Rybolchenko, who is my intern, and then a longtime collaborator, he's actually later joined Microsoft Research, and then Andres Podolski, who is his PhD student. And, and what happened was that I decided to move, I'll tell you part of the story, I moved to Cambridge. And when I moved to Cambridge, a bunch of people who were in Europe, you know, I moved, you can probably hear, I'm American. So when I moved to Cambridge, a bunch of people who are in Europe were like, oh, wow, cool, we should work together. And these, and these were one of the, one of the, one of the sets of people who do that. And so I did this work with them that was really explosive. And so I ended up the, all the, all these other people were like, wow, that's super cool. We should like, there were like possible ways that we can solve other problems that were related. So I ended up working with a whole network of people. And it was really a very, very exciting time. And many of these people spent much of their time in Cambridge. And there were, of course, many scientific papers. And they all used theories from Ramsey and Turing. So that's, that's, that is what we're going to talk about today. Okay, let's start at the beginning. So, and here I'm going to, I'm going to do a little bit of guesswork. So I, so I don't know if you know that there's this, the Greeks, the ancient Greeks had this like, calculating device, right, that would, that would, that would predict eclipses, for example. Meanwhile, they're also doing proofs, right? They have, they, they, they, the Pythagorean theorem, you know, there's all this work kind of in the, the Greek empire. So it must be, and here I'm just guessing, it must be that someone in town, sorry, some, someone in town thought, hey, could we get the device to prove theorems for us, right? It's just, it's inescapable that that's true. So I would believe that that must be when, you know, our, our people, our ancestors first said, machines, mathematics, let's put them together, right? But what, what I do know is that from the, from the, is that Leibniz explicitly asked us, right? So, and we calculate the truth of any mathematical statement. That's the sort of fundamental thing we want to do. And so here's what this would look like kind of in our modern world. So imagine on your phone, you have some magic AI app, and you could ask it simple questions like, hey, is there a number between, this is an easy one, is there a number between 10 and 20? Yes, there is, 11, try that, okay. Is the Colatz conjecture valid, right? And, and the, and the idea is that the answer produced must be correct. That's the game we're playing. That's, that's what Leibniz suggested. And that's what, you know, we're going to talk about much of today. And, and maybe it's not an acceptable answer. You can't say maybe in this sort of, in this, in this purest Leibniz world, and you can't run forever trying to, as well, give me, give me some time. And I'm going to go off and compute forever and just never come back, come back with an answer. No, that's not allowed either. You have to answer the question, and you have to answer it in a finite amount of time. That's the rules of the game. Today, we would call this automated reasoning. So if you look at like my title, or like the groups that we have, the groups in Amazon, all these like 20 teams are called, you know, identity automated reasoning team, or crypto automated reasoning team, storage automated reasoning team. So automated reasoning is what we do. And practically, there's a few people from the crowd, you're all laughing, because you, you, you know, that we've kind of given up on requiring you can't say maybe or time, or time out from time to time, right? So we're practical people and we're like, eh, sometimes we don't know the answer, right? But, but, but the purists didn't think that. So in this, this paper, paper book by Hilbert and Ackerman named it, the decision problem. And I'm not going to try and pronounce the German, right? But it's, it's called the decision problem. And this, this was came out in 1928. And this got everyone in the mathematics logic world very, very excited. So back here in Cambridge, both Ramsey and Turing were like, Oh, the decision problem, that's super cool. Can you automate reasoning about mathematical logic and mathematics, such that you always get an answer, you know, super cool, super cool problem for them. And they, and they, and they both did some interesting works. And now we're going to talk about that. So Ramsey had this, had this very nice paper right before he died, unfortunately. And he didn't prove or disprove the possibility of there being a general solution to the decision problem. But he, but he did something else instead. And so what I'm going to, I'm going to, I'm going to, we're just going to take a moment to introduce a little bit of visual notation. So there's an idea of a graph. Graphs have nodes, graphs have edges, edges are the arrows. And the idea is you can go from A to B if there's an arrow. Okay, that's a graph. That's a sort of fundamental concept that you see in computer science and mathematics. And what we could do is we could color the edges. So I could color some of them red, some of them blue, some of them green. And then what Ramsey did is he has this really, really amazing result that's about monochromatic subgraphs. So here's, here's, here's a monochromatic subgraph. It's, it's like the original graph, but with only the red arrows. And there's sort of different flavors to the Ramsey theorems, or there's a sort of Ramsey theorem is kind of a family of statements. But what's really amazing about it is he says, if, if your graph is infinite, I can't, I can't show you an infinite graph on this finite screen, but imagine it's infinite. If you have an infinite graph, and a couple of other conditions are met that I don't really want to tell you about, because they knows to turn into a math lecture, then, then there exists an infinite monochromatic subgraph. And that's going to turn out to be a very, very powerful tool for us. So take this graph, if it's infinite, it's also complete for those of you who know what that means, but it doesn't matter. And, and the number of colors is finite, then there's going to be an infinite monochromatic subgraph. Okay, remember that. Meanwhile, Alan Turing read this paper by Kurt Gertl that was the start of the argument as to why there could be no solution to the decision problem. And what he did was he wrote this paper that he's, you know, famous for, I mean, it was, if you saw the exhibit today, you saw his copy of the paper. And, and I mean, I think this is, this is probably the most studied theoretical science, theoretical computer science, I mean, basically started theoretical computer science. So this is like absolutely fundamental paper. And so he's, I'm going to, I'm going to frame this in terms of graphs. But he basically, you know, you know, I don't want to overstate this too much, but you can basically invent the idea of like the, the, the, the idea of what computation is, like, I mean, people were doing computation before and we had machines, but, but essentially he's like, he talked about that in terms of, he combined that to mathematics, let's say. And again, we can think of like a Turing machine, you can think of as a graph where it's like, what are the possible transitions between, between, between a Turing machine. So I'm going to, I'm going to explain this with my phone. So by the way, the iPhone is like so much more powerful than anything he probably could have possible imagined, right? So it's a really, really, it's a super computer in your, in your, in your, in your pocket. And so, so here's me and my phone, I open up my email, I write reply, and then, and then I hit send. Okay. And then, and then in the sort of Turing view, each state of each configuration of my iPhone is a state, and then you have transitions between the states. So I can go from me opening it, seeing Tim's mail, saying my reply, hitting send, that, that's, that's a progression. And that, and that states, states and configurations. Okay, that's a little, that was a little bit of background. Let's look at this program. Remember this one? I've added, by the way, the, the line numbers. So you could have a state of the system where the value of n is 20, and the location is location one. So we're at this line of the program, and n is equal to 20. And then we can transition to the value of n being 20, and the location being 20. Okay, get it? Okay. So what he said was, is that we know that there will be, always be programs for which we can't answer the basic question of termination. So it's, it's what we say is, it's, it's undecidable, right? So I, the answer is no, we cannot calculate the truth of any mathematical statement. Because if you could, the, the, the question of program termination is one of those mathematical things. And he sort of linked up the idea of computer programs to what's computable, to mathematics, and then said, well, this thing can't be solved and the, and he bridged the gap over to the mathematical side. Super cool result. leaves us in a bit of a lurch, though, in terms of like he sort of identified a sort of Achilles heel of computers. And so I'll, I'll, I'll illustrate that by what was stressing me out in 2003. So here's a list from Microsoft.com, sorry, and the I'm going to poke on Microsoft a little bit now that work at Amazon of, of, of device drivers that you could download. And you could put these in these, you could put these into your machine. And each of these device drivers is backed by source code. And the problem is that there may be device drivers out there for which we can't answer the termination question. And boy, when a device driver goes into an infinite loop, we're in a world of hurt, like that is a really bad situation. Because now like you, your, all your programs are going to start hanging, like that this can be, this can be a very, very bad situation. We don't want that to happen. So non-terminating device drivers hang your computer and hang them often in quite bad ways. But what's not so known, who knows about raise your hand if you know the paper, checking a large routine by all in turn. One hand, that's staggering. Really, you don't know this paper. People, people in automated reasoning in, in, in Amazon, pull up your hand if you don't, if you, if you work for Amazon and you don't know this paper. That's interesting. Okay. Great. Well, you're going to know about the paper. I think this is one of the most interesting papers there is. This, this comes from 1949. He totally tells us how to do our job. It's amazing. So, so he gives a very clear instruction for how to prove a program terminating. 1949, I think. And so I'm, now I'm going to put a few words in Ellen Turing's mouth. So he doesn't quite say this, but he says, but basically between the, read between the lines, what Ellen Turing is really saying is, in practical cases, we can answer the termination question. And then furthermore, in cases where we can't, we just return maybe, what's the big deal? Right? Like, it's like, yeah, yeah, yeah, I proved the halting problem undecidable, get over it. Like, life moves on. Now we need to do practical stuff. We have computers. Remember the war, like computers are cool. Let's, let's, let's, let's do good things here. And so to think about this, think about like British Airways, right? On time arrival is not guaranteed. But, and I know you're probably all winging about British Airways right now, but they're pretty good. Like you, you do often arrive most of the time, right? You arrive, you arrive, you get on time arrival often enough that you think, I'll fly again. So, so, so they're, they're not horrible. So the real, the real thing that they need to do is just to make on time arrival frequent enough to make the airline useful to their customers. And it's the same with, with Termination Prover. So if you're building a tool to analyze termination of program, so long as the tool answers often enough with the right answer, then, then you're going to use it even if you're, even if you know from time to time, it's not, it's not, it's not, it's not going to give you, it's, it's, it's not going to be able to answer it. And, but, you know, the answers need to be correct. Yes or no answers need to be correct. Okay. So in 2004, what, what Andreas and Andre, and I, oh, sorry, I want to say something else. This paper on the left, the Turing's famous paper, has kind of been a buzzkill in, in the, in the IT industry. It's, people do not, what's the, the thing is you do an improv, you don't say no, you say yes and right. So there's a whole lot of people who didn't study improv apparently in the IT industry. And so if ever you have some idea, like, oh, I know we could do X, Y and Z, someone's going to be like, that's the whole thing problem, you can't do that. And oh, I feel shame. Sorry, I suggested it. Let's not solve the problem at all. Sorry. And that's, that happens a lot. I mean, I've seen that personally a bunch of times that you hear that a lot. So this is like the most abused theoretical results in computer science that because it's the halting problem, don't even try, you know, like life is too hard. But very, very, very few people in 2004 thought it was, it was practical, even in my own field. Like, you would talk, you would talk to people on my own field. The vast majority of people would be like, but it's undecidable. But it's like, yeah, but so is the state space reachability problem for infinite state systems. But they did, oh, yeah, forgot about that. So, but, but with, with the exception of some brave souls. So there were a few brave souls that were, that were trying to solve this problem. But the problem for them is that their tools all solved this only for little tiny programs, like little eight-line programs, seven-line programs. So they, and they didn't have sort of any of the actual features you'd see in real programs like pointers and concurrency or any of that. So they were fun. They're super fun, but they weren't actually going to solve anything. And so that's, that's where Terminator steps in. So this is a tool that Andre and Andreas and I wrote. And by the way, if you're Cambridge people, do you know this ride? Have you seen this? I don't know if they have this anymore. So this is at least when I lived here in the mid-summer, common every summer, they would truck in these rides, right? And so then this was one of the rides. So I was looking through my photos for this talk, and there's so many photos of me in front of the Terminator ride because I did Terminator. Okay. So, so what we did is we, is we looked at this, the Turing paper and had a good read, right? So what we realized was, is that, hey, there's actually two parts. And I'm going to tell you about that. So there's two parts to solve and you can still solve them with independent bits. And then, and then, and then, and then you're done. So now I've put up a paper, I put up three paragraphs from a paper that's 74 years old, that's referring to a figure that's not included in the screenshot. So we're not going to make it very far through this paragraph clearly. And it's written in language no one would know. But I just draw your attention to the first line. I move over here so I can see it. In order to assist the checker, the checker is the person doing the proof or the tool. The programmer should make assertions about the various states that the machine, that's the program, can reach. And the reach is a really interesting bit. So, so imagine that these states are unreachable. Imagine these states are reachable. But that turns out there's no path over here. And here's a little infinite loop. Here's a what is that six states that could be repeated forever over and over and over again. So imagine this is my iPhone, so I have six configurations of my iPhone and they're just going around and around and around between those configurations. But it doesn't matter because it's unreachable. So there's tons of termination bugs in your phone, tons of termination bugs in your computer that are never going to be triggered. You're never actually going to experience them because they're unreachable. And that first three paragraphs is all about that. It's just about reachability. So, yeah, kind of, I think I upset that. So we were like, okay, turns out I worked on reachability. So we know how to do this, right? So let's, let's, so what, what, what, why was I working on reachability? So now we're going to take a little, a little psych, we're going to move over to Seattle for a few moments. So it turned out in 2003 that 85% of crashes in Windows XP were due to device drivers. And that was a big business problem for, for Microsoft at the time. So what we built over in Seattle area was a real world automated reasoning tool called static driver verifier in the research community. It was called SLAM, but for device driver writers, they knew it as static driver verifier. And what it was designed to do was to show error states reachable or unreachable. And so if you, this is the blue screen of death, you actually, you actually refer to that. This is the new blue screen of death, by the way, which you don't see very often these days. But this is what you get when your machine is like, sorry, lost all your data too bad, it sucks to be you. And this is what you would see on a Mac. And this is what you would see on a really old Mac. And so the question is, and I've sort of put this on purpose, is this line there or not? And remember these states, these state spaces are typically infinite. You can't just walk them explicitly. You have to like, you have to abstract infinite sets and do all kinds of trickery. But yes, we're trying to figure out, are things unreachable or are they reachable? And so there was a whole bunch of work that we did over in Seattle area. And I was involved in that. And Andrew Herbert, who's in the room here, I was visiting Cambridge and he was like, why don't you leave Seattle and come to Cambridge? The environment is great here and you'll have a good time. But I'm like, great, let's do it. So we, with eight weeks difference between that conversation, five weeks difference, my wife says, between that conversation and moving, I came, joined Microsoft Research, started chatting to these guys and said, let's work on the termination proving. So the point I'm making is that this problem was actually already pretty much solved. So it's just a question of reachability. So the red part is actually about, okay, now we've found a reachable state. How do we know that that reachable state doesn't lead to an non-terminating execution? And all the green bit is just about how do you show that states are unreachable? Okay, so let's look at this one. This one's fascinating. We're going to spend a little more time with this one. Finally, the checker has to verify that the process comes to an end. That just, I'm translating, that just means, okay, now we're going to prove termination. Again, he, you know, he or she should be assisted by the programmer giving a further definite assertion to be verified. So the point that he, what this he really in our, in our lingo today would be the prover, the tool. And so this may take the form of a quantity, which is asserted to decrease continuously and vanish. I'm going to translate all this, by the way, don't panic, and vanish when the machine stops to the, to the pure mathematician is natural to give an ordinal number. Don't, doesn't matter what that is. If you don't know, it doesn't matter. I love this line. A less-hybrid form of the same thing would be two to the 80 times n minus r plus two to the 40 times r minus, what is that, s plus k. Pretty cool, huh? Let me translate that. Can we find a function? I'll call it a, based on the, on the state, based on the variables of the, of the state, that will choose only positive, but also decreasing numbers. Okay. So imagine, let's look at my phone. I took a screenshot when I was writing this talk. I had seven Slack messages at the time, unread. So maybe the function is the number of Slack messages. One possible, it's not going to work very well, but another one, maybe be the amount of free space left on my phone. That's a little more reasonable. And then imagine we took a, a transition from this state to this state. I don't know, like who knows what, internally, you can't see it, but it made some transition. Maybe the amount of space, a free space has decreased, probably quite likely, right? Because of it, because the phone's actually doing little logs and all kinds, like it's always sort of using a little bit of more and more and more disk space, not disk, but you see what I mean. Whereas the number of Slack messages, well, we can see it stayed the same. So I had seven before, seven before, seven now. So that's not a good one. So this number didn't go down. So remember that the point, the point we're trying to make is we want to find a function, a function, some function F, that on every, that I'll always say this in a moment, that it finds decreasing, but positive numbers. And so what do we, what would we do with that? Oh, I think maybe, okay. And yeah. So here, for example, let's write a little function for this guy. Maybe what we do is we say, oh, well, let's do in minus the location. So we were at, in this value of 20, location is one. So maybe it's in minus X is 19. So it's just this number minus that number. And then the next one is 18 because I've now subtracted two. Okay. So that's a positive number and it's gone down. So that's possible. I mean, it's not going to work because no one knows that the program terminates, but that would be a plausible starting point as you begin your journey into this world. So the thing that we need to hold is whenever we take a transition from one state to another state or configuration to another configuration, and we have that function F and we map, the greater than needs to hold. So and if you, if you, if you say the pre-state is S, and then we apply F to S, and then we say the post-state is T, and we apply F to T, you need greater than to hold. And that's a condition that's required. So the idea of how to prove termination, and this is Turing's idea is find a function, think about it for a bit. Then if this condition holds for all possible transitions of your system, this holds, you're done. You've now proved termination. Okay. Right. So if you turn your head, you can see it. 19 is greater than 18. So now, why does this hold? So imagine a non-terminating execution. Again, this is infinite, so I can't, I can't show it to you on the screen, but here's the first few states. Now just begin applying this function. Oh, and by the way, we have the function. I already said that. And this condition holds. Now let's just begin applying it. And I'm making these numbers up, but imagine the first one's 30. We've got to choose 29 after that because it has to go down, 27, 25, et cetera, et cetera, et cetera. We're going to run out of room. It has to be positive also. So now we're out of space. So I said, imagine we have an infinite execution, but we have a function F that's positive and decreasing. It turns out you can't have both, right? Right. And too far. You can't have both. You can't, you can't have a non-terminating execution and this function. You can only have one of the other, i.e., if you want to prove termination, find one of these, and you'll know that you don't have a non-terminating execution. Or if you have a non-terminating execution, you can't have one of these. It's a, it's a, it's a, there doesn't exist. If the program doesn't terminate, there cannot exist a function that meets those conditions. And so the trick is to find the F, right? And so Turing found the posh one and then he found the less posh one. Okay, I've kind of said already that. So now, so now the thing that we wanted to do was to automate this. And so, so consider any reachable state and, you know, maybe those states on my phone. And imagine we found an F, then it turns out it's super hard to find a single F. Like, like, and this is kind of why these tools from before weren't working, because they were trying to find single F. And why is it hard? Because you're going to find an F that's going to pick out all these values. I'm naming these values. So A needs to be less, greater than B, A needs to be greater than C, C needs to be greater than D, D needs to be greater than F and E, and F and E need, both need to be greater than G. So you're, you're like solving all these things all at once. And if you have a 10 million line program, it's just, it's going to be impossible. You're not, you're not going to be able to do it. And so, so what we figured out was that you could use these tools for finding proofs of toy programs. And you can find multiple ranking functions. It's going to turn out there's one thing we're going to need to do and Ramsey's going to solve it for us. That's going to be the punchline Ramsey's going to solve of course. So imagine we could find one termination argument, G for this transition, and another termination argument for, for here. We can, we can color them. So here's, I'm just going to make my life a little bit easier. So notice, notice I've colored this transition green because I have the green function. And here I've, I've colored it red because I have the red function. Okay. I'm preparing for Ramsey. The problem right now is that this isn't a valid termination argument. And the reason is, is because I have two functions, you could imagine them alternating, and there's just no reason for the numbers to go down. So if I have two termination arguments, it's not valid because I just alternate them. There's no reason I know, I can't know, I can't alternate them. So, so I haven't, I haven't proved termination yet. But what we can do is we can borrow some techniques from these papers. And now I'm going to do a construction and just believe me. Okay. Because we don't want this to turn into a 30 minute graph theory course. Okay. There's this idea of transitive closure. And it's really neat. And the graphs are really amazingly, they have so many edges, it's an unbelievable, but it's a construction, you can do it. And, and, and now what we can do is we can, and this is, and imagine this is infinite because we're saying, oh, maybe this program doesn't terminate. And so now what we can do is we can take the monochromatic Ramsey subgraph. For those of you who signed up for this talk, this is kind of the worst slide, right? Sorry. That who don't know, who don't know math and logic and that kind of thing. So we can take the monochromatic Ramsey, say that when you go home, right? You, you, how was the, hey honey, how was the talk is like monochromatic subgraphs. And, and, and now we can pull this trick again. So we'll, we'll, we'll do like trying, we'll say, okay, imagine non, non-terminating, non-terminating execution, but from the monochromatic subgraphs. So it's only the green edges. So those were only the edges where we had one function and we did this, we did this construction and you're just going to have to believe me that sort of added a bunch more transitions. And this is, this is a valuable thing to do. And, and, you know, ask me later and drinks and I'll explain it to you more. The more you get drinks into me, the more I'll explain it to you. And, and again, we, now we get to say, oh, look, you know, now it's only one function. So we know it's going down. So voila, right? We've, we've now, we, we, we have this thing that Turing was saying. We need, we need to find a quantity, which is asserted to decrease continuously and will vanish when the machine, machine stops and we did it. And it was Ramsey's theorem that helps us do it. So the payload is the summary is Ramsey's theorem. Let's us use many simple functions rather than a, rather than a single Turing style complex one. Okay. How am I doing for time, by the way? Does anyone keep track? Okay, 15 more minutes, but I might run long. I don't know. There was a Q and A afterwards. So I might eat into that. Okay. So this, that, that's the basis of Terminator. So there was this, this paper that said, hey, everyone, we have a termination prover that works for actual programs, like programs that people care about, device drivers. And it worked really nicely. So it, so it, so here, you know, here, remember, I showed you this code a little bit earlier. This is a device driver code. It's actually from the mouse. It's a piece of the mouse device driver. And, you know, it has bugs. So one of the developers agreed. Yeah, that's a bug. And then we, and then we had a bunch of papers. What were these papers doing? A lot of these papers were chipping away at this maybe problem, or the, the tool Terminator itself is running forever problem. So we were able to prove some device drivers terminating. We also found some real bugs, but then there was a whole bunch of maybes and spinning forever. And then these papers kind of chipped away at them. Other papers generalize Terminator. So for example, these folks together with me generalized it. So it's, you really could say anything that had the word eventually, like, you know, when we could ask, when, whenever this program opens a file, does it eventually close it? And that's eventually, right? So things like that. Another thing we did. So it turns out that a lot of programs are what we call concurrent. So you might have two copies of the program, both operating over that variable in at the same time. And proving those programs terminating is harder. So it turns out device drivers kind of a very special flavor. And we were able to do something. But then the question is, can we generalize to more programs? And the answer was yes. So then Jasmine, who's in the audience, made the following reference. Hey, Byron, she worked with me. Well, she worked in the Microsoft research. And then after this statement, she worked with me. So Terminator looks like something we need in the analysis of biological models. So that was this skin cancer comment I mentioned. So then a collective of us, including a designer from the Royal College of Arts, essentially an anthropologist, a couple of computer scientists, and Jasmine, and others who are biologists. The idea here is that you have your skin cells and you have genes. And there's like the genes are talking to the other neighbor genes. And they're all as a family trying to say, hey, we should only have, what is it, five layers of skin? Six layers? Six layers? I don't remember. But let's keep it that number. Let's not have a whole bunch more because that's bad for our bodies. And let's not have a whole bunch less. That's also bad news for us. And so this paper allowed us to analyze that. So we were able to build models of various kinds of disease and then answer questions like, hey, if we modified the model, would you get homeostasis? And the one really neat thing about it is this tool was designed such that biologists could use it and it had a notation very similar to what they use in their day-to-day life. And so you can use the tool still today. It's called Biomodal Analyzer. And there's been some amazing results. And Jasmine in her lab down at UCL now has gone on to do amazing results. And many of them found in part with the use of this tool. Another thing I did is I got really tired of using the, so there was these kind of formulas that we were writing that came up quite a bit. And I found that notation kind of limiting. So Talba Auerbach, who's a friend and an artist, began working with me on new symbols. So here's Talba in my Cambridge Microsoft Research Office trying to invent new mathematical symbols. And if you know LaTeXa, we ended, David Reinfert, who is the guy in the photo, implemented these new symbols in MetaFont. And we came up with something I like quite a bit. So it's this operation. So this is the lifting of a relation, happens to be greater than, with respect to f. And that allowed us to talk about this in a much nicer way. So this is the thing you've seen before. And now I can say this really nicely. I can say the transition relation, this is the graph, is a subrelation of the lifting of greater than with respect to f. And so this showed up a lot in talks and so on at the time. And so if you know, if you don't know math and logic, just close your eyes for a second. But if you do, then I'm going to explain what the meaning of this is. So the lifting of the relation with respect to f is the set of pairs of states, s and t, such that if you apply f to s and apply f to t, greater than holds, or the relation holds. So she's a really famous artist, and there's always articles about her. But amazingly, Terminator was in Vogue magazine. My greatest moment. Okay. And then, sort of one final point I wanted to make. So it turns out that the layout of data structures is just unbelievably crucial when trying to prove termination of realistic programs. And so here is a data structure of kind of typical data structure you would see in a device driver. And I'm just going to kind of walk you through this a little bit to get the idea. So device driver might come here and then it come here. And now it's sort of walking this data structure. It's called the list, right? So it's going, there's these arrows which saying it's a link to the next and the next and the next. And here it's going back to where it was before. And if the device driver somehow gets confused and doesn't realize it's already seen this, we're in a world of trouble. Because now what it's going to do is it's going to just spin on this thing forever. And so what's the termination argument? So here I've put a little picture of a post-it note in an effort to say, oh yeah, remember this. Okay. So imagine we've been here and we've left a post-it note saying, remember this, don't forget this. And we've gone here and we've gone here and we've gone here. What's the termination argument? Well, there's actually two list segments. There's the part we haven't viewed before. And there's the part that we have viewed before. And what's the size of this? Well, it's two nodes. And the size we haven't seen yet is two nodes. And so when we go another link, now it's three to one. And so this is where we're going to get the termination argument, right? We can take a transition from some state to some other state and look, it went from two to one. And that's going to be, you know, the function we're typically going to use is the number of links back to the node that's the head of the list. So there you go. So we're mapping. And so the termination arguments are kind of like that. So this paper sort of recognizes, this is with Peter Ahern and his postdoc and his PhD student, for example, Josh Burdine and myself. And then after that, we're like, hey, let's keep working together. This is pretty cool. So then I joined this thing with gang, I guess, called the East London Massive, that that was a collective of people interested in reasoning about data structures. And so Josh, who was his PhD student and postdoc and Samin, who was his ex PhD, had graduated and was a PhD student and I here ended up building this tool called Slayer, which reasoned about shapes on behalf of the termination purpose. We'd run this ahead of time. And that was very, very powerful. And it was also very powerful because it turns out that many of these 85% of crashes were actually shape oriented. The device driver would come in, it would modify that list, not leave it in a good state. And then the device driver would come back in, start walking that list, it wouldn't be in a good state. And then horrible things would happen. And so it turned out this is a whole other research area, basically driven by determination, proving a whole bunch of different papers, some of them related to determination, some of them not. But that's, you know, invite me back. I'll tell you all about that. But here's an amazing thing that happened. So, so, so, so be who's in the audience. And I'm also married to for past 27 years, or I can't remember now, sorry. And Peter, that's this chat, they started a company that made a Slayer like tool. And, and they sold it to Facebook. And you can still use it today. So it's called FB infer now, that you can go to this FB infer website and find out how to use it. And, and, and that really got me to thinking, like, maybe it's time to leave the research lab and go take things into product really, really into production at a level that, that, that we had, that we hadn't seen before. So, so now that we sort of realized that almost any mathematical statement, you know, maybe as we get closer and closer and closer to that, this becomes more and more commercially relevant. And so that's kind of where I wanted to take things. So this was the old Terminator website. Terminator is now dead. This website's gone. You have to go to the way back machine to find it. But what it did was pretty interesting. It inspired a new class of tools. There's a whole bunch of termination provers now that you could use. There's whole sessions at conferences on termination. There's a pretty healthy international termination prover competition. Everyone can, like, a lot of people know that termination is impossible, but now it's a much, it's a much more nuanced situation, right? Now, most people in my field at least know that termination is possible, but you can prove termination programs and sort of a practical thing that can be done. But also, I think that we made pretty mean, I mean, this vogue thing is obviously a joke. I mean, I mean, it was real, but obviously that made no material impact on the IT community. But I think that the articles in Wired, and Economist, and Financial Times, and Science did, and this great Sinin the Terminator article of the Scientific American. So I think that these helped the IT community understand that termination isn't like a death sentence. Okay, so that's the end of my Cambridge story. As I said, yeah, so I mean, I said goodbye to MSR. I've gone on to Amazon. That's three talks. I can tell you all about that, and I'll tell you about that at drinks if you want to know more about it. But I've tried not to talk about the Amazon work because that's all I do all these days. So I just, I thought it'd be fun to come here and tell you this Ramsey Turing story, and I hope you had fun. So with that, I'll gavel this to a close, and I'm happy to take questions. Well, thank you for that wonderful talk. Let's have some questions. And we have a microphone to go around. So first question. Byron, great talk, fantastic talk. Thank you. Maybe it's a relief that you didn't mention artificial intelligence because it's so much in the in both these days. But I suppose I would have asked about that. I mean, obviously Turing was famous for that, but I mean, how do you see maybe today's developments in artificial intelligence having an impact on the kind of, you know, automated reasoning that you're talking about? Yeah, I'm very excited about so the in the automated reasoning sometimes is a really terrible name for it because it's rather not automated, right? Like there's there's a lot of tools, there's tools like Lean, Paul Light, Isabelle, you know, I can name a whole bunch of tools, and they require a human to sit there and poke it to make it do the right thing. You ultimately get a proof that it's the checks, the checking is automating, but the finding is not. And those tools are rather more powerful in theory than the fully automated tools because the automated tools, because the problem is undecidable, cut a bunch of corners about what they can prove. So they can prove a much more limited set of things, whereas a super genius sitting together with one of these tools that are not automated, as automated can do incredible things. So all of your proofs of like the four color theorem, the Kepler conjecture, you know, that have been done with with with these tools have required a human. And so what we're seeing right now is that the generative AI chat GPT style tools are able to do these. So that's a really amazing time. So what they can because they're training on all the past proofs. And all the tools and these tools are super hard to use. But guess what, all the people who were making them able to use wrote papers about it, and provided scripts and the scripts are on GitHub and the tools have trained on that. So now they're able to say, you know, like, hey, you know, find me a proof and haul light of XYZ. And they're not terrible. So I so I think that's a really amazing thing. So making the tools easier. The other the observation that I'll just sort of put on the table there is that when LLMs lie to you, that's incorrectness. And guess what we know how to do, right? There's there's there's statements that are incorrect. And, and, and, and, you know, it's not escaped the notice of the community that that's something we could potentially solve. So but that's, that's, you know, that's a whole new area. There's a question there. Any, any thoughts on why you explain how you took the Frank, Frank Ramsey staff and the Turing staff, and you put it together and you move forward for a subset of the problems? Any thoughts why Turing didn't do that himself, given that, presumably, they, they knew each of them pretty well and charged each other intellectually? Yeah, so so as so the part where I said, believe me, this graph, you know, we can do this thing. And then the graph got really colorful. That would be very hard to do manually. So the paper would have been pages and pages and pages of calculations, which computers are really good at and humans are horrible at. So I think what, what, so the single ranking function, you just need a really smart, insightful person to be like, Oh, I got it. I was in the shower and I realized this is it, where, but, but in terms of automation, it's really hard to know even where to start. Whereas this, this other approach is much more automatable. So I think that's probably, probably the reason. We have another question there. Thank you for the talk. So for all those twos for automated reasoning, I'm guessing those twos are not formally verified. My question is, do you think there's any value in actually formally verifying their correctness? Or do you think there's, it's just too much work to do so? There are some tools that are formally verified. And what a lot of the tools do today is produce a proof that can be audited independently. So for example, a lot, a lot of these tools boil down to a class of tools called SAT or SMT solvers, propositional satisfiability, or, or satisfiability of propositional logic together with other theories like arithmetic, you name it, strings, arrays, undertropper functions. And the solvers today can produce proofs that can be audited independently by a tool like HallLite, Lean, et cetera. And let's, let's say that we believe HallLite. It's very small, kind of eyes have looked at it and they're like, okay, we're going to believe that. Then these tools that are, that are doing really pretty harrowing high performance computing to try and find the proofs, ultimately produce a proof that can be checked with a simple thing. That's pretty believable. So yeah, so that's something that we've pushed on really. I don't want to talk about Amazon too much today because it's like, that's all I ever do nowadays. But at Amazon, that's something we've pushed on very, very hard. It's actually producing auditable proofs as opposed to just some magic tool that some smart person wrote and you just have to believe it. We have a question over here. So it's a two-part question. You mentioned British Airways and you said that could they arrive on time enough or frequently enough to be useful? You didn't say anything about them arriving with a luggage. I don't suppose there's any kind of mathematics. I'm not going to take that one. But the second thing was to think about classes of mathematical problems that may not be where you can anticipate or hypothesize that a solution or an algorithm could exist. So the example I was thinking of while you were talking was the traveling salesman where, and I imagine that Amazon must have thought about this for a while, getting the in the course you're trying to deliver, where the presumption is that an algorithm could be found, but that actually proving it within a finite time is, or at least up to now, hasn't been possible. There's something solved and I'm not aware of it. Is there an extension from the kind of approach that you were taking there to prove termination to actually tackling those class problems? Maybe try to come up with a definitive yes, there is definitely, we can now state that there will be a finite algorithm, even if we can't actually find it within a finite time, or even to help us to find it. Oh yeah, I probably not quite going to answer your question, but a couple of thoughts. One of the interesting things about Ramsey's theorem is it says you have this arrow and graph and there exists a monochromatic subgraph, but it doesn't show it to you, so it's not constructive. And so if you use some of these techniques, you can't actually see the termination argument, you just know it exists. But I think your question was rooted more in a little bit about can we synthesize or convince ourselves that algorithms exist when we don't know what this specific algorithm is there. We surmise they do, but we can't definitively, or at least we couldn't definitively prove it. Yes, so I think so, I mean that like, if goal box conjecture is proved likely, it's via these methods where you don't, like the proof is kind of non-constructive in some sense. I imagine so often non-constructive proofs are easier than constructive proofs. So yeah, so I think that the harder part will actually be to find the witness. We have another question in the back there. So Byron, I'm sure you're aware there were two schools of computer science in Cambridge in the post-war years, cheering, because there's mathematical sophistication, mostly programmed in binary on the Manchester Malt 1 and the Pylor Ace, because he could use his mathematical sophistication to kind of reason about the algorithms and convince himself they were correct. So the fact that notation was a very unproductive way of writing software didn't bother him. The engineering philosophy that kind of came from people like Wilks and other colleges in Cambridge just down the road was give the users a symbolic notation to seduce them into the idea that programming actually is really very easy and you could just write stuff and it would be fine. Yeah. Kind of the symbolic world of one because we have programming languages and the effort in programming languages has been to design languages in which you can't make mistakes, yet you can still write useful stuff. So my kind of question is now we have the kind of tools you're talking about. Do we need to continue investing in improving programming languages or can we just use scruffy languages and rely on the tools like yours to prove our software is correct? So yeah, all programming languages are scruffy, but I've never quite managed to find the perfect one. Couple of observations there. So one observation is I think Rust is this incredible language. And so I spent a lot of time trying to get people working on very low level system code to adopt tools that we had that could prove memory safety of those programs. And it was really tough learning. And then one day Rust comes along and they're all like without me even prompting them like, oh, I started learning Rust. And Rust has a very sophisticated prover in it, but they came for the speed. So because Rust could be faster, they're like, I'll learn these tools, but also it was super well done that the developers of Rust talk about ergonomics, like the ergonomics of developing and Rust is really important to them. And I think that's been very, very powerful. So one could prove, you know, just like there's turning completeness of you can express all programs in Rust or C or Askel or Prolog. There's, there's sort of, you know, you can prove the same things in a lot of these systems, but I think that Rust's ergonomics are much nicer than some of the tools like in C where you then try and prove, prove memory safety. That's my first observation. Second observation is there's this fascinating blog post by Ranjit Jhalla where he shows that you can take a program in an imperative language and prove it using horror triple style reasoning. And you have, sorry, everyone, just bear with me for a second. You have a horror triples of quantifiers and, and, and then you just slam the, you apply these SMT solvers with quantifier support and it's, it's so hard and it's so compute expensive. Or you could write the same program in liquid Haskell and there's no quantifiers. You can prove the same property and it's because Hindley Milner is somehow resolving the quantifiers for you and it's very, very low power, very easy, very predictable. You don't make a change to your code over here and suddenly the proof stops going through. So, so I think that there's a lot to be said for the ergonomics of the language and the IDE and the experience, particularly developing in cloud, you know, I'm talking about Amazon, but if you're developing programs in cloud, the ergonomics of how do you develop that and understand the program such that you don't have to like SSH over to some other machine to find out what the machine that's stated in, I think are very, very important. So, so I think that automated reasoning, programming languages and the sort of software development experience go really hand in hand and there's some very powerful experiences we can have now that we couldn't have before. Great. Other questions? Okay. I think it's time to thank Byron for a wonderful talk. And I believe though there are going to be refreshments out in the chat window room again. Okay. Thank you all.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 16.8, "text": " Hello. Welcome everyone to the sixth annual Turing lecture. This lecture series is a part", "tokens": [50364, 2425, 13, 4027, 1518, 281, 264, 15102, 9784, 314, 1345, 7991, 13, 639, 7991, 2638, 307, 257, 644, 51204], "temperature": 0.0, "avg_logprob": -0.2686934138453284, "compression_ratio": 1.3937007874015748, "no_speech_prob": 0.107172392308712}, {"id": 1, "seek": 0, "start": 16.8, "end": 23.52, "text": " of a broader effort at Kings called the Alan Turing at Kings Initiative. And this is an", "tokens": [51204, 295, 257, 13227, 4630, 412, 21855, 1219, 264, 16442, 314, 1345, 412, 21855, 26166, 13, 400, 341, 307, 364, 51540], "temperature": 0.0, "avg_logprob": -0.2686934138453284, "compression_ratio": 1.3937007874015748, "no_speech_prob": 0.107172392308712}, {"id": 2, "seek": 2352, "start": 23.52, "end": 30.4, "text": " initiative to raise funds for studentships, fellowships, and other academic endeavors.", "tokens": [50364, 11552, 281, 5300, 8271, 337, 1731, 7640, 11, 24989, 82, 11, 293, 661, 7778, 49608, 13, 50708], "temperature": 0.0, "avg_logprob": -0.13345312220709665, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.03618066757917404}, {"id": 3, "seek": 2352, "start": 30.96, "end": 39.84, "text": " These lectures are essentially all of them are focused on topics that somehow relate", "tokens": [50736, 1981, 16564, 366, 4476, 439, 295, 552, 366, 5178, 322, 8378, 300, 6063, 10961, 51180], "temperature": 0.0, "avg_logprob": -0.13345312220709665, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.03618066757917404}, {"id": 4, "seek": 2352, "start": 39.84, "end": 47.2, "text": " legacy of Alan Turing. And today's talk is going to be about what computer scientists", "tokens": [51180, 11711, 295, 16442, 314, 1345, 13, 400, 965, 311, 751, 307, 516, 281, 312, 466, 437, 3820, 7708, 51548], "temperature": 0.0, "avg_logprob": -0.13345312220709665, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.03618066757917404}, {"id": 5, "seek": 4720, "start": 47.2, "end": 53.84, "text": " like to call formal methods. And this means applying logic and mathematics to the reasoning", "tokens": [50364, 411, 281, 818, 9860, 7150, 13, 400, 341, 1355, 9275, 9952, 293, 18666, 281, 264, 21577, 50696], "temperature": 0.0, "avg_logprob": -0.08854399188872307, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.1345842033624649}, {"id": 6, "seek": 4720, "start": 53.84, "end": 59.2, "text": " about the correctness of programs basically, or building tools to help people do that kind of", "tokens": [50696, 466, 264, 3006, 1287, 295, 4268, 1936, 11, 420, 2390, 3873, 281, 854, 561, 360, 300, 733, 295, 50964], "temperature": 0.0, "avg_logprob": -0.08854399188872307, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.1345842033624649}, {"id": 7, "seek": 4720, "start": 59.2, "end": 68.64, "text": " thing. And our speaker Byron Cook is a professor at UCL and a vice president and distinguished", "tokens": [50964, 551, 13, 400, 527, 8145, 3146, 2044, 12259, 307, 257, 8304, 412, 14079, 43, 293, 257, 11964, 3868, 293, 21702, 51436], "temperature": 0.0, "avg_logprob": -0.08854399188872307, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.1345842033624649}, {"id": 8, "seek": 6864, "start": 68.64, "end": 78.72, "text": " scientist at Amazon. And Byron has been sort of at the cutting edge of actually applying formal", "tokens": [50364, 12662, 412, 6795, 13, 400, 3146, 2044, 575, 668, 1333, 295, 412, 264, 6492, 4691, 295, 767, 9275, 9860, 50868], "temperature": 0.0, "avg_logprob": -0.09940458351457623, "compression_ratio": 1.4313725490196079, "no_speech_prob": 0.033572666347026825}, {"id": 9, "seek": 6864, "start": 78.72, "end": 86.72, "text": " methods in the real world. So the work he did, for example, at Intel very early on when Intel", "tokens": [50868, 7150, 294, 264, 957, 1002, 13, 407, 264, 589, 415, 630, 11, 337, 1365, 11, 412, 19762, 588, 2440, 322, 562, 19762, 51268], "temperature": 0.0, "avg_logprob": -0.09940458351457623, "compression_ratio": 1.4313725490196079, "no_speech_prob": 0.033572666347026825}, {"id": 10, "seek": 6864, "start": 86.72, "end": 92.8, "text": " was having problems with chip design, I don't know if you remember the Pentium bug, but that certainly", "tokens": [51268, 390, 1419, 2740, 365, 11409, 1715, 11, 286, 500, 380, 458, 498, 291, 1604, 264, 20165, 2197, 7426, 11, 457, 300, 3297, 51572], "temperature": 0.0, "avg_logprob": -0.09940458351457623, "compression_ratio": 1.4313725490196079, "no_speech_prob": 0.033572666347026825}, {"id": 11, "seek": 9280, "start": 93.75999999999999, "end": 99.44, "text": " stimulated a lot of effort to use formal methods in proving the design of circuits", "tokens": [50412, 8983, 6987, 257, 688, 295, 4630, 281, 764, 9860, 7150, 294, 27221, 264, 1715, 295, 26354, 50696], "temperature": 0.0, "avg_logprob": -0.07772433373235887, "compression_ratio": 1.5480225988700564, "no_speech_prob": 0.0025504990480840206}, {"id": 12, "seek": 9280, "start": 100.08, "end": 108.0, "text": " correct. Byron then went on to Microsoft where he developed a lot of verification tools that were", "tokens": [50728, 3006, 13, 3146, 2044, 550, 1437, 322, 281, 8116, 689, 415, 4743, 257, 688, 295, 30206, 3873, 300, 645, 51124], "temperature": 0.0, "avg_logprob": -0.07772433373235887, "compression_ratio": 1.5480225988700564, "no_speech_prob": 0.0025504990480840206}, {"id": 13, "seek": 9280, "start": 108.0, "end": 117.52, "text": " essentially solving the problems that Turing proved were unsolvable. And it turns out many of", "tokens": [51124, 4476, 12606, 264, 2740, 300, 314, 1345, 14617, 645, 2693, 401, 17915, 13, 400, 309, 4523, 484, 867, 295, 51600], "temperature": 0.0, "avg_logprob": -0.07772433373235887, "compression_ratio": 1.5480225988700564, "no_speech_prob": 0.0025504990480840206}, {"id": 14, "seek": 11752, "start": 117.6, "end": 124.96, "text": " them are solvable in practice. And that sort of that work got rid of the blue screen. Remember", "tokens": [50368, 552, 366, 1404, 17915, 294, 3124, 13, 400, 300, 1333, 295, 300, 589, 658, 3973, 295, 264, 3344, 2568, 13, 5459, 50736], "temperature": 0.0, "avg_logprob": -0.10227156722027322, "compression_ratio": 1.7579908675799087, "no_speech_prob": 0.005058887414634228}, {"id": 15, "seek": 11752, "start": 124.96, "end": 130.32, "text": " the blue screen of death from Microsoft? Well, that work pretty much got rid of that blue screen", "tokens": [50736, 264, 3344, 2568, 295, 2966, 490, 8116, 30, 1042, 11, 300, 589, 1238, 709, 658, 3973, 295, 300, 3344, 2568, 51004], "temperature": 0.0, "avg_logprob": -0.10227156722027322, "compression_ratio": 1.7579908675799087, "no_speech_prob": 0.005058887414634228}, {"id": 16, "seek": 11752, "start": 130.32, "end": 138.4, "text": " of death. And then from there, Byron went on to Amazon where he really spearheaded the formation", "tokens": [51004, 295, 2966, 13, 400, 550, 490, 456, 11, 3146, 2044, 1437, 322, 281, 6795, 689, 415, 534, 26993, 28409, 264, 11723, 51408], "temperature": 0.0, "avg_logprob": -0.10227156722027322, "compression_ratio": 1.7579908675799087, "no_speech_prob": 0.005058887414634228}, {"id": 17, "seek": 11752, "start": 138.4, "end": 145.35999999999999, "text": " of formal methods groups at Amazon. And today Byron tells me there are over 600 people at Amazon", "tokens": [51408, 295, 9860, 7150, 3935, 412, 6795, 13, 400, 965, 3146, 2044, 5112, 385, 456, 366, 670, 11849, 561, 412, 6795, 51756], "temperature": 0.0, "avg_logprob": -0.10227156722027322, "compression_ratio": 1.7579908675799087, "no_speech_prob": 0.005058887414634228}, {"id": 18, "seek": 14536, "start": 145.36, "end": 151.68, "text": " working on formal methods, and over 20 groups doing that kind of thing. So apparently this kind", "tokens": [50364, 1364, 322, 9860, 7150, 11, 293, 670, 945, 3935, 884, 300, 733, 295, 551, 13, 407, 7970, 341, 733, 50680], "temperature": 0.0, "avg_logprob": -0.09603951374689738, "compression_ratio": 1.5860655737704918, "no_speech_prob": 0.002471498679369688}, {"id": 19, "seek": 14536, "start": 151.68, "end": 160.88000000000002, "text": " of work touches every aspect of Amazon's development and rollout of their services. And I just want", "tokens": [50680, 295, 589, 17431, 633, 4171, 295, 6795, 311, 3250, 293, 3373, 346, 295, 641, 3328, 13, 400, 286, 445, 528, 51140], "temperature": 0.0, "avg_logprob": -0.09603951374689738, "compression_ratio": 1.5860655737704918, "no_speech_prob": 0.002471498679369688}, {"id": 20, "seek": 14536, "start": 160.88000000000002, "end": 167.60000000000002, "text": " to say that when I did my PhD in kind of in this area back in the 80s, this was considered like", "tokens": [51140, 281, 584, 300, 562, 286, 630, 452, 14476, 294, 733, 295, 294, 341, 1859, 646, 294, 264, 4688, 82, 11, 341, 390, 4888, 411, 51476], "temperature": 0.0, "avg_logprob": -0.09603951374689738, "compression_ratio": 1.5860655737704918, "no_speech_prob": 0.002471498679369688}, {"id": 21, "seek": 14536, "start": 167.60000000000002, "end": 174.24, "text": " kind of crazy stuff that no one would ever use, that was too impractical, it was focused on toy", "tokens": [51476, 733, 295, 3219, 1507, 300, 572, 472, 576, 1562, 764, 11, 300, 390, 886, 704, 1897, 804, 11, 309, 390, 5178, 322, 12058, 51808], "temperature": 0.0, "avg_logprob": -0.09603951374689738, "compression_ratio": 1.5860655737704918, "no_speech_prob": 0.002471498679369688}, {"id": 22, "seek": 17424, "start": 174.24, "end": 179.84, "text": " problems. No one is ever going to use this stuff. And I think for me, it's very satisfying to see", "tokens": [50364, 2740, 13, 883, 472, 307, 1562, 516, 281, 764, 341, 1507, 13, 400, 286, 519, 337, 385, 11, 309, 311, 588, 18348, 281, 536, 50644], "temperature": 0.0, "avg_logprob": -0.09284429964811905, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.001987110124900937}, {"id": 23, "seek": 17424, "start": 181.52, "end": 188.56, "text": " what someone like Byron is doing now, like actually bringing these ideas and technologies", "tokens": [50728, 437, 1580, 411, 3146, 2044, 307, 884, 586, 11, 411, 767, 5062, 613, 3487, 293, 7943, 51080], "temperature": 0.0, "avg_logprob": -0.09284429964811905, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.001987110124900937}, {"id": 24, "seek": 17424, "start": 188.56, "end": 195.36, "text": " into the real world, making real impact with them. So I'd like to introduce Byron.", "tokens": [51080, 666, 264, 957, 1002, 11, 1455, 957, 2712, 365, 552, 13, 407, 286, 1116, 411, 281, 5366, 3146, 2044, 13, 51420], "temperature": 0.0, "avg_logprob": -0.09284429964811905, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.001987110124900937}, {"id": 25, "seek": 17424, "start": 195.36, "end": 203.60000000000002, "text": " So we finally figured it out. And it's a huge honor for me to be invited and to be associated with", "tokens": [51420, 407, 321, 2721, 8932, 309, 484, 13, 400, 309, 311, 257, 2603, 5968, 337, 385, 281, 312, 9185, 293, 281, 312, 6615, 365, 51832], "temperature": 0.0, "avg_logprob": -0.09284429964811905, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.001987110124900937}, {"id": 26, "seek": 20424, "start": 204.48000000000002, "end": 209.20000000000002, "text": " Alan Turing and Kings. I hope you all read the abstract and know what you've signed yourself", "tokens": [50376, 16442, 314, 1345, 293, 21855, 13, 286, 1454, 291, 439, 1401, 264, 12649, 293, 458, 437, 291, 600, 8175, 1803, 50612], "temperature": 0.0, "avg_logprob": -0.1190170037626016, "compression_ratio": 1.6077586206896552, "no_speech_prob": 0.005636435002088547}, {"id": 27, "seek": 20424, "start": 209.20000000000002, "end": 217.60000000000002, "text": " up for. So I'm going to tell you, I'm going to attempt to tell you something rather technical,", "tokens": [50612, 493, 337, 13, 407, 286, 478, 516, 281, 980, 291, 11, 286, 478, 516, 281, 5217, 281, 980, 291, 746, 2831, 6191, 11, 51032], "temperature": 0.0, "avg_logprob": -0.1190170037626016, "compression_ratio": 1.6077586206896552, "no_speech_prob": 0.005636435002088547}, {"id": 28, "seek": 20424, "start": 217.60000000000002, "end": 222.72, "text": " but I've promised to aim it at a general audience, and I think I'm going to fail horribly,", "tokens": [51032, 457, 286, 600, 10768, 281, 5939, 309, 412, 257, 2674, 4034, 11, 293, 286, 519, 286, 478, 516, 281, 3061, 45028, 11, 51288], "temperature": 0.0, "avg_logprob": -0.1190170037626016, "compression_ratio": 1.6077586206896552, "no_speech_prob": 0.005636435002088547}, {"id": 29, "seek": 20424, "start": 222.72, "end": 229.04000000000002, "text": " but let's have a good time together. So we'll see if that works. As I was preparing this talk,", "tokens": [51288, 457, 718, 311, 362, 257, 665, 565, 1214, 13, 407, 321, 603, 536, 498, 300, 1985, 13, 1018, 286, 390, 10075, 341, 751, 11, 51604], "temperature": 0.0, "avg_logprob": -0.1190170037626016, "compression_ratio": 1.6077586206896552, "no_speech_prob": 0.005636435002088547}, {"id": 30, "seek": 22904, "start": 229.12, "end": 235.84, "text": " I'm like, oh, what have I done to myself? But I think this talk brings something for everyone.", "tokens": [50368, 286, 478, 411, 11, 1954, 11, 437, 362, 286, 1096, 281, 2059, 30, 583, 286, 519, 341, 751, 5607, 746, 337, 1518, 13, 50704], "temperature": 0.0, "avg_logprob": -0.13557093342145285, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.05028359964489937}, {"id": 31, "seek": 22904, "start": 235.84, "end": 243.44, "text": " So I think that the technical people in the space will enjoy pieces of it. And then those of you", "tokens": [50704, 407, 286, 519, 300, 264, 6191, 561, 294, 264, 1901, 486, 2103, 3755, 295, 309, 13, 400, 550, 729, 295, 291, 51084], "temperature": 0.0, "avg_logprob": -0.13557093342145285, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.05028359964489937}, {"id": 32, "seek": 22904, "start": 243.44, "end": 249.2, "text": " who don't come from the space, I hope you'll take away something from it. That's interesting to you.", "tokens": [51084, 567, 500, 380, 808, 490, 264, 1901, 11, 286, 1454, 291, 603, 747, 1314, 746, 490, 309, 13, 663, 311, 1880, 281, 291, 13, 51372], "temperature": 0.0, "avg_logprob": -0.13557093342145285, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.05028359964489937}, {"id": 33, "seek": 22904, "start": 249.2, "end": 258.8, "text": " So this talk takes a needle and thread through a bunch of characters that are Cambridge based.", "tokens": [51372, 407, 341, 751, 2516, 257, 11037, 293, 7207, 807, 257, 3840, 295, 4342, 300, 366, 24876, 2361, 13, 51852], "temperature": 0.0, "avg_logprob": -0.13557093342145285, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.05028359964489937}, {"id": 34, "seek": 25880, "start": 259.76, "end": 264.08, "text": " I was really excited to be invited to give this talk because it's a very Cambridge story.", "tokens": [50412, 286, 390, 534, 2919, 281, 312, 9185, 281, 976, 341, 751, 570, 309, 311, 257, 588, 24876, 1657, 13, 50628], "temperature": 0.0, "avg_logprob": -0.20239986072887073, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.0013242134591564536}, {"id": 35, "seek": 25880, "start": 264.08, "end": 270.56, "text": " There's a King's story. So there's some characters that were King's people. Frank Ramsey is a really", "tokens": [50628, 821, 311, 257, 3819, 311, 1657, 13, 407, 456, 311, 512, 4342, 300, 645, 3819, 311, 561, 13, 6823, 9078, 7399, 307, 257, 534, 50952], "temperature": 0.0, "avg_logprob": -0.20239986072887073, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.0013242134591564536}, {"id": 36, "seek": 25880, "start": 270.56, "end": 275.36, "text": " interesting character. I mean, he's a lot less well known than Turing, but also very, very important.", "tokens": [50952, 1880, 2517, 13, 286, 914, 11, 415, 311, 257, 688, 1570, 731, 2570, 813, 314, 1345, 11, 457, 611, 588, 11, 588, 1021, 13, 51192], "temperature": 0.0, "avg_logprob": -0.20239986072887073, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.0013242134591564536}, {"id": 37, "seek": 25880, "start": 276.64, "end": 284.64, "text": " King's person, sort of the boy of wonder actually born in Cambridge, born just on the other side of", "tokens": [51256, 3819, 311, 954, 11, 1333, 295, 264, 3237, 295, 2441, 767, 4232, 294, 24876, 11, 4232, 445, 322, 264, 661, 1252, 295, 51656], "temperature": 0.0, "avg_logprob": -0.20239986072887073, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.0013242134591564536}, {"id": 38, "seek": 28464, "start": 285.2, "end": 290.71999999999997, "text": " Jesus' dream at the locked bridge, the house when you cross the locked bridge. He was born there.", "tokens": [50392, 2705, 6, 3055, 412, 264, 9376, 7283, 11, 264, 1782, 562, 291, 3278, 264, 9376, 7283, 13, 634, 390, 4232, 456, 13, 50668], "temperature": 0.0, "avg_logprob": -0.2381420890883644, "compression_ratio": 1.7366071428571428, "no_speech_prob": 0.006895972415804863}, {"id": 39, "seek": 28464, "start": 290.71999999999997, "end": 296.0, "text": " And then because father was at Muddlin, and then he was here. And I think he worked with this chap", "tokens": [50668, 400, 550, 570, 3086, 390, 412, 376, 26656, 5045, 11, 293, 550, 415, 390, 510, 13, 400, 286, 519, 415, 2732, 365, 341, 13223, 50932], "temperature": 0.0, "avg_logprob": -0.2381420890883644, "compression_ratio": 1.7366071428571428, "no_speech_prob": 0.006895972415804863}, {"id": 40, "seek": 28464, "start": 296.0, "end": 305.12, "text": " quite a bit. And then, unfortunately, he died. I read his new biography about him. And from what", "tokens": [50932, 1596, 257, 857, 13, 400, 550, 11, 7015, 11, 415, 4539, 13, 286, 1401, 702, 777, 37062, 466, 796, 13, 400, 490, 437, 51388], "temperature": 0.0, "avg_logprob": -0.2381420890883644, "compression_ratio": 1.7366071428571428, "no_speech_prob": 0.006895972415804863}, {"id": 41, "seek": 28464, "start": 305.12, "end": 310.24, "text": " I can work out from the biography, he died from a disease he caught by swimming in the camp. So", "tokens": [51388, 286, 393, 589, 484, 490, 264, 37062, 11, 415, 4539, 490, 257, 4752, 415, 5415, 538, 11989, 294, 264, 2255, 13, 407, 51644], "temperature": 0.0, "avg_logprob": -0.2381420890883644, "compression_ratio": 1.7366071428571428, "no_speech_prob": 0.006895972415804863}, {"id": 42, "seek": 31024, "start": 310.88, "end": 317.6, "text": " you need to be comfortable. And then Alan Turing, I don't think I need to introduce.", "tokens": [50396, 291, 643, 281, 312, 4619, 13, 400, 550, 16442, 314, 1345, 11, 286, 500, 380, 519, 286, 643, 281, 5366, 13, 50732], "temperature": 0.0, "avg_logprob": -0.11728812708999171, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.005296891555190086}, {"id": 43, "seek": 31024, "start": 318.40000000000003, "end": 324.0, "text": " There's another character, which is the spinning beach ball on the top left, just above Frank", "tokens": [50772, 821, 311, 1071, 2517, 11, 597, 307, 264, 15640, 7534, 2594, 322, 264, 1192, 1411, 11, 445, 3673, 6823, 51052], "temperature": 0.0, "avg_logprob": -0.11728812708999171, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.005296891555190086}, {"id": 44, "seek": 31024, "start": 324.0, "end": 328.96000000000004, "text": " Ramsey. And so some of you may be familiar with this concept. So I'm going to give you a bit of", "tokens": [51052, 9078, 7399, 13, 400, 370, 512, 295, 291, 815, 312, 4963, 365, 341, 3410, 13, 407, 286, 478, 516, 281, 976, 291, 257, 857, 295, 51300], "temperature": 0.0, "avg_logprob": -0.11728812708999171, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.005296891555190086}, {"id": 45, "seek": 31024, "start": 328.96000000000004, "end": 334.56, "text": " IT advice. So if you take nothing else away from this talk, you can take this. When you see that,", "tokens": [51300, 6783, 5192, 13, 407, 498, 291, 747, 1825, 1646, 1314, 490, 341, 751, 11, 291, 393, 747, 341, 13, 1133, 291, 536, 300, 11, 51580], "temperature": 0.0, "avg_logprob": -0.11728812708999171, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.005296891555190086}, {"id": 46, "seek": 33456, "start": 334.56, "end": 340.32, "text": " what you need to do is you need to go into the force quit applications of your Mac, find the", "tokens": [50364, 437, 291, 643, 281, 360, 307, 291, 643, 281, 352, 666, 264, 3464, 10366, 5821, 295, 428, 5707, 11, 915, 264, 50652], "temperature": 0.0, "avg_logprob": -0.10818178942249079, "compression_ratio": 1.8548387096774193, "no_speech_prob": 0.1174645870923996}, {"id": 47, "seek": 33456, "start": 340.32, "end": 345.84, "text": " program, and kill it. And hopefully that will take care of it, though it might be there's an", "tokens": [50652, 1461, 11, 293, 1961, 309, 13, 400, 4696, 300, 486, 747, 1127, 295, 309, 11, 1673, 309, 1062, 312, 456, 311, 364, 50928], "temperature": 0.0, "avg_logprob": -0.10818178942249079, "compression_ratio": 1.8548387096774193, "no_speech_prob": 0.1174645870923996}, {"id": 48, "seek": 33456, "start": 345.84, "end": 349.12, "text": " infant. So then what's happening here is there's an infinite loop in one of your programs, and", "tokens": [50928, 16757, 13, 407, 550, 437, 311, 2737, 510, 307, 456, 311, 364, 13785, 6367, 294, 472, 295, 428, 4268, 11, 293, 51092], "temperature": 0.0, "avg_logprob": -0.10818178942249079, "compression_ratio": 1.8548387096774193, "no_speech_prob": 0.1174645870923996}, {"id": 49, "seek": 33456, "start": 349.12, "end": 352.56, "text": " it's causing it to hang. Hopefully it's not in the operating system, because now you're really", "tokens": [51092, 309, 311, 9853, 309, 281, 3967, 13, 10429, 309, 311, 406, 294, 264, 7447, 1185, 11, 570, 586, 291, 434, 534, 51264], "temperature": 0.0, "avg_logprob": -0.10818178942249079, "compression_ratio": 1.8548387096774193, "no_speech_prob": 0.1174645870923996}, {"id": 50, "seek": 33456, "start": 352.56, "end": 356.88, "text": " in trouble. But if it's in, but if it's in the, but if it's in like a Chrome or Outlook or something", "tokens": [51264, 294, 5253, 13, 583, 498, 309, 311, 294, 11, 457, 498, 309, 311, 294, 264, 11, 457, 498, 309, 311, 294, 411, 257, 15327, 420, 5925, 12747, 420, 746, 51480], "temperature": 0.0, "avg_logprob": -0.10818178942249079, "compression_ratio": 1.8548387096774193, "no_speech_prob": 0.1174645870923996}, {"id": 51, "seek": 33456, "start": 356.88, "end": 360.96, "text": " like that, you'll kill it, you'll lose your data. But you know, that's, that's how it goes. And if", "tokens": [51480, 411, 300, 11, 291, 603, 1961, 309, 11, 291, 603, 3624, 428, 1412, 13, 583, 291, 458, 11, 300, 311, 11, 300, 311, 577, 309, 1709, 13, 400, 498, 51684], "temperature": 0.0, "avg_logprob": -0.10818178942249079, "compression_ratio": 1.8548387096774193, "no_speech_prob": 0.1174645870923996}, {"id": 52, "seek": 36096, "start": 361.03999999999996, "end": 366.96, "text": " you use Windows, this is kind of what it looks like in a similar situation. If you use a phone,", "tokens": [50368, 291, 764, 8591, 11, 341, 307, 733, 295, 437, 309, 1542, 411, 294, 257, 2531, 2590, 13, 759, 291, 764, 257, 2593, 11, 50664], "temperature": 0.0, "avg_logprob": -0.16005816886095497, "compression_ratio": 1.8264150943396227, "no_speech_prob": 0.0006069524097256362}, {"id": 53, "seek": 36096, "start": 367.68, "end": 372.79999999999995, "text": " this is what it would like to look like. But I believe the phones are designed that after a certain,", "tokens": [50700, 341, 307, 437, 309, 576, 411, 281, 574, 411, 13, 583, 286, 1697, 264, 10216, 366, 4761, 300, 934, 257, 1629, 11, 50956], "temperature": 0.0, "avg_logprob": -0.16005816886095497, "compression_ratio": 1.8264150943396227, "no_speech_prob": 0.0006069524097256362}, {"id": 54, "seek": 36096, "start": 372.79999999999995, "end": 379.91999999999996, "text": " quite short amount of time, they just reboot the phone. So the Mac, luckily, doesn't reboot itself", "tokens": [50956, 1596, 2099, 2372, 295, 565, 11, 436, 445, 33818, 264, 2593, 13, 407, 264, 5707, 11, 22880, 11, 1177, 380, 33818, 2564, 51312], "temperature": 0.0, "avg_logprob": -0.16005816886095497, "compression_ratio": 1.8264150943396227, "no_speech_prob": 0.0006069524097256362}, {"id": 55, "seek": 36096, "start": 379.91999999999996, "end": 384.08, "text": " every time that it gets stuck in an infinite loop. But the phones, I think, are designed to", "tokens": [51312, 633, 565, 300, 309, 2170, 5541, 294, 364, 13785, 6367, 13, 583, 264, 10216, 11, 286, 519, 11, 366, 4761, 281, 51520], "temperature": 0.0, "avg_logprob": -0.16005816886095497, "compression_ratio": 1.8264150943396227, "no_speech_prob": 0.0006069524097256362}, {"id": 56, "seek": 36096, "start": 384.08, "end": 388.79999999999995, "text": " just, just reboot. So you may, and you may not even notice the way that the phones are assigned.", "tokens": [51520, 445, 11, 445, 33818, 13, 407, 291, 815, 11, 293, 291, 815, 406, 754, 3449, 264, 636, 300, 264, 10216, 366, 13279, 13, 51756], "temperature": 0.0, "avg_logprob": -0.16005816886095497, "compression_ratio": 1.8264150943396227, "no_speech_prob": 0.0006069524097256362}, {"id": 57, "seek": 38880, "start": 389.76, "end": 394.32, "text": " But we also have this problem. So it turns out that our bodies get, there's little infinite loops", "tokens": [50412, 583, 321, 611, 362, 341, 1154, 13, 407, 309, 4523, 484, 300, 527, 7510, 483, 11, 456, 311, 707, 13785, 16121, 50640], "temperature": 0.0, "avg_logprob": -0.09723616148296156, "compression_ratio": 1.731818181818182, "no_speech_prob": 0.0003149868280161172}, {"id": 58, "seek": 38880, "start": 394.32, "end": 399.68, "text": " sometimes that we find very unpleasant. So this is skin cancer. And it turns out that skin cancer", "tokens": [50640, 2171, 300, 321, 915, 588, 29128, 13, 407, 341, 307, 3178, 5592, 13, 400, 309, 4523, 484, 300, 3178, 5592, 50908], "temperature": 0.0, "avg_logprob": -0.09723616148296156, "compression_ratio": 1.731818181818182, "no_speech_prob": 0.0003149868280161172}, {"id": 59, "seek": 38880, "start": 399.68, "end": 406.48, "text": " is, in a sense, the, the, the regulatory mechanisms in your, in your body to maintain", "tokens": [50908, 307, 11, 294, 257, 2020, 11, 264, 11, 264, 11, 264, 18260, 15902, 294, 428, 11, 294, 428, 1772, 281, 6909, 51248], "temperature": 0.0, "avg_logprob": -0.09723616148296156, "compression_ratio": 1.731818181818182, "no_speech_prob": 0.0003149868280161172}, {"id": 60, "seek": 38880, "start": 406.48, "end": 411.6, "text": " cell growth and death. And so skin cancer is your bug, is your body kind of going into one of these", "tokens": [51248, 2815, 4599, 293, 2966, 13, 400, 370, 3178, 5592, 307, 428, 7426, 11, 307, 428, 1772, 733, 295, 516, 666, 472, 295, 613, 51504], "temperature": 0.0, "avg_logprob": -0.09723616148296156, "compression_ratio": 1.731818181818182, "no_speech_prob": 0.0003149868280161172}, {"id": 61, "seek": 41160, "start": 411.68, "end": 420.32000000000005, "text": " states. Okay. So the quest is to build tools that can talk now about what's going to happen in the", "tokens": [50368, 4368, 13, 1033, 13, 407, 264, 866, 307, 281, 1322, 3873, 300, 393, 751, 586, 466, 437, 311, 516, 281, 1051, 294, 264, 50800], "temperature": 0.0, "avg_logprob": -0.10779536004159965, "compression_ratio": 1.709090909090909, "no_speech_prob": 0.02674698457121849}, {"id": 62, "seek": 41160, "start": 420.32000000000005, "end": 426.56, "text": " future. So we want to, we want to build a tool that takes a program and says things that usually", "tokens": [50800, 2027, 13, 407, 321, 528, 281, 11, 321, 528, 281, 1322, 257, 2290, 300, 2516, 257, 1461, 293, 1619, 721, 300, 2673, 51112], "temperature": 0.0, "avg_logprob": -0.10779536004159965, "compression_ratio": 1.709090909090909, "no_speech_prob": 0.02674698457121849}, {"id": 63, "seek": 41160, "start": 426.56, "end": 432.32000000000005, "text": " have the word eventually in them. So, hey, you know, like, when I press this button,", "tokens": [51112, 362, 264, 1349, 4728, 294, 552, 13, 407, 11, 4177, 11, 291, 458, 11, 411, 11, 562, 286, 1886, 341, 2960, 11, 51400], "temperature": 0.0, "avg_logprob": -0.10779536004159965, "compression_ratio": 1.709090909090909, "no_speech_prob": 0.02674698457121849}, {"id": 64, "seek": 41160, "start": 433.20000000000005, "end": 438.24, "text": " does do the rockets eventually launch? Or, or, or when, you know, like, if I ask this question,", "tokens": [51444, 775, 360, 264, 28361, 4728, 4025, 30, 1610, 11, 420, 11, 420, 562, 11, 291, 458, 11, 411, 11, 498, 286, 1029, 341, 1168, 11, 51696], "temperature": 0.0, "avg_logprob": -0.10779536004159965, "compression_ratio": 1.709090909090909, "no_speech_prob": 0.02674698457121849}, {"id": 65, "seek": 43824, "start": 438.24, "end": 447.28000000000003, "text": " will I eventually get the answer? Or if, or if I model disease as a, as a, as a system, and then", "tokens": [50364, 486, 286, 4728, 483, 264, 1867, 30, 1610, 498, 11, 420, 498, 286, 2316, 4752, 382, 257, 11, 382, 257, 11, 382, 257, 1185, 11, 293, 550, 50816], "temperature": 0.0, "avg_logprob": -0.1289043426513672, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.008573704399168491}, {"id": 66, "seek": 43824, "start": 447.28000000000003, "end": 452.56, "text": " I want to like make a change to characterize the change, I think that we should make for, for, for", "tokens": [50816, 286, 528, 281, 411, 652, 257, 1319, 281, 38463, 264, 1319, 11, 286, 519, 300, 321, 820, 652, 337, 11, 337, 11, 337, 51080], "temperature": 0.0, "avg_logprob": -0.1289043426513672, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.008573704399168491}, {"id": 67, "seek": 43824, "start": 452.56, "end": 457.2, "text": " medicine. Now does the system eventually do the thing I wanted to do? Does the, does the, does the", "tokens": [51080, 7195, 13, 823, 775, 264, 1185, 4728, 360, 264, 551, 286, 1415, 281, 360, 30, 4402, 264, 11, 775, 264, 11, 775, 264, 51312], "temperature": 0.0, "avg_logprob": -0.1289043426513672, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.008573704399168491}, {"id": 68, "seek": 43824, "start": 457.2, "end": 463.92, "text": " cell growth stop and, and, and, and, and we, we reach homeostasis. So that's, that's the kind", "tokens": [51312, 2815, 4599, 1590, 293, 11, 293, 11, 293, 11, 293, 11, 293, 321, 11, 321, 2524, 1280, 555, 26632, 13, 407, 300, 311, 11, 300, 311, 264, 733, 51648], "temperature": 0.0, "avg_logprob": -0.1289043426513672, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.008573704399168491}, {"id": 69, "seek": 43824, "start": 463.92, "end": 467.76, "text": " of things we want to do. And we want to do this without actually running the system. We want to", "tokens": [51648, 295, 721, 321, 528, 281, 360, 13, 400, 321, 528, 281, 360, 341, 1553, 767, 2614, 264, 1185, 13, 492, 528, 281, 51840], "temperature": 0.0, "avg_logprob": -0.1289043426513672, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.008573704399168491}, {"id": 70, "seek": 46776, "start": 467.76, "end": 474.08, "text": " take the system and reason about it. Because we may not have the whole whole of the entire system.", "tokens": [50364, 747, 264, 1185, 293, 1778, 466, 309, 13, 1436, 321, 815, 406, 362, 264, 1379, 1379, 295, 264, 2302, 1185, 13, 50680], "temperature": 0.0, "avg_logprob": -0.13693307729867787, "compression_ratio": 1.8086642599277978, "no_speech_prob": 0.0003919253940694034}, {"id": 71, "seek": 46776, "start": 474.08, "end": 478.32, "text": " And also we don't want to like interact with the world, but we don't actually want to launch the", "tokens": [50680, 400, 611, 321, 500, 380, 528, 281, 411, 4648, 365, 264, 1002, 11, 457, 321, 500, 380, 767, 528, 281, 4025, 264, 50892], "temperature": 0.0, "avg_logprob": -0.13693307729867787, "compression_ratio": 1.8086642599277978, "no_speech_prob": 0.0003919253940694034}, {"id": 72, "seek": 46776, "start": 478.32, "end": 483.76, "text": " rockets to learn the law, rockets will be launched. We want to ask, you know, in some theoretical world", "tokens": [50892, 28361, 281, 1466, 264, 2101, 11, 28361, 486, 312, 8730, 13, 492, 528, 281, 1029, 11, 291, 458, 11, 294, 512, 20864, 1002, 51164], "temperature": 0.0, "avg_logprob": -0.13693307729867787, "compression_ratio": 1.8086642599277978, "no_speech_prob": 0.0003919253940694034}, {"id": 73, "seek": 46776, "start": 483.76, "end": 489.92, "text": " where we launch the rockets. Okay, so just a bit of bookkeeping. I know myself, and I'm going to use", "tokens": [51164, 689, 321, 4025, 264, 28361, 13, 1033, 11, 370, 445, 257, 857, 295, 1446, 25769, 13, 286, 458, 2059, 11, 293, 286, 478, 516, 281, 764, 51472], "temperature": 0.0, "avg_logprob": -0.13693307729867787, "compression_ratio": 1.8086642599277978, "no_speech_prob": 0.0003919253940694034}, {"id": 74, "seek": 46776, "start": 489.92, "end": 495.2, "text": " all these words to mean the same thing. So I just, just, just to take a moment, the halting problem,", "tokens": [51472, 439, 613, 2283, 281, 914, 264, 912, 551, 13, 407, 286, 445, 11, 445, 11, 445, 281, 747, 257, 1623, 11, 264, 7523, 783, 1154, 11, 51736], "temperature": 0.0, "avg_logprob": -0.13693307729867787, "compression_ratio": 1.8086642599277978, "no_speech_prob": 0.0003919253940694034}, {"id": 75, "seek": 49520, "start": 495.2, "end": 500.08, "text": " the question of program termination, finding infinite loops and talking about systems that,", "tokens": [50364, 264, 1168, 295, 1461, 1433, 2486, 11, 5006, 13785, 16121, 293, 1417, 466, 3652, 300, 11, 50608], "temperature": 0.0, "avg_logprob": -0.10857375787228954, "compression_ratio": 1.9688581314878892, "no_speech_prob": 0.0010647960007190704}, {"id": 76, "seek": 49520, "start": 500.08, "end": 504.08, "text": " like trying to show that systems don't hang. It's all the same thing. So when you hear me talk,", "tokens": [50608, 411, 1382, 281, 855, 300, 3652, 500, 380, 3967, 13, 467, 311, 439, 264, 912, 551, 13, 407, 562, 291, 1568, 385, 751, 11, 50808], "temperature": 0.0, "avg_logprob": -0.10857375787228954, "compression_ratio": 1.9688581314878892, "no_speech_prob": 0.0010647960007190704}, {"id": 77, "seek": 49520, "start": 504.08, "end": 509.28, "text": " say, in one breath, I'm saying program termination and, you know, three breaths later, I'm talking", "tokens": [50808, 584, 11, 294, 472, 6045, 11, 286, 478, 1566, 1461, 1433, 2486, 293, 11, 291, 458, 11, 1045, 33769, 1780, 11, 286, 478, 1417, 51068], "temperature": 0.0, "avg_logprob": -0.10857375787228954, "compression_ratio": 1.9688581314878892, "no_speech_prob": 0.0010647960007190704}, {"id": 78, "seek": 49520, "start": 509.28, "end": 513.28, "text": " about the halting problem. It's all the same thing. This is, this is again for the, for the", "tokens": [51068, 466, 264, 7523, 783, 1154, 13, 467, 311, 439, 264, 912, 551, 13, 639, 307, 11, 341, 307, 797, 337, 264, 11, 337, 264, 51268], "temperature": 0.0, "avg_logprob": -0.10857375787228954, "compression_ratio": 1.9688581314878892, "no_speech_prob": 0.0010647960007190704}, {"id": 79, "seek": 49520, "start": 513.28, "end": 519.68, "text": " non-technical people on the crowd. Okay, so what is program termination? So for those of you who", "tokens": [51268, 2107, 12, 29113, 804, 561, 322, 264, 6919, 13, 1033, 11, 370, 437, 307, 1461, 1433, 2486, 30, 407, 337, 729, 295, 291, 567, 51588], "temperature": 0.0, "avg_logprob": -0.10857375787228954, "compression_ratio": 1.9688581314878892, "no_speech_prob": 0.0010647960007190704}, {"id": 80, "seek": 49520, "start": 519.68, "end": 524.4, "text": " know what program termination is and know what programs are, bear with me for a moment. We're", "tokens": [51588, 458, 437, 1461, 1433, 2486, 307, 293, 458, 437, 4268, 366, 11, 6155, 365, 385, 337, 257, 1623, 13, 492, 434, 51824], "temperature": 0.0, "avg_logprob": -0.10857375787228954, "compression_ratio": 1.9688581314878892, "no_speech_prob": 0.0010647960007190704}, {"id": 81, "seek": 52440, "start": 524.4, "end": 529.52, "text": " going to take a one-minute tutorial on programs and program termination, but also this program will", "tokens": [50364, 516, 281, 747, 257, 472, 12, 18256, 7073, 322, 4268, 293, 1461, 1433, 2486, 11, 457, 611, 341, 1461, 486, 50620], "temperature": 0.0, "avg_logprob": -0.11063101911169337, "compression_ratio": 1.7627737226277371, "no_speech_prob": 0.0002098545228363946}, {"id": 82, "seek": 52440, "start": 529.52, "end": 536.0, "text": " show up from time to time. So, so it's sort of worth it to everybody. So here's a program. I'm sort", "tokens": [50620, 855, 493, 490, 565, 281, 565, 13, 407, 11, 370, 309, 311, 1333, 295, 3163, 309, 281, 2201, 13, 407, 510, 311, 257, 1461, 13, 286, 478, 1333, 50944], "temperature": 0.0, "avg_logprob": -0.11063101911169337, "compression_ratio": 1.7627737226277371, "no_speech_prob": 0.0002098545228363946}, {"id": 83, "seek": 52440, "start": 536.0, "end": 541.68, "text": " of assuming a few of you are in the, I know at least one or two people in the room don't, don't", "tokens": [50944, 295, 11926, 257, 1326, 295, 291, 366, 294, 264, 11, 286, 458, 412, 1935, 472, 420, 732, 561, 294, 264, 1808, 500, 380, 11, 500, 380, 51228], "temperature": 0.0, "avg_logprob": -0.11063101911169337, "compression_ratio": 1.7627737226277371, "no_speech_prob": 0.0002098545228363946}, {"id": 84, "seek": 52440, "start": 541.68, "end": 548.24, "text": " know how to program because they're my family. And, and so what this, this is a program written", "tokens": [51228, 458, 577, 281, 1461, 570, 436, 434, 452, 1605, 13, 400, 11, 293, 370, 437, 341, 11, 341, 307, 257, 1461, 3720, 51556], "temperature": 0.0, "avg_logprob": -0.11063101911169337, "compression_ratio": 1.7627737226277371, "no_speech_prob": 0.0002098545228363946}, {"id": 85, "seek": 52440, "start": 548.24, "end": 553.28, "text": " in Python, a language called Python. And what happens in this program is the first thing it", "tokens": [51556, 294, 15329, 11, 257, 2856, 1219, 15329, 13, 400, 437, 2314, 294, 341, 1461, 307, 264, 700, 551, 309, 51808], "temperature": 0.0, "avg_logprob": -0.11063101911169337, "compression_ratio": 1.7627737226277371, "no_speech_prob": 0.0002098545228363946}, {"id": 86, "seek": 55328, "start": 553.28, "end": 561.1999999999999, "text": " does is it says, this is a, a while loop. So it says, Hey, is in greater than one? If, if so,", "tokens": [50364, 775, 307, 309, 1619, 11, 341, 307, 257, 11, 257, 1339, 6367, 13, 407, 309, 1619, 11, 1911, 11, 307, 294, 5044, 813, 472, 30, 759, 11, 498, 370, 11, 50760], "temperature": 0.0, "avg_logprob": -0.11762784827839244, "compression_ratio": 1.814102564102564, "no_speech_prob": 0.006096268072724342}, {"id": 87, "seek": 55328, "start": 562.24, "end": 569.36, "text": " go here, do what it says, come back and then ask again. Is in greater than one? Okay, go here,", "tokens": [50812, 352, 510, 11, 360, 437, 309, 1619, 11, 808, 646, 293, 550, 1029, 797, 13, 1119, 294, 5044, 813, 472, 30, 1033, 11, 352, 510, 11, 51168], "temperature": 0.0, "avg_logprob": -0.11762784827839244, "compression_ratio": 1.814102564102564, "no_speech_prob": 0.006096268072724342}, {"id": 88, "seek": 55328, "start": 569.36, "end": 576.0799999999999, "text": " do what it says, come back, ask again. And the idea is, is that this code here is modifying in", "tokens": [51168, 360, 437, 309, 1619, 11, 808, 646, 11, 1029, 797, 13, 400, 264, 1558, 307, 11, 307, 300, 341, 3089, 510, 307, 42626, 294, 51504], "temperature": 0.0, "avg_logprob": -0.11762784827839244, "compression_ratio": 1.814102564102564, "no_speech_prob": 0.006096268072724342}, {"id": 89, "seek": 57608, "start": 576.08, "end": 583.2800000000001, "text": " and the, and, and one would hope that eventually the code that's modifying in would make in be", "tokens": [50364, 293, 264, 11, 293, 11, 293, 472, 576, 1454, 300, 4728, 264, 3089, 300, 311, 42626, 294, 576, 652, 294, 312, 50724], "temperature": 0.0, "avg_logprob": -0.1165924866994222, "compression_ratio": 1.8488372093023255, "no_speech_prob": 0.006487466394901276}, {"id": 90, "seek": 57608, "start": 583.2800000000001, "end": 589.9200000000001, "text": " that not greater than one, in which case now the loop would terminate. Okay, so that's the idea.", "tokens": [50724, 300, 406, 5044, 813, 472, 11, 294, 597, 1389, 586, 264, 6367, 576, 10761, 473, 13, 1033, 11, 370, 300, 311, 264, 1558, 13, 51056], "temperature": 0.0, "avg_logprob": -0.1165924866994222, "compression_ratio": 1.8488372093023255, "no_speech_prob": 0.006487466394901276}, {"id": 91, "seek": 57608, "start": 589.9200000000001, "end": 594.96, "text": " So this is a computer program. That's a while loop. Sometimes while loops, you want them to run", "tokens": [51056, 407, 341, 307, 257, 3820, 1461, 13, 663, 311, 257, 1339, 6367, 13, 4803, 1339, 16121, 11, 291, 528, 552, 281, 1190, 51308], "temperature": 0.0, "avg_logprob": -0.1165924866994222, "compression_ratio": 1.8488372093023255, "no_speech_prob": 0.006487466394901276}, {"id": 92, "seek": 57608, "start": 594.96, "end": 600.24, "text": " forever. For example, like you're, you want your actual computer to run forever, but inside the", "tokens": [51308, 5680, 13, 1171, 1365, 11, 411, 291, 434, 11, 291, 528, 428, 3539, 3820, 281, 1190, 5680, 11, 457, 1854, 264, 51572], "temperature": 0.0, "avg_logprob": -0.1165924866994222, "compression_ratio": 1.8488372093023255, "no_speech_prob": 0.006487466394901276}, {"id": 93, "seek": 57608, "start": 600.24, "end": 605.12, "text": " computer, inside that loop is often some code that you really want to terminate. And that way", "tokens": [51572, 3820, 11, 1854, 300, 6367, 307, 2049, 512, 3089, 300, 291, 534, 528, 281, 10761, 473, 13, 400, 300, 636, 51816], "temperature": 0.0, "avg_logprob": -0.1165924866994222, "compression_ratio": 1.8488372093023255, "no_speech_prob": 0.006487466394901276}, {"id": 94, "seek": 60512, "start": 605.12, "end": 609.36, "text": " you can get back to the start of the loop. So often systems are written with one big while loop", "tokens": [50364, 291, 393, 483, 646, 281, 264, 722, 295, 264, 6367, 13, 407, 2049, 3652, 366, 3720, 365, 472, 955, 1339, 6367, 50576], "temperature": 0.0, "avg_logprob": -0.12777213428331458, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.0001634491782169789}, {"id": 95, "seek": 60512, "start": 609.36, "end": 614.88, "text": " that you want to run forever. And then code inside the while loop you want to terminate. And that", "tokens": [50576, 300, 291, 528, 281, 1190, 5680, 13, 400, 550, 3089, 1854, 264, 1339, 6367, 291, 528, 281, 10761, 473, 13, 400, 300, 50852], "temperature": 0.0, "avg_logprob": -0.12777213428331458, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.0001634491782169789}, {"id": 96, "seek": 60512, "start": 614.88, "end": 623.12, "text": " code may look something like this. Okay, that was your one minute tutorial. This is a really", "tokens": [50852, 3089, 815, 574, 746, 411, 341, 13, 1033, 11, 300, 390, 428, 472, 3456, 7073, 13, 639, 307, 257, 534, 51264], "temperature": 0.0, "avg_logprob": -0.12777213428331458, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.0001634491782169789}, {"id": 97, "seek": 60512, "start": 623.12, "end": 628.8, "text": " interesting program. So this is a wicked little program actually. So this is called the Colatz", "tokens": [51264, 1880, 1461, 13, 407, 341, 307, 257, 22663, 707, 1461, 767, 13, 407, 341, 307, 1219, 264, 4004, 10300, 51548], "temperature": 0.0, "avg_logprob": -0.12777213428331458, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.0001634491782169789}, {"id": 98, "seek": 62880, "start": 628.8, "end": 634.4, "text": " conjecture. And no one knows if this program terminates. And what I mean by that is,", "tokens": [50364, 416, 1020, 540, 13, 400, 572, 472, 3255, 498, 341, 1461, 10761, 1024, 13, 400, 437, 286, 914, 538, 300, 307, 11, 50644], "temperature": 0.0, "avg_logprob": -0.12528512694618918, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.05183030292391777}, {"id": 99, "seek": 62880, "start": 635.1999999999999, "end": 642.0799999999999, "text": " so a program is, we would say it guarantees termination if for all possible values of in.", "tokens": [50684, 370, 257, 1461, 307, 11, 321, 576, 584, 309, 32567, 1433, 2486, 498, 337, 439, 1944, 4190, 295, 294, 13, 51028], "temperature": 0.0, "avg_logprob": -0.12528512694618918, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.05183030292391777}, {"id": 100, "seek": 62880, "start": 642.0799999999999, "end": 647.68, "text": " So in here actually could range over all mathematical integers. And so for all possible", "tokens": [51028, 407, 294, 510, 767, 727, 3613, 670, 439, 18894, 41674, 13, 400, 370, 337, 439, 1944, 51308], "temperature": 0.0, "avg_logprob": -0.12528512694618918, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.05183030292391777}, {"id": 101, "seek": 62880, "start": 647.68, "end": 654.0, "text": " values of in, does this program guarantee to exit? No one knows the answer to that question.", "tokens": [51308, 4190, 295, 294, 11, 775, 341, 1461, 10815, 281, 11043, 30, 883, 472, 3255, 264, 1867, 281, 300, 1168, 13, 51624], "temperature": 0.0, "avg_logprob": -0.12528512694618918, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.05183030292391777}, {"id": 102, "seek": 65400, "start": 654.64, "end": 659.28, "text": " So program guarantee termination, if you know that's true for all possible, no one knows.", "tokens": [50396, 407, 1461, 10815, 1433, 2486, 11, 498, 291, 458, 300, 311, 2074, 337, 439, 1944, 11, 572, 472, 3255, 13, 50628], "temperature": 0.0, "avg_logprob": -0.27272648281521267, "compression_ratio": 1.587719298245614, "no_speech_prob": 0.00041728760697878897}, {"id": 103, "seek": 65400, "start": 660.72, "end": 664.96, "text": " And this is, there's some really great quotes here. So I wonder if this has a pointer.", "tokens": [50700, 400, 341, 307, 11, 456, 311, 512, 534, 869, 19963, 510, 13, 407, 286, 2441, 498, 341, 575, 257, 23918, 13, 50912], "temperature": 0.0, "avg_logprob": -0.27272648281521267, "compression_ratio": 1.587719298245614, "no_speech_prob": 0.00041728760697878897}, {"id": 104, "seek": 65400, "start": 666.32, "end": 671.52, "text": " Yeah. So this is called the Colatz conjecture, but it's also called the three and plus one", "tokens": [50980, 865, 13, 407, 341, 307, 1219, 264, 4004, 10300, 416, 1020, 540, 11, 457, 309, 311, 611, 1219, 264, 1045, 293, 1804, 472, 51240], "temperature": 0.0, "avg_logprob": -0.27272648281521267, "compression_ratio": 1.587719298245614, "no_speech_prob": 0.00041728760697878897}, {"id": 105, "seek": 65400, "start": 672.16, "end": 677.92, "text": " problem. It has some great names, whereas it, the Hellstone numerals, the Thwaites conjecture.", "tokens": [51272, 1154, 13, 467, 575, 512, 869, 5288, 11, 9735, 309, 11, 264, 12090, 11243, 7866, 1124, 11, 264, 334, 26040, 279, 416, 1020, 540, 13, 51560], "temperature": 0.0, "avg_logprob": -0.27272648281521267, "compression_ratio": 1.587719298245614, "no_speech_prob": 0.00041728760697878897}, {"id": 106, "seek": 67792, "start": 678.56, "end": 685.36, "text": " And then look at this great, great quote here that from Paul Orteff. Mathematics may not be ready", "tokens": [50396, 400, 550, 574, 412, 341, 869, 11, 869, 6513, 510, 300, 490, 4552, 1610, 975, 602, 13, 15776, 37541, 815, 406, 312, 1919, 50736], "temperature": 0.0, "avg_logprob": -0.19629405526553884, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.013846950605511665}, {"id": 107, "seek": 67792, "start": 685.36, "end": 694.7199999999999, "text": " for such problems. It's extraordinarily difficult, completely out of reach for present day mathematics.", "tokens": [50736, 337, 1270, 2740, 13, 467, 311, 34557, 2252, 11, 2584, 484, 295, 2524, 337, 1974, 786, 18666, 13, 51204], "temperature": 0.0, "avg_logprob": -0.19629405526553884, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.013846950605511665}, {"id": 108, "seek": 67792, "start": 695.68, "end": 705.12, "text": " Look at that innocent little program. Okay, now as an aside, my colleague in Amazon,", "tokens": [51252, 2053, 412, 300, 13171, 707, 1461, 13, 1033, 11, 586, 382, 364, 7359, 11, 452, 13532, 294, 6795, 11, 51724], "temperature": 0.0, "avg_logprob": -0.19629405526553884, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.013846950605511665}, {"id": 109, "seek": 70512, "start": 705.12, "end": 710.64, "text": " Marine Hula is so close to solving this puzzle. It's agonizing. I was really hoping I could say", "tokens": [50364, 20415, 389, 3780, 307, 370, 1998, 281, 12606, 341, 12805, 13, 467, 311, 623, 266, 3319, 13, 286, 390, 534, 7159, 286, 727, 584, 50640], "temperature": 0.0, "avg_logprob": -0.1589178540813389, "compression_ratio": 1.6944444444444444, "no_speech_prob": 0.004005656111985445}, {"id": 110, "seek": 70512, "start": 710.64, "end": 716.4, "text": " today, oh, and by the way, at Amazon, we solved it mic drop, but, but alas, I wasn't, alas, I wasn't", "tokens": [50640, 965, 11, 1954, 11, 293, 538, 264, 636, 11, 412, 6795, 11, 321, 13041, 309, 3123, 3270, 11, 457, 11, 457, 419, 296, 11, 286, 2067, 380, 11, 419, 296, 11, 286, 2067, 380, 50928], "temperature": 0.0, "avg_logprob": -0.1589178540813389, "compression_ratio": 1.6944444444444444, "no_speech_prob": 0.004005656111985445}, {"id": 111, "seek": 70512, "start": 716.4, "end": 721.92, "text": " able to. So he has this really, really fascinating paper that's very, very insightful, that combined", "tokens": [50928, 1075, 281, 13, 407, 415, 575, 341, 534, 11, 534, 10343, 3035, 300, 311, 588, 11, 588, 46401, 11, 300, 9354, 51204], "temperature": 0.0, "avg_logprob": -0.1589178540813389, "compression_ratio": 1.6944444444444444, "no_speech_prob": 0.004005656111985445}, {"id": 112, "seek": 70512, "start": 721.92, "end": 726.4, "text": " some really beautiful, it's just, it's such a beautiful paper. So they're really making some", "tokens": [51204, 512, 534, 2238, 11, 309, 311, 445, 11, 309, 311, 1270, 257, 2238, 3035, 13, 407, 436, 434, 534, 1455, 512, 51428], "temperature": 0.0, "avg_logprob": -0.1589178540813389, "compression_ratio": 1.6944444444444444, "no_speech_prob": 0.004005656111985445}, {"id": 113, "seek": 70512, "start": 726.4, "end": 730.72, "text": " serious headway on this problem that I'm very excited about. Anyways, and, and back to Cambridge,", "tokens": [51428, 3156, 1378, 676, 322, 341, 1154, 300, 286, 478, 588, 2919, 466, 13, 15585, 11, 293, 11, 293, 646, 281, 24876, 11, 51644], "temperature": 0.0, "avg_logprob": -0.1589178540813389, "compression_ratio": 1.6944444444444444, "no_speech_prob": 0.004005656111985445}, {"id": 114, "seek": 73072, "start": 731.36, "end": 736.72, "text": " back to Cambridge. So, so there's another really interesting character that's, that's, that's,", "tokens": [50396, 646, 281, 24876, 13, 407, 11, 370, 456, 311, 1071, 534, 1880, 2517, 300, 311, 11, 300, 311, 11, 300, 311, 11, 50664], "temperature": 0.0, "avg_logprob": -0.23664020797581348, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0012838415568694472}, {"id": 115, "seek": 73072, "start": 736.72, "end": 742.8000000000001, "text": " that's, so, so, Frank Ramsey was the Kings, Alan Turing was the Kings, and Byron Cook,", "tokens": [50664, 300, 311, 11, 370, 11, 370, 11, 6823, 9078, 7399, 390, 264, 21855, 11, 16442, 314, 1345, 390, 264, 21855, 11, 293, 3146, 2044, 12259, 11, 50968], "temperature": 0.0, "avg_logprob": -0.23664020797581348, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0012838415568694472}, {"id": 116, "seek": 73072, "start": 744.08, "end": 751.9200000000001, "text": " oh, you know, cycled by Kings. For, for six years, I cycled by Kings, and I cycled", "tokens": [51032, 1954, 11, 291, 458, 11, 3185, 24804, 538, 21855, 13, 1171, 11, 337, 2309, 924, 11, 286, 3185, 24804, 538, 21855, 11, 293, 286, 3185, 24804, 51424], "temperature": 0.0, "avg_logprob": -0.23664020797581348, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0012838415568694472}, {"id": 117, "seek": 73072, "start": 751.9200000000001, "end": 756.1600000000001, "text": " by Kings on my way to Microsoft Research, which at the time was that in West Cambridge,", "tokens": [51424, 538, 21855, 322, 452, 636, 281, 8116, 10303, 11, 597, 412, 264, 565, 390, 300, 294, 4055, 24876, 11, 51636], "temperature": 0.0, "avg_logprob": -0.23664020797581348, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0012838415568694472}, {"id": 118, "seek": 75616, "start": 756.16, "end": 762.56, "text": " now it's by the station. And when I cycled to, to, to, to, to Microsoft Research,", "tokens": [50364, 586, 309, 311, 538, 264, 5214, 13, 400, 562, 286, 3185, 24804, 281, 11, 281, 11, 281, 11, 281, 11, 281, 8116, 10303, 11, 50684], "temperature": 0.0, "avg_logprob": -0.15685902535915375, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.0014541704440489411}, {"id": 119, "seek": 75616, "start": 763.76, "end": 768.7199999999999, "text": " a lot of my work was with these two jobs. So this is Andre Rybolchenko, who is my intern,", "tokens": [50744, 257, 688, 295, 452, 589, 390, 365, 613, 732, 4782, 13, 407, 341, 307, 20667, 13654, 17460, 2470, 4093, 11, 567, 307, 452, 2154, 11, 50992], "temperature": 0.0, "avg_logprob": -0.15685902535915375, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.0014541704440489411}, {"id": 120, "seek": 75616, "start": 769.92, "end": 774.0799999999999, "text": " and then a longtime collaborator, he's actually later joined Microsoft Research, and then Andres", "tokens": [51052, 293, 550, 257, 44363, 5091, 1639, 11, 415, 311, 767, 1780, 6869, 8116, 10303, 11, 293, 550, 400, 495, 51260], "temperature": 0.0, "avg_logprob": -0.15685902535915375, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.0014541704440489411}, {"id": 121, "seek": 75616, "start": 774.0799999999999, "end": 780.24, "text": " Podolski, who is his PhD student. And, and what happened was that I decided to move, I'll tell", "tokens": [51260, 12646, 401, 18020, 11, 567, 307, 702, 14476, 3107, 13, 400, 11, 293, 437, 2011, 390, 300, 286, 3047, 281, 1286, 11, 286, 603, 980, 51568], "temperature": 0.0, "avg_logprob": -0.15685902535915375, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.0014541704440489411}, {"id": 122, "seek": 75616, "start": 780.24, "end": 784.24, "text": " you part of the story, I moved to Cambridge. And when I moved to Cambridge, a bunch of people who", "tokens": [51568, 291, 644, 295, 264, 1657, 11, 286, 4259, 281, 24876, 13, 400, 562, 286, 4259, 281, 24876, 11, 257, 3840, 295, 561, 567, 51768], "temperature": 0.0, "avg_logprob": -0.15685902535915375, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.0014541704440489411}, {"id": 123, "seek": 78424, "start": 784.32, "end": 789.28, "text": " were in Europe, you know, I moved, you can probably hear, I'm American. So when I moved", "tokens": [50368, 645, 294, 3315, 11, 291, 458, 11, 286, 4259, 11, 291, 393, 1391, 1568, 11, 286, 478, 2665, 13, 407, 562, 286, 4259, 50616], "temperature": 0.0, "avg_logprob": -0.11398867556923314, "compression_ratio": 1.9757785467128028, "no_speech_prob": 0.0026300211902707815}, {"id": 124, "seek": 78424, "start": 789.28, "end": 793.76, "text": " to Cambridge, a bunch of people who are in Europe were like, oh, wow, cool, we should work together.", "tokens": [50616, 281, 24876, 11, 257, 3840, 295, 561, 567, 366, 294, 3315, 645, 411, 11, 1954, 11, 6076, 11, 1627, 11, 321, 820, 589, 1214, 13, 50840], "temperature": 0.0, "avg_logprob": -0.11398867556923314, "compression_ratio": 1.9757785467128028, "no_speech_prob": 0.0026300211902707815}, {"id": 125, "seek": 78424, "start": 793.76, "end": 796.88, "text": " And these, and these were one of the, one of the, one of the sets of people who do that.", "tokens": [50840, 400, 613, 11, 293, 613, 645, 472, 295, 264, 11, 472, 295, 264, 11, 472, 295, 264, 6352, 295, 561, 567, 360, 300, 13, 50996], "temperature": 0.0, "avg_logprob": -0.11398867556923314, "compression_ratio": 1.9757785467128028, "no_speech_prob": 0.0026300211902707815}, {"id": 126, "seek": 78424, "start": 796.88, "end": 802.0, "text": " And so I did this work with them that was really explosive. And so I ended up the, all the, all", "tokens": [50996, 400, 370, 286, 630, 341, 589, 365, 552, 300, 390, 534, 24630, 13, 400, 370, 286, 4590, 493, 264, 11, 439, 264, 11, 439, 51252], "temperature": 0.0, "avg_logprob": -0.11398867556923314, "compression_ratio": 1.9757785467128028, "no_speech_prob": 0.0026300211902707815}, {"id": 127, "seek": 78424, "start": 802.0, "end": 806.5600000000001, "text": " these other people were like, wow, that's super cool. We should like, there were like possible ways", "tokens": [51252, 613, 661, 561, 645, 411, 11, 6076, 11, 300, 311, 1687, 1627, 13, 492, 820, 411, 11, 456, 645, 411, 1944, 2098, 51480], "temperature": 0.0, "avg_logprob": -0.11398867556923314, "compression_ratio": 1.9757785467128028, "no_speech_prob": 0.0026300211902707815}, {"id": 128, "seek": 78424, "start": 806.5600000000001, "end": 810.4, "text": " that we can solve other problems that were related. So I ended up working with a whole network of", "tokens": [51480, 300, 321, 393, 5039, 661, 2740, 300, 645, 4077, 13, 407, 286, 4590, 493, 1364, 365, 257, 1379, 3209, 295, 51672], "temperature": 0.0, "avg_logprob": -0.11398867556923314, "compression_ratio": 1.9757785467128028, "no_speech_prob": 0.0026300211902707815}, {"id": 129, "seek": 81040, "start": 810.4, "end": 814.64, "text": " people. And it was really a very, very exciting time. And many of these people spent much of their", "tokens": [50364, 561, 13, 400, 309, 390, 534, 257, 588, 11, 588, 4670, 565, 13, 400, 867, 295, 613, 561, 4418, 709, 295, 641, 50576], "temperature": 0.0, "avg_logprob": -0.10196169523092416, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00103185570333153}, {"id": 130, "seek": 81040, "start": 814.64, "end": 823.36, "text": " time in Cambridge. And there were, of course, many scientific papers. And they all used theories", "tokens": [50576, 565, 294, 24876, 13, 400, 456, 645, 11, 295, 1164, 11, 867, 8134, 10577, 13, 400, 436, 439, 1143, 13667, 51012], "temperature": 0.0, "avg_logprob": -0.10196169523092416, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00103185570333153}, {"id": 131, "seek": 81040, "start": 823.36, "end": 828.24, "text": " from Ramsey and Turing. So that's, that's, that is what we're going to talk about today.", "tokens": [51012, 490, 9078, 7399, 293, 314, 1345, 13, 407, 300, 311, 11, 300, 311, 11, 300, 307, 437, 321, 434, 516, 281, 751, 466, 965, 13, 51256], "temperature": 0.0, "avg_logprob": -0.10196169523092416, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00103185570333153}, {"id": 132, "seek": 81040, "start": 829.76, "end": 835.76, "text": " Okay, let's start at the beginning. So, and here I'm going to, I'm going to do a little bit of", "tokens": [51332, 1033, 11, 718, 311, 722, 412, 264, 2863, 13, 407, 11, 293, 510, 286, 478, 516, 281, 11, 286, 478, 516, 281, 360, 257, 707, 857, 295, 51632], "temperature": 0.0, "avg_logprob": -0.10196169523092416, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00103185570333153}, {"id": 133, "seek": 83576, "start": 835.76, "end": 841.12, "text": " guesswork. So I, so I don't know if you know that there's this, the Greeks, the ancient Greeks had", "tokens": [50364, 2041, 1902, 13, 407, 286, 11, 370, 286, 500, 380, 458, 498, 291, 458, 300, 456, 311, 341, 11, 264, 31029, 11, 264, 7832, 31029, 632, 50632], "temperature": 0.0, "avg_logprob": -0.13021964457497667, "compression_ratio": 1.8365758754863812, "no_speech_prob": 0.046008720993995667}, {"id": 134, "seek": 83576, "start": 841.12, "end": 848.8, "text": " this like, calculating device, right, that would, that would, that would predict eclipses, for example.", "tokens": [50632, 341, 411, 11, 28258, 4302, 11, 558, 11, 300, 576, 11, 300, 576, 11, 300, 576, 6069, 308, 3474, 2600, 279, 11, 337, 1365, 13, 51016], "temperature": 0.0, "avg_logprob": -0.13021964457497667, "compression_ratio": 1.8365758754863812, "no_speech_prob": 0.046008720993995667}, {"id": 135, "seek": 83576, "start": 848.8, "end": 853.2, "text": " Meanwhile, they're also doing proofs, right? They have, they, they, they, the Pythagorean", "tokens": [51016, 13879, 11, 436, 434, 611, 884, 8177, 82, 11, 558, 30, 814, 362, 11, 436, 11, 436, 11, 436, 11, 264, 9953, 392, 559, 25885, 51236], "temperature": 0.0, "avg_logprob": -0.13021964457497667, "compression_ratio": 1.8365758754863812, "no_speech_prob": 0.046008720993995667}, {"id": 136, "seek": 83576, "start": 853.2, "end": 858.72, "text": " theorem, you know, there's all this work kind of in the, the Greek empire. So it must be,", "tokens": [51236, 20904, 11, 291, 458, 11, 456, 311, 439, 341, 589, 733, 295, 294, 264, 11, 264, 10281, 17506, 13, 407, 309, 1633, 312, 11, 51512], "temperature": 0.0, "avg_logprob": -0.13021964457497667, "compression_ratio": 1.8365758754863812, "no_speech_prob": 0.046008720993995667}, {"id": 137, "seek": 83576, "start": 858.72, "end": 864.48, "text": " and here I'm just guessing, it must be that someone in town, sorry, some, someone in town", "tokens": [51512, 293, 510, 286, 478, 445, 17939, 11, 309, 1633, 312, 300, 1580, 294, 3954, 11, 2597, 11, 512, 11, 1580, 294, 3954, 51800], "temperature": 0.0, "avg_logprob": -0.13021964457497667, "compression_ratio": 1.8365758754863812, "no_speech_prob": 0.046008720993995667}, {"id": 138, "seek": 86448, "start": 864.48, "end": 868.96, "text": " thought, hey, could we get the device to prove theorems for us, right? It's just, it's inescapable", "tokens": [50364, 1194, 11, 4177, 11, 727, 321, 483, 264, 4302, 281, 7081, 10299, 2592, 337, 505, 11, 558, 30, 467, 311, 445, 11, 309, 311, 294, 279, 9485, 712, 50588], "temperature": 0.0, "avg_logprob": -0.1252941063472203, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.0003459026338532567}, {"id": 139, "seek": 86448, "start": 868.96, "end": 876.96, "text": " that that's true. So I would believe that that must be when, you know, our, our people, our ancestors", "tokens": [50588, 300, 300, 311, 2074, 13, 407, 286, 576, 1697, 300, 300, 1633, 312, 562, 11, 291, 458, 11, 527, 11, 527, 561, 11, 527, 18069, 50988], "temperature": 0.0, "avg_logprob": -0.1252941063472203, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.0003459026338532567}, {"id": 140, "seek": 86448, "start": 876.96, "end": 885.52, "text": " first said, machines, mathematics, let's put them together, right? But what, what I do know is that", "tokens": [50988, 700, 848, 11, 8379, 11, 18666, 11, 718, 311, 829, 552, 1214, 11, 558, 30, 583, 437, 11, 437, 286, 360, 458, 307, 300, 51416], "temperature": 0.0, "avg_logprob": -0.1252941063472203, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.0003459026338532567}, {"id": 141, "seek": 86448, "start": 885.52, "end": 891.9200000000001, "text": " from the, from the, is that Leibniz explicitly asked us, right? So, and we calculate the truth", "tokens": [51416, 490, 264, 11, 490, 264, 11, 307, 300, 1456, 897, 77, 590, 20803, 2351, 505, 11, 558, 30, 407, 11, 293, 321, 8873, 264, 3494, 51736], "temperature": 0.0, "avg_logprob": -0.1252941063472203, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.0003459026338532567}, {"id": 142, "seek": 89192, "start": 891.92, "end": 898.64, "text": " of any mathematical statement. That's the sort of fundamental thing we want to do. And so here's", "tokens": [50364, 295, 604, 18894, 5629, 13, 663, 311, 264, 1333, 295, 8088, 551, 321, 528, 281, 360, 13, 400, 370, 510, 311, 50700], "temperature": 0.0, "avg_logprob": -0.12874152168395028, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.00818133819848299}, {"id": 143, "seek": 89192, "start": 898.64, "end": 902.3199999999999, "text": " what this would look like kind of in our modern world. So imagine on your phone, you have some", "tokens": [50700, 437, 341, 576, 574, 411, 733, 295, 294, 527, 4363, 1002, 13, 407, 3811, 322, 428, 2593, 11, 291, 362, 512, 50884], "temperature": 0.0, "avg_logprob": -0.12874152168395028, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.00818133819848299}, {"id": 144, "seek": 89192, "start": 902.3199999999999, "end": 907.52, "text": " magic AI app, and you could ask it simple questions like, hey, is there a number between,", "tokens": [50884, 5585, 7318, 724, 11, 293, 291, 727, 1029, 309, 2199, 1651, 411, 11, 4177, 11, 307, 456, 257, 1230, 1296, 11, 51144], "temperature": 0.0, "avg_logprob": -0.12874152168395028, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.00818133819848299}, {"id": 145, "seek": 89192, "start": 907.52, "end": 912.4799999999999, "text": " this is an easy one, is there a number between 10 and 20? Yes, there is, 11, try that, okay.", "tokens": [51144, 341, 307, 364, 1858, 472, 11, 307, 456, 257, 1230, 1296, 1266, 293, 945, 30, 1079, 11, 456, 307, 11, 2975, 11, 853, 300, 11, 1392, 13, 51392], "temperature": 0.0, "avg_logprob": -0.12874152168395028, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.00818133819848299}, {"id": 146, "seek": 89192, "start": 914.64, "end": 920.3199999999999, "text": " Is the Colatz conjecture valid, right? And, and the, and the idea is that the answer produced", "tokens": [51500, 1119, 264, 4004, 10300, 416, 1020, 540, 7363, 11, 558, 30, 400, 11, 293, 264, 11, 293, 264, 1558, 307, 300, 264, 1867, 7126, 51784], "temperature": 0.0, "avg_logprob": -0.12874152168395028, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.00818133819848299}, {"id": 147, "seek": 92032, "start": 920.32, "end": 925.36, "text": " must be correct. That's the game we're playing. That's, that's what Leibniz suggested. And that's", "tokens": [50364, 1633, 312, 3006, 13, 663, 311, 264, 1216, 321, 434, 2433, 13, 663, 311, 11, 300, 311, 437, 1456, 897, 77, 590, 10945, 13, 400, 300, 311, 50616], "temperature": 0.0, "avg_logprob": -0.11188246547311977, "compression_ratio": 1.7932330827067668, "no_speech_prob": 0.004067957866936922}, {"id": 148, "seek": 92032, "start": 925.36, "end": 931.12, "text": " what, you know, we're going to talk about much of today. And, and maybe it's not an acceptable", "tokens": [50616, 437, 11, 291, 458, 11, 321, 434, 516, 281, 751, 466, 709, 295, 965, 13, 400, 11, 293, 1310, 309, 311, 406, 364, 15513, 50904], "temperature": 0.0, "avg_logprob": -0.11188246547311977, "compression_ratio": 1.7932330827067668, "no_speech_prob": 0.004067957866936922}, {"id": 149, "seek": 92032, "start": 931.12, "end": 937.12, "text": " answer. You can't say maybe in this sort of, in this, in this purest Leibniz world, and you can't", "tokens": [50904, 1867, 13, 509, 393, 380, 584, 1310, 294, 341, 1333, 295, 11, 294, 341, 11, 294, 341, 6075, 372, 1456, 897, 77, 590, 1002, 11, 293, 291, 393, 380, 51204], "temperature": 0.0, "avg_logprob": -0.11188246547311977, "compression_ratio": 1.7932330827067668, "no_speech_prob": 0.004067957866936922}, {"id": 150, "seek": 92032, "start": 937.6800000000001, "end": 941.7600000000001, "text": " run forever trying to, as well, give me, give me some time. And I'm going to go off and compute", "tokens": [51232, 1190, 5680, 1382, 281, 11, 382, 731, 11, 976, 385, 11, 976, 385, 512, 565, 13, 400, 286, 478, 516, 281, 352, 766, 293, 14722, 51436], "temperature": 0.0, "avg_logprob": -0.11188246547311977, "compression_ratio": 1.7932330827067668, "no_speech_prob": 0.004067957866936922}, {"id": 151, "seek": 92032, "start": 941.7600000000001, "end": 946.08, "text": " forever and just never come back, come back with an answer. No, that's not allowed either.", "tokens": [51436, 5680, 293, 445, 1128, 808, 646, 11, 808, 646, 365, 364, 1867, 13, 883, 11, 300, 311, 406, 4350, 2139, 13, 51652], "temperature": 0.0, "avg_logprob": -0.11188246547311977, "compression_ratio": 1.7932330827067668, "no_speech_prob": 0.004067957866936922}, {"id": 152, "seek": 94608, "start": 946.64, "end": 951.0400000000001, "text": " You have to answer the question, and you have to answer it in a finite amount of time. That's the", "tokens": [50392, 509, 362, 281, 1867, 264, 1168, 11, 293, 291, 362, 281, 1867, 309, 294, 257, 19362, 2372, 295, 565, 13, 663, 311, 264, 50612], "temperature": 0.0, "avg_logprob": -0.11142116955348423, "compression_ratio": 1.9488054607508531, "no_speech_prob": 0.013631034642457962}, {"id": 153, "seek": 94608, "start": 951.0400000000001, "end": 956.4000000000001, "text": " rules of the game. Today, we would call this automated reasoning. So if you look at like my", "tokens": [50612, 4474, 295, 264, 1216, 13, 2692, 11, 321, 576, 818, 341, 18473, 21577, 13, 407, 498, 291, 574, 412, 411, 452, 50880], "temperature": 0.0, "avg_logprob": -0.11142116955348423, "compression_ratio": 1.9488054607508531, "no_speech_prob": 0.013631034642457962}, {"id": 154, "seek": 94608, "start": 956.4000000000001, "end": 960.24, "text": " title, or like the groups that we have, the groups in Amazon, all these like 20 teams are called,", "tokens": [50880, 4876, 11, 420, 411, 264, 3935, 300, 321, 362, 11, 264, 3935, 294, 6795, 11, 439, 613, 411, 945, 5491, 366, 1219, 11, 51072], "temperature": 0.0, "avg_logprob": -0.11142116955348423, "compression_ratio": 1.9488054607508531, "no_speech_prob": 0.013631034642457962}, {"id": 155, "seek": 94608, "start": 960.24, "end": 965.0400000000001, "text": " you know, identity automated reasoning team, or crypto automated reasoning team, storage", "tokens": [51072, 291, 458, 11, 6575, 18473, 21577, 1469, 11, 420, 17240, 18473, 21577, 1469, 11, 6725, 51312], "temperature": 0.0, "avg_logprob": -0.11142116955348423, "compression_ratio": 1.9488054607508531, "no_speech_prob": 0.013631034642457962}, {"id": 156, "seek": 94608, "start": 965.0400000000001, "end": 968.88, "text": " automated reasoning team. So automated reasoning is what we do. And practically, there's a few", "tokens": [51312, 18473, 21577, 1469, 13, 407, 18473, 21577, 307, 437, 321, 360, 13, 400, 15667, 11, 456, 311, 257, 1326, 51504], "temperature": 0.0, "avg_logprob": -0.11142116955348423, "compression_ratio": 1.9488054607508531, "no_speech_prob": 0.013631034642457962}, {"id": 157, "seek": 94608, "start": 968.88, "end": 974.08, "text": " people from the crowd, you're all laughing, because you, you, you know, that we've kind of given up", "tokens": [51504, 561, 490, 264, 6919, 11, 291, 434, 439, 5059, 11, 570, 291, 11, 291, 11, 291, 458, 11, 300, 321, 600, 733, 295, 2212, 493, 51764], "temperature": 0.0, "avg_logprob": -0.11142116955348423, "compression_ratio": 1.9488054607508531, "no_speech_prob": 0.013631034642457962}, {"id": 158, "seek": 97408, "start": 974.08, "end": 979.2800000000001, "text": " on requiring you can't say maybe or time, or time out from time to time, right? So we're", "tokens": [50364, 322, 24165, 291, 393, 380, 584, 1310, 420, 565, 11, 420, 565, 484, 490, 565, 281, 565, 11, 558, 30, 407, 321, 434, 50624], "temperature": 0.0, "avg_logprob": -0.18590593702010527, "compression_ratio": 1.7660377358490567, "no_speech_prob": 0.0011155606480315328}, {"id": 159, "seek": 97408, "start": 979.2800000000001, "end": 983.0400000000001, "text": " practical people and we're like, eh, sometimes we don't know the answer, right? But, but, but the", "tokens": [50624, 8496, 561, 293, 321, 434, 411, 11, 7670, 11, 2171, 321, 500, 380, 458, 264, 1867, 11, 558, 30, 583, 11, 457, 11, 457, 264, 50812], "temperature": 0.0, "avg_logprob": -0.18590593702010527, "compression_ratio": 1.7660377358490567, "no_speech_prob": 0.0011155606480315328}, {"id": 160, "seek": 97408, "start": 983.0400000000001, "end": 991.6800000000001, "text": " purists didn't think that. So in this, this paper, paper book by Hilbert and Ackerman named it,", "tokens": [50812, 1864, 1751, 994, 380, 519, 300, 13, 407, 294, 341, 11, 341, 3035, 11, 3035, 1446, 538, 19914, 4290, 293, 316, 547, 11821, 4926, 309, 11, 51244], "temperature": 0.0, "avg_logprob": -0.18590593702010527, "compression_ratio": 1.7660377358490567, "no_speech_prob": 0.0011155606480315328}, {"id": 161, "seek": 97408, "start": 991.6800000000001, "end": 996.32, "text": " the decision problem. And I'm not going to try and pronounce the German, right? But it's,", "tokens": [51244, 264, 3537, 1154, 13, 400, 286, 478, 406, 516, 281, 853, 293, 19567, 264, 6521, 11, 558, 30, 583, 309, 311, 11, 51476], "temperature": 0.0, "avg_logprob": -0.18590593702010527, "compression_ratio": 1.7660377358490567, "no_speech_prob": 0.0011155606480315328}, {"id": 162, "seek": 97408, "start": 996.32, "end": 1003.2800000000001, "text": " it's called the decision problem. And this, this was came out in 1928. And this got everyone in", "tokens": [51476, 309, 311, 1219, 264, 3537, 1154, 13, 400, 341, 11, 341, 390, 1361, 484, 294, 1294, 11205, 13, 400, 341, 658, 1518, 294, 51824], "temperature": 0.0, "avg_logprob": -0.18590593702010527, "compression_ratio": 1.7660377358490567, "no_speech_prob": 0.0011155606480315328}, {"id": 163, "seek": 100328, "start": 1003.28, "end": 1008.8, "text": " the mathematics logic world very, very excited. So back here in Cambridge, both Ramsey and Turing", "tokens": [50364, 264, 18666, 9952, 1002, 588, 11, 588, 2919, 13, 407, 646, 510, 294, 24876, 11, 1293, 9078, 7399, 293, 314, 1345, 50640], "temperature": 0.0, "avg_logprob": -0.09810683306525736, "compression_ratio": 1.7670250896057347, "no_speech_prob": 0.0006262208335101604}, {"id": 164, "seek": 100328, "start": 1008.8, "end": 1014.72, "text": " were like, Oh, the decision problem, that's super cool. Can you automate reasoning about mathematical", "tokens": [50640, 645, 411, 11, 876, 11, 264, 3537, 1154, 11, 300, 311, 1687, 1627, 13, 1664, 291, 31605, 21577, 466, 18894, 50936], "temperature": 0.0, "avg_logprob": -0.09810683306525736, "compression_ratio": 1.7670250896057347, "no_speech_prob": 0.0006262208335101604}, {"id": 165, "seek": 100328, "start": 1014.72, "end": 1019.76, "text": " logic and mathematics, such that you always get an answer, you know, super cool, super cool problem", "tokens": [50936, 9952, 293, 18666, 11, 1270, 300, 291, 1009, 483, 364, 1867, 11, 291, 458, 11, 1687, 1627, 11, 1687, 1627, 1154, 51188], "temperature": 0.0, "avg_logprob": -0.09810683306525736, "compression_ratio": 1.7670250896057347, "no_speech_prob": 0.0006262208335101604}, {"id": 166, "seek": 100328, "start": 1019.76, "end": 1023.4399999999999, "text": " for them. And they, and they, and they both did some interesting works. And now we're going to talk", "tokens": [51188, 337, 552, 13, 400, 436, 11, 293, 436, 11, 293, 436, 1293, 630, 512, 1880, 1985, 13, 400, 586, 321, 434, 516, 281, 751, 51372], "temperature": 0.0, "avg_logprob": -0.09810683306525736, "compression_ratio": 1.7670250896057347, "no_speech_prob": 0.0006262208335101604}, {"id": 167, "seek": 100328, "start": 1023.4399999999999, "end": 1030.08, "text": " about that. So Ramsey had this, had this very nice paper right before he died, unfortunately.", "tokens": [51372, 466, 300, 13, 407, 9078, 7399, 632, 341, 11, 632, 341, 588, 1481, 3035, 558, 949, 415, 4539, 11, 7015, 13, 51704], "temperature": 0.0, "avg_logprob": -0.09810683306525736, "compression_ratio": 1.7670250896057347, "no_speech_prob": 0.0006262208335101604}, {"id": 168, "seek": 103008, "start": 1030.8, "end": 1039.28, "text": " And he didn't prove or disprove the possibility of there being a general solution to the decision", "tokens": [50400, 400, 415, 994, 380, 7081, 420, 717, 46955, 264, 7959, 295, 456, 885, 257, 2674, 3827, 281, 264, 3537, 50824], "temperature": 0.0, "avg_logprob": -0.10827414806072529, "compression_ratio": 1.7280701754385965, "no_speech_prob": 0.0011331713758409023}, {"id": 169, "seek": 103008, "start": 1039.28, "end": 1045.04, "text": " problem. But he, but he did something else instead. And so what I'm going to, I'm going to, I'm going", "tokens": [50824, 1154, 13, 583, 415, 11, 457, 415, 630, 746, 1646, 2602, 13, 400, 370, 437, 286, 478, 516, 281, 11, 286, 478, 516, 281, 11, 286, 478, 516, 51112], "temperature": 0.0, "avg_logprob": -0.10827414806072529, "compression_ratio": 1.7280701754385965, "no_speech_prob": 0.0011331713758409023}, {"id": 170, "seek": 103008, "start": 1045.04, "end": 1050.24, "text": " to, we're just going to take a moment to introduce a little bit of visual notation. So there's an", "tokens": [51112, 281, 11, 321, 434, 445, 516, 281, 747, 257, 1623, 281, 5366, 257, 707, 857, 295, 5056, 24657, 13, 407, 456, 311, 364, 51372], "temperature": 0.0, "avg_logprob": -0.10827414806072529, "compression_ratio": 1.7280701754385965, "no_speech_prob": 0.0011331713758409023}, {"id": 171, "seek": 103008, "start": 1050.24, "end": 1057.84, "text": " idea of a graph. Graphs have nodes, graphs have edges, edges are the arrows. And the idea is you", "tokens": [51372, 1558, 295, 257, 4295, 13, 21884, 82, 362, 13891, 11, 24877, 362, 8819, 11, 8819, 366, 264, 19669, 13, 400, 264, 1558, 307, 291, 51752], "temperature": 0.0, "avg_logprob": -0.10827414806072529, "compression_ratio": 1.7280701754385965, "no_speech_prob": 0.0011331713758409023}, {"id": 172, "seek": 105784, "start": 1057.84, "end": 1064.0, "text": " can go from A to B if there's an arrow. Okay, that's a graph. That's a sort of fundamental", "tokens": [50364, 393, 352, 490, 316, 281, 363, 498, 456, 311, 364, 11610, 13, 1033, 11, 300, 311, 257, 4295, 13, 663, 311, 257, 1333, 295, 8088, 50672], "temperature": 0.0, "avg_logprob": -0.09619536250829697, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00035691424272954464}, {"id": 173, "seek": 105784, "start": 1064.0, "end": 1069.36, "text": " concept that you see in computer science and mathematics. And what we could do is we could", "tokens": [50672, 3410, 300, 291, 536, 294, 3820, 3497, 293, 18666, 13, 400, 437, 321, 727, 360, 307, 321, 727, 50940], "temperature": 0.0, "avg_logprob": -0.09619536250829697, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00035691424272954464}, {"id": 174, "seek": 105784, "start": 1069.36, "end": 1074.8, "text": " color the edges. So I could color some of them red, some of them blue, some of them green.", "tokens": [50940, 2017, 264, 8819, 13, 407, 286, 727, 2017, 512, 295, 552, 2182, 11, 512, 295, 552, 3344, 11, 512, 295, 552, 3092, 13, 51212], "temperature": 0.0, "avg_logprob": -0.09619536250829697, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00035691424272954464}, {"id": 175, "seek": 105784, "start": 1075.52, "end": 1080.24, "text": " And then what Ramsey did is he has this really, really amazing result that's about", "tokens": [51248, 400, 550, 437, 9078, 7399, 630, 307, 415, 575, 341, 534, 11, 534, 2243, 1874, 300, 311, 466, 51484], "temperature": 0.0, "avg_logprob": -0.09619536250829697, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00035691424272954464}, {"id": 176, "seek": 105784, "start": 1081.28, "end": 1086.9599999999998, "text": " monochromatic subgraphs. So here's, here's, here's a monochromatic subgraph. It's, it's like the", "tokens": [51536, 1108, 8997, 4397, 2399, 1422, 34091, 82, 13, 407, 510, 311, 11, 510, 311, 11, 510, 311, 257, 1108, 8997, 4397, 2399, 1422, 34091, 13, 467, 311, 11, 309, 311, 411, 264, 51820], "temperature": 0.0, "avg_logprob": -0.09619536250829697, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00035691424272954464}, {"id": 177, "seek": 108696, "start": 1086.96, "end": 1093.6000000000001, "text": " original graph, but with only the red arrows. And there's sort of different flavors to the Ramsey", "tokens": [50364, 3380, 4295, 11, 457, 365, 787, 264, 2182, 19669, 13, 400, 456, 311, 1333, 295, 819, 16303, 281, 264, 9078, 7399, 50696], "temperature": 0.0, "avg_logprob": -0.10934317984232088, "compression_ratio": 1.794007490636704, "no_speech_prob": 9.609357948647812e-05}, {"id": 178, "seek": 108696, "start": 1093.6000000000001, "end": 1098.8, "text": " theorems, or there's a sort of Ramsey theorem is kind of a family of statements. But what's really", "tokens": [50696, 10299, 2592, 11, 420, 456, 311, 257, 1333, 295, 9078, 7399, 20904, 307, 733, 295, 257, 1605, 295, 12363, 13, 583, 437, 311, 534, 50956], "temperature": 0.0, "avg_logprob": -0.10934317984232088, "compression_ratio": 1.794007490636704, "no_speech_prob": 9.609357948647812e-05}, {"id": 179, "seek": 108696, "start": 1098.8, "end": 1104.32, "text": " amazing about it is he says, if, if your graph is infinite, I can't, I can't show you an infinite", "tokens": [50956, 2243, 466, 309, 307, 415, 1619, 11, 498, 11, 498, 428, 4295, 307, 13785, 11, 286, 393, 380, 11, 286, 393, 380, 855, 291, 364, 13785, 51232], "temperature": 0.0, "avg_logprob": -0.10934317984232088, "compression_ratio": 1.794007490636704, "no_speech_prob": 9.609357948647812e-05}, {"id": 180, "seek": 108696, "start": 1104.32, "end": 1111.44, "text": " graph on this finite screen, but imagine it's infinite. If you have an infinite graph, and a", "tokens": [51232, 4295, 322, 341, 19362, 2568, 11, 457, 3811, 309, 311, 13785, 13, 759, 291, 362, 364, 13785, 4295, 11, 293, 257, 51588], "temperature": 0.0, "avg_logprob": -0.10934317984232088, "compression_ratio": 1.794007490636704, "no_speech_prob": 9.609357948647812e-05}, {"id": 181, "seek": 108696, "start": 1111.44, "end": 1114.24, "text": " couple of other conditions are met that I don't really want to tell you about, because they", "tokens": [51588, 1916, 295, 661, 4487, 366, 1131, 300, 286, 500, 380, 534, 528, 281, 980, 291, 466, 11, 570, 436, 51728], "temperature": 0.0, "avg_logprob": -0.10934317984232088, "compression_ratio": 1.794007490636704, "no_speech_prob": 9.609357948647812e-05}, {"id": 182, "seek": 111424, "start": 1114.24, "end": 1123.52, "text": " knows to turn into a math lecture, then, then there exists an infinite monochromatic subgraph.", "tokens": [50364, 3255, 281, 1261, 666, 257, 5221, 7991, 11, 550, 11, 550, 456, 8198, 364, 13785, 1108, 8997, 4397, 2399, 1422, 34091, 13, 50828], "temperature": 0.0, "avg_logprob": -0.11330540326176858, "compression_ratio": 1.6820276497695852, "no_speech_prob": 0.0003569417167454958}, {"id": 183, "seek": 111424, "start": 1124.56, "end": 1128.64, "text": " And that's going to turn out to be a very, very powerful tool for us. So take this graph,", "tokens": [50880, 400, 300, 311, 516, 281, 1261, 484, 281, 312, 257, 588, 11, 588, 4005, 2290, 337, 505, 13, 407, 747, 341, 4295, 11, 51084], "temperature": 0.0, "avg_logprob": -0.11330540326176858, "compression_ratio": 1.6820276497695852, "no_speech_prob": 0.0003569417167454958}, {"id": 184, "seek": 111424, "start": 1128.64, "end": 1133.92, "text": " if it's infinite, it's also complete for those of you who know what that means, but it doesn't matter.", "tokens": [51084, 498, 309, 311, 13785, 11, 309, 311, 611, 3566, 337, 729, 295, 291, 567, 458, 437, 300, 1355, 11, 457, 309, 1177, 380, 1871, 13, 51348], "temperature": 0.0, "avg_logprob": -0.11330540326176858, "compression_ratio": 1.6820276497695852, "no_speech_prob": 0.0003569417167454958}, {"id": 185, "seek": 111424, "start": 1133.92, "end": 1140.24, "text": " And, and the number of colors is finite, then there's going to be an infinite", "tokens": [51348, 400, 11, 293, 264, 1230, 295, 4577, 307, 19362, 11, 550, 456, 311, 516, 281, 312, 364, 13785, 51664], "temperature": 0.0, "avg_logprob": -0.11330540326176858, "compression_ratio": 1.6820276497695852, "no_speech_prob": 0.0003569417167454958}, {"id": 186, "seek": 114024, "start": 1140.24, "end": 1149.6, "text": " monochromatic subgraph. Okay, remember that. Meanwhile, Alan Turing read this paper", "tokens": [50364, 1108, 8997, 4397, 2399, 1422, 34091, 13, 1033, 11, 1604, 300, 13, 13879, 11, 16442, 314, 1345, 1401, 341, 3035, 50832], "temperature": 0.0, "avg_logprob": -0.11973406208886041, "compression_ratio": 1.4432432432432432, "no_speech_prob": 0.0003625249955803156}, {"id": 187, "seek": 114024, "start": 1152.4, "end": 1163.76, "text": " by Kurt Gertl that was the start of the argument as to why there could be no solution to the", "tokens": [50972, 538, 26168, 460, 911, 75, 300, 390, 264, 722, 295, 264, 6770, 382, 281, 983, 456, 727, 312, 572, 3827, 281, 264, 51540], "temperature": 0.0, "avg_logprob": -0.11973406208886041, "compression_ratio": 1.4432432432432432, "no_speech_prob": 0.0003625249955803156}, {"id": 188, "seek": 114024, "start": 1163.76, "end": 1169.92, "text": " decision problem. And what he did was he wrote this paper that he's, you know, famous for,", "tokens": [51540, 3537, 1154, 13, 400, 437, 415, 630, 390, 415, 4114, 341, 3035, 300, 415, 311, 11, 291, 458, 11, 4618, 337, 11, 51848], "temperature": 0.0, "avg_logprob": -0.11973406208886041, "compression_ratio": 1.4432432432432432, "no_speech_prob": 0.0003625249955803156}, {"id": 189, "seek": 116992, "start": 1169.92, "end": 1175.52, "text": " I mean, it was, if you saw the exhibit today, you saw his copy of the paper. And, and I mean,", "tokens": [50364, 286, 914, 11, 309, 390, 11, 498, 291, 1866, 264, 20487, 965, 11, 291, 1866, 702, 5055, 295, 264, 3035, 13, 400, 11, 293, 286, 914, 11, 50644], "temperature": 0.0, "avg_logprob": -0.14438096938594694, "compression_ratio": 1.8988326848249026, "no_speech_prob": 0.0005701297195628285}, {"id": 190, "seek": 116992, "start": 1175.52, "end": 1181.28, "text": " I think this is, this is probably the most studied theoretical science, theoretical computer science,", "tokens": [50644, 286, 519, 341, 307, 11, 341, 307, 1391, 264, 881, 9454, 20864, 3497, 11, 20864, 3820, 3497, 11, 50932], "temperature": 0.0, "avg_logprob": -0.14438096938594694, "compression_ratio": 1.8988326848249026, "no_speech_prob": 0.0005701297195628285}, {"id": 191, "seek": 116992, "start": 1181.28, "end": 1184.88, "text": " I mean, basically started theoretical computer science. So this is like absolutely fundamental", "tokens": [50932, 286, 914, 11, 1936, 1409, 20864, 3820, 3497, 13, 407, 341, 307, 411, 3122, 8088, 51112], "temperature": 0.0, "avg_logprob": -0.14438096938594694, "compression_ratio": 1.8988326848249026, "no_speech_prob": 0.0005701297195628285}, {"id": 192, "seek": 116992, "start": 1184.88, "end": 1190.48, "text": " paper. And so he's, I'm going to, I'm going to frame this in terms of graphs. But he basically,", "tokens": [51112, 3035, 13, 400, 370, 415, 311, 11, 286, 478, 516, 281, 11, 286, 478, 516, 281, 3920, 341, 294, 2115, 295, 24877, 13, 583, 415, 1936, 11, 51392], "temperature": 0.0, "avg_logprob": -0.14438096938594694, "compression_ratio": 1.8988326848249026, "no_speech_prob": 0.0005701297195628285}, {"id": 193, "seek": 116992, "start": 1190.48, "end": 1194.72, "text": " you know, you know, I don't want to overstate this too much, but you can basically invent the idea of", "tokens": [51392, 291, 458, 11, 291, 458, 11, 286, 500, 380, 528, 281, 670, 15406, 341, 886, 709, 11, 457, 291, 393, 1936, 7962, 264, 1558, 295, 51604], "temperature": 0.0, "avg_logprob": -0.14438096938594694, "compression_ratio": 1.8988326848249026, "no_speech_prob": 0.0005701297195628285}, {"id": 194, "seek": 119472, "start": 1194.72, "end": 1201.04, "text": " like the, the, the, the idea of what computation is, like, I mean, people were doing computation", "tokens": [50364, 411, 264, 11, 264, 11, 264, 11, 264, 1558, 295, 437, 24903, 307, 11, 411, 11, 286, 914, 11, 561, 645, 884, 24903, 50680], "temperature": 0.0, "avg_logprob": -0.13175494141048855, "compression_ratio": 1.8355263157894737, "no_speech_prob": 0.0015975984279066324}, {"id": 195, "seek": 119472, "start": 1201.04, "end": 1206.72, "text": " before and we had machines, but, but essentially he's like, he talked about that in terms of,", "tokens": [50680, 949, 293, 321, 632, 8379, 11, 457, 11, 457, 4476, 415, 311, 411, 11, 415, 2825, 466, 300, 294, 2115, 295, 11, 50964], "temperature": 0.0, "avg_logprob": -0.13175494141048855, "compression_ratio": 1.8355263157894737, "no_speech_prob": 0.0015975984279066324}, {"id": 196, "seek": 119472, "start": 1206.72, "end": 1211.3600000000001, "text": " he combined that to mathematics, let's say. And again, we can think of like a Turing machine,", "tokens": [50964, 415, 9354, 300, 281, 18666, 11, 718, 311, 584, 13, 400, 797, 11, 321, 393, 519, 295, 411, 257, 314, 1345, 3479, 11, 51196], "temperature": 0.0, "avg_logprob": -0.13175494141048855, "compression_ratio": 1.8355263157894737, "no_speech_prob": 0.0015975984279066324}, {"id": 197, "seek": 119472, "start": 1211.3600000000001, "end": 1215.2, "text": " you can think of as a graph where it's like, what are the possible transitions between,", "tokens": [51196, 291, 393, 519, 295, 382, 257, 4295, 689, 309, 311, 411, 11, 437, 366, 264, 1944, 23767, 1296, 11, 51388], "temperature": 0.0, "avg_logprob": -0.13175494141048855, "compression_ratio": 1.8355263157894737, "no_speech_prob": 0.0015975984279066324}, {"id": 198, "seek": 119472, "start": 1215.2, "end": 1219.1200000000001, "text": " between, between a Turing machine. So I'm going to, I'm going to explain this with my phone.", "tokens": [51388, 1296, 11, 1296, 257, 314, 1345, 3479, 13, 407, 286, 478, 516, 281, 11, 286, 478, 516, 281, 2903, 341, 365, 452, 2593, 13, 51584], "temperature": 0.0, "avg_logprob": -0.13175494141048855, "compression_ratio": 1.8355263157894737, "no_speech_prob": 0.0015975984279066324}, {"id": 199, "seek": 119472, "start": 1220.16, "end": 1223.92, "text": " So by the way, the iPhone is like so much more powerful than anything he probably could have", "tokens": [51636, 407, 538, 264, 636, 11, 264, 7252, 307, 411, 370, 709, 544, 4005, 813, 1340, 415, 1391, 727, 362, 51824], "temperature": 0.0, "avg_logprob": -0.13175494141048855, "compression_ratio": 1.8355263157894737, "no_speech_prob": 0.0015975984279066324}, {"id": 200, "seek": 122392, "start": 1223.92, "end": 1228.5600000000002, "text": " possible imagined, right? So it's a really, really, it's a super computer in your, in your,", "tokens": [50364, 1944, 16590, 11, 558, 30, 407, 309, 311, 257, 534, 11, 534, 11, 309, 311, 257, 1687, 3820, 294, 428, 11, 294, 428, 11, 50596], "temperature": 0.0, "avg_logprob": -0.1490480559212821, "compression_ratio": 1.6167664670658684, "no_speech_prob": 0.0006262159440666437}, {"id": 201, "seek": 122392, "start": 1228.5600000000002, "end": 1237.6000000000001, "text": " in your, in your pocket. And so, so here's me and my phone, I open up my email, I write reply,", "tokens": [50596, 294, 428, 11, 294, 428, 8963, 13, 400, 370, 11, 370, 510, 311, 385, 293, 452, 2593, 11, 286, 1269, 493, 452, 3796, 11, 286, 2464, 16972, 11, 51048], "temperature": 0.0, "avg_logprob": -0.1490480559212821, "compression_ratio": 1.6167664670658684, "no_speech_prob": 0.0006262159440666437}, {"id": 202, "seek": 122392, "start": 1238.5600000000002, "end": 1244.96, "text": " and then, and then I hit send. Okay. And then, and then in the sort of Turing view,", "tokens": [51096, 293, 550, 11, 293, 550, 286, 2045, 2845, 13, 1033, 13, 400, 550, 11, 293, 550, 294, 264, 1333, 295, 314, 1345, 1910, 11, 51416], "temperature": 0.0, "avg_logprob": -0.1490480559212821, "compression_ratio": 1.6167664670658684, "no_speech_prob": 0.0006262159440666437}, {"id": 203, "seek": 124496, "start": 1245.28, "end": 1254.32, "text": " each state of each configuration of my iPhone is a state, and then you have transitions between", "tokens": [50380, 1184, 1785, 295, 1184, 11694, 295, 452, 7252, 307, 257, 1785, 11, 293, 550, 291, 362, 23767, 1296, 50832], "temperature": 0.0, "avg_logprob": -0.18488889932632446, "compression_ratio": 1.663716814159292, "no_speech_prob": 0.03513859212398529}, {"id": 204, "seek": 124496, "start": 1254.32, "end": 1263.04, "text": " the states. So I can go from me opening it, seeing Tim's mail, saying my reply, hitting send, that,", "tokens": [50832, 264, 4368, 13, 407, 286, 393, 352, 490, 385, 5193, 309, 11, 2577, 7172, 311, 10071, 11, 1566, 452, 16972, 11, 8850, 2845, 11, 300, 11, 51268], "temperature": 0.0, "avg_logprob": -0.18488889932632446, "compression_ratio": 1.663716814159292, "no_speech_prob": 0.03513859212398529}, {"id": 205, "seek": 124496, "start": 1263.04, "end": 1267.52, "text": " that's, that's a progression. And that, and that states, states and configurations. Okay,", "tokens": [51268, 300, 311, 11, 300, 311, 257, 18733, 13, 400, 300, 11, 293, 300, 4368, 11, 4368, 293, 31493, 13, 1033, 11, 51492], "temperature": 0.0, "avg_logprob": -0.18488889932632446, "compression_ratio": 1.663716814159292, "no_speech_prob": 0.03513859212398529}, {"id": 206, "seek": 124496, "start": 1267.52, "end": 1270.96, "text": " that's a little, that was a little bit of background. Let's look at this program. Remember", "tokens": [51492, 300, 311, 257, 707, 11, 300, 390, 257, 707, 857, 295, 3678, 13, 961, 311, 574, 412, 341, 1461, 13, 5459, 51664], "temperature": 0.0, "avg_logprob": -0.18488889932632446, "compression_ratio": 1.663716814159292, "no_speech_prob": 0.03513859212398529}, {"id": 207, "seek": 127096, "start": 1271.04, "end": 1280.08, "text": " this one? I've added, by the way, the, the line numbers. So you could have a state of the system", "tokens": [50368, 341, 472, 30, 286, 600, 3869, 11, 538, 264, 636, 11, 264, 11, 264, 1622, 3547, 13, 407, 291, 727, 362, 257, 1785, 295, 264, 1185, 50820], "temperature": 0.0, "avg_logprob": -0.10207138291324477, "compression_ratio": 1.6914285714285715, "no_speech_prob": 0.0038233809173107147}, {"id": 208, "seek": 127096, "start": 1280.96, "end": 1287.44, "text": " where the value of n is 20, and the location is location one. So we're at this line of the program,", "tokens": [50864, 689, 264, 2158, 295, 297, 307, 945, 11, 293, 264, 4914, 307, 4914, 472, 13, 407, 321, 434, 412, 341, 1622, 295, 264, 1461, 11, 51188], "temperature": 0.0, "avg_logprob": -0.10207138291324477, "compression_ratio": 1.6914285714285715, "no_speech_prob": 0.0038233809173107147}, {"id": 209, "seek": 127096, "start": 1287.44, "end": 1295.6000000000001, "text": " and n is equal to 20. And then we can transition to the value of n being 20, and the location being", "tokens": [51188, 293, 297, 307, 2681, 281, 945, 13, 400, 550, 321, 393, 6034, 281, 264, 2158, 295, 297, 885, 945, 11, 293, 264, 4914, 885, 51596], "temperature": 0.0, "avg_logprob": -0.10207138291324477, "compression_ratio": 1.6914285714285715, "no_speech_prob": 0.0038233809173107147}, {"id": 210, "seek": 129560, "start": 1295.6, "end": 1304.48, "text": " 20. Okay, get it? Okay. So what he said was, is that we know that there will be, always be programs", "tokens": [50364, 945, 13, 1033, 11, 483, 309, 30, 1033, 13, 407, 437, 415, 848, 390, 11, 307, 300, 321, 458, 300, 456, 486, 312, 11, 1009, 312, 4268, 50808], "temperature": 0.0, "avg_logprob": -0.16946086218190748, "compression_ratio": 1.5206185567010309, "no_speech_prob": 0.001674013095907867}, {"id": 211, "seek": 129560, "start": 1304.48, "end": 1310.24, "text": " for which we can't answer the basic question of termination. So it's, it's what we say is, it's,", "tokens": [50808, 337, 597, 321, 393, 380, 1867, 264, 3875, 1168, 295, 1433, 2486, 13, 407, 309, 311, 11, 309, 311, 437, 321, 584, 307, 11, 309, 311, 11, 51096], "temperature": 0.0, "avg_logprob": -0.16946086218190748, "compression_ratio": 1.5206185567010309, "no_speech_prob": 0.001674013095907867}, {"id": 212, "seek": 129560, "start": 1310.24, "end": 1318.8799999999999, "text": " it's undecidable, right? So I, the answer is no, we cannot calculate the truth of any mathematical", "tokens": [51096, 309, 311, 674, 3045, 38089, 11, 558, 30, 407, 286, 11, 264, 1867, 307, 572, 11, 321, 2644, 8873, 264, 3494, 295, 604, 18894, 51528], "temperature": 0.0, "avg_logprob": -0.16946086218190748, "compression_ratio": 1.5206185567010309, "no_speech_prob": 0.001674013095907867}, {"id": 213, "seek": 131888, "start": 1318.88, "end": 1326.0, "text": " statement. Because if you could, the, the, the question of program termination is one of those", "tokens": [50364, 5629, 13, 1436, 498, 291, 727, 11, 264, 11, 264, 11, 264, 1168, 295, 1461, 1433, 2486, 307, 472, 295, 729, 50720], "temperature": 0.0, "avg_logprob": -0.14478346824645996, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.017438631504774094}, {"id": 214, "seek": 131888, "start": 1326.0, "end": 1332.4, "text": " mathematical things. And he sort of linked up the idea of computer programs to what's computable,", "tokens": [50720, 18894, 721, 13, 400, 415, 1333, 295, 9408, 493, 264, 1558, 295, 3820, 4268, 281, 437, 311, 2807, 712, 11, 51040], "temperature": 0.0, "avg_logprob": -0.14478346824645996, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.017438631504774094}, {"id": 215, "seek": 131888, "start": 1332.4, "end": 1338.0, "text": " to mathematics, and then said, well, this thing can't be solved and the, and he bridged the gap", "tokens": [51040, 281, 18666, 11, 293, 550, 848, 11, 731, 11, 341, 551, 393, 380, 312, 13041, 293, 264, 11, 293, 415, 16362, 3004, 264, 7417, 51320], "temperature": 0.0, "avg_logprob": -0.14478346824645996, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.017438631504774094}, {"id": 216, "seek": 131888, "start": 1338.0, "end": 1344.8000000000002, "text": " over to the mathematical side. Super cool result. leaves us in a bit of a lurch, though, in terms of", "tokens": [51320, 670, 281, 264, 18894, 1252, 13, 4548, 1627, 1874, 13, 5510, 505, 294, 257, 857, 295, 257, 287, 2476, 11, 1673, 11, 294, 2115, 295, 51660], "temperature": 0.0, "avg_logprob": -0.14478346824645996, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.017438631504774094}, {"id": 217, "seek": 134480, "start": 1344.8, "end": 1351.9199999999998, "text": " like he sort of identified a sort of Achilles heel of computers. And so I'll, I'll, I'll illustrate", "tokens": [50364, 411, 415, 1333, 295, 9234, 257, 1333, 295, 15847, 14835, 9430, 295, 10807, 13, 400, 370, 286, 603, 11, 286, 603, 11, 286, 603, 23221, 50720], "temperature": 0.0, "avg_logprob": -0.1816745948791504, "compression_ratio": 1.6535087719298245, "no_speech_prob": 0.0007095230976119637}, {"id": 218, "seek": 134480, "start": 1351.9199999999998, "end": 1358.8799999999999, "text": " that by what was stressing me out in 2003. So here's a list from Microsoft.com, sorry,", "tokens": [50720, 300, 538, 437, 390, 48233, 385, 484, 294, 16416, 13, 407, 510, 311, 257, 1329, 490, 8116, 13, 1112, 11, 2597, 11, 51068], "temperature": 0.0, "avg_logprob": -0.1816745948791504, "compression_ratio": 1.6535087719298245, "no_speech_prob": 0.0007095230976119637}, {"id": 219, "seek": 134480, "start": 1358.8799999999999, "end": 1364.96, "text": " and the I'm going to poke on Microsoft a little bit now that work at Amazon of, of, of device", "tokens": [51068, 293, 264, 286, 478, 516, 281, 19712, 322, 8116, 257, 707, 857, 586, 300, 589, 412, 6795, 295, 11, 295, 11, 295, 4302, 51372], "temperature": 0.0, "avg_logprob": -0.1816745948791504, "compression_ratio": 1.6535087719298245, "no_speech_prob": 0.0007095230976119637}, {"id": 220, "seek": 134480, "start": 1364.96, "end": 1369.2, "text": " drivers that you could download. And you could put these in these, you could put these into your", "tokens": [51372, 11590, 300, 291, 727, 5484, 13, 400, 291, 727, 829, 613, 294, 613, 11, 291, 727, 829, 613, 666, 428, 51584], "temperature": 0.0, "avg_logprob": -0.1816745948791504, "compression_ratio": 1.6535087719298245, "no_speech_prob": 0.0007095230976119637}, {"id": 221, "seek": 136920, "start": 1369.2, "end": 1376.64, "text": " machine. And each of these device drivers is backed by source code. And the problem is that", "tokens": [50364, 3479, 13, 400, 1184, 295, 613, 4302, 11590, 307, 20391, 538, 4009, 3089, 13, 400, 264, 1154, 307, 300, 50736], "temperature": 0.0, "avg_logprob": -0.0934830600932493, "compression_ratio": 1.8108108108108107, "no_speech_prob": 0.014501437544822693}, {"id": 222, "seek": 136920, "start": 1376.64, "end": 1381.52, "text": " there may be device drivers out there for which we can't answer the termination question. And boy,", "tokens": [50736, 456, 815, 312, 4302, 11590, 484, 456, 337, 597, 321, 393, 380, 1867, 264, 1433, 2486, 1168, 13, 400, 3237, 11, 50980], "temperature": 0.0, "avg_logprob": -0.0934830600932493, "compression_ratio": 1.8108108108108107, "no_speech_prob": 0.014501437544822693}, {"id": 223, "seek": 136920, "start": 1381.52, "end": 1386.64, "text": " when a device driver goes into an infinite loop, we're in a world of hurt, like that is a really", "tokens": [50980, 562, 257, 4302, 6787, 1709, 666, 364, 13785, 6367, 11, 321, 434, 294, 257, 1002, 295, 4607, 11, 411, 300, 307, 257, 534, 51236], "temperature": 0.0, "avg_logprob": -0.0934830600932493, "compression_ratio": 1.8108108108108107, "no_speech_prob": 0.014501437544822693}, {"id": 224, "seek": 136920, "start": 1386.64, "end": 1391.3600000000001, "text": " bad situation. Because now like you, your, all your programs are going to start hanging, like", "tokens": [51236, 1578, 2590, 13, 1436, 586, 411, 291, 11, 428, 11, 439, 428, 4268, 366, 516, 281, 722, 8345, 11, 411, 51472], "temperature": 0.0, "avg_logprob": -0.0934830600932493, "compression_ratio": 1.8108108108108107, "no_speech_prob": 0.014501437544822693}, {"id": 225, "seek": 136920, "start": 1391.3600000000001, "end": 1394.96, "text": " that this can be, this can be a very, very bad situation. We don't want that to happen.", "tokens": [51472, 300, 341, 393, 312, 11, 341, 393, 312, 257, 588, 11, 588, 1578, 2590, 13, 492, 500, 380, 528, 300, 281, 1051, 13, 51652], "temperature": 0.0, "avg_logprob": -0.0934830600932493, "compression_ratio": 1.8108108108108107, "no_speech_prob": 0.014501437544822693}, {"id": 226, "seek": 139496, "start": 1395.92, "end": 1400.48, "text": " So non-terminating device drivers hang your computer and hang them often in quite bad ways.", "tokens": [50412, 407, 2107, 12, 29725, 990, 4302, 11590, 3967, 428, 3820, 293, 3967, 552, 2049, 294, 1596, 1578, 2098, 13, 50640], "temperature": 0.0, "avg_logprob": -0.20704333636225486, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.0015011142240837216}, {"id": 227, "seek": 139496, "start": 1401.76, "end": 1407.44, "text": " But what's not so known, who knows about raise your hand if you know the paper, checking a", "tokens": [50704, 583, 437, 311, 406, 370, 2570, 11, 567, 3255, 466, 5300, 428, 1011, 498, 291, 458, 264, 3035, 11, 8568, 257, 50988], "temperature": 0.0, "avg_logprob": -0.20704333636225486, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.0015011142240837216}, {"id": 228, "seek": 139496, "start": 1407.44, "end": 1414.96, "text": " large routine by all in turn. One hand, that's staggering. Really, you don't know this paper.", "tokens": [50988, 2416, 9927, 538, 439, 294, 1261, 13, 1485, 1011, 11, 300, 311, 42974, 13, 4083, 11, 291, 500, 380, 458, 341, 3035, 13, 51364], "temperature": 0.0, "avg_logprob": -0.20704333636225486, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.0015011142240837216}, {"id": 229, "seek": 139496, "start": 1416.64, "end": 1421.44, "text": " People, people in automated reasoning in, in, in Amazon, pull up your hand if you don't, if you,", "tokens": [51448, 3432, 11, 561, 294, 18473, 21577, 294, 11, 294, 11, 294, 6795, 11, 2235, 493, 428, 1011, 498, 291, 500, 380, 11, 498, 291, 11, 51688], "temperature": 0.0, "avg_logprob": -0.20704333636225486, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.0015011142240837216}, {"id": 230, "seek": 142144, "start": 1421.44, "end": 1425.6000000000001, "text": " if you work for Amazon and you don't know this paper. That's interesting. Okay. Great. Well,", "tokens": [50364, 498, 291, 589, 337, 6795, 293, 291, 500, 380, 458, 341, 3035, 13, 663, 311, 1880, 13, 1033, 13, 3769, 13, 1042, 11, 50572], "temperature": 0.0, "avg_logprob": -0.13740351662706973, "compression_ratio": 1.6033333333333333, "no_speech_prob": 0.0013247838942334056}, {"id": 231, "seek": 142144, "start": 1425.6000000000001, "end": 1428.56, "text": " you're going to know about the paper. I think this is one of the most interesting papers there is.", "tokens": [50572, 291, 434, 516, 281, 458, 466, 264, 3035, 13, 286, 519, 341, 307, 472, 295, 264, 881, 1880, 10577, 456, 307, 13, 50720], "temperature": 0.0, "avg_logprob": -0.13740351662706973, "compression_ratio": 1.6033333333333333, "no_speech_prob": 0.0013247838942334056}, {"id": 232, "seek": 142144, "start": 1428.56, "end": 1435.04, "text": " This, this comes from 1949. He totally tells us how to do our job. It's amazing. So, so he gives", "tokens": [50720, 639, 11, 341, 1487, 490, 46476, 13, 634, 3879, 5112, 505, 577, 281, 360, 527, 1691, 13, 467, 311, 2243, 13, 407, 11, 370, 415, 2709, 51044], "temperature": 0.0, "avg_logprob": -0.13740351662706973, "compression_ratio": 1.6033333333333333, "no_speech_prob": 0.0013247838942334056}, {"id": 233, "seek": 142144, "start": 1435.04, "end": 1445.2, "text": " a very clear instruction for how to prove a program terminating. 1949, I think. And so I'm,", "tokens": [51044, 257, 588, 1850, 10951, 337, 577, 281, 7081, 257, 1461, 1433, 8205, 13, 46476, 11, 286, 519, 13, 400, 370, 286, 478, 11, 51552], "temperature": 0.0, "avg_logprob": -0.13740351662706973, "compression_ratio": 1.6033333333333333, "no_speech_prob": 0.0013247838942334056}, {"id": 234, "seek": 142144, "start": 1445.2, "end": 1450.48, "text": " now I'm going to put a few words in Ellen Turing's mouth. So he doesn't quite say this, but he says,", "tokens": [51552, 586, 286, 478, 516, 281, 829, 257, 1326, 2283, 294, 20306, 314, 1345, 311, 4525, 13, 407, 415, 1177, 380, 1596, 584, 341, 11, 457, 415, 1619, 11, 51816], "temperature": 0.0, "avg_logprob": -0.13740351662706973, "compression_ratio": 1.6033333333333333, "no_speech_prob": 0.0013247838942334056}, {"id": 235, "seek": 145048, "start": 1450.72, "end": 1454.56, "text": " but basically between the, read between the lines, what Ellen Turing is really saying is,", "tokens": [50376, 457, 1936, 1296, 264, 11, 1401, 1296, 264, 3876, 11, 437, 20306, 314, 1345, 307, 534, 1566, 307, 11, 50568], "temperature": 0.0, "avg_logprob": -0.15926757225623497, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0004441668279469013}, {"id": 236, "seek": 145048, "start": 1455.76, "end": 1461.3600000000001, "text": " in practical cases, we can answer the termination question. And then furthermore, in cases where", "tokens": [50628, 294, 8496, 3331, 11, 321, 393, 1867, 264, 1433, 2486, 1168, 13, 400, 550, 3052, 3138, 11, 294, 3331, 689, 50908], "temperature": 0.0, "avg_logprob": -0.15926757225623497, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0004441668279469013}, {"id": 237, "seek": 145048, "start": 1461.3600000000001, "end": 1467.92, "text": " we can't, we just return maybe, what's the big deal? Right? Like, it's like, yeah, yeah, yeah,", "tokens": [50908, 321, 393, 380, 11, 321, 445, 2736, 1310, 11, 437, 311, 264, 955, 2028, 30, 1779, 30, 1743, 11, 309, 311, 411, 11, 1338, 11, 1338, 11, 1338, 11, 51236], "temperature": 0.0, "avg_logprob": -0.15926757225623497, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0004441668279469013}, {"id": 238, "seek": 145048, "start": 1467.92, "end": 1472.56, "text": " I proved the halting problem undecidable, get over it. Like, life moves on. Now we need to do", "tokens": [51236, 286, 14617, 264, 7523, 783, 1154, 674, 3045, 38089, 11, 483, 670, 309, 13, 1743, 11, 993, 6067, 322, 13, 823, 321, 643, 281, 360, 51468], "temperature": 0.0, "avg_logprob": -0.15926757225623497, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0004441668279469013}, {"id": 239, "seek": 145048, "start": 1472.56, "end": 1477.2, "text": " practical stuff. We have computers. Remember the war, like computers are cool. Let's, let's, let's,", "tokens": [51468, 8496, 1507, 13, 492, 362, 10807, 13, 5459, 264, 1516, 11, 411, 10807, 366, 1627, 13, 961, 311, 11, 718, 311, 11, 718, 311, 11, 51700], "temperature": 0.0, "avg_logprob": -0.15926757225623497, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0004441668279469013}, {"id": 240, "seek": 147720, "start": 1478.0, "end": 1484.72, "text": " let's do good things here. And so to think about this, think about like British Airways, right?", "tokens": [50404, 718, 311, 360, 665, 721, 510, 13, 400, 370, 281, 519, 466, 341, 11, 519, 466, 411, 6221, 5774, 942, 11, 558, 30, 50740], "temperature": 0.0, "avg_logprob": -0.13060781478881836, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0033759265206754208}, {"id": 241, "seek": 147720, "start": 1485.28, "end": 1493.52, "text": " On time arrival is not guaranteed. But, and I know you're probably all winging about British", "tokens": [50768, 1282, 565, 18365, 307, 406, 18031, 13, 583, 11, 293, 286, 458, 291, 434, 1391, 439, 261, 8716, 466, 6221, 51180], "temperature": 0.0, "avg_logprob": -0.13060781478881836, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0033759265206754208}, {"id": 242, "seek": 147720, "start": 1493.52, "end": 1498.64, "text": " Airways right now, but they're pretty good. Like you, you do often arrive most of the time, right?", "tokens": [51180, 5774, 942, 558, 586, 11, 457, 436, 434, 1238, 665, 13, 1743, 291, 11, 291, 360, 2049, 8881, 881, 295, 264, 565, 11, 558, 30, 51436], "temperature": 0.0, "avg_logprob": -0.13060781478881836, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0033759265206754208}, {"id": 243, "seek": 147720, "start": 1498.64, "end": 1505.04, "text": " You arrive, you arrive, you get on time arrival often enough that you think, I'll fly again.", "tokens": [51436, 509, 8881, 11, 291, 8881, 11, 291, 483, 322, 565, 18365, 2049, 1547, 300, 291, 519, 11, 286, 603, 3603, 797, 13, 51756], "temperature": 0.0, "avg_logprob": -0.13060781478881836, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0033759265206754208}, {"id": 244, "seek": 150504, "start": 1505.76, "end": 1510.8, "text": " So, so, so they're, they're not horrible. So the real, the real thing that they need to do is just", "tokens": [50400, 407, 11, 370, 11, 370, 436, 434, 11, 436, 434, 406, 9263, 13, 407, 264, 957, 11, 264, 957, 551, 300, 436, 643, 281, 360, 307, 445, 50652], "temperature": 0.0, "avg_logprob": -0.08793828670795147, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.0006461503216996789}, {"id": 245, "seek": 150504, "start": 1511.44, "end": 1516.0, "text": " to make on time arrival frequent enough to make the airline useful to their customers.", "tokens": [50684, 281, 652, 322, 565, 18365, 18004, 1547, 281, 652, 264, 29528, 4420, 281, 641, 4581, 13, 50912], "temperature": 0.0, "avg_logprob": -0.08793828670795147, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.0006461503216996789}, {"id": 246, "seek": 150504, "start": 1516.8, "end": 1521.68, "text": " And it's the same with, with Termination Prover. So if you're building a tool to analyze termination", "tokens": [50952, 400, 309, 311, 264, 912, 365, 11, 365, 19835, 2486, 1705, 331, 13, 407, 498, 291, 434, 2390, 257, 2290, 281, 12477, 1433, 2486, 51196], "temperature": 0.0, "avg_logprob": -0.08793828670795147, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.0006461503216996789}, {"id": 247, "seek": 150504, "start": 1521.68, "end": 1528.1599999999999, "text": " of program, so long as the tool answers often enough with the right answer, then, then you're", "tokens": [51196, 295, 1461, 11, 370, 938, 382, 264, 2290, 6338, 2049, 1547, 365, 264, 558, 1867, 11, 550, 11, 550, 291, 434, 51520], "temperature": 0.0, "avg_logprob": -0.08793828670795147, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.0006461503216996789}, {"id": 248, "seek": 150504, "start": 1528.1599999999999, "end": 1532.56, "text": " going to use it even if you're, even if you know from time to time, it's not, it's not, it's not,", "tokens": [51520, 516, 281, 764, 309, 754, 498, 291, 434, 11, 754, 498, 291, 458, 490, 565, 281, 565, 11, 309, 311, 406, 11, 309, 311, 406, 11, 309, 311, 406, 11, 51740], "temperature": 0.0, "avg_logprob": -0.08793828670795147, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.0006461503216996789}, {"id": 249, "seek": 153256, "start": 1532.56, "end": 1536.8, "text": " it's not going to give you, it's, it's, it's not going to be able to answer it. And, but, you know,", "tokens": [50364, 309, 311, 406, 516, 281, 976, 291, 11, 309, 311, 11, 309, 311, 11, 309, 311, 406, 516, 281, 312, 1075, 281, 1867, 309, 13, 400, 11, 457, 11, 291, 458, 11, 50576], "temperature": 0.0, "avg_logprob": -0.17459972537293725, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.0007320755394175649}, {"id": 250, "seek": 153256, "start": 1536.8, "end": 1540.56, "text": " the answers need to be correct. Yes or no answers need to be correct.", "tokens": [50576, 264, 6338, 643, 281, 312, 3006, 13, 1079, 420, 572, 6338, 643, 281, 312, 3006, 13, 50764], "temperature": 0.0, "avg_logprob": -0.17459972537293725, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.0007320755394175649}, {"id": 251, "seek": 153256, "start": 1542.6399999999999, "end": 1551.44, "text": " Okay. So in 2004, what, what Andreas and Andre, and I, oh, sorry, I want to say something else.", "tokens": [50868, 1033, 13, 407, 294, 15817, 11, 437, 11, 437, 38785, 293, 20667, 11, 293, 286, 11, 1954, 11, 2597, 11, 286, 528, 281, 584, 746, 1646, 13, 51308], "temperature": 0.0, "avg_logprob": -0.17459972537293725, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.0007320755394175649}, {"id": 252, "seek": 153256, "start": 1554.0, "end": 1556.48, "text": " This paper on the left, the Turing's famous paper,", "tokens": [51436, 639, 3035, 322, 264, 1411, 11, 264, 314, 1345, 311, 4618, 3035, 11, 51560], "temperature": 0.0, "avg_logprob": -0.17459972537293725, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.0007320755394175649}, {"id": 253, "seek": 155648, "start": 1556.8, "end": 1568.8, "text": " has kind of been a buzzkill in, in the, in the IT industry. It's, people do not, what's the,", "tokens": [50380, 575, 733, 295, 668, 257, 13036, 34213, 294, 11, 294, 264, 11, 294, 264, 6783, 3518, 13, 467, 311, 11, 561, 360, 406, 11, 437, 311, 264, 11, 50980], "temperature": 0.0, "avg_logprob": -0.16986100570015286, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.010011805221438408}, {"id": 254, "seek": 155648, "start": 1569.76, "end": 1574.4, "text": " the thing is you do an improv, you don't say no, you say yes and right. So there's a whole lot of", "tokens": [51028, 264, 551, 307, 291, 360, 364, 29424, 11, 291, 500, 380, 584, 572, 11, 291, 584, 2086, 293, 558, 13, 407, 456, 311, 257, 1379, 688, 295, 51260], "temperature": 0.0, "avg_logprob": -0.16986100570015286, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.010011805221438408}, {"id": 255, "seek": 155648, "start": 1574.4, "end": 1578.72, "text": " people who didn't study improv apparently in the IT industry. And so if ever you have some idea,", "tokens": [51260, 561, 567, 994, 380, 2979, 29424, 7970, 294, 264, 6783, 3518, 13, 400, 370, 498, 1562, 291, 362, 512, 1558, 11, 51476], "temperature": 0.0, "avg_logprob": -0.16986100570015286, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.010011805221438408}, {"id": 256, "seek": 155648, "start": 1578.72, "end": 1585.28, "text": " like, oh, I know we could do X, Y and Z, someone's going to be like, that's the whole thing problem,", "tokens": [51476, 411, 11, 1954, 11, 286, 458, 321, 727, 360, 1783, 11, 398, 293, 1176, 11, 1580, 311, 516, 281, 312, 411, 11, 300, 311, 264, 1379, 551, 1154, 11, 51804], "temperature": 0.0, "avg_logprob": -0.16986100570015286, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.010011805221438408}, {"id": 257, "seek": 158528, "start": 1585.28, "end": 1590.72, "text": " you can't do that. And oh, I feel shame. Sorry, I suggested it. Let's not solve the problem at all.", "tokens": [50364, 291, 393, 380, 360, 300, 13, 400, 1954, 11, 286, 841, 10069, 13, 4919, 11, 286, 10945, 309, 13, 961, 311, 406, 5039, 264, 1154, 412, 439, 13, 50636], "temperature": 0.0, "avg_logprob": -0.10906078279480454, "compression_ratio": 1.6526315789473685, "no_speech_prob": 0.0015006210887804627}, {"id": 258, "seek": 158528, "start": 1590.72, "end": 1594.08, "text": " Sorry. And that's, that happens a lot. I mean, I've seen that personally a bunch of times that", "tokens": [50636, 4919, 13, 400, 300, 311, 11, 300, 2314, 257, 688, 13, 286, 914, 11, 286, 600, 1612, 300, 5665, 257, 3840, 295, 1413, 300, 50804], "temperature": 0.0, "avg_logprob": -0.10906078279480454, "compression_ratio": 1.6526315789473685, "no_speech_prob": 0.0015006210887804627}, {"id": 259, "seek": 158528, "start": 1594.08, "end": 1600.8799999999999, "text": " you hear that a lot. So this is like the most abused theoretical results in computer science that", "tokens": [50804, 291, 1568, 300, 257, 688, 13, 407, 341, 307, 411, 264, 881, 27075, 20864, 3542, 294, 3820, 3497, 300, 51144], "temperature": 0.0, "avg_logprob": -0.10906078279480454, "compression_ratio": 1.6526315789473685, "no_speech_prob": 0.0015006210887804627}, {"id": 260, "seek": 158528, "start": 1601.76, "end": 1605.68, "text": " because it's the halting problem, don't even try, you know, like life is too hard.", "tokens": [51188, 570, 309, 311, 264, 7523, 783, 1154, 11, 500, 380, 754, 853, 11, 291, 458, 11, 411, 993, 307, 886, 1152, 13, 51384], "temperature": 0.0, "avg_logprob": -0.10906078279480454, "compression_ratio": 1.6526315789473685, "no_speech_prob": 0.0015006210887804627}, {"id": 261, "seek": 158528, "start": 1607.84, "end": 1613.76, "text": " But very, very, very few people in 2004 thought it was, it was practical, even in my own field.", "tokens": [51492, 583, 588, 11, 588, 11, 588, 1326, 561, 294, 15817, 1194, 309, 390, 11, 309, 390, 8496, 11, 754, 294, 452, 1065, 2519, 13, 51788], "temperature": 0.0, "avg_logprob": -0.10906078279480454, "compression_ratio": 1.6526315789473685, "no_speech_prob": 0.0015006210887804627}, {"id": 262, "seek": 161376, "start": 1614.72, "end": 1619.2, "text": " Like, you would talk, you would talk to people on my own field. The vast majority of people would", "tokens": [50412, 1743, 11, 291, 576, 751, 11, 291, 576, 751, 281, 561, 322, 452, 1065, 2519, 13, 440, 8369, 6286, 295, 561, 576, 50636], "temperature": 0.0, "avg_logprob": -0.15493994374429026, "compression_ratio": 1.87109375, "no_speech_prob": 0.0005527054308913648}, {"id": 263, "seek": 161376, "start": 1619.2, "end": 1623.92, "text": " be like, but it's undecidable. But it's like, yeah, but so is the state space reachability problem", "tokens": [50636, 312, 411, 11, 457, 309, 311, 674, 3045, 38089, 13, 583, 309, 311, 411, 11, 1338, 11, 457, 370, 307, 264, 1785, 1901, 2524, 2310, 1154, 50872], "temperature": 0.0, "avg_logprob": -0.15493994374429026, "compression_ratio": 1.87109375, "no_speech_prob": 0.0005527054308913648}, {"id": 264, "seek": 161376, "start": 1623.92, "end": 1629.28, "text": " for infinite state systems. But they did, oh, yeah, forgot about that. So, but, but with,", "tokens": [50872, 337, 13785, 1785, 3652, 13, 583, 436, 630, 11, 1954, 11, 1338, 11, 5298, 466, 300, 13, 407, 11, 457, 11, 457, 365, 11, 51140], "temperature": 0.0, "avg_logprob": -0.15493994374429026, "compression_ratio": 1.87109375, "no_speech_prob": 0.0005527054308913648}, {"id": 265, "seek": 161376, "start": 1630.0, "end": 1636.24, "text": " with the exception of some brave souls. So there were a few brave souls that were, that were trying", "tokens": [51176, 365, 264, 11183, 295, 512, 12653, 16588, 13, 407, 456, 645, 257, 1326, 12653, 16588, 300, 645, 11, 300, 645, 1382, 51488], "temperature": 0.0, "avg_logprob": -0.15493994374429026, "compression_ratio": 1.87109375, "no_speech_prob": 0.0005527054308913648}, {"id": 266, "seek": 161376, "start": 1636.24, "end": 1641.84, "text": " to solve this problem. But the problem for them is that their tools all solved this only for", "tokens": [51488, 281, 5039, 341, 1154, 13, 583, 264, 1154, 337, 552, 307, 300, 641, 3873, 439, 13041, 341, 787, 337, 51768], "temperature": 0.0, "avg_logprob": -0.15493994374429026, "compression_ratio": 1.87109375, "no_speech_prob": 0.0005527054308913648}, {"id": 267, "seek": 164184, "start": 1641.84, "end": 1646.32, "text": " little tiny programs, like little eight-line programs, seven-line programs. So they, and they", "tokens": [50364, 707, 5870, 4268, 11, 411, 707, 3180, 12, 1889, 4268, 11, 3407, 12, 1889, 4268, 13, 407, 436, 11, 293, 436, 50588], "temperature": 0.0, "avg_logprob": -0.13219841106517896, "compression_ratio": 1.835483870967742, "no_speech_prob": 0.0032721925526857376}, {"id": 268, "seek": 164184, "start": 1646.32, "end": 1650.8799999999999, "text": " didn't have sort of any of the actual features you'd see in real programs like pointers and", "tokens": [50588, 994, 380, 362, 1333, 295, 604, 295, 264, 3539, 4122, 291, 1116, 536, 294, 957, 4268, 411, 44548, 293, 50816], "temperature": 0.0, "avg_logprob": -0.13219841106517896, "compression_ratio": 1.835483870967742, "no_speech_prob": 0.0032721925526857376}, {"id": 269, "seek": 164184, "start": 1651.52, "end": 1656.9599999999998, "text": " concurrency or any of that. So they were fun. They're super fun, but they weren't actually going", "tokens": [50848, 23702, 10457, 420, 604, 295, 300, 13, 407, 436, 645, 1019, 13, 814, 434, 1687, 1019, 11, 457, 436, 4999, 380, 767, 516, 51120], "temperature": 0.0, "avg_logprob": -0.13219841106517896, "compression_ratio": 1.835483870967742, "no_speech_prob": 0.0032721925526857376}, {"id": 270, "seek": 164184, "start": 1656.9599999999998, "end": 1663.12, "text": " to solve anything. And so that's, that's where Terminator steps in. So this is a tool that Andre", "tokens": [51120, 281, 5039, 1340, 13, 400, 370, 300, 311, 11, 300, 311, 689, 19835, 31927, 4439, 294, 13, 407, 341, 307, 257, 2290, 300, 20667, 51428], "temperature": 0.0, "avg_logprob": -0.13219841106517896, "compression_ratio": 1.835483870967742, "no_speech_prob": 0.0032721925526857376}, {"id": 271, "seek": 164184, "start": 1663.12, "end": 1667.12, "text": " and Andreas and I wrote. And by the way, if you're Cambridge people, do you know this ride?", "tokens": [51428, 293, 38785, 293, 286, 4114, 13, 400, 538, 264, 636, 11, 498, 291, 434, 24876, 561, 11, 360, 291, 458, 341, 5077, 30, 51628], "temperature": 0.0, "avg_logprob": -0.13219841106517896, "compression_ratio": 1.835483870967742, "no_speech_prob": 0.0032721925526857376}, {"id": 272, "seek": 164184, "start": 1667.76, "end": 1670.8, "text": " Have you seen this? I don't know if they have this anymore. So this is at least when I lived here", "tokens": [51660, 3560, 291, 1612, 341, 30, 286, 500, 380, 458, 498, 436, 362, 341, 3602, 13, 407, 341, 307, 412, 1935, 562, 286, 5152, 510, 51812], "temperature": 0.0, "avg_logprob": -0.13219841106517896, "compression_ratio": 1.835483870967742, "no_speech_prob": 0.0032721925526857376}, {"id": 273, "seek": 167080, "start": 1670.8, "end": 1675.12, "text": " in the mid-summer, common every summer, they would truck in these rides, right? And so then", "tokens": [50364, 294, 264, 2062, 12, 82, 30906, 11, 2689, 633, 4266, 11, 436, 576, 5898, 294, 613, 20773, 11, 558, 30, 400, 370, 550, 50580], "temperature": 0.0, "avg_logprob": -0.16356809815364098, "compression_ratio": 1.750915750915751, "no_speech_prob": 0.0007552250754088163}, {"id": 274, "seek": 167080, "start": 1675.12, "end": 1678.8799999999999, "text": " this was one of the rides. So I was looking through my photos for this talk, and there's so many", "tokens": [50580, 341, 390, 472, 295, 264, 20773, 13, 407, 286, 390, 1237, 807, 452, 5787, 337, 341, 751, 11, 293, 456, 311, 370, 867, 50768], "temperature": 0.0, "avg_logprob": -0.16356809815364098, "compression_ratio": 1.750915750915751, "no_speech_prob": 0.0007552250754088163}, {"id": 275, "seek": 167080, "start": 1678.8799999999999, "end": 1686.24, "text": " photos of me in front of the Terminator ride because I did Terminator. Okay. So, so what we did", "tokens": [50768, 5787, 295, 385, 294, 1868, 295, 264, 19835, 31927, 5077, 570, 286, 630, 19835, 31927, 13, 1033, 13, 407, 11, 370, 437, 321, 630, 51136], "temperature": 0.0, "avg_logprob": -0.16356809815364098, "compression_ratio": 1.750915750915751, "no_speech_prob": 0.0007552250754088163}, {"id": 276, "seek": 167080, "start": 1686.24, "end": 1694.8, "text": " is we, is we looked at this, the Turing paper and had a good read, right? So what we realized was,", "tokens": [51136, 307, 321, 11, 307, 321, 2956, 412, 341, 11, 264, 314, 1345, 3035, 293, 632, 257, 665, 1401, 11, 558, 30, 407, 437, 321, 5334, 390, 11, 51564], "temperature": 0.0, "avg_logprob": -0.16356809815364098, "compression_ratio": 1.750915750915751, "no_speech_prob": 0.0007552250754088163}, {"id": 277, "seek": 167080, "start": 1694.8, "end": 1698.3999999999999, "text": " is that, hey, there's actually two parts. And I'm going to tell you about that. So there's two", "tokens": [51564, 307, 300, 11, 4177, 11, 456, 311, 767, 732, 3166, 13, 400, 286, 478, 516, 281, 980, 291, 466, 300, 13, 407, 456, 311, 732, 51744], "temperature": 0.0, "avg_logprob": -0.16356809815364098, "compression_ratio": 1.750915750915751, "no_speech_prob": 0.0007552250754088163}, {"id": 278, "seek": 169840, "start": 1698.4, "end": 1702.72, "text": " parts to solve and you can still solve them with independent bits. And then, and then, and then,", "tokens": [50364, 3166, 281, 5039, 293, 291, 393, 920, 5039, 552, 365, 6695, 9239, 13, 400, 550, 11, 293, 550, 11, 293, 550, 11, 50580], "temperature": 0.0, "avg_logprob": -0.10839061347805724, "compression_ratio": 1.7625, "no_speech_prob": 0.009703815914690495}, {"id": 279, "seek": 169840, "start": 1702.72, "end": 1708.8000000000002, "text": " and then you're done. So now I've put up a paper, I put up three paragraphs from a paper that's 74", "tokens": [50580, 293, 550, 291, 434, 1096, 13, 407, 586, 286, 600, 829, 493, 257, 3035, 11, 286, 829, 493, 1045, 48910, 490, 257, 3035, 300, 311, 28868, 50884], "temperature": 0.0, "avg_logprob": -0.10839061347805724, "compression_ratio": 1.7625, "no_speech_prob": 0.009703815914690495}, {"id": 280, "seek": 169840, "start": 1708.8000000000002, "end": 1713.76, "text": " years old, that's referring to a figure that's not included in the screenshot. So we're not going", "tokens": [50884, 924, 1331, 11, 300, 311, 13761, 281, 257, 2573, 300, 311, 406, 5556, 294, 264, 27712, 13, 407, 321, 434, 406, 516, 51132], "temperature": 0.0, "avg_logprob": -0.10839061347805724, "compression_ratio": 1.7625, "no_speech_prob": 0.009703815914690495}, {"id": 281, "seek": 169840, "start": 1713.76, "end": 1716.96, "text": " to make it very far through this paragraph clearly. And it's written in language no one would know.", "tokens": [51132, 281, 652, 309, 588, 1400, 807, 341, 18865, 4448, 13, 400, 309, 311, 3720, 294, 2856, 572, 472, 576, 458, 13, 51292], "temperature": 0.0, "avg_logprob": -0.10839061347805724, "compression_ratio": 1.7625, "no_speech_prob": 0.009703815914690495}, {"id": 282, "seek": 169840, "start": 1716.96, "end": 1721.68, "text": " But I just draw your attention to the first line. I move over here so I can see it.", "tokens": [51292, 583, 286, 445, 2642, 428, 3202, 281, 264, 700, 1622, 13, 286, 1286, 670, 510, 370, 286, 393, 536, 309, 13, 51528], "temperature": 0.0, "avg_logprob": -0.10839061347805724, "compression_ratio": 1.7625, "no_speech_prob": 0.009703815914690495}, {"id": 283, "seek": 169840, "start": 1722.64, "end": 1726.5600000000002, "text": " In order to assist the checker, the checker is the person doing the proof or the tool.", "tokens": [51576, 682, 1668, 281, 4255, 264, 1520, 260, 11, 264, 1520, 260, 307, 264, 954, 884, 264, 8177, 420, 264, 2290, 13, 51772], "temperature": 0.0, "avg_logprob": -0.10839061347805724, "compression_ratio": 1.7625, "no_speech_prob": 0.009703815914690495}, {"id": 284, "seek": 172656, "start": 1727.36, "end": 1731.76, "text": " The programmer should make assertions about the various states that the machine,", "tokens": [50404, 440, 32116, 820, 652, 19810, 626, 466, 264, 3683, 4368, 300, 264, 3479, 11, 50624], "temperature": 0.0, "avg_logprob": -0.1047365665435791, "compression_ratio": 1.8619246861924685, "no_speech_prob": 0.0019261555280536413}, {"id": 285, "seek": 172656, "start": 1731.76, "end": 1736.8799999999999, "text": " that's the program, can reach. And the reach is a really interesting bit. So,", "tokens": [50624, 300, 311, 264, 1461, 11, 393, 2524, 13, 400, 264, 2524, 307, 257, 534, 1880, 857, 13, 407, 11, 50880], "temperature": 0.0, "avg_logprob": -0.1047365665435791, "compression_ratio": 1.8619246861924685, "no_speech_prob": 0.0019261555280536413}, {"id": 286, "seek": 172656, "start": 1737.9199999999998, "end": 1743.6, "text": " so imagine that these states are unreachable. Imagine these states are reachable. But that", "tokens": [50932, 370, 3811, 300, 613, 4368, 366, 517, 16226, 712, 13, 11739, 613, 4368, 366, 2524, 712, 13, 583, 300, 51216], "temperature": 0.0, "avg_logprob": -0.1047365665435791, "compression_ratio": 1.8619246861924685, "no_speech_prob": 0.0019261555280536413}, {"id": 287, "seek": 172656, "start": 1743.6, "end": 1748.56, "text": " turns out there's no path over here. And here's a little infinite loop. Here's a what is that six", "tokens": [51216, 4523, 484, 456, 311, 572, 3100, 670, 510, 13, 400, 510, 311, 257, 707, 13785, 6367, 13, 1692, 311, 257, 437, 307, 300, 2309, 51464], "temperature": 0.0, "avg_logprob": -0.1047365665435791, "compression_ratio": 1.8619246861924685, "no_speech_prob": 0.0019261555280536413}, {"id": 288, "seek": 172656, "start": 1748.56, "end": 1753.04, "text": " states that could be repeated forever over and over and over again. So imagine this is my iPhone,", "tokens": [51464, 4368, 300, 727, 312, 10477, 5680, 670, 293, 670, 293, 670, 797, 13, 407, 3811, 341, 307, 452, 7252, 11, 51688], "temperature": 0.0, "avg_logprob": -0.1047365665435791, "compression_ratio": 1.8619246861924685, "no_speech_prob": 0.0019261555280536413}, {"id": 289, "seek": 175304, "start": 1753.6, "end": 1758.1599999999999, "text": " so I have six configurations of my iPhone and they're just going around and around and around", "tokens": [50392, 370, 286, 362, 2309, 31493, 295, 452, 7252, 293, 436, 434, 445, 516, 926, 293, 926, 293, 926, 50620], "temperature": 0.0, "avg_logprob": -0.0898494450551159, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.005553752649575472}, {"id": 290, "seek": 175304, "start": 1758.1599999999999, "end": 1763.6, "text": " between those configurations. But it doesn't matter because it's unreachable. So there's tons", "tokens": [50620, 1296, 729, 31493, 13, 583, 309, 1177, 380, 1871, 570, 309, 311, 517, 16226, 712, 13, 407, 456, 311, 9131, 50892], "temperature": 0.0, "avg_logprob": -0.0898494450551159, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.005553752649575472}, {"id": 291, "seek": 175304, "start": 1763.6, "end": 1769.2, "text": " of termination bugs in your phone, tons of termination bugs in your computer that are never", "tokens": [50892, 295, 1433, 2486, 15120, 294, 428, 2593, 11, 9131, 295, 1433, 2486, 15120, 294, 428, 3820, 300, 366, 1128, 51172], "temperature": 0.0, "avg_logprob": -0.0898494450551159, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.005553752649575472}, {"id": 292, "seek": 175304, "start": 1769.2, "end": 1772.32, "text": " going to be triggered. You're never actually going to experience them because they're unreachable.", "tokens": [51172, 516, 281, 312, 21710, 13, 509, 434, 1128, 767, 516, 281, 1752, 552, 570, 436, 434, 517, 16226, 712, 13, 51328], "temperature": 0.0, "avg_logprob": -0.0898494450551159, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.005553752649575472}, {"id": 293, "seek": 175304, "start": 1772.32, "end": 1775.76, "text": " And that first three paragraphs is all about that. It's just about reachability.", "tokens": [51328, 400, 300, 700, 1045, 48910, 307, 439, 466, 300, 13, 467, 311, 445, 466, 2524, 2310, 13, 51500], "temperature": 0.0, "avg_logprob": -0.0898494450551159, "compression_ratio": 1.8433734939759037, "no_speech_prob": 0.005553752649575472}, {"id": 294, "seek": 177576, "start": 1776.56, "end": 1785.12, "text": " So, yeah, kind of, I think I upset that. So we were like, okay,", "tokens": [50404, 407, 11, 1338, 11, 733, 295, 11, 286, 519, 286, 8340, 300, 13, 407, 321, 645, 411, 11, 1392, 11, 50832], "temperature": 0.0, "avg_logprob": -0.23274960237390854, "compression_ratio": 1.7128205128205127, "no_speech_prob": 0.007344457786530256}, {"id": 295, "seek": 177576, "start": 1786.4, "end": 1792.24, "text": " turns out I worked on reachability. So we know how to do this, right? So let's,", "tokens": [50896, 4523, 484, 286, 2732, 322, 2524, 2310, 13, 407, 321, 458, 577, 281, 360, 341, 11, 558, 30, 407, 718, 311, 11, 51188], "temperature": 0.0, "avg_logprob": -0.23274960237390854, "compression_ratio": 1.7128205128205127, "no_speech_prob": 0.007344457786530256}, {"id": 296, "seek": 177576, "start": 1792.24, "end": 1795.92, "text": " let's, so what, what, what, why was I working on reachability? So now we're going to take a", "tokens": [51188, 718, 311, 11, 370, 437, 11, 437, 11, 437, 11, 983, 390, 286, 1364, 322, 2524, 2310, 30, 407, 586, 321, 434, 516, 281, 747, 257, 51372], "temperature": 0.0, "avg_logprob": -0.23274960237390854, "compression_ratio": 1.7128205128205127, "no_speech_prob": 0.007344457786530256}, {"id": 297, "seek": 177576, "start": 1795.92, "end": 1799.92, "text": " little, a little psych, we're going to move over to Seattle for a few moments. So it turned out in", "tokens": [51372, 707, 11, 257, 707, 4681, 11, 321, 434, 516, 281, 1286, 670, 281, 15721, 337, 257, 1326, 6065, 13, 407, 309, 3574, 484, 294, 51572], "temperature": 0.0, "avg_logprob": -0.23274960237390854, "compression_ratio": 1.7128205128205127, "no_speech_prob": 0.007344457786530256}, {"id": 298, "seek": 179992, "start": 1799.92, "end": 1810.3200000000002, "text": " 2003 that 85% of crashes in Windows XP were due to device drivers. And that was a big business", "tokens": [50364, 16416, 300, 14695, 4, 295, 28642, 294, 8591, 33984, 645, 3462, 281, 4302, 11590, 13, 400, 300, 390, 257, 955, 1606, 50884], "temperature": 0.0, "avg_logprob": -0.12897882356748477, "compression_ratio": 1.6058091286307055, "no_speech_prob": 0.004263909067958593}, {"id": 299, "seek": 179992, "start": 1810.3200000000002, "end": 1816.48, "text": " problem for, for Microsoft at the time. So what we built over in Seattle area was a real world", "tokens": [50884, 1154, 337, 11, 337, 8116, 412, 264, 565, 13, 407, 437, 321, 3094, 670, 294, 15721, 1859, 390, 257, 957, 1002, 51192], "temperature": 0.0, "avg_logprob": -0.12897882356748477, "compression_ratio": 1.6058091286307055, "no_speech_prob": 0.004263909067958593}, {"id": 300, "seek": 179992, "start": 1816.48, "end": 1820.16, "text": " automated reasoning tool called static driver verifier in the research community. It was called", "tokens": [51192, 18473, 21577, 2290, 1219, 13437, 6787, 1306, 9902, 294, 264, 2132, 1768, 13, 467, 390, 1219, 51376], "temperature": 0.0, "avg_logprob": -0.12897882356748477, "compression_ratio": 1.6058091286307055, "no_speech_prob": 0.004263909067958593}, {"id": 301, "seek": 179992, "start": 1820.16, "end": 1826.0800000000002, "text": " SLAM, but for device driver writers, they knew it as static driver verifier. And what it was designed", "tokens": [51376, 22999, 2865, 11, 457, 337, 4302, 6787, 13491, 11, 436, 2586, 309, 382, 13437, 6787, 1306, 9902, 13, 400, 437, 309, 390, 4761, 51672], "temperature": 0.0, "avg_logprob": -0.12897882356748477, "compression_ratio": 1.6058091286307055, "no_speech_prob": 0.004263909067958593}, {"id": 302, "seek": 182608, "start": 1826.1599999999999, "end": 1832.72, "text": " to do was to show error states reachable or unreachable. And so if you, this is the blue", "tokens": [50368, 281, 360, 390, 281, 855, 6713, 4368, 2524, 712, 420, 517, 16226, 712, 13, 400, 370, 498, 291, 11, 341, 307, 264, 3344, 50696], "temperature": 0.0, "avg_logprob": -0.1023230254650116, "compression_ratio": 1.949579831932773, "no_speech_prob": 0.02516426332294941}, {"id": 303, "seek": 182608, "start": 1832.72, "end": 1835.6, "text": " screen of death, you actually, you actually refer to that. This is the new blue screen of death,", "tokens": [50696, 2568, 295, 2966, 11, 291, 767, 11, 291, 767, 2864, 281, 300, 13, 639, 307, 264, 777, 3344, 2568, 295, 2966, 11, 50840], "temperature": 0.0, "avg_logprob": -0.1023230254650116, "compression_ratio": 1.949579831932773, "no_speech_prob": 0.02516426332294941}, {"id": 304, "seek": 182608, "start": 1835.6, "end": 1839.28, "text": " by the way, which you don't see very often these days. But this is what you get when your machine", "tokens": [50840, 538, 264, 636, 11, 597, 291, 500, 380, 536, 588, 2049, 613, 1708, 13, 583, 341, 307, 437, 291, 483, 562, 428, 3479, 51024], "temperature": 0.0, "avg_logprob": -0.1023230254650116, "compression_ratio": 1.949579831932773, "no_speech_prob": 0.02516426332294941}, {"id": 305, "seek": 182608, "start": 1839.28, "end": 1846.32, "text": " is like, sorry, lost all your data too bad, it sucks to be you. And this is what you would", "tokens": [51024, 307, 411, 11, 2597, 11, 2731, 439, 428, 1412, 886, 1578, 11, 309, 15846, 281, 312, 291, 13, 400, 341, 307, 437, 291, 576, 51376], "temperature": 0.0, "avg_logprob": -0.1023230254650116, "compression_ratio": 1.949579831932773, "no_speech_prob": 0.02516426332294941}, {"id": 306, "seek": 182608, "start": 1846.32, "end": 1852.3999999999999, "text": " see on a Mac. And this is what you would see on a really old Mac. And so the question is,", "tokens": [51376, 536, 322, 257, 5707, 13, 400, 341, 307, 437, 291, 576, 536, 322, 257, 534, 1331, 5707, 13, 400, 370, 264, 1168, 307, 11, 51680], "temperature": 0.0, "avg_logprob": -0.1023230254650116, "compression_ratio": 1.949579831932773, "no_speech_prob": 0.02516426332294941}, {"id": 307, "seek": 185240, "start": 1852.48, "end": 1858.72, "text": " and I've sort of put this on purpose, is this line there or not? And remember these states,", "tokens": [50368, 293, 286, 600, 1333, 295, 829, 341, 322, 4334, 11, 307, 341, 1622, 456, 420, 406, 30, 400, 1604, 613, 4368, 11, 50680], "temperature": 0.0, "avg_logprob": -0.17007817720112048, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0012063536560162902}, {"id": 308, "seek": 185240, "start": 1858.72, "end": 1864.8000000000002, "text": " these state spaces are typically infinite. You can't just walk them explicitly. You have to like,", "tokens": [50680, 613, 1785, 7673, 366, 5850, 13785, 13, 509, 393, 380, 445, 1792, 552, 20803, 13, 509, 362, 281, 411, 11, 50984], "temperature": 0.0, "avg_logprob": -0.17007817720112048, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0012063536560162902}, {"id": 309, "seek": 185240, "start": 1866.16, "end": 1872.0, "text": " you have to abstract infinite sets and do all kinds of trickery. But yes, we're trying to", "tokens": [51052, 291, 362, 281, 12649, 13785, 6352, 293, 360, 439, 3685, 295, 4282, 2109, 13, 583, 2086, 11, 321, 434, 1382, 281, 51344], "temperature": 0.0, "avg_logprob": -0.17007817720112048, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0012063536560162902}, {"id": 310, "seek": 185240, "start": 1872.0, "end": 1875.76, "text": " figure out, are things unreachable or are they reachable? And so there was a whole bunch of", "tokens": [51344, 2573, 484, 11, 366, 721, 517, 16226, 712, 420, 366, 436, 2524, 712, 30, 400, 370, 456, 390, 257, 1379, 3840, 295, 51532], "temperature": 0.0, "avg_logprob": -0.17007817720112048, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0012063536560162902}, {"id": 311, "seek": 187576, "start": 1875.76, "end": 1884.16, "text": " work that we did over in Seattle area. And I was involved in that. And Andrew Herbert,", "tokens": [50364, 589, 300, 321, 630, 670, 294, 15721, 1859, 13, 400, 286, 390, 3288, 294, 300, 13, 400, 10110, 41942, 11, 50784], "temperature": 0.0, "avg_logprob": -0.12390450349788076, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.1008162796497345}, {"id": 312, "seek": 187576, "start": 1884.16, "end": 1890.0, "text": " who's in the room here, I was visiting Cambridge and he was like, why don't you leave Seattle and", "tokens": [50784, 567, 311, 294, 264, 1808, 510, 11, 286, 390, 11700, 24876, 293, 415, 390, 411, 11, 983, 500, 380, 291, 1856, 15721, 293, 51076], "temperature": 0.0, "avg_logprob": -0.12390450349788076, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.1008162796497345}, {"id": 313, "seek": 187576, "start": 1890.0, "end": 1894.8, "text": " come to Cambridge? The environment is great here and you'll have a good time. But I'm like, great,", "tokens": [51076, 808, 281, 24876, 30, 440, 2823, 307, 869, 510, 293, 291, 603, 362, 257, 665, 565, 13, 583, 286, 478, 411, 11, 869, 11, 51316], "temperature": 0.0, "avg_logprob": -0.12390450349788076, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.1008162796497345}, {"id": 314, "seek": 187576, "start": 1894.8, "end": 1900.64, "text": " let's do it. So we, with eight weeks difference between that conversation, five weeks difference,", "tokens": [51316, 718, 311, 360, 309, 13, 407, 321, 11, 365, 3180, 3259, 2649, 1296, 300, 3761, 11, 1732, 3259, 2649, 11, 51608], "temperature": 0.0, "avg_logprob": -0.12390450349788076, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.1008162796497345}, {"id": 315, "seek": 190064, "start": 1900.64, "end": 1907.6000000000001, "text": " my wife says, between that conversation and moving, I came, joined Microsoft Research,", "tokens": [50364, 452, 3836, 1619, 11, 1296, 300, 3761, 293, 2684, 11, 286, 1361, 11, 6869, 8116, 10303, 11, 50712], "temperature": 0.0, "avg_logprob": -0.11295033323353734, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.005219048820436001}, {"id": 316, "seek": 190064, "start": 1907.6000000000001, "end": 1912.0800000000002, "text": " started chatting to these guys and said, let's work on the termination proving. So the point", "tokens": [50712, 1409, 24654, 281, 613, 1074, 293, 848, 11, 718, 311, 589, 322, 264, 1433, 2486, 27221, 13, 407, 264, 935, 50936], "temperature": 0.0, "avg_logprob": -0.11295033323353734, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.005219048820436001}, {"id": 317, "seek": 190064, "start": 1912.0800000000002, "end": 1917.1200000000001, "text": " I'm making is that this problem was actually already pretty much solved. So it's just a question", "tokens": [50936, 286, 478, 1455, 307, 300, 341, 1154, 390, 767, 1217, 1238, 709, 13041, 13, 407, 309, 311, 445, 257, 1168, 51188], "temperature": 0.0, "avg_logprob": -0.11295033323353734, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.005219048820436001}, {"id": 318, "seek": 190064, "start": 1917.1200000000001, "end": 1923.1200000000001, "text": " of reachability. So the red part is actually about, okay, now we've found a reachable state. How do", "tokens": [51188, 295, 2524, 2310, 13, 407, 264, 2182, 644, 307, 767, 466, 11, 1392, 11, 586, 321, 600, 1352, 257, 2524, 712, 1785, 13, 1012, 360, 51488], "temperature": 0.0, "avg_logprob": -0.11295033323353734, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.005219048820436001}, {"id": 319, "seek": 190064, "start": 1923.1200000000001, "end": 1927.2800000000002, "text": " we know that that reachable state doesn't lead to an non-terminating execution? And all the green", "tokens": [51488, 321, 458, 300, 300, 2524, 712, 1785, 1177, 380, 1477, 281, 364, 2107, 12, 29725, 990, 15058, 30, 400, 439, 264, 3092, 51696], "temperature": 0.0, "avg_logprob": -0.11295033323353734, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.005219048820436001}, {"id": 320, "seek": 192728, "start": 1927.28, "end": 1936.72, "text": " bit is just about how do you show that states are unreachable? Okay, so let's look at this one.", "tokens": [50364, 857, 307, 445, 466, 577, 360, 291, 855, 300, 4368, 366, 517, 16226, 712, 30, 1033, 11, 370, 718, 311, 574, 412, 341, 472, 13, 50836], "temperature": 0.0, "avg_logprob": -0.14161584753739206, "compression_ratio": 1.5520361990950227, "no_speech_prob": 0.004904245026409626}, {"id": 321, "seek": 192728, "start": 1936.72, "end": 1940.0, "text": " This one's fascinating. We're going to spend a little more time with this one.", "tokens": [50836, 639, 472, 311, 10343, 13, 492, 434, 516, 281, 3496, 257, 707, 544, 565, 365, 341, 472, 13, 51000], "temperature": 0.0, "avg_logprob": -0.14161584753739206, "compression_ratio": 1.5520361990950227, "no_speech_prob": 0.004904245026409626}, {"id": 322, "seek": 192728, "start": 1940.6399999999999, "end": 1946.32, "text": " Finally, the checker has to verify that the process comes to an end. That just, I'm translating,", "tokens": [51032, 6288, 11, 264, 1520, 260, 575, 281, 16888, 300, 264, 1399, 1487, 281, 364, 917, 13, 663, 445, 11, 286, 478, 35030, 11, 51316], "temperature": 0.0, "avg_logprob": -0.14161584753739206, "compression_ratio": 1.5520361990950227, "no_speech_prob": 0.004904245026409626}, {"id": 323, "seek": 192728, "start": 1946.32, "end": 1951.28, "text": " that just means, okay, now we're going to prove termination. Again, he,", "tokens": [51316, 300, 445, 1355, 11, 1392, 11, 586, 321, 434, 516, 281, 7081, 1433, 2486, 13, 3764, 11, 415, 11, 51564], "temperature": 0.0, "avg_logprob": -0.14161584753739206, "compression_ratio": 1.5520361990950227, "no_speech_prob": 0.004904245026409626}, {"id": 324, "seek": 195128, "start": 1952.08, "end": 1958.72, "text": " you know, he or she should be assisted by the programmer giving a further definite assertion", "tokens": [50404, 291, 458, 11, 415, 420, 750, 820, 312, 30291, 538, 264, 32116, 2902, 257, 3052, 25131, 19810, 313, 50736], "temperature": 0.0, "avg_logprob": -0.16988715478929423, "compression_ratio": 1.6996336996336996, "no_speech_prob": 0.0018672562437132}, {"id": 325, "seek": 195128, "start": 1958.72, "end": 1964.3999999999999, "text": " to be verified. So the point that he, what this he really in our, in our lingo today would be the", "tokens": [50736, 281, 312, 31197, 13, 407, 264, 935, 300, 415, 11, 437, 341, 415, 534, 294, 527, 11, 294, 527, 287, 18459, 965, 576, 312, 264, 51020], "temperature": 0.0, "avg_logprob": -0.16988715478929423, "compression_ratio": 1.6996336996336996, "no_speech_prob": 0.0018672562437132}, {"id": 326, "seek": 195128, "start": 1964.3999999999999, "end": 1971.12, "text": " prover, the tool. And so this may take the form of a quantity, which is asserted to decrease", "tokens": [51020, 447, 331, 11, 264, 2290, 13, 400, 370, 341, 815, 747, 264, 1254, 295, 257, 11275, 11, 597, 307, 19810, 292, 281, 11514, 51356], "temperature": 0.0, "avg_logprob": -0.16988715478929423, "compression_ratio": 1.6996336996336996, "no_speech_prob": 0.0018672562437132}, {"id": 327, "seek": 195128, "start": 1971.12, "end": 1975.36, "text": " continuously and vanish. I'm going to translate all this, by the way, don't panic, and vanish", "tokens": [51356, 15684, 293, 43584, 13, 286, 478, 516, 281, 13799, 439, 341, 11, 538, 264, 636, 11, 500, 380, 14783, 11, 293, 43584, 51568], "temperature": 0.0, "avg_logprob": -0.16988715478929423, "compression_ratio": 1.6996336996336996, "no_speech_prob": 0.0018672562437132}, {"id": 328, "seek": 195128, "start": 1975.36, "end": 1979.92, "text": " when the machine stops to the, to the pure mathematician is natural to give an ordinal", "tokens": [51568, 562, 264, 3479, 10094, 281, 264, 11, 281, 264, 6075, 48281, 307, 3303, 281, 976, 364, 4792, 2071, 51796], "temperature": 0.0, "avg_logprob": -0.16988715478929423, "compression_ratio": 1.6996336996336996, "no_speech_prob": 0.0018672562437132}, {"id": 329, "seek": 197992, "start": 1979.92, "end": 1985.6000000000001, "text": " number. Don't, doesn't matter what that is. If you don't know, it doesn't matter. I love this line.", "tokens": [50364, 1230, 13, 1468, 380, 11, 1177, 380, 1871, 437, 300, 307, 13, 759, 291, 500, 380, 458, 11, 309, 1177, 380, 1871, 13, 286, 959, 341, 1622, 13, 50648], "temperature": 0.0, "avg_logprob": -0.17134016015556422, "compression_ratio": 1.5204081632653061, "no_speech_prob": 0.001410208409652114}, {"id": 330, "seek": 197992, "start": 1985.6000000000001, "end": 1996.16, "text": " A less-hybrid form of the same thing would be two to the 80 times n minus r plus two to the 40 times", "tokens": [50648, 316, 1570, 12, 3495, 11349, 1254, 295, 264, 912, 551, 576, 312, 732, 281, 264, 4688, 1413, 297, 3175, 367, 1804, 732, 281, 264, 3356, 1413, 51176], "temperature": 0.0, "avg_logprob": -0.17134016015556422, "compression_ratio": 1.5204081632653061, "no_speech_prob": 0.001410208409652114}, {"id": 331, "seek": 197992, "start": 1996.16, "end": 2006.96, "text": " r minus, what is that, s plus k. Pretty cool, huh? Let me translate that. Can we find a function?", "tokens": [51176, 367, 3175, 11, 437, 307, 300, 11, 262, 1804, 350, 13, 10693, 1627, 11, 7020, 30, 961, 385, 13799, 300, 13, 1664, 321, 915, 257, 2445, 30, 51716], "temperature": 0.0, "avg_logprob": -0.17134016015556422, "compression_ratio": 1.5204081632653061, "no_speech_prob": 0.001410208409652114}, {"id": 332, "seek": 200696, "start": 2006.96, "end": 2011.6000000000001, "text": " I'll call it a, based on the, on the state, based on the variables of the, of the state,", "tokens": [50364, 286, 603, 818, 309, 257, 11, 2361, 322, 264, 11, 322, 264, 1785, 11, 2361, 322, 264, 9102, 295, 264, 11, 295, 264, 1785, 11, 50596], "temperature": 0.0, "avg_logprob": -0.12203565476432679, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.02296857163310051}, {"id": 333, "seek": 200696, "start": 2012.56, "end": 2019.04, "text": " that will choose only positive, but also decreasing numbers. Okay. So imagine, let's look at my phone.", "tokens": [50644, 300, 486, 2826, 787, 3353, 11, 457, 611, 23223, 3547, 13, 1033, 13, 407, 3811, 11, 718, 311, 574, 412, 452, 2593, 13, 50968], "temperature": 0.0, "avg_logprob": -0.12203565476432679, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.02296857163310051}, {"id": 334, "seek": 200696, "start": 2019.04, "end": 2024.24, "text": " I took a screenshot when I was writing this talk. I had seven Slack messages at the time, unread.", "tokens": [50968, 286, 1890, 257, 27712, 562, 286, 390, 3579, 341, 751, 13, 286, 632, 3407, 37211, 7897, 412, 264, 565, 11, 517, 2538, 13, 51228], "temperature": 0.0, "avg_logprob": -0.12203565476432679, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.02296857163310051}, {"id": 335, "seek": 200696, "start": 2024.24, "end": 2029.44, "text": " So maybe the function is the number of Slack messages. One possible, it's not going to work", "tokens": [51228, 407, 1310, 264, 2445, 307, 264, 1230, 295, 37211, 7897, 13, 1485, 1944, 11, 309, 311, 406, 516, 281, 589, 51488], "temperature": 0.0, "avg_logprob": -0.12203565476432679, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.02296857163310051}, {"id": 336, "seek": 200696, "start": 2029.44, "end": 2035.68, "text": " very well, but another one, maybe be the amount of free space left on my phone. That's a little", "tokens": [51488, 588, 731, 11, 457, 1071, 472, 11, 1310, 312, 264, 2372, 295, 1737, 1901, 1411, 322, 452, 2593, 13, 663, 311, 257, 707, 51800], "temperature": 0.0, "avg_logprob": -0.12203565476432679, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.02296857163310051}, {"id": 337, "seek": 203568, "start": 2035.68, "end": 2042.4, "text": " more reasonable. And then imagine we took a, a transition from this state to this state. I don't", "tokens": [50364, 544, 10585, 13, 400, 550, 3811, 321, 1890, 257, 11, 257, 6034, 490, 341, 1785, 281, 341, 1785, 13, 286, 500, 380, 50700], "temperature": 0.0, "avg_logprob": -0.14352687199910483, "compression_ratio": 1.7262773722627738, "no_speech_prob": 0.0007552910828962922}, {"id": 338, "seek": 203568, "start": 2042.4, "end": 2048.0, "text": " know, like who knows what, internally, you can't see it, but it made some transition. Maybe the", "tokens": [50700, 458, 11, 411, 567, 3255, 437, 11, 19501, 11, 291, 393, 380, 536, 309, 11, 457, 309, 1027, 512, 6034, 13, 2704, 264, 50980], "temperature": 0.0, "avg_logprob": -0.14352687199910483, "compression_ratio": 1.7262773722627738, "no_speech_prob": 0.0007552910828962922}, {"id": 339, "seek": 203568, "start": 2048.0, "end": 2054.96, "text": " amount of space, a free space has decreased, probably quite likely, right? Because of it,", "tokens": [50980, 2372, 295, 1901, 11, 257, 1737, 1901, 575, 24436, 11, 1391, 1596, 3700, 11, 558, 30, 1436, 295, 309, 11, 51328], "temperature": 0.0, "avg_logprob": -0.14352687199910483, "compression_ratio": 1.7262773722627738, "no_speech_prob": 0.0007552910828962922}, {"id": 340, "seek": 203568, "start": 2054.96, "end": 2058.8, "text": " because the phone's actually doing little logs and all kinds, like it's always sort of using a", "tokens": [51328, 570, 264, 2593, 311, 767, 884, 707, 20820, 293, 439, 3685, 11, 411, 309, 311, 1009, 1333, 295, 1228, 257, 51520], "temperature": 0.0, "avg_logprob": -0.14352687199910483, "compression_ratio": 1.7262773722627738, "no_speech_prob": 0.0007552910828962922}, {"id": 341, "seek": 203568, "start": 2058.8, "end": 2064.56, "text": " little bit of more and more and more disk space, not disk, but you see what I mean. Whereas the", "tokens": [51520, 707, 857, 295, 544, 293, 544, 293, 544, 12355, 1901, 11, 406, 12355, 11, 457, 291, 536, 437, 286, 914, 13, 13813, 264, 51808], "temperature": 0.0, "avg_logprob": -0.14352687199910483, "compression_ratio": 1.7262773722627738, "no_speech_prob": 0.0007552910828962922}, {"id": 342, "seek": 206456, "start": 2064.56, "end": 2069.44, "text": " number of Slack messages, well, we can see it stayed the same. So I had seven before, seven", "tokens": [50364, 1230, 295, 37211, 7897, 11, 731, 11, 321, 393, 536, 309, 9181, 264, 912, 13, 407, 286, 632, 3407, 949, 11, 3407, 50608], "temperature": 0.0, "avg_logprob": -0.15814935524045057, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.00021652629948221147}, {"id": 343, "seek": 206456, "start": 2069.44, "end": 2074.24, "text": " before, seven now. So that's not a good one. So this number didn't go down. So remember that the", "tokens": [50608, 949, 11, 3407, 586, 13, 407, 300, 311, 406, 257, 665, 472, 13, 407, 341, 1230, 994, 380, 352, 760, 13, 407, 1604, 300, 264, 50848], "temperature": 0.0, "avg_logprob": -0.15814935524045057, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.00021652629948221147}, {"id": 344, "seek": 206456, "start": 2074.24, "end": 2079.84, "text": " point, the point we're trying to make is we want to find a function, a function, some function F,", "tokens": [50848, 935, 11, 264, 935, 321, 434, 1382, 281, 652, 307, 321, 528, 281, 915, 257, 2445, 11, 257, 2445, 11, 512, 2445, 479, 11, 51128], "temperature": 0.0, "avg_logprob": -0.15814935524045057, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.00021652629948221147}, {"id": 345, "seek": 206456, "start": 2079.84, "end": 2084.48, "text": " that on every, that I'll always say this in a moment, that it finds decreasing, but positive", "tokens": [51128, 300, 322, 633, 11, 300, 286, 603, 1009, 584, 341, 294, 257, 1623, 11, 300, 309, 10704, 23223, 11, 457, 3353, 51360], "temperature": 0.0, "avg_logprob": -0.15814935524045057, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.00021652629948221147}, {"id": 346, "seek": 206456, "start": 2084.48, "end": 2090.16, "text": " numbers. And so what do we, what would we do with that? Oh, I think maybe, okay. And yeah. So", "tokens": [51360, 3547, 13, 400, 370, 437, 360, 321, 11, 437, 576, 321, 360, 365, 300, 30, 876, 11, 286, 519, 1310, 11, 1392, 13, 400, 1338, 13, 407, 51644], "temperature": 0.0, "avg_logprob": -0.15814935524045057, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.00021652629948221147}, {"id": 347, "seek": 209016, "start": 2090.24, "end": 2095.04, "text": " here, for example, let's write a little function for this guy.", "tokens": [50368, 510, 11, 337, 1365, 11, 718, 311, 2464, 257, 707, 2445, 337, 341, 2146, 13, 50608], "temperature": 0.0, "avg_logprob": -0.15804177064162034, "compression_ratio": 1.572289156626506, "no_speech_prob": 7.141665992094204e-05}, {"id": 348, "seek": 209016, "start": 2099.52, "end": 2106.64, "text": " Maybe what we do is we say, oh, well, let's do in minus the location. So we were at, in this value", "tokens": [50832, 2704, 437, 321, 360, 307, 321, 584, 11, 1954, 11, 731, 11, 718, 311, 360, 294, 3175, 264, 4914, 13, 407, 321, 645, 412, 11, 294, 341, 2158, 51188], "temperature": 0.0, "avg_logprob": -0.15804177064162034, "compression_ratio": 1.572289156626506, "no_speech_prob": 7.141665992094204e-05}, {"id": 349, "seek": 209016, "start": 2106.64, "end": 2113.2799999999997, "text": " of 20, location is one. So maybe it's in minus X is 19. So it's just this number minus that number.", "tokens": [51188, 295, 945, 11, 4914, 307, 472, 13, 407, 1310, 309, 311, 294, 3175, 1783, 307, 1294, 13, 407, 309, 311, 445, 341, 1230, 3175, 300, 1230, 13, 51520], "temperature": 0.0, "avg_logprob": -0.15804177064162034, "compression_ratio": 1.572289156626506, "no_speech_prob": 7.141665992094204e-05}, {"id": 350, "seek": 211328, "start": 2113.28, "end": 2121.0400000000004, "text": " And then the next one is 18 because I've now subtracted two. Okay. So that's a positive", "tokens": [50364, 400, 550, 264, 958, 472, 307, 2443, 570, 286, 600, 586, 16390, 292, 732, 13, 1033, 13, 407, 300, 311, 257, 3353, 50752], "temperature": 0.0, "avg_logprob": -0.0941158395952883, "compression_ratio": 1.7316176470588236, "no_speech_prob": 0.0016483659856021404}, {"id": 351, "seek": 211328, "start": 2121.0400000000004, "end": 2124.7200000000003, "text": " number and it's gone down. So that's possible. I mean, it's not going to work because no one", "tokens": [50752, 1230, 293, 309, 311, 2780, 760, 13, 407, 300, 311, 1944, 13, 286, 914, 11, 309, 311, 406, 516, 281, 589, 570, 572, 472, 50936], "temperature": 0.0, "avg_logprob": -0.0941158395952883, "compression_ratio": 1.7316176470588236, "no_speech_prob": 0.0016483659856021404}, {"id": 352, "seek": 211328, "start": 2124.7200000000003, "end": 2130.48, "text": " knows that the program terminates, but that would be a plausible starting point as you begin your", "tokens": [50936, 3255, 300, 264, 1461, 10761, 1024, 11, 457, 300, 576, 312, 257, 39925, 2891, 935, 382, 291, 1841, 428, 51224], "temperature": 0.0, "avg_logprob": -0.0941158395952883, "compression_ratio": 1.7316176470588236, "no_speech_prob": 0.0016483659856021404}, {"id": 353, "seek": 211328, "start": 2131.44, "end": 2135.92, "text": " journey into this world. So the thing that we need to hold is whenever we take a transition", "tokens": [51272, 4671, 666, 341, 1002, 13, 407, 264, 551, 300, 321, 643, 281, 1797, 307, 5699, 321, 747, 257, 6034, 51496], "temperature": 0.0, "avg_logprob": -0.0941158395952883, "compression_ratio": 1.7316176470588236, "no_speech_prob": 0.0016483659856021404}, {"id": 354, "seek": 211328, "start": 2135.92, "end": 2140.4, "text": " from one state to another state or configuration to another configuration, and we have that function", "tokens": [51496, 490, 472, 1785, 281, 1071, 1785, 420, 11694, 281, 1071, 11694, 11, 293, 321, 362, 300, 2445, 51720], "temperature": 0.0, "avg_logprob": -0.0941158395952883, "compression_ratio": 1.7316176470588236, "no_speech_prob": 0.0016483659856021404}, {"id": 355, "seek": 214040, "start": 2140.4, "end": 2148.0, "text": " F and we map, the greater than needs to hold. So and if you, if you, if you say the pre-state is S,", "tokens": [50364, 479, 293, 321, 4471, 11, 264, 5044, 813, 2203, 281, 1797, 13, 407, 293, 498, 291, 11, 498, 291, 11, 498, 291, 584, 264, 659, 12, 15406, 307, 318, 11, 50744], "temperature": 0.0, "avg_logprob": -0.1443439766212746, "compression_ratio": 1.8995983935742973, "no_speech_prob": 0.0021824801806360483}, {"id": 356, "seek": 214040, "start": 2148.0, "end": 2153.12, "text": " and then we apply F to S, and then we say the post-state is T, and we apply F to T, you need", "tokens": [50744, 293, 550, 321, 3079, 479, 281, 318, 11, 293, 550, 321, 584, 264, 2183, 12, 15406, 307, 314, 11, 293, 321, 3079, 479, 281, 314, 11, 291, 643, 51000], "temperature": 0.0, "avg_logprob": -0.1443439766212746, "compression_ratio": 1.8995983935742973, "no_speech_prob": 0.0021824801806360483}, {"id": 357, "seek": 214040, "start": 2153.12, "end": 2156.96, "text": " greater than to hold. And that's a condition that's required. So the idea of how to prove", "tokens": [51000, 5044, 813, 281, 1797, 13, 400, 300, 311, 257, 4188, 300, 311, 4739, 13, 407, 264, 1558, 295, 577, 281, 7081, 51192], "temperature": 0.0, "avg_logprob": -0.1443439766212746, "compression_ratio": 1.8995983935742973, "no_speech_prob": 0.0021824801806360483}, {"id": 358, "seek": 214040, "start": 2156.96, "end": 2164.4, "text": " termination, and this is Turing's idea is find a function, think about it for a bit. Then if this", "tokens": [51192, 1433, 2486, 11, 293, 341, 307, 314, 1345, 311, 1558, 307, 915, 257, 2445, 11, 519, 466, 309, 337, 257, 857, 13, 1396, 498, 341, 51564], "temperature": 0.0, "avg_logprob": -0.1443439766212746, "compression_ratio": 1.8995983935742973, "no_speech_prob": 0.0021824801806360483}, {"id": 359, "seek": 214040, "start": 2164.4, "end": 2169.2000000000003, "text": " condition holds for all possible transitions of your system, this holds, you're done. You've", "tokens": [51564, 4188, 9190, 337, 439, 1944, 23767, 295, 428, 1185, 11, 341, 9190, 11, 291, 434, 1096, 13, 509, 600, 51804], "temperature": 0.0, "avg_logprob": -0.1443439766212746, "compression_ratio": 1.8995983935742973, "no_speech_prob": 0.0021824801806360483}, {"id": 360, "seek": 216920, "start": 2169.2, "end": 2177.52, "text": " now proved termination. Okay. Right. So if you turn your head, you can see it. 19 is greater than 18.", "tokens": [50364, 586, 14617, 1433, 2486, 13, 1033, 13, 1779, 13, 407, 498, 291, 1261, 428, 1378, 11, 291, 393, 536, 309, 13, 1294, 307, 5044, 813, 2443, 13, 50780], "temperature": 0.0, "avg_logprob": -0.12622172231892592, "compression_ratio": 1.667844522968198, "no_speech_prob": 0.00028683393611572683}, {"id": 361, "seek": 216920, "start": 2178.3999999999996, "end": 2183.4399999999996, "text": " So now, why does this hold? So imagine a non-terminating execution. Again, this is infinite,", "tokens": [50824, 407, 586, 11, 983, 775, 341, 1797, 30, 407, 3811, 257, 2107, 12, 29725, 990, 15058, 13, 3764, 11, 341, 307, 13785, 11, 51076], "temperature": 0.0, "avg_logprob": -0.12622172231892592, "compression_ratio": 1.667844522968198, "no_speech_prob": 0.00028683393611572683}, {"id": 362, "seek": 216920, "start": 2183.4399999999996, "end": 2187.04, "text": " so I can't, I can't show it to you on the screen, but here's the first few states.", "tokens": [51076, 370, 286, 393, 380, 11, 286, 393, 380, 855, 309, 281, 291, 322, 264, 2568, 11, 457, 510, 311, 264, 700, 1326, 4368, 13, 51256], "temperature": 0.0, "avg_logprob": -0.12622172231892592, "compression_ratio": 1.667844522968198, "no_speech_prob": 0.00028683393611572683}, {"id": 363, "seek": 216920, "start": 2189.04, "end": 2193.12, "text": " Now just begin applying this function. Oh, and by the way, we have the function. I already said that.", "tokens": [51356, 823, 445, 1841, 9275, 341, 2445, 13, 876, 11, 293, 538, 264, 636, 11, 321, 362, 264, 2445, 13, 286, 1217, 848, 300, 13, 51560], "temperature": 0.0, "avg_logprob": -0.12622172231892592, "compression_ratio": 1.667844522968198, "no_speech_prob": 0.00028683393611572683}, {"id": 364, "seek": 216920, "start": 2193.12, "end": 2197.4399999999996, "text": " And this condition holds. Now let's just begin applying it. And I'm making these numbers up,", "tokens": [51560, 400, 341, 4188, 9190, 13, 823, 718, 311, 445, 1841, 9275, 309, 13, 400, 286, 478, 1455, 613, 3547, 493, 11, 51776], "temperature": 0.0, "avg_logprob": -0.12622172231892592, "compression_ratio": 1.667844522968198, "no_speech_prob": 0.00028683393611572683}, {"id": 365, "seek": 219744, "start": 2197.44, "end": 2202.08, "text": " but imagine the first one's 30. We've got to choose 29 after that because it has to go down,", "tokens": [50364, 457, 3811, 264, 700, 472, 311, 2217, 13, 492, 600, 658, 281, 2826, 9413, 934, 300, 570, 309, 575, 281, 352, 760, 11, 50596], "temperature": 0.0, "avg_logprob": -0.12305613720055783, "compression_ratio": 1.7876447876447876, "no_speech_prob": 0.0003799628757406026}, {"id": 366, "seek": 219744, "start": 2202.08, "end": 2207.44, "text": " 27, 25, et cetera, et cetera, et cetera. We're going to run out of room. It has to be positive also.", "tokens": [50596, 7634, 11, 3552, 11, 1030, 11458, 11, 1030, 11458, 11, 1030, 11458, 13, 492, 434, 516, 281, 1190, 484, 295, 1808, 13, 467, 575, 281, 312, 3353, 611, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12305613720055783, "compression_ratio": 1.7876447876447876, "no_speech_prob": 0.0003799628757406026}, {"id": 367, "seek": 219744, "start": 2207.44, "end": 2212.7200000000003, "text": " So now we're out of space. So I said, imagine we have an infinite execution, but we have", "tokens": [50864, 407, 586, 321, 434, 484, 295, 1901, 13, 407, 286, 848, 11, 3811, 321, 362, 364, 13785, 15058, 11, 457, 321, 362, 51128], "temperature": 0.0, "avg_logprob": -0.12305613720055783, "compression_ratio": 1.7876447876447876, "no_speech_prob": 0.0003799628757406026}, {"id": 368, "seek": 219744, "start": 2213.92, "end": 2219.04, "text": " a function F that's positive and decreasing. It turns out you can't have both, right?", "tokens": [51188, 257, 2445, 479, 300, 311, 3353, 293, 23223, 13, 467, 4523, 484, 291, 393, 380, 362, 1293, 11, 558, 30, 51444], "temperature": 0.0, "avg_logprob": -0.12305613720055783, "compression_ratio": 1.7876447876447876, "no_speech_prob": 0.0003799628757406026}, {"id": 369, "seek": 219744, "start": 2219.68, "end": 2225.44, "text": " Right. And too far. You can't have both. You can't, you can't have a non-terminating execution", "tokens": [51476, 1779, 13, 400, 886, 1400, 13, 509, 393, 380, 362, 1293, 13, 509, 393, 380, 11, 291, 393, 380, 362, 257, 2107, 12, 29725, 990, 15058, 51764], "temperature": 0.0, "avg_logprob": -0.12305613720055783, "compression_ratio": 1.7876447876447876, "no_speech_prob": 0.0003799628757406026}, {"id": 370, "seek": 222544, "start": 2225.44, "end": 2230.96, "text": " and this function. You can only have one of the other, i.e., if you want to prove termination,", "tokens": [50364, 293, 341, 2445, 13, 509, 393, 787, 362, 472, 295, 264, 661, 11, 741, 13, 68, 7933, 498, 291, 528, 281, 7081, 1433, 2486, 11, 50640], "temperature": 0.0, "avg_logprob": -0.09577416651176685, "compression_ratio": 1.9087136929460582, "no_speech_prob": 0.00045826935092918575}, {"id": 371, "seek": 222544, "start": 2230.96, "end": 2235.12, "text": " find one of these, and you'll know that you don't have a non-terminating execution.", "tokens": [50640, 915, 472, 295, 613, 11, 293, 291, 603, 458, 300, 291, 500, 380, 362, 257, 2107, 12, 29725, 990, 15058, 13, 50848], "temperature": 0.0, "avg_logprob": -0.09577416651176685, "compression_ratio": 1.9087136929460582, "no_speech_prob": 0.00045826935092918575}, {"id": 372, "seek": 222544, "start": 2235.12, "end": 2240.2400000000002, "text": " Or if you have a non-terminating execution, you can't have one of these. It's a, it's a, it's a,", "tokens": [50848, 1610, 498, 291, 362, 257, 2107, 12, 29725, 990, 15058, 11, 291, 393, 380, 362, 472, 295, 613, 13, 467, 311, 257, 11, 309, 311, 257, 11, 309, 311, 257, 11, 51104], "temperature": 0.0, "avg_logprob": -0.09577416651176685, "compression_ratio": 1.9087136929460582, "no_speech_prob": 0.00045826935092918575}, {"id": 373, "seek": 222544, "start": 2241.44, "end": 2245.52, "text": " there doesn't exist. If the program doesn't terminate, there cannot exist a function that", "tokens": [51164, 456, 1177, 380, 2514, 13, 759, 264, 1461, 1177, 380, 10761, 473, 11, 456, 2644, 2514, 257, 2445, 300, 51368], "temperature": 0.0, "avg_logprob": -0.09577416651176685, "compression_ratio": 1.9087136929460582, "no_speech_prob": 0.00045826935092918575}, {"id": 374, "seek": 222544, "start": 2245.52, "end": 2251.28, "text": " meets those conditions. And so the trick is to find the F, right? And so Turing found the posh", "tokens": [51368, 13961, 729, 4487, 13, 400, 370, 264, 4282, 307, 281, 915, 264, 479, 11, 558, 30, 400, 370, 314, 1345, 1352, 264, 1366, 71, 51656], "temperature": 0.0, "avg_logprob": -0.09577416651176685, "compression_ratio": 1.9087136929460582, "no_speech_prob": 0.00045826935092918575}, {"id": 375, "seek": 225128, "start": 2251.28, "end": 2260.0800000000004, "text": " one and then he found the less posh one. Okay, I've kind of said already that. So now, so now", "tokens": [50364, 472, 293, 550, 415, 1352, 264, 1570, 1366, 71, 472, 13, 1033, 11, 286, 600, 733, 295, 848, 1217, 300, 13, 407, 586, 11, 370, 586, 50804], "temperature": 0.0, "avg_logprob": -0.22814080654046473, "compression_ratio": 1.5191256830601092, "no_speech_prob": 0.0026725875213742256}, {"id": 376, "seek": 225128, "start": 2260.0800000000004, "end": 2265.84, "text": " the thing that we wanted to do was to automate this. And so, so consider any reachable state", "tokens": [50804, 264, 551, 300, 321, 1415, 281, 360, 390, 281, 31605, 341, 13, 400, 370, 11, 370, 1949, 604, 2524, 712, 1785, 51092], "temperature": 0.0, "avg_logprob": -0.22814080654046473, "compression_ratio": 1.5191256830601092, "no_speech_prob": 0.0026725875213742256}, {"id": 377, "seek": 225128, "start": 2266.96, "end": 2274.4, "text": " and, you know, maybe those states on my phone. And imagine we found an F, then it turns out", "tokens": [51148, 293, 11, 291, 458, 11, 1310, 729, 4368, 322, 452, 2593, 13, 400, 3811, 321, 1352, 364, 479, 11, 550, 309, 4523, 484, 51520], "temperature": 0.0, "avg_logprob": -0.22814080654046473, "compression_ratio": 1.5191256830601092, "no_speech_prob": 0.0026725875213742256}, {"id": 378, "seek": 227440, "start": 2274.4, "end": 2281.52, "text": " it's super hard to find a single F. Like, like, and this is kind of why these tools from before", "tokens": [50364, 309, 311, 1687, 1152, 281, 915, 257, 2167, 479, 13, 1743, 11, 411, 11, 293, 341, 307, 733, 295, 983, 613, 3873, 490, 949, 50720], "temperature": 0.0, "avg_logprob": -0.12387246670930283, "compression_ratio": 2.012244897959184, "no_speech_prob": 0.16017721593379974}, {"id": 379, "seek": 227440, "start": 2281.52, "end": 2285.52, "text": " weren't working, because they were trying to find single F. And why is it hard? Because you're going", "tokens": [50720, 4999, 380, 1364, 11, 570, 436, 645, 1382, 281, 915, 2167, 479, 13, 400, 983, 307, 309, 1152, 30, 1436, 291, 434, 516, 50920], "temperature": 0.0, "avg_logprob": -0.12387246670930283, "compression_ratio": 2.012244897959184, "no_speech_prob": 0.16017721593379974}, {"id": 380, "seek": 227440, "start": 2285.52, "end": 2290.08, "text": " to find an F that's going to pick out all these values. I'm naming these values. So A needs to be", "tokens": [50920, 281, 915, 364, 479, 300, 311, 516, 281, 1888, 484, 439, 613, 4190, 13, 286, 478, 25290, 613, 4190, 13, 407, 316, 2203, 281, 312, 51148], "temperature": 0.0, "avg_logprob": -0.12387246670930283, "compression_ratio": 2.012244897959184, "no_speech_prob": 0.16017721593379974}, {"id": 381, "seek": 227440, "start": 2290.08, "end": 2294.2400000000002, "text": " less, greater than B, A needs to be greater than C, C needs to be greater than D, D needs to be", "tokens": [51148, 1570, 11, 5044, 813, 363, 11, 316, 2203, 281, 312, 5044, 813, 383, 11, 383, 2203, 281, 312, 5044, 813, 413, 11, 413, 2203, 281, 312, 51356], "temperature": 0.0, "avg_logprob": -0.12387246670930283, "compression_ratio": 2.012244897959184, "no_speech_prob": 0.16017721593379974}, {"id": 382, "seek": 227440, "start": 2294.2400000000002, "end": 2300.2400000000002, "text": " greater than F and E, and F and E need, both need to be greater than G. So you're, you're like solving", "tokens": [51356, 5044, 813, 479, 293, 462, 11, 293, 479, 293, 462, 643, 11, 1293, 643, 281, 312, 5044, 813, 460, 13, 407, 291, 434, 11, 291, 434, 411, 12606, 51656], "temperature": 0.0, "avg_logprob": -0.12387246670930283, "compression_ratio": 2.012244897959184, "no_speech_prob": 0.16017721593379974}, {"id": 383, "seek": 230024, "start": 2300.24, "end": 2305.52, "text": " all these things all at once. And if you have a 10 million line program, it's just, it's going", "tokens": [50364, 439, 613, 721, 439, 412, 1564, 13, 400, 498, 291, 362, 257, 1266, 2459, 1622, 1461, 11, 309, 311, 445, 11, 309, 311, 516, 50628], "temperature": 0.0, "avg_logprob": -0.11017377217610677, "compression_ratio": 1.8594771241830066, "no_speech_prob": 0.028429949656128883}, {"id": 384, "seek": 230024, "start": 2305.52, "end": 2310.0, "text": " to be impossible. You're not, you're not going to be able to do it. And so, so what we figured out", "tokens": [50628, 281, 312, 6243, 13, 509, 434, 406, 11, 291, 434, 406, 516, 281, 312, 1075, 281, 360, 309, 13, 400, 370, 11, 370, 437, 321, 8932, 484, 50852], "temperature": 0.0, "avg_logprob": -0.11017377217610677, "compression_ratio": 1.8594771241830066, "no_speech_prob": 0.028429949656128883}, {"id": 385, "seek": 230024, "start": 2310.0, "end": 2316.4799999999996, "text": " was that you could use these tools for finding proofs of toy programs. And you can find multiple", "tokens": [50852, 390, 300, 291, 727, 764, 613, 3873, 337, 5006, 8177, 82, 295, 12058, 4268, 13, 400, 291, 393, 915, 3866, 51176], "temperature": 0.0, "avg_logprob": -0.11017377217610677, "compression_ratio": 1.8594771241830066, "no_speech_prob": 0.028429949656128883}, {"id": 386, "seek": 230024, "start": 2316.4799999999996, "end": 2319.9199999999996, "text": " ranking functions. It's going to turn out there's one thing we're going to need to do and Ramsey's", "tokens": [51176, 17833, 6828, 13, 467, 311, 516, 281, 1261, 484, 456, 311, 472, 551, 321, 434, 516, 281, 643, 281, 360, 293, 9078, 7399, 311, 51348], "temperature": 0.0, "avg_logprob": -0.11017377217610677, "compression_ratio": 1.8594771241830066, "no_speech_prob": 0.028429949656128883}, {"id": 387, "seek": 230024, "start": 2319.9199999999996, "end": 2323.52, "text": " going to solve it for us. That's going to be the punchline Ramsey's going to solve of course.", "tokens": [51348, 516, 281, 5039, 309, 337, 505, 13, 663, 311, 516, 281, 312, 264, 8135, 1889, 9078, 7399, 311, 516, 281, 5039, 295, 1164, 13, 51528], "temperature": 0.0, "avg_logprob": -0.11017377217610677, "compression_ratio": 1.8594771241830066, "no_speech_prob": 0.028429949656128883}, {"id": 388, "seek": 230024, "start": 2323.52, "end": 2329.04, "text": " So imagine we could find one termination argument, G for this transition, and another", "tokens": [51528, 407, 3811, 321, 727, 915, 472, 1433, 2486, 6770, 11, 460, 337, 341, 6034, 11, 293, 1071, 51804], "temperature": 0.0, "avg_logprob": -0.11017377217610677, "compression_ratio": 1.8594771241830066, "no_speech_prob": 0.028429949656128883}, {"id": 389, "seek": 232904, "start": 2329.04, "end": 2336.72, "text": " termination argument for, for here. We can, we can color them. So here's, I'm just going to", "tokens": [50364, 1433, 2486, 6770, 337, 11, 337, 510, 13, 492, 393, 11, 321, 393, 2017, 552, 13, 407, 510, 311, 11, 286, 478, 445, 516, 281, 50748], "temperature": 0.0, "avg_logprob": -0.0929223900974387, "compression_ratio": 1.7219730941704037, "no_speech_prob": 0.00026116982917301357}, {"id": 390, "seek": 232904, "start": 2336.72, "end": 2343.12, "text": " make my life a little bit easier. So notice, notice I've colored this transition green because I have", "tokens": [50748, 652, 452, 993, 257, 707, 857, 3571, 13, 407, 3449, 11, 3449, 286, 600, 14332, 341, 6034, 3092, 570, 286, 362, 51068], "temperature": 0.0, "avg_logprob": -0.0929223900974387, "compression_ratio": 1.7219730941704037, "no_speech_prob": 0.00026116982917301357}, {"id": 391, "seek": 232904, "start": 2343.12, "end": 2348.56, "text": " the green function. And here I've, I've colored it red because I have the red function. Okay.", "tokens": [51068, 264, 3092, 2445, 13, 400, 510, 286, 600, 11, 286, 600, 14332, 309, 2182, 570, 286, 362, 264, 2182, 2445, 13, 1033, 13, 51340], "temperature": 0.0, "avg_logprob": -0.0929223900974387, "compression_ratio": 1.7219730941704037, "no_speech_prob": 0.00026116982917301357}, {"id": 392, "seek": 232904, "start": 2348.56, "end": 2355.36, "text": " I'm preparing for Ramsey. The problem right now is that this isn't a valid termination argument.", "tokens": [51340, 286, 478, 10075, 337, 9078, 7399, 13, 440, 1154, 558, 586, 307, 300, 341, 1943, 380, 257, 7363, 1433, 2486, 6770, 13, 51680], "temperature": 0.0, "avg_logprob": -0.0929223900974387, "compression_ratio": 1.7219730941704037, "no_speech_prob": 0.00026116982917301357}, {"id": 393, "seek": 235536, "start": 2355.36, "end": 2359.36, "text": " And the reason is, is because I have two functions, you could imagine them alternating,", "tokens": [50364, 400, 264, 1778, 307, 11, 307, 570, 286, 362, 732, 6828, 11, 291, 727, 3811, 552, 40062, 11, 50564], "temperature": 0.0, "avg_logprob": -0.09681042686837618, "compression_ratio": 1.797709923664122, "no_speech_prob": 0.004331044852733612}, {"id": 394, "seek": 235536, "start": 2359.36, "end": 2364.6400000000003, "text": " and there's just no reason for the numbers to go down. So if I have two termination arguments,", "tokens": [50564, 293, 456, 311, 445, 572, 1778, 337, 264, 3547, 281, 352, 760, 13, 407, 498, 286, 362, 732, 1433, 2486, 12869, 11, 50828], "temperature": 0.0, "avg_logprob": -0.09681042686837618, "compression_ratio": 1.797709923664122, "no_speech_prob": 0.004331044852733612}, {"id": 395, "seek": 235536, "start": 2364.6400000000003, "end": 2369.6800000000003, "text": " it's not valid because I just alternate them. There's no reason I know, I can't know, I can't", "tokens": [50828, 309, 311, 406, 7363, 570, 286, 445, 18873, 552, 13, 821, 311, 572, 1778, 286, 458, 11, 286, 393, 380, 458, 11, 286, 393, 380, 51080], "temperature": 0.0, "avg_logprob": -0.09681042686837618, "compression_ratio": 1.797709923664122, "no_speech_prob": 0.004331044852733612}, {"id": 396, "seek": 235536, "start": 2369.6800000000003, "end": 2375.6, "text": " alternate them. So, so I haven't, I haven't proved termination yet. But what we can do is we can", "tokens": [51080, 18873, 552, 13, 407, 11, 370, 286, 2378, 380, 11, 286, 2378, 380, 14617, 1433, 2486, 1939, 13, 583, 437, 321, 393, 360, 307, 321, 393, 51376], "temperature": 0.0, "avg_logprob": -0.09681042686837618, "compression_ratio": 1.797709923664122, "no_speech_prob": 0.004331044852733612}, {"id": 397, "seek": 235536, "start": 2375.6, "end": 2380.1600000000003, "text": " borrow some techniques from these papers. And now I'm going to do a construction and just believe", "tokens": [51376, 11172, 512, 7512, 490, 613, 10577, 13, 400, 586, 286, 478, 516, 281, 360, 257, 6435, 293, 445, 1697, 51604], "temperature": 0.0, "avg_logprob": -0.09681042686837618, "compression_ratio": 1.797709923664122, "no_speech_prob": 0.004331044852733612}, {"id": 398, "seek": 238016, "start": 2380.16, "end": 2387.04, "text": " me. Okay. Because we don't want this to turn into a 30 minute graph theory course. Okay.", "tokens": [50364, 385, 13, 1033, 13, 1436, 321, 500, 380, 528, 341, 281, 1261, 666, 257, 2217, 3456, 4295, 5261, 1164, 13, 1033, 13, 50708], "temperature": 0.0, "avg_logprob": -0.0921366328284854, "compression_ratio": 1.773076923076923, "no_speech_prob": 0.008845064789056778}, {"id": 399, "seek": 238016, "start": 2387.04, "end": 2392.64, "text": " There's this idea of transitive closure. And it's really neat. And the graphs are really", "tokens": [50708, 821, 311, 341, 1558, 295, 1145, 2187, 24653, 13, 400, 309, 311, 534, 10654, 13, 400, 264, 24877, 366, 534, 50988], "temperature": 0.0, "avg_logprob": -0.0921366328284854, "compression_ratio": 1.773076923076923, "no_speech_prob": 0.008845064789056778}, {"id": 400, "seek": 238016, "start": 2392.64, "end": 2397.12, "text": " amazingly, they have so many edges, it's an unbelievable, but it's a construction, you can do", "tokens": [50988, 31762, 11, 436, 362, 370, 867, 8819, 11, 309, 311, 364, 16605, 11, 457, 309, 311, 257, 6435, 11, 291, 393, 360, 51212], "temperature": 0.0, "avg_logprob": -0.0921366328284854, "compression_ratio": 1.773076923076923, "no_speech_prob": 0.008845064789056778}, {"id": 401, "seek": 238016, "start": 2397.12, "end": 2404.96, "text": " it. And, and, and now what we can do is we can, and this is, and imagine this is infinite because", "tokens": [51212, 309, 13, 400, 11, 293, 11, 293, 586, 437, 321, 393, 360, 307, 321, 393, 11, 293, 341, 307, 11, 293, 3811, 341, 307, 13785, 570, 51604], "temperature": 0.0, "avg_logprob": -0.0921366328284854, "compression_ratio": 1.773076923076923, "no_speech_prob": 0.008845064789056778}, {"id": 402, "seek": 238016, "start": 2404.96, "end": 2408.96, "text": " we're saying, oh, maybe this program doesn't terminate. And so now what we can do is we can", "tokens": [51604, 321, 434, 1566, 11, 1954, 11, 1310, 341, 1461, 1177, 380, 10761, 473, 13, 400, 370, 586, 437, 321, 393, 360, 307, 321, 393, 51804], "temperature": 0.0, "avg_logprob": -0.0921366328284854, "compression_ratio": 1.773076923076923, "no_speech_prob": 0.008845064789056778}, {"id": 403, "seek": 240896, "start": 2408.96, "end": 2414.08, "text": " take the monochromatic Ramsey subgraph. For those of you who signed up for this talk,", "tokens": [50364, 747, 264, 1108, 8997, 4397, 2399, 9078, 7399, 1422, 34091, 13, 1171, 729, 295, 291, 567, 8175, 493, 337, 341, 751, 11, 50620], "temperature": 0.0, "avg_logprob": -0.15792707348546237, "compression_ratio": 1.886178861788618, "no_speech_prob": 0.0031718190293759108}, {"id": 404, "seek": 240896, "start": 2414.08, "end": 2418.32, "text": " this is kind of the worst slide, right? Sorry. That who don't know, who don't know", "tokens": [50620, 341, 307, 733, 295, 264, 5855, 4137, 11, 558, 30, 4919, 13, 663, 567, 500, 380, 458, 11, 567, 500, 380, 458, 50832], "temperature": 0.0, "avg_logprob": -0.15792707348546237, "compression_ratio": 1.886178861788618, "no_speech_prob": 0.0031718190293759108}, {"id": 405, "seek": 240896, "start": 2418.32, "end": 2422.88, "text": " math and logic and that kind of thing. So we can take the monochromatic Ramsey, say that when", "tokens": [50832, 5221, 293, 9952, 293, 300, 733, 295, 551, 13, 407, 321, 393, 747, 264, 1108, 8997, 4397, 2399, 9078, 7399, 11, 584, 300, 562, 51060], "temperature": 0.0, "avg_logprob": -0.15792707348546237, "compression_ratio": 1.886178861788618, "no_speech_prob": 0.0031718190293759108}, {"id": 406, "seek": 240896, "start": 2422.88, "end": 2428.0, "text": " you go home, right? You, you, how was the, hey honey, how was the talk is like monochromatic subgraphs.", "tokens": [51060, 291, 352, 1280, 11, 558, 30, 509, 11, 291, 11, 577, 390, 264, 11, 4177, 8330, 11, 577, 390, 264, 751, 307, 411, 1108, 8997, 4397, 2399, 1422, 34091, 82, 13, 51316], "temperature": 0.0, "avg_logprob": -0.15792707348546237, "compression_ratio": 1.886178861788618, "no_speech_prob": 0.0031718190293759108}, {"id": 407, "seek": 240896, "start": 2429.76, "end": 2434.96, "text": " And, and, and now we can pull this trick again. So we'll, we'll, we'll do like trying, we'll say,", "tokens": [51404, 400, 11, 293, 11, 293, 586, 321, 393, 2235, 341, 4282, 797, 13, 407, 321, 603, 11, 321, 603, 11, 321, 603, 360, 411, 1382, 11, 321, 603, 584, 11, 51664], "temperature": 0.0, "avg_logprob": -0.15792707348546237, "compression_ratio": 1.886178861788618, "no_speech_prob": 0.0031718190293759108}, {"id": 408, "seek": 243496, "start": 2434.96, "end": 2442.88, "text": " okay, imagine non, non-terminating, non-terminating execution, but from the monochromatic subgraphs.", "tokens": [50364, 1392, 11, 3811, 2107, 11, 2107, 12, 29725, 990, 11, 2107, 12, 29725, 990, 15058, 11, 457, 490, 264, 1108, 8997, 4397, 2399, 1422, 34091, 82, 13, 50760], "temperature": 0.0, "avg_logprob": -0.15284265790666854, "compression_ratio": 1.7168141592920354, "no_speech_prob": 0.005553345195949078}, {"id": 409, "seek": 243496, "start": 2442.88, "end": 2451.04, "text": " So it's only the green edges. So those were only the edges where we had one function and we did", "tokens": [50760, 407, 309, 311, 787, 264, 3092, 8819, 13, 407, 729, 645, 787, 264, 8819, 689, 321, 632, 472, 2445, 293, 321, 630, 51168], "temperature": 0.0, "avg_logprob": -0.15284265790666854, "compression_ratio": 1.7168141592920354, "no_speech_prob": 0.005553345195949078}, {"id": 410, "seek": 243496, "start": 2451.04, "end": 2454.32, "text": " this, we did this construction and you're just going to have to believe me that sort of added a", "tokens": [51168, 341, 11, 321, 630, 341, 6435, 293, 291, 434, 445, 516, 281, 362, 281, 1697, 385, 300, 1333, 295, 3869, 257, 51332], "temperature": 0.0, "avg_logprob": -0.15284265790666854, "compression_ratio": 1.7168141592920354, "no_speech_prob": 0.005553345195949078}, {"id": 411, "seek": 243496, "start": 2454.32, "end": 2458.96, "text": " bunch more transitions. And this is, this is a valuable thing to do. And, and, you know, ask me", "tokens": [51332, 3840, 544, 23767, 13, 400, 341, 307, 11, 341, 307, 257, 8263, 551, 281, 360, 13, 400, 11, 293, 11, 291, 458, 11, 1029, 385, 51564], "temperature": 0.0, "avg_logprob": -0.15284265790666854, "compression_ratio": 1.7168141592920354, "no_speech_prob": 0.005553345195949078}, {"id": 412, "seek": 245896, "start": 2458.96, "end": 2464.7200000000003, "text": " later and drinks and I'll explain it to you more. The more you get drinks into me, the more I'll", "tokens": [50364, 1780, 293, 12142, 293, 286, 603, 2903, 309, 281, 291, 544, 13, 440, 544, 291, 483, 12142, 666, 385, 11, 264, 544, 286, 603, 50652], "temperature": 0.0, "avg_logprob": -0.12379030186495335, "compression_ratio": 1.7481751824817517, "no_speech_prob": 0.02842952124774456}, {"id": 413, "seek": 245896, "start": 2464.7200000000003, "end": 2471.12, "text": " explain it to you. And, and again, we, now we get to say, oh, look, you know, now it's only one", "tokens": [50652, 2903, 309, 281, 291, 13, 400, 11, 293, 797, 11, 321, 11, 586, 321, 483, 281, 584, 11, 1954, 11, 574, 11, 291, 458, 11, 586, 309, 311, 787, 472, 50972], "temperature": 0.0, "avg_logprob": -0.12379030186495335, "compression_ratio": 1.7481751824817517, "no_speech_prob": 0.02842952124774456}, {"id": 414, "seek": 245896, "start": 2471.12, "end": 2477.28, "text": " function. So we know it's going down. So voila, right? We've, we've now, we, we, we have this", "tokens": [50972, 2445, 13, 407, 321, 458, 309, 311, 516, 760, 13, 407, 45565, 11, 558, 30, 492, 600, 11, 321, 600, 586, 11, 321, 11, 321, 11, 321, 362, 341, 51280], "temperature": 0.0, "avg_logprob": -0.12379030186495335, "compression_ratio": 1.7481751824817517, "no_speech_prob": 0.02842952124774456}, {"id": 415, "seek": 245896, "start": 2477.28, "end": 2483.04, "text": " thing that Turing was saying. We need, we need to find a quantity, which is asserted to decrease", "tokens": [51280, 551, 300, 314, 1345, 390, 1566, 13, 492, 643, 11, 321, 643, 281, 915, 257, 11275, 11, 597, 307, 19810, 292, 281, 11514, 51568], "temperature": 0.0, "avg_logprob": -0.12379030186495335, "compression_ratio": 1.7481751824817517, "no_speech_prob": 0.02842952124774456}, {"id": 416, "seek": 245896, "start": 2483.04, "end": 2486.88, "text": " continuously and will vanish when the machine, machine stops and we did it. And it was Ramsey's", "tokens": [51568, 15684, 293, 486, 43584, 562, 264, 3479, 11, 3479, 10094, 293, 321, 630, 309, 13, 400, 309, 390, 9078, 7399, 311, 51760], "temperature": 0.0, "avg_logprob": -0.12379030186495335, "compression_ratio": 1.7481751824817517, "no_speech_prob": 0.02842952124774456}, {"id": 417, "seek": 248688, "start": 2486.88, "end": 2492.7200000000003, "text": " theorem that helps us do it. So the payload is the summary is Ramsey's theorem. Let's us use", "tokens": [50364, 20904, 300, 3665, 505, 360, 309, 13, 407, 264, 30918, 307, 264, 12691, 307, 9078, 7399, 311, 20904, 13, 961, 311, 505, 764, 50656], "temperature": 0.0, "avg_logprob": -0.1559439538751991, "compression_ratio": 1.5375, "no_speech_prob": 0.0023227520287036896}, {"id": 418, "seek": 248688, "start": 2492.7200000000003, "end": 2501.6, "text": " many simple functions rather than a, rather than a single Turing style complex one. Okay.", "tokens": [50656, 867, 2199, 6828, 2831, 813, 257, 11, 2831, 813, 257, 2167, 314, 1345, 3758, 3997, 472, 13, 1033, 13, 51100], "temperature": 0.0, "avg_logprob": -0.1559439538751991, "compression_ratio": 1.5375, "no_speech_prob": 0.0023227520287036896}, {"id": 419, "seek": 248688, "start": 2501.6, "end": 2507.52, "text": " How am I doing for time, by the way? Does anyone keep track? Okay, 15 more minutes, but I might", "tokens": [51100, 1012, 669, 286, 884, 337, 565, 11, 538, 264, 636, 30, 4402, 2878, 1066, 2837, 30, 1033, 11, 2119, 544, 2077, 11, 457, 286, 1062, 51396], "temperature": 0.0, "avg_logprob": -0.1559439538751991, "compression_ratio": 1.5375, "no_speech_prob": 0.0023227520287036896}, {"id": 420, "seek": 248688, "start": 2507.52, "end": 2513.12, "text": " run long. I don't know. There was a Q and A afterwards. So I might eat into that. Okay. So", "tokens": [51396, 1190, 938, 13, 286, 500, 380, 458, 13, 821, 390, 257, 1249, 293, 316, 10543, 13, 407, 286, 1062, 1862, 666, 300, 13, 1033, 13, 407, 51676], "temperature": 0.0, "avg_logprob": -0.1559439538751991, "compression_ratio": 1.5375, "no_speech_prob": 0.0023227520287036896}, {"id": 421, "seek": 251312, "start": 2513.2, "end": 2517.68, "text": " this, that, that's the basis of Terminator. So there was this, this paper that said,", "tokens": [50368, 341, 11, 300, 11, 300, 311, 264, 5143, 295, 19835, 31927, 13, 407, 456, 390, 341, 11, 341, 3035, 300, 848, 11, 50592], "temperature": 0.0, "avg_logprob": -0.11368786068413202, "compression_ratio": 1.817829457364341, "no_speech_prob": 0.001987610012292862}, {"id": 422, "seek": 251312, "start": 2517.68, "end": 2522.72, "text": " hey, everyone, we have a termination prover that works for actual programs, like programs that", "tokens": [50592, 4177, 11, 1518, 11, 321, 362, 257, 1433, 2486, 447, 331, 300, 1985, 337, 3539, 4268, 11, 411, 4268, 300, 50844], "temperature": 0.0, "avg_logprob": -0.11368786068413202, "compression_ratio": 1.817829457364341, "no_speech_prob": 0.001987610012292862}, {"id": 423, "seek": 251312, "start": 2522.72, "end": 2528.0, "text": " people care about, device drivers. And it worked really nicely. So it, so it, so here, you know,", "tokens": [50844, 561, 1127, 466, 11, 4302, 11590, 13, 400, 309, 2732, 534, 9594, 13, 407, 309, 11, 370, 309, 11, 370, 510, 11, 291, 458, 11, 51108], "temperature": 0.0, "avg_logprob": -0.11368786068413202, "compression_ratio": 1.817829457364341, "no_speech_prob": 0.001987610012292862}, {"id": 424, "seek": 251312, "start": 2528.0, "end": 2531.7599999999998, "text": " here, remember, I showed you this code a little bit earlier. This is a device driver code. It's", "tokens": [51108, 510, 11, 1604, 11, 286, 4712, 291, 341, 3089, 257, 707, 857, 3071, 13, 639, 307, 257, 4302, 6787, 3089, 13, 467, 311, 51296], "temperature": 0.0, "avg_logprob": -0.11368786068413202, "compression_ratio": 1.817829457364341, "no_speech_prob": 0.001987610012292862}, {"id": 425, "seek": 251312, "start": 2531.7599999999998, "end": 2539.2799999999997, "text": " actually from the mouse. It's a piece of the mouse device driver. And, you know, it has bugs. So", "tokens": [51296, 767, 490, 264, 9719, 13, 467, 311, 257, 2522, 295, 264, 9719, 4302, 6787, 13, 400, 11, 291, 458, 11, 309, 575, 15120, 13, 407, 51672], "temperature": 0.0, "avg_logprob": -0.11368786068413202, "compression_ratio": 1.817829457364341, "no_speech_prob": 0.001987610012292862}, {"id": 426, "seek": 253928, "start": 2539.6000000000004, "end": 2545.6000000000004, "text": " one of the developers agreed. Yeah, that's a bug. And then we, and then we had a bunch of papers.", "tokens": [50380, 472, 295, 264, 8849, 9166, 13, 865, 11, 300, 311, 257, 7426, 13, 400, 550, 321, 11, 293, 550, 321, 632, 257, 3840, 295, 10577, 13, 50680], "temperature": 0.0, "avg_logprob": -0.1740113894144694, "compression_ratio": 1.68, "no_speech_prob": 0.00015355786308646202}, {"id": 427, "seek": 253928, "start": 2545.6000000000004, "end": 2550.8, "text": " What were these papers doing? A lot of these papers were chipping away at this maybe problem,", "tokens": [50680, 708, 645, 613, 10577, 884, 30, 316, 688, 295, 613, 10577, 645, 417, 6297, 1314, 412, 341, 1310, 1154, 11, 50940], "temperature": 0.0, "avg_logprob": -0.1740113894144694, "compression_ratio": 1.68, "no_speech_prob": 0.00015355786308646202}, {"id": 428, "seek": 253928, "start": 2550.8, "end": 2556.5600000000004, "text": " or the, the tool Terminator itself is running forever problem. So we were able to prove some", "tokens": [50940, 420, 264, 11, 264, 2290, 19835, 31927, 2564, 307, 2614, 5680, 1154, 13, 407, 321, 645, 1075, 281, 7081, 512, 51228], "temperature": 0.0, "avg_logprob": -0.1740113894144694, "compression_ratio": 1.68, "no_speech_prob": 0.00015355786308646202}, {"id": 429, "seek": 253928, "start": 2556.5600000000004, "end": 2561.28, "text": " device drivers terminating. We also found some real bugs, but then there was a whole bunch of", "tokens": [51228, 4302, 11590, 1433, 8205, 13, 492, 611, 1352, 512, 957, 15120, 11, 457, 550, 456, 390, 257, 1379, 3840, 295, 51464], "temperature": 0.0, "avg_logprob": -0.1740113894144694, "compression_ratio": 1.68, "no_speech_prob": 0.00015355786308646202}, {"id": 430, "seek": 256128, "start": 2561.84, "end": 2567.44, "text": " maybes and spinning forever. And then these papers kind of chipped away at them.", "tokens": [50392, 815, 6446, 293, 15640, 5680, 13, 400, 550, 613, 10577, 733, 295, 417, 5529, 1314, 412, 552, 13, 50672], "temperature": 0.0, "avg_logprob": -0.17053850765885978, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.0014102407731115818}, {"id": 431, "seek": 256128, "start": 2568.88, "end": 2573.84, "text": " Other papers generalize Terminator. So for example, these folks together with me", "tokens": [50744, 5358, 10577, 2674, 1125, 19835, 31927, 13, 407, 337, 1365, 11, 613, 4024, 1214, 365, 385, 50992], "temperature": 0.0, "avg_logprob": -0.17053850765885978, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.0014102407731115818}, {"id": 432, "seek": 256128, "start": 2574.48, "end": 2580.48, "text": " generalized it. So it's, you really could say anything that had the word eventually, like, you", "tokens": [51024, 44498, 309, 13, 407, 309, 311, 11, 291, 534, 727, 584, 1340, 300, 632, 264, 1349, 4728, 11, 411, 11, 291, 51324], "temperature": 0.0, "avg_logprob": -0.17053850765885978, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.0014102407731115818}, {"id": 433, "seek": 256128, "start": 2580.48, "end": 2587.28, "text": " know, when we could ask, when, whenever this program opens a file, does it eventually close it?", "tokens": [51324, 458, 11, 562, 321, 727, 1029, 11, 562, 11, 5699, 341, 1461, 9870, 257, 3991, 11, 775, 309, 4728, 1998, 309, 30, 51664], "temperature": 0.0, "avg_logprob": -0.17053850765885978, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.0014102407731115818}, {"id": 434, "seek": 258728, "start": 2587.28, "end": 2593.84, "text": " And that's eventually, right? So things like that. Another thing we did. So it turns out that", "tokens": [50364, 400, 300, 311, 4728, 11, 558, 30, 407, 721, 411, 300, 13, 3996, 551, 321, 630, 13, 407, 309, 4523, 484, 300, 50692], "temperature": 0.0, "avg_logprob": -0.12428401449452275, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.0005032810149714351}, {"id": 435, "seek": 258728, "start": 2593.84, "end": 2599.76, "text": " a lot of programs are what we call concurrent. So you might have two copies of the program,", "tokens": [50692, 257, 688, 295, 4268, 366, 437, 321, 818, 37702, 13, 407, 291, 1062, 362, 732, 14341, 295, 264, 1461, 11, 50988], "temperature": 0.0, "avg_logprob": -0.12428401449452275, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.0005032810149714351}, {"id": 436, "seek": 258728, "start": 2600.7200000000003, "end": 2605.52, "text": " both operating over that variable in at the same time. And proving those programs terminating", "tokens": [51036, 1293, 7447, 670, 300, 7006, 294, 412, 264, 912, 565, 13, 400, 27221, 729, 4268, 1433, 8205, 51276], "temperature": 0.0, "avg_logprob": -0.12428401449452275, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.0005032810149714351}, {"id": 437, "seek": 258728, "start": 2605.52, "end": 2609.92, "text": " is harder. So it turns out device drivers kind of a very special flavor. And we were able to do", "tokens": [51276, 307, 6081, 13, 407, 309, 4523, 484, 4302, 11590, 733, 295, 257, 588, 2121, 6813, 13, 400, 321, 645, 1075, 281, 360, 51496], "temperature": 0.0, "avg_logprob": -0.12428401449452275, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.0005032810149714351}, {"id": 438, "seek": 258728, "start": 2609.92, "end": 2615.1200000000003, "text": " something. But then the question is, can we generalize to more programs? And the answer was yes.", "tokens": [51496, 746, 13, 583, 550, 264, 1168, 307, 11, 393, 321, 2674, 1125, 281, 544, 4268, 30, 400, 264, 1867, 390, 2086, 13, 51756], "temperature": 0.0, "avg_logprob": -0.12428401449452275, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.0005032810149714351}, {"id": 439, "seek": 261512, "start": 2615.44, "end": 2620.48, "text": " So then Jasmine, who's in the audience, made the following reference. Hey, Byron, she worked with", "tokens": [50380, 407, 550, 36224, 11, 567, 311, 294, 264, 4034, 11, 1027, 264, 3480, 6408, 13, 1911, 11, 3146, 2044, 11, 750, 2732, 365, 50632], "temperature": 0.0, "avg_logprob": -0.2313216466170091, "compression_ratio": 1.6628787878787878, "no_speech_prob": 0.0003682597307488322}, {"id": 440, "seek": 261512, "start": 2620.48, "end": 2624.56, "text": " me. Well, she worked in the Microsoft research. And then after this statement, she worked with me.", "tokens": [50632, 385, 13, 1042, 11, 750, 2732, 294, 264, 8116, 2132, 13, 400, 550, 934, 341, 5629, 11, 750, 2732, 365, 385, 13, 50836], "temperature": 0.0, "avg_logprob": -0.2313216466170091, "compression_ratio": 1.6628787878787878, "no_speech_prob": 0.0003682597307488322}, {"id": 441, "seek": 261512, "start": 2624.56, "end": 2628.96, "text": " So Terminator looks like something we need in the analysis of biological models.", "tokens": [50836, 407, 19835, 31927, 1542, 411, 746, 321, 643, 294, 264, 5215, 295, 13910, 5245, 13, 51056], "temperature": 0.0, "avg_logprob": -0.2313216466170091, "compression_ratio": 1.6628787878787878, "no_speech_prob": 0.0003682597307488322}, {"id": 442, "seek": 261512, "start": 2630.24, "end": 2636.0, "text": " So that was this skin cancer comment I mentioned. So then a collective of us,", "tokens": [51120, 407, 300, 390, 341, 3178, 5592, 2871, 286, 2835, 13, 407, 550, 257, 12590, 295, 505, 11, 51408], "temperature": 0.0, "avg_logprob": -0.2313216466170091, "compression_ratio": 1.6628787878787878, "no_speech_prob": 0.0003682597307488322}, {"id": 443, "seek": 261512, "start": 2636.64, "end": 2641.8399999999997, "text": " including a designer from the Royal College of Arts, essentially an anthropologist,", "tokens": [51440, 3009, 257, 11795, 490, 264, 12717, 6745, 295, 12407, 11, 4476, 364, 22727, 9201, 11, 51700], "temperature": 0.0, "avg_logprob": -0.2313216466170091, "compression_ratio": 1.6628787878787878, "no_speech_prob": 0.0003682597307488322}, {"id": 444, "seek": 264184, "start": 2642.8, "end": 2648.88, "text": " a couple of computer scientists, and Jasmine, and others who are biologists.", "tokens": [50412, 257, 1916, 295, 3820, 7708, 11, 293, 36224, 11, 293, 2357, 567, 366, 3228, 12256, 13, 50716], "temperature": 0.0, "avg_logprob": -0.15030950562566772, "compression_ratio": 1.6931818181818181, "no_speech_prob": 0.002631155773997307}, {"id": 445, "seek": 264184, "start": 2649.6800000000003, "end": 2655.44, "text": " The idea here is that you have your skin cells and you have genes. And there's like the genes are", "tokens": [50756, 440, 1558, 510, 307, 300, 291, 362, 428, 3178, 5438, 293, 291, 362, 14424, 13, 400, 456, 311, 411, 264, 14424, 366, 51044], "temperature": 0.0, "avg_logprob": -0.15030950562566772, "compression_ratio": 1.6931818181818181, "no_speech_prob": 0.002631155773997307}, {"id": 446, "seek": 264184, "start": 2656.1600000000003, "end": 2660.96, "text": " talking to the other neighbor genes. And they're all as a family trying to say, hey,", "tokens": [51080, 1417, 281, 264, 661, 5987, 14424, 13, 400, 436, 434, 439, 382, 257, 1605, 1382, 281, 584, 11, 4177, 11, 51320], "temperature": 0.0, "avg_logprob": -0.15030950562566772, "compression_ratio": 1.6931818181818181, "no_speech_prob": 0.002631155773997307}, {"id": 447, "seek": 264184, "start": 2660.96, "end": 2665.28, "text": " we should only have, what is it, five layers of skin? Six layers? Six layers? I don't remember.", "tokens": [51320, 321, 820, 787, 362, 11, 437, 307, 309, 11, 1732, 7914, 295, 3178, 30, 11678, 7914, 30, 11678, 7914, 30, 286, 500, 380, 1604, 13, 51536], "temperature": 0.0, "avg_logprob": -0.15030950562566772, "compression_ratio": 1.6931818181818181, "no_speech_prob": 0.002631155773997307}, {"id": 448, "seek": 264184, "start": 2665.28, "end": 2669.92, "text": " But let's keep it that number. Let's not have a whole bunch more because that's bad for our", "tokens": [51536, 583, 718, 311, 1066, 309, 300, 1230, 13, 961, 311, 406, 362, 257, 1379, 3840, 544, 570, 300, 311, 1578, 337, 527, 51768], "temperature": 0.0, "avg_logprob": -0.15030950562566772, "compression_ratio": 1.6931818181818181, "no_speech_prob": 0.002631155773997307}, {"id": 449, "seek": 266992, "start": 2669.92, "end": 2674.88, "text": " bodies. And let's not have a whole bunch less. That's also bad news for us. And so this paper", "tokens": [50364, 7510, 13, 400, 718, 311, 406, 362, 257, 1379, 3840, 1570, 13, 663, 311, 611, 1578, 2583, 337, 505, 13, 400, 370, 341, 3035, 50612], "temperature": 0.0, "avg_logprob": -0.11514765369005439, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.0005357047193683684}, {"id": 450, "seek": 266992, "start": 2674.88, "end": 2679.6, "text": " allowed us to analyze that. So we were able to build models of various kinds of disease and then", "tokens": [50612, 4350, 505, 281, 12477, 300, 13, 407, 321, 645, 1075, 281, 1322, 5245, 295, 3683, 3685, 295, 4752, 293, 550, 50848], "temperature": 0.0, "avg_logprob": -0.11514765369005439, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.0005357047193683684}, {"id": 451, "seek": 266992, "start": 2679.6, "end": 2687.52, "text": " answer questions like, hey, if we modified the model, would you get homeostasis? And the one", "tokens": [50848, 1867, 1651, 411, 11, 4177, 11, 498, 321, 15873, 264, 2316, 11, 576, 291, 483, 1280, 555, 26632, 30, 400, 264, 472, 51244], "temperature": 0.0, "avg_logprob": -0.11514765369005439, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.0005357047193683684}, {"id": 452, "seek": 266992, "start": 2687.52, "end": 2692.2400000000002, "text": " really neat thing about it is this tool was designed such that biologists could use it and it", "tokens": [51244, 534, 10654, 551, 466, 309, 307, 341, 2290, 390, 4761, 1270, 300, 3228, 12256, 727, 764, 309, 293, 309, 51480], "temperature": 0.0, "avg_logprob": -0.11514765369005439, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.0005357047193683684}, {"id": 453, "seek": 266992, "start": 2692.2400000000002, "end": 2697.6800000000003, "text": " had a notation very similar to what they use in their day-to-day life. And so you can use the", "tokens": [51480, 632, 257, 24657, 588, 2531, 281, 437, 436, 764, 294, 641, 786, 12, 1353, 12, 810, 993, 13, 400, 370, 291, 393, 764, 264, 51752], "temperature": 0.0, "avg_logprob": -0.11514765369005439, "compression_ratio": 1.6468531468531469, "no_speech_prob": 0.0005357047193683684}, {"id": 454, "seek": 269768, "start": 2697.68, "end": 2702.56, "text": " tool still today. It's called Biomodal Analyzer. And there's been some amazing results. And Jasmine", "tokens": [50364, 2290, 920, 965, 13, 467, 311, 1219, 13007, 298, 378, 304, 1107, 5222, 4527, 13, 400, 456, 311, 668, 512, 2243, 3542, 13, 400, 36224, 50608], "temperature": 0.0, "avg_logprob": -0.14803580482407372, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.00025313583319075406}, {"id": 455, "seek": 269768, "start": 2702.56, "end": 2710.64, "text": " in her lab down at UCL now has gone on to do amazing results. And many of them found in part", "tokens": [50608, 294, 720, 2715, 760, 412, 14079, 43, 586, 575, 2780, 322, 281, 360, 2243, 3542, 13, 400, 867, 295, 552, 1352, 294, 644, 51012], "temperature": 0.0, "avg_logprob": -0.14803580482407372, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.00025313583319075406}, {"id": 456, "seek": 269768, "start": 2710.64, "end": 2717.2, "text": " with the use of this tool. Another thing I did is I got really tired of using the, so there was", "tokens": [51012, 365, 264, 764, 295, 341, 2290, 13, 3996, 551, 286, 630, 307, 286, 658, 534, 5868, 295, 1228, 264, 11, 370, 456, 390, 51340], "temperature": 0.0, "avg_logprob": -0.14803580482407372, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.00025313583319075406}, {"id": 457, "seek": 269768, "start": 2717.2, "end": 2723.3599999999997, "text": " these kind of formulas that we were writing that came up quite a bit. And I found that notation", "tokens": [51340, 613, 733, 295, 30546, 300, 321, 645, 3579, 300, 1361, 493, 1596, 257, 857, 13, 400, 286, 1352, 300, 24657, 51648], "temperature": 0.0, "avg_logprob": -0.14803580482407372, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.00025313583319075406}, {"id": 458, "seek": 272336, "start": 2723.6800000000003, "end": 2728.88, "text": " kind of limiting. So Talba Auerbach, who's a friend and an artist, began working with me on new", "tokens": [50380, 733, 295, 22083, 13, 407, 10516, 4231, 316, 5486, 32096, 11, 567, 311, 257, 1277, 293, 364, 5748, 11, 4283, 1364, 365, 385, 322, 777, 50640], "temperature": 0.0, "avg_logprob": -0.20442631665398092, "compression_ratio": 1.50199203187251, "no_speech_prob": 0.024033254012465477}, {"id": 459, "seek": 272336, "start": 2728.88, "end": 2732.7200000000003, "text": " symbols. So here's Talba in my Cambridge Microsoft Research Office trying to invent new", "tokens": [50640, 16944, 13, 407, 510, 311, 10516, 4231, 294, 452, 24876, 8116, 10303, 8935, 1382, 281, 7962, 777, 50832], "temperature": 0.0, "avg_logprob": -0.20442631665398092, "compression_ratio": 1.50199203187251, "no_speech_prob": 0.024033254012465477}, {"id": 460, "seek": 272336, "start": 2732.7200000000003, "end": 2739.2000000000003, "text": " mathematical symbols. And if you know LaTeXa, we ended, David Reinfert, who is the guy in the", "tokens": [50832, 18894, 16944, 13, 400, 498, 291, 458, 2369, 14233, 55, 64, 11, 321, 4590, 11, 4389, 1300, 19920, 911, 11, 567, 307, 264, 2146, 294, 264, 51156], "temperature": 0.0, "avg_logprob": -0.20442631665398092, "compression_ratio": 1.50199203187251, "no_speech_prob": 0.024033254012465477}, {"id": 461, "seek": 272336, "start": 2739.2000000000003, "end": 2749.28, "text": " photo, implemented these new symbols in MetaFont. And we came up with something I like quite a bit.", "tokens": [51156, 5052, 11, 12270, 613, 777, 16944, 294, 6377, 64, 37, 896, 13, 400, 321, 1361, 493, 365, 746, 286, 411, 1596, 257, 857, 13, 51660], "temperature": 0.0, "avg_logprob": -0.20442631665398092, "compression_ratio": 1.50199203187251, "no_speech_prob": 0.024033254012465477}, {"id": 462, "seek": 274928, "start": 2749.28, "end": 2754.8, "text": " So it's this operation. So this is the lifting of a relation, happens to be greater than, with", "tokens": [50364, 407, 309, 311, 341, 6916, 13, 407, 341, 307, 264, 15798, 295, 257, 9721, 11, 2314, 281, 312, 5044, 813, 11, 365, 50640], "temperature": 0.0, "avg_logprob": -0.09123538434505463, "compression_ratio": 1.9791666666666667, "no_speech_prob": 0.06840164959430695}, {"id": 463, "seek": 274928, "start": 2754.8, "end": 2760.88, "text": " respect to f. And that allowed us to talk about this in a much nicer way. So this is the thing", "tokens": [50640, 3104, 281, 283, 13, 400, 300, 4350, 505, 281, 751, 466, 341, 294, 257, 709, 22842, 636, 13, 407, 341, 307, 264, 551, 50944], "temperature": 0.0, "avg_logprob": -0.09123538434505463, "compression_ratio": 1.9791666666666667, "no_speech_prob": 0.06840164959430695}, {"id": 464, "seek": 274928, "start": 2760.88, "end": 2765.52, "text": " you've seen before. And now I can say this really nicely. I can say the transition relation, this", "tokens": [50944, 291, 600, 1612, 949, 13, 400, 586, 286, 393, 584, 341, 534, 9594, 13, 286, 393, 584, 264, 6034, 9721, 11, 341, 51176], "temperature": 0.0, "avg_logprob": -0.09123538434505463, "compression_ratio": 1.9791666666666667, "no_speech_prob": 0.06840164959430695}, {"id": 465, "seek": 274928, "start": 2765.52, "end": 2773.0400000000004, "text": " is the graph, is a subrelation of the lifting of greater than with respect to f. And so this", "tokens": [51176, 307, 264, 4295, 11, 307, 257, 1422, 4419, 399, 295, 264, 15798, 295, 5044, 813, 365, 3104, 281, 283, 13, 400, 370, 341, 51552], "temperature": 0.0, "avg_logprob": -0.09123538434505463, "compression_ratio": 1.9791666666666667, "no_speech_prob": 0.06840164959430695}, {"id": 466, "seek": 274928, "start": 2773.0400000000004, "end": 2778.8, "text": " showed up a lot in talks and so on at the time. And so if you know, if you don't know math and", "tokens": [51552, 4712, 493, 257, 688, 294, 6686, 293, 370, 322, 412, 264, 565, 13, 400, 370, 498, 291, 458, 11, 498, 291, 500, 380, 458, 5221, 293, 51840], "temperature": 0.0, "avg_logprob": -0.09123538434505463, "compression_ratio": 1.9791666666666667, "no_speech_prob": 0.06840164959430695}, {"id": 467, "seek": 277880, "start": 2778.8, "end": 2782.8, "text": " logic, just close your eyes for a second. But if you do, then I'm going to explain what the", "tokens": [50364, 9952, 11, 445, 1998, 428, 2575, 337, 257, 1150, 13, 583, 498, 291, 360, 11, 550, 286, 478, 516, 281, 2903, 437, 264, 50564], "temperature": 0.0, "avg_logprob": -0.10054760353237975, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0005354934837669134}, {"id": 468, "seek": 277880, "start": 2782.8, "end": 2788.88, "text": " meaning of this is. So the lifting of the relation with respect to f is the set of pairs of states,", "tokens": [50564, 3620, 295, 341, 307, 13, 407, 264, 15798, 295, 264, 9721, 365, 3104, 281, 283, 307, 264, 992, 295, 15494, 295, 4368, 11, 50868], "temperature": 0.0, "avg_logprob": -0.10054760353237975, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0005354934837669134}, {"id": 469, "seek": 277880, "start": 2788.88, "end": 2794.6400000000003, "text": " s and t, such that if you apply f to s and apply f to t, greater than holds, or the relation holds.", "tokens": [50868, 262, 293, 256, 11, 1270, 300, 498, 291, 3079, 283, 281, 262, 293, 3079, 283, 281, 256, 11, 5044, 813, 9190, 11, 420, 264, 9721, 9190, 13, 51156], "temperature": 0.0, "avg_logprob": -0.10054760353237975, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0005354934837669134}, {"id": 470, "seek": 277880, "start": 2797.28, "end": 2800.8, "text": " So she's a really famous artist, and there's always articles about her. But amazingly,", "tokens": [51288, 407, 750, 311, 257, 534, 4618, 5748, 11, 293, 456, 311, 1009, 11290, 466, 720, 13, 583, 31762, 11, 51464], "temperature": 0.0, "avg_logprob": -0.10054760353237975, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0005354934837669134}, {"id": 471, "seek": 280080, "start": 2800.8, "end": 2810.88, "text": " Terminator was in Vogue magazine. My greatest moment. Okay. And then, sort of one final", "tokens": [50364, 19835, 31927, 390, 294, 691, 7213, 11332, 13, 1222, 6636, 1623, 13, 1033, 13, 400, 550, 11, 1333, 295, 472, 2572, 50868], "temperature": 0.0, "avg_logprob": -0.11466337781433665, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.021280214190483093}, {"id": 472, "seek": 280080, "start": 2810.88, "end": 2816.8, "text": " point I wanted to make. So it turns out that the layout of data structures is just unbelievably", "tokens": [50868, 935, 286, 1415, 281, 652, 13, 407, 309, 4523, 484, 300, 264, 13333, 295, 1412, 9227, 307, 445, 43593, 51164], "temperature": 0.0, "avg_logprob": -0.11466337781433665, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.021280214190483093}, {"id": 473, "seek": 280080, "start": 2816.8, "end": 2821.28, "text": " crucial when trying to prove termination of realistic programs. And so here is a data", "tokens": [51164, 11462, 562, 1382, 281, 7081, 1433, 2486, 295, 12465, 4268, 13, 400, 370, 510, 307, 257, 1412, 51388], "temperature": 0.0, "avg_logprob": -0.11466337781433665, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.021280214190483093}, {"id": 474, "seek": 280080, "start": 2821.28, "end": 2825.92, "text": " structure of kind of typical data structure you would see in a device driver. And I'm just", "tokens": [51388, 3877, 295, 733, 295, 7476, 1412, 3877, 291, 576, 536, 294, 257, 4302, 6787, 13, 400, 286, 478, 445, 51620], "temperature": 0.0, "avg_logprob": -0.11466337781433665, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.021280214190483093}, {"id": 475, "seek": 280080, "start": 2825.92, "end": 2830.32, "text": " going to kind of walk you through this a little bit to get the idea. So device driver might come", "tokens": [51620, 516, 281, 733, 295, 1792, 291, 807, 341, 257, 707, 857, 281, 483, 264, 1558, 13, 407, 4302, 6787, 1062, 808, 51840], "temperature": 0.0, "avg_logprob": -0.11466337781433665, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.021280214190483093}, {"id": 476, "seek": 283032, "start": 2830.32, "end": 2834.32, "text": " here and then it come here. And now it's sort of walking this data structure. It's called the", "tokens": [50364, 510, 293, 550, 309, 808, 510, 13, 400, 586, 309, 311, 1333, 295, 4494, 341, 1412, 3877, 13, 467, 311, 1219, 264, 50564], "temperature": 0.0, "avg_logprob": -0.1091650202870369, "compression_ratio": 1.8111111111111111, "no_speech_prob": 0.0006666012341156602}, {"id": 477, "seek": 283032, "start": 2834.32, "end": 2839.92, "text": " list, right? So it's going, there's these arrows which saying it's a link to the next and the next", "tokens": [50564, 1329, 11, 558, 30, 407, 309, 311, 516, 11, 456, 311, 613, 19669, 597, 1566, 309, 311, 257, 2113, 281, 264, 958, 293, 264, 958, 50844], "temperature": 0.0, "avg_logprob": -0.1091650202870369, "compression_ratio": 1.8111111111111111, "no_speech_prob": 0.0006666012341156602}, {"id": 478, "seek": 283032, "start": 2839.92, "end": 2845.52, "text": " and the next. And here it's going back to where it was before. And if the device driver somehow gets", "tokens": [50844, 293, 264, 958, 13, 400, 510, 309, 311, 516, 646, 281, 689, 309, 390, 949, 13, 400, 498, 264, 4302, 6787, 6063, 2170, 51124], "temperature": 0.0, "avg_logprob": -0.1091650202870369, "compression_ratio": 1.8111111111111111, "no_speech_prob": 0.0006666012341156602}, {"id": 479, "seek": 283032, "start": 2845.52, "end": 2850.4, "text": " confused and doesn't realize it's already seen this, we're in a world of trouble. Because now", "tokens": [51124, 9019, 293, 1177, 380, 4325, 309, 311, 1217, 1612, 341, 11, 321, 434, 294, 257, 1002, 295, 5253, 13, 1436, 586, 51368], "temperature": 0.0, "avg_logprob": -0.1091650202870369, "compression_ratio": 1.8111111111111111, "no_speech_prob": 0.0006666012341156602}, {"id": 480, "seek": 283032, "start": 2850.4, "end": 2857.28, "text": " what it's going to do is it's going to just spin on this thing forever. And so what's the termination", "tokens": [51368, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 281, 445, 6060, 322, 341, 551, 5680, 13, 400, 370, 437, 311, 264, 1433, 2486, 51712], "temperature": 0.0, "avg_logprob": -0.1091650202870369, "compression_ratio": 1.8111111111111111, "no_speech_prob": 0.0006666012341156602}, {"id": 481, "seek": 285728, "start": 2857.28, "end": 2862.8, "text": " argument? So here I've put a little picture of a post-it note in an effort to say, oh yeah,", "tokens": [50364, 6770, 30, 407, 510, 286, 600, 829, 257, 707, 3036, 295, 257, 2183, 12, 270, 3637, 294, 364, 4630, 281, 584, 11, 1954, 1338, 11, 50640], "temperature": 0.0, "avg_logprob": -0.10090314596891403, "compression_ratio": 1.941908713692946, "no_speech_prob": 0.010326409712433815}, {"id": 482, "seek": 285728, "start": 2862.8, "end": 2867.2000000000003, "text": " remember this. Okay. So imagine we've been here and we've left a post-it note saying,", "tokens": [50640, 1604, 341, 13, 1033, 13, 407, 3811, 321, 600, 668, 510, 293, 321, 600, 1411, 257, 2183, 12, 270, 3637, 1566, 11, 50860], "temperature": 0.0, "avg_logprob": -0.10090314596891403, "compression_ratio": 1.941908713692946, "no_speech_prob": 0.010326409712433815}, {"id": 483, "seek": 285728, "start": 2867.2000000000003, "end": 2871.36, "text": " remember this, don't forget this. And we've gone here and we've gone here and we've gone here.", "tokens": [50860, 1604, 341, 11, 500, 380, 2870, 341, 13, 400, 321, 600, 2780, 510, 293, 321, 600, 2780, 510, 293, 321, 600, 2780, 510, 13, 51068], "temperature": 0.0, "avg_logprob": -0.10090314596891403, "compression_ratio": 1.941908713692946, "no_speech_prob": 0.010326409712433815}, {"id": 484, "seek": 285728, "start": 2871.36, "end": 2876.0800000000004, "text": " What's the termination argument? Well, there's actually two list segments. There's the part we", "tokens": [51068, 708, 311, 264, 1433, 2486, 6770, 30, 1042, 11, 456, 311, 767, 732, 1329, 19904, 13, 821, 311, 264, 644, 321, 51304], "temperature": 0.0, "avg_logprob": -0.10090314596891403, "compression_ratio": 1.941908713692946, "no_speech_prob": 0.010326409712433815}, {"id": 485, "seek": 285728, "start": 2876.0800000000004, "end": 2882.0800000000004, "text": " haven't viewed before. And there's the part that we have viewed before. And what's the size of this?", "tokens": [51304, 2378, 380, 19174, 949, 13, 400, 456, 311, 264, 644, 300, 321, 362, 19174, 949, 13, 400, 437, 311, 264, 2744, 295, 341, 30, 51604], "temperature": 0.0, "avg_logprob": -0.10090314596891403, "compression_ratio": 1.941908713692946, "no_speech_prob": 0.010326409712433815}, {"id": 486, "seek": 288208, "start": 2882.08, "end": 2888.3199999999997, "text": " Well, it's two nodes. And the size we haven't seen yet is two nodes. And so when we go another link,", "tokens": [50364, 1042, 11, 309, 311, 732, 13891, 13, 400, 264, 2744, 321, 2378, 380, 1612, 1939, 307, 732, 13891, 13, 400, 370, 562, 321, 352, 1071, 2113, 11, 50676], "temperature": 0.0, "avg_logprob": -0.07708197658501782, "compression_ratio": 1.728110599078341, "no_speech_prob": 0.004330700263381004}, {"id": 487, "seek": 288208, "start": 2890.3199999999997, "end": 2895.36, "text": " now it's three to one. And so this is where we're going to get the termination argument, right?", "tokens": [50776, 586, 309, 311, 1045, 281, 472, 13, 400, 370, 341, 307, 689, 321, 434, 516, 281, 483, 264, 1433, 2486, 6770, 11, 558, 30, 51028], "temperature": 0.0, "avg_logprob": -0.07708197658501782, "compression_ratio": 1.728110599078341, "no_speech_prob": 0.004330700263381004}, {"id": 488, "seek": 288208, "start": 2895.36, "end": 2901.2, "text": " We can take a transition from some state to some other state and look, it went from two", "tokens": [51028, 492, 393, 747, 257, 6034, 490, 512, 1785, 281, 512, 661, 1785, 293, 574, 11, 309, 1437, 490, 732, 51320], "temperature": 0.0, "avg_logprob": -0.07708197658501782, "compression_ratio": 1.728110599078341, "no_speech_prob": 0.004330700263381004}, {"id": 489, "seek": 288208, "start": 2901.2, "end": 2905.7599999999998, "text": " to one. And that's going to be, you know, the function we're typically going to use is the", "tokens": [51320, 281, 472, 13, 400, 300, 311, 516, 281, 312, 11, 291, 458, 11, 264, 2445, 321, 434, 5850, 516, 281, 764, 307, 264, 51548], "temperature": 0.0, "avg_logprob": -0.07708197658501782, "compression_ratio": 1.728110599078341, "no_speech_prob": 0.004330700263381004}, {"id": 490, "seek": 290576, "start": 2905.76, "end": 2914.0800000000004, "text": " number of links back to the node that's the head of the list. So there you go. So we're mapping.", "tokens": [50364, 1230, 295, 6123, 646, 281, 264, 9984, 300, 311, 264, 1378, 295, 264, 1329, 13, 407, 456, 291, 352, 13, 407, 321, 434, 18350, 13, 50780], "temperature": 0.0, "avg_logprob": -0.11562814162327693, "compression_ratio": 1.5867768595041323, "no_speech_prob": 0.0043307943269610405}, {"id": 491, "seek": 290576, "start": 2914.0800000000004, "end": 2918.7200000000003, "text": " And so the termination arguments are kind of like that. So this paper sort of recognizes,", "tokens": [50780, 400, 370, 264, 1433, 2486, 12869, 366, 733, 295, 411, 300, 13, 407, 341, 3035, 1333, 295, 26564, 11, 51012], "temperature": 0.0, "avg_logprob": -0.11562814162327693, "compression_ratio": 1.5867768595041323, "no_speech_prob": 0.0043307943269610405}, {"id": 492, "seek": 290576, "start": 2918.7200000000003, "end": 2925.5200000000004, "text": " this is with Peter Ahern and his postdoc and his PhD student, for example, Josh Burdine and myself.", "tokens": [51012, 341, 307, 365, 6508, 316, 7894, 293, 702, 2183, 39966, 293, 702, 14476, 3107, 11, 337, 1365, 11, 9785, 7031, 67, 533, 293, 2059, 13, 51352], "temperature": 0.0, "avg_logprob": -0.11562814162327693, "compression_ratio": 1.5867768595041323, "no_speech_prob": 0.0043307943269610405}, {"id": 493, "seek": 290576, "start": 2926.88, "end": 2930.0, "text": " And then after that, we're like, hey, let's keep working together. This is pretty cool. So then I", "tokens": [51420, 400, 550, 934, 300, 11, 321, 434, 411, 11, 4177, 11, 718, 311, 1066, 1364, 1214, 13, 639, 307, 1238, 1627, 13, 407, 550, 286, 51576], "temperature": 0.0, "avg_logprob": -0.11562814162327693, "compression_ratio": 1.5867768595041323, "no_speech_prob": 0.0043307943269610405}, {"id": 494, "seek": 293000, "start": 2930.0, "end": 2937.76, "text": " joined this thing with gang, I guess, called the East London Massive, that that was a collective of", "tokens": [50364, 6869, 341, 551, 365, 10145, 11, 286, 2041, 11, 1219, 264, 6747, 7042, 10482, 488, 11, 300, 300, 390, 257, 12590, 295, 50752], "temperature": 0.0, "avg_logprob": -0.20235272671313995, "compression_ratio": 1.634453781512605, "no_speech_prob": 0.0029804296791553497}, {"id": 495, "seek": 293000, "start": 2937.76, "end": 2945.68, "text": " people interested in reasoning about data structures. And so Josh, who was his PhD student and postdoc", "tokens": [50752, 561, 3102, 294, 21577, 466, 1412, 9227, 13, 400, 370, 9785, 11, 567, 390, 702, 14476, 3107, 293, 2183, 39966, 51148], "temperature": 0.0, "avg_logprob": -0.20235272671313995, "compression_ratio": 1.634453781512605, "no_speech_prob": 0.0029804296791553497}, {"id": 496, "seek": 293000, "start": 2945.68, "end": 2951.76, "text": " and Samin, who was his ex PhD, had graduated and was a PhD student and I here ended up building", "tokens": [51148, 293, 4832, 259, 11, 567, 390, 702, 454, 14476, 11, 632, 13693, 293, 390, 257, 14476, 3107, 293, 286, 510, 4590, 493, 2390, 51452], "temperature": 0.0, "avg_logprob": -0.20235272671313995, "compression_ratio": 1.634453781512605, "no_speech_prob": 0.0029804296791553497}, {"id": 497, "seek": 293000, "start": 2951.76, "end": 2957.04, "text": " this tool called Slayer, which reasoned about shapes on behalf of the termination purpose.", "tokens": [51452, 341, 2290, 1219, 6187, 11167, 11, 597, 1778, 292, 466, 10854, 322, 9490, 295, 264, 1433, 2486, 4334, 13, 51716], "temperature": 0.0, "avg_logprob": -0.20235272671313995, "compression_ratio": 1.634453781512605, "no_speech_prob": 0.0029804296791553497}, {"id": 498, "seek": 295704, "start": 2957.04, "end": 2964.32, "text": " We'd run this ahead of time. And that was very, very powerful. And it was also very powerful", "tokens": [50364, 492, 1116, 1190, 341, 2286, 295, 565, 13, 400, 300, 390, 588, 11, 588, 4005, 13, 400, 309, 390, 611, 588, 4005, 50728], "temperature": 0.0, "avg_logprob": -0.08855066543970352, "compression_ratio": 1.8527131782945736, "no_speech_prob": 0.0005883481935597956}, {"id": 499, "seek": 295704, "start": 2964.32, "end": 2971.36, "text": " because it turns out that many of these 85% of crashes were actually shape oriented. The device", "tokens": [50728, 570, 309, 4523, 484, 300, 867, 295, 613, 14695, 4, 295, 28642, 645, 767, 3909, 21841, 13, 440, 4302, 51080], "temperature": 0.0, "avg_logprob": -0.08855066543970352, "compression_ratio": 1.8527131782945736, "no_speech_prob": 0.0005883481935597956}, {"id": 500, "seek": 295704, "start": 2971.36, "end": 2976.24, "text": " driver would come in, it would modify that list, not leave it in a good state. And then the device", "tokens": [51080, 6787, 576, 808, 294, 11, 309, 576, 16927, 300, 1329, 11, 406, 1856, 309, 294, 257, 665, 1785, 13, 400, 550, 264, 4302, 51324], "temperature": 0.0, "avg_logprob": -0.08855066543970352, "compression_ratio": 1.8527131782945736, "no_speech_prob": 0.0005883481935597956}, {"id": 501, "seek": 295704, "start": 2976.24, "end": 2980.16, "text": " driver would come back in, start walking that list, it wouldn't be in a good state. And then", "tokens": [51324, 6787, 576, 808, 646, 294, 11, 722, 4494, 300, 1329, 11, 309, 2759, 380, 312, 294, 257, 665, 1785, 13, 400, 550, 51520], "temperature": 0.0, "avg_logprob": -0.08855066543970352, "compression_ratio": 1.8527131782945736, "no_speech_prob": 0.0005883481935597956}, {"id": 502, "seek": 295704, "start": 2980.16, "end": 2985.04, "text": " horrible things would happen. And so it turned out this is a whole other research area, basically", "tokens": [51520, 9263, 721, 576, 1051, 13, 400, 370, 309, 3574, 484, 341, 307, 257, 1379, 661, 2132, 1859, 11, 1936, 51764], "temperature": 0.0, "avg_logprob": -0.08855066543970352, "compression_ratio": 1.8527131782945736, "no_speech_prob": 0.0005883481935597956}, {"id": 503, "seek": 298504, "start": 2985.04, "end": 2989.12, "text": " driven by determination, proving a whole bunch of different papers, some of them related to", "tokens": [50364, 9555, 538, 18432, 11, 27221, 257, 1379, 3840, 295, 819, 10577, 11, 512, 295, 552, 4077, 281, 50568], "temperature": 0.0, "avg_logprob": -0.1356806052747623, "compression_ratio": 1.6701754385964913, "no_speech_prob": 0.006687265820801258}, {"id": 504, "seek": 298504, "start": 2989.12, "end": 2994.16, "text": " determination, some of them not. But that's, you know, invite me back. I'll tell you all about", "tokens": [50568, 18432, 11, 512, 295, 552, 406, 13, 583, 300, 311, 11, 291, 458, 11, 7980, 385, 646, 13, 286, 603, 980, 291, 439, 466, 50820], "temperature": 0.0, "avg_logprob": -0.1356806052747623, "compression_ratio": 1.6701754385964913, "no_speech_prob": 0.006687265820801258}, {"id": 505, "seek": 298504, "start": 2994.16, "end": 2999.12, "text": " that. But here's an amazing thing that happened. So, so, so, so be who's in the audience. And I'm", "tokens": [50820, 300, 13, 583, 510, 311, 364, 2243, 551, 300, 2011, 13, 407, 11, 370, 11, 370, 11, 370, 312, 567, 311, 294, 264, 4034, 13, 400, 286, 478, 51068], "temperature": 0.0, "avg_logprob": -0.1356806052747623, "compression_ratio": 1.6701754385964913, "no_speech_prob": 0.006687265820801258}, {"id": 506, "seek": 298504, "start": 2999.12, "end": 3006.72, "text": " also married to for past 27 years, or I can't remember now, sorry. And Peter, that's this chat,", "tokens": [51068, 611, 5259, 281, 337, 1791, 7634, 924, 11, 420, 286, 393, 380, 1604, 586, 11, 2597, 13, 400, 6508, 11, 300, 311, 341, 5081, 11, 51448], "temperature": 0.0, "avg_logprob": -0.1356806052747623, "compression_ratio": 1.6701754385964913, "no_speech_prob": 0.006687265820801258}, {"id": 507, "seek": 298504, "start": 3006.72, "end": 3013.84, "text": " they started a company that made a Slayer like tool. And, and they sold it to Facebook. And you", "tokens": [51448, 436, 1409, 257, 2237, 300, 1027, 257, 6187, 11167, 411, 2290, 13, 400, 11, 293, 436, 3718, 309, 281, 4384, 13, 400, 291, 51804], "temperature": 0.0, "avg_logprob": -0.1356806052747623, "compression_ratio": 1.6701754385964913, "no_speech_prob": 0.006687265820801258}, {"id": 508, "seek": 301384, "start": 3013.84, "end": 3018.88, "text": " can still use it today. So it's called FB infer now, that you can go to this FB infer website and", "tokens": [50364, 393, 920, 764, 309, 965, 13, 407, 309, 311, 1219, 479, 33, 13596, 586, 11, 300, 291, 393, 352, 281, 341, 479, 33, 13596, 3144, 293, 50616], "temperature": 0.0, "avg_logprob": -0.12867256224624754, "compression_ratio": 1.8396946564885497, "no_speech_prob": 0.0005526395980268717}, {"id": 509, "seek": 301384, "start": 3018.88, "end": 3026.08, "text": " find out how to use it. And, and, and that really got me to thinking, like, maybe it's time to leave", "tokens": [50616, 915, 484, 577, 281, 764, 309, 13, 400, 11, 293, 11, 293, 300, 534, 658, 385, 281, 1953, 11, 411, 11, 1310, 309, 311, 565, 281, 1856, 50976], "temperature": 0.0, "avg_logprob": -0.12867256224624754, "compression_ratio": 1.8396946564885497, "no_speech_prob": 0.0005526395980268717}, {"id": 510, "seek": 301384, "start": 3026.08, "end": 3031.04, "text": " the research lab and go take things into product really, really into production at a level that,", "tokens": [50976, 264, 2132, 2715, 293, 352, 747, 721, 666, 1674, 534, 11, 534, 666, 4265, 412, 257, 1496, 300, 11, 51224], "temperature": 0.0, "avg_logprob": -0.12867256224624754, "compression_ratio": 1.8396946564885497, "no_speech_prob": 0.0005526395980268717}, {"id": 511, "seek": 301384, "start": 3031.04, "end": 3037.6800000000003, "text": " that, that we had, that we hadn't seen before. So, so now that we sort of realized that almost", "tokens": [51224, 300, 11, 300, 321, 632, 11, 300, 321, 8782, 380, 1612, 949, 13, 407, 11, 370, 586, 300, 321, 1333, 295, 5334, 300, 1920, 51556], "temperature": 0.0, "avg_logprob": -0.12867256224624754, "compression_ratio": 1.8396946564885497, "no_speech_prob": 0.0005526395980268717}, {"id": 512, "seek": 301384, "start": 3037.6800000000003, "end": 3042.6400000000003, "text": " any mathematical statement, you know, maybe as we get closer and closer and closer to that,", "tokens": [51556, 604, 18894, 5629, 11, 291, 458, 11, 1310, 382, 321, 483, 4966, 293, 4966, 293, 4966, 281, 300, 11, 51804], "temperature": 0.0, "avg_logprob": -0.12867256224624754, "compression_ratio": 1.8396946564885497, "no_speech_prob": 0.0005526395980268717}, {"id": 513, "seek": 304264, "start": 3042.64, "end": 3046.7999999999997, "text": " this becomes more and more commercially relevant. And so that's kind of where I wanted to take", "tokens": [50364, 341, 3643, 544, 293, 544, 41751, 7340, 13, 400, 370, 300, 311, 733, 295, 689, 286, 1415, 281, 747, 50572], "temperature": 0.0, "avg_logprob": -0.1301027990020482, "compression_ratio": 1.7293233082706767, "no_speech_prob": 0.0009396757232025266}, {"id": 514, "seek": 304264, "start": 3046.7999999999997, "end": 3052.16, "text": " things. So this was the old Terminator website. Terminator is now dead. This website's gone.", "tokens": [50572, 721, 13, 407, 341, 390, 264, 1331, 19835, 31927, 3144, 13, 19835, 31927, 307, 586, 3116, 13, 639, 3144, 311, 2780, 13, 50840], "temperature": 0.0, "avg_logprob": -0.1301027990020482, "compression_ratio": 1.7293233082706767, "no_speech_prob": 0.0009396757232025266}, {"id": 515, "seek": 304264, "start": 3052.16, "end": 3058.24, "text": " You have to go to the way back machine to find it. But what it did was pretty interesting. It", "tokens": [50840, 509, 362, 281, 352, 281, 264, 636, 646, 3479, 281, 915, 309, 13, 583, 437, 309, 630, 390, 1238, 1880, 13, 467, 51144], "temperature": 0.0, "avg_logprob": -0.1301027990020482, "compression_ratio": 1.7293233082706767, "no_speech_prob": 0.0009396757232025266}, {"id": 516, "seek": 304264, "start": 3059.04, "end": 3062.96, "text": " inspired a new class of tools. There's a whole bunch of termination provers now that you could use.", "tokens": [51184, 7547, 257, 777, 1508, 295, 3873, 13, 821, 311, 257, 1379, 3840, 295, 1433, 2486, 447, 840, 586, 300, 291, 727, 764, 13, 51380], "temperature": 0.0, "avg_logprob": -0.1301027990020482, "compression_ratio": 1.7293233082706767, "no_speech_prob": 0.0009396757232025266}, {"id": 517, "seek": 304264, "start": 3062.96, "end": 3067.04, "text": " There's whole sessions at conferences on termination. There's a pretty healthy", "tokens": [51380, 821, 311, 1379, 11081, 412, 22032, 322, 1433, 2486, 13, 821, 311, 257, 1238, 4627, 51584], "temperature": 0.0, "avg_logprob": -0.1301027990020482, "compression_ratio": 1.7293233082706767, "no_speech_prob": 0.0009396757232025266}, {"id": 518, "seek": 306704, "start": 3067.68, "end": 3071.2799999999997, "text": " international termination prover competition.", "tokens": [50396, 5058, 1433, 2486, 447, 331, 6211, 13, 50576], "temperature": 0.0, "avg_logprob": -0.17394343400612855, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0035929393488913774}, {"id": 519, "seek": 306704, "start": 3073.84, "end": 3078.96, "text": " Everyone can, like, a lot of people know that termination is impossible, but now it's a much,", "tokens": [50704, 5198, 393, 11, 411, 11, 257, 688, 295, 561, 458, 300, 1433, 2486, 307, 6243, 11, 457, 586, 309, 311, 257, 709, 11, 50960], "temperature": 0.0, "avg_logprob": -0.17394343400612855, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0035929393488913774}, {"id": 520, "seek": 306704, "start": 3078.96, "end": 3086.32, "text": " it's a much more nuanced situation, right? Now, most people in my field at least know", "tokens": [50960, 309, 311, 257, 709, 544, 45115, 2590, 11, 558, 30, 823, 11, 881, 561, 294, 452, 2519, 412, 1935, 458, 51328], "temperature": 0.0, "avg_logprob": -0.17394343400612855, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0035929393488913774}, {"id": 521, "seek": 306704, "start": 3086.32, "end": 3092.0, "text": " that termination is possible, but you can prove termination programs and sort of a practical", "tokens": [51328, 300, 1433, 2486, 307, 1944, 11, 457, 291, 393, 7081, 1433, 2486, 4268, 293, 1333, 295, 257, 8496, 51612], "temperature": 0.0, "avg_logprob": -0.17394343400612855, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.0035929393488913774}, {"id": 522, "seek": 309200, "start": 3092.0, "end": 3101.36, "text": " thing that can be done. But also, I think that we made pretty mean, I mean, this vogue thing is", "tokens": [50364, 551, 300, 393, 312, 1096, 13, 583, 611, 11, 286, 519, 300, 321, 1027, 1238, 914, 11, 286, 914, 11, 341, 371, 7213, 551, 307, 50832], "temperature": 0.0, "avg_logprob": -0.22741357803344728, "compression_ratio": 1.7053571428571428, "no_speech_prob": 0.013217722997069359}, {"id": 523, "seek": 309200, "start": 3101.36, "end": 3105.68, "text": " obviously a joke. I mean, I mean, it was real, but obviously that made no material impact on the", "tokens": [50832, 2745, 257, 7647, 13, 286, 914, 11, 286, 914, 11, 309, 390, 957, 11, 457, 2745, 300, 1027, 572, 2527, 2712, 322, 264, 51048], "temperature": 0.0, "avg_logprob": -0.22741357803344728, "compression_ratio": 1.7053571428571428, "no_speech_prob": 0.013217722997069359}, {"id": 524, "seek": 309200, "start": 3105.68, "end": 3110.72, "text": " IT community. But I think that the articles in Wired, and Economist, and Financial Times, and", "tokens": [51048, 6783, 1768, 13, 583, 286, 519, 300, 264, 11290, 294, 343, 1824, 11, 293, 14821, 468, 11, 293, 25560, 11366, 11, 293, 51300], "temperature": 0.0, "avg_logprob": -0.22741357803344728, "compression_ratio": 1.7053571428571428, "no_speech_prob": 0.013217722997069359}, {"id": 525, "seek": 309200, "start": 3110.72, "end": 3116.56, "text": " Science did, and this great Sinin the Terminator article of the Scientific American. So I think", "tokens": [51300, 8976, 630, 11, 293, 341, 869, 11187, 259, 264, 19835, 31927, 7222, 295, 264, 47437, 2665, 13, 407, 286, 519, 51592], "temperature": 0.0, "avg_logprob": -0.22741357803344728, "compression_ratio": 1.7053571428571428, "no_speech_prob": 0.013217722997069359}, {"id": 526, "seek": 311656, "start": 3116.56, "end": 3122.96, "text": " that these helped the IT community understand that termination isn't like a death sentence.", "tokens": [50364, 300, 613, 4254, 264, 6783, 1768, 1223, 300, 1433, 2486, 1943, 380, 411, 257, 2966, 8174, 13, 50684], "temperature": 0.0, "avg_logprob": -0.11428688489473783, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.012620700523257256}, {"id": 527, "seek": 311656, "start": 3124.72, "end": 3130.96, "text": " Okay, so that's the end of my Cambridge story. As I said, yeah, so I mean, I said goodbye to MSR.", "tokens": [50772, 1033, 11, 370, 300, 311, 264, 917, 295, 452, 24876, 1657, 13, 1018, 286, 848, 11, 1338, 11, 370, 286, 914, 11, 286, 848, 12084, 281, 7395, 49, 13, 51084], "temperature": 0.0, "avg_logprob": -0.11428688489473783, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.012620700523257256}, {"id": 528, "seek": 311656, "start": 3130.96, "end": 3136.24, "text": " I've gone on to Amazon. That's three talks. I can tell you all about that, and I'll tell you", "tokens": [51084, 286, 600, 2780, 322, 281, 6795, 13, 663, 311, 1045, 6686, 13, 286, 393, 980, 291, 439, 466, 300, 11, 293, 286, 603, 980, 291, 51348], "temperature": 0.0, "avg_logprob": -0.11428688489473783, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.012620700523257256}, {"id": 529, "seek": 311656, "start": 3136.24, "end": 3139.92, "text": " about that at drinks if you want to know more about it. But I've tried not to talk about the", "tokens": [51348, 466, 300, 412, 12142, 498, 291, 528, 281, 458, 544, 466, 309, 13, 583, 286, 600, 3031, 406, 281, 751, 466, 264, 51532], "temperature": 0.0, "avg_logprob": -0.11428688489473783, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.012620700523257256}, {"id": 530, "seek": 311656, "start": 3139.92, "end": 3144.32, "text": " Amazon work because that's all I do all these days. So I just, I thought it'd be fun to come here", "tokens": [51532, 6795, 589, 570, 300, 311, 439, 286, 360, 439, 613, 1708, 13, 407, 286, 445, 11, 286, 1194, 309, 1116, 312, 1019, 281, 808, 510, 51752], "temperature": 0.0, "avg_logprob": -0.11428688489473783, "compression_ratio": 1.6596491228070176, "no_speech_prob": 0.012620700523257256}, {"id": 531, "seek": 314432, "start": 3144.32, "end": 3150.0, "text": " and tell you this Ramsey Turing story, and I hope you had fun. So with that, I'll", "tokens": [50364, 293, 980, 291, 341, 9078, 7399, 314, 1345, 1657, 11, 293, 286, 1454, 291, 632, 1019, 13, 407, 365, 300, 11, 286, 603, 50648], "temperature": 0.0, "avg_logprob": -0.15800737565563572, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.000938464654609561}, {"id": 532, "seek": 314432, "start": 3151.28, "end": 3153.6000000000004, "text": " gavel this to a close, and I'm happy to take questions.", "tokens": [50712, 5959, 779, 341, 281, 257, 1998, 11, 293, 286, 478, 2055, 281, 747, 1651, 13, 50828], "temperature": 0.0, "avg_logprob": -0.15800737565563572, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.000938464654609561}, {"id": 533, "seek": 314432, "start": 3155.84, "end": 3162.0, "text": " Well, thank you for that wonderful talk. Let's have some questions. And we have a microphone to", "tokens": [50940, 1042, 11, 1309, 291, 337, 300, 3715, 751, 13, 961, 311, 362, 512, 1651, 13, 400, 321, 362, 257, 10952, 281, 51248], "temperature": 0.0, "avg_logprob": -0.15800737565563572, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.000938464654609561}, {"id": 534, "seek": 314432, "start": 3162.0, "end": 3170.96, "text": " go around. So first question. Byron, great talk, fantastic talk. Thank you. Maybe it's a relief", "tokens": [51248, 352, 926, 13, 407, 700, 1168, 13, 3146, 2044, 11, 869, 751, 11, 5456, 751, 13, 1044, 291, 13, 2704, 309, 311, 257, 10915, 51696], "temperature": 0.0, "avg_logprob": -0.15800737565563572, "compression_ratio": 1.5446009389671362, "no_speech_prob": 0.000938464654609561}, {"id": 535, "seek": 317096, "start": 3170.96, "end": 3176.32, "text": " that you didn't mention artificial intelligence because it's so much in the in both these days.", "tokens": [50364, 300, 291, 994, 380, 2152, 11677, 7599, 570, 309, 311, 370, 709, 294, 264, 294, 1293, 613, 1708, 13, 50632], "temperature": 0.0, "avg_logprob": -0.14708153101114127, "compression_ratio": 1.7018867924528303, "no_speech_prob": 0.03550633415579796}, {"id": 536, "seek": 317096, "start": 3177.92, "end": 3182.4, "text": " But I suppose I would have asked about that. I mean, obviously Turing was famous for that,", "tokens": [50712, 583, 286, 7297, 286, 576, 362, 2351, 466, 300, 13, 286, 914, 11, 2745, 314, 1345, 390, 4618, 337, 300, 11, 50936], "temperature": 0.0, "avg_logprob": -0.14708153101114127, "compression_ratio": 1.7018867924528303, "no_speech_prob": 0.03550633415579796}, {"id": 537, "seek": 317096, "start": 3182.4, "end": 3186.96, "text": " but I mean, how do you see maybe today's developments in artificial intelligence having an", "tokens": [50936, 457, 286, 914, 11, 577, 360, 291, 536, 1310, 965, 311, 20862, 294, 11677, 7599, 1419, 364, 51164], "temperature": 0.0, "avg_logprob": -0.14708153101114127, "compression_ratio": 1.7018867924528303, "no_speech_prob": 0.03550633415579796}, {"id": 538, "seek": 317096, "start": 3186.96, "end": 3190.64, "text": " impact on the kind of, you know, automated reasoning that you're talking about?", "tokens": [51164, 2712, 322, 264, 733, 295, 11, 291, 458, 11, 18473, 21577, 300, 291, 434, 1417, 466, 30, 51348], "temperature": 0.0, "avg_logprob": -0.14708153101114127, "compression_ratio": 1.7018867924528303, "no_speech_prob": 0.03550633415579796}, {"id": 539, "seek": 317096, "start": 3190.64, "end": 3196.64, "text": " Yeah, I'm very excited about so the in the automated reasoning sometimes is a really terrible", "tokens": [51348, 865, 11, 286, 478, 588, 2919, 466, 370, 264, 294, 264, 18473, 21577, 2171, 307, 257, 534, 6237, 51648], "temperature": 0.0, "avg_logprob": -0.14708153101114127, "compression_ratio": 1.7018867924528303, "no_speech_prob": 0.03550633415579796}, {"id": 540, "seek": 319664, "start": 3196.72, "end": 3201.12, "text": " name for it because it's rather not automated, right? Like there's there's a lot of tools,", "tokens": [50368, 1315, 337, 309, 570, 309, 311, 2831, 406, 18473, 11, 558, 30, 1743, 456, 311, 456, 311, 257, 688, 295, 3873, 11, 50588], "temperature": 0.0, "avg_logprob": -0.1332250903634464, "compression_ratio": 1.8537414965986394, "no_speech_prob": 0.008059242740273476}, {"id": 541, "seek": 319664, "start": 3201.12, "end": 3205.68, "text": " there's tools like Lean, Paul Light, Isabelle, you know, I can name a whole bunch of tools,", "tokens": [50588, 456, 311, 3873, 411, 49303, 11, 4552, 8279, 11, 35686, 4434, 11, 291, 458, 11, 286, 393, 1315, 257, 1379, 3840, 295, 3873, 11, 50816], "temperature": 0.0, "avg_logprob": -0.1332250903634464, "compression_ratio": 1.8537414965986394, "no_speech_prob": 0.008059242740273476}, {"id": 542, "seek": 319664, "start": 3205.68, "end": 3210.3199999999997, "text": " and they require a human to sit there and poke it to make it do the right thing.", "tokens": [50816, 293, 436, 3651, 257, 1952, 281, 1394, 456, 293, 19712, 309, 281, 652, 309, 360, 264, 558, 551, 13, 51048], "temperature": 0.0, "avg_logprob": -0.1332250903634464, "compression_ratio": 1.8537414965986394, "no_speech_prob": 0.008059242740273476}, {"id": 543, "seek": 319664, "start": 3210.3199999999997, "end": 3215.3599999999997, "text": " You ultimately get a proof that it's the checks, the checking is automating, but the finding is", "tokens": [51048, 509, 6284, 483, 257, 8177, 300, 309, 311, 264, 13834, 11, 264, 8568, 307, 3553, 990, 11, 457, 264, 5006, 307, 51300], "temperature": 0.0, "avg_logprob": -0.1332250903634464, "compression_ratio": 1.8537414965986394, "no_speech_prob": 0.008059242740273476}, {"id": 544, "seek": 319664, "start": 3215.3599999999997, "end": 3220.64, "text": " not. And those tools are rather more powerful in theory than the fully automated tools because", "tokens": [51300, 406, 13, 400, 729, 3873, 366, 2831, 544, 4005, 294, 5261, 813, 264, 4498, 18473, 3873, 570, 51564], "temperature": 0.0, "avg_logprob": -0.1332250903634464, "compression_ratio": 1.8537414965986394, "no_speech_prob": 0.008059242740273476}, {"id": 545, "seek": 319664, "start": 3220.64, "end": 3225.68, "text": " the automated tools, because the problem is undecidable, cut a bunch of corners about what", "tokens": [51564, 264, 18473, 3873, 11, 570, 264, 1154, 307, 674, 3045, 38089, 11, 1723, 257, 3840, 295, 12413, 466, 437, 51816], "temperature": 0.0, "avg_logprob": -0.1332250903634464, "compression_ratio": 1.8537414965986394, "no_speech_prob": 0.008059242740273476}, {"id": 546, "seek": 322568, "start": 3225.68, "end": 3230.24, "text": " they can prove. So they can prove a much more limited set of things, whereas a super genius", "tokens": [50364, 436, 393, 7081, 13, 407, 436, 393, 7081, 257, 709, 544, 5567, 992, 295, 721, 11, 9735, 257, 1687, 14017, 50592], "temperature": 0.0, "avg_logprob": -0.13359033933249853, "compression_ratio": 1.6798245614035088, "no_speech_prob": 0.0009397715330123901}, {"id": 547, "seek": 322568, "start": 3230.24, "end": 3234.64, "text": " sitting together with one of these tools that are not automated, as automated can do incredible", "tokens": [50592, 3798, 1214, 365, 472, 295, 613, 3873, 300, 366, 406, 18473, 11, 382, 18473, 393, 360, 4651, 50812], "temperature": 0.0, "avg_logprob": -0.13359033933249853, "compression_ratio": 1.6798245614035088, "no_speech_prob": 0.0009397715330123901}, {"id": 548, "seek": 322568, "start": 3234.64, "end": 3240.64, "text": " things. So all of your proofs of like the four color theorem, the Kepler conjecture, you know,", "tokens": [50812, 721, 13, 407, 439, 295, 428, 8177, 82, 295, 411, 264, 1451, 2017, 20904, 11, 264, 3189, 22732, 416, 1020, 540, 11, 291, 458, 11, 51112], "temperature": 0.0, "avg_logprob": -0.13359033933249853, "compression_ratio": 1.6798245614035088, "no_speech_prob": 0.0009397715330123901}, {"id": 549, "seek": 322568, "start": 3240.64, "end": 3248.3199999999997, "text": " that have been done with with with these tools have required a human. And so what we're seeing right", "tokens": [51112, 300, 362, 668, 1096, 365, 365, 365, 613, 3873, 362, 4739, 257, 1952, 13, 400, 370, 437, 321, 434, 2577, 558, 51496], "temperature": 0.0, "avg_logprob": -0.13359033933249853, "compression_ratio": 1.6798245614035088, "no_speech_prob": 0.0009397715330123901}, {"id": 550, "seek": 324832, "start": 3248.32, "end": 3258.32, "text": " now is that the generative AI chat GPT style tools are able to do these. So that's a really", "tokens": [50364, 586, 307, 300, 264, 1337, 1166, 7318, 5081, 26039, 51, 3758, 3873, 366, 1075, 281, 360, 613, 13, 407, 300, 311, 257, 534, 50864], "temperature": 0.0, "avg_logprob": -0.16055491765340169, "compression_ratio": 1.793774319066148, "no_speech_prob": 0.09264425188302994}, {"id": 551, "seek": 324832, "start": 3258.32, "end": 3264.32, "text": " amazing time. So what they can because they're training on all the past proofs. And all the", "tokens": [50864, 2243, 565, 13, 407, 437, 436, 393, 570, 436, 434, 3097, 322, 439, 264, 1791, 8177, 82, 13, 400, 439, 264, 51164], "temperature": 0.0, "avg_logprob": -0.16055491765340169, "compression_ratio": 1.793774319066148, "no_speech_prob": 0.09264425188302994}, {"id": 552, "seek": 324832, "start": 3264.32, "end": 3268.2400000000002, "text": " tools and these tools are super hard to use. But guess what, all the people who were making them", "tokens": [51164, 3873, 293, 613, 3873, 366, 1687, 1152, 281, 764, 13, 583, 2041, 437, 11, 439, 264, 561, 567, 645, 1455, 552, 51360], "temperature": 0.0, "avg_logprob": -0.16055491765340169, "compression_ratio": 1.793774319066148, "no_speech_prob": 0.09264425188302994}, {"id": 553, "seek": 324832, "start": 3268.2400000000002, "end": 3273.1200000000003, "text": " able to use wrote papers about it, and provided scripts and the scripts are on GitHub and the", "tokens": [51360, 1075, 281, 764, 4114, 10577, 466, 309, 11, 293, 5649, 23294, 293, 264, 23294, 366, 322, 23331, 293, 264, 51604], "temperature": 0.0, "avg_logprob": -0.16055491765340169, "compression_ratio": 1.793774319066148, "no_speech_prob": 0.09264425188302994}, {"id": 554, "seek": 324832, "start": 3273.1200000000003, "end": 3277.92, "text": " tools have trained on that. So now they're able to say, you know, like, hey, you know,", "tokens": [51604, 3873, 362, 8895, 322, 300, 13, 407, 586, 436, 434, 1075, 281, 584, 11, 291, 458, 11, 411, 11, 4177, 11, 291, 458, 11, 51844], "temperature": 0.0, "avg_logprob": -0.16055491765340169, "compression_ratio": 1.793774319066148, "no_speech_prob": 0.09264425188302994}, {"id": 555, "seek": 327792, "start": 3277.92, "end": 3283.92, "text": " find me a proof and haul light of XYZ. And they're not terrible. So I so I think that's a really", "tokens": [50364, 915, 385, 257, 8177, 293, 21167, 1442, 295, 48826, 57, 13, 400, 436, 434, 406, 6237, 13, 407, 286, 370, 286, 519, 300, 311, 257, 534, 50664], "temperature": 0.0, "avg_logprob": -0.1398135454226763, "compression_ratio": 1.4818652849740932, "no_speech_prob": 0.0005700844340026379}, {"id": 556, "seek": 327792, "start": 3283.92, "end": 3291.2000000000003, "text": " amazing thing. So making the tools easier. The other the observation that I'll just sort of", "tokens": [50664, 2243, 551, 13, 407, 1455, 264, 3873, 3571, 13, 440, 661, 264, 14816, 300, 286, 603, 445, 1333, 295, 51028], "temperature": 0.0, "avg_logprob": -0.1398135454226763, "compression_ratio": 1.4818652849740932, "no_speech_prob": 0.0005700844340026379}, {"id": 557, "seek": 327792, "start": 3291.2000000000003, "end": 3301.04, "text": " put on the table there is that when LLMs lie to you, that's incorrectness. And guess what we know", "tokens": [51028, 829, 322, 264, 3199, 456, 307, 300, 562, 441, 43, 26386, 4544, 281, 291, 11, 300, 311, 18424, 1287, 13, 400, 2041, 437, 321, 458, 51520], "temperature": 0.0, "avg_logprob": -0.1398135454226763, "compression_ratio": 1.4818652849740932, "no_speech_prob": 0.0005700844340026379}, {"id": 558, "seek": 330104, "start": 3301.04, "end": 3306.96, "text": " how to do, right? There's there's there's statements that are incorrect. And, and, and,", "tokens": [50364, 577, 281, 360, 11, 558, 30, 821, 311, 456, 311, 456, 311, 12363, 300, 366, 18424, 13, 400, 11, 293, 11, 293, 11, 50660], "temperature": 0.0, "avg_logprob": -0.18380337135464536, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.021251674741506577}, {"id": 559, "seek": 330104, "start": 3306.96, "end": 3311.36, "text": " and, you know, it's not escaped the notice of the community that that's something we could", "tokens": [50660, 293, 11, 291, 458, 11, 309, 311, 406, 20397, 264, 3449, 295, 264, 1768, 300, 300, 311, 746, 321, 727, 50880], "temperature": 0.0, "avg_logprob": -0.18380337135464536, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.021251674741506577}, {"id": 560, "seek": 330104, "start": 3311.36, "end": 3315.6, "text": " potentially solve. So but that's, that's, you know, that's a whole new area.", "tokens": [50880, 7263, 5039, 13, 407, 457, 300, 311, 11, 300, 311, 11, 291, 458, 11, 300, 311, 257, 1379, 777, 1859, 13, 51092], "temperature": 0.0, "avg_logprob": -0.18380337135464536, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.021251674741506577}, {"id": 561, "seek": 330104, "start": 3319.04, "end": 3319.92, "text": " There's a question there.", "tokens": [51264, 821, 311, 257, 1168, 456, 13, 51308], "temperature": 0.0, "avg_logprob": -0.18380337135464536, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.021251674741506577}, {"id": 562, "seek": 330104, "start": 3322.16, "end": 3328.08, "text": " Any, any thoughts on why you explain how you took the Frank, Frank Ramsey staff and the", "tokens": [51420, 2639, 11, 604, 4598, 322, 983, 291, 2903, 577, 291, 1890, 264, 6823, 11, 6823, 9078, 7399, 3525, 293, 264, 51716], "temperature": 0.0, "avg_logprob": -0.18380337135464536, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.021251674741506577}, {"id": 563, "seek": 332808, "start": 3328.08, "end": 3332.16, "text": " Turing staff, and you put it together and you move forward for a subset of the problems?", "tokens": [50364, 314, 1345, 3525, 11, 293, 291, 829, 309, 1214, 293, 291, 1286, 2128, 337, 257, 25993, 295, 264, 2740, 30, 50568], "temperature": 0.0, "avg_logprob": -0.18083238194131443, "compression_ratio": 1.6762589928057554, "no_speech_prob": 0.000923934334423393}, {"id": 564, "seek": 332808, "start": 3332.16, "end": 3338.48, "text": " Any thoughts why Turing didn't do that himself, given that, presumably, they, they knew each", "tokens": [50568, 2639, 4598, 983, 314, 1345, 994, 380, 360, 300, 3647, 11, 2212, 300, 11, 26742, 11, 436, 11, 436, 2586, 1184, 50884], "temperature": 0.0, "avg_logprob": -0.18083238194131443, "compression_ratio": 1.6762589928057554, "no_speech_prob": 0.000923934334423393}, {"id": 565, "seek": 332808, "start": 3338.48, "end": 3343.84, "text": " of them pretty well and charged each other intellectually? Yeah, so so as so the part where", "tokens": [50884, 295, 552, 1238, 731, 293, 11109, 1184, 661, 46481, 30, 865, 11, 370, 370, 382, 370, 264, 644, 689, 51152], "temperature": 0.0, "avg_logprob": -0.18083238194131443, "compression_ratio": 1.6762589928057554, "no_speech_prob": 0.000923934334423393}, {"id": 566, "seek": 332808, "start": 3343.84, "end": 3349.92, "text": " I said, believe me, this graph, you know, we can do this thing. And then the graph got really", "tokens": [51152, 286, 848, 11, 1697, 385, 11, 341, 4295, 11, 291, 458, 11, 321, 393, 360, 341, 551, 13, 400, 550, 264, 4295, 658, 534, 51456], "temperature": 0.0, "avg_logprob": -0.18083238194131443, "compression_ratio": 1.6762589928057554, "no_speech_prob": 0.000923934334423393}, {"id": 567, "seek": 332808, "start": 3349.92, "end": 3355.84, "text": " colorful. That would be very hard to do manually. So the paper would have been pages and pages and", "tokens": [51456, 18506, 13, 663, 576, 312, 588, 1152, 281, 360, 16945, 13, 407, 264, 3035, 576, 362, 668, 7183, 293, 7183, 293, 51752], "temperature": 0.0, "avg_logprob": -0.18083238194131443, "compression_ratio": 1.6762589928057554, "no_speech_prob": 0.000923934334423393}, {"id": 568, "seek": 335584, "start": 3355.84, "end": 3360.7200000000003, "text": " pages of calculations, which computers are really good at and humans are horrible at.", "tokens": [50364, 7183, 295, 20448, 11, 597, 10807, 366, 534, 665, 412, 293, 6255, 366, 9263, 412, 13, 50608], "temperature": 0.0, "avg_logprob": -0.14580647698764143, "compression_ratio": 1.6888888888888889, "no_speech_prob": 0.0017542729619890451}, {"id": 569, "seek": 335584, "start": 3360.7200000000003, "end": 3366.6400000000003, "text": " So I think what, what, so the single ranking function, you just need a really smart,", "tokens": [50608, 407, 286, 519, 437, 11, 437, 11, 370, 264, 2167, 17833, 2445, 11, 291, 445, 643, 257, 534, 4069, 11, 50904], "temperature": 0.0, "avg_logprob": -0.14580647698764143, "compression_ratio": 1.6888888888888889, "no_speech_prob": 0.0017542729619890451}, {"id": 570, "seek": 335584, "start": 3366.6400000000003, "end": 3370.6400000000003, "text": " insightful person to be like, Oh, I got it. I was in the shower and I realized this is it,", "tokens": [50904, 46401, 954, 281, 312, 411, 11, 876, 11, 286, 658, 309, 13, 286, 390, 294, 264, 10128, 293, 286, 5334, 341, 307, 309, 11, 51104], "temperature": 0.0, "avg_logprob": -0.14580647698764143, "compression_ratio": 1.6888888888888889, "no_speech_prob": 0.0017542729619890451}, {"id": 571, "seek": 335584, "start": 3370.6400000000003, "end": 3376.4, "text": " where, but, but in terms of automation, it's really hard to know even where to start. Whereas", "tokens": [51104, 689, 11, 457, 11, 457, 294, 2115, 295, 17769, 11, 309, 311, 534, 1152, 281, 458, 754, 689, 281, 722, 13, 13813, 51392], "temperature": 0.0, "avg_logprob": -0.14580647698764143, "compression_ratio": 1.6888888888888889, "no_speech_prob": 0.0017542729619890451}, {"id": 572, "seek": 335584, "start": 3376.4, "end": 3381.6000000000004, "text": " this, this other approach is much more automatable. So I think that's probably, probably the reason.", "tokens": [51392, 341, 11, 341, 661, 3109, 307, 709, 544, 28034, 712, 13, 407, 286, 519, 300, 311, 1391, 11, 1391, 264, 1778, 13, 51652], "temperature": 0.0, "avg_logprob": -0.14580647698764143, "compression_ratio": 1.6888888888888889, "no_speech_prob": 0.0017542729619890451}, {"id": 573, "seek": 338160, "start": 3382.16, "end": 3385.92, "text": " We have another question there.", "tokens": [50392, 492, 362, 1071, 1168, 456, 13, 50580], "temperature": 0.0, "avg_logprob": -0.1604745626449585, "compression_ratio": 1.6612903225806452, "no_speech_prob": 0.0010812573600560427}, {"id": 574, "seek": 338160, "start": 3390.0, "end": 3395.68, "text": " Thank you for the talk. So for all those twos for automated reasoning, I'm guessing those twos", "tokens": [50784, 1044, 291, 337, 264, 751, 13, 407, 337, 439, 729, 683, 329, 337, 18473, 21577, 11, 286, 478, 17939, 729, 683, 329, 51068], "temperature": 0.0, "avg_logprob": -0.1604745626449585, "compression_ratio": 1.6612903225806452, "no_speech_prob": 0.0010812573600560427}, {"id": 575, "seek": 338160, "start": 3395.68, "end": 3401.2, "text": " are not formally verified. My question is, do you think there's any value in actually formally", "tokens": [51068, 366, 406, 25983, 31197, 13, 1222, 1168, 307, 11, 360, 291, 519, 456, 311, 604, 2158, 294, 767, 25983, 51344], "temperature": 0.0, "avg_logprob": -0.1604745626449585, "compression_ratio": 1.6612903225806452, "no_speech_prob": 0.0010812573600560427}, {"id": 576, "seek": 338160, "start": 3401.2, "end": 3405.44, "text": " verifying their correctness? Or do you think there's, it's just too much work to do so?", "tokens": [51344, 1306, 5489, 641, 3006, 1287, 30, 1610, 360, 291, 519, 456, 311, 11, 309, 311, 445, 886, 709, 589, 281, 360, 370, 30, 51556], "temperature": 0.0, "avg_logprob": -0.1604745626449585, "compression_ratio": 1.6612903225806452, "no_speech_prob": 0.0010812573600560427}, {"id": 577, "seek": 340544, "start": 3406.2400000000002, "end": 3414.4, "text": " There are some tools that are formally verified. And what a lot of the tools do today is produce", "tokens": [50404, 821, 366, 512, 3873, 300, 366, 25983, 31197, 13, 400, 437, 257, 688, 295, 264, 3873, 360, 965, 307, 5258, 50812], "temperature": 0.0, "avg_logprob": -0.15669200240924794, "compression_ratio": 1.7, "no_speech_prob": 0.000910991569980979}, {"id": 578, "seek": 340544, "start": 3414.4, "end": 3420.8, "text": " a proof that can be audited independently. So for example, a lot, a lot of these tools boil", "tokens": [50812, 257, 8177, 300, 393, 312, 2379, 1226, 21761, 13, 407, 337, 1365, 11, 257, 688, 11, 257, 688, 295, 613, 3873, 13329, 51132], "temperature": 0.0, "avg_logprob": -0.15669200240924794, "compression_ratio": 1.7, "no_speech_prob": 0.000910991569980979}, {"id": 579, "seek": 340544, "start": 3420.8, "end": 3426.32, "text": " down to a class of tools called SAT or SMT solvers, propositional satisfiability, or, or", "tokens": [51132, 760, 281, 257, 1508, 295, 3873, 1219, 31536, 420, 13115, 51, 1404, 840, 11, 7532, 2628, 5519, 72, 2310, 11, 420, 11, 420, 51408], "temperature": 0.0, "avg_logprob": -0.15669200240924794, "compression_ratio": 1.7, "no_speech_prob": 0.000910991569980979}, {"id": 580, "seek": 340544, "start": 3426.32, "end": 3432.96, "text": " satisfiability of propositional logic together with other theories like arithmetic, you name it,", "tokens": [51408, 5519, 72, 2310, 295, 7532, 2628, 9952, 1214, 365, 661, 13667, 411, 42973, 11, 291, 1315, 309, 11, 51740], "temperature": 0.0, "avg_logprob": -0.15669200240924794, "compression_ratio": 1.7, "no_speech_prob": 0.000910991569980979}, {"id": 581, "seek": 343296, "start": 3433.6, "end": 3441.2, "text": " strings, arrays, undertropper functions. And the solvers today can produce proofs that can", "tokens": [50396, 13985, 11, 41011, 11, 15564, 340, 3717, 6828, 13, 400, 264, 1404, 840, 965, 393, 5258, 8177, 82, 300, 393, 50776], "temperature": 0.0, "avg_logprob": -0.1689926562923016, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.002433963818475604}, {"id": 582, "seek": 343296, "start": 3441.2, "end": 3448.48, "text": " be audited independently by a tool like HallLite, Lean, et cetera. And let's, let's say that we", "tokens": [50776, 312, 2379, 1226, 21761, 538, 257, 2290, 411, 5434, 43, 642, 11, 49303, 11, 1030, 11458, 13, 400, 718, 311, 11, 718, 311, 584, 300, 321, 51140], "temperature": 0.0, "avg_logprob": -0.1689926562923016, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.002433963818475604}, {"id": 583, "seek": 343296, "start": 3448.48, "end": 3454.4, "text": " believe HallLite. It's very small, kind of eyes have looked at it and they're like, okay, we're", "tokens": [51140, 1697, 5434, 43, 642, 13, 467, 311, 588, 1359, 11, 733, 295, 2575, 362, 2956, 412, 309, 293, 436, 434, 411, 11, 1392, 11, 321, 434, 51436], "temperature": 0.0, "avg_logprob": -0.1689926562923016, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.002433963818475604}, {"id": 584, "seek": 343296, "start": 3454.4, "end": 3458.64, "text": " going to believe that. Then these tools that are, that are doing really pretty harrowing", "tokens": [51436, 516, 281, 1697, 300, 13, 1396, 613, 3873, 300, 366, 11, 300, 366, 884, 534, 1238, 2233, 1892, 278, 51648], "temperature": 0.0, "avg_logprob": -0.1689926562923016, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.002433963818475604}, {"id": 585, "seek": 345864, "start": 3459.6, "end": 3463.7599999999998, "text": " high performance computing to try and find the proofs, ultimately produce a proof that can", "tokens": [50412, 1090, 3389, 15866, 281, 853, 293, 915, 264, 8177, 82, 11, 6284, 5258, 257, 8177, 300, 393, 50620], "temperature": 0.0, "avg_logprob": -0.1297993804469253, "compression_ratio": 1.7411003236245954, "no_speech_prob": 0.0032722060568630695}, {"id": 586, "seek": 345864, "start": 3463.7599999999998, "end": 3468.56, "text": " be checked with a simple thing. That's pretty believable. So yeah, so that's something that", "tokens": [50620, 312, 10033, 365, 257, 2199, 551, 13, 663, 311, 1238, 1351, 17915, 13, 407, 1338, 11, 370, 300, 311, 746, 300, 50860], "temperature": 0.0, "avg_logprob": -0.1297993804469253, "compression_ratio": 1.7411003236245954, "no_speech_prob": 0.0032722060568630695}, {"id": 587, "seek": 345864, "start": 3468.56, "end": 3472.48, "text": " we've pushed on really. I don't want to talk about Amazon too much today because it's like,", "tokens": [50860, 321, 600, 9152, 322, 534, 13, 286, 500, 380, 528, 281, 751, 466, 6795, 886, 709, 965, 570, 309, 311, 411, 11, 51056], "temperature": 0.0, "avg_logprob": -0.1297993804469253, "compression_ratio": 1.7411003236245954, "no_speech_prob": 0.0032722060568630695}, {"id": 588, "seek": 345864, "start": 3472.48, "end": 3477.2, "text": " that's all I ever do nowadays. But at Amazon, that's something we've pushed on very, very hard.", "tokens": [51056, 300, 311, 439, 286, 1562, 360, 13434, 13, 583, 412, 6795, 11, 300, 311, 746, 321, 600, 9152, 322, 588, 11, 588, 1152, 13, 51292], "temperature": 0.0, "avg_logprob": -0.1297993804469253, "compression_ratio": 1.7411003236245954, "no_speech_prob": 0.0032722060568630695}, {"id": 589, "seek": 345864, "start": 3477.2, "end": 3482.64, "text": " It's actually producing auditable proofs as opposed to just some magic tool that some smart", "tokens": [51292, 467, 311, 767, 10501, 2379, 16772, 8177, 82, 382, 8851, 281, 445, 512, 5585, 2290, 300, 512, 4069, 51564], "temperature": 0.0, "avg_logprob": -0.1297993804469253, "compression_ratio": 1.7411003236245954, "no_speech_prob": 0.0032722060568630695}, {"id": 590, "seek": 345864, "start": 3482.64, "end": 3487.2799999999997, "text": " person wrote and you just have to believe it. We have a question over here.", "tokens": [51564, 954, 4114, 293, 291, 445, 362, 281, 1697, 309, 13, 492, 362, 257, 1168, 670, 510, 13, 51796], "temperature": 0.0, "avg_logprob": -0.1297993804469253, "compression_ratio": 1.7411003236245954, "no_speech_prob": 0.0032722060568630695}, {"id": 591, "seek": 348864, "start": 3489.52, "end": 3495.2799999999997, "text": " So it's a two-part question. You mentioned British Airways and you said that could they arrive", "tokens": [50408, 407, 309, 311, 257, 732, 12, 6971, 1168, 13, 509, 2835, 6221, 5774, 942, 293, 291, 848, 300, 727, 436, 8881, 50696], "temperature": 0.0, "avg_logprob": -0.21772650597800672, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.003407865297049284}, {"id": 592, "seek": 348864, "start": 3495.92, "end": 3501.6, "text": " on time enough or frequently enough to be useful? You didn't say anything about them arriving with", "tokens": [50728, 322, 565, 1547, 420, 10374, 1547, 281, 312, 4420, 30, 509, 994, 380, 584, 1340, 466, 552, 22436, 365, 51012], "temperature": 0.0, "avg_logprob": -0.21772650597800672, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.003407865297049284}, {"id": 593, "seek": 348864, "start": 3501.6, "end": 3510.7999999999997, "text": " a luggage. I don't suppose there's any kind of mathematics. I'm not going to take that one.", "tokens": [51012, 257, 27744, 13, 286, 500, 380, 7297, 456, 311, 604, 733, 295, 18666, 13, 286, 478, 406, 516, 281, 747, 300, 472, 13, 51472], "temperature": 0.0, "avg_logprob": -0.21772650597800672, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.003407865297049284}, {"id": 594, "seek": 351080, "start": 3510.88, "end": 3520.32, "text": " But the second thing was to think about classes of mathematical problems that may not be", "tokens": [50368, 583, 264, 1150, 551, 390, 281, 519, 466, 5359, 295, 18894, 2740, 300, 815, 406, 312, 50840], "temperature": 0.0, "avg_logprob": -0.2249892913189131, "compression_ratio": 1.7125984251968505, "no_speech_prob": 0.027094431221485138}, {"id": 595, "seek": 351080, "start": 3520.32, "end": 3525.52, "text": " where you can anticipate or hypothesize that a solution or an algorithm could exist.", "tokens": [50840, 689, 291, 393, 21685, 420, 14276, 1125, 300, 257, 3827, 420, 364, 9284, 727, 2514, 13, 51100], "temperature": 0.0, "avg_logprob": -0.2249892913189131, "compression_ratio": 1.7125984251968505, "no_speech_prob": 0.027094431221485138}, {"id": 596, "seek": 351080, "start": 3525.52, "end": 3528.88, "text": " So the example I was thinking of while you were talking was the traveling salesman", "tokens": [51100, 407, 264, 1365, 286, 390, 1953, 295, 1339, 291, 645, 1417, 390, 264, 9712, 5763, 1601, 51268], "temperature": 0.0, "avg_logprob": -0.2249892913189131, "compression_ratio": 1.7125984251968505, "no_speech_prob": 0.027094431221485138}, {"id": 597, "seek": 351080, "start": 3529.76, "end": 3533.36, "text": " where, and I imagine that Amazon must have thought about this for a while, getting the", "tokens": [51312, 689, 11, 293, 286, 3811, 300, 6795, 1633, 362, 1194, 466, 341, 337, 257, 1339, 11, 1242, 264, 51492], "temperature": 0.0, "avg_logprob": -0.2249892913189131, "compression_ratio": 1.7125984251968505, "no_speech_prob": 0.027094431221485138}, {"id": 598, "seek": 351080, "start": 3533.36, "end": 3538.96, "text": " in the course you're trying to deliver, where the presumption is that an algorithm could be", "tokens": [51492, 294, 264, 1164, 291, 434, 1382, 281, 4239, 11, 689, 264, 18028, 1695, 307, 300, 364, 9284, 727, 312, 51772], "temperature": 0.0, "avg_logprob": -0.2249892913189131, "compression_ratio": 1.7125984251968505, "no_speech_prob": 0.027094431221485138}, {"id": 599, "seek": 353896, "start": 3538.96, "end": 3544.56, "text": " found, but that actually proving it within a finite time is, or at least up to now,", "tokens": [50364, 1352, 11, 457, 300, 767, 27221, 309, 1951, 257, 19362, 565, 307, 11, 420, 412, 1935, 493, 281, 586, 11, 50644], "temperature": 0.0, "avg_logprob": -0.1783608055114746, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.003785368986427784}, {"id": 600, "seek": 353896, "start": 3544.56, "end": 3547.28, "text": " hasn't been possible. There's something solved and I'm not aware of it.", "tokens": [50644, 6132, 380, 668, 1944, 13, 821, 311, 746, 13041, 293, 286, 478, 406, 3650, 295, 309, 13, 50780], "temperature": 0.0, "avg_logprob": -0.1783608055114746, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.003785368986427784}, {"id": 601, "seek": 353896, "start": 3548.64, "end": 3553.2, "text": " Is there an extension from the kind of approach that you were taking there to prove", "tokens": [50848, 1119, 456, 364, 10320, 490, 264, 733, 295, 3109, 300, 291, 645, 1940, 456, 281, 7081, 51076], "temperature": 0.0, "avg_logprob": -0.1783608055114746, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.003785368986427784}, {"id": 602, "seek": 353896, "start": 3553.2, "end": 3560.56, "text": " termination to actually tackling those class problems? Maybe try to come up with a definitive", "tokens": [51076, 1433, 2486, 281, 767, 34415, 729, 1508, 2740, 30, 2704, 853, 281, 808, 493, 365, 257, 28152, 51444], "temperature": 0.0, "avg_logprob": -0.1783608055114746, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.003785368986427784}, {"id": 603, "seek": 353896, "start": 3560.56, "end": 3567.44, "text": " yes, there is definitely, we can now state that there will be a finite algorithm,", "tokens": [51444, 2086, 11, 456, 307, 2138, 11, 321, 393, 586, 1785, 300, 456, 486, 312, 257, 19362, 9284, 11, 51788], "temperature": 0.0, "avg_logprob": -0.1783608055114746, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.003785368986427784}, {"id": 604, "seek": 356744, "start": 3567.44, "end": 3571.2000000000003, "text": " even if we can't actually find it within a finite time, or even to help us to find it.", "tokens": [50364, 754, 498, 321, 393, 380, 767, 915, 309, 1951, 257, 19362, 565, 11, 420, 754, 281, 854, 505, 281, 915, 309, 13, 50552], "temperature": 0.0, "avg_logprob": -0.1636981964111328, "compression_ratio": 1.6628352490421456, "no_speech_prob": 0.0019248509779572487}, {"id": 605, "seek": 356744, "start": 3571.2000000000003, "end": 3575.6, "text": " Oh yeah, I probably not quite going to answer your question, but a couple of thoughts. One of", "tokens": [50552, 876, 1338, 11, 286, 1391, 406, 1596, 516, 281, 1867, 428, 1168, 11, 457, 257, 1916, 295, 4598, 13, 1485, 295, 50772], "temperature": 0.0, "avg_logprob": -0.1636981964111328, "compression_ratio": 1.6628352490421456, "no_speech_prob": 0.0019248509779572487}, {"id": 606, "seek": 356744, "start": 3575.6, "end": 3580.4, "text": " the interesting things about Ramsey's theorem is it says you have this", "tokens": [50772, 264, 1880, 721, 466, 9078, 7399, 311, 20904, 307, 309, 1619, 291, 362, 341, 51012], "temperature": 0.0, "avg_logprob": -0.1636981964111328, "compression_ratio": 1.6628352490421456, "no_speech_prob": 0.0019248509779572487}, {"id": 607, "seek": 356744, "start": 3581.12, "end": 3586.08, "text": " arrow and graph and there exists a monochromatic subgraph, but it doesn't show it to you, so", "tokens": [51048, 11610, 293, 4295, 293, 456, 8198, 257, 1108, 8997, 4397, 2399, 1422, 34091, 11, 457, 309, 1177, 380, 855, 309, 281, 291, 11, 370, 51296], "temperature": 0.0, "avg_logprob": -0.1636981964111328, "compression_ratio": 1.6628352490421456, "no_speech_prob": 0.0019248509779572487}, {"id": 608, "seek": 356744, "start": 3586.08, "end": 3593.36, "text": " it's not constructive. And so if you use some of these techniques, you can't actually see", "tokens": [51296, 309, 311, 406, 30223, 13, 400, 370, 498, 291, 764, 512, 295, 613, 7512, 11, 291, 393, 380, 767, 536, 51660], "temperature": 0.0, "avg_logprob": -0.1636981964111328, "compression_ratio": 1.6628352490421456, "no_speech_prob": 0.0019248509779572487}, {"id": 609, "seek": 359336, "start": 3593.36, "end": 3598.6400000000003, "text": " the termination argument, you just know it exists. But I think your question was rooted more in a", "tokens": [50364, 264, 1433, 2486, 6770, 11, 291, 445, 458, 309, 8198, 13, 583, 286, 519, 428, 1168, 390, 25277, 544, 294, 257, 50628], "temperature": 0.0, "avg_logprob": -0.19655853159287395, "compression_ratio": 1.4712041884816753, "no_speech_prob": 0.02792512997984886}, {"id": 610, "seek": 359336, "start": 3598.6400000000003, "end": 3607.6, "text": " little bit about can we synthesize or convince ourselves that algorithms exist when we don't", "tokens": [50628, 707, 857, 466, 393, 321, 26617, 1125, 420, 13447, 4175, 300, 14642, 2514, 562, 321, 500, 380, 51076], "temperature": 0.0, "avg_logprob": -0.19655853159287395, "compression_ratio": 1.4712041884816753, "no_speech_prob": 0.02792512997984886}, {"id": 611, "seek": 359336, "start": 3607.6, "end": 3613.6, "text": " know what this specific algorithm is there. We surmise they do, but we can't definitively,", "tokens": [51076, 458, 437, 341, 2685, 9284, 307, 456, 13, 492, 1022, 76, 908, 436, 360, 11, 457, 321, 393, 380, 28152, 356, 11, 51376], "temperature": 0.0, "avg_logprob": -0.19655853159287395, "compression_ratio": 1.4712041884816753, "no_speech_prob": 0.02792512997984886}, {"id": 612, "seek": 361360, "start": 3613.6, "end": 3621.36, "text": " or at least we couldn't definitively prove it. Yes, so I think so, I mean that like,", "tokens": [50364, 420, 412, 1935, 321, 2809, 380, 28152, 356, 7081, 309, 13, 1079, 11, 370, 286, 519, 370, 11, 286, 914, 300, 411, 11, 50752], "temperature": 0.0, "avg_logprob": -0.25009649176346627, "compression_ratio": 1.6698564593301435, "no_speech_prob": 0.005212950054556131}, {"id": 613, "seek": 361360, "start": 3622.72, "end": 3628.48, "text": " if goal box conjecture is proved likely, it's via these methods where you don't,", "tokens": [50820, 498, 3387, 2424, 416, 1020, 540, 307, 14617, 3700, 11, 309, 311, 5766, 613, 7150, 689, 291, 500, 380, 11, 51108], "temperature": 0.0, "avg_logprob": -0.25009649176346627, "compression_ratio": 1.6698564593301435, "no_speech_prob": 0.005212950054556131}, {"id": 614, "seek": 361360, "start": 3629.2799999999997, "end": 3636.16, "text": " like the proof is kind of non-constructive in some sense. I imagine so often non-constructive", "tokens": [51148, 411, 264, 8177, 307, 733, 295, 2107, 12, 25279, 21673, 294, 512, 2020, 13, 286, 3811, 370, 2049, 2107, 12, 25279, 21673, 51492], "temperature": 0.0, "avg_logprob": -0.25009649176346627, "compression_ratio": 1.6698564593301435, "no_speech_prob": 0.005212950054556131}, {"id": 615, "seek": 361360, "start": 3636.16, "end": 3640.72, "text": " proofs are easier than constructive proofs. So yeah, so I think that the harder part will", "tokens": [51492, 8177, 82, 366, 3571, 813, 30223, 8177, 82, 13, 407, 1338, 11, 370, 286, 519, 300, 264, 6081, 644, 486, 51720], "temperature": 0.0, "avg_logprob": -0.25009649176346627, "compression_ratio": 1.6698564593301435, "no_speech_prob": 0.005212950054556131}, {"id": 616, "seek": 364072, "start": 3640.72, "end": 3647.2799999999997, "text": " actually be to find the witness. We have another question in the back there.", "tokens": [50364, 767, 312, 281, 915, 264, 7286, 13, 492, 362, 1071, 1168, 294, 264, 646, 456, 13, 50692], "temperature": 0.0, "avg_logprob": -0.28505920228504, "compression_ratio": 1.537117903930131, "no_speech_prob": 0.0017435391200706363}, {"id": 617, "seek": 364072, "start": 3647.2799999999997, "end": 3653.04, "text": " So Byron, I'm sure you're aware there were two schools of computer science in Cambridge in the", "tokens": [50692, 407, 3146, 2044, 11, 286, 478, 988, 291, 434, 3650, 456, 645, 732, 4656, 295, 3820, 3497, 294, 24876, 294, 264, 50980], "temperature": 0.0, "avg_logprob": -0.28505920228504, "compression_ratio": 1.537117903930131, "no_speech_prob": 0.0017435391200706363}, {"id": 618, "seek": 364072, "start": 3653.04, "end": 3660.24, "text": " post-war years, cheering, because there's mathematical sophistication, mostly programmed", "tokens": [50980, 2183, 12, 6925, 924, 11, 11060, 11, 570, 456, 311, 18894, 15572, 399, 11, 5240, 31092, 51340], "temperature": 0.0, "avg_logprob": -0.28505920228504, "compression_ratio": 1.537117903930131, "no_speech_prob": 0.0017435391200706363}, {"id": 619, "seek": 364072, "start": 3660.24, "end": 3665.3599999999997, "text": " in binary on the Manchester Malt 1 and the Pylor Ace, because he could use his mathematical", "tokens": [51340, 294, 17434, 322, 264, 27180, 376, 3198, 502, 293, 264, 430, 5088, 284, 24900, 11, 570, 415, 727, 764, 702, 18894, 51596], "temperature": 0.0, "avg_logprob": -0.28505920228504, "compression_ratio": 1.537117903930131, "no_speech_prob": 0.0017435391200706363}, {"id": 620, "seek": 366536, "start": 3665.44, "end": 3670.56, "text": " sophistication to kind of reason about the algorithms and convince himself they were correct.", "tokens": [50368, 15572, 399, 281, 733, 295, 1778, 466, 264, 14642, 293, 13447, 3647, 436, 645, 3006, 13, 50624], "temperature": 0.0, "avg_logprob": -0.13969726188510073, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.08742661029100418}, {"id": 621, "seek": 366536, "start": 3670.56, "end": 3675.6, "text": " So the fact that notation was a very unproductive way of writing software didn't bother him.", "tokens": [50624, 407, 264, 1186, 300, 24657, 390, 257, 588, 517, 14314, 20221, 636, 295, 3579, 4722, 994, 380, 8677, 796, 13, 50876], "temperature": 0.0, "avg_logprob": -0.13969726188510073, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.08742661029100418}, {"id": 622, "seek": 366536, "start": 3676.48, "end": 3680.7200000000003, "text": " The engineering philosophy that kind of came from people like Wilks and other colleges in", "tokens": [50920, 440, 7043, 10675, 300, 733, 295, 1361, 490, 561, 411, 9483, 1694, 293, 661, 15272, 294, 51132], "temperature": 0.0, "avg_logprob": -0.13969726188510073, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.08742661029100418}, {"id": 623, "seek": 366536, "start": 3680.7200000000003, "end": 3686.8, "text": " Cambridge just down the road was give the users a symbolic notation to seduce them into the idea", "tokens": [51132, 24876, 445, 760, 264, 3060, 390, 976, 264, 5022, 257, 25755, 24657, 281, 9643, 4176, 552, 666, 264, 1558, 51436], "temperature": 0.0, "avg_logprob": -0.13969726188510073, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.08742661029100418}, {"id": 624, "seek": 366536, "start": 3686.8, "end": 3691.36, "text": " that programming actually is really very easy and you could just write stuff and it would be fine.", "tokens": [51436, 300, 9410, 767, 307, 534, 588, 1858, 293, 291, 727, 445, 2464, 1507, 293, 309, 576, 312, 2489, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13969726188510073, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.08742661029100418}, {"id": 625, "seek": 369136, "start": 3691.6800000000003, "end": 3696.88, "text": " Yeah. Kind of the symbolic world of one because we have programming languages and the effort in", "tokens": [50380, 865, 13, 9242, 295, 264, 25755, 1002, 295, 472, 570, 321, 362, 9410, 8650, 293, 264, 4630, 294, 50640], "temperature": 0.0, "avg_logprob": -0.13072713521810678, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.008431484922766685}, {"id": 626, "seek": 369136, "start": 3696.88, "end": 3701.28, "text": " programming languages has been to design languages in which you can't make mistakes,", "tokens": [50640, 9410, 8650, 575, 668, 281, 1715, 8650, 294, 597, 291, 393, 380, 652, 8038, 11, 50860], "temperature": 0.0, "avg_logprob": -0.13072713521810678, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.008431484922766685}, {"id": 627, "seek": 369136, "start": 3701.28, "end": 3706.88, "text": " yet you can still write useful stuff. So my kind of question is now we have the kind of tools you're", "tokens": [50860, 1939, 291, 393, 920, 2464, 4420, 1507, 13, 407, 452, 733, 295, 1168, 307, 586, 321, 362, 264, 733, 295, 3873, 291, 434, 51140], "temperature": 0.0, "avg_logprob": -0.13072713521810678, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.008431484922766685}, {"id": 628, "seek": 369136, "start": 3706.88, "end": 3713.1200000000003, "text": " talking about. Do we need to continue investing in improving programming languages or can we just use", "tokens": [51140, 1417, 466, 13, 1144, 321, 643, 281, 2354, 10978, 294, 11470, 9410, 8650, 420, 393, 321, 445, 764, 51452], "temperature": 0.0, "avg_logprob": -0.13072713521810678, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.008431484922766685}, {"id": 629, "seek": 369136, "start": 3713.76, "end": 3717.52, "text": " scruffy languages and rely on the tools like yours to prove our software is correct?", "tokens": [51484, 795, 50154, 88, 8650, 293, 10687, 322, 264, 3873, 411, 6342, 281, 7081, 527, 4722, 307, 3006, 30, 51672], "temperature": 0.0, "avg_logprob": -0.13072713521810678, "compression_ratio": 1.779467680608365, "no_speech_prob": 0.008431484922766685}, {"id": 630, "seek": 371752, "start": 3718.08, "end": 3724.32, "text": " So yeah, all programming languages are scruffy, but I've never quite managed to find the perfect one.", "tokens": [50392, 407, 1338, 11, 439, 9410, 8650, 366, 795, 50154, 88, 11, 457, 286, 600, 1128, 1596, 6453, 281, 915, 264, 2176, 472, 13, 50704], "temperature": 0.0, "avg_logprob": -0.20979069301060269, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.002016069833189249}, {"id": 631, "seek": 371752, "start": 3724.32, "end": 3730.32, "text": " Couple of observations there. So one observation is I think Rust is this incredible language.", "tokens": [50704, 38266, 295, 18163, 456, 13, 407, 472, 14816, 307, 286, 519, 34952, 307, 341, 4651, 2856, 13, 51004], "temperature": 0.0, "avg_logprob": -0.20979069301060269, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.002016069833189249}, {"id": 632, "seek": 371752, "start": 3730.32, "end": 3735.44, "text": " And so I spent a lot of time trying to get people working on very low level system", "tokens": [51004, 400, 370, 286, 4418, 257, 688, 295, 565, 1382, 281, 483, 561, 1364, 322, 588, 2295, 1496, 1185, 51260], "temperature": 0.0, "avg_logprob": -0.20979069301060269, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.002016069833189249}, {"id": 633, "seek": 371752, "start": 3735.44, "end": 3740.88, "text": " code to adopt tools that we had that could prove memory safety of those programs.", "tokens": [51260, 3089, 281, 6878, 3873, 300, 321, 632, 300, 727, 7081, 4675, 4514, 295, 729, 4268, 13, 51532], "temperature": 0.0, "avg_logprob": -0.20979069301060269, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.002016069833189249}, {"id": 634, "seek": 371752, "start": 3740.88, "end": 3745.68, "text": " And it was really tough learning. And then one day Rust comes along and they're all like", "tokens": [51532, 400, 309, 390, 534, 4930, 2539, 13, 400, 550, 472, 786, 34952, 1487, 2051, 293, 436, 434, 439, 411, 51772], "temperature": 0.0, "avg_logprob": -0.20979069301060269, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.002016069833189249}, {"id": 635, "seek": 374568, "start": 3745.68, "end": 3750.64, "text": " without me even prompting them like, oh, I started learning Rust. And Rust has a very", "tokens": [50364, 1553, 385, 754, 12391, 278, 552, 411, 11, 1954, 11, 286, 1409, 2539, 34952, 13, 400, 34952, 575, 257, 588, 50612], "temperature": 0.0, "avg_logprob": -0.15244457639496903, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.0010480203200131655}, {"id": 636, "seek": 374568, "start": 3750.64, "end": 3757.44, "text": " sophisticated prover in it, but they came for the speed. So because Rust could be faster,", "tokens": [50612, 16950, 447, 331, 294, 309, 11, 457, 436, 1361, 337, 264, 3073, 13, 407, 570, 34952, 727, 312, 4663, 11, 50952], "temperature": 0.0, "avg_logprob": -0.15244457639496903, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.0010480203200131655}, {"id": 637, "seek": 374568, "start": 3757.44, "end": 3762.24, "text": " they're like, I'll learn these tools, but also it was super well done that the developers of", "tokens": [50952, 436, 434, 411, 11, 286, 603, 1466, 613, 3873, 11, 457, 611, 309, 390, 1687, 731, 1096, 300, 264, 8849, 295, 51192], "temperature": 0.0, "avg_logprob": -0.15244457639496903, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.0010480203200131655}, {"id": 638, "seek": 374568, "start": 3762.24, "end": 3767.6, "text": " Rust talk about ergonomics, like the ergonomics of developing and Rust is really important to them.", "tokens": [51192, 34952, 751, 466, 42735, 29884, 11, 411, 264, 42735, 29884, 295, 6416, 293, 34952, 307, 534, 1021, 281, 552, 13, 51460], "temperature": 0.0, "avg_logprob": -0.15244457639496903, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.0010480203200131655}, {"id": 639, "seek": 374568, "start": 3767.6, "end": 3774.56, "text": " And I think that's been very, very powerful. So one could prove, you know, just like there's", "tokens": [51460, 400, 286, 519, 300, 311, 668, 588, 11, 588, 4005, 13, 407, 472, 727, 7081, 11, 291, 458, 11, 445, 411, 456, 311, 51808], "temperature": 0.0, "avg_logprob": -0.15244457639496903, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.0010480203200131655}, {"id": 640, "seek": 377456, "start": 3774.56, "end": 3781.7599999999998, "text": " turning completeness of you can express all programs in Rust or C or Askel or Prolog.", "tokens": [50364, 6246, 1557, 15264, 295, 291, 393, 5109, 439, 4268, 294, 34952, 420, 383, 420, 1018, 7124, 420, 1705, 4987, 13, 50724], "temperature": 0.0, "avg_logprob": -0.16277943661338404, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.00108144071418792}, {"id": 641, "seek": 377456, "start": 3781.7599999999998, "end": 3785.68, "text": " There's, there's sort of, you know, you can prove the same things in a lot of these systems,", "tokens": [50724, 821, 311, 11, 456, 311, 1333, 295, 11, 291, 458, 11, 291, 393, 7081, 264, 912, 721, 294, 257, 688, 295, 613, 3652, 11, 50920], "temperature": 0.0, "avg_logprob": -0.16277943661338404, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.00108144071418792}, {"id": 642, "seek": 377456, "start": 3785.68, "end": 3792.32, "text": " but I think that Rust's ergonomics are much nicer than some of the tools like in C where you then", "tokens": [50920, 457, 286, 519, 300, 34952, 311, 42735, 29884, 366, 709, 22842, 813, 512, 295, 264, 3873, 411, 294, 383, 689, 291, 550, 51252], "temperature": 0.0, "avg_logprob": -0.16277943661338404, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.00108144071418792}, {"id": 643, "seek": 377456, "start": 3792.32, "end": 3797.12, "text": " try and prove, prove memory safety. That's my first observation. Second observation is there's", "tokens": [51252, 853, 293, 7081, 11, 7081, 4675, 4514, 13, 663, 311, 452, 700, 14816, 13, 5736, 14816, 307, 456, 311, 51492], "temperature": 0.0, "avg_logprob": -0.16277943661338404, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.00108144071418792}, {"id": 644, "seek": 379712, "start": 3797.2, "end": 3804.3199999999997, "text": " this fascinating blog post by Ranjit Jhalla where he shows that you can take a program", "tokens": [50368, 341, 10343, 6968, 2183, 538, 27948, 73, 270, 508, 71, 10352, 689, 415, 3110, 300, 291, 393, 747, 257, 1461, 50724], "temperature": 0.0, "avg_logprob": -0.23969976952735414, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.0028442759066820145}, {"id": 645, "seek": 379712, "start": 3804.3199999999997, "end": 3809.12, "text": " in an imperative language and prove it using horror triple style reasoning. And you have,", "tokens": [50724, 294, 364, 32490, 2856, 293, 7081, 309, 1228, 11501, 15508, 3758, 21577, 13, 400, 291, 362, 11, 50964], "temperature": 0.0, "avg_logprob": -0.23969976952735414, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.0028442759066820145}, {"id": 646, "seek": 379712, "start": 3809.12, "end": 3816.4, "text": " sorry, everyone, just bear with me for a second. You have a horror triples of quantifiers and,", "tokens": [50964, 2597, 11, 1518, 11, 445, 6155, 365, 385, 337, 257, 1150, 13, 509, 362, 257, 11501, 1376, 2622, 295, 4426, 23463, 293, 11, 51328], "temperature": 0.0, "avg_logprob": -0.23969976952735414, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.0028442759066820145}, {"id": 647, "seek": 379712, "start": 3816.4, "end": 3823.92, "text": " and, and then you just slam the, you apply these SMT solvers with quantifier support and it's,", "tokens": [51328, 293, 11, 293, 550, 291, 445, 25617, 264, 11, 291, 3079, 613, 13115, 51, 1404, 840, 365, 4426, 9902, 1406, 293, 309, 311, 11, 51704], "temperature": 0.0, "avg_logprob": -0.23969976952735414, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.0028442759066820145}, {"id": 648, "seek": 382392, "start": 3824.0, "end": 3831.12, "text": " it's so hard and it's so compute expensive. Or you could write the same program in liquid Haskell", "tokens": [50368, 309, 311, 370, 1152, 293, 309, 311, 370, 14722, 5124, 13, 1610, 291, 727, 2464, 264, 912, 1461, 294, 6553, 8646, 43723, 50724], "temperature": 0.0, "avg_logprob": -0.14528710214715254, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.000803931150585413}, {"id": 649, "seek": 382392, "start": 3831.92, "end": 3836.16, "text": " and there's no quantifiers. You can prove the same property and it's because Hindley Milner", "tokens": [50764, 293, 456, 311, 572, 4426, 23463, 13, 509, 393, 7081, 264, 912, 4707, 293, 309, 311, 570, 15307, 3420, 7036, 1193, 50976], "temperature": 0.0, "avg_logprob": -0.14528710214715254, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.000803931150585413}, {"id": 650, "seek": 382392, "start": 3836.7200000000003, "end": 3841.84, "text": " is somehow resolving the quantifiers for you and it's very, very low power, very easy, very", "tokens": [51004, 307, 6063, 49940, 264, 4426, 23463, 337, 291, 293, 309, 311, 588, 11, 588, 2295, 1347, 11, 588, 1858, 11, 588, 51260], "temperature": 0.0, "avg_logprob": -0.14528710214715254, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.000803931150585413}, {"id": 651, "seek": 382392, "start": 3841.84, "end": 3846.4, "text": " predictable. You don't make a change to your code over here and suddenly the proof stops going through.", "tokens": [51260, 27737, 13, 509, 500, 380, 652, 257, 1319, 281, 428, 3089, 670, 510, 293, 5800, 264, 8177, 10094, 516, 807, 13, 51488], "temperature": 0.0, "avg_logprob": -0.14528710214715254, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.000803931150585413}, {"id": 652, "seek": 384640, "start": 3847.04, "end": 3854.2400000000002, "text": " So, so I think that there's a lot to be said for the ergonomics of the language and the IDE and", "tokens": [50396, 407, 11, 370, 286, 519, 300, 456, 311, 257, 688, 281, 312, 848, 337, 264, 42735, 29884, 295, 264, 2856, 293, 264, 40930, 293, 50756], "temperature": 0.0, "avg_logprob": -0.13263463165800451, "compression_ratio": 1.7843866171003717, "no_speech_prob": 0.015897221863269806}, {"id": 653, "seek": 384640, "start": 3854.2400000000002, "end": 3858.08, "text": " the experience, particularly developing in cloud, you know, I'm talking about Amazon, but if you're", "tokens": [50756, 264, 1752, 11, 4098, 6416, 294, 4588, 11, 291, 458, 11, 286, 478, 1417, 466, 6795, 11, 457, 498, 291, 434, 50948], "temperature": 0.0, "avg_logprob": -0.13263463165800451, "compression_ratio": 1.7843866171003717, "no_speech_prob": 0.015897221863269806}, {"id": 654, "seek": 384640, "start": 3858.08, "end": 3863.12, "text": " developing programs in cloud, the ergonomics of how do you develop that and understand the program", "tokens": [50948, 6416, 4268, 294, 4588, 11, 264, 42735, 29884, 295, 577, 360, 291, 1499, 300, 293, 1223, 264, 1461, 51200], "temperature": 0.0, "avg_logprob": -0.13263463165800451, "compression_ratio": 1.7843866171003717, "no_speech_prob": 0.015897221863269806}, {"id": 655, "seek": 384640, "start": 3863.12, "end": 3867.92, "text": " such that you don't have to like SSH over to some other machine to find out what the machine", "tokens": [51200, 1270, 300, 291, 500, 380, 362, 281, 411, 12238, 39, 670, 281, 512, 661, 3479, 281, 915, 484, 437, 264, 3479, 51440], "temperature": 0.0, "avg_logprob": -0.13263463165800451, "compression_ratio": 1.7843866171003717, "no_speech_prob": 0.015897221863269806}, {"id": 656, "seek": 384640, "start": 3867.92, "end": 3872.88, "text": " that's stated in, I think are very, very important. So, so I think that automated reasoning,", "tokens": [51440, 300, 311, 11323, 294, 11, 286, 519, 366, 588, 11, 588, 1021, 13, 407, 11, 370, 286, 519, 300, 18473, 21577, 11, 51688], "temperature": 0.0, "avg_logprob": -0.13263463165800451, "compression_ratio": 1.7843866171003717, "no_speech_prob": 0.015897221863269806}, {"id": 657, "seek": 387288, "start": 3873.6, "end": 3879.44, "text": " programming languages and the sort of software development experience go really hand in hand", "tokens": [50400, 9410, 8650, 293, 264, 1333, 295, 4722, 3250, 1752, 352, 534, 1011, 294, 1011, 50692], "temperature": 0.0, "avg_logprob": -0.16447975930203212, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.0006261453963816166}, {"id": 658, "seek": 387288, "start": 3879.44, "end": 3882.96, "text": " and there's some very powerful experiences we can have now that we couldn't have before.", "tokens": [50692, 293, 456, 311, 512, 588, 4005, 5235, 321, 393, 362, 586, 300, 321, 2809, 380, 362, 949, 13, 50868], "temperature": 0.0, "avg_logprob": -0.16447975930203212, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.0006261453963816166}, {"id": 659, "seek": 387288, "start": 3886.32, "end": 3887.92, "text": " Great. Other questions?", "tokens": [51036, 3769, 13, 5358, 1651, 30, 51116], "temperature": 0.0, "avg_logprob": -0.16447975930203212, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.0006261453963816166}, {"id": 660, "seek": 387288, "start": 3890.7200000000003, "end": 3897.12, "text": " Okay. I think it's time to thank Byron for a wonderful talk. And I believe though there are", "tokens": [51256, 1033, 13, 286, 519, 309, 311, 565, 281, 1309, 3146, 2044, 337, 257, 3715, 751, 13, 400, 286, 1697, 1673, 456, 366, 51576], "temperature": 0.0, "avg_logprob": -0.16447975930203212, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.0006261453963816166}, {"id": 661, "seek": 387288, "start": 3897.12, "end": 3901.28, "text": " going to be refreshments out in the chat window room again. Okay. Thank you all.", "tokens": [51576, 516, 281, 312, 15134, 1117, 484, 294, 264, 5081, 4910, 1808, 797, 13, 1033, 13, 1044, 291, 439, 13, 51784], "temperature": 0.0, "avg_logprob": -0.16447975930203212, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.0006261453963816166}], "language": "en"}