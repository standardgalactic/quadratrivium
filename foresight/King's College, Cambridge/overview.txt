Processing Overview for King's College, Cambridge
============================
Checking King's College, Cambridge/Alan Turing Lecture 2023 given by Professor Byron Cook on Friday, 28th April..txt
1. The question was about whether we should continue investing in improving programming languages or rely on tools like Verified Software to prove software correct, given that most programming languages are "scruffy."
2. Byron's response included several observations:
   - Rust is an example of a language with both sophisticated proof capabilities and good ergonomics, which made it more appealing to developers looking for speed and ease of use.
   - The importance of the ergonomics of programming languages and development environments, especially in cloud-based development, where understanding the program without additional context is crucial.
   - Ranjit Jhalla's blog post demonstrates that while you can prove programs correct in imperative languages with horror triple reasoning (complex quantifier logic), it is more straightforward to do so in languages like Haskell (with Hindley-Milner type system) where the type system resolves quantifiers for you.
   - There is a synergy between automated reasoning, programming languages, and the software development experience, and improvements in one area can significantly impact the others.
3. The audience was thanked for their participation, and it was mentioned that refreshments would be available after the talk.

