Processing Overview for mCoding
============================
Checking mCoding/25 nooby Python habits you need to ditch.txt
1. **Time Dot Time**: It's for displaying the current time, not for timing code. Use `perf_counter` or `timeit` for measuring execution time.

2. **Overusing Print Statements**: Replace print statements with the `logging` module for a cleaner and more maintainable codebase.

3. **Shell Equals True**: Avoid using `subprocess.run(command, shell=True)` due to security risks. Always use the full path to executeable commands or pass arguments as a list.

4. **Math Operations in Python**: Utilize libraries like NumPy for numerical computations and pandas for data analysis.

5. **Import Star**: Avoid using `from my_module import *` as it can clutter the namespace with unnecessary variables. Import only what you need.

6. **Directory Structure**: Don't rely on a specific directory structure for your project. Learn to package and install your code properly.

7. **Python Is Not Compiled**: Python code is compiled into bytecode, which is then interpreted at runtime.

8. **Not Following Pep 8**: Even though it's just a style guide, it's best to follow Pep 8 to avoid confusion and maintainability.

9. **Python 2**: Avoid using Python 2 if possible. All new projects should use Python 3 due to its improved features and security.

10. **Ranges in Python 3**: Using ranges does not create all the numbers in memory. They are efficient and only involve boundary checks.

11. **Key Behavior in Dictionaries**: Dictionary views, including keys(), do not create copies of keys. Changes to the dictionary will affect the view.

The video also encourages viewers to support the creator through Patreon and to engage with the content by commenting, subscribing, and liking. It's a reminder that Python has evolved from version 2 to version 3, and staying updated with best practices is crucial for effective and secure coding.

