Processing Overview for Zero To ASIC Course
============================
Checking Zero To ASIC Course/Tiny Tapeout - From idea to custom chip without breaking the bank!.txt
 Tiny Tape Out (TTO) is a platform designed to make custom chip design more accessible, affordable, and easier for everyone from students and makers to professionals and universities. Here's a summary of what TTO offers:

1. **Lower Cost**: It significantly reduces the cost associated with designing custom chips, which traditionally can run into tens of thousands of dollars, including software licensing fees.

2. **Open Source Tools**: TTO provides open source tools and excellent documentation to help users avoid common pitfalls and get their designs onto a real chip without the complexities of downloading, installing, or dealing with licensing issues.

3. **Community Support**: The platform has a vibrant community that supports newcomers and experienced designers alike.

4. **Educational Resources**: All learning resources and tools are free to use online. For beginners, Wokwi is available for digital design simulation, while more experienced users can employ hardware description languages like Verilog, VHDL, or Amaranth.

5. **GitHub Actions**: The system uses GitHub Actions to build the necessary files for the ASIC from the user's designs.

6. **Design Specifications**: The minimum design size is 160x100 microns, which includes about a thousand logic cells, and additional space can be purchased in tiles. Each design comes with clock, reset, and 24 I/O pins, with approximately 50MHz bandwidth.

7. **Analog and Mixed-Signal Support**: TTO 6 has extended support to include analog and mixed-signal designs as well as proprietary tools like Cadence.

8. **Manufacturing Partnership**: Designs are manufactured by eFabulous on the open source SkyWater 130nm process. The first 100 individual submissions receive an early bird discount, thanks to eFabulous' sponsorship.

9. **Demonstration Boards**: Once the silicon chips are returned from manufacturing, they are mounted onto demonstration boards. These boards can be interfaced with a computer using MicroPython for experimentation and testing.

10. **Collaborative Learning**: Users can explore and learn from others' designs by accessing the data sheets provided for each chip. Past designs have included RISC-V CPUs, FPGAs, Ring Oscillators, Synthesizers, USB devices, and more.

11. **Getting Started**: New users are encouraged to follow video tutorials, and if they encounter issues, they can seek help in the TTO Discord community chat.

12. **Stay Informed**: Keeping up with project updates is possible by signing up for the mailing list.

Tiny Tape Out aims to democratize the process of creating custom silicon, making it an exciting opportunity for innovation and learning in the field of hardware design.

Checking Zero To ASIC Course/Tiny Tapeout 6 - Getting your design ready to submit.txt
The video you've watched provides a step-by-step guide on how to use the TinyTapeOut GitHub template to convert a design into ASIC files for manufacturing a custom chip. Here's a summary of the process:

1. **GitHub Account Setup**: If you don't have a GitHub account, create one. Then, navigate to the TinyTapeOut template repository that suits your project (Wauquee Designs or an HDL like Verilog).

2. **Using the Template**: Click the "Use this template" button to create your own copy of the repository. For open source projects, GitHub pays for the cloud compute resources needed to make the ASIC files.

3. **Configuring the Repository**:
   - Enable GitHub Actions in the repository settings under "Pages."
   - Edit the `info.yaml` file to include your project's specific details, such as the Wauquee ID for Wauquee projects or source files for HDL projects.
   - Fill out the title, author, and other relevant information in the `info.yaml` file.
   - If you use Discord, include your Discord name to be added to the tape out roll.
   - Describe what each pin does in the same file to aid in testing.

4. **Documentation**: Edit the `info.md` file inside the `docs` directory to provide clear instructions for others who will receive your design with their chips. This is important for understanding and experimenting with your design later on.

5. **Running GitHub Actions**: After committing your changes, the GitHub actions will run automatically. You can check the results in the "Actions" tab at the top of the repository page. There are three main actions: documentation generation, automated testing (if applicable), and ASIC file generation (GDS).

6. **Reviewing Action Results**: The "Docs" action will provide a PDF of your documentation for review. The GDS action will show warnings, utilization statistics, and standard cell usage. If there are any issues, you can investigate further by looking at the detailed logs.

7. **Troubleshooting**: If the GDS action fails, check the synthesis log file for design errors or the routing log file if the design is too large. You may need to reduce your design size or upgrade to a larger design option.

8. **Submitting Your Design**: Once your design passes all checks, you can submit it through the TinyTapeOut submission app at tinytapeout.com. Apply any coupons if available, or pay the required fee to proceed with the submission.

9. **Revisions**: To make changes to your design after submission, you'll need to submit a new revision via the TinyTapeOut submission app.

The process emphasizes the importance of thorough documentation and clear communication within the community, as well as being prepared for debugging and potential revisions to your design. Happy hacking!

