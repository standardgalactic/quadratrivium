start	end	text
0	5560	Which sorting algorithm is the simplest?
5560	10920	Well that depends on what you mean by simple, but a good candidate might be selection sort.
10920	15080	This is the algorithm where you repeatedly find the smallest element and move it to the
15080	16080	left.
16080	19880	You can implement it like this, with two for loops and a conditional swap.
19880	25360	The outer loop creates n phases and in each phase we run the inner loop to find the next
25360	27000	smallest number.
27000	31240	And as for simplicity, I learned that there are two for loops and just one comparison
31240	33880	between ai and aj.
33880	37240	But what about this inner loop where j starts from i plus 1?
37240	39320	That seems a bit error prone.
39320	45400	So maybe we could improve it by letting it run from 1 rather than i plus 1.
45400	47800	Now it's just beautiful.
47800	49320	Just look at the symmetry.
49320	55120	Two nested for loops from 1 to n and a nicely symmetric loop conditional swap inside.
55120	58480	But the question is, does this actually still sort?
58480	60680	And if so, then why?
60680	64120	We think that's a great riddle, so go ahead and pause the video and think about it for
64120	69120	yourself.
69120	71080	Alright here comes the solution.
71080	89960	This is what the algorithm actually does.
89960	94160	Okay so apparently this sorts, but in reverse order?
94160	95160	That's pretty weird.
95160	98840	Let's go through the algorithm one more time together.
98840	104200	In the first phase, when ai is 1, the algorithm is doing the same thing as selection sort,
104200	107920	so it finds the smallest number and it brings it to the left.
107920	111920	That's kind of counterproductive since the algorithm will end up sorting in the opposite
111920	114160	order, but okay.
114160	126400	In the following phases, we can finally see what's actually happening.
126400	128760	Let's stop the algorithm after 4 phases.
128760	133880	At this point, the first 4 columns are sorted in reverse order and the last one of them
133880	136480	is the smallest in the entire array.
136480	138080	And this is no coincidence.
138080	141560	These two properties will hold in general.
141560	146800	If we look at the 5th phase, we start by comparing the red column to the already sorted sequence.
146800	151280	Once it becomes larger than the column at position j, we insert it into the sequence
151280	157080	like this and then we continue swapping the columns after it until j reaches i.
157080	159720	This just shifts them by one to the right.
159720	164200	So now we've successfully inserted the column into our sorted sequence.
164200	168320	And now we run the steps that were present in the original selection sort.
168320	173000	And you can see that these steps do absolutely nothing because at this point, the column
173000	177000	at position i is the smallest, so it'll never get swapped.
177000	178600	Let's look at one more phase.
178600	182760	We first find the right place for the magenta column, then shift the rest of the sorted
182760	189240	sequence to the right and then no more swaps happen.
189240	190480	Nice.
190480	194880	And all of this complexity comes just from these 4 simple lines of code.
194880	200840	Here comes the final iteration and then we're done.
200840	205040	So we were actually pulling your leg a bit when we said this was a variation on selection
205040	206040	sort.
206040	211600	In fact, if we throw away the useless selection sort part of the algorithm and only let the
211600	217640	inner loop run from one to i, we surprisingly get what's known as insertion sort, a very
217640	219440	different algorithm.
219440	225320	So our beautiful and simple algorithm is actually under the hood, two basic sorting algorithms
225320	227480	stitched into one.
227480	232560	Each inner loop first has an insertion sort part followed by a selection sort part.
232560	237720	But they're combined in such a way that only the insertion sort is actually doing anything.
237720	242240	The only drawback is that it sorts in reverse order, but we can simply fix that by flipping
242240	244920	the comparison sign.
244920	249840	And now we are looking at what could well be the simplest sorting algorithm ever.
