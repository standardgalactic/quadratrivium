WEBVTT

00:00.000 --> 00:04.800
I just got access to the code interpreter plugin about 48 hours ago and have been running

00:04.800 --> 00:10.000
experiments on it non-stop since then. I've come up with about 18 examples to show you guys its

00:10.000 --> 00:15.280
power. Most of them I reckon haven't been seen before. I predict many industries will have to

00:15.280 --> 00:19.840
update overnight when it's released more widely and at the end of the video please let me know

00:19.840 --> 00:24.640
what you think and what other experiments that we can try. First though, what about this one?

00:24.640 --> 00:29.360
A 3D surface plot. Just quickly, the way it works is you click this little button to the

00:29.360 --> 00:35.200
left of the text box and then you can upload many different file types like CSV files, word files,

00:35.200 --> 00:40.400
images and even short videos. Then it will automatically analyze the file type without

00:40.400 --> 00:46.560
you pressing anything and then of course you give it a prompt and as with all of chatbt it becomes a

00:46.560 --> 00:52.400
conversation. So the first 3d surface plot was decent but it was too small so I simply said in

00:52.400 --> 00:56.880
natural language can you make it four times bigger thank you and of course you have seen the

00:56.880 --> 01:01.440
amazing end result even with the lighting. Look at these shadows there. I believe this is based

01:01.440 --> 01:07.120
on a real contour map of a volcano in New Zealand and I could do a whole video just on this but I

01:07.120 --> 01:12.640
have 17 other examples to get to but this one was truly amazing. Did you know for example it can

01:12.640 --> 01:18.560
generate QR codes? I said create a QR code that I can scan with my phone to reach the following URL

01:18.560 --> 01:23.760
and lo and behold it creates it and yes it does work. Maybe I'm easily impressed but I think

01:23.760 --> 01:31.040
that's pretty amazing and what about a 3d scatter plot? This is truly remarkable. I uploaded the data

01:31.040 --> 01:40.240
from Gatminder and it created this chart based on the median age of over 100 countries from 1950 I

01:40.240 --> 01:48.560
think projected to 2100 and I asked highlight the UK that this is indeed the UK's median age

01:48.560 --> 01:53.360
through those years in red but I know what you might be thinking that is amazing that it's 3d

01:53.440 --> 01:58.320
and interactive but the blue kind of merges and it's hard to see what's going on. I engaged in a

01:58.320 --> 02:04.560
conversation and look what it created. It picked out the 30 most populous countries and separated

02:04.560 --> 02:12.080
them off with separate colors. Look at that that is gorgeous. Now you might have the critique that the

02:12.080 --> 02:19.040
median age is in descending order in the y-axis going from 20 down to 60 so in a sense the median

02:19.040 --> 02:24.480
age is actually rising not falling but nevertheless that's easily amendable and that is truly an

02:24.480 --> 02:29.520
incredible diagram and look just for fun I'm going to go into the data look at this I'm traveling

02:29.520 --> 02:35.280
into the data this is so wild I don't know how helpful it is but I think that's just beautiful

02:36.000 --> 02:43.840
and crazy. There are so many industries data analytics accounting consultancy that this will

02:43.840 --> 02:48.480
affect. By the way it got all of this done in about a minute. I see a lot of people online

02:48.480 --> 02:53.840
talking about five seconds later is no way done in five seconds you have to wait 30 seconds a

02:53.840 --> 02:59.120
minute sometimes much longer before I move on I want to give you a killer tip that it took me

02:59.120 --> 03:05.440
quite a while to work out so when you get access try to remember this say output the visualization

03:05.440 --> 03:11.520
as a downloadable file if you don't add that phrase as a downloadable file what will happen

03:11.520 --> 03:17.280
is it often gets stuck at this stage of the code it'll either say fig dot show or plot dot show

03:17.280 --> 03:22.080
and then just stop I found that I encountered this problem far less often if I said output a

03:22.080 --> 03:27.840
downloadable file next did you know that code interpreter can do optical character recognition

03:27.840 --> 03:34.080
I screenshotted this text from a New York Times article I think it was and I asked OCR the text

03:34.080 --> 03:41.120
in this image and write a poem in Danish about it now I don't want to exaggerate it often gets OCR

03:41.120 --> 03:46.400
wrong I don't want to get your hopes up it fails more often than it succeeds but when it works

03:46.400 --> 03:52.240
it can do it understood the text and then did a poem in Danish about the text now I'm going to

03:52.240 --> 03:57.120
need a Danish speaker to tell me if that was a good poem but either way it could do it how about

03:57.120 --> 04:04.880
this one it can do interactive time series with range sliders and selectors I uploaded a CSV file

04:04.880 --> 04:10.480
on life expectancy data from the entire world and I just said can you pick out the US UK and

04:10.480 --> 04:16.720
India and create a time series with range slider and selectors again that killer phrase output a

04:16.720 --> 04:22.080
downloadable file and here is what it came up with notice how the life expectancy for all three

04:22.080 --> 04:28.800
countries rises during the 20th century and look how I can select down here interactively

04:29.600 --> 04:35.600
a range of the data and even by clicking up here a 10-year interval or 50-year interval

04:35.680 --> 04:40.720
here's the crazy thing I did nothing I just uploaded the file there were hundreds of countries in

04:40.720 --> 04:45.840
there you can see here all the steps that it did and if you click on the arrow you get to see the

04:45.840 --> 04:51.120
actual code but then it goes through shows its explanation and eventually gives you a link that

04:51.120 --> 04:55.760
you can simply click and get the file downloaded and if you weren't that impressed already here's

04:55.760 --> 05:01.680
where it gets fairly game-changing you can get it to do the data analytics not just the visualizations

05:01.680 --> 05:07.680
for example I said find five unexpected non-obvious insights from this data and offer plausible

05:07.680 --> 05:12.880
explanations for them this was back to the median age data for the most interesting observation

05:12.880 --> 05:18.640
provide a compelling and clear visualization now ignore the first diagram which wasn't that good

05:18.640 --> 05:24.160
because of the x-axis but look at the insights this is data analytics you can see here that the

05:24.160 --> 05:30.640
original file was called median age years and it was just a table of data no analysis whatsoever

05:30.640 --> 05:36.400
but look what GPT-4 picked out insight one the global median age has been steadily increasing

05:36.400 --> 05:41.440
over time it calculated the global median age that wasn't included in the data it was just

05:41.440 --> 05:48.000
country data and it says it's gone from around 22 years to over 38 years in 2023 and it's projected

05:48.000 --> 05:54.640
to continue rising to approximately 44 years by 2100 and then it offers a cogent explanation

05:54.640 --> 05:59.920
this trend is likely due to a combination of increasing life expectancy and decreasing

05:59.920 --> 06:05.200
fertility rates worldwide as medical technology improves more people are living longer birth rates

06:05.200 --> 06:09.280
are declining particularly in developed regions it's picked this all out and then it moves on to

06:09.280 --> 06:14.320
the next insight the countries that have seen the most significant increases in median age are these

06:14.320 --> 06:19.680
ones and again it gives an explanation as to why their median age might have risen more than any

06:19.680 --> 06:24.800
other for example Albania has seen significant emigration of younger people which could also

06:24.800 --> 06:30.480
lead to an older median age is it me or is that kind of crazy that it crunched all the data

06:30.480 --> 06:36.720
visualized it but then also gave really interesting analyses of the data now you can read the other

06:36.720 --> 06:42.400
analyses but each of them are really interesting and the final visualization which I asked for

06:42.400 --> 06:47.760
is brilliant I think notice how the graph goes from green to red when you get to the future

06:47.760 --> 06:53.200
projection I didn't ask it to do that now obviously in this video I'm going to focus on the flashy

06:53.200 --> 06:58.160
visuals and the cool little tricks it can do but in terms of data analytics that is what is going

06:58.160 --> 07:04.320
to change jobs change industries and remember this is code interpreter alpha version one look at the

07:04.320 --> 07:09.600
difference between mid-journey version one and now mid-journey version five a year later how about

07:09.600 --> 07:15.440
basic video editing now there is a limit to what it can do but it can do some basic video editing

07:15.440 --> 07:22.240
if you ask it for example I uploaded a short file and asked it to rotate the file 180 degrees

07:22.240 --> 07:28.320
and it was able to do it now I'm not saying that is massively useful but it was able to do it here

07:28.320 --> 07:34.560
is a similar example I uploaded an image file and then said can you zoom out from the center of the

07:34.560 --> 07:40.000
image now initially it did zoom in but then I clarified that I wanted it to zoom out from the

07:40.000 --> 07:46.320
center just to be cheeky I also asked can you make it black and white oh and I also asked to add music

07:46.320 --> 07:53.680
but it couldn't add music anyway here is the end result by the way it gave it to me as an mp4 file

07:53.680 --> 07:58.960
and look it zooms out from the center and it's made the image black and white now because I got

07:58.960 --> 08:04.080
access so recently I honestly haven't explored the limits of what kind of video editing I can do

08:04.080 --> 08:09.840
with chat gpt code interpreter but I will let you know when I can now back to visualizations I gave

08:09.840 --> 08:17.440
it a hypothetical scenario that sounds kind of realistic I sent 231 cvs got 32 responses 12 phone

08:17.440 --> 08:23.440
interviews three follow-up face-to-face interviews and one job offer which I rejected output a

08:23.440 --> 08:30.320
downloadable sanki diagram of this data I did then get it to change the coloring slightly but I think

08:30.320 --> 08:37.760
that's a pretty cool sanki diagram look sent cvs 231 and then receive responses and you can go down

08:37.840 --> 08:44.320
32 phone interviews 12 face-to-face interviews and three job offers and one rejected offer

08:44.320 --> 08:49.280
obviously I could have tweaked that for hours make it more visual make it more interactive maybe

08:49.280 --> 08:54.960
make a gif of it but for two minutes work I think that's a pretty interesting and incredible output

08:54.960 --> 09:00.800
next and here is one that you might say is a little bit concerning and it's about steganography

09:00.800 --> 09:05.600
now I will admit I am not at all an expert in fact I know virtually nothing about it essentially what

09:05.600 --> 09:11.520
it involves though is hiding a message inside an image or inside some code and gpt 4 was more

09:11.520 --> 09:17.920
than willing to play along and it encoded a secret message into an image there is the image by the way

09:17.920 --> 09:22.080
and if you looked at that you'd think that's totally normal that's just a silly little image

09:22.080 --> 09:26.320
right well apparently here's what it can do to a casual observer it looks like a simple image

09:26.320 --> 09:32.000
with some shapes but it actually contains the hidden message hello world then it provided a python

09:32.000 --> 09:37.920
function which can be used to decode the message from the image now obviously this is just a silly

09:37.920 --> 09:43.040
example that is totally harmless but I might be in crazy in thinking this is a somewhat concerning

09:43.040 --> 09:48.560
ability for future language models to possess especially when they reach the level of an agi

09:48.560 --> 09:54.480
often open ai talk about future versions of gpt doing scientific research and finding things

09:54.480 --> 09:58.960
that humans wouldn't have discovered but let me pose the scenario that it gets better than

09:58.960 --> 10:05.200
any human expert at steganography anyway enough from me I'll let the experts weigh in on that one

10:05.200 --> 10:11.680
next did you know that gpt 4 with code interpreter can do text to speech just before anyone comments

10:11.680 --> 10:17.680
though why did I write proceed without further question because gpt 4 with code interpreter has

10:17.680 --> 10:23.840
a tendency to always ask clarifying questions and if you have access to only 25 messages every three

10:23.840 --> 10:29.040
hours you don't want to use up half or more of them on clarifying what it wants to do or saying

10:29.040 --> 10:34.320
yes please do that but I found writing proceed without further question means it gets straight to

10:34.320 --> 10:39.440
it and essentially you get double the number of prompts for your money anyway as you can see I asked

10:39.440 --> 10:45.360
turn this entire prompt starting from the beginning into a text to speech file now quite a few times

10:45.360 --> 10:50.480
it denied it had the ability to do this but eventually I got it to work it was actually

10:50.480 --> 10:56.720
when I finally gave it this prompt and it worked I say worked but it didn't quite work as intended

10:56.720 --> 11:01.680
check it out here is the text to speech that it came up with you are at gpt a large language

11:01.680 --> 11:07.040
model trained by open ai when you send a message containing python code to python it will be executed

11:07.040 --> 11:11.520
in a stateful jupiter notebook environment python will respond with the output of the execution

11:11.520 --> 11:17.840
or timeout after 120.0 seconds internet access for this session is disabled do not make external

11:18.080 --> 11:22.720
web requests or API call must fail now thank you Stephen Hawking for that message the only thing

11:22.720 --> 11:27.360
is it had nothing to do with my original prompt now anyway when you get access to code interpreter

11:27.360 --> 11:32.800
play about with text to speech because it is able to do it even if it denies it time for a fun one

11:32.800 --> 11:37.600
I asked create a tree map of the letters in the following quote and I'm not going to read it out

11:37.600 --> 11:42.560
because I am not good at tongue twisters anyway I said give each part of the tree map a different

11:42.560 --> 11:48.560
color and output a downloadable file proceed without further question and here is the output

11:48.560 --> 11:54.160
and I checked it for the letter p and it was correct that there were 36 instances of the letter p

11:54.160 --> 11:58.400
in the output and look how it's proportional with the number of instances of the letter

11:58.400 --> 12:03.760
and the size of each rectangle I think that is pretty insane okay back to something more serious

12:03.760 --> 12:09.360
I uploaded this file which is an image of a math problem quite a hard one as well and you guessed

12:09.840 --> 12:14.640
I said solve the math problem in this image it then extracted the text from the image

12:14.640 --> 12:19.920
presumably using OCR and then proceeded to solve it and I'm going to get on to this in a second

12:19.920 --> 12:25.280
it is better at math than Wolfram Alpha I know that's a big claim but it's far less buggy I

12:25.280 --> 12:31.040
found Wolfram Alpha crashing very frequently anyway here are the two solutions and isn't that

12:31.040 --> 12:36.080
incredible from a photo essentially it then extracts out the math problem including the two

12:36.080 --> 12:41.920
square roots and then solves it this is all within the same window of chat tpt no need for any other

12:41.920 --> 12:47.840
apps or extensions next it can do radial bar plots which I think are really quite beautiful I'm not

12:47.840 --> 12:52.640
saying this is the best one ever and I'm sure you could tweak it to make it more clear and beautiful

12:52.640 --> 12:58.720
look at that the life expectancy in the US climbing from 1800 and then it goes clockwise

12:58.720 --> 13:05.280
reaching a projected almost 90 by 2100 again I'm sure you could do a far better job than me in

13:05.280 --> 13:10.480
extracting out a more beautiful diagram but aren't radial bar plots just beautiful to look at

13:10.480 --> 13:16.000
speaking of cool diagrams how about this I didn't even specify which visualization to do I uploaded

13:16.000 --> 13:22.000
this same life expectancy data and I just said what are the most advanced and technical visualizations

13:22.000 --> 13:26.880
you can do with this data proceed to do them now honestly it picks some visualizations that I don't

13:26.880 --> 13:32.800
think are the most advanced but nevertheless it was creative here is what it did it does frequently

13:32.800 --> 13:38.480
make the mistake of cluttering the axes and having far too many labels so that you can't see anything

13:38.480 --> 13:43.520
so scrub that one out not great but what about the next few remember it just did this on its own

13:43.520 --> 13:48.640
this is a heat map and you can see some really interesting things from this data like India

13:48.640 --> 13:53.840
starting with a much lower life expectancy than anyone else but gradually rising but still falling

13:53.840 --> 14:01.200
behind the others even in 2100 and look at China look how the life expectancy drops in the 60s and

14:01.280 --> 14:06.240
70s I think we all know what happened there compare that to the US which is a gradual

14:06.240 --> 14:13.680
continual ascent actually aside from 2020 look how the shade gets a little darker in 2020 obviously

14:13.680 --> 14:18.000
you guys can probably work out what happened around then but then the projections are for

14:18.000 --> 14:24.240
it to go up toward 90 by 2100 that's a beautiful and clear heat map that I didn't even ask for

14:24.240 --> 14:29.040
it to do let's look at the next one box plot do you remember those from school you get the

14:29.040 --> 14:34.880
upper end of the data the highest one the lowest one the median the first quartile and third quartile

14:34.880 --> 14:40.320
and it's a great way of statistically representing a set of data and it's done it for every 50th

14:40.320 --> 14:45.920
year starting in 1900 obviously a slightly less beautiful diagram than some of the ones you've

14:45.920 --> 14:51.280
seen today but for the statisticians in the audience you will know that this is a very useful

14:51.280 --> 14:56.720
metric for a lot of data the individual points above and below are typically when there are

14:56.720 --> 15:02.400
outliers in the data I would estimate that all of these visualizations only took around

15:02.400 --> 15:07.920
two two and a half minutes so definitely not the 10 seconds as I said that you often see on Twitter

15:07.920 --> 15:13.120
I mean have you ever seen GPT-4 give an answer in less than 10 seconds speaking of useful I think

15:13.120 --> 15:18.560
many professionals will find the next thing that I'm about to showcase the most useful of all any

15:18.560 --> 15:25.440
insights that GPT-4 finds trends medians analyses whatever you can ask it to add to the original

15:25.440 --> 15:31.200
file and then download it do you remember that the original file was called median age years well

15:31.200 --> 15:38.000
notice this file name median age years with insights it has created a downloadable new file

15:38.000 --> 15:44.080
with the insights included and look at some of the insights that I mean you have the change from

15:44.080 --> 15:52.160
1950 to 2100 and here is the average median age throughout the period and the change from 2023

15:52.240 --> 15:58.160
to 2100 notice that the original file didn't have those columns they were added by GPT-4

15:58.160 --> 16:03.440
with code interpreter and now how about data progression video files I was honestly shocked

16:03.440 --> 16:10.160
when I saw that it could do this but I asked can you make a 256 by 256 mp4 that gradually reveals

16:10.160 --> 16:16.160
the lines as they progress on the x-axis this was about the median age over time here is what it did

16:16.160 --> 16:23.680
and look at how the data and the chart progresses as time moves along I was really shocked to see this

16:23.680 --> 16:30.400
and the line in red which is going to be labeled at the end is the global median age and remember

16:30.400 --> 16:35.520
it calculated that that wasn't in the original file now I'm not sure why it picked out these four

16:35.520 --> 16:42.480
countries maybe because they represent extremes but either way I think the result is phenomenal

16:42.480 --> 16:48.800
and I'm genuinely impressed that it did this even though I know the final result could be improved

16:48.800 --> 16:55.040
dramatically for example far higher resolution and maybe the global median age labeled from the start

16:55.040 --> 16:58.960
and actually now that it's got to the end I can see why it did pick out these countries

16:58.960 --> 17:04.960
because Niger did have the lowest median age in 2100 and it looks like Puerto Rico had the

17:04.960 --> 17:10.560
highest and the fastest aging one was Albania next and this is going to shock quite a few people

17:10.560 --> 17:16.080
what about image editing I created this image in mid-journey version five and then here's what I

17:16.080 --> 17:22.960
asked I said use opencv to select the foreground of this image and look what it did it picked out

17:22.960 --> 17:28.640
the foreground no blue sky now I know it's not perfect but it's nevertheless impressive all

17:28.640 --> 17:35.840
within the window of chat bt this does actually make me wonder if open ai and chat bt is eventually

17:35.840 --> 17:42.480
not now but in a few years gonna swallow all other apps or maybe google's gemini but either way one

17:42.480 --> 17:48.400
interface one website one app doing the job of all others and by the way of course chat bt is now

17:48.400 --> 17:54.480
available on ios but imagine you have one app and it can do image editing text to speech video

17:54.480 --> 18:01.120
editing everything data analysis not at gpt4 levels but gpt6 or gpt7 levels if you can get every

18:01.120 --> 18:06.880
piece of information service and application in one interface a bit like now people being addicted

18:06.880 --> 18:11.840
to their smartphones won't people be addicted to this one interface again that's not going to happen

18:11.840 --> 18:16.080
now but i'm just posing it as a question to think over for the moment though before anyone gets too

18:16.080 --> 18:20.880
carried away it does still hallucinate quite a lot so I uploaded this image and I asked it questions

18:20.880 --> 18:26.240
about it and it answered and I was like wow it can do image recognition it said this image appears to

18:26.240 --> 18:32.000
be a digital painting of a humanoid figure at a desk with a rather complex background I was initially

18:32.000 --> 18:37.520
amazed until I realized that it probably got that from the file name because when I asked it questions

18:37.520 --> 18:43.920
it got it wrong so I said what is on the desk now look back there's this weird kind of microphone and

18:43.920 --> 18:49.360
a bit of paper and not much else a keyboard and look what it said there are multiple floating

18:49.360 --> 18:56.000
holographic displays okay a mouse not really a desk lamp I can't see that and then tools and

18:56.080 --> 19:00.880
devices now correct me if I'm wrong but I think most of those are incorrect now obviously I need

19:00.880 --> 19:05.840
to do far more experiments to see if it actually can recognize any particular images and maybe I'm

19:05.840 --> 19:10.880
putting it down too harshly but at the moment it does seem to hallucinate if you ask it about too

19:10.880 --> 19:16.160
much of the detail of an image next you remember how one of the key weaknesses of gt4 is that it

19:16.160 --> 19:21.840
can't really count things especially not characters words etc and even more so it can't do division

19:21.840 --> 19:26.960
and some of you might be thinking well with wolfram alpha it can do those things not quite here is

19:26.960 --> 19:33.120
an example of the code interpreter plugin essentially eating wolfram alpha obviating it making it not

19:33.120 --> 19:38.320
obvious what the utility of it is if you've got code interpreter I asked divide the number of the

19:38.320 --> 19:43.360
letter e's in this prompt by the number of the letter t's now you might think code interpreter

19:43.360 --> 19:48.000
can improve things by doing the character counting but it can also do the division notice how it

19:48.080 --> 19:53.120
counted the characters correctly compared to wolfram alpha and of course got the division

19:53.120 --> 19:59.360
correct as well so if it can do advanced quadratics and do division and character counting etc it does

19:59.360 --> 20:04.480
beg the question what would we use wolfram alpha for that we can't use code interpreter for I

20:04.480 --> 20:08.720
honestly might not know something that you guys know so do let me know in the comments it also

20:08.720 --> 20:13.520
got this math question correct and notice you get these beautiful math visuals that you don't get

20:13.520 --> 20:18.960
with the base version of gpt4 you get something more like this where the visuals aren't as clear

20:18.960 --> 20:23.760
and notice the base version of gpt4 gets the question wrong it can't do division but with

20:23.760 --> 20:28.560
code interpreter it gets the question right next one is a quick one pie charts nothing too special

20:28.560 --> 20:33.920
but I think it is a fairly beautiful visualization it doesn't seem to matter how big the csv file

20:33.920 --> 20:39.760
is that you upload this next example was really quite fascinating it was a word puzzle I have

20:39.760 --> 20:45.520
tried this particular word puzzle on gpt4 dozens of times the reason I picked this puzzle it's called

20:45.520 --> 20:51.360
a word ladder is because it really struggles with the puzzle if the number of steps required is more

20:51.360 --> 20:56.800
than a certain number usually about five or six steps it gave me a really interesting border of

20:56.800 --> 21:02.320
the limits of gpt4's planning abilities with language anyway it always gets it wrong here is

21:02.320 --> 21:08.240
a demonstration with the base model of gpt4 you might say why is this wrong but look at how it's

21:08.240 --> 21:13.920
changed from seas to sags which is more than one letter change and that's typical of the kind of

21:13.920 --> 21:19.040
errors it makes what about with code interpreter well you can probably guess the ending given that I

21:19.040 --> 21:25.600
featured it in the video but it gets it right I believe it draws upon a hard-coded word set and

21:25.600 --> 21:30.640
this does point towards the kind of puzzles that I think gpt4 with code interpreter will be able to

21:30.640 --> 21:36.240
solve things like crosswords and sedokus okay not exactly world-changing but nevertheless

21:36.240 --> 21:41.360
I think quite fascinating and how about Venn diagrams the reason I picked this example is that

21:41.360 --> 21:47.120
I had to go through about 10 steps to get it to create this rather basic three-way Venn diagram

21:47.120 --> 21:53.280
this represents the overlap between dogs AI and desks and apparently all of them are loyal companions

21:53.280 --> 21:57.440
well we will see about that but anyway it took quite a few steps to get it right which is pretty

21:57.440 --> 22:02.480
annoying but here's the really interesting thing once I got it set up in the way that I like

22:02.480 --> 22:09.040
all I had to do was say use the format above to create a new three-way Venn diagram this time

22:09.040 --> 22:15.600
for mangoes movie heroes and marmosets try to make each entry funny and use different colors

22:15.600 --> 22:21.600
proceed without further questions so it may have been a struggle to set up initially but once done

22:21.600 --> 22:28.000
it was so easy to iterate a new three-way Venn diagram and actually it was better than the

22:28.000 --> 22:33.120
original apparently all three are adored by fans worldwide apparently only marmosets and

22:33.120 --> 22:39.040
movie heroes can climb up trees really fast and mangoes and marmosets can hang upside down

22:39.040 --> 22:44.800
that's crazy one or two prompts iterating on a design already agreed upon this is honestly

22:44.800 --> 22:49.680
what is likely to happen in the future with people spending hours to find the perfect data

22:49.680 --> 22:56.000
visualization or piece of data analysis and then just hitting copy paste for all their other files

22:56.000 --> 23:01.280
perfect it once and then it does the rest for you a quick couple of bonus ones before I finish

23:01.280 --> 23:07.280
you can just ask it to come up with a visualization giving it no direction at all it came up with a

23:07.280 --> 23:12.560
distribution of prime numbers up to ten thousand thing is I believe there's a slight mistake at

23:12.560 --> 23:18.080
the beginning because I think there's only 25 in the first 100 and 21 in the next 100 so you

23:18.080 --> 23:23.040
probably do want to still check the outputs that code interpreter gives you and that's another reason

23:23.120 --> 23:28.320
it's not going to instantly replace all data analysis and data visualization it's not perfect

23:28.320 --> 23:33.040
and it's not fully reliable but you've got to look ahead to where things are going I'm going to end

23:33.040 --> 23:42.400
where I started with this insane 3d surface map of a volcano if this is what gpc4 can do now with

23:42.400 --> 23:52.080
the alpha version of code interpreter what will gpc5 or 6 do with version 7 or 20 of code interpreter

23:52.080 --> 23:57.200
I was about to speculate about that but then I got distracted with trying to get inside this

23:57.200 --> 24:04.320
volcano it is kind of fun and look I'm going above and into the volcano let me know what you

24:04.320 --> 24:08.720
will try when you get access I know they're rolling it out steadily and I know that some people have

24:08.720 --> 24:13.760
had access to it for about three weeks so hopefully if you want to experiment with it you will be able

24:13.760 --> 24:18.720
too soon in the meantime do let me know if you have any ideas that you want me to experiment with

24:18.720 --> 24:24.960
and thank you so much for watching all the way to the end have a wonderful day

