It's a great pleasure for me to introduce today's seminar speaker, Dr. Jonathan Schaefer.
He's a world-famous expert on AI for games, games with AI, solving games, building world
championships, playing bots. They published a very famous paper on solving checkers.
That's the punchline. Hey, you're giving away the spoiler.
We already got to get some tools for this.
He took a break and became a dean for about six years, so now hopefully we'll get him back on the side of science.
I'll let you tell us what you actually are.
Great. Thank you very much. I'm delighted to be here. Thank you very much for coming on a Friday afternoon.
I know that you're here for the talk. The pizza wasn't irrelevant in your decision to come here.
This is a very strange talk. It's not the kind of talk that you're used to having.
I'm not going to go into much technical stuff. There are a few technical slides.
I'll be delighted to talk technical after the talk.
This is a very deeply personal story. It's something that happened to me that I didn't expect to happen.
It affected me profoundly. This is a talk of stories.
I'll apologize in advance because what usually happens is story after story.
Oh my God, the one hour is up. The last part usually gets done very quickly and so my apologies.
There's an important lesson in this talk that I want to pass on to graduate students.
That's about research because there's two kinds of research.
The first is the one that we're most familiar with. It's what I call inspiration.
It's where you work and you think about problems and all of a sudden you get that aha moment.
The light bulb goes off and you've got the idea that's going to allow you to prove this theorem
or you've got this great idea how to make this algorithm better
and you get that moment of inspiration and you're really pumped up and excited
and you code it or you write it up and voila, you've got a paper or maybe you've got a thesis or whatever.
That's the kind of research that we most think about.
But there's another kind of research which I call the perspiration research.
It's the stuff that's really hard work.
It may not be as glamorous as inspiration. It may not be as exciting as inspiration
but it's the kind of work that you have to do.
If you're working say in operating systems and you've got to build an operating system
you might spend a year or two or three designing and building an operating system.
There's a lot of perspiration before you get to the point where you can do the inspiration.
This talk is about perspiration.
This talk took 20 years to make.
There aren't a lot of projects which take 20 years worth of human and computing power in order to achieve.
Let me talk about games and AI research.
First of all I want to be clear. I'm an artificial intelligence researcher.
When I was young I had a passion for games and I thought well I'm going to use games for my AI research.
That's what sort of marked me throughout my career.
My research has been applied to many other problems including scheduling, GPS, bioinformatics, all sorts of other things.
When it comes to demonstrating the core ideas I like to use games and puzzles
because I can relate to an audience.
I can explain it in terms that people can understand.
I like to use games as my experimental test bed but everything I do is much more general.
Games are just the way of illustrating the ideas.
If you go back to the dawn of computing science, in fact if you go back even further
before computing science all the way back to Charles Babbage and his difference engine in the 1800s
people were thinking about building game playing programs.
That's what Babbage wanted to do.
That's what people like Alan Turing, one of the fathers of computing science, wanted to do.
When AI became a discipline in the late 1950s at the famous Dartmouth conference
building a high performance game playing program is one of the big grand challenges.
Could we do it?
Today in 2018 we can look back.
We can talk about Success in Chess, 1997 with Deep Blue.
By the way, the co-author of Deep Blue, one of the three co-authors,
Murray Campbell, born and raised in Edmonton which is where I'm from.
He did his bachelor's and master's degree at the University of Alberta
which is where I'm from before going to Carnegie Mellon to do his PhD.
Part of our game's lineage includes Deep Blue.
Backgammon, Jerry Tassara in the late 1990s.
He doesn't have a University of Alberta connection but he used reinforcement learning
which is a very powerful technique which is developed by Rich Sutton
who was a professor at the University of Alberta.
Poker, it's a project that started in 1995 and in 2008 we went superhuman and two player,
Limit Texas Holdem and so that was the University of Alberta success.
You may have heard in 2015 we solved two player Limit Texas Holdem
and in 2017 and 2018 University of Alberta and Carnegie Mellon University
went superhuman in two player No Limit Texas Holdem.
That's the game you see on TV.
And Go in 2016, computers went superhuman and again just to brag,
the lead author on AlphaGo and AlphaZero, the programs that went superhuman.
The lead author is David Silver who did his PhD at the University of Alberta
and the second lead was Azure Wang who did his postdoc there.
So we've done a lot of work in AI using games at the University of Alberta
and our academic children and grandchildren have done a lot of work.
But I was working in chess in the 1990s and I had one of the best chess programs in the world.
It tied for first in the world computer chess championships in 1986
and a chance conversation with a friend said what happened with checkers?
Everybody's talking about chess, what happened with checkers?
Checkers is an interesting game, it's a simple but not so simple game
but it has all the same research opportunities as chess.
So why weren't people looking at checkers?
Now this isn't really a talk about checkers, this is really a talk about man and machine
and so I may use some checkers jargon but you don't need that to understand the talk.
So what happened with computer checkers?
The first real game playing program was a checkers program developed in the early 1950s
but in the late 1950s a fellow named Arthur Samuel who went on to work at IBM
for most of his career developed a checker playing program to play against humans
and that's Samuel standing up.
And in 1963 IBM sponsored a match, man versus machine,
Samuel's checker playing program versus a fellow named Robert Neely.
Now you have to think back to 1963 and use your imagination
because computers, this is not a computer in 1963, what is a computer?
A computer fills a half this room with vacuum tubes and spinning tape wheels
just like that of the Hollywood movies.
And in 1963 IBM's machines running Samuel's software defeated Robert Neely in a single game.
Computer defeated man at checkers.
Now I have this wonderful collection of articles from newspapers and magazines.
Computers defeat master Robert Neely at checkers.
Computers defeat US checkers champion.
Computers are as good as the world champion.
Computers solved the game of checkers.
Now let me be clear about the word solved.
Checkers has 5 times 10 to the 20th possible positions, 10 to the 20th.
You guys are computer scientists, that's a lot of zeros.
I have this wonderful, I wrote Samuel's family and got his unpublished autobiography
and in 1959 he writes excitedly, I got this fantastic, I got access to this fantastic new IBM computer
and that computer could do 15,000 additions per minute.
Now 15,000 addition operations per minute.
You're not going to get to 10 to the 20th in my lifetime or your lifetime or whatever.
So he had very slow computers and what happened was this got exaggerated out of control
because this was a milestone in a time when people didn't know
and didn't understand what computing technology was.
This was the first demonstration, public demonstration of what computers could do.
It wasn't the typical application which was like missile trajectories
which is what many of the early computers were done.
And in 1968 Samuel's program played an exhibition match against the world champion
and against the world championship challenger and the program got crushed.
Eight games. So the program wasn't very good.
And for the record nearly, he was not world champion caliber.
He was not US champion.
He was not a master.
He was, I can't remember which state now, was it Tennessee?
He was the Tennessee State Blind Champion.
And so he was a good casual player.
They played six games.
The computer won one of the six.
Nearly one, sorry, nearly won two.
Three games were draws.
Nobody remembers except the one game that nearly won.
And so even despite what I'm saying here this was an incredible result
because Samuel actually invented reinforcement learning
and although he didn't understand fully what he was doing
it was an incredible machine learning accomplishment.
And so I got very interested in checkers because people ignored checkers
because Samuel had done all this work.
So in 1989 I wrote my first research grant to say I want to try
and build a world champion caliber checker playing program.
And I was very angry when the research granting agency
denied my request for a research grant and had the following quote in it.
Okay, I was lost already.
So what this talk is about is realizing Samuel's dream.
It's man versus machine for the world checkers championship.
We have two computers playing.
One of them I developed.
His name is Shanook.
It's a computer program.
And the other is a human program, the Marion Tinsley model.
It was a computer.
It was built in 1928.
One-of-a-kind model.
There were no replacement parts built.
So it was just literally one-of-a-kind.
No replacement parts for that computer definitely was a problem later on,
as you'll see.
Okay, so let's talk about the challenger for the world championship,
Shanook.
Started as a project in 1988.
I started playing around with it and well, it looked interesting.
In 1989, the world computer chess championships were held.
They're held every three years.
And I co-organized them.
They were in Edmonton.
And I had expectations that my program would do well,
but it didn't.
It crashed and burned.
Some friends of mine at another group, Carnegie Mellon,
had a team called Deep Thought, which won the world championship.
They later moved to IBM to become Deep Blue.
And so I was so pissed off because I wanted to be world champion.
And it turned out that in a couple of months,
there was going to be the first computer Olympics,
where games were going to be contested in it.
And over the span of two months,
I wrote a checker playing program,
and I went to the computer Olympics.
And in 1989, my program, which I named Shanook,
won the computer Olympiad.
Now, interesting thing about this program,
a little bit of technology.
One of the things we built, which was amazing,
its performance was the four-piece database.
Now, checker starts with 24 pieces on the board.
Pieces get removed.
And eventually, you could get down to like one piece.
And again, you don't need to know the rules,
but if I have a piece and you don't have a piece,
I win, you lose.
But what we did is wrote a program that said,
let's enumerate every single position with one piece on the board.
And compute whether it's a win, loss, or draw.
Well, if you only have one piece, you win.
Done.
But having done that, you can now do
what we call retrograde analysis, go backwards.
Let's solve all positions with two pieces on the board.
Because when you analyze with two pieces on the board,
if one of them comes off, you're down to one piece,
and you can look it up in your database.
So you look up at all the two pieces.
Then you go to three pieces, which reduced to two.
And then you go to four.
Now, I had seven million positions,
and I built that database.
And as the program would search, whenever it got in
and its analysis came down to four pieces, it could stop.
Look up in its database and know whether the position
was a win, a loss, or a draw.
And we won the Olympiad against other computer programs,
and it was clear that the program played very well
and that the databases made a big difference.
So I was on sabbatical in 1989,
and I started working on my program.
And a checker playing friend who had seen the program said,
you know, I'd really like to see how you would do
in the US championship.
And I said, well, why do I want to do that?
And he said, well, every two years there's the US championship
and there's the British championship,
and the winner of those events gets to play
for the world championship.
So if you can get into the US championship,
you're going to be playing against the best players
in the world because they're all trying to earn the right
to play for the world championship.
The problem is in the US championships there's three categories.
The master category, which is for the best players in the world,
masters, grandmasters.
The majors, which is for the reasonably good players.
And the minors, which is for the beginners.
And I said, wow, that's kind of cool.
If I could get into the masters category,
then I'd have a chance to play against world class players
and see how we could do, right?
I mean, I want to build a strong program.
The problem was, how do I get in?
It's not like I can just walk in and say,
I got a great program.
Let me into the US championship in the masters, right?
That'd be like me saying, hey, I think I'm a really great golfer.
I want to go and play in the US open against Tiger Woods.
Ain't going to happen, right?
So how do I get in?
I'm fighting a battle because two years previously,
a commercial manufacturer, who I will not name,
said, oh, we have a checker playing program.
We'd like to get into the US championship.
And people laughed at him.
The program went into not the masters,
not the major, to the minor section,
which is where all the beginners are.
And you play 32 games in these tournaments,
and it lost its first 31 in games.
And in game 32, something very strange happened,
and it won.
And nobody will admit what happened,
except that the human opponent who lost
was very happy with his results.
So people knew that this program was really pathetic.
And so I had this battle.
How do I get into the master section?
So I arranged something.
I said, OK, I'm going to be diabolical.
I arranged a, quote, conference,
unquote, at the University of Alberta.
I invited a grandmaster who people said
he was receptive to playing computers,
two grandmasters, and a master.
And I brought them to Edmonton.
I used my research money, which I didn't have for checkers
because that had been turned down.
I used my research money for parallel computing
because I was wink, wink, using multiple computers
to play checkers.
And I brought them there,
and I had them play games against my program.
And over the span of a week,
they played 20 competitive games against my program.
And the grandmasters won four games,
lost one, and there were 15 draws.
And I was pissed off.
I was so angry.
We lost.
And my colleague said, man, you are so competitive.
No, not really, but you are so competitive.
You have no sense of perspective.
And I said, what do you mean, he said,
you've been working on this program less than a year.
You beat a grandmaster.
You only lost four to one.
How strong is the program going to be in a year?
And he was right.
Lots of bugs in the program.
It was very impressive.
So the checkers conference,
we had master level performance.
And we had the five piece databases,
149 million positions.
Now, what I did is I got the grandmasters
to write letters to the American Checker Federation
saying, hey, you know, this program is really good.
It shouldn't be in the minors.
It shouldn't be in the majors.
It'll compete in the masters.
One of the grandmasters said, it'll compete in the master.
It'll finish near the bottom,
but it won't be embarrassing.
It'll be respectable.
And so I got these letters and I wrote away
to the American Checker Federation.
I said, let me into the masters.
And I waited and waited and waited.
And I finally got a letter back.
And they said, yeah, OK, you can get into the masters.
It'll be a novel.
It'll be interesting.
It looks like you've got something
that at least will be entertaining for us.
And I said, fantastic.
That was great.
And I thought, boy, I'm really surprised
they didn't write more.
But OK, I'll take it.
That's great.
And then like a week later, I got another letter.
And I thought, OK, they figured out what my strategy was.
And I read the letter and it said, oh, by the way,
if you're not allowed to win any money.
OK, you know, we're not going to win any money.
And even if we did win money, you know, we wouldn't take it.
In fact, I wrote them back and I said, look,
we don't want any money.
But in order to make this easy, we'll even offer a prize
for whoever plays the best game against the computer
to get prize money.
It turns out they were actually worried
we were going to win any money because there was
a $1,000 prize for the best junior player
under 18 years of age.
And they were afraid that I would claim my program was
one year old.
So they said, OK, fine.
And then a week later, I got another letter.
Oh, you can't win any money and you're not
allowed to win any trophies.
That's fine.
I don't need trophies.
That's OK.
And I waited and waited.
I expected one more letter, which I never got.
Who cares about the money?
Who cares about the trophy?
The real prize was if you won the tournament,
you got the challenge for the world championship.
They never thought about it.
They never wrote a letter.
And so we went to the US championships in the summer of 1990
not being allowed to win any money or trophies
and nothing else.
So we had a surprise.
The week before the US championship,
it was held in Tupelo, Mississippi.
Do not go to Tupelo, Mississippi in August.
Besides being hot, it's Elvis Presley's birthplace.
And August is the anniversary of his birth.
And the whole city is Elvis crazy.
So, well, we had a big surprise.
We went to the Mississippi state championship.
16 games, first place, undefeated.
And why that's amazing is because several of the grandmasters
had come early for the US championship
and they were playing.
We beat them.
We didn't lose a single game.
What people didn't understand is that the program was
incredibly strong since the checkers conference
because we now had the six piece databases,
2.7 billion positions, and a whole bunch of bugs fixed.
And this made a huge, huge difference.
By the way, 2.7 billion positions,
it was really stretching my research
grant capabilities at the time.
Remember, this is 1990.
We're talking about billion.
Billion is a small number today.
But in 1990, it was big.
I had to scrounge money to get my first
one gigabyte disk, $5,000 plus tax and shipping.
One gigabyte, 1990.
So, computing 2.7 billion positions was a huge task in 1990.
People were shocked that we won this.
And the next week, we went into the US championship.
And all the best players in the world were there,
except for one.
But most importantly, the world champion,
Marion Tinsley, was also there.
And the program started slowly.
It was drawing game after game.
Why?
We'd been winning.
Why were we drawing?
It turned out that, of course,
playing in the Mississippi State Championship,
all of a sudden people said,
this program is really good.
So they played really cautious draw checkers
because they wanted to escape with draws.
And halfway through the tournament,
I'm so frustrated because we're drawing
and not winning enough games.
But I put something in which I called the fudge factor.
It was just, you know, we've got to do something.
So I put in a very simple line of code
that penalized the program for reducing
the number of pieces on the board.
The idea was that the more pieces on the board,
the more complex the position was,
and the more complex it was,
the higher the probability the human would make a mistake.
So if the program started exchanging pieces
to reduce the number of pieces, it got a penalty.
And so all of a sudden, like overnight,
the program became a monster
and started winning and winning and winning.
And after 24 games, we're now in second place.
First place is the World Champion.
And in the seventh round, a four-game match,
we had to play the World Champion.
This was the first time in history that a human
and a computer played a match that was not an exhibition match.
This was the real thing.
Tinsley had to play us or forfeit.
First game of the match turned out to be a classic.
First of all, there's the World Champion.
There's me.
We're playing against each other.
And there's this ring of players,
two, three, four, deep around watching,
because I remember one checker player saying,
I want to see Tinsley spank the computer.
They wanted to see Tinsley beat this upstart computer
because it hadn't lost.
And I'm not a checker player,
so I live and die based on the evaluation
that the computer gives me.
It's like the stock market.
The number goes up, you're happy,
and the number goes down,
and you're wondering, what do you do?
We're 10 moves into the game,
and the computer says it's equal,
maybe a small advantage to the computer,
and I'm sitting there thinking pretty smugly,
this is great, World Champion,
10 moves in, we're invincible.
And then he played a move that sacrificed the checker.
And the moment he made the move,
you could hear the chuckles in the room.
Because for a human, this was an obvious move,
and it gave Tinsley an incredibly strong position.
And within a minute or two of him playing this move,
all the spectators disappeared
because in their mind, the game was over.
And I'm sitting there thinking,
we just were out to check her up,
Chinook is happy, we're going to win,
this is great.
Then a couple moves later, we're up a checker,
the position's even, this is still great.
And a few moves later, we're up a checker,
Tinsley's got an advantage, that's all great.
And a few moves later, things look really bleak.
And we're playing on, and an hour goes by,
and a few players start coming back,
looking what's going on.
And more time goes by, and more people come by and watch.
And then finally, Tinsley reaches out,
stops the clock, extends his hand,
and offers a draw.
It turns out, Tinsley's sacrifice was sound.
There was a very long and narrow path to a win.
He could have won the game.
And he made most of the moves correctly,
and then at the end, he slipped up,
and it became a draw.
The next three games against Tinsley were uneventful,
and they all ended in draws.
We had just drawn a four-game match
against the world champion.
In the last round, we were paired against the world's
number two player, Don Lafferty.
We won a game, we drew three,
Tinsley won his match,
and the end result was that Tinsley finished first,
Chinook finished second,
and the rules of the competition were that
the first-place finisher was challenged
for the world championship,
and if the first-place finisher was the world champion,
that right went down to the second-place finisher.
So in the summer of 1990,
Chinook became the official world championship challenger.
The first thing I did after this is I tried to find
Arthur Samuel and tell him what had happened,
and he had left IBM long ago.
It turns out he had moved to California,
who's at Stanford University,
working for Donald Knuth on tech.
I'm sure you're all familiar with tech, or lay tech.
It's a variant system,
and it turns out, much to my shock,
like three days before we won the right to play
for the world championship, Samuel had passed away.
It turns out he, in the last years of his life,
had been suffering for Alzheimer's disease.
He liked to claim he was the world's oldest programmer.
Up to age 90, he was going in every day to
Stanford University writing code
for the development of the tech system,
and it just seemed ironic that we finally realized
his dream, in some sense,
and he passed away just as that was happening.
All right.
Let's talk about the champion.
Marion Tinsley.
1950, he was the up-and-coming favorite
to win the U.S. championship,
play for the world championship, and win it.
In 1950, he's playing in the last round
for the U.S. championship.
In a winning position,
he had a one-move oversight,
and blundered, and lost the game,
and he didn't finish first,
which means he didn't play for the world championship,
and he was stunned.
Everybody was shocked.
He disappeared for two years.
He came back in 1952 and he won everything,
including the right to play for the world championship,
went to the world championship, and won it.
In 1958, he won the world championship,
or defended his world championship,
and then he retired.
He said, you know what?
I don't need this anymore.
He went and finished his Ph.D. in math
at Ohio State University.
Friends convinced him to come back in 1970.
He won the U.S. championship,
was going to play for the world championship,
but the world champion was ill.
He had a heart attack.
Tinsley said, I don't want to play him,
and so he went back into retirement.
In 1975, the world champion at the time died.
Tinsley was convinced to come back.
He won the U.S. championship,
he won the world championship,
played it, held it until 1991 when he retired.
If you go back to that fateful game in 1950,
and look what he did between 1950 and 1991,
he finished first in every tournament he played in.
Not shared first, first.
He played multiple matches,
including for the world championship,
and he won them, usually by a wide margin.
And he literally crushed the opposition.
So early on, I called Mary and Tinsley a human computer.
Well, there's some truth in that.
Is this man or machine?
Because from the period 1950 to 1992,
Tinsley only lost three games of checkers.
Three games of checkers out of thousands that he played.
You don't think of humans being that good.
You think of machines having that level of perfection.
If you ever asked Tinsley how many games he lost,
he would shake his head sadly and say it was five.
Five. Why was it five?
Well, Tinsley often gave exhibitions,
so somebody would organize,
like you're going to play 40 people at a shopping mall,
you're going to play them all simultaneously,
well, once at a shopping mall,
while playing 40 people simultaneously in a winning position,
he inexplicably made a one-move blunder and lost.
I asked Grandmaster Don Lafferty
for many years the world's second best player
if he'd ever beaten Tinsley,
and the answer was yes, once.
On a Saturday night, late at night,
after we'd both had far too much to drink.
That was the only time Lafferty ever beat him.
Five losses over 40 years.
Basically, Tinsley's computer brain,
there was a neuron up there that misfired about every 14 years,
causing him to make a one-move blunder and lose a game.
There's only one recorded game where he got outplayed.
This man was more a machine than man.
So, prelude to the match.
We had just earned the right to play Tinsley
for the world championship.
What do you think the first thing Tinsley does?
He phones me up and he says,
hey, let's play a fun match.
What? The world champion wants to play a fun match?
He says, yeah, sure.
He's bored playing humans because he beats them.
And so we wanted to test himself out against the computer.
So we arranged for him, brought him to Edmonton,
and we played a match, and he beat us 7.5 to 6.5.
The first nine games were draws.
In the 10th game on the 10th move, something happened.
The program says even.
The program was flip-flopping between two moves,
and at the last minute chose a particular move.
In the moment I made that move, Tinsley said,
you're going to regret that.
And of course, I'm looking at the screen
and it says the game is even.
And a few moves later, Tinsley got an advantage,
and a few moves later, he's better,
and you know the whole story.
We lost that.
I was obsessed with that position.
I've done the analysis to the point from when he said
you're going to regret that to the loss is 64 moves.
And of course, I realized there's no way
I'm going to write a program that's going to analyze that deep.
I mean, the exponential growth is just enormous.
It just brought home how deep he was thinking
and he understood the game.
So we ended up losing the match 1 win to 0, 13 draws.
And again, being competitive, I was very upset that we lost.
But the checker world was a gog,
like you only lost by one game against Tinsley.
That's incredible.
Most telling was at the end of the match,
Tinsley said, I feel like a teenager again.
And I asked what he meant and he said,
playing against humans is boring.
Everybody knows how good I am.
And so they play drosh, boring games
because all they want to do is escape with the draw.
Nobody tries to beat me because they're not going to beat me.
Chinook had no respect for me.
It would walk on the edge of a precipice.
It would play loud, audacious, ridiculous moves, taunting Tinsley.
And he loved it and it reminded him of the rambunctious games
that he played when he was a teenager,
when he was learning the game.
And he said, I feel like a teenager again.
I want to play the computer.
Checkers is fun again.
And so, well, we ran into problems.
The American Checker Federation
and the English Drafts Association refused to sanction the match.
They said, oh, computers can't play.
This is the human world championship, they can't play.
And I said, look it, we abided by all the rules.
And they said, no you can't.
And then Tinsley said, I want to play the computer.
And the Checker Federation said no.
And he wrote a public letter saying they deservedly came second.
They were very strong.
I want to play them.
The Checker Federation said no.
So he said, OK, I resign.
No need the world championship, the world title.
And then he immediately signed on to play as a match.
The Checker Federations were agogged.
How can you have Tinsley not being the world champion?
But he refused to take the title back.
And so they gave him the title world champion emeritus.
And so they created a world man machine championship for the best man,
which was Tinsley, the best machine, which was Chinook.
And in August 1992, we went to London to play for the World Checkers Championship.
And there we are, the Park Lane Hotel.
Nice 3D visualization board.
You can't see it very clearly, but every time a move was made here on the computer,
there was a group up here, big audience.
Checkers is very popular, or drafts as it's called in the UK.
And so we had packed rooms for all of the games.
So match starts and the first thing, the first day was terrible.
Tinsley pressed hard in game one.
And I thought we were going to lose.
And I'm sitting on stage and I'm sweating.
All the media is there.
I mean, this was a big event.
Think Deep Blue.
And I'm sitting there, please, don't let me lose on day one.
Please don't let me lose.
And I thought we're going to lose.
And then all of a sudden, the program found its way into a draw.
And I knew we were safe.
We now had the seven-piece databases and a few of the eight-piece,
37 billion positions in the database.
And the program had found a path from the current position into a drawn database position.
I offered Tinsley a draw.
He declined.
So we played on a few more moves.
And I offered Tinsley a draw again.
And he declined.
We played on a few more moves.
I offered him again.
And he declined.
And I said, look, Marion, we're in our databases.
It's a draw.
You can play as long as you want, but we're not going to lose.
And he was stunned.
He was sure he was winning.
So he immediately shook hands and we went on to the next game.
Tinsley won game five.
He played better.
And he was winning in game seven and couldn't.
Again, the program made his life complicated and we saved it.
And so clearly after the first few days of the matches,
the consensus looked like we were going to get crushed.
I'm full of stories and I'm going to run late.
But I have to tell you this story here because this is very important.
About halfway through the match, I got an email from back home.
And all it said was database failure.
Uh-oh.
I was computing databases.
And in the rush to get to the match,
I knew that the more databases made the program stronger.
Half the time was spent computing the database
and the other half was spent verifying it.
So about a couple months before the end,
before we went to London, I made the decision
I'm going to stop the verification because I want more databases computed.
I'll take a gamble.
And now that I'm in London playing the match,
I said okay, I'll start the verification running
because it's too late to compute any more databases.
And of course one of the databases failed and sent me an email.
But there's nothing I can do it.
I'm in the middle of the match.
Nothing I can do.
After the match was over, this took place in August and September.
I finally got back home and had some free time
and I started looking what happened with the databases.
And I tracked it down to a database.
The database was there.
It was the right size, everything.
The contents were all zero.
The file was just full of null bytes.
But in my compression scheme, a zero meant draw.
So if you ever got into that database,
it didn't matter what position, it was all draws.
Guess which database it was.
It turns out that in the game we were in a drawn position.
And if Tinsley had kept playing,
it's possible we would have moved to a position
that was actually a loss.
And of course I told him information that was actually wrong
and we did draw the game and we were never in a losing position
but had he kept playing, it's possible we could have lost that.
So very scary.
So we're down one to nothing.
Now, game eight.
Game eight starts and we had prepared the program
with some complex moves and it's a try and put Tinsley on his own.
And in game eight, an opening came up
that we were able to play a move that was quite complex
and everything went well.
Until about move 12, when Tinsley made a move
and Chinook suddenly said,
the game is no longer even, we have a small advantage.
And a few moves later, the advantage got bigger.
And a few moves later, the advantage got bigger.
And my eyes started bugging out.
I'm on the stage and I'm sitting there
trying to hold in my excitement.
And I got bigger and bigger and bigger.
And then finally, Tinsley reached out his hand
and resigned.
And I was stunned.
And the crowd rushed up and surrounded us.
All excited and everything because it had been an exciting game.
And they all started congratulating Tinsley.
And okay, I understand giving sympathy,
but hey, we won, this is like, we beat Tinsley.
This is big news.
And everyone's congratulating Tinsley
and I didn't understand what was going on
until the match arbiter, Con McCarrick,
goes over to Tinsley and shakes his hand and said,
I, Narian, that was a beautiful draw.
The depth of the games was such that people in the audience
didn't understand that Tinsley had resigned.
They thought it was a draw.
And Tinsley had to correct them.
And then they were stunned.
One of the reporters at that,
because this was the last game of the day,
one of the reporters, I don't remember which media outlet was there,
the end of the day, he just ran out and filed his story.
And of course the next day he says,
yeah, the games were all draws.
He had no idea that we had just made history.
Now, what do you do after you beat Tinsley?
It was like a dream of mine to beat Tinsley.
I mean, I had asked Laine in bed,
just fantasizing about beating Marion and Tinsley.
My wife looked at me sadly once while we were lying in bed
and she said, you're thinking about him again, aren't you?
I mean, what would you do if you finally beat Tinsley?
I thought I'd go out and party and buy a round for everybody,
I'd get drunk and whatever.
And me and my team, we went out that night and it was like a wake.
We were truly sad.
Over the few years we'd known Tinsley, we'd come to respect him
and we knew how painful this defeat was
and how upset and angry he was that losing.
And we felt a little bit of humanity ourselves
because we knew this was a milestone
that computers are now beating the very best humans at checkers
and if not checkers, eventually it would be chess.
And so it was a very sad event.
And that night, you know, I got back to my hotel room
and at three in the morning a reporter phoned me up
and I poured out my heart and soul to this reporter how upset I was.
Lesson, do not pour your heart and soul out to a reporter
because guess what appears the next day in the paper
is a lot of things that you probably didn't want to say.
It was actually pretty upsetting and I learned a lot about myself.
And so in Game 8 we won.
It was the first time a computer had defeated a world champion
in any game that was a non-exhibition game.
The next few games were draws
and in Game 14 it happened again.
He must have made an inferior move
and the advantage went up, up and up
and then the computer froze.
And I'm panicking.
It stopped. What's going on?
I had to leave my seat and go behind the curtains
where the computer was to take a look at the screen.
What's going on? Oh my, we've crashed. Something's wrong.
No. The computer had searched all the way to the end of the game,
had looked at all the scenarios,
it knew it was winning in every possible scenario.
There was nothing left to compute.
So it had stopped.
And a few moves later, Tinsley resigned and we won.
We were in up two to one.
That night I had no problems.
We went out and we partied.
We had a great time.
We were up two to one against the unbeatable Tinsley.
Fantastic.
On the way back home that night
I turned to my colleague and I said,
do you think it's possible?
Do you think we're going to beat Tinsley?
Wish I'd never said that.
Okay.
This is
the most painful day of my life.
August 23, 1992.
It's game 18.
We're on move 17.
Chinook has a big advantage
and I'm sitting there on stage thinking,
actually sorry, let me go back.
I'm jumping ahead.
I did first thing in the morning what I always would do.
Get up early, go down to the room,
make sure, you know, run the diagnostics on the computer,
make sure everything's okay.
Get down to the room,
unlock it, open the doors,
and I'm blasted by heat.
It was a small room and it was hot,
really hot.
What was wrong?
Well, you see, it's hard to get good help these days.
The hotel staff in the evening were supposed to
turn off the lights in the room
and turn on the air conditioning.
Off, on.
What they instead did is turn the lights on
and the air conditioning off in a small sealed room.
So it was really hot.
And when they opened the door,
the heat flooded out into the main room
where everybody would sit.
And so the first game that day was postponed for an hour
because the embarrassed hotel staff
had to go out and rent fans to try and cool the room down.
And so game 17 was played this Saturday morning
and we played it and we were sitting up on stage,
which was even hotter.
And after five moves, Tinsley just said,
look, I'm uncomfortable, I'm sweating.
This is ridiculous.
Let's just agree to a draw and take a break.
And I said, I'm up with it.
So game 17 was like a quick draw, done, finished.
We're off the stage, spectators were disappointed.
But there was another hour break
while we cooled the place down.
Then we started game 18.
Move 17.
Chinook's got a nice advantage.
And I'm sitting there on stage thinking, ha, ha,
this Tinsley guy, he's not so good.
We've got a big advantage.
We're probably going to win.
Fantastic.
Great.
And then the computer comes up and says,
beep, Tinsley database.
I thought, oh, darn.
I had put into the program's databases
all of the games that I could find that Tinsley had ever played.
And so when the Tinsley database message came up,
it found a way to go from the current position into a game
that Tinsley had previously played.
And Tinsley had this incredible memory.
He knew every single game that he'd ever played.
And I knew his memory was amazing.
And so I knew, even though the program said,
we were really, really in a good position,
I knew that we were going to draw it
because he would know this.
And I'm sitting there on stage
and just waiting for the program to move.
Draw me my fingers.
We had about 40 minutes left on our clock
to get to move 20.
So you have to play 20 moves in an hour.
We're at move 17.
So we only have three moves to make.
And we've got 40 minutes.
And the clock takes by.
And I'm dreaming, we're going to be up three to one.
This is going to be fantastic.
Man, just think of all the good things that are going to happen
with this milestone event.
Hmm, it's been 20 minutes.
That's a long think.
Wait a minute.
The program actually has a hard stop of 20 minutes for a move.
We're really over 20 minutes?
Yeah, we are.
How could that be?
And 20 minutes became 25 minutes.
And then 30 minutes.
I'm sitting there on stage.
You've got all of the media there.
You've got a couple hundred spectators.
During a game, I can't interfere in any way.
The program has to make the moves.
I'm just the operator.
And I sat there panicking because the program is just
computing, computing, something's going on.
And I watched there helplessly as the minutes ticked off.
And I watched the hour hand go around to the top
and then click our one hour was up.
We did not make the 20 moves.
We forfeited.
And so now, of course, what happens?
Well, I tried to talk to the computer, but I couldn't.
It was frozen.
It had crashed.
Something was wrong.
Actually, it hadn't crashed.
It was frozen.
I had no idea how that happened.
Tinsley was apologetic at winning this way,
but now the match was 2-2.
Nothing I could do.
And it was just absolutely terrible.
I spent that whole weekend trying to figure out what happened.
Was there a bug?
I don't know how to freeze the computer.
I don't know how my checker program could have frozen
this 8-processor Silicon Graphics computer,
but somehow it became frozen.
Was it a hardware problem?
The computer had been baked all night in this hot room.
And I talked to Silicon Graphics and they showed me a paper
out where they took their 8-processor Silicon Graphics
computer out to Death Valley in California for a weekend
and it correctly in parallel computed pi.
And so therefore, you know, it works in really hot weather
that you can compute pi.
Well, I said, you know, pi isn't like this.
We've got 8 processors, complex interactions,
a lot of message passing, a huge amount of disk activity
because you're reading the databases.
It's not the same thing.
Silicon Graphics said there was no hardware problem.
Was it a hotel problem?
I mean, it didn't happen any day before.
It never happened again.
It only happened on this day when the computer got baked.
I have no idea what happened that day.
But we forfeited.
And I spent the entire weekend at the computer
working with it, testing it, trying to recreate the problem.
And I showed up Monday morning to play Tinsley
and he was dressed as he usually is in a three-piece suit
and I had bags under my eyes and stubble on my face
because I'd literally been up the whole weekend
trying to figure out what was going on.
And to this day, I had no idea what happened except we lost.
One of the most horrible experiences of my life
was sitting on stage for the last half of that 40 minutes
knowing that something is wrong,
something helpless to do anything
and listening to the audience,
the audience talking in murmury.
As it came closer and closer to the program forfeiting,
you could just hear the people,
what's going on? What's going on?
Why isn't it moving? What's happening?
And as the program ticked down to forfeiting,
you'd just hear people go,
what? Move! Do something!
And I'm on stage and I'm helpless
and there's nothing I could do and it's just burned into my head
and we lost.
The next day, or a couple days later,
Tinsley accidentally won Game 25
and he paid us the sincerest compliment.
He said, I've had a scare.
I'm now going to play drosh, boring checkers against you
and I'm going to wait for you to make a mistake
in Game 25 and he played dull, boring drosh checkers
the west of the way and we never had a chance to win a game.
That was the ultimate compliment
because he had criticized other players
for playing that way against him
and now he was playing that way against us.
In Game 39, we're down by one game.
We need to win the game.
I set the program to have a draw being equal to a loss
because a draw did us no good
and of course the program found a draw
and would not take the draw
because I'd set it to be a loss
and we kept playing trying to win
and we eventually lost.
The final score was 20.5 for Tinsley,
Chinook, 18.5.
People were impressed.
It was a great result
but it might have been different
had it not been for Game 18.
A couple weeks after the match,
the nightmare started.
I started reliving Game 18,
those final 20 minutes.
I'd wake up in the middle of the night in a cold sweat
because I could hear the voices in the audience.
Why isn't it moving? What's going on?
It happened night after night after night.
People told me I had an interesting story
so I decided I had to write a book
and I wrote a book
but I could not write about Game 18
it upset me so much
and finally I had the whole book written
except for this part
and I said I got to do it, I got to do it, I got to do it
and I sat down
and I wrote about Game 18.
Done. I never went back and edited.
Done. Finished.
And I never had the nightmares again.
They stopped the next day.
Gone.
If I had known
that this would be so therapeutic to write this out
and express my feelings and emotions,
I would have done it long ago
but in the end I tortured myself by not writing it.
Anyway, the book came out in 1997.
One jump ahead challenging human supremacy in checkers
and I'm very proud of it.
It's not technical, it's this talk that I'm giving.
It's this and many other stories.
I wanted revenge
so I had to spend two years waiting for a rematch in 1994.
1994, deeper searching.
We're going 17 to 29 moves ahead.
What human can think compute that far but Tinsley could?
Improving our openings, improving our knowledge,
improving our end games.
We eventually computed all of the AP's databases.
406 billion positions in the program's memory.
The match was played at the computer museum in Boston.
That museum has now moved to Mountain View, California.
And it went off to a very strange start.
On the first day I phoned up Tinsley and I said,
let's walk over to the museum together and he said, fine.
And we're walking over and he's unusually quiet.
And then he tells me something strange.
First of all you need to know that Tinsley was also a Baptist minister.
He was a very religious person.
And he talked many times about doing God's work.
And on the walk over he turns to me and he said,
I had a dream last night.
And he said, in that dream God told me that he loved you too.
That he loved Jonathan as well.
And I looked at Tinsley in shock because at times he sort of portrayed me as the devil, right?
And he's doing God's work to slay the devil.
And I looked at him in shock and he looked at me back
and he shook his head sadly and I said, I know.
It was a very upsetting dream.
But this was so on Tinsley-like.
And then we played game one and it was a draw.
And then we played game two and Tinsley was in a lot of trouble.
And we thought he might lose it and in the end he squeaked out a draw
and it came to a critical position and after the game he told me
and he said there were six moves in that position.
I knew that five of them lost and the sixth one I didn't know
and I just put my faith in God and played the sixth move.
And it drew and I thought, boy this isn't like Tinsley.
He's such a confident person.
How could he just put his faith in God and make a move and not know?
Very strange.
A couple of games later he asked me about Derek Oldbury.
Derek was the world champion because remember Tinsley had resigned.
Derek was now the world champion but he got no respect
because he was nowhere near Tinsley's class.
And he knew that I'd played,
Chinook had played an exhibition match against Oldbury
as preparation to play Tinsley and it was all secret
and unfortunately Oldbury died about a month before we played Tinsley
and Tinsley asked, well now that Derek's dead it doesn't matter.
Maybe you could tell me what happened in the match
and I said well we beat Oldbury, three wins, no losses, 13 draws.
And Tinsley said, hmm, Chinook plays Oldbury.
Oldbury dies.
Therefore Oldbury must have died of Chinookitis.
That is so funny.
He dies of Chinookitis.
And I'm sitting there thinking, what's so funny about that?
First of all his logic is terrible.
But second of all to tie Oldbury's death,
well if you play Chinook you're going to die.
And so it was a very morbid discussion.
Anyway the first six games were all drawn.
Chinook's play was flawless.
Chinook looked bloody impressive.
The next day I phoned Tinsley up and I said, let's go.
Walked together and he immediately said, sorry,
let me suggest the unthinkable.
He said, I'd like to resign the match and the title to Chinook.
And I said why?
And he said, well I had an upset stomach last night
I wasn't feeling well.
And I said, okay, you're not feeling well.
I'm sorry about that.
We're going to postpone the games for today.
Really, I don't want to play.
Look, let's take you to the hospital.
We'll figure it out.
Let's get you better and then we'll worry about the match.
And he said, fine.
So I took him to the hospital.
He spent a whole day there.
They did tests.
And because of the upset stomach the doctors gave him the okay
but they wanted to do X-rays as a precaution.
I mean he was like 65, 66 years old.
And at the end of the day Tinsley was in a good mood
and said, yeah, we'll play again tomorrow.
So I thought, dodged a bullet.
The next morning Tinsley says I resigned the match
and the title and you can't do anything about it.
Done.
So what's wrong?
He said I had my upset stomach again.
And I said, but you got your X-ray.
We're going to hear the results.
And he said, no, we're done.
He was adamant we couldn't do it.
But he agreed to postpone the announcement of the match
until after the X-ray results were known.
So I went to the match site and told the rest of my team
and we were all upset and we're sitting there
and the media is there and spectators are there.
What do you do?
We're all set up to play and there's no Tinsley
and we're not going to announce that he's resigned
because he agreed to postpone it.
What happens?
Tinsley shows up.
What does he want to do?
He wants to play checkers.
Not a game.
He wants to analyze some positions.
So we sit there for an hour analyzing positions
and the match arbiter comes in and says, what the hell is going on?
I said, we're playing checkers with Tinsley.
And he said, the guy is apparently too sick to play the match
that he's resigning.
What's he doing here?
And I said, that's what he wants to do.
And he said, well, what were the results of the X-ray?
And I said, I don't know.
He hasn't called.
So the arbiter goes up and says, why haven't you called
about the X-rays?
And he says, well, I'll call now.
So he disappears and we're all sort of perplexed at his behavior.
Tinsley makes the phone call, comes back.
And I said, well, what were the X-ray results?
And he said, ah, they found a lump on my pancreas.
Yeah, no big deal.
You see, bright and cheery.
Now, if it was me, I would have been scared to death.
A lump on my pancreas, that doesn't sound good.
But the match officials sent him home because they're
about to announce that he's too sick to play.
And you couldn't have somebody too sick to play sitting there
playing checkers.
He refused to continue.
And we won the world championship after six games,
all draws on forfeit.
What do you do when you're in Boston all set up for a world
championship and you have nothing to do?
Tinsley said, why don't you bring in Don Lafferty,
the world's number two player, and play an exhibition match?
We were so upset.
We just wanted to go home.
We played Lafferty.
We lost a game.
We've gone like 150 games without a loss.
I've been so careful in testing the program.
A couple weeks before, I found something wrong.
And I've been in a rush and I fixed it.
And I had an if statement, which had an and in it.
And it should have had an or.
And I hadn't tested it.
And we lost the game.
We won another game.
Lafferty played boring checkers to draw every game.
So it was a drawn match and we retained the title.
So we win it on forfeit and we retain it with a draw.
It was absolutely terrible.
Then the American Checker Federation and the English
Drafts Association threatened us with legal action.
Of course, there was a contract that said whoever wins
the match is world champion, but they threatened us
with legal action.
And then they wrote angry letters to my chair,
my dean, my university president, and the media.
There was an anti-Shanuk internet campaign.
It was a horrible time.
In 1995, January, we played another match against Lafferty
and we beat him.
In April 1995, Tinsley unfortunately passed away.
It turned out that that lump on his pancreas
was pancreatic cancer and he passed away.
And in 1996, Shanuk was crushing everybody.
Because nobody was even close to Tinsley.
In the U.S. championship, there were 32 games.
It scored 30 out of 32 points.
Second place scored 22 out of 32 points.
I mean, the gap was so huge.
It was a horrible time.
And we got lots of accolades which made things better.
First computer to win a human world championship in any game.
It's from the Guinness Book of World Records.
We're a trivial pursuit question, which is kind of cool.
We're on Who Wants to Be a Millionaire?
A popular game show from a few years back.
It was a $16,000, only $16,000 question.
Come on.
But for me, there was still a sense of unfinished business.
I'm over time, so I will speed up and finish this talk.
My apologies.
But then I started getting all the hate mail
from the checkers player.
Shanuk doesn't hold a candle to Tinsley.
In his prime, Tinsley would crush Shanuk.
You know, Tinsley was almost perfect.
He did lose three games.
He wasn't perfect.
And if I wanted to prove to everybody that my program was
better than humans, I had to be better than Tinsley.
If he was almost perfect, I had to be perfect.
So I had to solve the game of checkers.
There are some games that you can solve that are simpler.
They have smaller search complexity or decision complexity.
Checkers is 500 billion billion positions.
That's a big number.
I'm sure you have no idea how to comprehend a number like that,
but I'll give you a good example.
Let's take the Pacific Ocean.
And I know that you probably don't study oceanography,
but if you go to the deepest part, there's actually a big plug there.
And if you remove the plug and drain all the water,
it's really a big sink, and you drain all the water
and it's empty and you put the plug back in,
now your task is to refill the Pacific Ocean.
So we're going to give you a house in Seattle.
You can turn on the tap and I'm going to give you a teaspoon.
You can put the teaspoon underneath the tap,
walk over to the Pacific Ocean,
and dump the teaspoon into the Pacific Ocean.
And then go back and fill another teaspoon with water
and go over to the Pacific Ocean and dump it in.
If you do it roughly this number of times,
you will refill the Pacific Ocean.
I'll leave that as an exercise for the ambitious student.
Basically, for a non-trivial game,
checkers was 10 to the 7 times bigger than Awari,
which had been solved.
So we're talking about 10 million times bigger.
And I said, I'm going to solve this problem.
And I'm going to do it.
And people said, well, why don't you do it incrementally,
bits at a time?
I said, no.
My goal is I want one fantastic paper in science.
That's my goal.
And then I got a review back saying,
what a moron, Jonathan.
Don't you know how to play the publishing game?
You're supposed to take what you got and make it 10%
better or bigger, and then you publish a paper.
And then you take that and you make it 10% or 20% better,
and you publish another paper.
You can milk this for a dozen papers.
And I said, no.
I'm not going to waste my time.
I'm not interested in the papers.
I want that one nugget of gold at the end.
I want a paper in science.
So I continued computing end game databases.
They started in 1989.
At various points, they were running on hundreds of processes
around the world.
And eventually, I computed up to all positions with 10 or fewer
positions on the board.
Let's see.
Not 1,000 or 1,000,000 or 1,000,000 trillion.
39 trillion positions in the program's memory.
If ever you do the analysis and you come down to 10 positions
or 10 pieces or less, you know the exact answer.
Win, loss, or draw.
Here's an example of the databases.
This is a famous example.
It's called the 100-year position.
White to move and win.
You don't care much about the position.
The point was this was posed in the year 1800.
And this is pre-internet.
Yes, there is something called pre-internet.
But pre-internet days where this position was heavily
discussed in chess magazines.
So somebody in the year 1800 published this and said,
I think white wins.
And like six months later in another magazine,
somebody published an analysis that said, no, it's a draw.
And two years later in another magazine,
somebody published an analysis and said it's win.
This went on for 100 years back and forth in magazines
before they concluded it's a win.
Grandmaster Don Lafferty gave it to me and he said,
you know, there's 10 pieces on the board.
You should be able to look it up in your database.
What's the result for the 100-year position?
We looked it up and it's a draw.
And it turns out that on the third move of the analysis,
black has to play an unhuman-like move.
And once Don Lafferty saw what it was,
he went like this.
Now it's obvious it's a draw.
But it wasn't obvious before because the computer
looks at everything and humans are biased.
It's now called the 197-year position because the first
publication was in the year 1800 and in 1997 we solved it.
Here's how we did the solving.
This is 24 pieces on the board down to zero.
The width here is the log of the search space.
So you can see that it's pretty wide here
because the log is like two and then three and bigger.
And the widest is at 24 or actually 23 is the biggest size.
Whenever you get down to 10 pieces or less,
we look it up in the database.
Here's the perfect information.
I had a master process that was maintaining the main line
of play.
It would decide what pieces of work
needed to be done to prove or disprove whether a line of play
was good or not.
Each of those dots represents a piece of work.
I had hundreds of processors that would pick off pieces of work
like this one, grab it, do the work, send the result back,
which would then update this picture.
And so for two years this process would continue
as we refined the strategy.
Processors working in parallel for two years.
The longest line in the proof was 154 moves.
At the end of it was a position that was searched
possibly more than 30 moves.
At the end of it was a database position
which may have been searched to 250 moves deep.
In other words, it's possible that the longest line
in the actual proof from the start of the game
to the literal end of the game was well over 400 moves.
And it was a smart search because I put a lot of effort
into refining the search algorithms.
Even though the search space was 10 to the 20th,
we only had to look at 10 to the 14th positions
in order to do the proof.
Huge, huge reduction in search space.
I want to throw this in just as a warning.
This was as much research in AI as it was in reliable systems
because you have to be careful of disk IO failures.
I mean, I told you I had a database full of null bytes.
What the hell happened there?
I don't know.
Network failures, memory parity errors.
Somebody tried to reproduce my results
and we got different results and we tracked it back
and it turned out that in 1992 one of my computations
was correct and I had it on my disk.
And then six years later when I looked at it,
one bit in the database had changed, one bit.
And it was wrong.
And all my computations that depended on that data since then
were now flawed and had to be redone,
which meant every day I would do a verification
that the data had not changed.
And every few months you would find that a bit would be flipped.
It's perfectly normal.
It happens.
Discs are not 100% perfect.
They're bugs and all sorts of other problems.
So if you want to say that you're proving something,
you've got to be 100% correct,
100% is a pretty high standard.
So, punch line.
Ta-da.
And it's literally ta-da.
Because I wrote a script to do all of this
and if it ever reached the end of the script,
it was to send me an email.
And the email only said ta-da.
And I got an email one day saying ta-da.
So, here's the punch line.
If neither side makes a mistake,
then a game of checkers will end in a draw.
Perfect play by both sides leads to a draw.
So I now have a theorem that perfect play leads to a draw
and the proof is constructive.
I have a construction.
The formal proof fits up on my web
and you can actually go through it and see the proof.
But I have something that most people don't have
when they do a proof.
My proof completed on April the 29th,
2007 at 5.01 p.m. California time.
I was in California with my daughter and I had an urge.
I said, Rebecca, I need to check on the checkers computations.
I need to check in on the checkers computations.
So we checked into a hotel
and I went up and hooked up my computer and logged in.
And was pissed off because all the computers were down.
And I was about to restart them when I looked at the log file.
That was the time stamp.
The computation had ended.
And what shocked me, you know I said I had this feeling
I had to log in?
The computation had ended one minute before I looked at this file.
Which meant I was literally online checking to see what was going on
within 60 seconds of the computation ended.
And what's even weirder, I'm in California.
My postdoc who was working with me was in Edmonton.
He had this funny feeling too.
And he logged in at the same time.
And we were chatting back and forth within like two minutes
of the computation ending.
It was absolutely bizarre.
So the corollary is that because perfect play leads to a draw
the corollary is that Chinook will never lose.
Never lose.
And so the implication is that Tinsley occasionally made a mistake.
Therefore being human I now know that my program is better than Tinsley.
Not the easiest way to do that.
Some recognition.
I published my paper in Science.
And Science and Nature Ranked.
It was one of the top ten breakthroughs for 2007.
New York Times ran a great piece in their year-end magazine
called The Death of Checkers.
And they have this picture that I love.
It's meant to be humans being buried under my 40 trillion
data-based positions.
It's a great example.
Last word.
This is from my wife.
And I don't know why I put this here because she doesn't know me well enough.
She said it was 1989, 2007.
But that's when we started competing.
But it actually started in 1988.
She said it's been 18 years.
Correct.
This is not fake news.
Let's deal with facts.
18 years.
Correct.
Obsessive compulsive behavior.
That is not correct.
There is nothing wrong with being passionate about a problem
and pursuing it for 18 years.
That is not obsessive compulsive behavior.
Now this really hurt.
Not normal.
The commitment to scientific purity.
She did not understand how important it was
the standard to reach 100%.
Scientists are perfectionists.
We want to leave our mark.
But then she struck below the bell.
Get a life, Jonathan.
OK.
Well, I hate to say it, but you really didn't think
I'd give my wife the last word, did you?
The other was the end of the project, but I lied.
I took my book from One Jump Ahead,
which was Challenging Human Supremacy at Checkers.
And then I updated it and added the next 10 years
and it became One Jump Ahead Computer Perfection at Checkers.
And that came out in 2008.
So this is a story.
It technically ends in 2008, but it doesn't end.
There's rarely a week that goes by when I don't get
a computer scientist or a checker player or a media or whatever.
And it's only with hindsight that I can look back
and I say I went through an amazing experience,
something that was life-altering to me
and has had profound implications for my life
and how I live it.
And I feel privileged to have known Marion Tinsley
and have gone through this obsessive compulsive quest.
So thank you for your interest in my apologies for going over.
I have lots more stories and I just, you know,
it brings back memories to give this talk.
I give this talk three, four times a year now still
and even some groups have asked me to give it again and saying,
you know, you told us those stories last time.
We want to hear new stories because there are lots of other stories.
So who knows?
So thank you very much.
And, you know, please feel free to leave.
You've been great staying as long,
but I'm happy to stay around as long as necessary
and answer whatever questions you have.
Thank you.
Let's do a few questions at least and we'll see where it goes.
Questions? Yes, sir.
Do you want an update on the chess game?
Sure.
They're still playing.
Is it a draw?
Okay.
This is the match between American Fabiano Calrana
and Norwegian Magnus Carlsen for the World Chess Championship.
It just happened to have started today.
It's going on in London.
The one move was a white to D4.
Yeah, not a surprise.
Yes.
So when you're faced with, you know,
a question that is massive is, you know,
even just starting to write a program that could play chess
or it could play it candidly.
What was, like, what are the first steps
of being taken?
How do you approach starting a problem,
like picking out a problem like that?
Well, first of all, I didn't know it was going to be this big
of a problem, so I might have done it differently.
And what I did is I just wrote actually a very simple program
to just play legal moves and display things
just to see how much work it was
and whether it was interesting or not.
If I was going to undertake anything big,
I had to do something that I thought was interesting.
So by just doing something really small,
like just making moves on the checkerboard
was my interest still.
You know, I've taken on a lot of projects
and I start programming them and then I lose interest
and then you never finish the code.
And so I need to do something with it
that keeps the momentum going
because the more you get involved with something,
the more that you're going to end up putting into it
and I don't want to invest my time and effort
on something frivolous that I'm going to drop
a day, a week, a month later.
And I've done a few of those things
and, you know, I've regretted the time.
I mean, we've done this and, you know,
I seem to be addicted to long-running projects.
Our poker project started in 1995
and ended earlier this year, so that's 23 years.
So it even trumps the...
Oh, I can't say that.
It even is longer than the checker's project, right?
So you've got to be not obsessive.
Determined.
And once I think something's worthwhile,
then I'll pour my heart and soul into it,
but I've got to get to the point where I see
that I want that commitment.
Yes?
Do you have anyone trying to challenge Chinook nowadays?
No. I mean, it's perfect.
So you can play Chinook, but you'll never win.
We have Chinook online.
It goes on and off online
because the hardware we have right now
is getting old and failing, so I haven't replaced it.
And there are strong humans that continue to like to play against it,
using it as a sparring partner.
But, you know, the game is over from the computer science point of view.
There's nothing interesting left to do.
Actually, that's not true.
There is one thing interesting left to do,
and that's, if you don't mind, I'll add some technical stuff.
Just one thing.
This interests me, and this...
Why does this interest me?
Well, Marion Tinsley, or any checker player, or chess player,
they're really good at playing chess, or checkers,
and they're not going to memorize 40 trillion positions.
How do you play a game?
You use heuristics.
You know, in chess, you might say,
it's good to centralize my pieces,
or I need to do king safety.
You come up with heuristics,
and I can explain a lot of those heuristics to you.
But if I ask, if I gave you a position
with four white pieces versus four black pieces,
and I say, oh, you know, here it is in the database,
it's a win.
And the human says, why?
I say, I have no idea.
The program says it's a win.
So what I really want to do, and I'm going to try that this year,
and I've tried before, and it's failed,
but with all the hype about deep learning,
I want to try deep learning on this,
I want to see if I can take something like one of these databases
and run it through a learning algorithm
and try and compress it into a smaller number
of explainable heuristics
so that I could use this to write a book.
So you want to learn how to play the checker end games?
I have this program, I run it, and it will tell you
you should do the following things
if you're going to win the position.
And I can't do that right now.
And so I've got a lot of data, but I have no knowledge.
And humans need knowledge, not data.
I'd love to be able to do that.
Yes, sir.
Like you said, no one's going to memorize 40 trillion positions.
So I guess my question is, what sort of long-term effect
do you think this will have on checkers at the highest level?
They still play.
But checkers is not so popular.
It's a dying game now.
If you look at the worldwide number of people in the American
and the checker federations, you're talking about
a few tens of thousands of people.
Whereas in chess, worldwide, you're talking maybe a few million people.
So checkers has been dwarfed by chess
and checkers is not going to recover.
It's a fun game.
It's a challenging game.
The rules are very simple and elegant,
but it has not attracted people's attention.
So that game is just slowly disappearing.
I guess to clarify, do you think that we can derive any benefit personally
from solving these sorts of geometric puzzles like chess?
What do you mean?
Research-wise, what are the outcomes
for solving something like that?
I'm just saying hypothetically, it's possible to solve the chess puzzle.
So just using chess as the example, since it's the more popular of the two,
I guess I'm just wondering if this would make the world of chess a better place.
Solving it, I don't think it makes a difference.
I mean, we have superhuman chess playing programs and nobody cares.
They use them as sparring partners.
But solving chess would be interesting.
And solving checkers was interesting at one point.
Sorry, I'm just trying to get to here.
One of the effects of this is DARPA held two workshops
on solving games of national importance.
And this was because of the work that we were doing on chess and checkers,
which were very large search spaces.
And it turns out that a lot of real-world problems can be couched as games.
Politics is a game.
Military is a game.
Certain kinds of legislation laws, like environmental laws, can be couched as a game.
The way animals interact is a game.
The economy is a game.
Multiple players, imperfect information, things like that.
And DARPA was interested in how do we take games,
like we'd solve the game of 10 to the 20th, which for 2007 is like a massive,
is the biggest computational problem solved today.
And DARPA had done the work to take some real-world games
and try and express real-world problems and express them as games,
and they were coming up with 10 to the 100th.
So how do you get from solving games of size 10 to the 20th to 10 to the 100th?
Oh, it's only a factor of five, right?
No, it's not a factor of five.
It's much, much bigger than that.
And so solving games, bigger games like chess would be amazing
because although the actual solving of chess,
do we really care whether chess with perfect play is a draw or not?
No. Do we care that checkers is a draw or not?
No.
It's about what are the techniques and the technologies
that you would allow you to get to solve such really hard and complex problems.
And again, like I said at the beginning,
I want to emphasize this is not about games.
It's about general-purpose techniques that you can use for other applications.
This one, my talk became much more personal,
so there was obviously a large game component in my talk,
but the end result had to be papers that were generally applicable.
Did I have it?
Most interesting result that has used my research.
Well, let me tell you one thing that was completely unexpected
and it goes back to this slide.
So you look at that and you say, OK, it's a big number.
But remember, we're talking about, years ago,
we're not talking about cheap gigabyte disks.
And how many what?
That's a billion, so we're talking about 39,000 gigabytes
or 39 terabytes.
Well, back then it was $5,000 for a gigabyte.
I'm not going to afford a terabyte.
It couldn't.
So I spent a lot of time and effort,
which has nothing to do with AI,
in coming up with compression algorithms.
So this whole stuff got compressed down to six gigabytes.
I had to invent new compression algorithms,
application dependent, massive amount of compression,
and then doing real time searching on it
because you're playing a game,
which means you come across a business,
you got to go and you got to decompress part of the file,
extract the information.
You can't take a six gigabyte file and just unzip it
and then look up a position and zip it.
But you can't.
So you got to take pieces and decompress them,
pull things out.
And OK, fine.
So I developed this technology and thought nothing of it
until a couple years after the Second Tinsley match
when two biochemists walked into my office and said,
you know, we know what you did with the checkers program
and we think it has applications to bioinformatics.
Well, I don't know much about bioinformatics.
I hated my undergrad biology course.
And he said, well, let's not talk about checker positions
when lost draw.
Let's talk about the letters, ACGT, DNA.
Well, your database is just a string of wins, lost draws,
but it could be ACGT.
And if we gave you large data, could you compress it?
Similarly, I said, well, yeah, we could try that out.
And he said, well, and if you have large data
and you compressed it, could we use some of your technology
to in real time go and search it and pull information out?
I said, sure.
He said, OK, well, we're working on the human genome project.
We're generating massive amounts of ACGT data
and we want to have these programs be able to analyze this data
in real time.
And instead of using big, massive data servers,
we want this all compressed on something that somebody
could do something on their laptop.
Huh, we talked about it.
Within six months, we formed a company called Biotools.
And we developed three products, Peptool, GeneTool,
and Chromotool, which did protein and DNA analysis.
And we sold those products to thousands of research labs
around the world.
And I was very proud of it that here was DNA protein analysis
software with checkers inside.
And I never would have made that connection.
And so, yeah, we did it.
We made a bit of money.
We sold the company.
And in many ways, I'm proud of it because one of the major
companies who did a lot of the DNA analysis used our software
and they were very complimentary about how much it helped
speed up their processes.
And so it's kind of an odd story.
But you never know where technology is going to go.
And that's cool.
I guess the other story I like, which was really good to me,
is I've developed a lot of pathfinding algorithms.
And you go in and you publish them.
These pathfinding algorithms can be used in GPS systems,
but I often use these examples in computer games.
And we develop an algorithm, a hierarchical pathfinding that
was very fast.
And at a conference called AIID, Artificial Intelligence
Interactive Digital Entertainment, which is on my mind
because we're hosting it next week in Edmonton.
But at one of the conferences, one of the major computer games
companies, the guy comes up to me and says, yeah,
we really like your hierarchical pathfinding.
We use it for all of our pathfinding in games.
And I thought, wow, how cool is that that this multi-gazillion
billion dollar company and my software, my algorithm,
is in their products that sell 10, 20, 50 million copies.
I wrote Chinook.
How many people in the world have ever played against Chinook?
Not many.
How many people have played these games?
Tens or hundreds of millions of people.
And I thought, that's cool.
Now, how about a royalty that didn't get anything?
That's part of the problem of being an academic is you publish
things and you never know how they're going to be used
and you never know if they're going to be used.
But finally, when you get that kind of feedback,
it's very, very rewarding.
Yes, sir?
I think it would be ironic if your compression helped
solve pancreatic cancer.
The other question is, well, these long projects seem like
something you could only do after you got tenure.
How could anybody, I mean, how could you keep your
department happy if you're just playing checkers all the time?
So that's a good point.
I actually started this project in 88 and I did not get
tenure until 89, but that was close enough.
You raised a good point.
I kept my research group going and I had other projects
on the go, but this was my passion.
This is where I poured most of my time and effort into it.
But the interesting thing is that the two years where I put
the most time and effort, which was 1992 for the first match
against Tinsley in 1994, which is the second match of the
Tinsley, there I poured my heart and soul into those efforts
and there were almost no publications that year because
of doing this.
And those are the only two years in my academic career where
I got substandard evaluations because I wasn't publishing.
It sort of reinforced the publisher paradigm.
If you didn't publish, well, sorry, but I was doing something
that I felt was bigger and in the long run I was right.
But you're absolutely right.
Most people can't commit to this type of thing at an early
stage of their career.
It would be suicide.
Oh, sorry.
It would be professional suicide.
I've got to be careful what I say, especially to graduate
students.
Yes, other questions?
Thank you again.
Thank you.
Give you a small applause from the department.
Wonderful.
Thank you.
My pleasure.
