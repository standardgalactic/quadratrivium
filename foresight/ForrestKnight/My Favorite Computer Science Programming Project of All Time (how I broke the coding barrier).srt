1
00:00:00,000 --> 00:00:06,000
Earlier today I was looking at some, uh, old computer science programs that I wrote back in college.

2
00:00:06,000 --> 00:00:10,800
Gaussian Elimination in C++, for loop, nested for loop, nested for loop.

3
00:00:12,160 --> 00:00:15,040
Yeah, well, uh, I like for loops. What can I say?

4
00:00:15,040 --> 00:00:18,080
De-deck of cards? Whatever that means.

5
00:00:18,080 --> 00:00:21,040
I don't think there's anything I hated more than header files.

6
00:00:21,040 --> 00:00:25,440
The only nice thing about it is that my professor would like create the header files for us.

7
00:00:25,440 --> 00:00:28,960
So it really made us writing the C++ file a whole lot easier.

8
00:00:28,960 --> 00:00:33,360
But other than that, screw header files, that's probably why I became a Java Dev.

9
00:00:33,360 --> 00:00:37,600
A programmer too, where like you would take all of your C++ knowledge

10
00:00:37,600 --> 00:00:40,720
that you wrote that program in and then convert it over into Java.

11
00:00:40,720 --> 00:00:44,000
Java, Java, Java. I thought I created this in C++.

12
00:00:44,000 --> 00:00:46,000
Ah, I did create this in C++.

13
00:00:46,000 --> 00:00:47,360
And that was the plan for this video.

14
00:00:47,360 --> 00:00:50,960
I just wanted to kind of take y'all through that, give some of my thoughts,

15
00:00:50,960 --> 00:00:53,280
and kind of just go through each program.

16
00:00:54,080 --> 00:01:01,920
I'm going to redirect it because I found this wrestling tournament simulation program.

17
00:01:01,920 --> 00:01:05,840
On no way. This is a wrestling tournament. I forgot this even existed.

18
00:01:05,840 --> 00:01:10,720
This was that one program that like just made everything make sense for me.

19
00:01:10,720 --> 00:01:13,600
It was in advanced data structures and algorithms.

20
00:01:13,600 --> 00:01:15,520
And it taught me more.

21
00:01:15,520 --> 00:01:19,120
Well, it instilled like programming fundamentals

22
00:01:19,120 --> 00:01:22,960
and me more than like any other class or program that I ever wrote.

23
00:01:22,960 --> 00:01:25,840
It was the program that just like broke down the coding barrier for me.

24
00:01:25,840 --> 00:01:29,840
That moment that just everything started to make sense.

25
00:01:29,840 --> 00:01:32,720
Oh my gosh. And I have all of the requirements for it too.

26
00:01:33,520 --> 00:01:38,240
Huh. I wonder if Morse would mind if I leaked these.

27
00:01:39,200 --> 00:01:42,720
What would that be? Like six years after the fact?

28
00:01:42,720 --> 00:01:45,840
I was just going to go through some of these programs.

29
00:01:45,840 --> 00:01:47,120
But I got a better idea.

30
00:01:47,120 --> 00:01:50,480
And I kind of spilled coffee all over my desk right here.

31
00:01:50,480 --> 00:01:51,840
And it got on my clothes.

32
00:01:51,840 --> 00:01:53,520
Look, we got all the code here.

33
00:01:53,520 --> 00:01:55,680
We have all the requirements here.

34
00:01:55,680 --> 00:02:01,040
So instead of just like briefly going over all of these like random computer science programs

35
00:02:01,040 --> 00:02:04,640
where you don't really dive into too much over the course of like 10 programs,

36
00:02:05,200 --> 00:02:07,280
let's go into more depth on this one.

37
00:02:07,280 --> 00:02:08,880
We can discuss the requirements.

38
00:02:08,880 --> 00:02:10,960
We did a whole entire design plan for this.

39
00:02:10,960 --> 00:02:16,480
We can go over the code and my poorly written no header file, everything,

40
00:02:16,480 --> 00:02:19,360
all classes in one file looking at code.

41
00:02:19,360 --> 00:02:20,080
So let's do that.

42
00:02:20,080 --> 00:02:21,520
I got to get my barren straight here.

43
00:02:21,520 --> 00:02:24,480
Look at some of the requirements and, you know, take a sneak peek at the code

44
00:02:24,480 --> 00:02:26,720
so I can actually explain it well to y'all.

45
00:02:26,720 --> 00:02:30,640
And also I feel like every time I move my mouse that I'm just like dipped in coffee.

46
00:02:30,640 --> 00:02:32,560
So I got to clean that up a little bit.

47
00:02:32,560 --> 00:02:33,760
You know, Zen, cool.

48
00:02:33,760 --> 00:02:34,560
All right.

49
00:02:34,560 --> 00:02:37,840
And so yeah, I'll be right back until then.

50
00:02:37,840 --> 00:02:40,640
Let me show you as probably the coolest coding game I've ever seen.

51
00:02:40,640 --> 00:02:44,240
It's called Break the Code to 2022 by .techdomains,

52
00:02:44,240 --> 00:02:45,920
who is a sponsor of today's video.

53
00:02:45,920 --> 00:02:47,200
And I mean, first things first,

54
00:02:47,280 --> 00:02:52,800
you can tell that this is a Windows 98 themed website, which is absolutely sick.

55
00:02:52,800 --> 00:02:57,440
But the game, it's an action packed puzzle solving code breaking experience set in,

56
00:02:57,440 --> 00:02:58,640
well, 1999.

57
00:02:58,640 --> 00:03:01,040
We have the sign in, we have the rules, we have the prizes.

58
00:03:01,040 --> 00:03:01,840
Let's go to the rules.

59
00:03:01,840 --> 00:03:05,520
So the way it works, it's a contest that's structured into four drives that are made

60
00:03:05,520 --> 00:03:08,960
available to the code breakers based on the schedule that is this down here.

61
00:03:08,960 --> 00:03:15,440
So drive one starting already on March 25th, drive two starting on March 31st,

62
00:03:15,440 --> 00:03:18,320
drive three on April 6th, and then four on April 12th.

63
00:03:18,320 --> 00:03:20,880
So we have the end date on April 15th.

64
00:03:20,880 --> 00:03:24,640
However, make sure you keep note the announcement of winners.

65
00:03:24,640 --> 00:03:27,520
Those dates are earlier than the end date here.

66
00:03:27,520 --> 00:03:30,560
So if you want to participate and win some of the prizes,

67
00:03:30,560 --> 00:03:32,480
well, those are the dates right there.

68
00:03:32,480 --> 00:03:35,200
Speaking of the prizes, I love the prizes.

69
00:03:35,200 --> 00:03:37,760
90s themed boombox, the PS1.

70
00:03:37,760 --> 00:03:40,000
I still have my PS1 in the closet set behind me.

71
00:03:40,000 --> 00:03:42,640
But each one has a grand prize, a modern grand prize.

72
00:03:42,640 --> 00:03:44,720
This is a custom skinned PS5.

73
00:03:44,720 --> 00:03:47,680
Drive two is a custom skinned MacBook Pro.

74
00:03:47,680 --> 00:03:50,400
Drive three is $5,000 worth of ETH.

75
00:03:50,400 --> 00:03:52,480
But I mean, also look at the one right above that.

76
00:03:52,480 --> 00:03:55,600
Count or you sign matrix script like that is sick.

77
00:03:55,600 --> 00:03:58,320
Drive four is the grand grand prize.

78
00:03:58,320 --> 00:04:03,360
It's a code breakers layer, a custom gaming rig and monitor with a motorized chair.

79
00:04:03,360 --> 00:04:07,120
So if you really want to test what you got, you want to see how good you are at coding.

80
00:04:07,120 --> 00:04:09,520
And if you can go toe to toe with some of the best out there,

81
00:04:09,520 --> 00:04:10,960
click the link in the top of the description.

82
00:04:10,960 --> 00:04:13,040
It'll take you to this website right here.

83
00:04:13,040 --> 00:04:15,520
Estimated time remaining right now is 18 days.

84
00:04:15,520 --> 00:04:17,520
When you're watching this video, it's going to be less.

85
00:04:17,520 --> 00:04:21,280
So take advantage of the time that you got right now after watching this video.

86
00:04:21,280 --> 00:04:23,760
And a matter of fact, I'm going to sign up myself.

87
00:04:23,760 --> 00:04:28,560
Oh, GitHub, DigitalOcean, Dev.2, some of the campaign partners.

88
00:04:29,120 --> 00:04:30,400
Oh my, this is sick.

89
00:04:30,960 --> 00:04:33,360
Clippy down here telling us what's up.

90
00:04:33,360 --> 00:04:33,840
Start.

91
00:04:33,840 --> 00:04:35,840
We have everything that we'd ever need.

92
00:04:35,840 --> 00:04:37,840
Terminal, Web Explorer.

93
00:04:37,840 --> 00:04:39,280
Let's go to terminal real quick.

94
00:04:39,280 --> 00:04:42,720
Oh, not traditional Windows terminal, but it's definitely improved because

95
00:04:43,280 --> 00:04:44,480
we don't have backslashes.

96
00:04:44,480 --> 00:04:46,160
We have this guy right here.

97
00:04:46,160 --> 00:04:46,880
I already typed help.

98
00:04:46,880 --> 00:04:48,560
Let's type hello, hello world.

99
00:04:48,560 --> 00:04:50,080
Oh, I should have seen that coming.

100
00:04:50,080 --> 00:04:51,440
All right, I'm getting a little distracted here.

101
00:04:51,440 --> 00:04:53,360
If you're interested, link in the top of description.

102
00:04:53,360 --> 00:04:54,320
Let's get back to the video.

103
00:04:54,320 --> 00:04:57,840
If you went to the same college as me, ODU for computer science,

104
00:04:57,840 --> 00:05:00,080
then you may have had Professor Morris.

105
00:05:00,080 --> 00:05:02,560
And if you had him, then you may know that he loves wrestling.

106
00:05:02,560 --> 00:05:04,720
If not, bring it up to him the next time you see him.

107
00:05:04,720 --> 00:05:10,000
I mean, in his own words, wrestling is the oldest and greatest sport in the world.

108
00:05:10,000 --> 00:05:14,080
So he decided we're going to have a wrestling tournament simulation.

109
00:05:14,080 --> 00:05:16,720
And that's why this was our final program.

110
00:05:16,720 --> 00:05:21,520
As a class, we work together to determine the semantics for this particular tournament, like

111
00:05:21,520 --> 00:05:25,280
weight classes, schools, seasons, tournament, that type of stuff.

112
00:05:25,280 --> 00:05:28,320
And that's where all of this comes from.

113
00:05:28,320 --> 00:05:30,800
And basically everything that you see here.

114
00:05:30,800 --> 00:05:32,400
And that just lays everything out for us.

115
00:05:32,400 --> 00:05:33,920
We have a conference of eight schools.

116
00:05:33,920 --> 00:05:37,680
We have 12 weight classes, one wrestler per weight class per school,

117
00:05:37,680 --> 00:05:38,160
all of that.

118
00:05:38,160 --> 00:05:42,640
And we use that to create the design plan, which is what are the objects?

119
00:05:42,640 --> 00:05:43,920
What are their attributes?

120
00:05:43,920 --> 00:05:46,160
What are their behaviors, collections?

121
00:05:46,160 --> 00:05:47,280
How do they interact?

122
00:05:47,280 --> 00:05:49,440
And what is the development schedule?

123
00:05:49,440 --> 00:05:53,760
And here we put together a loose rough draft of that design plan.

124
00:05:53,760 --> 00:05:55,120
We have all of our objects.

125
00:05:55,120 --> 00:05:57,760
We have our attributes of those objects.

126
00:05:57,760 --> 00:06:00,720
We have our behaviors of those particular objects.

127
00:06:00,720 --> 00:06:02,480
And then we have the development schedule.

128
00:06:02,480 --> 00:06:05,920
I jumped ahead to this because it will give you a better lay of how everything is going

129
00:06:05,920 --> 00:06:06,640
to be structured.

130
00:06:06,640 --> 00:06:11,440
It's how the wrestling season is, as well as how our code is going to be generated.

131
00:06:11,440 --> 00:06:13,600
So of course, we start off with wrestlers.

132
00:06:13,600 --> 00:06:15,280
That makes complete sense, right?

133
00:06:15,280 --> 00:06:18,880
And those wrestlers are on a particular team, which is their school.

134
00:06:18,880 --> 00:06:22,000
We have the regular season, how that is made up right here.

135
00:06:22,000 --> 00:06:26,880
You know, two teams, every single school team wrestles every single other school team twice.

136
00:06:26,880 --> 00:06:29,680
That determines how good that particular school is.

137
00:06:30,240 --> 00:06:32,720
So we can seed them for the tournament.

138
00:06:32,720 --> 00:06:34,080
And that's what's going on right here.

139
00:06:34,080 --> 00:06:39,520
This almost directly translates to what's going on in this code right here,

140
00:06:39,520 --> 00:06:43,280
with a slightly more finalized draft of all of that right here.

141
00:06:43,280 --> 00:06:48,560
Except I only did four objects in their attributes and basically nothing else.

142
00:06:48,560 --> 00:06:51,680
Let's go class by class real quick to give an overview.

143
00:06:51,680 --> 00:06:52,560
So we have a wrestler.

144
00:06:52,560 --> 00:06:56,240
This is like the structure of a wrestler where we, you know,

145
00:06:56,240 --> 00:06:59,840
we have the weight class that it is in based on its weight.

146
00:06:59,840 --> 00:07:01,760
And then we have the ID number,

147
00:07:01,760 --> 00:07:05,440
which is unique for that particular wrestler at that particular school.

148
00:07:05,440 --> 00:07:07,280
And then we have the ability score.

149
00:07:07,280 --> 00:07:09,200
Oh, that thing is sick.

150
00:07:09,200 --> 00:07:12,480
Late seventies, Camaro SS going to my neighbor's house.

151
00:07:12,480 --> 00:07:12,800
Okay.

152
00:07:13,360 --> 00:07:16,480
Anyway, so we have the weight and weight class.

153
00:07:16,480 --> 00:07:19,360
We have the unique ID for that particular wrestler.

154
00:07:19,360 --> 00:07:20,720
And then we have the ability score,

155
00:07:20,720 --> 00:07:24,560
which will later be determined based on some math here and there and whatnot.

156
00:07:24,640 --> 00:07:26,160
And then we have the record down here.

157
00:07:26,160 --> 00:07:29,120
So this is the overall like we have our object.

158
00:07:29,120 --> 00:07:30,240
We have our object.

159
00:07:30,240 --> 00:07:32,320
We have all of the attributes.

160
00:07:32,320 --> 00:07:34,080
We have all of these attributes.

161
00:07:34,080 --> 00:07:38,080
So that's how it translates from the design plan over here.

162
00:07:38,080 --> 00:07:41,360
We're going to use this object later to generate the wrestlers.

163
00:07:41,360 --> 00:07:43,440
As a matter of fact, that is exactly what we're doing here.

164
00:07:43,440 --> 00:07:45,280
So we have the school class.

165
00:07:45,280 --> 00:07:49,120
And with the school class, we need the name and then we need the team.

166
00:07:49,120 --> 00:07:50,400
We did change this up a little bit.

167
00:07:50,400 --> 00:07:55,040
Instead of having like a object that only has one attribute,

168
00:07:55,040 --> 00:07:58,560
we just took out that object altogether and put that attribute

169
00:07:58,560 --> 00:08:00,080
into school just like that.

170
00:08:00,080 --> 00:08:03,520
And again, this is just the overall structure of the school,

171
00:08:04,080 --> 00:08:06,960
but we're generating the wrestlers as well.

172
00:08:06,960 --> 00:08:08,640
So for each individual wrestler,

173
00:08:08,640 --> 00:08:11,520
which again is going to be 12 wrestlers per school,

174
00:08:11,520 --> 00:08:12,720
we have all of this.

175
00:08:12,720 --> 00:08:14,560
This is basically all of the weight stuff.

176
00:08:14,560 --> 00:08:15,760
Then we have the ability score.

177
00:08:15,760 --> 00:08:17,600
That's the math I was talking about earlier

178
00:08:17,600 --> 00:08:19,040
in order to determine the ability score,

179
00:08:19,040 --> 00:08:20,880
which is how good the wrestler is.

180
00:08:20,880 --> 00:08:22,320
And you may recognize this.

181
00:08:22,320 --> 00:08:25,600
This is one wrestler with all of the new data being passed

182
00:08:25,600 --> 00:08:28,480
into and stored in the wrestler's array.

183
00:08:28,480 --> 00:08:29,760
So we have the weight class.

184
00:08:29,760 --> 00:08:30,880
We have the weight.

185
00:08:30,880 --> 00:08:32,160
We have the name.

186
00:08:32,160 --> 00:08:34,960
This will be passed in later through this parameter right here

187
00:08:35,520 --> 00:08:39,120
of the school plus I plus one,

188
00:08:39,120 --> 00:08:41,040
because that's how you determine the wrestler.

189
00:08:41,040 --> 00:08:43,360
If you have school 200, that's how we name our schools.

190
00:08:43,360 --> 00:08:45,600
You're going to have 12 wrestlers in that school.

191
00:08:45,600 --> 00:08:48,880
So, you know, the first wrestler will be 201, 202, 203,

192
00:08:48,880 --> 00:08:50,160
all the way up to 212,

193
00:08:50,160 --> 00:08:51,840
which is exactly translated right here.

194
00:08:51,840 --> 00:08:52,960
And then of course the ability score

195
00:08:52,960 --> 00:08:54,720
that we worked out right here,

196
00:08:54,720 --> 00:08:57,120
all stored as an individual wrestler.

197
00:08:57,120 --> 00:09:00,000
We get that wrestler based on the weight class.

198
00:09:00,000 --> 00:09:01,760
And then we have the total school score,

199
00:09:01,760 --> 00:09:05,200
which is taking the records from the wrestlers of that school

200
00:09:05,200 --> 00:09:07,200
to determine how good that school is.

201
00:09:07,200 --> 00:09:10,480
So within this, we probably could have added,

202
00:09:10,480 --> 00:09:12,560
you know, the school's record, right?

203
00:09:12,560 --> 00:09:13,920
We have our conference class,

204
00:09:13,920 --> 00:09:15,680
which is basically the overarching thing.

205
00:09:15,760 --> 00:09:18,720
We have the eight schools that are in here.

206
00:09:18,720 --> 00:09:20,880
We have the schedule, so like the season,

207
00:09:20,880 --> 00:09:22,800
and then maybe the tournament later,

208
00:09:22,800 --> 00:09:26,000
and then the advantage matrix for each weight class.

209
00:09:26,000 --> 00:09:27,520
Starting off with this for loop,

210
00:09:27,520 --> 00:09:29,920
which is generating each school,

211
00:09:29,920 --> 00:09:32,880
just like within schools, we generated each wrestler.

212
00:09:32,880 --> 00:09:37,840
We want to create eight schools, 100, 200, 300 to 800.

213
00:09:37,840 --> 00:09:39,680
Each school has 12 wrestlers,

214
00:09:39,680 --> 00:09:41,200
and those are the two parameters

215
00:09:41,200 --> 00:09:43,440
that we'll be throwing in to school.

216
00:09:43,440 --> 00:09:45,680
We have our advantage matrix right here

217
00:09:45,680 --> 00:09:47,360
for our weight classes,

218
00:09:47,360 --> 00:09:49,440
and then we have our season simulation,

219
00:09:49,440 --> 00:09:51,200
which is basically just matching

220
00:09:51,200 --> 00:09:53,120
every school with every other school,

221
00:09:53,120 --> 00:09:56,160
because every school needs to wrestle each other.

222
00:09:56,160 --> 00:09:57,680
And then our total school score,

223
00:09:57,680 --> 00:09:59,280
this is where it comes full circle,

224
00:09:59,280 --> 00:10:02,880
we determine the best school, and basically the rankings.

225
00:10:02,880 --> 00:10:05,440
There's eight teams, there's going to be a number one slot,

226
00:10:05,440 --> 00:10:08,160
a number two slot, all the way to a number eight slot,

227
00:10:08,160 --> 00:10:09,920
and this is when we determine the best school,

228
00:10:09,920 --> 00:10:13,040
because we're going to be using this to seed the tournament.

229
00:10:13,040 --> 00:10:15,040
Remember, all of this is still inside conference,

230
00:10:15,040 --> 00:10:18,000
so we should probably have a few more attributes in here,

231
00:10:18,000 --> 00:10:19,040
but that's neither here nor there.

232
00:10:19,040 --> 00:10:20,560
Let's just focus on the code.

233
00:10:20,560 --> 00:10:23,040
Our individual wrestling matches are right here

234
00:10:23,040 --> 00:10:26,720
based on the ability score and this math

235
00:10:26,720 --> 00:10:28,240
that we store in Sigma

236
00:10:28,240 --> 00:10:30,800
and passing in the parameters of the ability score

237
00:10:30,800 --> 00:10:34,640
of the first wrestler and this math right here.

238
00:10:34,640 --> 00:10:36,320
Basically to determine the score,

239
00:10:36,320 --> 00:10:40,080
you know, if score one, wrestler one is better than score two,

240
00:10:40,080 --> 00:10:42,800
of wrestler two, then, well, wrestler one wins.

241
00:10:42,880 --> 00:10:45,280
If not, then they lose and obviously everything else

242
00:10:45,280 --> 00:10:47,920
is stored properly according to that.

243
00:10:47,920 --> 00:10:51,440
And while all of this is one wrestler versus one wrestler,

244
00:10:51,440 --> 00:10:54,800
the individual match, we have the overall schools match,

245
00:10:54,800 --> 00:10:56,800
school one versus school two.

246
00:10:56,800 --> 00:10:58,080
And you remember get wrestler,

247
00:10:58,080 --> 00:11:00,960
I believe that was in our school object

248
00:11:00,960 --> 00:11:03,520
and we get those wrestler and then we make

249
00:11:03,520 --> 00:11:05,520
each individual wrestler wrestle

250
00:11:05,520 --> 00:11:07,360
based on their weight class, based on their school.

251
00:11:07,360 --> 00:11:09,280
Then we have our comp structure, you know,

252
00:11:09,280 --> 00:11:11,120
aside from all of the, oh look,

253
00:11:11,120 --> 00:11:13,120
this guy got a haircut comments.

254
00:11:13,120 --> 00:11:15,280
Tell me what this structure does.

255
00:11:16,080 --> 00:11:16,800
What does it do?

256
00:11:16,800 --> 00:11:19,280
Now our match class, I don't exactly remember

257
00:11:19,280 --> 00:11:20,560
why I did it like this.

258
00:11:20,560 --> 00:11:22,640
It's a lot of the same stuff

259
00:11:22,640 --> 00:11:25,120
as what we've got going on here,

260
00:11:25,120 --> 00:11:28,080
but in this match class, in order to determine

261
00:11:28,080 --> 00:11:31,360
and basically label the wrestler as the winner

262
00:11:31,360 --> 00:11:34,240
or the looser, as the looser.

263
00:11:35,040 --> 00:11:35,680
Great spelling.

264
00:11:35,680 --> 00:11:37,520
Oh, never mind, I know why,

265
00:11:37,520 --> 00:11:40,640
because we needed something that was just that simple

266
00:11:40,720 --> 00:11:42,240
for the tournament.

267
00:11:42,240 --> 00:11:43,280
So let's go back up here.

268
00:11:43,280 --> 00:11:44,560
This is the match class.

269
00:11:44,560 --> 00:11:47,040
Basically we're just determining winner and loser

270
00:11:47,040 --> 00:11:48,640
within the tournament.

271
00:11:48,640 --> 00:11:51,680
So the tournament again is after the season that we seed,

272
00:11:51,680 --> 00:11:54,880
which is going on basically all right here

273
00:11:54,880 --> 00:11:57,920
in order to have the best school,

274
00:11:57,920 --> 00:12:00,640
which is going to be the first in the participants array,

275
00:12:00,640 --> 00:12:03,840
aka rank one versus rank eight,

276
00:12:03,840 --> 00:12:06,080
who's going to be last in the participants array.

277
00:12:06,080 --> 00:12:08,560
And this is where the, this is where the match comes in.

278
00:12:08,560 --> 00:12:10,240
As you can see, we have our winner

279
00:12:10,320 --> 00:12:11,840
and our losers.

280
00:12:11,840 --> 00:12:12,800
So that's what this is doing.

281
00:12:12,800 --> 00:12:14,720
It is simulating the tournament

282
00:12:14,720 --> 00:12:16,640
for the rest at the end of the wrestling season.

283
00:12:16,640 --> 00:12:19,840
Then we're printing the winner for each individual weight class.

284
00:12:19,840 --> 00:12:22,880
And down here is where it all comes together.

285
00:12:22,880 --> 00:12:26,320
So we are just doing the simulation of the season.

286
00:12:26,880 --> 00:12:28,480
We are getting the conference winner

287
00:12:28,480 --> 00:12:31,280
based on the best school score.

288
00:12:31,920 --> 00:12:35,360
And then we are getting the tournament winners down here.

289
00:12:35,360 --> 00:12:36,560
I guess we're not printing that out.

290
00:12:36,560 --> 00:12:38,080
Oh no, we are print winner.

291
00:12:38,080 --> 00:12:39,200
Oh yeah, that's what we're doing.

292
00:12:39,200 --> 00:12:42,160
So this is the single best winner of the season

293
00:12:42,720 --> 00:12:45,600
while each time you print out this

294
00:12:45,600 --> 00:12:49,680
are the best wrestlers for that weight class and the tournament.

295
00:12:51,200 --> 00:12:54,240
So yeah, that's how the wrestling tournament simulation works.

296
00:12:54,240 --> 00:12:56,080
Like I said before, if you're interested in this,

297
00:12:56,080 --> 00:12:58,000
maybe even doing it yourself,

298
00:12:58,000 --> 00:13:00,400
all of it will be on GitHub

299
00:13:00,400 --> 00:13:02,080
and repository that I'll link down below.

300
00:13:02,080 --> 00:13:05,280
Feel free to use the design plan, the requirements, whatever,

301
00:13:05,280 --> 00:13:07,760
with whatever language that you want to build this with.

302
00:13:07,760 --> 00:13:09,040
I don't know how many people actually do.

303
00:13:09,040 --> 00:13:10,960
If you do build this, let me know.

304
00:13:10,960 --> 00:13:12,960
If you build it on any sort of level, let me know.

305
00:13:12,960 --> 00:13:14,640
I'm not saying I'm going to be able to give you advice

306
00:13:14,640 --> 00:13:16,720
on how to solve this problem or that problem,

307
00:13:16,720 --> 00:13:20,000
but like this video, it's fun to look at code.

308
00:13:20,000 --> 00:13:21,280
And I don't know if you can guess,

309
00:13:21,280 --> 00:13:24,560
but my next video may or may not have...

310
00:13:25,600 --> 00:13:27,280
Stay tuned if you're interested in that.

311
00:13:27,280 --> 00:13:29,280
I think that'll be a really fun project.

312
00:13:29,280 --> 00:13:32,240
And then I have a couple other project based videos

313
00:13:32,240 --> 00:13:35,120
around the corner that should be going up this month.

314
00:13:35,120 --> 00:13:36,880
That's really my way of saying subscribe

315
00:13:36,880 --> 00:13:37,680
if you aren't subscribed.

316
00:13:37,680 --> 00:13:39,040
So you don't miss out on those videos.

317
00:13:39,040 --> 00:13:40,240
Like the video if you liked it.

318
00:13:40,240 --> 00:13:42,080
Thank all of y'all for watching,

319
00:13:42,080 --> 00:13:43,040
especially for watching

320
00:13:43,040 --> 00:13:45,680
since I haven't uploaded in over two months.

321
00:13:45,680 --> 00:13:46,880
Well, until this video.

322
00:13:46,880 --> 00:13:48,160
Is that how I do the outro?

323
00:13:48,160 --> 00:13:49,040
I don't remember.

324
00:13:49,040 --> 00:13:49,760
See y'all next week.

325
00:13:49,760 --> 00:13:50,640
See y'all next time.

326
00:13:50,640 --> 00:13:51,440
Something like that.

327
00:13:51,440 --> 00:13:53,280
Let's just stop the record.

