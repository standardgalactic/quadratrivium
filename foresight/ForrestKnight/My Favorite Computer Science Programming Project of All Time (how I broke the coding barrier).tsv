start	end	text
0	6000	Earlier today I was looking at some, uh, old computer science programs that I wrote back in college.
6000	10800	Gaussian Elimination in C++, for loop, nested for loop, nested for loop.
12160	15040	Yeah, well, uh, I like for loops. What can I say?
15040	18080	De-deck of cards? Whatever that means.
18080	21040	I don't think there's anything I hated more than header files.
21040	25440	The only nice thing about it is that my professor would like create the header files for us.
25440	28960	So it really made us writing the C++ file a whole lot easier.
28960	33360	But other than that, screw header files, that's probably why I became a Java Dev.
33360	37600	A programmer too, where like you would take all of your C++ knowledge
37600	40720	that you wrote that program in and then convert it over into Java.
40720	44000	Java, Java, Java. I thought I created this in C++.
44000	46000	Ah, I did create this in C++.
46000	47360	And that was the plan for this video.
47360	50960	I just wanted to kind of take y'all through that, give some of my thoughts,
50960	53280	and kind of just go through each program.
54080	61920	I'm going to redirect it because I found this wrestling tournament simulation program.
61920	65840	On no way. This is a wrestling tournament. I forgot this even existed.
65840	70720	This was that one program that like just made everything make sense for me.
70720	73600	It was in advanced data structures and algorithms.
73600	75520	And it taught me more.
75520	79120	Well, it instilled like programming fundamentals
79120	82960	and me more than like any other class or program that I ever wrote.
82960	85840	It was the program that just like broke down the coding barrier for me.
85840	89840	That moment that just everything started to make sense.
89840	92720	Oh my gosh. And I have all of the requirements for it too.
93520	98240	Huh. I wonder if Morse would mind if I leaked these.
99200	102720	What would that be? Like six years after the fact?
102720	105840	I was just going to go through some of these programs.
105840	107120	But I got a better idea.
107120	110480	And I kind of spilled coffee all over my desk right here.
110480	111840	And it got on my clothes.
111840	113520	Look, we got all the code here.
113520	115680	We have all the requirements here.
115680	121040	So instead of just like briefly going over all of these like random computer science programs
121040	124640	where you don't really dive into too much over the course of like 10 programs,
125200	127280	let's go into more depth on this one.
127280	128880	We can discuss the requirements.
128880	130960	We did a whole entire design plan for this.
130960	136480	We can go over the code and my poorly written no header file, everything,
136480	139360	all classes in one file looking at code.
139360	140080	So let's do that.
140080	141520	I got to get my barren straight here.
141520	144480	Look at some of the requirements and, you know, take a sneak peek at the code
144480	146720	so I can actually explain it well to y'all.
146720	150640	And also I feel like every time I move my mouse that I'm just like dipped in coffee.
150640	152560	So I got to clean that up a little bit.
152560	153760	You know, Zen, cool.
153760	154560	All right.
154560	157840	And so yeah, I'll be right back until then.
157840	160640	Let me show you as probably the coolest coding game I've ever seen.
160640	164240	It's called Break the Code to 2022 by .techdomains,
164240	165920	who is a sponsor of today's video.
165920	167200	And I mean, first things first,
167280	172800	you can tell that this is a Windows 98 themed website, which is absolutely sick.
172800	177440	But the game, it's an action packed puzzle solving code breaking experience set in,
177440	178640	well, 1999.
178640	181040	We have the sign in, we have the rules, we have the prizes.
181040	181840	Let's go to the rules.
181840	185520	So the way it works, it's a contest that's structured into four drives that are made
185520	188960	available to the code breakers based on the schedule that is this down here.
188960	195440	So drive one starting already on March 25th, drive two starting on March 31st,
195440	198320	drive three on April 6th, and then four on April 12th.
198320	200880	So we have the end date on April 15th.
200880	204640	However, make sure you keep note the announcement of winners.
204640	207520	Those dates are earlier than the end date here.
207520	210560	So if you want to participate and win some of the prizes,
210560	212480	well, those are the dates right there.
212480	215200	Speaking of the prizes, I love the prizes.
215200	217760	90s themed boombox, the PS1.
217760	220000	I still have my PS1 in the closet set behind me.
220000	222640	But each one has a grand prize, a modern grand prize.
222640	224720	This is a custom skinned PS5.
224720	227680	Drive two is a custom skinned MacBook Pro.
227680	230400	Drive three is $5,000 worth of ETH.
230400	232480	But I mean, also look at the one right above that.
232480	235600	Count or you sign matrix script like that is sick.
235600	238320	Drive four is the grand grand prize.
238320	243360	It's a code breakers layer, a custom gaming rig and monitor with a motorized chair.
243360	247120	So if you really want to test what you got, you want to see how good you are at coding.
247120	249520	And if you can go toe to toe with some of the best out there,
249520	250960	click the link in the top of the description.
250960	253040	It'll take you to this website right here.
253040	255520	Estimated time remaining right now is 18 days.
255520	257520	When you're watching this video, it's going to be less.
257520	261280	So take advantage of the time that you got right now after watching this video.
261280	263760	And a matter of fact, I'm going to sign up myself.
263760	268560	Oh, GitHub, DigitalOcean, Dev.2, some of the campaign partners.
269120	270400	Oh my, this is sick.
270960	273360	Clippy down here telling us what's up.
273360	273840	Start.
273840	275840	We have everything that we'd ever need.
275840	277840	Terminal, Web Explorer.
277840	279280	Let's go to terminal real quick.
279280	282720	Oh, not traditional Windows terminal, but it's definitely improved because
283280	284480	we don't have backslashes.
284480	286160	We have this guy right here.
286160	286880	I already typed help.
286880	288560	Let's type hello, hello world.
288560	290080	Oh, I should have seen that coming.
290080	291440	All right, I'm getting a little distracted here.
291440	293360	If you're interested, link in the top of description.
293360	294320	Let's get back to the video.
294320	297840	If you went to the same college as me, ODU for computer science,
297840	300080	then you may have had Professor Morris.
300080	302560	And if you had him, then you may know that he loves wrestling.
302560	304720	If not, bring it up to him the next time you see him.
304720	310000	I mean, in his own words, wrestling is the oldest and greatest sport in the world.
310000	314080	So he decided we're going to have a wrestling tournament simulation.
314080	316720	And that's why this was our final program.
316720	321520	As a class, we work together to determine the semantics for this particular tournament, like
321520	325280	weight classes, schools, seasons, tournament, that type of stuff.
325280	328320	And that's where all of this comes from.
328320	330800	And basically everything that you see here.
330800	332400	And that just lays everything out for us.
332400	333920	We have a conference of eight schools.
333920	337680	We have 12 weight classes, one wrestler per weight class per school,
337680	338160	all of that.
338160	342640	And we use that to create the design plan, which is what are the objects?
342640	343920	What are their attributes?
343920	346160	What are their behaviors, collections?
346160	347280	How do they interact?
347280	349440	And what is the development schedule?
349440	353760	And here we put together a loose rough draft of that design plan.
353760	355120	We have all of our objects.
355120	357760	We have our attributes of those objects.
357760	360720	We have our behaviors of those particular objects.
360720	362480	And then we have the development schedule.
362480	365920	I jumped ahead to this because it will give you a better lay of how everything is going
365920	366640	to be structured.
366640	371440	It's how the wrestling season is, as well as how our code is going to be generated.
371440	373600	So of course, we start off with wrestlers.
373600	375280	That makes complete sense, right?
375280	378880	And those wrestlers are on a particular team, which is their school.
378880	382000	We have the regular season, how that is made up right here.
382000	386880	You know, two teams, every single school team wrestles every single other school team twice.
386880	389680	That determines how good that particular school is.
390240	392720	So we can seed them for the tournament.
392720	394080	And that's what's going on right here.
394080	399520	This almost directly translates to what's going on in this code right here,
399520	403280	with a slightly more finalized draft of all of that right here.
403280	408560	Except I only did four objects in their attributes and basically nothing else.
408560	411680	Let's go class by class real quick to give an overview.
411680	412560	So we have a wrestler.
412560	416240	This is like the structure of a wrestler where we, you know,
416240	419840	we have the weight class that it is in based on its weight.
419840	421760	And then we have the ID number,
421760	425440	which is unique for that particular wrestler at that particular school.
425440	427280	And then we have the ability score.
427280	429200	Oh, that thing is sick.
429200	432480	Late seventies, Camaro SS going to my neighbor's house.
432480	432800	Okay.
433360	436480	Anyway, so we have the weight and weight class.
436480	439360	We have the unique ID for that particular wrestler.
439360	440720	And then we have the ability score,
440720	444560	which will later be determined based on some math here and there and whatnot.
444640	446160	And then we have the record down here.
446160	449120	So this is the overall like we have our object.
449120	450240	We have our object.
450240	452320	We have all of the attributes.
452320	454080	We have all of these attributes.
454080	458080	So that's how it translates from the design plan over here.
458080	461360	We're going to use this object later to generate the wrestlers.
461360	463440	As a matter of fact, that is exactly what we're doing here.
463440	465280	So we have the school class.
465280	469120	And with the school class, we need the name and then we need the team.
469120	470400	We did change this up a little bit.
470400	475040	Instead of having like a object that only has one attribute,
475040	478560	we just took out that object altogether and put that attribute
478560	480080	into school just like that.
480080	483520	And again, this is just the overall structure of the school,
484080	486960	but we're generating the wrestlers as well.
486960	488640	So for each individual wrestler,
488640	491520	which again is going to be 12 wrestlers per school,
491520	492720	we have all of this.
492720	494560	This is basically all of the weight stuff.
494560	495760	Then we have the ability score.
495760	497600	That's the math I was talking about earlier
497600	499040	in order to determine the ability score,
499040	500880	which is how good the wrestler is.
500880	502320	And you may recognize this.
502320	505600	This is one wrestler with all of the new data being passed
505600	508480	into and stored in the wrestler's array.
508480	509760	So we have the weight class.
509760	510880	We have the weight.
510880	512160	We have the name.
512160	514960	This will be passed in later through this parameter right here
515520	519120	of the school plus I plus one,
519120	521040	because that's how you determine the wrestler.
521040	523360	If you have school 200, that's how we name our schools.
523360	525600	You're going to have 12 wrestlers in that school.
525600	528880	So, you know, the first wrestler will be 201, 202, 203,
528880	530160	all the way up to 212,
530160	531840	which is exactly translated right here.
531840	532960	And then of course the ability score
532960	534720	that we worked out right here,
534720	537120	all stored as an individual wrestler.
537120	540000	We get that wrestler based on the weight class.
540000	541760	And then we have the total school score,
541760	545200	which is taking the records from the wrestlers of that school
545200	547200	to determine how good that school is.
547200	550480	So within this, we probably could have added,
550480	552560	you know, the school's record, right?
552560	553920	We have our conference class,
553920	555680	which is basically the overarching thing.
555760	558720	We have the eight schools that are in here.
558720	560880	We have the schedule, so like the season,
560880	562800	and then maybe the tournament later,
562800	566000	and then the advantage matrix for each weight class.
566000	567520	Starting off with this for loop,
567520	569920	which is generating each school,
569920	572880	just like within schools, we generated each wrestler.
572880	577840	We want to create eight schools, 100, 200, 300 to 800.
577840	579680	Each school has 12 wrestlers,
579680	581200	and those are the two parameters
581200	583440	that we'll be throwing in to school.
583440	585680	We have our advantage matrix right here
585680	587360	for our weight classes,
587360	589440	and then we have our season simulation,
589440	591200	which is basically just matching
591200	593120	every school with every other school,
593120	596160	because every school needs to wrestle each other.
596160	597680	And then our total school score,
597680	599280	this is where it comes full circle,
599280	602880	we determine the best school, and basically the rankings.
602880	605440	There's eight teams, there's going to be a number one slot,
605440	608160	a number two slot, all the way to a number eight slot,
608160	609920	and this is when we determine the best school,
609920	613040	because we're going to be using this to seed the tournament.
613040	615040	Remember, all of this is still inside conference,
615040	618000	so we should probably have a few more attributes in here,
618000	619040	but that's neither here nor there.
619040	620560	Let's just focus on the code.
620560	623040	Our individual wrestling matches are right here
623040	626720	based on the ability score and this math
626720	628240	that we store in Sigma
628240	630800	and passing in the parameters of the ability score
630800	634640	of the first wrestler and this math right here.
634640	636320	Basically to determine the score,
636320	640080	you know, if score one, wrestler one is better than score two,
640080	642800	of wrestler two, then, well, wrestler one wins.
642880	645280	If not, then they lose and obviously everything else
645280	647920	is stored properly according to that.
647920	651440	And while all of this is one wrestler versus one wrestler,
651440	654800	the individual match, we have the overall schools match,
654800	656800	school one versus school two.
656800	658080	And you remember get wrestler,
658080	660960	I believe that was in our school object
660960	663520	and we get those wrestler and then we make
663520	665520	each individual wrestler wrestle
665520	667360	based on their weight class, based on their school.
667360	669280	Then we have our comp structure, you know,
669280	671120	aside from all of the, oh look,
671120	673120	this guy got a haircut comments.
673120	675280	Tell me what this structure does.
676080	676800	What does it do?
676800	679280	Now our match class, I don't exactly remember
679280	680560	why I did it like this.
680560	682640	It's a lot of the same stuff
682640	685120	as what we've got going on here,
685120	688080	but in this match class, in order to determine
688080	691360	and basically label the wrestler as the winner
691360	694240	or the looser, as the looser.
695040	695680	Great spelling.
695680	697520	Oh, never mind, I know why,
697520	700640	because we needed something that was just that simple
700720	702240	for the tournament.
702240	703280	So let's go back up here.
703280	704560	This is the match class.
704560	707040	Basically we're just determining winner and loser
707040	708640	within the tournament.
708640	711680	So the tournament again is after the season that we seed,
711680	714880	which is going on basically all right here
714880	717920	in order to have the best school,
717920	720640	which is going to be the first in the participants array,
720640	723840	aka rank one versus rank eight,
723840	726080	who's going to be last in the participants array.
726080	728560	And this is where the, this is where the match comes in.
728560	730240	As you can see, we have our winner
730320	731840	and our losers.
731840	732800	So that's what this is doing.
732800	734720	It is simulating the tournament
734720	736640	for the rest at the end of the wrestling season.
736640	739840	Then we're printing the winner for each individual weight class.
739840	742880	And down here is where it all comes together.
742880	746320	So we are just doing the simulation of the season.
746880	748480	We are getting the conference winner
748480	751280	based on the best school score.
751920	755360	And then we are getting the tournament winners down here.
755360	756560	I guess we're not printing that out.
756560	758080	Oh no, we are print winner.
758080	759200	Oh yeah, that's what we're doing.
759200	762160	So this is the single best winner of the season
762720	765600	while each time you print out this
765600	769680	are the best wrestlers for that weight class and the tournament.
771200	774240	So yeah, that's how the wrestling tournament simulation works.
774240	776080	Like I said before, if you're interested in this,
776080	778000	maybe even doing it yourself,
778000	780400	all of it will be on GitHub
780400	782080	and repository that I'll link down below.
782080	785280	Feel free to use the design plan, the requirements, whatever,
785280	787760	with whatever language that you want to build this with.
787760	789040	I don't know how many people actually do.
789040	790960	If you do build this, let me know.
790960	792960	If you build it on any sort of level, let me know.
792960	794640	I'm not saying I'm going to be able to give you advice
794640	796720	on how to solve this problem or that problem,
796720	800000	but like this video, it's fun to look at code.
800000	801280	And I don't know if you can guess,
801280	804560	but my next video may or may not have...
805600	807280	Stay tuned if you're interested in that.
807280	809280	I think that'll be a really fun project.
809280	812240	And then I have a couple other project based videos
812240	815120	around the corner that should be going up this month.
815120	816880	That's really my way of saying subscribe
816880	817680	if you aren't subscribed.
817680	819040	So you don't miss out on those videos.
819040	820240	Like the video if you liked it.
820240	822080	Thank all of y'all for watching,
822080	823040	especially for watching
823040	825680	since I haven't uploaded in over two months.
825680	826880	Well, until this video.
826880	828160	Is that how I do the outro?
828160	829040	I don't remember.
829040	829760	See y'all next week.
829760	830640	See y'all next time.
830640	831440	Something like that.
831440	833280	Let's just stop the record.
