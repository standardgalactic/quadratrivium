WEBVTT

00:00.000 --> 00:06.000
Earlier today I was looking at some, uh, old computer science programs that I wrote back in college.

00:06.000 --> 00:10.800
Gaussian Elimination in C++, for loop, nested for loop, nested for loop.

00:12.160 --> 00:15.040
Yeah, well, uh, I like for loops. What can I say?

00:15.040 --> 00:18.080
De-deck of cards? Whatever that means.

00:18.080 --> 00:21.040
I don't think there's anything I hated more than header files.

00:21.040 --> 00:25.440
The only nice thing about it is that my professor would like create the header files for us.

00:25.440 --> 00:28.960
So it really made us writing the C++ file a whole lot easier.

00:28.960 --> 00:33.360
But other than that, screw header files, that's probably why I became a Java Dev.

00:33.360 --> 00:37.600
A programmer too, where like you would take all of your C++ knowledge

00:37.600 --> 00:40.720
that you wrote that program in and then convert it over into Java.

00:40.720 --> 00:44.000
Java, Java, Java. I thought I created this in C++.

00:44.000 --> 00:46.000
Ah, I did create this in C++.

00:46.000 --> 00:47.360
And that was the plan for this video.

00:47.360 --> 00:50.960
I just wanted to kind of take y'all through that, give some of my thoughts,

00:50.960 --> 00:53.280
and kind of just go through each program.

00:54.080 --> 01:01.920
I'm going to redirect it because I found this wrestling tournament simulation program.

01:01.920 --> 01:05.840
On no way. This is a wrestling tournament. I forgot this even existed.

01:05.840 --> 01:10.720
This was that one program that like just made everything make sense for me.

01:10.720 --> 01:13.600
It was in advanced data structures and algorithms.

01:13.600 --> 01:15.520
And it taught me more.

01:15.520 --> 01:19.120
Well, it instilled like programming fundamentals

01:19.120 --> 01:22.960
and me more than like any other class or program that I ever wrote.

01:22.960 --> 01:25.840
It was the program that just like broke down the coding barrier for me.

01:25.840 --> 01:29.840
That moment that just everything started to make sense.

01:29.840 --> 01:32.720
Oh my gosh. And I have all of the requirements for it too.

01:33.520 --> 01:38.240
Huh. I wonder if Morse would mind if I leaked these.

01:39.200 --> 01:42.720
What would that be? Like six years after the fact?

01:42.720 --> 01:45.840
I was just going to go through some of these programs.

01:45.840 --> 01:47.120
But I got a better idea.

01:47.120 --> 01:50.480
And I kind of spilled coffee all over my desk right here.

01:50.480 --> 01:51.840
And it got on my clothes.

01:51.840 --> 01:53.520
Look, we got all the code here.

01:53.520 --> 01:55.680
We have all the requirements here.

01:55.680 --> 02:01.040
So instead of just like briefly going over all of these like random computer science programs

02:01.040 --> 02:04.640
where you don't really dive into too much over the course of like 10 programs,

02:05.200 --> 02:07.280
let's go into more depth on this one.

02:07.280 --> 02:08.880
We can discuss the requirements.

02:08.880 --> 02:10.960
We did a whole entire design plan for this.

02:10.960 --> 02:16.480
We can go over the code and my poorly written no header file, everything,

02:16.480 --> 02:19.360
all classes in one file looking at code.

02:19.360 --> 02:20.080
So let's do that.

02:20.080 --> 02:21.520
I got to get my barren straight here.

02:21.520 --> 02:24.480
Look at some of the requirements and, you know, take a sneak peek at the code

02:24.480 --> 02:26.720
so I can actually explain it well to y'all.

02:26.720 --> 02:30.640
And also I feel like every time I move my mouse that I'm just like dipped in coffee.

02:30.640 --> 02:32.560
So I got to clean that up a little bit.

02:32.560 --> 02:33.760
You know, Zen, cool.

02:33.760 --> 02:34.560
All right.

02:34.560 --> 02:37.840
And so yeah, I'll be right back until then.

02:37.840 --> 02:40.640
Let me show you as probably the coolest coding game I've ever seen.

02:40.640 --> 02:44.240
It's called Break the Code to 2022 by .techdomains,

02:44.240 --> 02:45.920
who is a sponsor of today's video.

02:45.920 --> 02:47.200
And I mean, first things first,

02:47.280 --> 02:52.800
you can tell that this is a Windows 98 themed website, which is absolutely sick.

02:52.800 --> 02:57.440
But the game, it's an action packed puzzle solving code breaking experience set in,

02:57.440 --> 02:58.640
well, 1999.

02:58.640 --> 03:01.040
We have the sign in, we have the rules, we have the prizes.

03:01.040 --> 03:01.840
Let's go to the rules.

03:01.840 --> 03:05.520
So the way it works, it's a contest that's structured into four drives that are made

03:05.520 --> 03:08.960
available to the code breakers based on the schedule that is this down here.

03:08.960 --> 03:15.440
So drive one starting already on March 25th, drive two starting on March 31st,

03:15.440 --> 03:18.320
drive three on April 6th, and then four on April 12th.

03:18.320 --> 03:20.880
So we have the end date on April 15th.

03:20.880 --> 03:24.640
However, make sure you keep note the announcement of winners.

03:24.640 --> 03:27.520
Those dates are earlier than the end date here.

03:27.520 --> 03:30.560
So if you want to participate and win some of the prizes,

03:30.560 --> 03:32.480
well, those are the dates right there.

03:32.480 --> 03:35.200
Speaking of the prizes, I love the prizes.

03:35.200 --> 03:37.760
90s themed boombox, the PS1.

03:37.760 --> 03:40.000
I still have my PS1 in the closet set behind me.

03:40.000 --> 03:42.640
But each one has a grand prize, a modern grand prize.

03:42.640 --> 03:44.720
This is a custom skinned PS5.

03:44.720 --> 03:47.680
Drive two is a custom skinned MacBook Pro.

03:47.680 --> 03:50.400
Drive three is $5,000 worth of ETH.

03:50.400 --> 03:52.480
But I mean, also look at the one right above that.

03:52.480 --> 03:55.600
Count or you sign matrix script like that is sick.

03:55.600 --> 03:58.320
Drive four is the grand grand prize.

03:58.320 --> 04:03.360
It's a code breakers layer, a custom gaming rig and monitor with a motorized chair.

04:03.360 --> 04:07.120
So if you really want to test what you got, you want to see how good you are at coding.

04:07.120 --> 04:09.520
And if you can go toe to toe with some of the best out there,

04:09.520 --> 04:10.960
click the link in the top of the description.

04:10.960 --> 04:13.040
It'll take you to this website right here.

04:13.040 --> 04:15.520
Estimated time remaining right now is 18 days.

04:15.520 --> 04:17.520
When you're watching this video, it's going to be less.

04:17.520 --> 04:21.280
So take advantage of the time that you got right now after watching this video.

04:21.280 --> 04:23.760
And a matter of fact, I'm going to sign up myself.

04:23.760 --> 04:28.560
Oh, GitHub, DigitalOcean, Dev.2, some of the campaign partners.

04:29.120 --> 04:30.400
Oh my, this is sick.

04:30.960 --> 04:33.360
Clippy down here telling us what's up.

04:33.360 --> 04:33.840
Start.

04:33.840 --> 04:35.840
We have everything that we'd ever need.

04:35.840 --> 04:37.840
Terminal, Web Explorer.

04:37.840 --> 04:39.280
Let's go to terminal real quick.

04:39.280 --> 04:42.720
Oh, not traditional Windows terminal, but it's definitely improved because

04:43.280 --> 04:44.480
we don't have backslashes.

04:44.480 --> 04:46.160
We have this guy right here.

04:46.160 --> 04:46.880
I already typed help.

04:46.880 --> 04:48.560
Let's type hello, hello world.

04:48.560 --> 04:50.080
Oh, I should have seen that coming.

04:50.080 --> 04:51.440
All right, I'm getting a little distracted here.

04:51.440 --> 04:53.360
If you're interested, link in the top of description.

04:53.360 --> 04:54.320
Let's get back to the video.

04:54.320 --> 04:57.840
If you went to the same college as me, ODU for computer science,

04:57.840 --> 05:00.080
then you may have had Professor Morris.

05:00.080 --> 05:02.560
And if you had him, then you may know that he loves wrestling.

05:02.560 --> 05:04.720
If not, bring it up to him the next time you see him.

05:04.720 --> 05:10.000
I mean, in his own words, wrestling is the oldest and greatest sport in the world.

05:10.000 --> 05:14.080
So he decided we're going to have a wrestling tournament simulation.

05:14.080 --> 05:16.720
And that's why this was our final program.

05:16.720 --> 05:21.520
As a class, we work together to determine the semantics for this particular tournament, like

05:21.520 --> 05:25.280
weight classes, schools, seasons, tournament, that type of stuff.

05:25.280 --> 05:28.320
And that's where all of this comes from.

05:28.320 --> 05:30.800
And basically everything that you see here.

05:30.800 --> 05:32.400
And that just lays everything out for us.

05:32.400 --> 05:33.920
We have a conference of eight schools.

05:33.920 --> 05:37.680
We have 12 weight classes, one wrestler per weight class per school,

05:37.680 --> 05:38.160
all of that.

05:38.160 --> 05:42.640
And we use that to create the design plan, which is what are the objects?

05:42.640 --> 05:43.920
What are their attributes?

05:43.920 --> 05:46.160
What are their behaviors, collections?

05:46.160 --> 05:47.280
How do they interact?

05:47.280 --> 05:49.440
And what is the development schedule?

05:49.440 --> 05:53.760
And here we put together a loose rough draft of that design plan.

05:53.760 --> 05:55.120
We have all of our objects.

05:55.120 --> 05:57.760
We have our attributes of those objects.

05:57.760 --> 06:00.720
We have our behaviors of those particular objects.

06:00.720 --> 06:02.480
And then we have the development schedule.

06:02.480 --> 06:05.920
I jumped ahead to this because it will give you a better lay of how everything is going

06:05.920 --> 06:06.640
to be structured.

06:06.640 --> 06:11.440
It's how the wrestling season is, as well as how our code is going to be generated.

06:11.440 --> 06:13.600
So of course, we start off with wrestlers.

06:13.600 --> 06:15.280
That makes complete sense, right?

06:15.280 --> 06:18.880
And those wrestlers are on a particular team, which is their school.

06:18.880 --> 06:22.000
We have the regular season, how that is made up right here.

06:22.000 --> 06:26.880
You know, two teams, every single school team wrestles every single other school team twice.

06:26.880 --> 06:29.680
That determines how good that particular school is.

06:30.240 --> 06:32.720
So we can seed them for the tournament.

06:32.720 --> 06:34.080
And that's what's going on right here.

06:34.080 --> 06:39.520
This almost directly translates to what's going on in this code right here,

06:39.520 --> 06:43.280
with a slightly more finalized draft of all of that right here.

06:43.280 --> 06:48.560
Except I only did four objects in their attributes and basically nothing else.

06:48.560 --> 06:51.680
Let's go class by class real quick to give an overview.

06:51.680 --> 06:52.560
So we have a wrestler.

06:52.560 --> 06:56.240
This is like the structure of a wrestler where we, you know,

06:56.240 --> 06:59.840
we have the weight class that it is in based on its weight.

06:59.840 --> 07:01.760
And then we have the ID number,

07:01.760 --> 07:05.440
which is unique for that particular wrestler at that particular school.

07:05.440 --> 07:07.280
And then we have the ability score.

07:07.280 --> 07:09.200
Oh, that thing is sick.

07:09.200 --> 07:12.480
Late seventies, Camaro SS going to my neighbor's house.

07:12.480 --> 07:12.800
Okay.

07:13.360 --> 07:16.480
Anyway, so we have the weight and weight class.

07:16.480 --> 07:19.360
We have the unique ID for that particular wrestler.

07:19.360 --> 07:20.720
And then we have the ability score,

07:20.720 --> 07:24.560
which will later be determined based on some math here and there and whatnot.

07:24.640 --> 07:26.160
And then we have the record down here.

07:26.160 --> 07:29.120
So this is the overall like we have our object.

07:29.120 --> 07:30.240
We have our object.

07:30.240 --> 07:32.320
We have all of the attributes.

07:32.320 --> 07:34.080
We have all of these attributes.

07:34.080 --> 07:38.080
So that's how it translates from the design plan over here.

07:38.080 --> 07:41.360
We're going to use this object later to generate the wrestlers.

07:41.360 --> 07:43.440
As a matter of fact, that is exactly what we're doing here.

07:43.440 --> 07:45.280
So we have the school class.

07:45.280 --> 07:49.120
And with the school class, we need the name and then we need the team.

07:49.120 --> 07:50.400
We did change this up a little bit.

07:50.400 --> 07:55.040
Instead of having like a object that only has one attribute,

07:55.040 --> 07:58.560
we just took out that object altogether and put that attribute

07:58.560 --> 08:00.080
into school just like that.

08:00.080 --> 08:03.520
And again, this is just the overall structure of the school,

08:04.080 --> 08:06.960
but we're generating the wrestlers as well.

08:06.960 --> 08:08.640
So for each individual wrestler,

08:08.640 --> 08:11.520
which again is going to be 12 wrestlers per school,

08:11.520 --> 08:12.720
we have all of this.

08:12.720 --> 08:14.560
This is basically all of the weight stuff.

08:14.560 --> 08:15.760
Then we have the ability score.

08:15.760 --> 08:17.600
That's the math I was talking about earlier

08:17.600 --> 08:19.040
in order to determine the ability score,

08:19.040 --> 08:20.880
which is how good the wrestler is.

08:20.880 --> 08:22.320
And you may recognize this.

08:22.320 --> 08:25.600
This is one wrestler with all of the new data being passed

08:25.600 --> 08:28.480
into and stored in the wrestler's array.

08:28.480 --> 08:29.760
So we have the weight class.

08:29.760 --> 08:30.880
We have the weight.

08:30.880 --> 08:32.160
We have the name.

08:32.160 --> 08:34.960
This will be passed in later through this parameter right here

08:35.520 --> 08:39.120
of the school plus I plus one,

08:39.120 --> 08:41.040
because that's how you determine the wrestler.

08:41.040 --> 08:43.360
If you have school 200, that's how we name our schools.

08:43.360 --> 08:45.600
You're going to have 12 wrestlers in that school.

08:45.600 --> 08:48.880
So, you know, the first wrestler will be 201, 202, 203,

08:48.880 --> 08:50.160
all the way up to 212,

08:50.160 --> 08:51.840
which is exactly translated right here.

08:51.840 --> 08:52.960
And then of course the ability score

08:52.960 --> 08:54.720
that we worked out right here,

08:54.720 --> 08:57.120
all stored as an individual wrestler.

08:57.120 --> 09:00.000
We get that wrestler based on the weight class.

09:00.000 --> 09:01.760
And then we have the total school score,

09:01.760 --> 09:05.200
which is taking the records from the wrestlers of that school

09:05.200 --> 09:07.200
to determine how good that school is.

09:07.200 --> 09:10.480
So within this, we probably could have added,

09:10.480 --> 09:12.560
you know, the school's record, right?

09:12.560 --> 09:13.920
We have our conference class,

09:13.920 --> 09:15.680
which is basically the overarching thing.

09:15.760 --> 09:18.720
We have the eight schools that are in here.

09:18.720 --> 09:20.880
We have the schedule, so like the season,

09:20.880 --> 09:22.800
and then maybe the tournament later,

09:22.800 --> 09:26.000
and then the advantage matrix for each weight class.

09:26.000 --> 09:27.520
Starting off with this for loop,

09:27.520 --> 09:29.920
which is generating each school,

09:29.920 --> 09:32.880
just like within schools, we generated each wrestler.

09:32.880 --> 09:37.840
We want to create eight schools, 100, 200, 300 to 800.

09:37.840 --> 09:39.680
Each school has 12 wrestlers,

09:39.680 --> 09:41.200
and those are the two parameters

09:41.200 --> 09:43.440
that we'll be throwing in to school.

09:43.440 --> 09:45.680
We have our advantage matrix right here

09:45.680 --> 09:47.360
for our weight classes,

09:47.360 --> 09:49.440
and then we have our season simulation,

09:49.440 --> 09:51.200
which is basically just matching

09:51.200 --> 09:53.120
every school with every other school,

09:53.120 --> 09:56.160
because every school needs to wrestle each other.

09:56.160 --> 09:57.680
And then our total school score,

09:57.680 --> 09:59.280
this is where it comes full circle,

09:59.280 --> 10:02.880
we determine the best school, and basically the rankings.

10:02.880 --> 10:05.440
There's eight teams, there's going to be a number one slot,

10:05.440 --> 10:08.160
a number two slot, all the way to a number eight slot,

10:08.160 --> 10:09.920
and this is when we determine the best school,

10:09.920 --> 10:13.040
because we're going to be using this to seed the tournament.

10:13.040 --> 10:15.040
Remember, all of this is still inside conference,

10:15.040 --> 10:18.000
so we should probably have a few more attributes in here,

10:18.000 --> 10:19.040
but that's neither here nor there.

10:19.040 --> 10:20.560
Let's just focus on the code.

10:20.560 --> 10:23.040
Our individual wrestling matches are right here

10:23.040 --> 10:26.720
based on the ability score and this math

10:26.720 --> 10:28.240
that we store in Sigma

10:28.240 --> 10:30.800
and passing in the parameters of the ability score

10:30.800 --> 10:34.640
of the first wrestler and this math right here.

10:34.640 --> 10:36.320
Basically to determine the score,

10:36.320 --> 10:40.080
you know, if score one, wrestler one is better than score two,

10:40.080 --> 10:42.800
of wrestler two, then, well, wrestler one wins.

10:42.880 --> 10:45.280
If not, then they lose and obviously everything else

10:45.280 --> 10:47.920
is stored properly according to that.

10:47.920 --> 10:51.440
And while all of this is one wrestler versus one wrestler,

10:51.440 --> 10:54.800
the individual match, we have the overall schools match,

10:54.800 --> 10:56.800
school one versus school two.

10:56.800 --> 10:58.080
And you remember get wrestler,

10:58.080 --> 11:00.960
I believe that was in our school object

11:00.960 --> 11:03.520
and we get those wrestler and then we make

11:03.520 --> 11:05.520
each individual wrestler wrestle

11:05.520 --> 11:07.360
based on their weight class, based on their school.

11:07.360 --> 11:09.280
Then we have our comp structure, you know,

11:09.280 --> 11:11.120
aside from all of the, oh look,

11:11.120 --> 11:13.120
this guy got a haircut comments.

11:13.120 --> 11:15.280
Tell me what this structure does.

11:16.080 --> 11:16.800
What does it do?

11:16.800 --> 11:19.280
Now our match class, I don't exactly remember

11:19.280 --> 11:20.560
why I did it like this.

11:20.560 --> 11:22.640
It's a lot of the same stuff

11:22.640 --> 11:25.120
as what we've got going on here,

11:25.120 --> 11:28.080
but in this match class, in order to determine

11:28.080 --> 11:31.360
and basically label the wrestler as the winner

11:31.360 --> 11:34.240
or the looser, as the looser.

11:35.040 --> 11:35.680
Great spelling.

11:35.680 --> 11:37.520
Oh, never mind, I know why,

11:37.520 --> 11:40.640
because we needed something that was just that simple

11:40.720 --> 11:42.240
for the tournament.

11:42.240 --> 11:43.280
So let's go back up here.

11:43.280 --> 11:44.560
This is the match class.

11:44.560 --> 11:47.040
Basically we're just determining winner and loser

11:47.040 --> 11:48.640
within the tournament.

11:48.640 --> 11:51.680
So the tournament again is after the season that we seed,

11:51.680 --> 11:54.880
which is going on basically all right here

11:54.880 --> 11:57.920
in order to have the best school,

11:57.920 --> 12:00.640
which is going to be the first in the participants array,

12:00.640 --> 12:03.840
aka rank one versus rank eight,

12:03.840 --> 12:06.080
who's going to be last in the participants array.

12:06.080 --> 12:08.560
And this is where the, this is where the match comes in.

12:08.560 --> 12:10.240
As you can see, we have our winner

12:10.320 --> 12:11.840
and our losers.

12:11.840 --> 12:12.800
So that's what this is doing.

12:12.800 --> 12:14.720
It is simulating the tournament

12:14.720 --> 12:16.640
for the rest at the end of the wrestling season.

12:16.640 --> 12:19.840
Then we're printing the winner for each individual weight class.

12:19.840 --> 12:22.880
And down here is where it all comes together.

12:22.880 --> 12:26.320
So we are just doing the simulation of the season.

12:26.880 --> 12:28.480
We are getting the conference winner

12:28.480 --> 12:31.280
based on the best school score.

12:31.920 --> 12:35.360
And then we are getting the tournament winners down here.

12:35.360 --> 12:36.560
I guess we're not printing that out.

12:36.560 --> 12:38.080
Oh no, we are print winner.

12:38.080 --> 12:39.200
Oh yeah, that's what we're doing.

12:39.200 --> 12:42.160
So this is the single best winner of the season

12:42.720 --> 12:45.600
while each time you print out this

12:45.600 --> 12:49.680
are the best wrestlers for that weight class and the tournament.

12:51.200 --> 12:54.240
So yeah, that's how the wrestling tournament simulation works.

12:54.240 --> 12:56.080
Like I said before, if you're interested in this,

12:56.080 --> 12:58.000
maybe even doing it yourself,

12:58.000 --> 13:00.400
all of it will be on GitHub

13:00.400 --> 13:02.080
and repository that I'll link down below.

13:02.080 --> 13:05.280
Feel free to use the design plan, the requirements, whatever,

13:05.280 --> 13:07.760
with whatever language that you want to build this with.

13:07.760 --> 13:09.040
I don't know how many people actually do.

13:09.040 --> 13:10.960
If you do build this, let me know.

13:10.960 --> 13:12.960
If you build it on any sort of level, let me know.

13:12.960 --> 13:14.640
I'm not saying I'm going to be able to give you advice

13:14.640 --> 13:16.720
on how to solve this problem or that problem,

13:16.720 --> 13:20.000
but like this video, it's fun to look at code.

13:20.000 --> 13:21.280
And I don't know if you can guess,

13:21.280 --> 13:24.560
but my next video may or may not have...

13:25.600 --> 13:27.280
Stay tuned if you're interested in that.

13:27.280 --> 13:29.280
I think that'll be a really fun project.

13:29.280 --> 13:32.240
And then I have a couple other project based videos

13:32.240 --> 13:35.120
around the corner that should be going up this month.

13:35.120 --> 13:36.880
That's really my way of saying subscribe

13:36.880 --> 13:37.680
if you aren't subscribed.

13:37.680 --> 13:39.040
So you don't miss out on those videos.

13:39.040 --> 13:40.240
Like the video if you liked it.

13:40.240 --> 13:42.080
Thank all of y'all for watching,

13:42.080 --> 13:43.040
especially for watching

13:43.040 --> 13:45.680
since I haven't uploaded in over two months.

13:45.680 --> 13:46.880
Well, until this video.

13:46.880 --> 13:48.160
Is that how I do the outro?

13:48.160 --> 13:49.040
I don't remember.

13:49.040 --> 13:49.760
See y'all next week.

13:49.760 --> 13:50.640
See y'all next time.

13:50.640 --> 13:51.440
Something like that.

13:51.440 --> 13:53.280
Let's just stop the record.

