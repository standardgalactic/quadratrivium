start	end	text
0	4720	So, I just want to make a quick YouTube video about this because it seems to be coming up
4720	10400	and it's a really important topic and I don't know how to make it into a question so I mean
10400	20020	the question I originally was going to have was, what did I just do, you know like I don't
20020	24780	know.
24780	34780	What are contextual rooted command trees?
34780	36660	And this is my new term.
36660	40660	We thought, Milesi's not here, he's one of our community members who told me the idea
40660	47100	that people were referring to this by saying fluid and fluid APIs or fluid command line
47100	50900	APIs and I have not found any reference for that yet.
50900	53980	So, Milesi if you're out there, let me know and put a comment in there, does anybody on
53980	57780	YouTube who knows about this who's got an actual term for this?
57780	62580	So I'm going to describe what it is and I'm going to use my best way of describing it
62580	67500	which the community and I have recently just kind of come up with, you know I'm a little
67500	72420	bit out of the idea but and I'm going to tell you what it is and then we're going to come
72420	79580	up with a name for it because this is really becoming spectacularly popular and so we're
79580	83620	seeing, so let me just summarize what's happening, let me tell you a little story, so you know
83620	87220	if you go back to the Boomer days, you know a lot of good things came from the Boomers,
87220	91700	the Internet, you know C, Unix, bunch of other stuff but one of the horrible things that
91700	103300	came from the Boomer generation is stuff like this, GPG, this is the epitome of Boomer
103300	109260	get-opt hell and I can sit here and hold my finger down and I can, you can see all of
109260	114220	the potential options for like, you know good 60 seconds there and all of those things
114220	118540	have dash dash and everything else right and it's absolutely horrible and in fact there
118540	127620	is other programs that still use this, Cube CTL being one of them, so I mean they do have
127620	135220	kind of a top level of contextual thing but beyond that right you're like, you know it
135220	142260	does kind of give you contextual stuff a little bit right so but you still have like a ton
142260	149900	of options to deal with and it becomes so unwieldy that you know you just, you can't do it, you
149900	154580	have these top level commands and then but beyond that you're you're relegated to command
154580	163140	hell with dashes okay so so so if you go back to the 70s when people had you know constraints
163140	169460	on memory and everything this thing called get-opt was invented right and get-opt is
169460	175140	the thing that from which all of the modern command lines that were not modern but you
175140	180020	know semi-modern command lines have used it's the idea of having a switch with a dash or
180020	185860	two dashes and there's varying and there's competing things and this entire hellish world
185860	190620	that we live in that's that where everything has to have dashes in front of it is finally
190620	195780	dying and I can I can I just tell you how happy I am that this is dying so you know I have
195780	199740	a mantra don't get mad get busy and I was so annoyed by this entire thing and I built
199740	204900	bonsai and this question isn't about bonsai I'll talk about that another day but if you
204900	215020	go to mygithub.com slash rbxrob so bonsai is my my way of dealing with this and it basically
215020	222140	makes very elegant contextual rooted command hierarchies or rooted command trees and so
222140	227620	instead of having all of these dashes like my z command you just do z dot tab tab and
227620	238060	you get a number of composite command trees I call them bonsai trees or bonsai branches
238060	242100	and by the way you can import them very easily just by with one import command from go which
242100	247180	is one of the reasons I love go and and then you can also create alternative pass through
247180	251460	the rooted node graph which is the data structure we're using here and this bonsai bonsai is
251460	255260	something that came about for me completely independent without knowing any of these other
255260	258180	products that are doing the same thing so let me give you an example so if I go to you
258180	265420	tab tab for unique I tap again and I get all these variations on on uniqueness right and
265420	271900	you know I can type hex oops let's do iso sec iso sec you know like oh my god that's
271900	276140	like too much to type well you can create a shortcut through that if you want to that's
276140	280140	just you can create shortcut commands that that that zoom right down to the bottom level
280140	285980	the contextual thing and then you deal with switches and stuff you know like whether you
285980	289500	want your output in yaml and things like that all of those things you might actually be
289500	296060	able to justify a switch for are now stateful and and so that means like if I have a command
296060	301900	that that needs to say okay I prefer yaml as my output then we have like var and we have
301900	306740	a thing called var and we have a thing called config and you can save those things in a stateful
306740	310940	contextual way that sticks into your home directory and that's all built in and those
310940	314500	are you don't have to put that into your monoliths but you can do so those are and by the way
314500	319020	this approach that I do with bonsai is is elsewhere so let me let me give you an example
319020	324940	so even Qubectl has a hint of this right so Qubectl tab tab you get all these options
324940	330260	right but if you go Qube config right when Qubectl config like wow look at all these
330260	335180	other commands right and so then we're going to do available commands wait what happened
336180	342900	all right so get get context so Qubectl is kind of doing the same thing right but so
342900	346940	but it still has dash dash current and all these are the things that you have to add
346940	350180	right but I didn't want to bring this up I'm only I only have one context right now if
350180	357980	you're if you're so this is an I this is an example of stateful contexts entering into
357980	362700	the mainstream and it's not just here you're having more and more commands that that are
362700	368820	expecting they're providing like a default context or state and I mean this this is
368820	373740	revolutionary when it comes to like you know what we used to do the idea that your that
373740	379220	a specific command like Qubectl or anything would have state that's stored in your home
379220	384540	directory that you can then change rather than dealing with this switch every time I
384540	387700	mean because the answer to this up to this moment has been right a bash script or something
387700	391860	like that that's got all of the particular you know options that you want in there and
391860	397500	or an alias or something right I mean let me give you an example so so so so LS right
397500	404460	so LS my LS command is actually LS dash H color equals auto color equals auto if LS had
404460	411140	been written to be a stateful you know command then these kind of things would automatically
411140	418260	be stored in a in a sort of standard way within the home directory of the user rather than
418260	424060	as an alias right with these crazy ass you know human readable thing like and if we actually
424060	428740	did this kind of thing more frequently we would have the ability to transfer our preferences
428740	432820	in a single file or directory dot under dog configure dot local or cash in like that so
432820	437500	this is I'm think I'm thankful to say that this is where the universe is going thank
437500	443500	God is that we are allowing state to be added to even things as granular as LS rather than
443500	448460	create these aliases and stuff and we see that in Cube CTO when we do Cube CTO config
448460	451740	you know we could change the context and all our commands are based on that namespace or
451740	455900	based on that preference or but unfortunately we can't set our default output format that
455900	459740	would be fantastic wouldn't it how many of you would like to change your output format
459740	466100	for Cube CTO to default to wide probably a lot of you or to YAML or to JSON you probably
466100	469700	want for this for the for the duration of the session to change that instead of having
469700	474740	use that fucking switch on every single time you go back into your history and go edit
474740	480980	it no amount of Z shell or fish you know assistance on the command line is going to overcome
480980	485860	the bad design that forces you to put that switch on every fucking command line every
485860	490020	time if that had been turned into a stateful configuration parameter I'm sorry I'm swear
490020	495180	I normally don't do that on YouTube but this stuff gets me very angry yeah pain would have
495180	504580	a config if if if we if we you know dare to give ourselves permission to give all commands
504580	513620	state and context and rooted you know command trees the world would become a better place
513620	519220	and I'm again I'm very grateful to report that this is already sneaking into our world
519220	524660	let me show you a few examples so the first one I know of is get the first substantial
524660	535340	program to violate the one one thing you know do one thing well idea was get and and ironically
535340	540140	get still fulfills that get is just a front end there's actually a ton of commands in
540140	546220	here so you can get add I mean it used to be multiple commands right so the old days
546220	552940	of doing one thing well and and I mean that still applies that that that refactoring into
552940	560020	one thing well but but in you know 2022 we've allowed ourselves to say look we have memory
560020	565860	we have this space it's okay to put these one thing well things inside of monoliths that
565860	569780	travel around and that's what bonsai is by the way and and then that way we know we have
569780	575500	the portability of it all but we bring all of that functionality with us so and I mean
575500	580700	busybox did this very thing and you guys ever seen busybox every single command from the
580820	585580	from unix all of all the base units commands we've been this is not new right it's been
585580	590180	used it's been it's been multicoll binaries before but busybox busy you know let me do
590180	594340	a Docker thing so Docker you some people might not know this actually I have podman on here
594340	601100	let me see if this doesn't work a podman dash it dash dash run I mean how how annoying is
601100	606740	it that I have to type all that right isn't it I mean I am running podman so frequently
606740	610220	with these parameters that I would want that to be my default context but I can't do that
610860	617100	right it drives me crazy why can't I tell podman or docker that by default I want to remove
617660	624140	the things after I run them I have to type dash dash rm every fucking time because it has no sense
624140	629740	of state it should it should and I might actually redo a podman that has it that way but unfortunately
629740	635980	no so it still has a command so I'm going to do a run and I just want to show you alpine
636940	643740	which is the most common with the most popular Unix distro okay fine a Docker just to get it out
643740	656860	of here whoops run what am I doing wrong exec alpine right I cannot remember my Docker commands
656860	661100	right now what am I doing wrong people I'm doing something wrong
665420	671580	is it does it have to be before the flags okay thank you for helping me make my case further
674460	680380	I mean how annoying is that I'm glad that happened on the stream alive because that's
680380	684940	exactly what I'm talking about the flags are part of the commands sometimes they're not though
684940	688860	there has been several commands where that does not matter where they appear in the command line
688860	694620	right but some do yeah whatever I mean it's super annoying it's super annoying because I mean how
694620	699180	many times have I written this command I still can't remember it I should have been able to just
699180	705420	tab my way through the thing and figure out the syntax if it had had a you know a human friendly
706540	709420	you know rooted command tree that I would I would already know what to do
710460	713980	right and if one of those commands has helped then I could I could say okay well this particular
713980	718540	command has state and I can set the state variables for that thing such as remove yourself every time
720220	724540	you know whatever so so so here we are on alpine let me just show you what I'm talking about so if
724540	730460	you go to this slash bin and you ls that shell you'll notice right away that there is a bunch of
730460	736780	stuff that's sim linked right if you go look at the same stuff on busybox it's hard links
737580	740860	it's actually kind of interesting you want to see the difference they're all the same file they're
740860	747340	all the same this is called a multicoll binary and this is a very early version probably earliest
747340	758540	version of a contextual command interface so they maintained you know the one thing good
758540	765100	kind of mantra from unix and from the philosophy but then they hit it from everybody by making all
765100	770220	of them individual commands and those commands are all in a single binary that binary fits on
770220	775820	a floppy disk on a 1.5 megabyte floppy disk that's why busybox was curated and and you can go back
775820	780060	on a lot of people don't know this but you can go let's do the same thing let's run busybox this time
781180	786460	assuming I can get the command right and you just go into bin here and you'll see
788060	792620	hard links this time so the way you know it's a hard link because you got 401 hard links here
792620	796380	they're all exactly the same size binary and they all look like they're actually separate no they're
796380	806700	all hard links and yeah and so yeah this is this is the modern era though so the modern era started
806700	812220	with busybox really but these days you know the closest thing I mean git was the first one
812220	816300	git said you know Torvald said you know we got memory I'm going to put all of the commands
816300	826140	that again now git is almost its own you know thing and strictly speaking these command lines
826140	832220	that we're using for git or whatever are domain specific languages and you know what if we had
832220	837500	treated them like that from the beginning we would have a much better command line world
837500	843980	today and I am happy to report that the world has woken up and decided that creating things that are
844060	848780	naturally intuitive like git has been I mean I mean obviously there's a lot of selections here
848780	852540	but but let me give you another example so you can go to any one of these things right
852540	858860	but let me give you another really good example ip the ip command right same thing it's a it's a
858860	863180	it's a you want to call it a model it you want to call it a command with subcommands whatever you
863180	869820	want to call it it has that and you can like kind of keep going right you can do address okay I got
869820	875660	that and I go address tab tab oh look I got I can do address change delete flush and help
875660	882060	I really really really love this command because I had nothing to do with this command nothing to
882060	888540	do with it I did not even know about it and it has the the creators the brilliant people
888540	895740	behind the ip command have created exactly what I created in bonsai to the letter to the letter
895740	902140	now they they do allow dashes and stuff like that and but the fact that they put the help command
902140	909820	after the command that help is a subcommand of the main command is exactly what I did was z
909820	916140	so I do z bonsai right so I do z is the um my help is way better than that but if I do z unique
916140	923020	right everything in bonsai comes with an optional embedded help command so I can type help and I get
923020	928620	a man page and this has been structured exactly like the man pages and you get this help documentation
928620	935740	for free with bonsai it automatically detects the subcommands as they have been uh composed
935740	940860	into your monolith and at every level in the commands tree at every level of the you know the
940860	946620	command level uh of your of your commentary you you get a different help command that is
947660	952620	specific to the available commands under that section automatically and I built that into
952620	957580	bonsai so the fact that the ip people have actually done the same thing and shows to put help there
957580	963900	instead of dash h which is probably also going to work nope good for you I love the ip whoever
963900	969580	designed the ip command you are brilliant you're a brilliant wonderful people thank you so much for
969580	973500	seat for days and and you know there's a lot of other commands so net plan is one I know people
973500	979420	don't like net plan but people are starting to wake up and we have git you know a cube ctl is
979420	983900	getting better I think it'll eventually come around and create you know this this kind of interface
985180	991580	but I just I'm just super happy with that now unfortunately uh you know that in order to get
991580	997820	color here I still couldn't set state so guess what I had to do you're gonna see it aren't you
998780	1004060	I can't set state so the thing the thing that the people doing these command line interfaces have
1004060	1012700	not yet fully accepted is a way to standardize context and so my term for this and this is
1012700	1019100	going to be the term I'm going to propagate going forward is contextual rooted command trees
1020140	1023900	contextual rooted command trees or stateful rooted command trees
1025660	1031820	stateful contextual the point is that you should be able to set the state of your switches
1032620	1037420	and and do it one at a time so I'm going to go do this one I'm going to go do another one
1038380	1044300	and it's not that most of the time when you want dash c on a thing you always want dash c on a thing
1044940	1050060	right and like for cube ctl how many times have you just wanted the namespace to be for a single
1050060	1058540	command during a cube ctl session pretty much never right and so you are forced to go up and
1058540	1064220	redo that exact same command line and rebuild it every time because there's no command to set the
1064220	1069340	default namespace you can in the context but then you have to go through that convoluted
1069340	1074940	context switching crap because because no one is really standardized or thought about a simplified
1074940	1082140	way to do it now I have in bonsai so in bonsai you can actually do var and var is a generic way
1082860	1089900	to capture variables that are stored statefully in a file for everything
1090540	1096460	that uses for everything in the monolith and I really wish that that we could standardize on
1096460	1101660	this so and it so the default way to do this is home art of x robbie goes into your home directory
1101660	1105820	I don't know can you see that my help description is actually specific to my account
1105980	1113100	you know why because I'm running the help command from the command
1114540	1121180	so I have dynamic help that detects your current situation that means all that stateful
1121180	1125900	stuff that we're also adding guess what you can leverage that in your help documentation so when
1125900	1132540	you go man or instead of doing man rides you go z whatever help it can actually in interrogate
1132540	1136460	the local cache or the very variables they've already set and it will display them in your help
1138540	1143580	I mean these are things that that are like next level when it comes to thinking about these these
1143580	1148300	these type of like really extremely human friendly interfaces and and and I you know just
1148300	1151980	rather than getting angry about it I went ahead and build it I would like to see these things
1151980	1158540	incorporated into more things but being able to standardize on dot cache z vars I mean you throw
1158540	1162860	away there usually the cache oh yeah this is actually probably one of the best use cases for
1162860	1166780	go but you know I mean let me just I sounds like I'm selling bounds bonsai here that's not how
1166780	1171580	what I started on this but bonsai was you know of course my solution to this but I have a z
1171580	1178700	monolith that that is here just to show you what I'm talking about so um you know and just to show
1178700	1185660	you how easy it is to do this all I these are all of the the bonsai branches I call them which are
1185660	1194140	just commands with their own trees and I just import them and they're here that's the end of it
1194140	1201340	I can create my own uh dynamic template variables for my help I can set flags I can create you know
1201340	1207020	if I want to do a multi-call I can do that um here is a here is a parent command so this is
1207020	1209660	this is a command is different I mean you have to get into bonsai I'll do a whole thing I'm on
1209660	1212780	bonsai I'm gonna write a book about bonsai actually the reason I'm doing all this keg stuff
1212780	1217580	it's got a lot of books to write and one of the books I want to write is is is bonsai the book
1217580	1221420	about bonsai the bonsai guide because I think and here's here's the shortcuts here's all my
1221420	1226700	shortcuts through the command tree that goes into the monolith so I can bypass some things right
1228380	1235740	and and stuff um and here it says uh and there's I mean here's an example of the help template
1235740	1240380	which uses the most amazing templating system in the world the go templating system is by far
1240380	1245740	the most powerful that's ever been created uh it's so easy to create extensive extensible
1245740	1251260	uh syntax for your templates everything anyway so that's it the rest of this stuff is all pulled
1251260	1256460	in from these other things including local stuff so the env go this is a sub-command I just wrote
1256460	1260700	really quickly I was like hey I just want to print my environment variables and I you know
1260700	1263980	just couldn't come out of stuff I I don't want to get too much into bonsai I just wanted to show
1264780	1268620	you know I wrote some tmux stuff I'm in the middle of converting all of my
1268620	1272140	bash scripts into a single z monolith that I can copy onto any target system
1272140	1277740	including things that running any shell on planet earth because because this is a binary it doesn't
1277740	1283420	care how it's being executed at all and one of the things I haven't added yet is I want to add
1283420	1287820	completion so that if you I don't have this yet but if I were right now if I just do z enter it
1287820	1294940	shows me the help but I am going to add so if you if you wish to you can set up the default shell
1295580	1300780	and when you do z enter what it will do is it'll it'll put you into a tab completion terminal mode
1301660	1310300	that's supported on any on any shell whatsoever including DOS so if and when we get that because
1310300	1315420	that library has already been written I mean gh already uses it right so the gh tool already
1315420	1322460	uses something to this effect so the create repo create you're seeing this more and more it has
1322460	1327020	this whole terminal interactive it's like a little sort of it's not truly a command line it's an
1327020	1333580	interactive terminal session but but but for places that don't have completion I want to
1333580	1336940	be able to just go z enter and then enter a command and hit tab and have it find the right
1336940	1342140	command on anything anything anything whatsoever because because the completion will then be built
1342140	1349580	into the monolith itself in a very tiny like micro shell if you will so that that haven't built that
1349580	1354460	yet but that that's coming and and to me that's that's where we're going you know we we have these
1354460	1362700	these other things here you know I have my pomo command is in here and pomo start and there's
1362700	1370060	my pomo up in the corner z pomo stop anyway so that that's what I I don't know what should we call
1370060	1375260	them should we call them stateful or contextual what should what should we call them I think we
1375260	1381500	should call them stateful rooted commandries uh that's what I think I think they're stateful
1382540	1387180	I think stateful is the right word because because they do have state I mean you know
1387180	1392300	the a subcommand might you know it switches and stuff might be changed now I also have a config
1392300	1398220	command which is for you know that throws you into a config yaml file and lets you change your
1398220	1402220	configuration for your local system for your local z bonzai command and that stuff's not meant to be
1402220	1406060	temporary cache and that's the kind of thing that you would copy around with you in your dot files
1406860	1411820	but the vars the vars uh you know bonzai tree those are all optional by the way you don't have to
1411820	1416700	put those into your bonzai tree if you don't want but if you do put the vars uh the vars into your
1416700	1422220	bonzai tree you get stuff under dot cache but then if you go onto another system and you don't take
1422220	1427340	your cache with you you just get the defaults for all your your commands uh unless you you know and
1427340	1433340	that's it's up to you to kind of decide whether you want to implement uh your bonzai tree command
1434460	1439820	using config uh so which you know can use a centralized config by the way one config for an
1439820	1449260	entire monolith um and because you know you're able to like drill down and versus um you know having
1449260	1454620	having cached variables that are that are that are there now you know the amount of time it takes
1454620	1461100	to read from those variables and all that stuff is so infinitesimally small that it's it's not an
1461100	1466140	issue it's not an issue it might have been an issue in 1976 but it's you know it's not anymore
1467180	1471900	so so that's that's what that's about um that's really all I have to say about that so I I encourage
1471900	1479500	people to um to play around and if you discover a a stateful root of node tree uh root of command
1480300	1488060	some somewhere um let me know and we can you know put these together I'd like I'd really
1488060	1494940	like to kind of see how the world is waking up and throwing get out out thank god uh you know
1494940	1502300	dashes be damned uh you know I the other great thing about this is that these interfaces that
1502300	1510060	we're building can easily be spoken if you pick words that are real if you I've tested this on my
1510060	1515260	on my pixel my google pixel with natural language so I mean people people are already using command
1515260	1522060	lines we have like sales people using command lines because they're using uh slack right so
1522060	1526620	somebody writes a slack bot or a twitch bot and you know maybe they put an exclamation point in
1526620	1532300	front of it but they put a bot in there and then the bot is is processing natural you know
1532300	1538540	is processing these messages all the time and those messages are real so so the more realistic
1538540	1542620	and and human that we make our interfaces is simpler we make them without all the dashes you
1542620	1546780	can never do this with get off right but but if we actually move to a stateful root of node tree
1546780	1553660	command kind of situation all of our commands on the command line can be directly implemented
1553660	1560140	as bot commands with no modification and now you can go into your favorite chat app and slack
1560140	1567260	or a twitch or whatever and you can speak your commands to the thing and that is really the
1567260	1572780	future now you don't need a full blown machine learning algorithm to to process every possible
1572780	1578380	thing here you just need the definition of a domain specific language so that you can tell
1578460	1583660	your bot or your system or whatever about it and then do it alexa's already doing this
1584220	1587900	series already doing this they already have gotten in fact if you go out if you've ever written on
1587900	1593580	alexa uh conversational command i was really into conversational ui for a long time about four years
1593580	1600380	ago i created a thing called skeezix and and sabah which is conversational assistant virtual agent
1600380	1604700	but i that's i haven't gotten anywhere without since then but i do believe that the future is
1604700	1609660	going to be conversational interfaces so the more we can start using stateful rooted tree
1609660	1614060	node tree commands the the closer we're going to get to conversational interactions with our
1614060	1620780	computer i systems to those you know sci-fi's in the 1970s that we saw where people were talking
1620780	1626780	to the computers and telling them what to do until we create conversation until we get to the point
1626780	1633980	where we're getting rid of get ops i can run an ip command by speaking it into my command line if i
1633980	1646300	had a voice interface i can do it i can't do that with gpg imagine that example i i want to create a
1646300	1651820	new gpg key right or i want to encrypt something with gpg can i speak the command to my computer
1651820	1657820	at this moment and have it work no but i could if i wanted to look up the current ip address for
1657820	1662620	for a specific ethernet configuration assuming my conversational interface let me spell out you
1662620	1667500	know individual um ethernet ids which would be great if some of the conversation the uis would
1667500	1671740	start to allow that if they would have a keyword that said spell blah blah blah or whatever we
1671740	1677260	could actually start doing that and then then we can start using our fancy microphones to write code
1678540	1683020	or to interact with these systems and we will not ever be able to do that until the world wakes up
1683020	1689820	as it has been and starts using stateful rooted node node node command trees or if you wish just
1689820	1695100	natural language command line uis which is what it is i mean i kind of think that's probably the
1695100	1699180	better way to say it we should start being we should start to use natural language command
1699180	1706700	line uis and maybe that means that we put you know we make certain words optional maybe maybe we do
1706700	1710380	maybe we say if somebody puts an article in there or something that we you know they don't have to
1710380	1715420	talk like a robot to interact with their command line conversational ui maybe maybe we we we use
1715420	1720540	regular expressions actually that's that's what schesix and kava were they actually i i wrote an
1720540	1725980	app it's i got to go find it again but i started writing a conversational ui that used a regular
1725980	1733900	expression to match any of the root node tree commands and now that i think about it that's
1733900	1743100	probably something we could add to bonsai um the only problem with that is that uh right now the
1743100	1748300	the way that the um the node tree works you have to have a single unique you know thing through it
1748300	1756940	but if we could ever create a way to to add helper words that are ignored you know the or whatever
1756940	1763260	without going full-blown machine learning algorithm model you know or we could we could actually start
1763260	1768780	speaking in very very natural ways to our to our to our monoliths and do things like that
1768780	1773580	so and i i look forward to the day but i mean just being able to tab through something to me is like
1773580	1778620	is like plenty plenty good for now because i don't like reading about all the help and everything i
1778620	1783980	think you should be able to to immediately understand what your options are on on any command just by
1783980	1790220	hitting tab i mean if you can't do that if you have to go slog through a man page uh i mean you
1790220	1794700	should be able to see boom and see all your options and go hmm this one looks really good and you
1794700	1799980	know to cobra's cobra's credit i will tell them this i they you know if you tab tab through this
1800780	1807900	um wait that's not the one i'm thinking of um which is the one that does it there's there's uh
1809980	1817100	there's there's one oh that's not it there's there's one that uh will actually give you a
1817100	1823340	summary like a very long-winded description oh no gh there is it'll give you a long-winded description
1823420	1831100	it runs it into more and everything when you do this right um and i do find that kind of interesting
1831100	1836860	that it that it does that um the reason it's the way it's doing that is it's actually running a shell
1836860	1843500	script uh in order to get you that and that's that's a bonsai thing and that that's very
1843500	1848380	shell dependent and they have different versions for each shell and i i feel like that's nice and all
1848380	1854620	but i it's not it's definitely not portable so um but but i want to show this because it does show
1855340	1859260	how you could break down you know the the description of of what each of the things are but
1859260	1864140	i don't even think you really need that i i think you just need to be able to just do z tab tab um
1865340	1872860	and you should be able to get to look at um you know all of these different things to go
1872860	1877500	hmm well what does that one about right and then just do path help and you'll you can see the help
1877500	1883340	okay path doesn't have that path must be a uh a shortcut to something else and i actually don't
1883340	1887180	know which one it is it is a shortcut i probably should have a shortcuts command or something
1888140	1891900	that is that is something that i want to look at so i mean help here will show me
1892700	1899660	i think actually my help does show my shortcuts it does there it goes uh it does yay i did something
1899660	1908700	good so path path thing is env get path so if i were to do z env uh help and that would give me
1908700	1917340	that and you can actually do help help help help on being repressed um so so yeah you can actually
1917340	1922780	the help command uh has a bunch of sub commands and it does its own parsing of the thing so i mean
1922780	1927740	that's all that's all i have for this youtube video but but i encourage you as i said to to
1927740	1932220	consider you know making human friendly interfaces at the end of the day that's what we're talking
1932220	1937580	about and human friendly these days means conversational and that in this case means you
1937580	1945100	know a stateful commentary uh and and i'm going to just shorten it i'm going to say stateful
1945100	1953500	commentaries uh and there we made up a new term let me know what you think in the comments below
1953500	1959260	am i youtubey enough yet
