start	end	text
0	20160	This desert is awesome.
20160	23800	That's how I feel like about doing this topic.
23800	33000	I feel like I feel like the better approach to people who criticize Pearl is to just like
33000	45600	chill and drink my coffee and go, mm-hmm, mm-hmm, mm-hmm, yeah, yeah, yeah, mm-hmm,
45600	58120	Are you done yet? Yep, are you done? Mm-hmm. Oh, right, right, right. Yeah, when was the last time you used Pearl?
58120	66200	Oh, oh, yeah. Oh, did you? What was that? What was that? Regular expression? Did you have trouble with that?
66200	74320	What's a regular expression? Oh, um, how do I put this?
74320	80680	Yeah, what was the language you were using instead that you said you prefer to use?
80680	85280	Oh, do you think that that language is the only language that has regular expressions?
85280	93960	Okay, mm, all right. How much coding in Chinese do you do for Chinese strings that use the Unicode?
93960	96760	Oh, none. Right, okay.
96760	107160	Well, yeah. Well, I'm sure you're going to have a great day. I really am. I'm sure you're going to have a great day.
107160	123160	I got stuff to do, though. So if it's okay with you, I'm going to go up on my camel here and we'll get you done while you're doing whatever you do.
123160	136480	I'm sure it's fun. I couldn't resist. I couldn't resist. I know I'm an old pedantic, grumpy asshole. My Rust video proves it.
136480	152760	I know it. I'm just going to own it. And one of the things that makes me the most annoyed of all is people criticizing Pearl for being a read only language
152760	163040	or writing it and not being able to understand it or not knowing what it's for. Or, oh, that's only a Boomer language.
163040	172880	You know what else is a Boomer language? C. You know what else is Boomer technology? Linux. These are old things.
172880	181320	You still use them every day and you love it. Just because something, you know, has been around a while doesn't mean you throw it out and start using something new.
181320	197280	And that's not just, I'm not just saying it because I'm an old guy. I'm saying it because I recently had a massive sort of come to tech Jesus moment where I just was like, why did I ever throw Pearl out?
197280	206080	Some 12 years ago, 13 years ago, I threw Pearl out on the floor and I said, no, I'm going to do everything in Python from now on because that's what the world is doing.
206080	212440	I didn't bother to ask myself why. I just listened to everybody else and said, well, this is obviously the way to do it. If I want to get a job, I better do it in Python.
212440	219200	So I did invest back when four people were doing Python. I was doing Ruby and I had done Ruby before that. Ruby was awesome. But here's the thing.
219200	229240	We were also writing large applications. We were writing applications that needed the pseudo object orientedness of Python or, you know, the scale of Ruby.
229240	239600	Really, what we needed was go at the time or a language like it that could support the weight of enterprise development without the complexity and just absolute bloat of Java.
239600	246600	And so that's what we needed. So I went ahead and I'm definitely going to accept comments at some point and I'm going to go into the IRC.
246600	255440	There's going to be all kinds of people in here with all kinds of opinions and I love that. But I was particularly grumpy recently.
255640	264080	Not particularly because of any single person. A lot of people took the back end of my wrath on this because it was actually me.
264080	280760	I've done a lot of reflection over the last day. It was actually me coming to terms with the fact that I threw out something which I tend to do that had an application for a specific area.
280760	293720	And that area is a very niche area, but it is a very important area. And so then I came back to it. I actually just discovered all over again that the only prototyping language I should be using for Unicode regular expression matches right now is Perl.
293720	300400	It's the only language on the planet that supports it as far as I know right now. If I'm wrong, put it in the comments and I'll go look it up.
300400	309160	But so here's I just put these these items together here. I don't know, but these are good reasons to use Perl in 2021.
309160	313320	It's 2021 that everybody thinks, oh, my God, we got to get Perl out of there.
313320	320600	The BSC team went to exhaustive effort to remove Perl permanently from the district, which I think was a stupid choice.
320600	324840	The new of him, the new of him team ripped out Perl from inside of it.
324840	328960	You know, it had some internal Perl support from they might get that fucking Perl out of there. We get that out of there.
328960	341880	We can't have that. And everybody's just got this Perl hate F security, which by the way, F security, really, really, you're going to you're going to permanently date your company to,
344400	351840	you know, to an Amazon thing about a guy who struggles with
352640	357400	psychotic problems. That's that's you're going to make a Mr. Elliot reference for your company name.
357400	364760	And then you're going to have the gall to put inside of your job description as a bullet point has a healthy disdain for Perl.
364760	370480	I'll show you those lines of that. You know, all you're really doing is proving how stupid you are.
370480	381320	If you don't understand why Perl is still a very, very viable cybersecurity language, then you don't have any business being in the industry.
381560	386720	Because Python's not going to do what Perl is going to do. And I'm going to tell you all the ways that that's true.
387200	391520	All right. So the first one is regular expressions.
392760	404920	Perl is the industry standard for regular expressions. In fact, your regular expressions use in JavaScript and in go and in and in Python, they're all using PCRE.
404920	416360	In fact, you look at the Python source code, it literally links in live PCRE, which is the exact library created for Perl compatible regular expressions, because Perl set the standard.
417160	426240	Because Larry Wall in the game, they saw, they saw a problem. They said, you know what, Auk ain't doing it, said, Oh, my God, ain't doing it. By the way, which version of Auk or said you have on your system?
426240	439400	Is it Auk or is it N Auk? So Larry Wall fixed a problem. He said, you know what, we need something that's relatively standardized that has the best of all of these things together that fits that space in between shell and C.
440080	456120	And that's what Perl was. That's what it became. And that's all it was ever intended to be. The fact that Perl went on to become the industry standard for back end web development is just a testament to the robustness of this
456880	472560	command line utility scripting language. That's all it was ever intended to be. The fact that he even put up with what it was put under all the weight of the entire worldwide web development was put on Perl's shoulders, which it was never designed to do.
473360	483360	The fact that I was right able to write enterprise software that fell on its face with PHP, by the way, and with Python, those things just did not do it. It didn't do it.
484360	509360	And so Perl was there to do that thing. So stop judging Perl as an enterprise language. It was never meant to be a language. You know what it was meant to do? It was meant to replace said Auk, TR, Cut, and all the other unnecessary sub shells in a way that could take one sub shell and it could be extremely powerful and it could be loaded and it could do things that the other languages don't even dream of doing, like, oh, something as simple as mapping, you know, map, filter, reduce.
509360	527360	Those are all built into Perl. Those concepts were built into Perl before JavaScript was even conceived and they've been there all along. Somebody the other day was saying, you know, I've been looking for a language that's better than Node because it has more, it's like, that's more, you know, powerful on the command line. I don't have to have a Node install Node on everything. I was like, have you even looked at Perl? What's Perl?
528360	543360	So leave it to the old guy to bring this up. And, you know, I was just as much, I even made jokes about it. There's a video, somebody put a comment recently on one of my Go videos and they say I was making a joke about it. You know, this looks like, you know, it's harder to read than Perl.
544360	560360	And I'll be the first to admit that there has been really bad Perl written. There really has been. There's been Perl that's been written that is, you know, just abysmally bad. In fact, there's entire competitions that I'll let you go look up on your own about Perl obfuscation contests.
560360	578360	We're like really super intelligent people, you know, show off their ability to make their code absolutely completely incomprehensible. By the way, that same sort of culture and thinking reminds me a lot of the Rust community today. A lot of the Rust developers, they're very elite, they're very intelligent, and they take pride in writing code that no one can understand.
578360	595360	Well, it sucks to be you. Can we just agree that that attitude in a developer should be like rooted out of any dev shop? If you think you're better because you can write code that no one can understand, you need to be fired on the spot.
595360	615360	I mean, if that sentiment bubbles up at any level in your team, you have to shut that stuff down because it will destroy your team because, you know, they'll think they're elite and they wanted this thing. But let's talk about that for a second. The reason that Perl is considered a read-only language is because it's got completely different design decisions.
615360	634360	The design decisions are, we want to write a very contextual, very implicit, very magical language that is able to write very, very quickly and powerfully in the fewest amount of keystrokes because it's a shell script. It's a shell scripting language, guys.
634360	648360	It has the best command line one-liners for shell that you will ever come across. You might not understand them, but it doesn't matter because they're a single, I'm not reading the comments yet. If you guys are slamming me, I'm going to get my, say my piece and then I'll read what you guys had to say.
649360	670360	So this is an example. So here is a one-liner for Perl right here. It's integrated into my VMRC that will actually go out and it will change any markdown link that doesn't have anything between the parentheses into something that contains a link to DuckDuckO every time I exit my program.
671360	683360	Now, that is a very, very dense, unreadable line. It would take you several minutes to look at it because everything that it's doing, if you were to write it out in Python one step at a time, you would have like 30 lines of code.
684360	698360	So, you know, 20 lines, maybe. You know, the point I'm trying to make is that Perl is deliberately dense and contextual. It's deliberately that way. It's that way so that you can get more done on the command line.
699360	711360	And if you look at a language like AUK, you know, people are like, people, people, this is, this is the craziest thing. I, in 2021, 2020, I continue to read and hear people talk about the praises of said and AUK and how awesome they are.
712360	717360	And then those same people will turn around without having any knowledge of what Perl even does and they will slam on Perl.
718360	722360	They will slam on Perl and they will say, well, Perl is that, oh, blah, blah, blah. Meanwhile, AUK is awesome.
723360	734360	And they have no idea what they're talking about. And it's like, and they'll talk about how great AUK and these big, fancy lines, you know, like if you're going to make a bunch of subchills, do it on a single command line.
735360	742360	And a powerful single command line is an essential skill to have if you're in cybersecurity, if you're doing a lot of system administration.
743360	750360	But most knowledge workers should be able to learn how to use the UNIX command line. That is the true power of the UNIX command line is learning how to use pipes and stuff.
750360	756360	And so if you don't know how to do that, you know, that's on you. It's not on the language.
757360	762360	The language was designed for those people who can level up to the place where they can get a lot done in one line.
763360	768360	And that's why it exists that way. And AUK, by the way, is very contextual as well.
769360	776360	It's very, very contextual. And people will love on AUK while they'll hate on Perl, even though Perl is also contextual and they'll hate on it for the same reason.
776360	787360	The difference is you don't see AUK scripts in files that are running back-end common gateway interface processing to connect to a database.
788360	795360	Perl can do that shit. AUK can't. And it's the same exact language. In fact, it starts up almost faster than AUK.
796360	801360	Not the same speed. Perl is obviously bigger than AUK, but AUK is, you know, instead, people complain all the time about it.
801360	805360	Well, it says, you know, but you should see how fast the runtimes are in Perl these days.
806360	809360	I mean, you just started from the command line. So let's talk about that for a second.
810360	819360	The chances of you getting a consistent version of Perl on a Unix system are equal or better than getting a consistent version of AUK on a system.
820360	826360	In the day, in the 90s, there was an AUK, there was NAUK, AUK, and all of the different AUKs had different forms of regular expressions.
826360	834360	One of the most annoying things that Larry Wall fixed with Perl is he was sick and tired of everybody disagreeing about regular expressions.
835360	839360	Regular expressions are hard enough to learn as it is. I mean, there's wicked difficulty to master as a beginner.
840360	847360	And so he was like, you know, I can't remember which one has which. If you've written any VIM script, you'll know it's already different than said.
848360	853360	You know, do I escape it? Do I not escape it? Does it support this class? Does it support, you know, politics classes? Does it have a backslash?
853360	858360	So he said, you know what, I'm done with that. I'm going to take all of that. I'm going to put it in here and I'm going to take all of this.
859360	872360	I'm going to put that in there. And he took every single regular expression was there and made sure that the priority of Perl is on really powerful text manipulation, the practical extraction and reporting language, P-E-R-L.
873360	882360	I think that the acronym came after Perl existed. And, you know, there's all kinds of stuff you can read out there from people on this whole topic.
883360	896360	So that's what Perl has always been good at doing. Perl has a wicked, great templating. People don't even know. You can use FMT in Perl and get really great textual templates for output.
897360	905360	You can, you know, anytime you're dealing with text manipulation and that includes parsing logs, you know, power gripping through stuff.
906360	911360	It also includes converting things to binary. People don't understand this very well. It's usually the last thing they learn in Perl.
911360	923360	There's a Perl pack, it's called. And Perl pack allows you to specify very precise binary notation so you can parse binary files with Perl using the pack statement.
924360	932360	Let's you do that with Ock. You can do it with Python, but which version of Python is Python even going to be on your system? Is it going to require a pip install?
933360	939360	That's the problem with Python. Python's not on those systems. It's not on all unique systems. And if it is, it's not going to be consistent.
939360	946360	It's not. You can't count on it. So think of all the reasons that you want something that's already there.
947360	950360	The reason that you use, you know, the bash is because it's default on Linux.
951360	955360	The arguments people make for using a POSIX shell is because that's supported on all forms of Unix.
956360	959360	They don't have to, you know, have a Docker container just to run their application.
960360	963360	They can write a script and share it, or they can, more importantly, they can put a script on the system.
963360	968360	And if you've done any pen testing at all, you should obviously immediately understand the benefit of this,
969360	980360	which is why it's so stupid that F security would make fun of the language that's the most effective for writing, harvesting, you know, penetrations code on.
981360	992360	The reason that Go is going to destroy Python in a cybersecurity world as soon as everything gets ported over is because Go can write packages and payloads that run on the target system
993360	1002360	without any other system. I can write it on my Mac. I can write a target for a Windows machine, send it over there and execute it on the system without any dependencies whatsoever.
1003360	1010360	If the system is a Unix system, I can write it in Perl. I can write a Perl script and run that Perl script over there.
1011360	1016360	And I could, you know, it depends on how powerful your shell is, right, but that you've, you know, your back door you've got.
1017360	1020360	But if you go on that system, you have Perl ready. It's a Unix system, right?
1020360	1028360	So you don't have Python. Go dig apart the rootkits. They use Python.
1029360	1036360	They have to ship the whole fucking Python interpreter with it to make sure that they have the right version.
1037360	1040360	Whereas if they were attacking a system, and that's fine if you're attacking Windows or something.
1041360	1043360	This is why Go is going to be better. Go doesn't have a whole bunch of bundles.
1043360	1049360	It's just got one very difficult to decompile executable that then can go on the target system.
1050360	1055360	That's got a ton of stuff, including high-level encryption built into the standard library.
1056360	1064360	So, again, I think Go and Perl are still very viable for all kinds of hacking techniques, particularly when you just have a shell thing.
1065360	1071360	So, I mean, anytime you're dealing with text, and so the reason I came to this is because I'm doing, oh, here's another thing.
1071360	1080360	Let's say you want to work with a system that's in Chinese, and you want to use regular expressions to parse through logs in Chinese.
1081360	1089360	Oh, no, you don't have regular expressions support for Unicode. How am I going to parse these congee characters? Can't do it.
1090360	1100360	It's no surprise that Perl is the first language to implement backslash p, which is a Unicode REGAX class match.
1101360	1106360	So, you put in parentheses behind that, you can put whatever plane of Unicode set that you want.
1107360	1110360	As far as I know, as of this date, Perl is the only thing that supports that.
1111360	1123360	And so, as I was implementing my KN utility for knowledge management stuff, I wanted to make very strict regular expression matches for the URIs that I'm using for knowledge nodes.
1124360	1128360	And I wanted to set any uppercase letter, not just any ASCII uppercase letter.
1129360	1137360	You should all go, if you want some homework right now, go find your preferred language right now for your standard language, your workhorse language,
1138360	1148360	and go find out, go see if with a regular expression you can match a set of Unicode characters that matches all capital L lowercase u, that class,
1149360	1154360	which is the Unicode character set for uppercase letters. And we're not talking about just ASCII.
1155360	1158360	Ask yourself and then do the research to see if your language can do it.
1159360	1160360	And I'll bet you that it can't.
1162360	1163360	Because I know BASH can't.
1164360	1171360	I was trying to do some of this stuff in BASH because 2020 was an experiment to see how much of my life I could just do completely entirely in BASH and go.
1172360	1176360	And I found out that as of this week that there's a pretty significant portion of what I like to do that I can't do.
1177360	1180360	I can't match Unicode character classes, period, not possible.
1181360	1182360	Maybe that's coming out.
1182360	1183360	I imagine all of that.
1183360	1186360	I imagine the pressure that Pearl's going to put on everything else is going to do that.
1187360	1200360	And since Pearl is the thing that defines the standard for regular expressions, LibPCRE is a good bet that anything that supports LibPCRE is going to get an upgrade because the people who support LibPCRE who are no longer associated with the Pearl project
1201360	1207360	are going to add that Unicode backslash p support and it's going to land in every other language thanks to Pearl.
1210360	1212360	Alright, so I don't know how many times I have to say it.
1213360	1225360	I have a little soft spot on this in me and if I sound aggravated, it's mostly because I'm aggravated at myself for not remembering what Pearl is good for.
1226360	1229360	Now let's do spend some time talking about what Pearl is horrible for.
1230360	1234360	Pearl is not for object-oriented programming in any sense.
1235360	1237360	It's not for programming anything at scale.
1238360	1239360	It was never designed to do that.
1239360	1240360	Do that in Pearl.
1240360	1241360	Do it in Python.
1241360	1242360	Do it in Go.
1242360	1243360	Do it in Java.
1243360	1244360	Do it in C-sharp.
1245360	1251360	Don't do 10,000 lines, 100,000 lines of Pearl code.
1251360	1252360	That's ridiculous.
1252360	1254360	Pearl is a fucking shell script.
1254360	1255360	It's not designed for that.
1256360	1257360	Don't use it that way.
1257360	1258360	Use it the way it's intended.
1259360	1261360	And then you'll make a benefit of it, right?
1262360	1268360	So even TypeScript is more suited for that because it's strictly typed.
1268360	1269360	It can be transpiled.
1270360	1272360	I mean, Pearl is not the language for that.
1272360	1273360	It was never designed to do that.
1273360	1274360	Don't do that.
1274360	1275360	I did it.
1275360	1277360	We all did because it was the only thing.
1277360	1279360	Python couldn't even do some of the stuff we did.
1279360	1282360	And then eventually Python caught up and it started being able to do that.
1282360	1284360	It was a little bit more verbose.
1284360	1292360	It had Python and that really, really, really sweet, you know, C-stubbing so you could like make NumPy and all the stuff that Python's become famous for.
1292360	1297360	Pearl was always, Pearl didn't like people writing C-stubs for the language.
1297360	1299360	That was, no, it's a shell scripting language.
1299360	1301360	We're not going to add support for C-stubbing to the language.
1301360	1302360	It has it.
1302360	1303360	It has it.
1303360	1305360	But it was like, we're not going to really focus on that.
1305360	1306360	That's not our goal here.
1306360	1310360	Our goal is to maintain a decent shell scripting language.
1310360	1316360	As soon as you start, as soon as you have to add a dependency to something from C-pan in your Pearl code, you've failed.
1316360	1317360	It's my opinion.
1317360	1320360	In my opinion, you're no longer using Pearl for what it was intended to be.
1320360	1323360	Just a present shell script that gets a lot of stuff done.
1323360	1329360	That's better than Bash and Z-shell and Fish and all the other shells for writing really great, fast code.
1329360	1336360	And the performance of Pearl is way better because your average Bash code that would be, you know, 100 lines, 200 lines long,
1336360	1342360	is probably got at least half dozen, two dozen, three dozen sub-shells in there to get stuff done.
1342360	1345360	Even more if you don't know what you're doing and you're using a lot of set and awk.
1345360	1350360	In that case, you might as well just write one Pearl script, which is one sub-shell.
1350360	1357360	And all that performance goes away and it's actually faster, even though it might take a little bit more memory for it to run.
1357360	1360360	It still runs just as fast.
1360360	1363360	So that's the case where you wouldn't want to use Pearl.
1363360	1368360	You definitely don't want to use Pearl for large-scale enterprise applications.
1368360	1370360	It was never intended for that.
1370360	1371360	Don't do that.
1371360	1373360	It's a bad idea.
1373360	1383360	And for that, I personally think Go is the best thing for that because you can tell that Go is highly influenced by Pearl on many levels.
1383360	1388360	But, you know, grab a more verbose, strictly-type language.
1388360	1394360	I mean, the whole world has realized that interpreter languages are not the thing to go to for large-scale development.
1394360	1398360	Microservices, the whole cloud-native world is all Go right now.
1398360	1399360	All of it.
1399360	1401360	This is just stating facts for people.
1401360	1402360	This is an opinion.
1402360	1404360	This is a fact.
1404360	1415360	Go was developed for cloud-native development, wherever you want to call that, at Google, specifically for those reasons, with strong concurrency before anyone was thinking about it, because Google needed it.
1415360	1422360	And now we've all benefited from that and Go has become the overwhelming industry standard for cloud-native development, period.
1422360	1424360	And that's not even up for debate.
1424360	1427360	I mean, you can confirm that all over the place.
1427360	1429360	I don't need to tell you that.
1429360	1432360	So don't use Pearl for the wrong thing, but do use Pearl for the right thing.
1432360	1433360	What is Pearl's right thing?
1433360	1436360	Pearl is the right thing whenever there's a lot of text involved.
1436360	1447360	Or whenever you're pushing the limit of that little shell script that you wrote, whether it's ZShell or Bash or TCShell or whatever, you know, if you're starting to push the boundary a little bit.
1447360	1454360	And particularly if you're a little bit afraid of that POSIX glob in your shell, you don't want it to work.
1454360	1458360	This is another thing about Pearl that people don't really give it credit for.
1458360	1461360	Pearl is a very, very safe language to write in.
1461360	1466360	It's probably one of the safest, and that was largely because of all the stuff that was happening with the web.
1466360	1469360	Anybody know about dash T, capital T?
1474360	1479360	Okay, so you were slamming on Pearl, but you've never used the dash capital T switch ever?
1479360	1480360	You don't know what it is?
1480360	1482360	Okay, let me help you understand that.
1482360	1487360	Dash capital T turns on taint checking.
1487360	1492360	And there is no language on planet Earth that does this, and they should.
1492360	1498360	Taint checking is one of the best things you will ever add to a language.
1498360	1510360	Taint checking automatically says any input, whether it be an environment variable, standard input, or any other file handle, is automatically tainted.
1510360	1519360	And the only way it gets untainted is if you explicitly write code that checks the data coming in in some way.
1519360	1523360	Generally speaking, match it against the regular expression, or you explicitly set the path.
1523360	1530360	When you turn taint checking on, one of the reasons people turn it off immediately is because it forces you to set the path in the script,
1530360	1533360	which means that you can't trust the path of the system.
1533360	1535360	You have to explicitly set the path.
1535360	1541360	Because the people who made Pearl and added taint checking were fundamentally interested in security.
1541360	1543360	You don't see that in Python.
1543360	1546360	You don't see that in many other languages, even Rust.
1546360	1548360	Rust is supposed to be a secure language.
1548360	1551360	Well, I don't see anything about tainting in there.
1551360	1556360	There's a lot about managing memory and borrowing and stuff like that from what I know.
1556360	1561360	I'm not going to say I'm a Rust expert, of course, but I don't see anything that's doing that.
1561360	1564360	And I really wish more languages would do it, and Pearl is really good at that.
1564360	1571360	And by the way, if you're writing a shell, one of the dangers of shell scripting is if your shell script gets adopted as something that gets installed everywhere,
1571360	1573360	you might want to add those kind of things.
1573360	1581360	But at that point, you probably should move it to another language like Go, or C Sharp, or Java, or whatever, or even Rust.
1581360	1584360	But again, Rust is a systems engineering language.
1584360	1589360	It's a C++ replacement.
1589360	1592360	I don't want to get into the language where I know.
1592360	1594360	So let's just recap here.
1594360	1597360	So good reason to use Pearl in 2021.
1597360	1602360	So it's old, but it's still very useful, like Linux.
1602360	1604360	Old, very useful.
1604360	1606360	Still getting improved upon, still increased.
1606360	1608360	Just forget Pearl 6 ever existed.
1608360	1610360	All the rest of us have.
1610360	1613360	It's got the industry standard for regular expression.
1613360	1619360	It includes Unicode support, which supports matching Chinese characters as well as emojis and everything else.
1619360	1621360	And others don't.
1621360	1623360	Other languages don't.
1623360	1629360	It's on every system, every Unix or Linux system created in the last 30 years.
1629360	1634360	I mean, you can go back to Pearl 4, and if you don't push the boundaries, you know, if you don't need Unicode and stuff like that,
1634360	1642360	you can find Pearl 4 on systems that go all the way back to this, you know, late, I'd say, the very early 80s, probably 86, right?
1642360	1645360	So, you know, it's going to be on everything.
1645360	1651360	You have a good, just a good chance of finding Pearl on things as you will finding Auk.
1651360	1653360	Except BSD.
1653360	1655360	BSD went to great lengths to rip it out.
1655360	1660360	And I think that was a really stupid decision, but that's their decision.
1660360	1668360	It has, it creates a single powerful sub-process instead of lots and lots and lots of sub-processes like you would use in any other shell scripting.
1668360	1673360	I think it's got one of the most brilliant developer teams ever to have lived.
1673360	1678360	I have never been burned by Pearl, and I wrote a list of all the things that have burned me over the years,
1678360	1681360	and Pearl was always there to have my back.
1681360	1683360	PHP, Bad Memory Lakes burned me.
1683360	1685360	Java, serious JVM bug.
1685360	1693360	They had to fly a guy in from Sun Microsystems so I could prove that, you know, our Nike software wasn't going to make the deadline
1693360	1700360	because of this stupid JVM bug to which the guy said, oh, and I just felt very validated and pissed off at the same time.
1700360	1701360	Pearl had my back.
1701360	1702360	It worked out every time.
1702360	1705360	Every single time something else has failed, and especially because I know Pearl,
1705360	1708360	it's because it has rock solid development.
1708360	1714360	It has never had a stop you in your tracks bug that I've encountered.
1714360	1716360	It may have had them, but I just didn't ever encounter them.
1716360	1717360	PHP had them.
1717360	1720360	JVM, Java's had them.
1720360	1723360	You know, Go hasn't had them in any so far, too.
1723360	1725360	So far, Go hasn't had any.
1725360	1730360	The only thing that stopped me with Go that I would consider a bug, a big one,
1730360	1737360	is that Go routines, if you're not careful with them, they'll leak.
1737360	1739360	That's not a bug, though.
1739360	1747360	Pearl provides the ability to write the most powerful one-liners in the world.
1748360	1755360	I have an alias called Pi, Pearl-P-I-S-E, which will recursively find and replace a keyword in everything.
1755360	1760360	Said some years, almost like five or six years after Pearl had ever had this,
1760360	1764360	added said-I in the Linux version, which does essentially the same thing.
1764360	1767360	The difference is, is it said has a completely different set of regular expressions.
1767360	1771360	It doesn't use the same PCRE standard, which is really confusing.
1771360	1772360	So might not go with that.
1772360	1775360	There is a replacement for that these days called, just read about SD.
1775360	1782360	It's not in any of the app package kind of things, which actually replaces with the Pearl expression,
1782360	1784360	so you can use it for said that way.
1784360	1788360	A lot of the new utilities are getting replaced.
1788360	1793360	Pearl is dense, hard to read, contextual, and implicit, but it does it on purpose,
1793360	1795360	so it'll be more powerful.
1795360	1796360	Pearl's not going anywhere.
1796360	1799360	Sorry, people are not taking it off of stuff.
1799360	1802360	In fact, if anything, I think Pearl's going to increase in usage as we go forward,
1802360	1805360	because the world is turning to conversational things.
1805360	1810360	The terminal is becoming important again.
1810360	1816360	People are learning that manipulating text and parsing conversational text and grammars,
1816360	1820360	and things like that are important, and Pearl's going to be right there to do that.
1820360	1825360	Python will do it, but it's just you have to, first of all, you have to install Python.
1825360	1828360	Secondly, you have to make sure you have the right version of Python,
1828360	1832360	and the answer to that that everyone tells me is, well, you should run a Python virtual environment.
1832360	1839360	I'm not running a Python virtual environment to run what is a glorified shell script.
1839360	1841360	Python is good for those applications.
1841360	1843360	It's horrible as a shell scripting language.
1843360	1844360	It's horrible.
1844360	1846360	Have you ever tried to do one-liners in Python?
1846360	1847360	They're so horrible.
1847360	1851360	I hate them.
1851360	1853360	It's still the best language where text is concerned.
1853360	1857360	It has a pack and map and grip.
1857360	1862360	The safest shell scripting possible, way safer than Python,
1862360	1864360	and it has syntax similar to shell.
1864360	1866360	That's actually something people don't like.
1866360	1870360	At first, they complain about it being kind of weird and cryptic and looking weird,
1870360	1876360	but that's because it's designed to feel like you're coding in sort of POSIX or Bash or ZShell
1876360	1879360	with some extra power.
1879360	1884360	So $0 is a special variable name for the current running script.
1884360	1887360	Well, that's the same thing you would use if you were writing shell code.
1887360	1891360	So that kind of weirdness in the variable naming and stuff like that, that's not Perl's fault.
1891360	1895360	That's because it feels like you're writing shell code.
1895360	1901360	So Perl is the natural progression from writing Bash or ZShell or Shell.
1901360	1904360	And actually, if you're a ZShell advocate, you guys know I don't like ZShell.
1904360	1906360	I play and complain about it all the time.
1906360	1912360	But if you are a ZShell or a POSIX person, then Perl is a really great companion for you
1912360	1917360	because Perl does all of the things that those languages can't do.
1917360	1922360	Bash can step into that Perl space way more than ZShell can,
1922360	1926360	particularly with exported functions and things, and full regular expression support.
1926360	1928360	Actually, ZShell has regular expression support.
1928360	1929360	We saw that.
1929360	1936360	The regular expression support in Bash and in ZShell appears to be the same exact regular expression support that you see in Perl.
1936360	1939360	So I'm able to reuse those kind of things.
1939360	1947360	And by the way, the use of associative arrays, which are otherwise known as hashes or dictionaries in Python,
1947360	1951360	you have to have Bash 4.2 or higher to get that.
1951360	1955360	ZShell doesn't have it, of course, and neither do the POSIX shell scripts.
1955360	1958360	But Perl has gobs of that in droves.
1958360	1963360	It's this very advanced support for references and all of that stuff.
1963360	1967360	So you can do some of those advanced techniques where you're dereferencing
1967360	1972360	and you can actually directly manipulate the symbol table, which I did to create Perl Classes Pragma,
1972360	1976360	which at the time it made sense.
1976360	1982360	It was sort of an effort to bring some of the better parts of object-driven programming for Ruby into Perl.
1982360	1983360	You can look at that.
1983360	1987360	It's called Perl Classes Pragma in my GitHub if you want to see it.
1987360	1988360	But it shows what you can do.
1988360	1991360	You can actually directly manipulate the symbol table in Perl.
1991360	1999360	That's the kind of stuff that in Python, you can get down into the underlying stuff,
1999360	2001360	which by the way, almost all objects in Python are dictionaries.
2001360	2003360	And it turns out it's benchmarked.
2003360	2008360	It's actually faster to deal with the internal dictionaries
2008360	2020360	than it is to use objects as small objects as if they were rather than hash maps.
2020360	2025360	Anyway, so it can take you to where you need to be, but not further.
2025360	2028360	And if you try to take it further than that, you're doing it wrong.
2028360	2032360	At that point, it's probably time to grab another language.
2032360	2035360	And one of those other languages would be Python.
2035360	2041360	Python is definitely suited for a larger application sort of approach.
2041360	2043360	So let's type script.
2043360	2049360	So as I imagine Dino is going to be more of that kind of thing, but definitely go in that space.
2049360	2051360	Those are meant for larger applications.
2051360	2054360	C Sharp and the Java, all the traditional OOP things.
2054360	2057360	And C++, but if you're going to do, that's a different thing altogether.
2057360	2061360	As soon as you're headed to C++ and Rust, you're looking for performance and, you know,
2061360	2063360	C and optimization, something like that.
2063360	2066360	And all different languages for different purposes.
2066360	2071360	But to date, Perl remains the best language where regular expressions are concerned
2071360	2075360	and where any text manipulation or command line is concerned.
2075360	2079360	Basically, when your shell starts to get a little complicated,
2079360	2081360	time to pick up some Perl and just use it.
2081360	2083360	Use the Perl on your system.
2083360	2084360	You don't have to get crazy.
2084360	2086360	All right, that's all about it here.
2086360	2090360	I'm going to actually, technically, I'll be closing the video at this point.
2090360	2095360	I'm going to take some questions from the chat and try to keep my cool here.
2095360	2097360	I'm just going to tell you right out.
2097360	2101360	I have had in the past very little patience for people,
2101360	2105360	as I kind of started out with, people who attack Perl who don't know it
2105360	2108360	and have never used it.
2108360	2111360	And I try my hardest to not be that person.
2111360	2117360	You should at least have tried it at a minimal level in order to get at least your basic
2117360	2119360	bearings on it before you don't like it.
2119360	2122360	And that's my opinion.
2122360	2125360	So, I mean, obviously, this is all opinionated stuff.
2125360	2129360	I'm going to bring up the whole chat here.
2130360	2134360	And I don't know.
2134360	2135360	I'll put you guys down here.
2135360	2139360	I'll go back up and go back to the earlier pages.
2139360	2141360	Windows is boomer.
2141360	2143360	I fecal.
2143360	2144360	It's background.
2144360	2146360	Community and Perl could be there.
2146360	2147360	Could there be a better combo?
2147360	2150360	Hi all.
2150360	2151360	Let's see.
2151360	2152360	Hello.
2152360	2153360	Perl is my Swiss Army chainsaw.
2153360	2154360	I went back anymore.
2154360	2156360	I like that term.
2156360	2158360	I heard that term yesterday again.
2158360	2159360	This was my Swiss Army macro.
2159360	2161360	This was my Swiss Army chainsaw.
2161360	2162360	How are you doing today?
2162360	2163360	I'm pretty good.
2163360	2164360	Hey, Norman.
2164360	2166360	It's good to see you the other day, too.
2166360	2167360	He doesn't read Twitch chat.
2167360	2170360	I do now, Flame, because I can see Twitch chat now.
2170360	2172360	So, thank you for having my back there.
2172360	2174360	But, yeah, you want to chat live.
2174360	2176360	I don't need to go to blah, blah, blah.
2176360	2177360	Oh, yesterday he was reading.
2177360	2180360	So, I thought, yep, Norman, we have a bridge now.
2180360	2182360	All messages from Twitch are Mirage IRC now.
2182360	2183360	Thanks.
2183360	2186360	Yeah, by the way, let me credit to Vera to be Vera for that.
2186360	2188360	My IRC admin has been doing great.
2188360	2190360	I really appreciate that.
2190360	2193360	User Perl, wow, that's new.
2193360	2196360	Yeah, it was new within the last three days.
2196360	2201360	So, we move kind of faster, particularly with the people I have helping me out.
2201360	2202360	Hello, sir.
2202360	2204360	Just discovered your channel and great.
2204360	2207360	They're also great, bite-sized articles.
2207360	2209360	I learned a lot from back in the day.
2209360	2211360	Yeah, articles and magazines from Merlin.
2211360	2214360	Yeah, actually, Merlin used to live in the same town as me.
2214360	2217360	When I was in Portland, yeah, Randall.
2217360	2220360	I was there when Randall was convicted of hacking.
2220360	2223360	And we had the Save Randall campaign and all of that stuff.
2223360	2228360	In fact, Randall, if you happen to watch this all the best, you know,
2228360	2230360	I know you probably don't remember me.
2230360	2237360	I remember one time in the middle of the day, Randall Schwartz and I and Lynn Soprell,
2237360	2240360	the web mistress from Teleport Internet Services,
2240360	2242360	we went and grabbed a drink.
2242360	2245360	And I remember just shooting the breeze.
2245360	2247360	I don't even remember what we were talking about.
2247360	2249360	He was a really nice guy.
2249360	2252360	And I remember all the hassle he had to go through.
2252360	2254360	He's the one who wrote Learning Pearl.
2254360	2256360	He's something of a God in the Pearl community.
2256360	2260360	He invented the Schwartzian transformation and a bunch of other optimizations for Pearl
2260360	2263360	that, quite frankly, should have been unnecessary.
2263360	2268360	As I said, Pearl was pushed to do things it was never intended to do.
2268360	2273360	And the fact that it did them and kept on going
2273360	2278360	is just a testament to how great this shell scripting language is.
2278360	2279360	Okay?
2279360	2281360	Let's just remember that that's what it is.
2281360	2282360	It's a shell scripting language.
2282360	2285360	It's not anything more, so don't use it for that.
2285360	2286360	And you'll be fine.
2286360	2289360	In fact, you'll be happy, particularly if you're in cybersecurity.
2289360	2294360	And if I was in security, I'd be all over this thing.
2294360	2296360	Thanks for a great talk this morning.
2296360	2297360	Yeah.
2297360	2299360	You know, problem.
2299360	2300360	Hi, everybody.
2300360	2301360	Hi, Rob.
2301360	2302360	This is...
2302360	2304360	Oh, hi, Kitty.
2304360	2306360	Yesh's mood and I see...
2306360	2307360	Hi, everybody.
2307360	2309360	Rob is in the yesterday's mood as I see.
2309360	2311360	I'm not even sure what Pearl is.
2311360	2313360	And I've just started learning how to navigate the terminal.
2313360	2315360	That's nice, Mark.
2315360	2319360	Pearl is basically a more powerful version of Bash.
2319360	2320360	I'm going to get shot.
2320360	2322360	Bash, awk and said all combined.
2322360	2324360	Those are all tools that you use on the command line.
2324360	2328360	Bash is the language that the interpreter that you use every time you execute a command
2328360	2331360	in an analytics system by default.
2331360	2333360	And so Pearl is...
2333360	2336360	You can write scripts in that language in the same language that you run,
2336360	2338360	you're interactive terminal.
2338360	2341360	You can write things that just happen when you run them,
2341360	2343360	you know, and that's what makes the terminal so powerful.
2343360	2347360	But at some point, you're going to want to reach for a little bit more power,
2347360	2349360	particularly when you're dealing with stuff with text.
2349360	2352360	And then when that time comes, that's what Pearl is there to help you with.
2352360	2353360	And that's normal in the past.
2353360	2355360	You would reach for said and awk and TR and stuff.
2355360	2359360	So these days, that's what Pearl is there to help you with.
2359360	2361360	Pearl's a women wisdom.
2361360	2362360	Did I say women?
2362360	2363360	I did.
2363360	2364360	I know.
2364360	2366360	I can't remember the soundly defunct London Pearl Mangers Group.
2366360	2367360	I know.
2367360	2370360	I was all over the Pearl Mangers Groups too.
2370360	2371360	I loved them.
2371360	2377360	I gave lots of conversations and presentations and all that stuff.
2377360	2381360	This has inspired me to learn to Pearl.
2381360	2385360	I still use Pearl all the time for interacting with network kits and APIs.
2385360	2386360	There you go.
2386360	2387360	See what I'm saying?
2387360	2394360	And this is something too, is people like Cypheric, do not speak up.
2394360	2395360	You don't.
2395360	2399360	The people who are using Pearl aren't just old cronies like me, you know,
2399360	2402360	curmudgeons in me, pearl curmudgeons, like we used to call them.
2402360	2403360	They're not.
2403360	2409360	There are people who have discovered the use of Pearl as a network integration layer,
2409360	2413360	as the duct tape of the internet, that was once called.
2413360	2415360	Because that's what it's good at doing.
2415360	2417360	Pearl is fantastic duct tape.
2417360	2421360	It's like really great and making a whole bunch of stuff work interactive together.
2421360	2423360	So you can have executables and you can call those executables.
2423360	2425360	I do that in the KN tool.
2425360	2427360	You can parse network input.
2427360	2430360	It has a really great TCP IP stack so we can go talk to it.
2430360	2431360	Try that with awk.
2431360	2432360	Can't do it.
2432360	2435360	Python has it, but it gets like which version, right?
2435360	2437360	And it's not going to be on the system by default.
2437360	2441360	So, yeah, will Pearl integrate with Vim as well as Bash?
2441360	2442360	Absolutely.
2442360	2443360	You know why?
2443360	2444360	Because Pearl can be any...
2444360	2446360	Look, so Fecal, let me...
2446360	2448360	I want to make something clear here.
2448360	2452360	Anything that can be executed can be integrated into Shell.
2452360	2453360	Okay.
2453360	2454360	So if you use the...
2454360	2458360	And if you watch me do the KN development, which I'm going to do later,
2458360	2462360	the script that can run can be integrated into Vim, right?
2462360	2464360	Now, this is actually...
2464360	2469360	If Pearl and Vim has integrated support so you can actually code Vim script in Pearl,
2469360	2472360	the new Vim people ripped it out.
2472360	2475360	Another reason new Vim is totally stupid.
2475360	2477360	I mean, they've made so many...
2477360	2486360	I mean, why would you rip out the world's best text manipulation language from the world's best editor?
2486360	2490360	I mean, what kind of stupidity do you have to have in your head
2490360	2493360	to disassociate Pearl from new Vim?
2493360	2497360	That decision by itself, when I saw that, I was like,
2497360	2502360	okay, you've just proved you have absolutely no idea what you're doing to me.
2502360	2504360	That's a project.
2504360	2508360	Anything that braves appropriately with stead instead of what works with Pearl.
2508360	2509360	That's right.
2509360	2511360	And that's really the shell.
2511360	2515360	When I say shell integration, what I really mean is anything that can be run from the shell.
2515360	2516360	And that includes Pearl.
2516360	2517360	So let's try something here.
2517360	2519360	I want to show you what I mean by that.
2519360	2525360	So if I'm just doing a foo, I can write a markdown file, right?
2525360	2535360	I can just say, I put my title up here, something in the title.
2535360	2541360	And then over here, I'm going to say, I can actually write some Pearl code.
2541360	2545360	And I can say, well, let's see.
2545360	2551360	Something simple.
2551360	2555360	I mean, I'm used to writing Bash so much because Bash is so easy to integrate.
2555360	2557360	You could do four.
2557360	2566360	I mean, there's not very many reasons that I would write Pearl in line to do this kind of thing.
2566360	2568360	But I guess I could.
2569360	2570360	I know.
2570360	2572360	I just can't think of any reason that you would do.
2572360	2573360	Oh, maybe a pack.
2573360	2575360	Let me see if I can think of a pack.
2575360	2577360	I'll do one for you, Fico.
2577360	2578360	I'll make a video on that.
2578360	2583360	So one example would be if you had to bring in some binary data.
2583360	2586360	You know what I mean?
2586360	2588360	But Pearl isn't very good for writing one-liners.
2588360	2592360	For that kind of thing, I'm big into shell.
2592360	2599360	For I in 0, like 34, I do echo I done.
2599360	2604360	And most of the time when I'm writing one-liners, I'm writing in Bash and I will continue to do so.
2604360	2607360	Pearl steps in when I need to make a script.
2607360	2608360	You know what I mean?
2608360	2609360	Like when I need to make a script.
2609360	2615360	But if I'm writing one-liners, yeah, that is your friend.
2615360	2619360	But so much of that is already done in Bash.
2619360	2624360	So I would be, you know, I'd be sort of hesitant to do that.
2624360	2626360	So, okay, so let me show you how to do this.
2626360	2628360	This is some Bash code in the middle of my thing.
2628360	2632360	And let's say I want to write, you know, number, I want to number a bunch of stuff.
2632360	2638360	So some, and then I can just run this code.
2638360	2644360	Old Codgers, Git team, yeah.
2645360	2646360	Yeah.
2646360	2651360	Yeah, they're, the Git team, I think the Git team has some pearls still left in it.
2651360	2653360	That's what people were complaining about actually.
2653360	2658360	So I can run this through Bash and then that'll just replace it.
2658360	2660360	It'll put the zero in there even if I want.
2660360	2668360	So I got to, so for that kind of thing, I would stick with Bash just because it's so easy to do.
2668360	2674360	But when you want to use pearls, when you want to start to write a script like I've done with the KN tool.
2674360	2678360	So this is the KN tool that has to look through the environment.
2678360	2683360	And it has, another thing too is it has the data dumpers and things like that are standard.
2683360	2690360	So you can like dump your structures and get, you know, do that kind of stuff in Bash is really, really painful.
2690360	2691360	I mean, it's really painful.
2691360	2695360	You've got to know, like, I just, it's just crazy.
2695360	2700360	I got into it there at the little bit at the end and then I came back to Pearl and I was like, oh my God, this is so much easier.
2700360	2705360	But the thing that's important to consider is that the subroutines are like shell subroutines.
2705360	2710360	In other words, you don't pass, you know, define an argument signature, you just shift stuff off.
2710360	2712360	It's, you're coding in shell is what it is.
2712360	2718360	And once again, if you take nothing more away from this, Pearl is a shell scripting language.
2718360	2719360	That's what it is.
2719360	2724360	It's not meant to be, you know, you don't, you can't run a Pearl interactive shell.
2724360	2728360	But it's meant to be a shell scripting language like the next level up.
2728360	2730360	So here's how you do a dictionary.
2730360	2736360	This is actually, this actually is taking a reference to the function so that I can run the function later.
2736360	2739360	Here, this is a good example of a map.
2739360	2746360	So this, this takes, this takes every file inside of this directory through Glob expansion.
2746360	2751360	Maps every one of those files replacing everything up to the slash with nothing.
2751360	2754360	So it's basically trimming off the stuff except for the name.
2754360	2758360	And then it, it returns the name by just, that's the current value through the loop.
2758360	2760360	And then that thing gets returned.
2760360	2762360	So all of that returns as an array.
2762360	2766360	And then it loops through the array and it joins them all and makes it will pass for the whole thing.
2766360	2769360	So that looks pretty dense.
2769360	2775360	And it is dense, but it's also very, very, very powerful.
2775360	2778360	I mean, if I were to write that in Python, I don't know how many lines that would be.
2778360	2784360	That would, you know, so.
2784360	2789360	Actually, for Pearl, I recommend you do install Pearl docs and just use the man pages.
2789360	2793360	Something else I didn't even mention is how great the man pages are.
2793360	2796360	You gotta remember, Pearl existed before the internet existed.
2796360	2798360	So it's documentation.
2798360	2801360	You can go Pearl intro, man, Pearl intro.
2801360	2806360	This is the best source of information on Pearl you'll ever find.
2806360	2807360	I'm telling you.
2807360	2809360	And they even have user-bin ENV.
2809360	2810360	I hate this.
2810360	2812360	I do not like user-bin ENV.
2812360	2814360	I do not recommend you do that.
2814360	2815360	It's unnecessary.
2815360	2817360	So it's also insecure, even though they suggest it.
2817360	2822360	But my point is, is that you can go read anything you might want to ever read about here,
2822360	2826360	just by reading through the documents that come with it.
2826360	2830360	So the man pages on Pearl are what I would recommend for free.
2830360	2834360	There's, you know, the good old learning Pearl from Randall Schwartz.
2834360	2837360	It's probably, I don't know if it's been updated recently.
2837360	2839360	The thing about Pearl is it's been around.
2839360	2842360	It hasn't really changed in 15 years.
2842360	2846360	I mean, they've added support for a command called say, which I really love.
2846360	2854360	I mean, actually, I found out, by the way, if you are a Pearl person, this might be of interest to you.
2854360	2859360	If you are a Pearl person, you need at least 5.10 to use say instead of print.
2859360	2863360	But that'll save you that annoying backslash and at the end of everything.
2863360	2866360	And if you've done any Pearl coding at all, you know what I'm talking about.
2866360	2868360	Super annoying, right?
2868360	2870360	You have to put backslash and on the end of everything.
2870360	2872360	And if you're a shell scrapper, it's super annoying.
2872360	2879360	So if you use at least version 5.10 or above, I also did the research and found out that 5.14.
2879360	2883360	5.14 is the first version that supports Unicode backslash P.
2883360	2888360	And they're at now at Pearl 5.30.
2888360	2893360	And there's no intention of ceasing support for Pearl 5 ever in the future.
2893360	2896360	So they're continuing to maintain it.
2896360	2900360	The Pearl Cookbook is, yeah, I love the Pearl Cookbook.
2900360	2906360	It's funny, I actually, when I gave it to Pearl some years ago for Python and some other things, I got rid of all my books.
2906360	2909360	I had, I have like, Pearl testing.
2909360	2913360	I used to be on pretty good terms with most of the book authors.
2913360	2915360	It's been forever.
2915360	2917360	It's been forever.
2917360	2919360	I mean, I was really in the Pearl community.
2919360	2923360	But I, you know, and then I kind of moved on.
2923360	2927360	And it was funny because a lot of the people in the Pearl community, many of them have never left.
2927360	2930360	There's still all they do every day all day is Pearl.
2930360	2933360	I'm like, guys, there's a lot of other stuff out there now.
2933360	2936360	You know, just give it a hard time.
2936360	2938360	But environment variables are the same.
2938360	2942360	I don't know if you can notice this, but you see how things look a lot similar to Shell, right?
2942360	2945360	This is a file spec is a standard library for joining.
2945360	2949360	So you can do it in a, you know, in a standard way.
2949360	2953360	If it looks a little bit like, you know, I also find interesting.
2953360	2955360	Doesn't this look a little bit like Rust?
2955360	2957360	It does, doesn't it?
2957360	2960360	In fact, there's remarkable similarities between Pearl syntax and Rust syntax.
2960360	2962360	I think I find always find interesting.
2962360	2968360	You can sometimes run into a Rust person that will slam Pearl for being right only or read only because the syntax is so bad.
2968360	2975360	Meanwhile, they're on syntax.
2975360	2978360	That's not, I mean, I'm going to say it again.
2978360	2989360	Since I had, I just moderated like 80 comments on my 48,000 hit Rust is slow and I changed the title and everything to try to get people to leave me alone.
2989360	2991360	Over that thing.
2991360	2996360	But no one watches the end 14% of the people only 14% of the people watch.
2996360	2999360	They only watch the first like 20 minutes of that Rust video.
2999360	3001360	They don't see any of my conclusions at the end.
3001360	3003360	They just see the first stuff and then they go off.
3003360	3005360	Most of them don't even watch the video.
3005360	3011360	So I had to be careful by making this video and try to be more specific about it.
3011360	3015360	I'm going to go ahead and drop the stream here pretty soon and restart the stream.
3015360	3019360	I have a little coffee with my wife and I'll come back.
3019360	3021360	I'll be coding in Pearl all day today and tomorrow.
3021360	3024360	In fact, I'm going to be coding in Pearl a lot over the next few days.
3024360	3032360	Most of my shell script library in my .files is going to be converted to Pearl sub commands of the KN tool.
3032360	3040360	And the rest of them are probably going to, I'm going to rewrite them in either POSIX and dash or a few will remain as bash.
3040360	3044360	But I'm personally going to start writing everything.
3044360	3048360	All my shell scripts will either be in POSIX, Shell or Pearl.
3048360	3054360	And to the ZShell people out there, that's probably going to be music to your ears because everything I write, you'll be able to use.
3054360	3056360	You could use the bash stuff anyway, right?
3056360	3060360	Because it's got a shebang line that points to bash and your system probably has bash on it even if it has ZShell.
3060360	3064360	Not if you have a Mac though, but there's a good bet that you have Pearl on it.
3064360	3068360	So say, for example, you're a Mac user and you want to use any of the stuff that I write.
3068360	3077360	You'll be able to use it because it'll either be in POSIX Shell, which is ZShell compatible, or it'll be in Pearl.
3077360	3080360	And you already got Pearl in your system usually.
3080360	3086360	In fact, anybody got a Mac handy right now, they can just go on their terminal and do which Pearl or do pearl dash version.
3086360	3091360	Anybody have a Mac out there and want to admit it?
3091360	3094360	I would love to see what version Mac comes with.
3094360	3100360	It might not come with it though, but Pearl Artistic License is completely different than GPL3.
3100360	3105360	So I think it has a good shot of still staying on the system, maybe not though.
3105360	3108360	5.32, seriously, on your Mac?
3108360	3110360	Wow, I'm impressed.
3110360	3113360	So there's another reason to use it.
3113360	3122360	Yeah, so I'm going to, I mean, another reason to write your shell scripts is if you write your shell scripts in bash, default Mac users won't be able to run your shell script.
3122360	3124360	Because bash has to be installed.
3124360	3126360	They can run your pearl script.
3126360	3128360	We just proved it.
3128360	3131360	They can run your POSIX Shell scripts.
3131360	3145360	So if you're searching for usability across the board for your team and for your friends, or if you're a live streamer who wants to be able to share cool things with people, you know, it kind of behooves you to write it either in POSIX Shell.
3145360	3151360	And interestingly, that's the position I had in 2007.
3151360	3154360	Or Python, but Python has to be installed, right?
3154360	3157360	So yeah, there are slight differences with Active Pearl, Strawberry Pearl.
3157360	3159360	Yeah, especially using different modules.
3159360	3162360	Yeah, I don't, but none of those need to be installed.
3162360	3164360	Yeah, yep.
3164360	3166360	Good old Active Pearl, Strawberry Pearl.
3166360	3168360	Anybody ever play with Indigo Pearl?
3168360	3172360	That's how I used to, I got Indigo Pearl.
3172360	3174360	I'm not a Pearl 7 or a Pearl 6 fan.
3174360	3176360	I will only use the Pearl that comes on the system.
3176360	3181360	The very purpose of Pearl is to have a shell script that's on everything that just works.
3181360	3183360	And that's Pearl 5.
3183360	3185360	And that's never going to be Pearl 6 or 7.
3185360	3190360	If you're reaching for Pearl 6 or 7, then you're making a different decision.
3190360	3191360	You know what I'm saying?
3191360	3197360	You're now making a decision about kind of a different scope of application.
3197360	3200360	And at that point, you've got lots of things to evaluate, right?
3200360	3202360	You've got to see, is this better than TypeScript?
3202360	3207360	Is this better than Go or Rust if it's like low level?
3207360	3211360	I am never going to code any Pearl other than Pearl 5.
3211360	3215360	Because I want, I just want the shell script.
3215360	3216360	That's what Pearl was intended to be.
3216360	3218360	That's the best thing it ever was.
3218360	3221360	And the fact that it keeps getting pushed to be more, I think is a mistake.
3221360	3223360	I apologize, Pearl people out there.
3223360	3227360	I know some of you are very hard working and they tried really hard with Pearl 6.
3227360	3238360	But Pearl 6 is a perfect example of what Brian Cantrell, formerly a joint now from Oxide Computing, calls Second System Syndrome.
3238360	3246360	It's when you open up the gates because you're going to make a new thing and all of a sudden it never gets done all of a sudden.
3246360	3252360	Because so many new ideas come in and they overweigh the thing so it never gets done.
3252360	3254360	Because you just keep trying to do it.
3254360	3261360	So I think all of the Pearl versions beyond Pearl 5 suffer from Second System Syndrome.
3261360	3263360	And they frankly, they open the door for Python.
3263360	3267360	I would easily pick Python over Pearl 6 or 7 any day.
3267360	3272360	Just based on the TensorFlow support and all its wide adoption and Jupyter notebooks.
3272360	3278360	And I mean, I know those things can be done in Pearl 2, but there are so many reasons to stick with Python for that stuff.
3278360	3283360	And automation, all of that stuff.
3283360	3286360	Pearl 5 after 4, yeah, completely fair.
3286360	3287360	That's a fair critique.
3287360	3288360	Yep.
3288360	3289360	Yeah.
3289360	3290360	Yeah, finding talk.
3290360	3291360	I'm off.
3291360	3292360	Take care Q-Macro.
3292360	3293360	I completely agree.
3293360	3298360	A lot of people don't know this, but Pearl 4 didn't have this notation at all.
3298360	3301360	This reference notation right here.
3301360	3303360	See this file spec stuff like this?
3303360	3305360	That was all of Pearl 5 edition.
3305360	3307360	Yeah, the split between Pearl 4 and 5.
3307360	3310360	Pearl 4 was really, really just a better awk.
3310360	3314360	And you didn't have this idea of objects at all and bless.
3314360	3316360	I don't even want to talk to you about stuff.
3316360	3317360	That stuff.
3317360	3319360	In fact, I would suggest you not even use it.
3319360	3321360	I really, I think as best as possible.
3321360	3330360	I do hear because I'm doing a join, but for the most part, I would rather you try to stick with Pearl 4 syntax as much as you can and keep it functional.
3330360	3336360	And if you get too much into the pro object oriented world, which you can totally do with the thing called bless.
3336360	3338360	Python does the same thing as bless, by the way.
3338360	3340360	They just don't call it that.
3340360	3344360	Then you're kind of going off the deep end at that point.
3344360	3351360	If you're reaching for bless or for some way to make an object, you're probably doing it in the wrong language.
3351360	3356360	And you probably want to rethink your selection of Pearl for that and move to something else.
3356360	3359360	And keep Pearl as a glorified shell language.
3359360	3362360	And then you'll be fine because that's what it's really, really great at doing.
3362360	3365360	So anyway, yeah.
3365360	3368360	So any other questions?
3368360	3370360	Let me talk to the YouTube people for a second.
3370360	3379360	Oh, here, by the way, here is the regular expression I want to see if people can test in their own languages and see their preferred languages and see if they can match it.
3379360	3381360	So we have a match.
3381360	3391360	This matches any uppercase letter character according to the Unicode classification, which includes several letters that are not in the code play.
3391360	3394360	If you're interested in this, by the way, this stuff is all in the pagan notation.
3394360	3404360	If you go to getup.com slash pagan and you click on spec and then classes in there, you'll see all of these planes subdivided out by their exact character names.
3404360	3407360	And so you can decide if the match is actually working.
3407360	3415360	We did that because we built it into the specification, into the parsing expression grammar notation, into the specification for that.
3415360	3416360	No more talking about that, though.
3416360	3418360	If you want to know about that, we do that on Fridays.
3418360	3425360	We work on the pagan grammar notation, meta language, and writing all of that stuff up, which is really fun.
3425360	3432360	That's how I happened to know about this because I was going through it and because of pagan, I was like, well, gosh, I really don't want to just match upper ASCII here.
3432360	3439360	I want to match any uppercase letter even though I think environment variables, as a default, must be ASCII characters.
3439360	3442360	I think that's the requirement for all systems, but I don't know that.
3442360	3447360	So this is just a match to isolate any action that might actually be an environment variable, which allows me to do this.
3447360	3451360	So now I can just do a KN path, and it will show me the whole path, right?
3451360	3453360	I can do, you know, whatever.
3453360	3456360	And I can do some other things with KN.
3456360	3464360	But if you want to know more about the KN tool and you have questions about what it does and how it works and why I'm doing it, stick around.
3464360	3467360	And when I come back, I'm going to be coding on that all day today.
3467360	3469360	And I'll be coding in Perl, mostly.
3469360	3475360	Perl and, in fact, I'm going to be moving all of my library, my dotfalls library, either to Perl or to POSIX shell.
3475360	3479360	So if those topics interest you, please stay tuned.
3479360	3486360	I won't always be talking a lot, because, you know, you can listen to the desert in the background if you want.
3486360	3493360	I thought I'd bring up the old Perl Camel for fun, because, you know, Perl's not lost in the desert.
3493360	3496360	It's still getting used all over the place, right, Cypheric?
3496360	3499360	Anyway, it's been fun.
3499360	3502360	I'm going to go check our YouTubers who don't have a way to communicate with us right now.
3502360	3504360	It's unfortunate.
3504360	3505360	Uh-oh.
3505360	3506360	Message retacted.
3506360	3508360	We had a couple of messages get retacted.
3508360	3511360	Looks like they didn't want to follow through with it anyway.
3511360	3515360	Maybe they came in to our other thing.
3515360	3519360	So, Alexi, did you get your question answered?
3519360	3522360	And, Catalan, I was planning on using a Perl set of Bash scripts.
3522360	3523360	What do you think?
3523360	3525360	I think it's a great idea.
3525360	3526360	I do.
3526360	3530360	And you're hearing this from a guy who was big on Bash until two days ago.
3530360	3533360	Two days ago, I got really burned by Bash.
3533360	3536360	And the first burn was that, oh, okay.
3536360	3537360	Thank you.
3537360	3538360	Thank you.
3538360	3543360	The first burn about Bash was that I could not match Unicode characters.
3543360	3545360	That was the first burn.
3545360	3550360	And the second one was that I could not do documentation.
3550360	3555360	And we haven't even talked about that, but Perl has wicked awesome documentation support.
3555360	3560360	You write the documentation in the script file at the end.
3560360	3564360	So it doesn't, your interpreter doesn't have to go through the hassle of parsing it
3564360	3566360	like it does with Python.
3566360	3569360	And it makes it wicked fast.
3569360	3573360	And so that way your little script that was, at one point it was just a little shell script
3573360	3578360	and now it's a Perl script can actually document it in a way that is totally marked.
3578360	3580360	You can mark it up and everything using pod.
3580360	3585360	Pod's an old format, but it still allows you to do to create man pages and stuff for your little shell script.
3585360	3588360	So you got little shell script that you made as it can grow up.
3588360	3593360	And because it's all coming at the end of the file, the interpreter completely ignores it.
3593360	3595360	Completely ignores it.
3595360	3597360	So it's extremely efficient documentation.
3597360	3605360	So for the KN tool, I wanted to document each of these commands that I'm making, these actions I'm calling them.
3605360	3608360	And I was like putting these big long bash comments and stuff.
3608360	3610360	I'm like, man, this is horrible.
3610360	3614360	And then I remembered how well and easy it was to document your functions in Perl.
3614360	3620360	I mean, to document everything in Perl using Perl pod after the underscore underscore end and putting it all there.
3620360	3622360	And so that documentation travels with your script.
3622360	3631360	So once again, that and the Unicode support caused me to change writing my KN actions from bash to Perl.
3631360	3638360	And frankly, based on that, I won't be returning to bash other than as an interactive shell.
3638360	3642360	I won't be writing any more shell scripts in bash because of it.
3642360	3643360	And I love bash.
3643360	3644360	Don't get me wrong.
3644360	3645360	I love it.
3645360	3646360	I think it's really cool.
3646360	3647360	I learned a lot going through it.
3647360	3650360	I still think reading through the bash user guidelines is fine.
3650360	3656360	But I've got to tell you, I was getting a little bit annoyed at all the stuff for variables that I had to do to use the Perl in bash.
3656360	3664360	In bash, I had to make sure that I had curly brackets and double quotes around all my variables and I had to write a little macro to do that.
3664360	3666360	And I was starting to wear on me.
3666360	3669360	And then last night, I started writing all the same stuff in Perl.
3669360	3671360	And it was like, I wasn't pushing a rock uphill anymore.
3671360	3672360	It was like easy.
3672360	3676360	I can just use $ whatever for a variable name and just be done with it.
3676360	3679360	And it was just so liberating.
3679360	3681360	And it just started flowing again.
3681360	3686360	Not just because I knew it before, but because it's a much better language to write shell scripts in.
3686360	3688360	And that's what it's always been intended for.
3688360	3694360	So anyway, also I feel Perl is easier to read than bash.
3694360	3695360	Yes, absolutely.
3695360	3698360	In fact, can I show you the bash equivalent?
3698360	3703360	So the other thing that, and you got to understand, I was really loving on bash.
3703360	3709360	But let me show you this here.
3709360	3715360	So here's a good example of where bash falls on its face.
3715360	3718360	The fact that you can do it is still pretty cool.
3718360	3719360	I'm sorry for the background.
3719360	3726360	It's a little bit off, but so here is the code to do completion for build scripts.
3726360	3728360	Oh, yeah.
3728360	3731360	Perl has got awesome support on Windows.
3731360	3738360	You usually have to install something, but usually people are running it on Linux through WSL or something like that.
3738360	3743360	So let me see if I can find it offline.
3743360	3753360	All right, so this code right here, so this is code that converts.
3753360	3757360	I mean, it's just as every bit is dense as Perl, right?
3757360	3761360	The difference is that it's not as powerful as Perl.
3761360	3769360	So if you're going to buy off on that kind of, this replaces everything up to the dot.
3769360	3772360	Actually, this replaces all the dots with the slash, right?
3772360	3773360	So that's what it does.
3773360	3775360	But this is where it really gets crazy.
3775360	3780360	So let me see if I can find it.
3780360	3781360	Compliant.
3781360	3782360	Where's my complaint?
3782360	3785360	I guess I took it out already.
3785360	3787360	Yep.
3787360	3790360	See dot files.
3790360	3793360	Scripts.
3793360	3796360	I might remove those icons.
3796360	3798360	They're kind of annoying.
3798360	3802360	I was just trying another thing for icons.
3803360	3804360	Let's try Perl.
3804360	3806360	Yeah, for Windows.
3810360	3811360	Where is it?
3811360	3812360	Right here?
3812360	3814360	No, I think I removed it already.
3814360	3815360	Oh, well.
3815360	3820360	Actually, I have another one that does this.
3820360	3824360	All right, so this command, this here, see this?
3824360	3830360	This code right here fulfills tab completion by checking to see if an environment variable has a
3830360	3831360	compliance set.
3831360	3834360	And if it does, it iterates over all of the commands.
3834360	3837360	This is how you write, and this is, I'm just going to say it.
3837360	3838360	This is ugly.
3838360	3846360	This is how you write a dictionary in Bash.
3846360	3847360	Yeah.
3847360	3849360	Ugly sin, right?
3849360	3851360	You know how you write that in Perl?
3851360	3855360	Hashtag, I mean percent commands.
3855360	3860360	But you have to type all of that just to get to that in Bash.
3860360	3865360	This here points to malware.
3865360	3868360	The address tied to malware.
3868360	3869360	What's that?
3869360	3873360	Perl com domain.
3873360	3875360	IP address tied to malware.
3875360	3877360	Oh, boy.
3877360	3879360	Perl.com points to malware.
3879360	3881360	It doesn't surprise me.
3882360	3883360	Yeah.
3883360	3884360	There's a lot of hackers still using Perl.
3884360	3885360	Not just old people.
3885360	3888360	This here says replace.
3888360	3895360	This says, does the substring from zero to however long the first argument is, which
3895360	3900360	is like maybe five, 10, six characters, does it equal that same value to see?
3900360	3902360	It's basically a substring match.
3902360	3905360	That match is like no problem.
3905360	3907360	It's like half that length in Perl.
3908360	3915360	The one I was really going to show you is the dereferencing.
3915360	3920360	When you're dereferencing a function and you want to do alias and stuff like that, Bash
3920360	3923360	just really falls apart because it's not designed for that.
3923360	3925360	Bash is not meant to do that kind of thing.
3925360	3927360	You know what I mean?
3927360	3929360	They forgot to renew the domain.
3929360	3931360	That doesn't surprise me.
3931360	3936360	A lot of the Perlmongers are tired.
3936360	3939360	They're just like, I just want to make my stuff work.
3939360	3944360	That's another reason I decided to do an entire video on Perl because a lot of them
3944360	3947360	aren't doing anything.
3947360	3949360	I'm going to call you out, guys.
3949360	3953360	They're stuck on UCP and they don't come up for air.
3953360	3959360	They barely got on Twitter like three years ago.
3959360	3961360	I hate to say it, but it's true.
3961360	3966360	There are many people from the Perl community who are stuck in the past.
3966360	3967360	They're good.
3967360	3969360	They're smart in their intelligence.
3969360	3972360	Would they consider live streaming?
3972360	3974360	Probably not.
3974360	3982360	I figured I had to make a video on it at least to show people what's available.
3982360	3984360	People didn't even want to use the terminal.
3984360	3986360	Now everybody is starting to see the terminal.
3986360	3989360	That's largely because people who have been making powerful use of the terminal for years
3989360	3991360	are finally making videos and showing it.
3991360	3992360	Hey, this thing is actually a thing.
3992360	3996360	In fact, I've seen several security people do things.
3996360	3999360	Hammond comes to mind.
3999360	4001360	Stoke, I think his name is.
4001360	4003360	A couple of people have done videos on the terminal.
4003360	4005360	The terminal is really awesome for cybersecurity.
4005360	4008360	Oh, news flash.
4008360	4012360	Because they're doing it, other people are becoming interested because the generation,
4012360	4014360	that's where they get their data.
4014360	4016360	Everyone else is like, well, yeah.
4016360	4023360	But there's not a lot of people making content that's digestible.
4023360	4025360	I'm just going to say it.
4025360	4030360	The older generation is not communicating their knowledge to the younger generation.
4030360	4035360	They're doing their thing and they're too busy to be bothered to do it.
4035360	4036360	They're making their craft beer.
4036360	4039360	They're doing whatever they're doing and they're not sharing.
4039360	4043360	So I figured I at least needed to start sharing.
4043360	4047360	It doesn't mean what I have to say is anything is any better than what anybody else has to say.
4047360	4051360	It just means that I just have an opinion to the voice as well.
4051360	4054360	And so we can put that out there with everybody else.
4054360	4055360	What's that?
4055360	4059360	I switched to Win at 10 to FreeBSD and JWM for the exact reason of never going back.
4059360	4063360	And I'd be curious, does your FreeBSD come with parole?
4063360	4064360	I'm not going to rip on you.
4064360	4065360	I promise.
4065360	4066360	Don't be afraid.
4066360	4068360	Does your BSD have parole on it by default?
4068360	4071360	I'm pretty sure it doesn't, right?
4071360	4072360	Yeah.
4072360	4080360	I read a bunch of stuff that said that the modern BSD variants have successfully ripped parole dependencies out of everything.
4080360	4085360	I still think Git has a dependency on it, but I think it's built into the problem, to the program.
4085360	4087360	And I understand why they did that.
4087360	4091360	I think it was a stupid decision, but I understand why they did it, right?
4091360	4098360	But anyway, trying to turn it back to processes going on right now for parole.com.
4098360	4100360	Oh, wow.
4100360	4103360	Yeah, Git is heavily dependent on parole, right?
4103360	4106360	When I joined development, parole was already considered legacy.
4106360	4107360	Yeah.
4107360	4109360	So it's interesting to hear that alternative point of view.
4109360	4111360	Well, I'm going to say something here.
4111360	4113360	Pearl is legacy.
4113360	4115360	You know what else is legacy?
4115360	4116360	Linux.
4116360	4118360	Linux is legacy.
4118360	4121360	Linux is older than parole.
4121360	4123360	Is that true?
4123360	4125360	No, I don't even think that's true.
4125360	4127360	I think parole is older than Linux.
4127360	4129360	I would love to know that.
4129360	4137360	The point is, using parole for machine learning is idiotic and definitely legacy.
4137360	4143360	But using parole as a better awk, as a better said, is...
4143360	4144360	Yeah, it's 87.
4144360	4145360	Yeah, clean start.
4145360	4153360	Using parole for what it was intended to be used for, which it is still the best in breed at doing, is not legacy.
4153360	4155360	It's not legacy.
4155360	4156360	I mean, the code bases are trying to migrate.
4156360	4157360	God, yes.
4157360	4162360	The term parole code base is a fucking oxymoron.
4162360	4165360	Sorry.
4165360	4168360	Sorry for the swear word.
4168360	4170360	It's a tool for the job.
4170360	4172360	Yeah, it's a tool for the job.
4172360	4174360	And I recently had to blog a lot about this.
4174360	4180360	I find myself, you know, getting uptight for having to defend tools that are the best tools for the job.
4180360	4183360	And sometimes, you know, people...
4183360	4187360	I get overly defensive about it, and I call people assholes and stuff, which I shouldn't do.
4187360	4189360	I did that yesterday to Mosh if you're out there.
4189360	4190360	I apologize.
4190360	4192360	You know, I...
4192360	4193360	It's not about that.
4193360	4197360	What it's about is it's like what Cypheric says, it's the best tool for the job.
4197360	4204360	If the job is parsing text that potentially has Unicode in it, there is no better tool on planet Earth than parole right now.
4204360	4211360	Your language doesn't do backslash p capital L U to parse uppercase letters in Unicode.
4211360	4213360	It doesn't do it.
4213360	4216360	And so, you know, just best tool for the job.
4216360	4222360	And if the job is a better bash, that's going to write a shell script and prototype rapid applications development in,
4222360	4227360	and then port it perhaps if you're going to, you know, write a module or thing that does grow a little bit,
4227360	4230360	then at that point, yeah, do it in Python, do it in Go, do it in something else.
4230360	4237360	But having a parole code base that's not a bunch of scripts, that's definitely legacy, in my opinion.
4237360	4238360	In my opinion, that's legacy.
4238360	4239360	You know what else is legacy?
4239360	4247360	Using anything with parole moose or mong, you know, there's all kinds of object-oriented things that got added onto parole.
4247360	4248360	I hated all of them.
4248360	4253360	I tried really hard to make parole into object-oriented language back when I drank the object-oriented Kool-Aid.
4253360	4256360	But then, you know, the parole class is pregnant that I made.
4256360	4260360	But the fact of the matter is, is if parole has no business in that space,
4260360	4265360	I have a parole code base running on 52,000 machines that I've been to this day.
4265360	4268360	And I wrote it, and for only going, I got shipped.
4268360	4270360	It was my endpoint for collecting data.
4270360	4273360	But that was definitely a sweet spot application for Go.
4273360	4277360	And if I had it to do today, I would have done the whole thing in Go.
4277360	4279360	But we didn't have those options back then.
4279360	4284360	So I definitely agree that most parole in the enterprise that you're going to encounter, or anywhere, frankly,
4284360	4286360	is going to be legacy.
4286360	4287360	The application is legacy.
4287360	4290360	The application of parole in that instance is legacy.
4290360	4294360	But parole itself is not legacy at all.
4294360	4299360	Paral is cutting edge when it comes to regular expression parsing.
4299360	4307360	It is the front of the pack in creating the best regular expressions known to mankind, humankind, whatever.
4307360	4310360	And in that sense, parole is not legacy.
4310360	4313360	Paral is the industry standard.
4313360	4316360	So as long as you can separate those things, though.
4316360	4321360	PCRE is a separate lib, but it does not have slash pat p in it yet, as far as I know.
4321360	4323360	If it did, Python would have.
4323360	4326360	So that might be that it's a new thing.
4326360	4328360	So if anybody has any information on that, I'm wrong.
4328360	4330360	I would really love to be wrong on that.
4330360	4340360	So please let me know if your language supports the backslash p Unicode class match.
4340360	4343360	PCRE is not the same as Paral Regex.
4343360	4345360	It's very close.
4345360	4348360	Yes, it's very close, but it was heavily inspired by Paral.
4349360	4355360	In regular expressions, most people don't ever need a regular expression.
4355360	4361360	I'm the first to admit that regular expressions are usually bad.
4361360	4368360	Regular expressions are a bad idea if a simple substring match or a split would work.
4368360	4374360	Paral regular expressions are an unnecessary complexity that can actually really tank your performance.
4374360	4381360	So a lot of times, just a good old substring match or a prefix match or a range match are way better.
4381360	4389360	I'm guilty of really, really loving a good regular expression and wanting to do that first because it's just easier to write.
4389360	4394360	It's easier to write than a substring this and if this substring matches that, but that code is usually more performant.
4394360	4398360	So that's the thing.
4398360	4400360	Are more powerful than PCRE?
4400360	4402360	Yeah, they are.
4402360	4405360	Paral regular expressions continue to be more powerful than PCRE and they will be.
4405360	4407360	I think they're going to continue.
4407360	4412360	Paral once again proves that on the front of regular expressions, it is not legacy.
4412360	4418360	It is the cutting edge and it's going to continue to influence PCRE and the rest of the regular expression.
4418360	4421360	It's because it's dominated the industry forever doing that.
4421360	4428360	So yes, most code bases are legacy Paral, but Paral itself is anything but legacy.
4428360	4437360	And as long as you use it as the most powerful shell scripting language on planet Earth, which it is, then you're going to be fine.
4437360	4440360	How's that?
4440360	4444360	And you might profit, particularly in cybersecurity.
4444360	4447360	You can clean up with cybersecurity.
4447360	4449360	Yep, I'm telling you, man.
4449360	4454360	I wonder if I might subcode really fast and hack really quickly.
4454360	4455360	Paral's your baby.
4455360	4456360	Plus it looks cool.
4456360	4457360	Hackers love it.
4458360	4461360	We'll be sticking to Paral 5 plus instead of a code.
4461360	4462360	Yeah, absolutely.
4462360	4471360	I personally, I personally, I'm not telling you what to do, but I personally am not ever going to use anything but Paral 5.
4471360	4483360	Because the whole point of me using it is that it's everywhere and it has regular expression support for Unicode and that I just know how to write it really quickly.
4483360	4489360	I'm not going to use anything that, look, I'm not putting down the people who have made those projects.
4489360	4499360	I just, as I said before, if you are using, if you're reaching for something besides Paral 5, you have a lot of other options in that field.
4499360	4509360	At that point, you need to compare your choice with a bunch of other things and not just, and not just, you know, a great, you know, the world's best shell scripting language.
4509360	4511360	Because that's what it is.
4511360	4514360	And, you know, so that's all I'm going to say about that.
4514360	4520360	I have not even cracked open Rakudu and the other ones.
4520360	4525360	We had, actually, we had one of the developers was on our stream some time ago and she said, you should really give it a try.
4525360	4527360	And I, she's very, very nice.
4527360	4535360	And I was seriously thinking about looking at it, but I got to tell you, I mean, I like keeping my mind open on those kind of things.
4535360	4552360	I, I can't imagine there being, I've been wrong before, but I can't imagine there being anything that I would ever want to code in besides, you know, because every, because Go covers all my other bases.
4552360	4563360	And the very few little edge cases that aren't covered by Go are covered by Rust or they're covered by Python or Bash or C.
4564360	4566360	There's no more room.
4566360	4568360	There's no more room in there.
4568360	4569360	You see what I'm saying?
4569360	4576360	I mean, it's like, if there's going to be other languages in NIM, for example, NIM is another one that's really, really cool, right?
4576360	4578360	Am I getting it right?
4578360	4579360	I think it's called NIM.
4579360	4581360	I mean, there's a lot of really cool languages.
4581360	4583360	Haskell, you know, any of the purely functional.
4584360	4595360	If I, you know, if I was going to go to plug in for Pandoc or something like that, then I could see doing, or if I was having a really, really, really highly concurrent system like Discord does, I would do Erlang for that.
4595360	4601360	You know, but, but I don't see, I don't see the sweet spot for anything outside of Pro 5.
4601360	4602360	If that makes sense.
4602360	4604360	Because, you know what I mean?
4604360	4605360	You know what I mean?
4605360	4615360	Because all the other needs that I would have are well, well covered by other languages, sometimes redundantly well covered, and particularly Rust and C++.
4615360	4617360	They both cover and see, right?
4617360	4628360	They want, they cover, all of them cover one area of high performance computing that is, you know, arguably harder to write, but more stable and more performant.
4628360	4632360	But not the thing that you would grab for every day to make a microservice.
4632360	4635360	In fact, you, to write a microservice in Rust seems kind of silly, right?
4635360	4640360	It's particularly given all the libraries that exist in, in, for go and to do that very same thing.
4640360	4650360	You know, if you're, if you're doing, if you're doing machine learning, it's either, it's either Python, obviously, or, you know, or R, or, you know, scientific computing, or Julia.
4650360	4661360	I just don't see there being a lot of space in the language realm for yet another multi-purpose offering.
4661360	4663360	That's not one of the ones that's already existed.
4663360	4665360	It's already been adopted by everybody.
4665360	4669360	And so that's, that's my reason for not really caring about anything besides Pro 5.
4669360	4673360	And I apologize if that, if that makes people sad.
4673360	4676360	I mean, you know, because there's, there's probably people have done a lot of really good work on that.
4676360	4678360	Pro 6 was a complete disaster.
4678360	4680360	And you guys, we just have to own it.
4680360	4684360	The reason you try to rebrand the whole thing is because Pro 6 was a freaking disaster.
4684360	4685360	You couldn't get it right.
4685360	4686360	You couldn't plan the thing.
4686360	4688360	You tried to spite up more than you could chew.
4688360	4692360	You basically tried to do all things for all people and you failed.
4692360	4699360	And maybe you finally came around and got it to being something better than it is, but, but at the time it failed.
4699360	4704360	I mean, it was, I'm sad to say that because I lived through that.
4704360	4709360	I was, I was buying into the 6, the Pro 6 thing and I was sending a waiting, waiting, waiting, waiting, waiting.
4709360	4716360	And meanwhile, Python was progressing and people were moving, porting from Pro to Python for enterprise solutions for all the right reasons.
4716360	4721360	And, and, you know, C++ was getting a lot of big leverage at that time.
4721360	4725360	It was coming into the enterprise because it was easier to write than Bruno was taking over from Java.
4725360	4727360	And Java, of course, was dominant through the whole thing.
4727360	4729360	And, and then what?
4729360	4731360	Nothing.
4731360	4738360	And now, you know, like 12 years after I gave up Pearl, someone tells me that there's a version of Pearl that's actually really awesome.
4738360	4740360	I'm like, I'm just sorry.
4740360	4741360	You had your chance.
4741360	4742360	I'm not interested.
4742360	4750360	You know, I would, I'm not saying I won't look, but, you know, pre-installed most of us.
4750360	4751360	Right.
4751360	4753360	Pearl is, but not, but not, not Roku.
4753360	4754360	Yeah.
4755360	4762360	And one, one of the reasons I say that you should, you know, Pearl for is on everything.
4762360	4765360	So, and, and that's pretty much on steroids.
4765360	4773360	So if you just keep yourself to, to writing basic Pearl for constructs and you don't do any of the other stuff, you're totally fine.
4773360	4783360	You can write at Pearl run anywhere except for BSD, apparently, you know, some BSD stuff and in which case, you know, you have to decide why you're doing that in the first place.
4783360	4794360	So, yeah, I don't, I don't believe that I would ever deploy production software in Pearl today.
4794360	4799360	And I don't mean that to be as an SRE.
4799360	4801360	I would use it all the time as a cybersecurity person.
4801360	4803360	I would use it all the time as a, you know, as a tool.
4803360	4805360	Anytime I would use bash as a tool.
4805360	4809360	It's not like you're going to deploy a thousand lines of bash in a production system.
4809360	4816360	If you're doing that, and I know Vera was talking about doing that, and he's porting that code to go right now, picking on him a little bit.
4816360	4823360	You know, if you're doing that, that's, that's fine, but it's, it's, it's arguably not the best way to do it.
4823360	4829360	Really, if you got 10,000 lines of bash code, you want to reconsider your life priorities.
4829360	4840360	You know, I actually refactored 9,000 lines of Pearl for, for VMware integration layer at IBM.
4840360	4842360	Yeah, that was not fun.
4842360	4844360	You have to duck.
4844360	4847360	Love that someone else is loving Pearl the way I do.
4847360	4849360	Pearl was my second language after C. Wow.
4849360	4850360	Yeah.
4850360	4853360	And it does, it feels like C a little bit, you know, don't you?
4853360	4857360	I love Pearl for what Pearl is designed to be.
4857360	4858360	I'm wrapping up here.
4858360	4863360	This is a long video, but, but, but I really want to hit that part home.
4863360	4870360	I love Pearl for what Pearl, and I suggest Pearl is cutting edge for what Pearl was intended to be, the world's best shell scripting language.
4870360	4873360	It's not designed to be an enterprise language.
4873360	4879360	The prototype that I'm making in KN will eventually, many pieces of that will be rewritten in Go.
4879360	4881360	The core pieces of it will be rewritten in Go.
4882360	4889360	This scripting language, so people can write their own plugins, will support anything that can run on the command line, including probably mostly Pearl.
4889360	4900360	So, so that's, you know, if you want to add expandability on a, on a Unix or Linux system to assist to something, and you can say, well, you can write it in any shifting scripting language, right?
4900360	4905360	Or you could, you know, make a compile compatible program in Go.
4906360	4909360	I'm back and read the chat again.
4909360	4913360	Lots of, lots of great people here.
4913360	4914360	How's it going?
4914360	4916360	Infility?
4916360	4919360	See, it's moving to Subversion to get.
4919360	4921360	Are they?
4921360	4924360	Oh wait, I got some interesting stuff to read.
4926360	4928360	Yesterday was fun though.
4928360	4930360	Legacy, yeah.
4931360	4936360	Um, yeah, yep, yep, yep, yep, yep.
4936360	4943360	BSD, since free BSD is moving from Subversion to get, it's supposed Pearl will be, will be added back to, you think it's going to be?
4943360	4946360	I wonder what version it is.
4946360	4948360	That'd be interesting to know.
4948360	4953360	I wonder, I bet it's, I bet it's 5.10.
4953360	4955360	That's the one I'm going to bet they're going to go with.
4955360	4957360	I think we should probably know.
4957360	4962360	Which, I could have swore get Bundles Pearl with it.
4969360	4973360	You know, it makes sense that get has Pearl in it because of how fast it was turned around.
4973360	4977360	I mean, it was like, it was like he thought of it and then it was done.
4977360	4983360	So it was like, yeah, it looks like it's been installed with it.
4983360	4987360	Um, version forget.
4987360	4989360	Oh, let's look at this one.
4992360	4994360	Do, do, do, do, do, do.
4994360	4995360	Let me check this.
4995360	4996360	Take a, take a pic.
4996360	4997360	Ah, there we go.
4997360	4999360	Uh, get on the system which runs.
4999360	5001360	And the standard version is Pearl 5.8.
5001360	5003360	Oh my gosh, that is ancient.
5003360	5009360	Uh, what's important is that Pearl command keeps referring to Pearl 8.8 so that our script run fine.
5010360	5014360	Oh, let's see.
5014360	5017360	Get has a dependency on Pearl 5.28.
5017360	5018360	That's not true.
5018360	5021360	The docs doesn't even mention it requires Pearl though.
5021360	5023360	It does require Pearl that we know for sure.
5023360	5027360	Um, it doesn't say it get depends on who it is.
5027360	5029360	It says that package requires that.
5029360	5032360	It says that package requires 5.28.
5032360	5033360	Okay.
5033360	5034360	No good answers here.
5034360	5037360	The proscripts that get runs on beginning with the shebang lines.
5038360	5039360	And they get sourced.
5039360	5040360	These lines are user bin pearl.
5040360	5041360	Yay.
5041360	5043360	Which is what you should use instead of user bin ENV.
5043360	5047360	But as you build to get to install it, the source builder replaces these with the correct path,
5047360	5051360	which is also the right thing to do instead of using bin ENV.
5051360	5054360	So if you correct password or correct version of Pearl, use it with a bin pearl.
5054360	5056360	Uh, all right, fine.
5056360	5057360	What's the version?
5057360	5059360	God damn it.
5059360	5062360	Um, anybody know?
5062360	5063360	Uh, question.
5063360	5066360	What does it matter so much whether something is installed by default?
5066360	5069360	Let's say a scripting language takes someone, package manager, away from being able,
5069360	5072360	it's really important that you have installed something from the fishery pod stories.
5072360	5076360	Oh, Pearl 5 is greater than equal 5.32.
5076360	5078360	Really?
5078360	5082360	Git has a 5.32 runtime dependency?
5082360	5084360	Holy cow.
5084360	5087360	So much for no pearl on VSD.
5087360	5092360	That's like the most recent version.
5092360	5094360	Wow.
5095360	5098360	Well, do I need to make my case further?
5098360	5107360	The most useful, powerful version management system in the world depends on Pearl 5.32.
5107360	5109360	There we go.
5109360	5119360	So, and, um, so yeah, it is really important to have it on the remote system.
5119360	5120360	Yeah.
5120360	5122360	It depends on what you're making, right?
5122360	5126360	Uh, if you're, if you're, if you're, if you're a system administrator and you want your script to just be able to work,
5126360	5130360	you want to SCP the script over and be able to run it or your hacker and you want to be able to do that,
5130360	5133360	uh, that makes a lot of difference.
5133360	5137360	I'm going to be able to share your script with somebody else who has also has a Linux machine.
5137360	5139360	It doesn't have, you don't have to install anything.
5139360	5141360	The small things make a difference.
5141360	5144360	There are less and less of a difference in a Docker world now, right?
5144360	5148360	Most people have Docker installed, but that's usually for larger applications.
5148360	5154360	So it's different in that space, in that space of, you know, shell scripts on steroids,
5154360	5158360	Pearl, having Pearl everywhere is a plus.
5158360	5161360	Uh, but as soon as you go beyond that, as soon as you're making an application,
5161360	5163360	then it's not as big a deal, right?
5163360	5167360	Because you, you've got to already bundle and then, you know, the Python virtual environment makes sense,
5167360	5170360	even though it's stupid, but, you know, you have to bundle everything together.
5170360	5172360	You have all your dependencies match and everything at that point,
5172360	5174360	you should just make a Docker container, by the way.
5174360	5177360	Um, you're running 13 current though.
5178360	5180360	Interesting.
5180360	5182360	There's a runtime dependency.
5182360	5184360	That's really interesting.
5184360	5186360	You have to report back on that.
5186360	5188360	That's a really, uh, it's a really interesting question.
5188360	5190360	Uh, don't go to Pearl.com.
5190360	5194360	There are a bunch of, uh, it's apparently malware,
5194360	5202360	which I didn't say that the Pearl community is on top of everything as well as some of our other communities.
5202360	5205360	They're just, they're tired.
5206360	5211360	So they're forgetting to renew things and they have like really, really ancient websites.
5211360	5213360	I was on the Pearl Mager site the other day.
5213360	5216360	I was like, it needs a facelift so bad.
5216360	5222360	I was like, you know, because they, I mean, the whole, the whole initiative has lost a lot of its oomph,
5222360	5229360	because it's not sexy and cool anymore, but, but it's still sexy and cool when it comes to being a powerful shell script.
5229360	5231360	Stop thinking of Pearl as more than that.
5231360	5238360	And a lot of the, frankly, a lot of the, the, the Pearl community, you know, the, you know, previous community and current community
5238360	5242360	still trying to push Pearl for large scale applications development.
5242360	5244360	And I think that's a mistake.
5244360	5246360	I think it's a huge mistake.
5246360	5250360	Um, but again, if you look at Pearl as a shell script language, I'm just going to put it that way.
5250360	5257360	They're trying to change the version that required, uh, at most it's just looking if you're compliant, uh, when you're, uh, you're closed over.
5257360	5260360	Yeah, that's probably what's going on with it.
5260360	5263360	Yeah, it really depends on the dependency there as well.
5263360	5268360	Uh, this, this particular video has, has, has generated a lot more interest than I would have thought.
5268360	5269360	So this has been really fun.
5269360	5274360	I'm going to have to go ahead and cut it short and just want to go read if there's any more questions.
5274360	5276360	Um, I have to duck down again.
5276360	5278360	Learning Pearl is one of the best programming books I've ever written.
5278360	5279360	I agree.
5279360	5282360	Um, yeah, Schwartz did a great job with it.
5282360	5284360	It's very, very easy to understand.
5284360	5289360	It's one of the better, one of the greatest things about Pearl is that all of the documentation has always been really easy to read.
5290360	5292360	And I told you all the man pages that are there, right?
5292360	5298360	There's literally a man page on everything and you have to learn man to do Pearl really, uh, to do it really well.
5298360	5300360	But if you're going to jump into it, do that.
5300360	5302360	Please don't go overboard though.
5302360	5307360	I, I'm going to just recommend that you not, there are other very much more important languages for you to learn than Pearl.
5307360	5312360	Pearl, Pearl is important if you're, if you want to do a lot of shell scripting, you're going to live on the command line.
5312360	5318360	If you're going to be an SRE, if you're, you know, if you're going to be a hacker, uh, or if you just want to be a terminal power,
5318360	5323360	user, Pearl is really good, but it wouldn't be the first thing I would learn, right?
5323360	5329360	Uh, I would, I would have you learn JavaScript first, uh, you know, in the web browser, by the way, not on the command line.
5329360	5333360	And then I would learn, uh, go as the first compiled language personally.
5333360	5335360	That's what I'd recommend.
5335360	5344360	And, uh, I would learn enough shell, uh, to be able to write shell scripts and, uh, and, and then I would, I would learn Pearl to help you out.
5344360	5349360	But it's a supplementary language that basically turns you into a terminal power user.
5349360	5355360	And I, and that way, you know, you won't get into the problem of, it's, it's more important that you learn Python than Pearl,
5355360	5357360	unless you're going to live on the command line all the time.
5357360	5360360	So, but don't rule it out.
5360360	5363360	It does have a place that is not filled by any other language.
5363360	5365360	And that's the recent discovery.
5365360	5368360	And frankly, I thought Bash filled that spot and it doesn't, it doesn't.
5368360	5373360	In fact, Bash and I, it was a fun, it was a fun year that I think Bash and I are done for a while.
5373360	5374360	Yeah.
5374360	5379360	I'm going to be back to Dash and, uh, Pearl for everything and Python.
5379360	5380360	Yeah.
5380360	5384360	Because you have, you have like, you have like POSIX, right?
5384360	5386360	POSIX shell, which is compatible everywhere.
5386360	5389360	And then you have Pearl, which is everywhere when you need something more powerful.
5389360	5397360	You have Python for those enterprise, Python and TypeScript for like those enterprisey kind of scale interpreted applications,
5397360	5399360	still interpreted language applications.
5399360	5402360	And then boom, you need some, you need some statically typed compilation stuff.
5402360	5403360	Go as your friend.
5403360	5407360	So that kind of go TypeScript and Python kind of all overlap.
5407360	5413360	And then you need like edgy, high-performance stuff, Rust and C, C++, right?
5413360	5416360	And you need, you need stuff on the hardware assembly.
5416360	5417360	Yeah.
5417360	5421360	And, and that's, that's my spectrum of languages right now.
5421360	5428360	So, but the distinction between POSIX shell, Bash, you know, there might be a little bit of,
5428360	5435360	I am still going to use the Bash interactive shell because I want to be able to export functions that do things that I can't do with the shell.
5435360	5444360	So as a shell, it's still the best interactive shell if you ask me, but, but, but, you know, so that, that's still, that's where I'll be.
5444360	5447360	If I write any code in Bash, that's where it'll be.
5447360	5451360	Otherwise it's going to be just in straight up POSIX Dash or it's going to be in Pearl.
5451360	5454360	And that's, that's a position that I held or Python.
5454360	5459360	And that's a position I held back in, in 2007.
5459360	5460360	And I'm just returning to it.
5460360	5463360	And if you read my blog, it's not a blog.
5463360	5466360	If you read my notes, if you go to github.com.
5466360	5478360	And you click on log, you can read some of my lament about going through all of this and how it made me into a very grumpy Gus yesterday, going through this, this, this process of discovery.
5478360	5483360	And to anyone that I may have offended yesterday, I'm sorry.
5483360	5485360	I'm just, I'm sorry.
5485360	5487360	That's all I'm going to say.
5487360	5489360	Probably time for me to go.
5489360	5491360	Can we, can we agree this topic is dead now?
5491360	5493360	Did we kill the camel?
5493360	5495360	Or did we resurrect the camel?
5495360	5502360	I was actually really fun for me because I feel like I've given myself permission to use, to use it again.
5502360	5505360	Just like I gave myself permission in January to use Bash.
5505360	5506360	So this is what happened.
5506360	5516360	I gave myself permission in January to use Bash all the ways that I'd been prohibited from using as a, as a system in a developer at IBM for years, because I was forced to use POSIX compliance.
5516360	5519360	So I'd run on Solaris and AIX and all that stuff.
5519360	5524360	And, and then I'm going to, I'm going to go, but I'm going to just drop the stream.
5524360	5526360	I'll be back in a bit.
5526360	5531360	The stream script removed the R to let off steam.
5531360	5534360	It was all good.
5534360	5541360	And so all I want to say is that, you know, that was fun.
5541360	5542360	It was an experiment.
5542360	5543360	So I used Bash.
5543360	5546360	All of Bash is crazy, awesome things.
5546360	5547360	You know what?
5547360	5554360	I discovered about CD path, which nobody knows about, which is the same thing that you want out of your, your fish and your Z-shell for automatic CD completion.
5554360	5558360	Lots of things I discovered about Bash over the last year.
5559360	5570360	And, and I'm so I'm not, I don't look, I don't feel that was a bad thing, but I gave myself permission to use it after having been told, you can't, thou shall not use that cool Bashism and that Bashism and that Bashism.
5570360	5574360	And, and I let myself do that and I had a lot of fun with it for about a year.
5574360	5579360	But, you know, this week I hit a two, those two significant blocks for Bash.
5579360	5587360	No Unicode support for regular expressions, which Pearl does, and no support for extensive documentation in a script, which Pearl does.
5587360	5591360	And those two things have caused me to abandon Bash and relook at the whole thing.
5591360	5596360	And, and so I'm back to using basically pausing shell and Pearl for everything.
5596360	5601360	And you'll see me doing a lot of code doing that and go, of course.
5601360	5609360	So I think with that, I'm going to go ahead and put the, the, the dunes, the dunes back on, maybe turn them up a little bit.
5609360	5611360	Yeah.
5611360	5613360	Actually, this terrifies my wife.
5613360	5614360	She's scared of the desert like this.
5614360	5616360	I'm like, this looks really fun to me.
5616360	5617360	I'll be back.
5617360	5619360	It'll probably be about a half an hour or so.
5619360	5620360	I will be back when I come back.
5620360	5625360	I'll be doing a lot of Pearl coding actually on the knowledge node utility.
5625360	5627360	It's called KN.
5627360	5630360	It's a way of managing your notes and your schedule and everything.
5630360	5633360	And it's modular so you can expand it and customize it.
5633360	5640360	It's part of the associated federated knowledge workers, our effort to create tools that are kind of come together on,
5640360	5646360	building for each other so that we can manage our knowledge better and then share that knowledge over the knowledge exchange grid,
5646360	5649360	which we call KEG, which I'm going to put a plug in for that.
5649360	5653360	If you want to be involved with any of that conversation, that's always going to be on Friday.
5653360	5663360	But in my time as I do my daily routine, I'm going to be doing a lot of, a lot of refactoring of all my scripts directory.
5663360	5668360	And it's going to be a lot of code in POSIX and in Pearl for the next week or two.
5668360	5669360	All right.
5669360	5670360	Take care.
5670360	5671360	Bye.
5699360	5701360	Bye.
