WEBVTT

00:00.000 --> 00:03.480
That's some good stuff.

00:08.040 --> 00:15.000
Hey there. Welcome to the stream today. I'm gonna do a little stream about which

00:15.000 --> 00:20.480
editor you should use first for coding and this is because I have been trying

00:20.480 --> 00:23.520
to make the decision about what editor to use on the stream as I go forward with

00:23.520 --> 00:27.600
the rest of the beginner boots and I think it's a big big topic. I've never

00:27.640 --> 00:30.680
covered it before. I've covered little pieces of it all over the place but I've

00:30.680 --> 00:36.680
never tackled the topic at large. It's a huge topic. So before I even let the

00:36.680 --> 00:43.040
crew of hecklers and debaters and you know outlying intelligent people to come

00:43.040 --> 00:46.200
on here and like make all their cases for whatever thing they use, I just wanted

00:46.200 --> 00:50.880
to talk to you for a second about you making your own decision about what to

00:50.880 --> 00:55.040
use and God knows I'm a very opinionated guy and I have a lot of specific

00:55.040 --> 01:01.400
opinions about this but I wanted to just go ahead and run it all by you. First

01:01.400 --> 01:04.800
of all though, let me just make one change.

01:10.800 --> 01:16.400
There we go. Much better. Cheers.

01:17.400 --> 01:24.160
A little bit of spike coffee there to get me through this. Actually chai.

01:24.160 --> 01:30.200
The topic of the topic of an editor is a really controversial topic. Everybody

01:30.200 --> 01:34.680
argues about it all the time. Everybody's right. Everybody's wrong and the bottom

01:34.680 --> 01:39.040
line is that it comes down to what is the best tool for you and so today we're

01:39.040 --> 01:45.360
going to talk about three specific types of editors, types of tools that you can

01:45.360 --> 01:48.880
use for editing code. A lot of these editors you could use just to edit

01:48.880 --> 01:55.080
whatever you wanted to and they file into three categories IDEs where they

01:55.080 --> 02:01.080
call individual development environments, lightweight graphic editors, and terminal

02:01.080 --> 02:05.120
based editors that you know what if you know me at all you know terminal editing

02:05.120 --> 02:09.840
is my preference but I want to talk about all of them so that you can kind of

02:09.840 --> 02:14.000
speak intelligently about which one is the best to use for a particular task

02:14.360 --> 02:18.960
and if you're if you're watching this video live stream right now you're

02:18.960 --> 02:21.440
probably gonna see a graphic for a while but some of there's gonna be other

02:21.440 --> 02:25.280
graphics inserted in here to talk about this. So the first editor I wanted to

02:25.280 --> 02:31.280
talk about is one called Visual Studio and we're gonna we can go ahead and

02:31.280 --> 02:38.080
look at where to get this and everything. So Visual Studio, let me just put my thing

02:38.080 --> 02:52.400
back on. Visual Studio is the default for most C++ development on Windows and

02:52.400 --> 02:58.200
from Microsoft and you just do the search for Visual Studio you'll find it. It's

02:58.200 --> 03:02.720
really important that you understand that Visual Studio is not Visual Studio

03:02.720 --> 03:05.800
code and we're gonna talk about that that's what that gets under the lightweight

03:05.880 --> 03:12.520
category. This is a great tool for what it's designed to do which is largely

03:12.520 --> 03:17.320
work on very big Microsoft applications and some people swear by it and they

03:17.320 --> 03:22.840
use it all the time. I hate it. I've had to use it on occasion and it's a fun fact

03:22.840 --> 03:27.800
there's there's somebody who did some analysis on it from Microsoft who

03:27.800 --> 03:31.480
discovered that something like 50,000 lines of code are never even used in the

03:31.480 --> 03:36.760
codebase. It's the epitome of Microsoft bloat but it is a mandatory tool if

03:36.760 --> 03:41.800
you're going to be doing anything in C sharp or C++ for Windows. It's just

03:41.800 --> 03:45.520
it's just really not worth trying to do it in any other way. You certainly can

03:45.520 --> 03:48.680
use other editors for that but that it's really not it's really not worth

03:48.680 --> 03:54.320
attempting that and so that's one of your choices. If you attend if you're

03:54.320 --> 03:57.200
going to be doing Unity development or you've been doing something C sharp you

03:57.200 --> 04:01.960
might want to pick this editor if you can use that. There's another popular

04:01.960 --> 04:04.520
editor that's been around for a long time by the way Visual Studio has been around

04:04.520 --> 04:11.120
forever. Another editor that's been around for a while is called JetBrains it's

04:11.120 --> 04:19.600
actually so much an editor as it is a company. IntelliJ is there JetBrains has

04:19.600 --> 04:24.000
become famous for specifically their IntelliJ editor which has been around

04:24.000 --> 04:29.160
since the 90s. It's a really good one but this is you know this is your decision

04:29.160 --> 04:33.800
whether you want to use this or not. Personally if they have they have they

04:33.800 --> 04:39.160
I think they're the ones who did PyCharm. This is a little bit lighter than

04:39.160 --> 04:42.920
traditional you know integrated development environment than some of the

04:42.920 --> 04:48.160
other ones that are out there but it is it is a thing that you can use and you

04:48.160 --> 04:51.280
can give it some some consideration. There's Python developers who absolutely

04:51.280 --> 04:56.520
swear by PyCharm. I would never ever use it but you know that might

04:56.520 --> 05:01.920
be you. I want to say there's there's another one in that branch that's called

05:01.920 --> 05:07.320
GoLand which is the other thing too is you get language specific ID's yeah

05:07.320 --> 05:12.760
there we go. GoLand is the JetBrains ID. This is one I've heard rave reviews

05:12.760 --> 05:19.520
on. Petit Jolliway check really loves it. One of the most famous converts from

05:19.520 --> 05:23.960
Node to Go. He uses it. He was raving about it. A lot of people really like it.

05:23.960 --> 05:28.600
It's got great theming and everything and frankly if you're going to be

05:28.600 --> 05:33.560
developing in a specific language in fact somebody who recently got a job with

05:33.560 --> 05:36.920
a company that does go development they this is their go-to editor. It's not

05:36.920 --> 05:42.200
mandated but it's really encouraged that you use it. I have been to be a fan of

05:42.200 --> 05:47.200
the idea of having if you're going to have a graphic editor that you have a

05:47.280 --> 05:50.920
graphic editor that's highly customized for your whatever it is that you're

05:50.920 --> 05:55.320
developing and so this would be one you might consider if you're going to do

05:55.320 --> 06:01.280
go development. PyCharm is that way and frankly JetBrains as a company has made

06:01.280 --> 06:05.200
kind of a business out of creating editors for specific languages the first

06:05.200 --> 06:09.680
being IntelliJ which they was a worldwide hit. I believe IntelliJ then

06:09.680 --> 06:13.600
went on to become the standard native application development tool for

06:13.600 --> 06:17.400
Android and you know with 39% of all internet traffic going to Android

06:17.400 --> 06:21.240
phones with Chrome now that's a significant choice. So if you're going

06:21.240 --> 06:26.000
to pick an editor you might want to consider JetBrains for that. There's

06:26.000 --> 06:29.680
one that I have to mention that I absolutely despise mostly because I

06:29.680 --> 06:33.760
had to use it. I was forced to use it. This we got really popular. It's called

06:33.760 --> 06:36.880
Eclipse and there would be groans in the audience if they could if they could if

06:36.880 --> 06:41.880
they could hear that you could hear them right now. Eclipse is probably one of

06:41.880 --> 06:45.960
the most notoriously bloated and horrible integrated development

06:45.960 --> 06:50.200
environments on the planet as far as I'm concerned. However it is everywhere.

06:50.200 --> 06:53.880
There's an Eclipse foundation and there's I mean it's been everywhere since the

06:53.880 --> 06:56.880
90s because Eclipse got really popular because it was really the first

06:56.880 --> 07:02.120
substantial Java editor written in Java and Eclipse itself has gone on to be

07:02.120 --> 07:08.800
embedded in applications because of its framework. IBM for example same time

07:08.840 --> 07:13.400
their chat client is an entire Eclipse instance with Java built in. It's one of

07:13.400 --> 07:18.120
the most bloated pieces of crap I've ever used and not just that but Lotus was

07:18.120 --> 07:24.440
the same way and you see a lot of things around that still use Eclipse for

07:24.440 --> 07:27.360
lots of reasons then you're likely to encounter it if you're doing any Java

07:27.360 --> 07:31.160
development and particularly even in Minecraft if you're doing Minecraft

07:31.160 --> 07:34.040
development. If I had a choice and I was going to be doing Java development

07:34.040 --> 07:38.840
which I would never choose to do I would you know I would probably be reaching

07:38.840 --> 07:43.240
for IntelliJ over Eclipse but again you might not have that choice and Eclipse

07:43.240 --> 07:47.720
is super famous for having all the things integrated into it and it's really

07:47.720 --> 07:51.360
popular with enterprises. So they've developed a lot of enterprise tools

07:51.360 --> 07:54.440
that use it and a lot of times I'll mandate that use it. When I was at IBM I

07:54.440 --> 07:59.120
had to use Eclipse and I figured out ways to get around that and use VI under the

07:59.120 --> 08:03.400
hood so that I could just use Eclipse for the things that Eclipse had to be used

08:03.400 --> 08:07.600
for for like committing code into the source tree and stuff like that. So again

08:07.600 --> 08:11.080
we that's those are the those are the only individual development environments

08:11.080 --> 08:14.600
I'm going to cover just to give you an introduction to them so you know about

08:14.600 --> 08:18.560
them. This is you know beginner boost material here so I'm assuming that you

08:18.560 --> 08:21.760
don't know anything about editors and maybe you've heard somebody say you need

08:21.760 --> 08:24.480
to learn this and you need to know this and hopefully this will help you make

08:24.480 --> 08:28.720
your own decision. The next category of editors is actually the lightweight

08:28.760 --> 08:36.280
text editors. There was something of a revolution started by Sublime and it was

08:36.280 --> 08:40.480
the first so I talked about this before I'm doing it again though because I feel

08:40.480 --> 08:47.280
like it's important to do it in a more succinct way. So Sublime text is still I

08:47.280 --> 08:53.600
believe the fastest visual lightweight editor in class. There's still people

08:53.600 --> 08:58.600
who really love it but it has fallen out of favor for two well three main reasons

08:58.920 --> 09:03.120
the first main reason is that it's highly proprietary. You can use it but

09:03.120 --> 09:07.200
you're supposed to buy it. Number two you can't extend it and there's there's

09:07.200 --> 09:12.800
almost like yelling at each other flame wars in in the support forums because

09:12.800 --> 09:16.240
the person who maintains it which I shall not name can't doesn't listen to

09:16.240 --> 09:20.280
anybody does whatever he wants and and and the people who are trying to expand

09:20.280 --> 09:25.080
it and do their own thing just can't and they're just so frustrated that this

09:25.080 --> 09:29.680
project this part of this product which was so great is just completely not

09:29.680 --> 09:34.080
available to anybody to extend or use. Now you can write Python plugins and

09:34.080 --> 09:39.840
things like that. A lot of people do that. And the third thing the fourth thing is

09:39.840 --> 09:44.520
it's it's all Python. It's Python and C and so extending it is is you know even

09:44.520 --> 09:49.800
if you could it would be really tough to do it. I think it's C++ actually but

09:50.240 --> 09:54.480
fastest editor on the planet for a very long time in the graphics category

09:55.360 --> 10:00.160
you know short of like really simple ones and we'll get to those two. This is a

10:00.160 --> 10:04.080
little bit across between you know the whatever the editor is on your computer

10:04.080 --> 10:08.600
and I don't need to tell you that about you know notepad or simple text or

10:08.600 --> 10:11.960
whatever the editor is it comes on your computer just a plain old text editor

10:12.880 --> 10:16.120
which by the way Jennifer recommends in learning web design you just use that

10:16.120 --> 10:20.920
and that's actually how I learned web design in like what 95 or so I actually

10:21.240 --> 10:27.280
coded my first HTML using simple text on a Mac and that's totally fine. It didn't

10:27.280 --> 10:32.120
have any syntax highlighting you know as a whole world opening up to me after

10:32.120 --> 10:35.960
that point so don't feel bad if that's all you know and then if you have if you

10:35.960 --> 10:40.920
have pop OS or Linux of any kind that the built-in graphic editor is pretty dang

10:40.920 --> 10:45.000
good the text editor so we're going to stick with those are all lightweight

10:45.000 --> 10:48.480
but that's really ultra lightweight right so in between ultra lightweight which

10:48.480 --> 10:53.840
is just text editing and nothing to do with code and the big fat behemoth IDEs

10:53.840 --> 10:58.400
you have these light this lightweight brand of editor called Sublime Text

10:58.400 --> 11:02.120
which is the first one and I'm very gonna quickly gonna go through the

11:02.120 --> 11:05.800
history of that so after Sublime Text came out and had its problems that I

11:05.800 --> 11:14.160
mentioned people ran to Adam and Adam was that it was was GitHub's answer to

11:14.160 --> 11:19.040
Sublime it was an editor developed by GitHub before they were consumed by

11:19.040 --> 11:25.760
Microsoft and it was designed entirely to use JavaScript in fact the entire

11:25.760 --> 11:30.680
Electron API which people love the bag on now because it is responsible for

11:30.680 --> 11:35.960
Eclipse Slack God how many more I mean there's so many applications that have

11:35.960 --> 11:42.080
Electron built into them now and Electron is the framework that was built to

11:42.080 --> 11:49.240
build out of them primarily oh boy what did I just search for Electron so so we

11:49.240 --> 11:56.000
have Electron here I probably should say engine or something no which I say

11:56.000 --> 12:00.760
framework Electron gets a really bad black eye these days because so many

12:00.760 --> 12:06.200
people make very simple applications that have an entire Electron you know

12:06.200 --> 12:10.280
framework built into them Electron just wondering is the combination of the

12:10.280 --> 12:18.200
Chrome web browser and some a web server that by default I think is node and

12:18.200 --> 12:22.440
and the stuff to talk between the two so it's basically like you have a little

12:22.440 --> 12:27.920
miniature web server and web browser all built into one and that way you don't

12:27.920 --> 12:32.000
you know it's it's kind of like a web application so so you'll get you're

12:32.000 --> 12:34.800
gonna hear a lot more about Electron I actually have done a video on Electron if

12:34.800 --> 12:38.040
you can go search up on my YouTube but it's important you understand that

12:38.080 --> 12:42.720
Electron was created to make Adam and as soon as Electron came up you know

12:42.720 --> 12:47.600
everyone's like well maybe we can do better so and it was JavaScript it was

12:47.600 --> 12:52.440
really slow compared to Sublime it's still slow compared to Sublime but Adam

12:52.440 --> 12:56.880
was really lighter than the IDEs and it was extensively using JavaScript which

12:56.880 --> 12:59.880
made it really popular with a lot of people really fast it's still really

12:59.880 --> 13:10.680
popular actually and and then you have brackets so so brackets was Adobe Adobe's

13:10.680 --> 13:16.760
answer to this they said hey we want to make one and I'm almost positive that

13:16.760 --> 13:19.640
it's running off the Electron editor but the Electron framework but I can't

13:19.640 --> 13:25.960
confirm that right now and it basically the same idea it's just Adobe style

13:26.200 --> 13:30.160
different approach you know Adobe I guess wanted to do their own for some

13:30.160 --> 13:35.160
reason I've never met anybody who uses brackets who's not a big die-hard Adobe

13:35.160 --> 13:39.640
fanatic and you know what I'm talking about they are there but that exists and

13:39.640 --> 13:44.920
so that's one of the one of those and then sometime after that Microsoft

13:44.920 --> 13:51.240
decided to get into the game and they said you know what let's make code visual

13:51.240 --> 14:00.520
studio code VS code so that's code.mic let's see code.visualstudio I think it

14:00.520 --> 14:05.520
is yeah code.visualstudio.com now this you know they could they had an

14:05.520 --> 14:10.280
opportunity to really clean things up but they did it and they named it visual

14:10.280 --> 14:15.040
studio code instead of visual studio and this has created crazy confusion for

14:15.040 --> 14:18.120
beginners I don't know how many times somebody's downloaded visual studio

14:18.120 --> 14:21.480
instead of visual studio code because the icons are similar they wanted to just

14:21.480 --> 14:25.800
carry on their branding and maybe you know make people think that visual studio

14:25.800 --> 14:30.920
is actually not the horrible bloated piece of crap that it is and so they you

14:30.920 --> 14:34.400
know they added code in the front of it and it's really tough but just make sure

14:34.400 --> 14:37.760
you go to code.visualstudio this is the number one editor on the planet right

14:37.760 --> 14:42.680
now hands down by every measure this is what most code is being written in

14:42.680 --> 14:47.040
Microsoft does know developers and they they're pretty good at making editors

14:47.080 --> 14:51.280
and so they released they did a lot of things that weren't very Microsofty at

14:51.280 --> 14:54.240
the time fact you could argue that this was the beginning of the new Microsoft

14:54.240 --> 15:01.080
under Sanjay that you know really really embraces open source and as far as we

15:01.080 --> 15:06.360
know and they released this to the world and said here's our version and we're

15:06.360 --> 15:10.440
using Electron and ours is faster than Adam and we still use some techniques

15:10.440 --> 15:13.760
that are the same they have their own plugin architecture which is very very

15:13.800 --> 15:19.160
rich right now and people go crazy over this thing there's people who love

15:19.160 --> 15:24.120
completion I despise that and there's you know it's just really popular with a

15:24.120 --> 15:29.000
lot of people this is the editor that I usually have beginners use so if you're

15:29.000 --> 15:32.560
just coming to the booths for the first time and you've never done any editing

15:32.560 --> 15:36.440
and you don't particularly want to you know rack your brain learning a more

15:36.440 --> 15:39.680
difficult editor that I'm going to talk about in a second this is the editor

15:39.720 --> 15:44.640
that I recommend you pull out either this one or Adam chances are the VS code

15:44.640 --> 15:48.360
is going to be more fun for you out of the gate one of the things that VS code

15:48.360 --> 15:54.320
does very very well as it integrates with with other services that github now

15:54.320 --> 16:01.120
I mean that Microsoft now owns Microsoft bought github and at that meant that they

16:01.120 --> 16:04.520
also bought the Adam editor it's open source but you know and they bought

16:04.520 --> 16:08.560
control of this code and they got all the 10 million developers just so that

16:08.560 --> 16:13.280
we're you know committing to get him all the time and that's very good 7.8

16:13.280 --> 16:16.880
billion dollars they paid I believe and that's a very controversial decision and

16:16.880 --> 16:20.960
that's that was that was after Git lab came out but I'm going down kind of a

16:20.960 --> 16:23.920
rabbit hole there but just understand that this is still under Microsoft's

16:23.920 --> 16:28.840
control the future looks pretty bright for Visual Studio code because Microsoft

16:28.840 --> 16:31.520
does control it other than the fact that they're probably going to blow it out

16:31.520 --> 16:36.240
like they do everything else it it it is integrated very tightly with with

16:36.240 --> 16:40.040
github which is the world's leading source repository even though it's not my

16:40.040 --> 16:42.920
favorite and that's a depth separate conversation I use Git lab for everything

16:42.920 --> 16:48.880
and so that's I'm going to kind of conclude on that except but one other

16:48.880 --> 16:51.920
thing Visual Studio code has Microsoft's

16:51.920 --> 16:55.160
limitry that's embedded in it that you have to actively go in and find and

16:55.160 --> 17:00.880
turn off and nobody does by default so I can't recommend an off that you at least

17:01.040 --> 17:11.320
give VS code in the try VS code him and you can go find it it's actually if

17:11.320 --> 17:15.480
you're using pop a West like me you can just search for it and it'll it'll you

17:15.480 --> 17:19.880
know it this is what it looks like it's exactly the same we're not gonna run it

17:19.880 --> 17:26.280
right now but so so that's what we're looking at and you can download VS

17:26.280 --> 17:30.400
code him all this podium is it's exactly the same project thank God for open

17:30.400 --> 17:35.800
source right it is VS code in every way it's just had all of the telemetry the

17:35.800 --> 17:40.480
tracking and privacy violation and stuff that it is activated by default in

17:40.480 --> 17:46.280
Microsoft's tool there are some things that don't work in it I've heard but for

17:46.280 --> 17:51.880
the most part I think you're gonna be fine to use this I have not well other

17:51.880 --> 17:55.680
than the other day I haven't given a lot of work but I have used this code for

17:55.680 --> 17:58.720
more than a year and a half at one point I was a total convert to VS code and I

17:58.720 --> 18:02.720
actually gave up my favorite editor of all time them for VS code for a good

18:02.720 --> 18:07.000
year and a half and I did a video on that ultimately though I concluded that

18:07.000 --> 18:14.200
even a lightweight text editor for me is is just too heavy and too slow and and

18:14.200 --> 18:18.160
people take great exception with that but but I am not a graphic editor I

18:18.160 --> 18:23.640
never have been because the terminal is always going to be faster I can I could

18:23.640 --> 18:27.720
argue all day that the terminal on every level is faster than any graphic

18:27.720 --> 18:31.240
application period just from the trips that you have to make over to the mouse

18:31.240 --> 18:37.360
all the time and however to use a terminal editor today is is you know it's a

18:37.360 --> 18:40.320
craft you have to like practice it just like the piano or something you can't

18:40.320 --> 18:44.280
just jump in and use it it's pretty hard so let's shift our gears now to the

18:44.280 --> 18:47.480
terminal editors and I want to talk about those and a little bit of the

18:47.480 --> 18:51.000
history of the terminal editors this is that the terminal editors are my favorite

18:51.000 --> 18:56.120
and after that year of VS code it was my own people then my own community

18:56.120 --> 19:00.160
reminded me to that that it was still faster to start up files and everything

19:00.160 --> 19:06.480
with vi and and I it is it's just better so based on that we're going to go back

19:06.480 --> 19:09.720
and I'm going to pull up the chat I'm sure we're going to have all kinds of

19:09.720 --> 19:13.960
people in the chat talking right now but before we do that I just wanted to tell

19:13.960 --> 19:19.520
you about them I think I can probably go pull up so that I have to give you a

19:19.520 --> 19:22.320
quick history on the editors here so this let me go back to the title screen

19:22.320 --> 19:27.960
for sec alright so so when it comes to when it comes to terminal editors you

19:27.960 --> 19:30.640
have to go back into the history of terminal editor and know what a terminal

19:30.640 --> 19:39.320
is first of all a terminal is the thing that you get when you fire up I'm

19:39.320 --> 19:47.560
firing up one right now so you guys can see so this is a terminal editor and I'm

19:47.600 --> 19:52.200
going to show you this actually give me a second I'm going to make it a big screen

19:52.200 --> 20:02.440
when it changes one to be so that it hides stuff and I'm going to go into

20:02.440 --> 20:06.400
preferences at the thing about terminals is that you can set their colors and

20:06.400 --> 20:09.280
everything and I just just want to set that to something that's very readable

20:09.280 --> 20:15.120
for right now instead of the transparency just so you can read it I mean I love

20:15.120 --> 20:18.640
transparency don't get me wrong but it's a little hard to read sometime all

20:18.640 --> 20:23.960
right so so we'll do that and then we'll bring this guy make this thing full

20:23.960 --> 20:31.200
screen alright so actually yeah let's do that so if I bring you back if I bring

20:31.200 --> 20:37.080
us back to to here you see you just get a plain terminal there's nothing going

20:37.080 --> 20:40.500
on it's just a terminal and terminals can be really scary if you don't know

20:40.500 --> 20:44.440
about them you haven't used them before but they're very powerful and we're gonna

20:44.440 --> 20:47.240
talk about terminals at another time we're gonna talk not gonna talk about

20:47.240 --> 20:50.360
terminals right now but I did want to introduce you to different kinds of

20:50.360 --> 20:55.480
terminals so the first terminal is ed and it's actually you could argue that it

20:55.480 --> 21:01.920
was the first terminal ever made X I think predates it but and it is a line

21:01.920 --> 21:07.600
editor and I mean Ed like this Ed and it lets you like you can set in commands

21:07.600 --> 21:13.520
and those commands will it will adjust each line of a file that's coming in and

21:13.520 --> 21:16.560
I don't want to spend time with any of the editor showing you because I know

21:16.560 --> 21:22.240
it'll take too much time and but the second editor after Ed was it what

21:22.240 --> 21:29.440
editor called VI and VI stood for visual mode of X or Ed and so it was in the

21:29.440 --> 21:33.560
other one just allowed you to change one line at a time and and VI let you have

21:33.560 --> 21:38.880
like a whole screen and to just let you see what that looks like so I mean where

21:38.880 --> 21:45.560
are we right now we could probably do damp some md and you see you get you get

21:45.560 --> 21:48.680
this screen this is actually them and we're talking about that but you get

21:48.680 --> 21:53.880
the screen you can type stuff in here and save it and and such right and so

21:53.880 --> 21:58.080
that was visual mode we see how it took out the whole screen so via and actually

21:58.080 --> 22:02.160
there is another I don't think I have it installed but let me do this really

22:02.160 --> 22:12.400
quick install and VI and you got to do my password there and there we go

22:12.400 --> 22:18.240
we'll install this really fast our package is great package systems alright

22:18.240 --> 22:25.400
so so now I can do the same thing I can do and VI and this is this is NVI is

22:25.400 --> 22:30.160
the original VI there is no you can't get the original VI usually these days

22:30.160 --> 22:33.960
it's really hard to find unless you're using a really old computer most

22:33.960 --> 22:38.140
computers come with command call VI which is aliased to a modern version of

22:38.140 --> 22:45.440
it called them they VI improved but the original VI is is is represented in a

22:45.440 --> 22:49.840
program called NVI not to be confused with Neil them and we'll talk about them

22:49.840 --> 22:55.240
and you have them in a second so NVI is a want bug for bug compatible version of

22:55.240 --> 23:02.040
the original VI that came on Unix systems from the dawn of time and and it

23:02.040 --> 23:06.280
continues to be the default editor right here on BSD Unix which is a different

23:06.280 --> 23:10.000
you know kind of operating system we're talking about today but all this

23:10.000 --> 23:14.920
terminal stuff originated with Unix actually Minix and we can go back but

23:14.920 --> 23:18.560
for all intents and purposes Unix was the very first time and you know in

23:18.560 --> 23:22.400
college campuses this was sort of used and then Lennox came about this isn't a

23:22.400 --> 23:26.960
terminal history class right now but we'll talk about later so so this the

23:26.960 --> 23:31.720
question comes up well so what should I use should I use VI and you know or

23:31.720 --> 23:36.000
should I use them so the next generation of editors that came out after this was

23:36.000 --> 23:43.680
the thing called VIM and VIM is just improved VI and and and then to and it

23:43.680 --> 23:47.920
attempts to improve upon that yet another version of them came out called

23:47.920 --> 23:52.160
Neo VIM and rumor has it there's another one called space VIM now which I am not

23:52.160 --> 23:55.360
interested at all I'm not interested at all in the OVM and I actually strongly

23:55.360 --> 23:59.200
discourage you from using it for reasons that I can describe you think I can

23:59.200 --> 24:03.000
send you to my blog post about why you might not want to use it VIM however is

24:03.000 --> 24:08.320
my favorite and and because VIM gives you all the power of customization of your

24:08.320 --> 24:13.680
command line terminal and why would you use a terminal on the command line the

24:13.680 --> 24:19.640
single biggest answer to that is in the case of VI or VIM it's because you can

24:19.640 --> 24:26.960
fully integrate your computer's terminal power into your editor and while you can

24:26.960 --> 24:33.320
pull up a terminal in VS code that is not necessarily the case right you it's a

24:33.320 --> 24:39.720
lot harder to do you can do it but it's not as obvious so you know if you learn

24:39.720 --> 24:44.000
VI and you don't learn or VIM and you don't learn how to integrate the shell

24:44.000 --> 24:47.800
commands and be able to write really quick little shell scripts in order to do

24:47.840 --> 24:51.080
things or you don't learn how to use macros which I took a long time to do

24:51.080 --> 24:55.600
because I was a sort of a VI purist for a very long time you know you haven't

24:55.600 --> 24:58.840
really learned them and you're not gonna really understand a lot of its

24:58.840 --> 25:01.760
advantages you'll just be frustrated because you can't exit you can't escape

25:01.760 --> 25:06.960
which is you know big joke out there so but if you do allow yourself to do the

25:06.960 --> 25:12.400
things you can you you can make the most powerful editor you can imagine in

25:12.400 --> 25:19.160
fact when combined with a really amazing shell like bash and a multi a terminal

25:19.160 --> 25:24.480
multiplexer which allows you to split your screen up into pieces like Tmux you

25:24.480 --> 25:28.400
have what I believe is a far more powerful individual development

25:28.400 --> 25:33.720
environment with without the bloke it's the most efficient way to do editing of

25:33.720 --> 25:38.400
all time not only that but it works everywhere and so I before we go to the

25:38.400 --> 25:43.520
other terminal options I just want to say that VI is installed on every VR

25:43.520 --> 25:50.720
Vim is installed on every Unix and Linux system for the last like 50 years and so

25:50.720 --> 25:54.160
if you are going to be in a situation where you just need to attach to a cloud

25:54.160 --> 25:57.160
machine with you know headless that means it doesn't have a graphic user

25:57.160 --> 26:00.840
interface and you want to be able to apply what you're going to do there you

26:00.840 --> 26:06.520
you just want to learn them or VI and you just you just do because that way

26:06.520 --> 26:09.480
you can make it you can be effective anywhere if you're going to be a hacker

26:09.480 --> 26:12.480
you really need to learn VI if you're gonna be a hacker you need to learn Ed

26:12.480 --> 26:16.160
also because a lot of times when you break into a system you don't even have

26:16.160 --> 26:20.840
that big fancy screen all you have is one line at a time and that therefore Ed

26:20.840 --> 26:25.760
comes in really handy because Ed allows you to edit files there's other ways to

26:25.760 --> 26:29.640
edit files but but Ed that would that's a really strong case for you to learn Ed

26:29.640 --> 26:33.040
if you're just like wanting to be a web developer or you're wanting to just write

26:33.040 --> 26:38.240
you know some go-co for some reason or you know or for whatever you know edit

26:38.240 --> 26:43.840
pod files for Kubernetes or something that that is you know not necessarily a

26:43.840 --> 26:48.720
reason to learn Ed but VI doesn't hurt because it works everywhere but that

26:48.720 --> 26:54.560
brings us to the next option but speaking of defaults some time ago the

26:54.560 --> 26:58.240
Linux foundation and all the Linux people decided to get rid of VI as the

26:58.240 --> 27:03.200
default they didn't take VI off but they they stopped making VI the default

27:03.200 --> 27:08.800
editor and they started using something called Nano which I actually despise but

27:08.800 --> 27:13.480
I understand why people need to use it to get going the reason I despise this

27:13.480 --> 27:18.600
editor and you see me using my my my my my just you know like writing and then

27:18.600 --> 27:23.260
pushing backspace and stuff like that this this nano is by the way is an

27:23.340 --> 27:28.780
is a is a newer version of Pico which has been around for a while and these got

27:28.780 --> 27:33.660
really popular because they were used for mail processing back in the day when

27:33.660 --> 27:37.500
you would use a terminal for mail so people remember them and it is

27:37.500 --> 27:41.380
definitely more intuitive to a beginner but you really have to span the arrow

27:41.380 --> 27:45.500
keys you can't navigate around you can't really integrate your shell you sort of

27:45.500 --> 27:51.180
can and the most annoying thing of all here is that it encourages you to use

27:51.220 --> 27:56.260
control X to exit and and that just the the the see all these things down here

27:56.260 --> 28:01.940
that begin with a carrot those are all as you know control things and and I just

28:01.940 --> 28:06.100
I just really don't like the use of control characters but now I've been

28:06.100 --> 28:09.500
overruled everybody everybody on the planet thinks nano should be the default

28:09.500 --> 28:14.900
editor on Linux now and now now it is to be fair sometimes you would do

28:14.900 --> 28:19.380
something that was really important like you'd be editing you know a scheduler

28:19.420 --> 28:23.340
file and cron job and you would go to edit it and it would throw into vi and

28:23.340 --> 28:26.300
if you didn't know vi you were in trouble because now you couldn't exit

28:26.300 --> 28:29.980
you didn't know how to exit there's no help there's no menu you couldn't get

28:29.980 --> 28:34.420
out of it and that's like a long time you know joke in that in that world in the

28:34.420 --> 28:41.540
world of of vi so so that's why nano is there I can't in good conscious

28:41.540 --> 28:45.900
recommend nano if you're going to use a terminal because the whole reason for

28:45.900 --> 28:49.500
using the terminal is to make it take advantage of the terminal and its

28:49.500 --> 28:53.820
integration with the shell and so that brings us to yet another option which is

28:53.820 --> 28:59.580
very popular with with academics and and and hard hardcore coders and

28:59.580 --> 29:05.900
Linus Torvalds you made Linux and many many other really you know substantial

29:05.900 --> 29:11.540
developers and that's emacs and and I actually do not like emacs I I played

29:11.540 --> 29:15.740
around those emacs curious for a while the reason I'm gonna before I get into

29:15.740 --> 29:19.500
emacs I don't think I could operate it I don't even know if it's on here yeah let

29:19.500 --> 29:25.820
me check and see nope it's not even on here I have to install I that I'm not

29:25.820 --> 29:29.780
going to install I'm not gonna waste your time I would be totally lost using it

29:29.780 --> 29:35.420
some people swear by it people joke and say a max is in an editor it's an

29:35.420 --> 29:38.860
operating system and the reason for that is because emacs was developed

29:38.860 --> 29:44.580
primarily by a guy named amateur stallman who wrote most of the C code for

29:44.580 --> 29:50.780
the utilities that use along with Linux the GNU core utilities he's the guy who

29:50.780 --> 29:55.820
says you should call everything GNU Linux instead of Linux because he believes

29:55.820 --> 30:01.140
his contribution outweighed the Linux kernel itself as well as everybody else's

30:01.140 --> 30:06.380
contribution to the whole Linux system which I totally disagree with but but

30:06.380 --> 30:10.860
he you know made emacs and and emacs is still popular in most of all is using

30:10.860 --> 30:15.500
something called microlinux apparently and the the attraction from emacs is

30:15.500 --> 30:22.260
that it can be customized it's it's it's it's basically the heaviest possible

30:22.260 --> 30:27.260
terminal application you can run for editing anything and it's not just

30:27.260 --> 30:31.500
editing you can like change your file system you can they've got so many

30:31.500 --> 30:34.420
plugins to make it do so many different things they've even got stuff that makes

30:34.420 --> 30:39.060
it behave like vi if you want and and for some people they really love that you

30:39.060 --> 30:43.700
gotta understand that that was a thing when terminals were the only thing in

30:43.700 --> 30:48.260
the house emacs was like really powerful I mean it was really powerful back then

30:48.260 --> 30:52.020
there was no tmux you couldn't split panes up you had screen which allowed

30:52.020 --> 30:55.700
you to have different windows and cut and paste in text back and forth but but a

30:55.700 --> 30:59.860
tool like emacs at the time was I could see how it would be really compelling

30:59.860 --> 31:03.780
particularly because there wasn't no network yet so you know even before

31:03.780 --> 31:08.820
networking existed emacs existed right so but nowadays when we pick a

31:08.860 --> 31:12.980
terminal editor I believe you're picking a terminal editor because you want to be

31:12.980 --> 31:17.460
fast you want to integrate the shell commands and you want to be able to use

31:17.460 --> 31:21.740
your editor anywhere as fast as possible you don't want to wait up for things to

31:21.740 --> 31:26.580
start up and and by the way that means that you can't take your big fancy emacs

31:26.580 --> 31:30.740
configuration with you you've got to know how to be how to edit files on

31:30.740 --> 31:35.700
remote systems without all that it doesn't take very much to copy over that

31:35.700 --> 31:38.260
to a system but you might not even have permissions to do that in certain

31:38.260 --> 31:41.940
enterprise environments you have to have a change ticket to do that and so that's

31:41.940 --> 31:48.580
my my take on it becoming proficient with vi first and then vim allowing

31:48.580 --> 31:53.500
yourself to use the extra vimisms which I finally gave in on allows you to be you

31:53.500 --> 31:59.500
know have the the efficiencies of of emacs locally but and you know and

31:59.500 --> 32:05.700
build it and basically an IDE by combining bash you know vim and and you

32:05.700 --> 32:12.540
know tmux but it also allows you to be to use the same fingers and operations

32:12.540 --> 32:17.740
you know think muscle memory on any system anywhere and emacs doesn't allow

32:17.740 --> 32:20.580
that you'd have to install it as you just saw on all those systems to be able to

32:20.580 --> 32:25.380
use it so so I believe that's a big strike against emacs for anyone who

32:25.380 --> 32:28.740
wants to use more than one computer if you're gonna spend what you're just do

32:28.740 --> 32:31.460
it you're an astrophysicist you're gonna just work on one computer the whole

32:31.460 --> 32:34.180
time and you want to be able to write your own plugins and everything and all

32:34.180 --> 32:39.860
this stuff and then you max might be might be your option there and and by

32:39.860 --> 32:44.420
the way another reason to use vi is because the bindings for vi are built

32:44.420 --> 32:50.260
into everything so the use of hjknl for navigating through the history is the

32:50.260 --> 32:56.660
thing right and by default the the terminal and Linux is set to back to emacs

32:56.660 --> 33:01.100
mode so it's as if you're interacting with an emacs session but if you do set

33:01.100 --> 33:04.700
that show vi you can use that you can use vi mode there is no nano mode or

33:04.700 --> 33:08.060
anything like that and you'll come to really appreciate that because your

33:08.060 --> 33:11.500
fingers will memorize things from the terminal that carry over into your

33:11.500 --> 33:15.860
editor and that didn't goes into like terminal terminal browsing like when I

33:15.860 --> 33:20.260
when I browse you know when I browse the website I'm using one hand and I'm

33:20.260 --> 33:24.580
using the same vi navigation keys because those are once again you know

33:24.580 --> 33:30.660
built-in and it's very common to encounter you know terminal software

33:30.700 --> 33:37.620
that has Vim bindings you can even do a thing called Vim Vimium which can work

33:37.620 --> 33:40.740
in Chrome as a program plugin allow you to navigate your graphics browser without

33:40.740 --> 33:45.380
touching your mouse at all you can just stay there and do vi sorts of things I'm

33:45.380 --> 33:49.500
sure similar things exist in to for the emacs kind of people but as I've said

33:49.500 --> 33:53.780
from the beginning you know there's different stages here and if you're

33:53.780 --> 33:56.740
just starting out and you don't know what to use and you don't want to use text

33:56.740 --> 33:59.900
edit anymore you know the first pick I would say it'd be VS code it's very

33:59.940 --> 34:04.100
intuitive it uses the mouse you it's what you see is what you get but if you

34:04.100 --> 34:07.660
want to you know move into the terminal you're eventually going to have to move

34:07.660 --> 34:11.380
into the terminal just there's just not very much not even in the web development

34:11.380 --> 34:15.620
front-end world there's not very much that doesn't force you at some point to

34:15.620 --> 34:20.380
go on to a terminal to do something and I'm not going to go into all those

34:20.380 --> 34:24.980
reasons you would have to use a terminal but these days using a terminal is sort

34:24.980 --> 34:28.620
of mandatory skill for a technologist and the particularly in the cloud

34:28.660 --> 34:33.140
environment and because it's just ubiquitous it's just everywhere it gives

34:33.140 --> 34:38.100
you so much power and so if that is true you know and you have to use it you

34:38.100 --> 34:43.020
might as well I think you might as well learn the best editor for the terminal

34:43.020 --> 34:47.620
on any terminal so that you can be productive no matter what and if you

34:47.620 --> 34:52.140
want to take it up a notch and use emacs some people use emacs and vi

34:52.140 --> 34:58.020
there's a couple of really great BSD people in here who use they'll use emacs

34:58.260 --> 35:01.260
and they'll also you vi depending on what system they're on and that's only

35:01.260 --> 35:04.420
two terminal editors to learn that's not too bad in a way you're going to be

35:04.420 --> 35:09.620
able to do a VS code on that by the way just just say no to all of the remote

35:09.620 --> 35:13.380
editing crap that's coming out in VS code and all these graphic editors that are

35:13.380 --> 35:18.500
claiming to be able to integrate remote file editing what they're doing is under

35:18.500 --> 35:22.340
the hood they're copying down a file copy allowing you to edit it and then

35:22.340 --> 35:27.220
they're synchronizing up that copy to the server there's so many things that

35:27.260 --> 35:33.780
can go wrong with that I just can't even begin to comprehend all the possible

35:33.780 --> 35:37.380
things that could go wrong with that and if you are in charge of editing files

35:37.380 --> 35:41.460
on a remote system first of all why are you doing that right you should be

35:41.460 --> 35:46.340
staging it if you are somehow doing that one of the legitimate reasons to be

35:46.340 --> 35:50.260
doing that would be responding to an emergency as I did many times you know

35:50.260 --> 35:53.980
working as a system administrator and when you have to remotely connect to a

35:53.980 --> 35:59.060
system and edit files there the last thing you want in the way is a visual

35:59.060 --> 36:03.940
editor that's run by Microsoft I mean that I can't even begin to imagine the

36:03.940 --> 36:08.500
terror of trying to be a system administrator and do that so you know

36:08.500 --> 36:12.500
just if you're if that's where you're headed in cybersecurity and say

36:12.500 --> 36:17.300
in the system of engineering and even you know full-stack development as opposed

36:17.300 --> 36:21.940
to just running engineering then I would eventually move off of this code you

36:21.940 --> 36:24.820
can still use it you know if you want to do you know big web projects it's

36:24.820 --> 36:28.380
really good for that but if you if you're gonna start you know getting

36:28.380 --> 36:31.540
serious about development see see development is pretty much all on the

36:31.540 --> 36:35.140
command line that's kind of the culture you can do it in BS code but you know

36:35.140 --> 36:38.260
using make files all this stuff you're gonna need to learn the terminal so I

36:38.260 --> 36:44.980
would say you know probably 70 to 80% of all the careers in technology involve

36:44.980 --> 36:49.500
the terminal and of those careers you know probably 50 of those percent of

36:49.500 --> 36:54.340
those careers involve using a terminal on multiple computers without having an

36:54.340 --> 36:58.380
editor installed on them that you would stall and therefore my justification is

36:58.380 --> 37:04.780
learn Vi and then learn them and if you want to do that I will do videos on how

37:04.780 --> 37:08.380
to do that how to learn Vi a little bit of a spoiler here though if you want to

37:08.380 --> 37:11.700
just jump right in with Vi you can actually go read the little guide I made

37:11.700 --> 37:20.460
called Vi Survive so you can go rwx.gg slash Vi Survive and this is just the

37:20.460 --> 37:24.540
minimum you need to know to get around to Vi and this does or VIM and this does

37:24.540 --> 37:28.180
make use of the arrow keys because if you're using nano and you want to get

37:28.180 --> 37:32.700
started with Vi and not start with nano this is the way to do it this is the way

37:32.700 --> 37:39.140
to do it rwx.gg slash Vi Survive and that I'll talk you through how to how to

37:39.140 --> 37:44.140
just you know use Vi as if it were nano and then you can slowly add on more

37:44.140 --> 37:47.980
skills that's how Vi learning works I'll do the different videos on Vi

37:47.980 --> 37:52.740
specifically as part of the terminal mastery series but I just wanted to do

37:52.740 --> 37:56.580
this one on editing all right so that concludes this video I'm going to turn

37:56.580 --> 38:00.220
and take some comments I'm sure I'm sure that I'm sure the forums are full of

38:00.220 --> 38:03.820
the comments are full of people raging about different things that I've said

38:03.820 --> 38:10.100
here and as I've said all along be your own person be a critical thinker do your

38:10.100 --> 38:14.180
own analysis for your own needs and make your own decision don't take my word for

38:14.180 --> 38:21.620
it don't take their word for it don't let any pedantic argumentative jerk decide

38:21.620 --> 38:25.220
for you what's best for you and that includes me because I can be that guy so

38:25.220 --> 38:29.260
you make your own decision but taking a bunch of information make an informed

38:29.260 --> 38:32.820
dependence and be ready to change your opinion when you have new opinions when

38:32.820 --> 38:36.700
you have new information but don't don't let anyone shame you because you're

38:36.700 --> 38:40.980
using the wrong editor and by the way if I ever do that I'm always joking right I

38:40.980 --> 38:45.620
do I have fun we all have fun but but and that's that's fine that's the part

38:45.620 --> 38:51.020
of natural natural healthy debate but but you know just take that with a great

38:51.020 --> 38:55.580
assault when we do that I'm gonna turn to the chat now at at potentially what

38:55.580 --> 39:02.740
will be my peril so I'm gonna put that on here so here we go Pico Pico came

39:02.780 --> 39:07.900
with pine oh yeah Pico was a pine pine was a male editor no nano yeah I made a

39:07.900 --> 39:10.460
thing about nano

39:12.460 --> 39:17.700
you max always makes me picture emack Mendy the people the problem with emacs

39:17.700 --> 39:20.740
is the same as the clips people are already making emacs based applications

39:20.740 --> 39:26.380
are they really didn't know that when I browse the lips that I'm using one hand

39:27.300 --> 39:34.180
yeah I know that sounds pretty funny doesn't PG just quoting I walk into

39:34.180 --> 39:37.740
those things all the time obviously I didn't mean it I'm browsing a text-based

39:37.740 --> 39:46.580
website so yeah text oh you're the vimeo you're thinking you're talking about

39:46.580 --> 39:52.060
vimeo okay why don't you know them neo van is a disaster that never needed to be

39:52.060 --> 39:56.860
made and and has been completely superseded by all of the additions that

39:56.860 --> 40:04.220
been made and I'm gonna just if you want to get my my full story on them let me

40:04.220 --> 40:13.780
just on on Neil them I can give that to you here so if you go to no pet or noob

40:13.780 --> 40:19.100
G Vim I'm not a fan of graphics Vim although somebody informed me the other

40:19.180 --> 40:25.540
day that you can interact with the shell using graphics G Vim but to me that

40:25.540 --> 40:30.020
defeats the whole entire purpose of using them at all if you're using Vim you

40:30.020 --> 40:34.860
want to integrate the shell and if you're using Vim on Windows with no bash

40:34.860 --> 40:39.420
shell I think it's a waste so I don't that's not the way God intended it to be

40:39.420 --> 40:45.620
used this put it that way many have keyboard shortcuts yes have Vim

40:45.980 --> 40:49.460
shortcuts yes I like using a terminal but never really use terminal editors for

40:49.460 --> 40:52.740
anything other than reading manual pages well that's not an editor in the

40:52.740 --> 40:56.540
first place you're not you're not you're not using an editor to read a man page

40:56.540 --> 41:02.020
you're using a pager they're like less or more I think remote editing is

41:02.020 --> 41:04.420
sometimes used for working on a machine that is much more powerful for huge

41:04.420 --> 41:09.140
coach bases with specialized hardware I could see that right that might be that

41:09.140 --> 41:14.500
may be fine that might be an use case for that otherwise not a fan of that pretty

41:14.500 --> 41:19.020
calm here yeah are there good resources for learning V of them but the sounds of

41:19.020 --> 41:25.020
it you can't just dive in there are many and if you I've listed them on RWX I

41:25.020 --> 41:31.420
haven't been to a whole thing on that RWX slash I want to say tools editor Vim

41:31.420 --> 41:35.580
I don't remember let me go check here

41:38.740 --> 41:47.060
let me see here can't find them there we go editors VIM go VIMisms so there's

41:47.060 --> 41:55.100
your there's your link well I'll just do this

41:55.100 --> 42:02.940
RWX dot gg tools editors and I have a number of things you can use there the

42:02.940 --> 42:08.740
VIM tutor is probably the best even though it's out of date I I would never

42:08.740 --> 42:13.140
use anything but the VIM that that is managed by the original creator of VIM

42:13.140 --> 42:16.660
one of the complaints against VIM the reason you know VIM was created is they

42:16.660 --> 42:21.820
the two biggest complaints against it were it was not it was not conducive to

42:21.820 --> 42:28.820
community development which I believe is BS and number two that they didn't have

42:28.820 --> 42:33.780
concurrency and that was immediately fixed so if anything good came out of

42:33.780 --> 42:38.340
Neil Vim it was the pressure for for Brom to add that and and he did and I

42:38.340 --> 42:42.300
believe something as important as VIM needs to be managed by one person or two

42:42.300 --> 42:48.340
and that's it I've seen committees destroy applications and and I've

42:48.340 --> 42:52.900
actually put my advice about not using Neil Vim out there in fact I could

42:52.900 --> 42:57.580
probably find that for you right now the biggest one is all the things they just

42:57.580 --> 43:02.660
ripped out without even asking anybody there's like a tons of changes that they

43:02.660 --> 43:05.860
made they didn't even ask anybody and but they made it so you can use plugins

43:05.860 --> 43:09.820
with node I mean all the technical and architectural decisions behind Neil Vim

43:09.820 --> 43:14.100
are almost one after the other a testament to horrible technical design

43:14.100 --> 43:20.020
and architecture and I just I cannot overstate that I hate it I hate it I just

43:20.020 --> 43:26.860
I really hate it it's just really bad hi I can't I'm in the middle of us of an

43:26.860 --> 43:36.060
actual educational video but I'll be right there I'll be right there okay so so

43:36.060 --> 43:46.220
that's my my complaint against Neil Vim if you want to know and so alright what

43:46.220 --> 43:51.580
else we got here a new follower here hey how's it going whatever can I use if I

43:51.580 --> 43:55.860
have to develop on a remote computer like a Linux cloud machine vi the end I

43:55.860 --> 44:00.220
just made a case for that use vi or VIM that's why you should learn it uh-huh and

44:00.220 --> 44:04.340
the way to learn that is use VIM tutor if you want to you can use eventually you

44:04.340 --> 44:11.900
can use VIM genius online there's open I think it's open VIM which is another one

44:11.900 --> 44:13.940
then we kind of get you started on that there's a number of them they're all

44:13.940 --> 44:20.700
listed on my on the VIM editors H URL that I posted when it comes to graphical

44:20.700 --> 44:23.980
editors I always have no pad plus plus besides the other more powerful ones it

44:23.980 --> 44:27.780
is just the fastest graphical one yeah I agree I mean no pad plus plus is really

44:27.780 --> 44:34.260
great it I I still think no pod no pad plus plus I didn't mention at all no pad

44:34.260 --> 44:42.740
plus plus fits between no pad and sublime I believe it is really fast but it you

44:42.740 --> 44:45.660
know and it is graphical it's very intuitive because you're just using your

44:45.660 --> 44:50.260
mouse and it's got a little bit of more umph in it besides the plain old no pad

44:50.260 --> 44:56.180
particularly it understands utfa you know that that's a thing so so that's you

44:56.180 --> 44:59.100
know you might want to might want to give that one a try to I know people that

44:59.100 --> 45:03.460
still love no pad plus plus and and I use it for a while a long time ago but I'm

45:03.460 --> 45:08.460
I'm pretty much a if I have to use a Windows machine and that would be the

45:08.460 --> 45:14.700
thing but these days Linux is so prevalent on on Windows that I got you

45:14.700 --> 45:18.220
know a Linux terminal at my fingertips I don't I don't need to use any any you

45:18.220 --> 45:26.420
know Windows only kind of editor for any reason did I miss the 2020 dumpster yeah

45:26.420 --> 45:33.420
it's gone what we'll do that again I'm glad it was a hit which one yeah and so

45:33.420 --> 45:37.660
yeah thanks for the direct the the 2020 dumpster we'll come and do that again I

45:37.660 --> 45:41.340
am gonna wrap up the stream for right now thanks for participating in our

45:41.340 --> 45:48.220
little dialogue about this if you have any specific questions that you know you

45:48.220 --> 45:53.100
you want to go into ask them in the discord you can ask me directly if I'm

45:53.100 --> 45:57.140
available but but you know we have a whole discord just for this kind of

45:57.140 --> 46:01.020
thing asking questions getting getting in there but I really really felt like I

46:01.020 --> 46:10.500
needed to go break this down because for the rest of or Vim Neo Vim and Vim

46:10.500 --> 46:14.780
plug-in will be a support I felt like how you do when you and then came out I'm

46:14.780 --> 46:18.900
seeing more and more and then plugins these days yeah no they stink if you're

46:18.900 --> 46:24.500
first of all okay I'm glad you brought that up if you are searching to use a

46:24.500 --> 46:31.820
Vim that allows a lot of plugins if you're picking a Vim editor because of

46:31.820 --> 46:35.420
it uses more plugins or because it's prettier you're picking it for the

46:35.420 --> 46:38.860
wrong reason you might as well just use VS code or a graphic editor at that

46:38.860 --> 46:44.140
point and I strongly believe in that if you're seeking to use to do plugins

46:44.140 --> 46:48.860
instead of integrating shell scripts you're not doing it right in my opinion

46:48.860 --> 46:53.020
you're doing it wrong you look if you're gonna reach for a plugin at least

46:53.060 --> 46:57.300
before you reach a plugin learn how to use vi properly if you don't know how

46:57.300 --> 47:00.220
to if you don't know how to use exclamation point and vi and if you

47:00.220 --> 47:04.420
don't know what I'm talking about it's just making my point you don't know how

47:04.420 --> 47:08.220
to use vi on Vim you're not in a position to make a decision about stop

47:08.220 --> 47:14.020
using it because it doesn't have plugins and and you need to practice doing the

47:14.020 --> 47:19.380
standard way of using Vim integration into the shell before you start punting

47:19.420 --> 47:23.820
and looking for every plugin under the sun and for and picking a tool that will

47:23.820 --> 47:27.900
allow you to plug in to make a plugin in 50 different languages sometimes

47:27.900 --> 47:31.900
specificity is the thing sometimes you don't want 50 options sometimes you

47:31.900 --> 47:35.420
don't want to have a configuration file in 20 different formats sometimes you

47:35.420 --> 47:39.820
want limitations on your types sometimes you want strict typing so all of those

47:39.820 --> 47:45.020
architectural principles apply to Vim you don't want too much choice you want

47:45.020 --> 47:48.460
the right choice and that's why Python won over Pearl because it was one best

47:48.500 --> 47:54.060
way right so my biggest complaint against Neo Vim is this idea that we

47:54.060 --> 47:58.060
should expand the crap out of it and put whatever we want in and and rip up

47:58.060 --> 48:01.140
rip out stuff that's been there for years and it's not just because I'm an

48:01.140 --> 48:05.340
old guy it's because the entire approach is broken the entire architectural

48:05.340 --> 48:10.660
mindset of the Neo Vim team is just totally bored and and I that's

48:10.660 --> 48:14.660
that's my opinion on that I if you disagree that's fine go use it and have

48:14.660 --> 48:18.220
fun there's lots of really respectable awesome people who disagree with me

48:18.300 --> 48:24.100
very strongly primegian comes to mind big and bot comes to mind I'm not these

48:24.140 --> 48:26.780
these are great people and great human beings I love them I'm really glad that

48:26.780 --> 48:30.460
I get to be count myself among the streamers with them but there is no way

48:30.740 --> 48:35.420
I will ever be okay with Neo Vim unless I'm presented with new information that

48:35.420 --> 48:39.900
that contradicts what I've just told you what I see them doing is bloating the

48:39.900 --> 48:44.820
crap out of them in ways that are unnecessary and defeat the purpose for

48:44.820 --> 48:48.700
them in the first place the reason that you're picking them in the first place

48:48.820 --> 48:53.620
above all is ubiquity you want to use VI everywhere you might be able to go

48:53.620 --> 48:58.020
here and use it in fact I feel guilty using some of my vimisms but I'm okay

48:58.020 --> 49:01.500
with it and by that argument you can almost say well fine I'm going to use

49:01.500 --> 49:05.100
all the plugins I can I'm going to let myself go crazy as long as I remember

49:05.100 --> 49:09.700
the fundamental navigation elements of VI and stuff so that I'm effective on an

49:09.700 --> 49:13.540
AIX machine or a Solaris machine or anything else that I had to administer

49:13.620 --> 49:17.780
while I was being paid to administer machines and those jobs still exist so

49:17.780 --> 49:23.140
my point is that if you know before you give in to the to the tendency to

49:23.140 --> 49:29.540
expand and bloat your stuff out for questionable reasons at least consider

49:29.540 --> 49:34.100
using what's already there and that includes learning shell integration

49:34.100 --> 49:37.540
when you learn shell integration with the exclamation point I call it VI magic

49:37.620 --> 49:38.500
here go read this

49:41.860 --> 49:46.900
rwxigg vi magic will teach you what I'm talking about the specific thing when

49:46.900 --> 49:52.820
you understand how to use true vi magic then you're in a position to say well

49:52.820 --> 49:57.540
this plugin covers something I don't have I want the groove box thing I want

49:57.540 --> 50:03.460
whatever you know I do have plugins I do I use plugins but but I'm very picky

50:03.460 --> 50:06.340
about the plugins because they have to be downloaded on every system I'm going to

50:06.340 --> 50:10.500
use them on you need to make really sure that you're using a plugin manager that

50:10.500 --> 50:13.860
can be turned off or disabled if there's if the if the plugin manager is not on

50:13.860 --> 50:17.940
the system and all of those are things that that are not an option for new of

50:17.940 --> 50:22.740
him if you use a new of him specific configuration you've just blown away your

50:22.740 --> 50:26.660
ability to use that configuration on any remote system by default

50:28.180 --> 50:32.180
you better have a damn good reason to do that if you picked them because you want

50:32.260 --> 50:36.420
to be able to use it on multiple systems and I don't think there's ever a decent

50:36.420 --> 50:41.620
enough reason for that vim however is everywhere so you can actually port your

50:41.620 --> 50:46.980
you can scp in one command your vmrc over to any other system use that edit your

50:46.980 --> 50:51.300
files over there without a problem if you've used neo vmisms in your vmrc and

50:51.300 --> 50:54.980
haven't done it properly you've just blown away your ability to customize any

50:54.980 --> 50:59.140
remote system on the fly because you cannot install neo vm on that cloud

50:59.140 --> 51:02.020
machine without approval from your higher ups that for another change ticket

51:02.980 --> 51:09.940
just say no to neo vm i'm telling you say no vim is the is the standard editor

51:09.940 --> 51:14.740
for this kind of thing uh and if you do go with neo vm be damn sure you know what

51:14.740 --> 51:18.660
you're doing make sure you know how you use the shell make sure you know that

51:18.660 --> 51:24.180
those plugins need to be encapsulated in some vmrc uh code that keeps them from

51:24.180 --> 51:28.180
being unusable on a remote system and if you don't know how if you know anything

51:28.180 --> 51:31.860
about what i just said you have no business using neo vm but the reason i

51:31.860 --> 51:35.380
get so spun up about this is because they hear from somebody on some switch stream

51:35.380 --> 51:38.500
or somewhere that they should just go through that on they end up throwing it

51:38.500 --> 51:42.580
on and they destroy their ability to be to be a performant you know administrator

51:42.580 --> 51:45.620
and developer on a remote system because they somebody told them neo vm was the

51:45.620 --> 51:50.900
thing that they should use i spoke in my piece i think it's probably enough for me

51:53.220 --> 51:55.700
i think the plugins are an interesting aspect of how vim is growing over the years

51:55.700 --> 52:02.580
i agree i agree and i'm not and plug is amazing right uh plug is um i mean plug

52:02.580 --> 52:08.420
the plug is the plug i i i wish that the native plugins within vim uh were good

52:08.420 --> 52:13.140
enough but they're not and the plug plug in manager is amazing it keeps all your

52:13.140 --> 52:17.220
plugins in a separate directory uh if you look at my vmrc by the way i'll send

52:17.220 --> 52:23.700
that to you guys if you want to see it uh it's in rwx.gg uh i'm sorry it's uh

52:23.700 --> 52:28.900
it's in my git lab so just go to artybex live uh artybex rob.live and click on

52:28.900 --> 52:32.420
github or git lab you can go to my dot files and you can go find my vmrc if you want to

52:32.420 --> 52:39.140
spelunk it and by the way it is very common it's a common rite of passage to to steal somebody else's

52:39.140 --> 52:44.180
vmrc and and to just use it and understand it but make sure you go through the lines and

52:44.180 --> 52:48.340
get a sense of what it's doing because everybody's is highly customized and it's actually it's kind

52:48.340 --> 52:52.900
of a rite of passage to be a terminal user to do that uh along with you know understanding your

52:52.900 --> 52:58.740
own bash rc uh not to mention a full-time hobby just playing with your configuration i i cannot

52:58.740 --> 53:04.740
get enough of of of that i constantly love tweaking my terminal config it's it's really fun i enjoy

53:04.740 --> 53:09.460
that more than messing with my operating system uh people ask me all the time well what manager

53:09.460 --> 53:13.140
you're using i have window managers and goes whatever one is going to get me tmux because

53:13.140 --> 53:17.940
i don't care about the window manager i have a pain so there'll be other videos on that i have

53:17.940 --> 53:22.020
already done some videos about it but i'll be redoing them um these videos are all going to be

53:22.020 --> 53:26.180
edited polished and you know scrubbed and put up on vimeo for subscription if you'd like uh

53:26.180 --> 53:30.980
but the raw youtube video that i just made here will will remain standing for as long as youtube

53:30.980 --> 53:35.620
allows it to stay here and i really appreciate you guys coming by and spending some time here

53:36.340 --> 53:42.260
and uh i'm going to go ahead and i think we made that through that pretty well didn't we guys we

53:42.260 --> 53:50.980
didn't argue too much by i'm going to come back in uh 10 20 minutes and we're going to

53:50.980 --> 54:01.940
do some more web development

54:20.980 --> 54:31.940
so

