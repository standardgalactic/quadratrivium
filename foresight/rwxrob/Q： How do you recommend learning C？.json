{"text": " Alright, so another quick question and answer video. How do you recommend learning C? My current recommendation is by getting a book called Head for C. I'll go see if I can show it to you. And we've had people that know C really well kind of evaluate this book. We went through it last year at $0 for the paperback. I don't believe that for a second. It's a fun book. It has a few problems in it, but people who do C coding have confirmed that it's actually pretty good for absolute beginners. I prefer the mnemonic brain-friendly, silly approach to C coding than the really dry K&R C book. So that is my recommendation. Just get that book and work through it. It doesn't come with a lot of answers. If you want to do that, in fact, I should probably put it on the calendar. We will be doing C in December. So it's kind of a Christmas tradition, C for Christmas. And I want to say December, we're out the week of Christmas. So this will be the week of C. So this is going to be C coding. I don't know if we're going to do it all on one day. We'll probably do it a little bit every day. And I'll just put it here. So head first, C. I talked about, I promised that I was going to do Haskell on Christmas and I actually think it's more important that we learn C because it's just so much more important than Haskell, honestly. Haskell School, Erlang is really cool. I wanted to learn Erlang. That was the one. But every year, I feel like it's really important that you go back to C and you review it and you learn about it because it informs everything else that you do related to the computer. So that's my recommendation. Get it and start writing C in it. If you want another book, there's another book called Mastering Algorithms in C, which I've started to work through. And I just really, really love the style of it. It's not really dense. It is dated, but it's C, so it's still really relevant. I just absolutely love Kyle Lodone's style. I recommended this to other people and they've come back saying, oh my God, this book is so amazing. Kyle was an astronomer and a coder for a very practical experience and approaches this whole thing from a very, very practical perspective and pretty much throws out all of the bombastic verbose extra stuff you find in the textbook. So those are my two favorites. I do not pretend to be a C master at any level. Last year when I did the C, I had people that were C masters here, particularly VMT. Thank you for that. But showing me how C actually works and the gotchas and things and you may be asking, well, why learn C? So the answer to that is so that you can understand all the other things, particularly if you think you want to learn Rust. C and Rust to go very good together. C and go go very good together. In fact, I've heard go describe by Rob Pike as an easier C. I've heard the same thing about Rust that was a safer C. Well, if you don't know C, then you don't know how to contrast it with these other languages. So learning C, even if you never code anything professionally in it, it's still valuable no matter what. C was invented to write Unix. That's right. The first version of Unix was written in assembly and like, man, this is too crazy. We got to do something better and they did it really low level and really close to the hardware, had ultimate control of every bit and everything. And so they made C. They made C. Dennis Richie and the gang, they made C. Ken Thompson. And I still, I was just talking about this the other night, I think Dennis Richie is one of the most famous yet unsung heroes of our time died the same week as Steve Jobs, nobody knew. But everything you're using right now is written in C, literally everything at some level, including JavaScript. So anyway, it is frustrating. Rust can be frustrating if you have to fight with a barrel checker, but at least if you learn C, you'll understand it. Do I think you should learn Rust? Yes, that's a different question. But honestly, I really, really do think that you should learn C first, so that when you learn Rust, you'll see how awesome it is or where it lacks in other areas, you know, the pros and the cons. And there are, and you won't understand those until you understand C. So the best way to pick it up if you're an absolute noob and you just don't, you don't want academics speak too much of it is head first C, in my opinion, it's kind of fun. You write a game in there, you write an old school Asteroids game in there. Yeah, in C. And we never got to it last year, but, you know, and then eventually, you know, you're going to want to do something a little bit more probably, and maybe you want to do algorithms, mastering algorithms to see now, why, why would I do algorithms in C? People like, do I need to spend time learning data structures and algorithms? The answer is yes. Maybe not early on in your programming, you know, path. I never did. I didn't go to computer science, and maybe I'm a worse person for it. But I did eventually learn a lot of amazing things from the data structures and algorithms book, but I learned them on my own when I needed them. And you're going to see me coding a lot of that today, actually, later on. I'm kind of a thing. I'm going to be coding a parser and a compiler for a language called Kegamel using my other language that I wrote called Pagan. And I had to learn things like graph theory, and, and, you know, stacks and cues and all of these things. And I had to teach myself those things in order to do those things, those very fundamental computer science concepts. So but mastering algorithms in C, you know, Kyle at the beginning of the book, makes a case for having to have that and, and needing to know those things like it'll just make you, it'll just inform all of your other approaches to coding, even though you don't have to be able to spit it out in an elite code interview exam or something. It's more important that you know how these patterns can be applied at a macro level. And one of the reasons I think that mastering algorithms in C is such a good thing that C is a great language for this is because C by default doesn't come with those things. And the last time I said that, I had a lot of C coders say, Oh yeah, sure it does. And it does if you have the right library, for example, a map and associate of array, right? Or even an array, period. They're totally different. There's no, there's not even strings, technically speaking, technically speaking, C does not have strings, string has character arrays. So these things that we take for granted in these higher level languages don't exist in C, which makes C a really great language, in my opinion, for, you know, creating something that you actually have a chance of like maybe if you're writing your own bubble sort, and any official capacity, you're probably doing it wrong because it's been written safer and better in another library. But it doesn't hurt for you to write it and see because you can understand why, you know, why, why it doesn't have it. So I actually do think learning algorithms and data structures in C is a good thing. I think go is probably the next best thing to learn those kind of things. Imagine this array of characters being a string, exactly. And so anyway, that's all I have to say about C. If you want to learn more about C with me and struggle and suffer and understand what the stack and the heap and the constant section are and why they're there. But by the way, the head first book is phenomenally good at illustrating that entire thing. I never fully understood that until I read that book. And I still, I still feel like I'm missing things. But mostly because, you know, I have to go through it again every year because I forget. So that's what I think of C.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 3.44, "text": " Alright, so another quick question and answer video. How do you recommend learning C?", "tokens": [50364, 2798, 11, 370, 1071, 1702, 1168, 293, 1867, 960, 13, 1012, 360, 291, 2748, 2539, 383, 30, 50536], "temperature": 0.0, "avg_logprob": -0.15037728699160294, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.016390545293688774}, {"id": 1, "seek": 0, "start": 5.44, "end": 11.44, "text": " My current recommendation is by getting a book called Head for C. I'll go see if I can show it to", "tokens": [50636, 1222, 2190, 11879, 307, 538, 1242, 257, 1446, 1219, 11398, 337, 383, 13, 286, 603, 352, 536, 498, 286, 393, 855, 309, 281, 50936], "temperature": 0.0, "avg_logprob": -0.15037728699160294, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.016390545293688774}, {"id": 2, "seek": 0, "start": 11.44, "end": 21.2, "text": " you. And we've had people that know C really well kind of evaluate this book. We went through it last", "tokens": [50936, 291, 13, 400, 321, 600, 632, 561, 300, 458, 383, 534, 731, 733, 295, 13059, 341, 1446, 13, 492, 1437, 807, 309, 1036, 51424], "temperature": 0.0, "avg_logprob": -0.15037728699160294, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.016390545293688774}, {"id": 3, "seek": 2120, "start": 21.2, "end": 32.0, "text": " year at $0 for the paperback. I don't believe that for a second. It's a fun book. It has a few", "tokens": [50364, 1064, 412, 1848, 15, 337, 264, 3035, 3207, 13, 286, 500, 380, 1697, 300, 337, 257, 1150, 13, 467, 311, 257, 1019, 1446, 13, 467, 575, 257, 1326, 50904], "temperature": 0.0, "avg_logprob": -0.1454424796166358, "compression_ratio": 1.5051546391752577, "no_speech_prob": 0.12247233092784882}, {"id": 4, "seek": 2120, "start": 32.0, "end": 37.2, "text": " problems in it, but people who do C coding have confirmed that it's actually pretty good for absolute", "tokens": [50904, 2740, 294, 309, 11, 457, 561, 567, 360, 383, 17720, 362, 11341, 300, 309, 311, 767, 1238, 665, 337, 8236, 51164], "temperature": 0.0, "avg_logprob": -0.1454424796166358, "compression_ratio": 1.5051546391752577, "no_speech_prob": 0.12247233092784882}, {"id": 5, "seek": 2120, "start": 37.2, "end": 45.2, "text": " beginners. I prefer the mnemonic brain-friendly, silly approach to C coding than the really dry", "tokens": [51164, 26992, 13, 286, 4382, 264, 275, 25989, 11630, 3567, 12, 22864, 11, 11774, 3109, 281, 383, 17720, 813, 264, 534, 4016, 51564], "temperature": 0.0, "avg_logprob": -0.1454424796166358, "compression_ratio": 1.5051546391752577, "no_speech_prob": 0.12247233092784882}, {"id": 6, "seek": 4520, "start": 45.92, "end": 52.24, "text": " K&R C book. So that is my recommendation. Just get that book and work through it.", "tokens": [50400, 591, 5, 49, 383, 1446, 13, 407, 300, 307, 452, 11879, 13, 1449, 483, 300, 1446, 293, 589, 807, 309, 13, 50716], "temperature": 0.0, "avg_logprob": -0.12649803161621093, "compression_ratio": 1.3926701570680629, "no_speech_prob": 0.06007375568151474}, {"id": 7, "seek": 4520, "start": 53.28, "end": 58.88, "text": " It doesn't come with a lot of answers. If you want to do that, in fact, I should probably", "tokens": [50768, 467, 1177, 380, 808, 365, 257, 688, 295, 6338, 13, 759, 291, 528, 281, 360, 300, 11, 294, 1186, 11, 286, 820, 1391, 51048], "temperature": 0.0, "avg_logprob": -0.12649803161621093, "compression_ratio": 1.3926701570680629, "no_speech_prob": 0.06007375568151474}, {"id": 8, "seek": 4520, "start": 58.88, "end": 66.08, "text": " put it on the calendar. We will be doing C in December. So it's kind of a Christmas tradition,", "tokens": [51048, 829, 309, 322, 264, 12183, 13, 492, 486, 312, 884, 383, 294, 7687, 13, 407, 309, 311, 733, 295, 257, 5272, 6994, 11, 51408], "temperature": 0.0, "avg_logprob": -0.12649803161621093, "compression_ratio": 1.3926701570680629, "no_speech_prob": 0.06007375568151474}, {"id": 9, "seek": 6608, "start": 66.08, "end": 84.48, "text": " C for Christmas. And I want to say December, we're out the week of Christmas. So this will be the", "tokens": [50364, 383, 337, 5272, 13, 400, 286, 528, 281, 584, 7687, 11, 321, 434, 484, 264, 1243, 295, 5272, 13, 407, 341, 486, 312, 264, 51284], "temperature": 0.0, "avg_logprob": -0.1672503099603168, "compression_ratio": 1.4809160305343512, "no_speech_prob": 0.1942896991968155}, {"id": 10, "seek": 6608, "start": 84.48, "end": 93.68, "text": " week of C. So this is going to be C coding. I don't know if we're going to do it all on one day.", "tokens": [51284, 1243, 295, 383, 13, 407, 341, 307, 516, 281, 312, 383, 17720, 13, 286, 500, 380, 458, 498, 321, 434, 516, 281, 360, 309, 439, 322, 472, 786, 13, 51744], "temperature": 0.0, "avg_logprob": -0.1672503099603168, "compression_ratio": 1.4809160305343512, "no_speech_prob": 0.1942896991968155}, {"id": 11, "seek": 9368, "start": 94.56, "end": 102.08000000000001, "text": " We'll probably do it a little bit every day. And I'll just put it here. So head first, C.", "tokens": [50408, 492, 603, 1391, 360, 309, 257, 707, 857, 633, 786, 13, 400, 286, 603, 445, 829, 309, 510, 13, 407, 1378, 700, 11, 383, 13, 50784], "temperature": 0.0, "avg_logprob": -0.18607823535649462, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.031138600781559944}, {"id": 12, "seek": 9368, "start": 104.32000000000001, "end": 108.56, "text": " I talked about, I promised that I was going to do Haskell on Christmas and I actually think it's", "tokens": [50896, 286, 2825, 466, 11, 286, 10768, 300, 286, 390, 516, 281, 360, 8646, 43723, 322, 5272, 293, 286, 767, 519, 309, 311, 51108], "temperature": 0.0, "avg_logprob": -0.18607823535649462, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.031138600781559944}, {"id": 13, "seek": 9368, "start": 108.56, "end": 116.0, "text": " more important that we learn C because it's just so much more important than Haskell, honestly.", "tokens": [51108, 544, 1021, 300, 321, 1466, 383, 570, 309, 311, 445, 370, 709, 544, 1021, 813, 8646, 43723, 11, 6095, 13, 51480], "temperature": 0.0, "avg_logprob": -0.18607823535649462, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.031138600781559944}, {"id": 14, "seek": 9368, "start": 116.0, "end": 118.72, "text": " Haskell School, Erlang is really cool. I wanted to learn Erlang. That was the one.", "tokens": [51480, 8646, 43723, 5070, 11, 3300, 25241, 307, 534, 1627, 13, 286, 1415, 281, 1466, 3300, 25241, 13, 663, 390, 264, 472, 13, 51616], "temperature": 0.0, "avg_logprob": -0.18607823535649462, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.031138600781559944}, {"id": 15, "seek": 11872, "start": 118.96, "end": 126.64, "text": " But every year, I feel like it's really important that you go back to C and you review it and you", "tokens": [50376, 583, 633, 1064, 11, 286, 841, 411, 309, 311, 534, 1021, 300, 291, 352, 646, 281, 383, 293, 291, 3131, 309, 293, 291, 50760], "temperature": 0.0, "avg_logprob": -0.12527932723363241, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.014062183909118176}, {"id": 16, "seek": 11872, "start": 126.64, "end": 132.07999999999998, "text": " learn about it because it informs everything else that you do related to the computer. So that's", "tokens": [50760, 1466, 466, 309, 570, 309, 45320, 1203, 1646, 300, 291, 360, 4077, 281, 264, 3820, 13, 407, 300, 311, 51032], "temperature": 0.0, "avg_logprob": -0.12527932723363241, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.014062183909118176}, {"id": 17, "seek": 11872, "start": 132.07999999999998, "end": 140.8, "text": " my recommendation. Get it and start writing C in it. If you want another book, there's another book", "tokens": [51032, 452, 11879, 13, 3240, 309, 293, 722, 3579, 383, 294, 309, 13, 759, 291, 528, 1071, 1446, 11, 456, 311, 1071, 1446, 51468], "temperature": 0.0, "avg_logprob": -0.12527932723363241, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.014062183909118176}, {"id": 18, "seek": 11872, "start": 140.8, "end": 146.64, "text": " called Mastering Algorithms in C, which I've started to work through. And I just really,", "tokens": [51468, 1219, 6140, 278, 35014, 6819, 2592, 294, 383, 11, 597, 286, 600, 1409, 281, 589, 807, 13, 400, 286, 445, 534, 11, 51760], "temperature": 0.0, "avg_logprob": -0.12527932723363241, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.014062183909118176}, {"id": 19, "seek": 14664, "start": 146.64, "end": 156.88, "text": " really love the style of it. It's not really dense. It is dated, but it's C, so it's still", "tokens": [50364, 534, 959, 264, 3758, 295, 309, 13, 467, 311, 406, 534, 18011, 13, 467, 307, 23804, 11, 457, 309, 311, 383, 11, 370, 309, 311, 920, 50876], "temperature": 0.0, "avg_logprob": -0.14122209548950196, "compression_ratio": 1.53475935828877, "no_speech_prob": 0.005910090636461973}, {"id": 20, "seek": 14664, "start": 156.88, "end": 163.04, "text": " really relevant. I just absolutely love Kyle Lodone's style. I recommended this to other people", "tokens": [50876, 534, 7340, 13, 286, 445, 3122, 959, 18023, 441, 378, 546, 311, 3758, 13, 286, 9628, 341, 281, 661, 561, 51184], "temperature": 0.0, "avg_logprob": -0.14122209548950196, "compression_ratio": 1.53475935828877, "no_speech_prob": 0.005910090636461973}, {"id": 21, "seek": 14664, "start": 163.04, "end": 168.64, "text": " and they've come back saying, oh my God, this book is so amazing. Kyle was an astronomer and a coder", "tokens": [51184, 293, 436, 600, 808, 646, 1566, 11, 1954, 452, 1265, 11, 341, 1446, 307, 370, 2243, 13, 18023, 390, 364, 11117, 14301, 293, 257, 17656, 260, 51464], "temperature": 0.0, "avg_logprob": -0.14122209548950196, "compression_ratio": 1.53475935828877, "no_speech_prob": 0.005910090636461973}, {"id": 22, "seek": 16864, "start": 168.64, "end": 177.51999999999998, "text": " for a very practical experience and approaches this whole thing from a very, very practical", "tokens": [50364, 337, 257, 588, 8496, 1752, 293, 11587, 341, 1379, 551, 490, 257, 588, 11, 588, 8496, 50808], "temperature": 0.0, "avg_logprob": -0.09927962928689936, "compression_ratio": 1.5809128630705394, "no_speech_prob": 0.03409719467163086}, {"id": 23, "seek": 16864, "start": 177.51999999999998, "end": 183.51999999999998, "text": " perspective and pretty much throws out all of the bombastic verbose extra stuff you find in the", "tokens": [50808, 4585, 293, 1238, 709, 19251, 484, 439, 295, 264, 7851, 2750, 9595, 541, 2857, 1507, 291, 915, 294, 264, 51108], "temperature": 0.0, "avg_logprob": -0.09927962928689936, "compression_ratio": 1.5809128630705394, "no_speech_prob": 0.03409719467163086}, {"id": 24, "seek": 16864, "start": 183.51999999999998, "end": 191.67999999999998, "text": " textbook. So those are my two favorites. I do not pretend to be a C master at any level. Last", "tokens": [51108, 25591, 13, 407, 729, 366, 452, 732, 16907, 13, 286, 360, 406, 11865, 281, 312, 257, 383, 4505, 412, 604, 1496, 13, 5264, 51516], "temperature": 0.0, "avg_logprob": -0.09927962928689936, "compression_ratio": 1.5809128630705394, "no_speech_prob": 0.03409719467163086}, {"id": 25, "seek": 16864, "start": 191.67999999999998, "end": 196.32, "text": " year when I did the C, I had people that were C masters here, particularly VMT. Thank you for that.", "tokens": [51516, 1064, 562, 286, 630, 264, 383, 11, 286, 632, 561, 300, 645, 383, 19294, 510, 11, 4098, 18038, 51, 13, 1044, 291, 337, 300, 13, 51748], "temperature": 0.0, "avg_logprob": -0.09927962928689936, "compression_ratio": 1.5809128630705394, "no_speech_prob": 0.03409719467163086}, {"id": 26, "seek": 19632, "start": 196.56, "end": 203.35999999999999, "text": " But showing me how C actually works and the gotchas and things and you may be asking, well,", "tokens": [50376, 583, 4099, 385, 577, 383, 767, 1985, 293, 264, 658, 41299, 293, 721, 293, 291, 815, 312, 3365, 11, 731, 11, 50716], "temperature": 0.0, "avg_logprob": -0.1487382984161377, "compression_ratio": 1.7098214285714286, "no_speech_prob": 0.005384657997637987}, {"id": 27, "seek": 19632, "start": 203.35999999999999, "end": 210.64, "text": " why learn C? So the answer to that is so that you can understand all the other things, particularly", "tokens": [50716, 983, 1466, 383, 30, 407, 264, 1867, 281, 300, 307, 370, 300, 291, 393, 1223, 439, 264, 661, 721, 11, 4098, 51080], "temperature": 0.0, "avg_logprob": -0.1487382984161377, "compression_ratio": 1.7098214285714286, "no_speech_prob": 0.005384657997637987}, {"id": 28, "seek": 19632, "start": 210.64, "end": 216.95999999999998, "text": " if you think you want to learn Rust. C and Rust to go very good together. C and go go very good", "tokens": [51080, 498, 291, 519, 291, 528, 281, 1466, 34952, 13, 383, 293, 34952, 281, 352, 588, 665, 1214, 13, 383, 293, 352, 352, 588, 665, 51396], "temperature": 0.0, "avg_logprob": -0.1487382984161377, "compression_ratio": 1.7098214285714286, "no_speech_prob": 0.005384657997637987}, {"id": 29, "seek": 19632, "start": 216.95999999999998, "end": 223.28, "text": " together. In fact, I've heard go describe by Rob Pike as an easier C. I've heard the same thing", "tokens": [51396, 1214, 13, 682, 1186, 11, 286, 600, 2198, 352, 6786, 538, 5424, 46791, 382, 364, 3571, 383, 13, 286, 600, 2198, 264, 912, 551, 51712], "temperature": 0.0, "avg_logprob": -0.1487382984161377, "compression_ratio": 1.7098214285714286, "no_speech_prob": 0.005384657997637987}, {"id": 30, "seek": 22328, "start": 223.28, "end": 229.04, "text": " about Rust that was a safer C. Well, if you don't know C, then you don't know how to contrast it", "tokens": [50364, 466, 34952, 300, 390, 257, 15856, 383, 13, 1042, 11, 498, 291, 500, 380, 458, 383, 11, 550, 291, 500, 380, 458, 577, 281, 8712, 309, 50652], "temperature": 0.0, "avg_logprob": -0.13041915515861888, "compression_ratio": 1.5860655737704918, "no_speech_prob": 0.01243065856397152}, {"id": 31, "seek": 22328, "start": 229.04, "end": 232.72, "text": " with these other languages. So learning C, even if you never code anything professionally in it,", "tokens": [50652, 365, 613, 661, 8650, 13, 407, 2539, 383, 11, 754, 498, 291, 1128, 3089, 1340, 27941, 294, 309, 11, 50836], "temperature": 0.0, "avg_logprob": -0.13041915515861888, "compression_ratio": 1.5860655737704918, "no_speech_prob": 0.01243065856397152}, {"id": 32, "seek": 22328, "start": 232.72, "end": 239.52, "text": " it's still valuable no matter what. C was invented to write Unix. That's right. The first version", "tokens": [50836, 309, 311, 920, 8263, 572, 1871, 437, 13, 383, 390, 14479, 281, 2464, 1156, 970, 13, 663, 311, 558, 13, 440, 700, 3037, 51176], "temperature": 0.0, "avg_logprob": -0.13041915515861888, "compression_ratio": 1.5860655737704918, "no_speech_prob": 0.01243065856397152}, {"id": 33, "seek": 22328, "start": 239.52, "end": 250.16, "text": " of Unix was written in assembly and like, man, this is too crazy. We got to do something better", "tokens": [51176, 295, 1156, 970, 390, 3720, 294, 12103, 293, 411, 11, 587, 11, 341, 307, 886, 3219, 13, 492, 658, 281, 360, 746, 1101, 51708], "temperature": 0.0, "avg_logprob": -0.13041915515861888, "compression_ratio": 1.5860655737704918, "no_speech_prob": 0.01243065856397152}, {"id": 34, "seek": 25016, "start": 250.24, "end": 254.48, "text": " and they did it really low level and really close to the hardware, had ultimate control of every", "tokens": [50368, 293, 436, 630, 309, 534, 2295, 1496, 293, 534, 1998, 281, 264, 8837, 11, 632, 9705, 1969, 295, 633, 50580], "temperature": 0.0, "avg_logprob": -0.16888990073368468, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.10964880138635635}, {"id": 35, "seek": 25016, "start": 254.48, "end": 260.08, "text": " bit and everything. And so they made C. They made C. Dennis Richie and the gang, they made C.", "tokens": [50580, 857, 293, 1203, 13, 400, 370, 436, 1027, 383, 13, 814, 1027, 383, 13, 23376, 6781, 414, 293, 264, 10145, 11, 436, 1027, 383, 13, 50860], "temperature": 0.0, "avg_logprob": -0.16888990073368468, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.10964880138635635}, {"id": 36, "seek": 25016, "start": 260.08, "end": 264.64, "text": " Ken Thompson. And I still, I was just talking about this the other night, I think Dennis Richie is one", "tokens": [50860, 8273, 23460, 13, 400, 286, 920, 11, 286, 390, 445, 1417, 466, 341, 264, 661, 1818, 11, 286, 519, 23376, 6781, 414, 307, 472, 51088], "temperature": 0.0, "avg_logprob": -0.16888990073368468, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.10964880138635635}, {"id": 37, "seek": 25016, "start": 264.64, "end": 271.2, "text": " of the most famous yet unsung heroes of our time died the same week as Steve Jobs, nobody knew.", "tokens": [51088, 295, 264, 881, 4618, 1939, 2693, 1063, 12332, 295, 527, 565, 4539, 264, 912, 1243, 382, 7466, 29169, 11, 5079, 2586, 13, 51416], "temperature": 0.0, "avg_logprob": -0.16888990073368468, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.10964880138635635}, {"id": 38, "seek": 25016, "start": 272.32, "end": 275.76, "text": " But everything you're using right now is written in C, literally everything", "tokens": [51472, 583, 1203, 291, 434, 1228, 558, 586, 307, 3720, 294, 383, 11, 3736, 1203, 51644], "temperature": 0.0, "avg_logprob": -0.16888990073368468, "compression_ratio": 1.7222222222222223, "no_speech_prob": 0.10964880138635635}, {"id": 39, "seek": 27576, "start": 276.32, "end": 288.08, "text": " at some level, including JavaScript. So anyway, it is frustrating. Rust can be frustrating if", "tokens": [50392, 412, 512, 1496, 11, 3009, 15778, 13, 407, 4033, 11, 309, 307, 16522, 13, 34952, 393, 312, 16522, 498, 50980], "temperature": 0.0, "avg_logprob": -0.11611244082450867, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.02368602715432644}, {"id": 40, "seek": 27576, "start": 288.08, "end": 291.36, "text": " you have to fight with a barrel checker, but at least if you learn C, you'll understand it. Do", "tokens": [50980, 291, 362, 281, 2092, 365, 257, 13257, 1520, 260, 11, 457, 412, 1935, 498, 291, 1466, 383, 11, 291, 603, 1223, 309, 13, 1144, 51144], "temperature": 0.0, "avg_logprob": -0.11611244082450867, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.02368602715432644}, {"id": 41, "seek": 27576, "start": 291.36, "end": 296.4, "text": " I think you should learn Rust? Yes, that's a different question. But honestly, I really,", "tokens": [51144, 286, 519, 291, 820, 1466, 34952, 30, 1079, 11, 300, 311, 257, 819, 1168, 13, 583, 6095, 11, 286, 534, 11, 51396], "temperature": 0.0, "avg_logprob": -0.11611244082450867, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.02368602715432644}, {"id": 42, "seek": 27576, "start": 296.4, "end": 304.32, "text": " really do think that you should learn C first, so that when you learn Rust, you'll see how awesome", "tokens": [51396, 534, 360, 519, 300, 291, 820, 1466, 383, 700, 11, 370, 300, 562, 291, 1466, 34952, 11, 291, 603, 536, 577, 3476, 51792], "temperature": 0.0, "avg_logprob": -0.11611244082450867, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.02368602715432644}, {"id": 43, "seek": 30432, "start": 304.4, "end": 311.59999999999997, "text": " it is or where it lacks in other areas, you know, the pros and the cons. And there are,", "tokens": [50368, 309, 307, 420, 689, 309, 31132, 294, 661, 3179, 11, 291, 458, 11, 264, 6267, 293, 264, 1014, 13, 400, 456, 366, 11, 50728], "temperature": 0.0, "avg_logprob": -0.13586864186756648, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0488426573574543}, {"id": 44, "seek": 30432, "start": 311.59999999999997, "end": 315.36, "text": " and you won't understand those until you understand C. So the best way to pick it up if you're an", "tokens": [50728, 293, 291, 1582, 380, 1223, 729, 1826, 291, 1223, 383, 13, 407, 264, 1151, 636, 281, 1888, 309, 493, 498, 291, 434, 364, 50916], "temperature": 0.0, "avg_logprob": -0.13586864186756648, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0488426573574543}, {"id": 45, "seek": 30432, "start": 315.36, "end": 320.08, "text": " absolute noob and you just don't, you don't want academics speak too much of it is head first C,", "tokens": [50916, 8236, 572, 996, 293, 291, 445, 500, 380, 11, 291, 500, 380, 528, 25695, 1710, 886, 709, 295, 309, 307, 1378, 700, 383, 11, 51152], "temperature": 0.0, "avg_logprob": -0.13586864186756648, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0488426573574543}, {"id": 46, "seek": 30432, "start": 320.08, "end": 323.52, "text": " in my opinion, it's kind of fun. You write a game in there, you write an old school Asteroids game", "tokens": [51152, 294, 452, 4800, 11, 309, 311, 733, 295, 1019, 13, 509, 2464, 257, 1216, 294, 456, 11, 291, 2464, 364, 1331, 1395, 12884, 2032, 3742, 1216, 51324], "temperature": 0.0, "avg_logprob": -0.13586864186756648, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0488426573574543}, {"id": 47, "seek": 30432, "start": 323.52, "end": 330.88, "text": " in there. Yeah, in C. And we never got to it last year, but, you know, and then eventually,", "tokens": [51324, 294, 456, 13, 865, 11, 294, 383, 13, 400, 321, 1128, 658, 281, 309, 1036, 1064, 11, 457, 11, 291, 458, 11, 293, 550, 4728, 11, 51692], "temperature": 0.0, "avg_logprob": -0.13586864186756648, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0488426573574543}, {"id": 48, "seek": 33088, "start": 331.04, "end": 338.24, "text": " you know, you're going to want to do something a little bit more probably, and maybe you want to do", "tokens": [50372, 291, 458, 11, 291, 434, 516, 281, 528, 281, 360, 746, 257, 707, 857, 544, 1391, 11, 293, 1310, 291, 528, 281, 360, 50732], "temperature": 0.0, "avg_logprob": -0.15738476023954504, "compression_ratio": 1.677304964539007, "no_speech_prob": 0.003483274718746543}, {"id": 49, "seek": 33088, "start": 338.96, "end": 344.0, "text": " algorithms, mastering algorithms to see now, why, why would I do algorithms in C?", "tokens": [50768, 14642, 11, 49382, 14642, 281, 536, 586, 11, 983, 11, 983, 576, 286, 360, 14642, 294, 383, 30, 51020], "temperature": 0.0, "avg_logprob": -0.15738476023954504, "compression_ratio": 1.677304964539007, "no_speech_prob": 0.003483274718746543}, {"id": 50, "seek": 33088, "start": 345.12, "end": 348.4, "text": " People like, do I need to spend time learning data structures and algorithms? The answer is yes.", "tokens": [51076, 3432, 411, 11, 360, 286, 643, 281, 3496, 565, 2539, 1412, 9227, 293, 14642, 30, 440, 1867, 307, 2086, 13, 51240], "temperature": 0.0, "avg_logprob": -0.15738476023954504, "compression_ratio": 1.677304964539007, "no_speech_prob": 0.003483274718746543}, {"id": 51, "seek": 33088, "start": 349.44, "end": 355.68, "text": " Maybe not early on in your programming, you know, path. I never did. I didn't go to computer science,", "tokens": [51292, 2704, 406, 2440, 322, 294, 428, 9410, 11, 291, 458, 11, 3100, 13, 286, 1128, 630, 13, 286, 994, 380, 352, 281, 3820, 3497, 11, 51604], "temperature": 0.0, "avg_logprob": -0.15738476023954504, "compression_ratio": 1.677304964539007, "no_speech_prob": 0.003483274718746543}, {"id": 52, "seek": 33088, "start": 355.68, "end": 359.84, "text": " and maybe I'm a worse person for it. But I did eventually learn a lot of amazing things from", "tokens": [51604, 293, 1310, 286, 478, 257, 5324, 954, 337, 309, 13, 583, 286, 630, 4728, 1466, 257, 688, 295, 2243, 721, 490, 51812], "temperature": 0.0, "avg_logprob": -0.15738476023954504, "compression_ratio": 1.677304964539007, "no_speech_prob": 0.003483274718746543}, {"id": 53, "seek": 35984, "start": 359.84, "end": 363.59999999999997, "text": " the data structures and algorithms book, but I learned them on my own when I needed them.", "tokens": [50364, 264, 1412, 9227, 293, 14642, 1446, 11, 457, 286, 3264, 552, 322, 452, 1065, 562, 286, 2978, 552, 13, 50552], "temperature": 0.0, "avg_logprob": -0.15074856180540272, "compression_ratio": 1.838187702265372, "no_speech_prob": 0.0005033190245740116}, {"id": 54, "seek": 35984, "start": 364.15999999999997, "end": 367.67999999999995, "text": " And you're going to see me coding a lot of that today, actually, later on. I'm kind of a thing.", "tokens": [50580, 400, 291, 434, 516, 281, 536, 385, 17720, 257, 688, 295, 300, 965, 11, 767, 11, 1780, 322, 13, 286, 478, 733, 295, 257, 551, 13, 50756], "temperature": 0.0, "avg_logprob": -0.15074856180540272, "compression_ratio": 1.838187702265372, "no_speech_prob": 0.0005033190245740116}, {"id": 55, "seek": 35984, "start": 367.67999999999995, "end": 374.64, "text": " I'm going to be coding a parser and a compiler for a language called Kegamel using my other", "tokens": [50756, 286, 478, 516, 281, 312, 17720, 257, 21156, 260, 293, 257, 31958, 337, 257, 2856, 1219, 591, 1146, 16103, 1228, 452, 661, 51104], "temperature": 0.0, "avg_logprob": -0.15074856180540272, "compression_ratio": 1.838187702265372, "no_speech_prob": 0.0005033190245740116}, {"id": 56, "seek": 35984, "start": 374.64, "end": 379.28, "text": " language that I wrote called Pagan. And I had to learn things like graph theory, and, and, you know,", "tokens": [51104, 2856, 300, 286, 4114, 1219, 430, 14167, 13, 400, 286, 632, 281, 1466, 721, 411, 4295, 5261, 11, 293, 11, 293, 11, 291, 458, 11, 51336], "temperature": 0.0, "avg_logprob": -0.15074856180540272, "compression_ratio": 1.838187702265372, "no_speech_prob": 0.0005033190245740116}, {"id": 57, "seek": 35984, "start": 379.28, "end": 384.0, "text": " stacks and cues and all of these things. And I had to teach myself those things in order to do", "tokens": [51336, 30792, 293, 32192, 293, 439, 295, 613, 721, 13, 400, 286, 632, 281, 2924, 2059, 729, 721, 294, 1668, 281, 360, 51572], "temperature": 0.0, "avg_logprob": -0.15074856180540272, "compression_ratio": 1.838187702265372, "no_speech_prob": 0.0005033190245740116}, {"id": 58, "seek": 35984, "start": 384.0, "end": 388.79999999999995, "text": " those things, those very fundamental computer science concepts. So but mastering algorithms in", "tokens": [51572, 729, 721, 11, 729, 588, 8088, 3820, 3497, 10392, 13, 407, 457, 49382, 14642, 294, 51812], "temperature": 0.0, "avg_logprob": -0.15074856180540272, "compression_ratio": 1.838187702265372, "no_speech_prob": 0.0005033190245740116}, {"id": 59, "seek": 38880, "start": 388.8, "end": 397.68, "text": " C, you know, Kyle at the beginning of the book, makes a case for having to have that and, and", "tokens": [50364, 383, 11, 291, 458, 11, 18023, 412, 264, 2863, 295, 264, 1446, 11, 1669, 257, 1389, 337, 1419, 281, 362, 300, 293, 11, 293, 50808], "temperature": 0.0, "avg_logprob": -0.12487845861611246, "compression_ratio": 1.7117437722419928, "no_speech_prob": 0.0004305430338717997}, {"id": 60, "seek": 38880, "start": 397.68, "end": 402.0, "text": " needing to know those things like it'll just make you, it'll just inform all of your other approaches", "tokens": [50808, 18006, 281, 458, 729, 721, 411, 309, 603, 445, 652, 291, 11, 309, 603, 445, 1356, 439, 295, 428, 661, 11587, 51024], "temperature": 0.0, "avg_logprob": -0.12487845861611246, "compression_ratio": 1.7117437722419928, "no_speech_prob": 0.0004305430338717997}, {"id": 61, "seek": 38880, "start": 402.0, "end": 405.92, "text": " to coding, even though you don't have to be able to spit it out in an elite code interview exam or", "tokens": [51024, 281, 17720, 11, 754, 1673, 291, 500, 380, 362, 281, 312, 1075, 281, 22127, 309, 484, 294, 364, 17801, 3089, 4049, 1139, 420, 51220], "temperature": 0.0, "avg_logprob": -0.12487845861611246, "compression_ratio": 1.7117437722419928, "no_speech_prob": 0.0004305430338717997}, {"id": 62, "seek": 38880, "start": 405.92, "end": 411.44, "text": " something. It's more important that you know how these patterns can be applied at a macro level.", "tokens": [51220, 746, 13, 467, 311, 544, 1021, 300, 291, 458, 577, 613, 8294, 393, 312, 6456, 412, 257, 18887, 1496, 13, 51496], "temperature": 0.0, "avg_logprob": -0.12487845861611246, "compression_ratio": 1.7117437722419928, "no_speech_prob": 0.0004305430338717997}, {"id": 63, "seek": 38880, "start": 411.44, "end": 414.56, "text": " And one of the reasons I think that mastering algorithms in C is such a good thing that C", "tokens": [51496, 400, 472, 295, 264, 4112, 286, 519, 300, 49382, 14642, 294, 383, 307, 1270, 257, 665, 551, 300, 383, 51652], "temperature": 0.0, "avg_logprob": -0.12487845861611246, "compression_ratio": 1.7117437722419928, "no_speech_prob": 0.0004305430338717997}, {"id": 64, "seek": 41456, "start": 414.56, "end": 418.56, "text": " is a great language for this is because C by default doesn't come with those things.", "tokens": [50364, 307, 257, 869, 2856, 337, 341, 307, 570, 383, 538, 7576, 1177, 380, 808, 365, 729, 721, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1403963088989258, "compression_ratio": 1.7699680511182108, "no_speech_prob": 0.08754850924015045}, {"id": 65, "seek": 41456, "start": 418.56, "end": 422.0, "text": " And the last time I said that, I had a lot of C coders say, Oh yeah, sure it does. And it does", "tokens": [50564, 400, 264, 1036, 565, 286, 848, 300, 11, 286, 632, 257, 688, 295, 383, 17656, 433, 584, 11, 876, 1338, 11, 988, 309, 775, 13, 400, 309, 775, 50736], "temperature": 0.0, "avg_logprob": -0.1403963088989258, "compression_ratio": 1.7699680511182108, "no_speech_prob": 0.08754850924015045}, {"id": 66, "seek": 41456, "start": 422.0, "end": 427.68, "text": " if you have the right library, for example, a map and associate of array, right? Or even an array,", "tokens": [50736, 498, 291, 362, 264, 558, 6405, 11, 337, 1365, 11, 257, 4471, 293, 14644, 295, 10225, 11, 558, 30, 1610, 754, 364, 10225, 11, 51020], "temperature": 0.0, "avg_logprob": -0.1403963088989258, "compression_ratio": 1.7699680511182108, "no_speech_prob": 0.08754850924015045}, {"id": 67, "seek": 41456, "start": 427.68, "end": 434.08, "text": " period. They're totally different. There's no, there's not even strings, technically speaking,", "tokens": [51020, 2896, 13, 814, 434, 3879, 819, 13, 821, 311, 572, 11, 456, 311, 406, 754, 13985, 11, 12120, 4124, 11, 51340], "temperature": 0.0, "avg_logprob": -0.1403963088989258, "compression_ratio": 1.7699680511182108, "no_speech_prob": 0.08754850924015045}, {"id": 68, "seek": 41456, "start": 434.08, "end": 440.4, "text": " technically speaking, C does not have strings, string has character arrays. So these things", "tokens": [51340, 12120, 4124, 11, 383, 775, 406, 362, 13985, 11, 6798, 575, 2517, 41011, 13, 407, 613, 721, 51656], "temperature": 0.0, "avg_logprob": -0.1403963088989258, "compression_ratio": 1.7699680511182108, "no_speech_prob": 0.08754850924015045}, {"id": 69, "seek": 41456, "start": 440.4, "end": 444.48, "text": " that we take for granted in these higher level languages don't exist in C, which makes C", "tokens": [51656, 300, 321, 747, 337, 12344, 294, 613, 2946, 1496, 8650, 500, 380, 2514, 294, 383, 11, 597, 1669, 383, 51860], "temperature": 0.0, "avg_logprob": -0.1403963088989258, "compression_ratio": 1.7699680511182108, "no_speech_prob": 0.08754850924015045}, {"id": 70, "seek": 44448, "start": 444.56, "end": 450.64000000000004, "text": " a really great language, in my opinion, for, you know, creating something that you actually", "tokens": [50368, 257, 534, 869, 2856, 11, 294, 452, 4800, 11, 337, 11, 291, 458, 11, 4084, 746, 300, 291, 767, 50672], "temperature": 0.0, "avg_logprob": -0.12920389909010668, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.003592997556552291}, {"id": 71, "seek": 44448, "start": 450.64000000000004, "end": 455.92, "text": " have a chance of like maybe if you're writing your own bubble sort, and any official capacity,", "tokens": [50672, 362, 257, 2931, 295, 411, 1310, 498, 291, 434, 3579, 428, 1065, 12212, 1333, 11, 293, 604, 4783, 6042, 11, 50936], "temperature": 0.0, "avg_logprob": -0.12920389909010668, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.003592997556552291}, {"id": 72, "seek": 44448, "start": 455.92, "end": 459.92, "text": " you're probably doing it wrong because it's been written safer and better in another library.", "tokens": [50936, 291, 434, 1391, 884, 309, 2085, 570, 309, 311, 668, 3720, 15856, 293, 1101, 294, 1071, 6405, 13, 51136], "temperature": 0.0, "avg_logprob": -0.12920389909010668, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.003592997556552291}, {"id": 73, "seek": 44448, "start": 459.92, "end": 462.88, "text": " But it doesn't hurt for you to write it and see because you can understand why,", "tokens": [51136, 583, 309, 1177, 380, 4607, 337, 291, 281, 2464, 309, 293, 536, 570, 291, 393, 1223, 983, 11, 51284], "temperature": 0.0, "avg_logprob": -0.12920389909010668, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.003592997556552291}, {"id": 74, "seek": 44448, "start": 463.52000000000004, "end": 469.12, "text": " you know, why, why it doesn't have it. So I actually do think learning algorithms and data", "tokens": [51316, 291, 458, 11, 983, 11, 983, 309, 1177, 380, 362, 309, 13, 407, 286, 767, 360, 519, 2539, 14642, 293, 1412, 51596], "temperature": 0.0, "avg_logprob": -0.12920389909010668, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.003592997556552291}, {"id": 75, "seek": 44448, "start": 469.12, "end": 473.76, "text": " structures in C is a good thing. I think go is probably the next best thing to learn those", "tokens": [51596, 9227, 294, 383, 307, 257, 665, 551, 13, 286, 519, 352, 307, 1391, 264, 958, 1151, 551, 281, 1466, 729, 51828], "temperature": 0.0, "avg_logprob": -0.12920389909010668, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.003592997556552291}, {"id": 76, "seek": 47376, "start": 473.76, "end": 482.15999999999997, "text": " kind of things. Imagine this array of characters being a string, exactly. And so anyway, that's", "tokens": [50364, 733, 295, 721, 13, 11739, 341, 10225, 295, 4342, 885, 257, 6798, 11, 2293, 13, 400, 370, 4033, 11, 300, 311, 50784], "temperature": 0.0, "avg_logprob": -0.11334493604757018, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.002182578667998314}, {"id": 77, "seek": 47376, "start": 482.15999999999997, "end": 487.36, "text": " all I have to say about C. If you want to learn more about C with me and struggle and suffer and", "tokens": [50784, 439, 286, 362, 281, 584, 466, 383, 13, 759, 291, 528, 281, 1466, 544, 466, 383, 365, 385, 293, 7799, 293, 9753, 293, 51044], "temperature": 0.0, "avg_logprob": -0.11334493604757018, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.002182578667998314}, {"id": 78, "seek": 47376, "start": 487.36, "end": 491.2, "text": " understand what the stack and the heap and the constant section are and why they're there.", "tokens": [51044, 1223, 437, 264, 8630, 293, 264, 33591, 293, 264, 5754, 3541, 366, 293, 983, 436, 434, 456, 13, 51236], "temperature": 0.0, "avg_logprob": -0.11334493604757018, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.002182578667998314}, {"id": 79, "seek": 47376, "start": 492.0, "end": 498.08, "text": " But by the way, the head first book is phenomenally good at illustrating that entire thing. I never", "tokens": [51276, 583, 538, 264, 636, 11, 264, 1378, 700, 1446, 307, 9388, 379, 665, 412, 8490, 8754, 300, 2302, 551, 13, 286, 1128, 51580], "temperature": 0.0, "avg_logprob": -0.11334493604757018, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.002182578667998314}, {"id": 80, "seek": 47376, "start": 498.08, "end": 503.2, "text": " fully understood that until I read that book. And I still, I still feel like I'm missing things.", "tokens": [51580, 4498, 7320, 300, 1826, 286, 1401, 300, 1446, 13, 400, 286, 920, 11, 286, 920, 841, 411, 286, 478, 5361, 721, 13, 51836], "temperature": 0.0, "avg_logprob": -0.11334493604757018, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.002182578667998314}, {"id": 81, "seek": 50320, "start": 503.2, "end": 507.44, "text": " But mostly because, you know, I have to go through it again every year because I forget. So that's", "tokens": [50364, 583, 5240, 570, 11, 291, 458, 11, 286, 362, 281, 352, 807, 309, 797, 633, 1064, 570, 286, 2870, 13, 407, 300, 311, 50576], "temperature": 0.0, "avg_logprob": -0.1310859708225026, "compression_ratio": 1.1470588235294117, "no_speech_prob": 0.006588384974747896}, {"id": 82, "seek": 50320, "start": 507.44, "end": 508.0, "text": " what I think of C.", "tokens": [50576, 437, 286, 519, 295, 383, 13, 50604], "temperature": 0.0, "avg_logprob": -0.1310859708225026, "compression_ratio": 1.1470588235294117, "no_speech_prob": 0.006588384974747896}], "language": "en"}