start	end	text
0	3440	Alright, so another quick question and answer video. How do you recommend learning C?
5440	11440	My current recommendation is by getting a book called Head for C. I'll go see if I can show it to
11440	21200	you. And we've had people that know C really well kind of evaluate this book. We went through it last
21200	32000	year at $0 for the paperback. I don't believe that for a second. It's a fun book. It has a few
32000	37200	problems in it, but people who do C coding have confirmed that it's actually pretty good for absolute
37200	45200	beginners. I prefer the mnemonic brain-friendly, silly approach to C coding than the really dry
45920	52240	K&R C book. So that is my recommendation. Just get that book and work through it.
53280	58880	It doesn't come with a lot of answers. If you want to do that, in fact, I should probably
58880	66080	put it on the calendar. We will be doing C in December. So it's kind of a Christmas tradition,
66080	84480	C for Christmas. And I want to say December, we're out the week of Christmas. So this will be the
84480	93680	week of C. So this is going to be C coding. I don't know if we're going to do it all on one day.
94560	102080	We'll probably do it a little bit every day. And I'll just put it here. So head first, C.
104320	108560	I talked about, I promised that I was going to do Haskell on Christmas and I actually think it's
108560	116000	more important that we learn C because it's just so much more important than Haskell, honestly.
116000	118720	Haskell School, Erlang is really cool. I wanted to learn Erlang. That was the one.
118960	126640	But every year, I feel like it's really important that you go back to C and you review it and you
126640	132080	learn about it because it informs everything else that you do related to the computer. So that's
132080	140800	my recommendation. Get it and start writing C in it. If you want another book, there's another book
140800	146640	called Mastering Algorithms in C, which I've started to work through. And I just really,
146640	156880	really love the style of it. It's not really dense. It is dated, but it's C, so it's still
156880	163040	really relevant. I just absolutely love Kyle Lodone's style. I recommended this to other people
163040	168640	and they've come back saying, oh my God, this book is so amazing. Kyle was an astronomer and a coder
168640	177520	for a very practical experience and approaches this whole thing from a very, very practical
177520	183520	perspective and pretty much throws out all of the bombastic verbose extra stuff you find in the
183520	191680	textbook. So those are my two favorites. I do not pretend to be a C master at any level. Last
191680	196320	year when I did the C, I had people that were C masters here, particularly VMT. Thank you for that.
196560	203360	But showing me how C actually works and the gotchas and things and you may be asking, well,
203360	210640	why learn C? So the answer to that is so that you can understand all the other things, particularly
210640	216960	if you think you want to learn Rust. C and Rust to go very good together. C and go go very good
216960	223280	together. In fact, I've heard go describe by Rob Pike as an easier C. I've heard the same thing
223280	229040	about Rust that was a safer C. Well, if you don't know C, then you don't know how to contrast it
229040	232720	with these other languages. So learning C, even if you never code anything professionally in it,
232720	239520	it's still valuable no matter what. C was invented to write Unix. That's right. The first version
239520	250160	of Unix was written in assembly and like, man, this is too crazy. We got to do something better
250240	254480	and they did it really low level and really close to the hardware, had ultimate control of every
254480	260080	bit and everything. And so they made C. They made C. Dennis Richie and the gang, they made C.
260080	264640	Ken Thompson. And I still, I was just talking about this the other night, I think Dennis Richie is one
264640	271200	of the most famous yet unsung heroes of our time died the same week as Steve Jobs, nobody knew.
272320	275760	But everything you're using right now is written in C, literally everything
276320	288080	at some level, including JavaScript. So anyway, it is frustrating. Rust can be frustrating if
288080	291360	you have to fight with a barrel checker, but at least if you learn C, you'll understand it. Do
291360	296400	I think you should learn Rust? Yes, that's a different question. But honestly, I really,
296400	304320	really do think that you should learn C first, so that when you learn Rust, you'll see how awesome
304400	311600	it is or where it lacks in other areas, you know, the pros and the cons. And there are,
311600	315360	and you won't understand those until you understand C. So the best way to pick it up if you're an
315360	320080	absolute noob and you just don't, you don't want academics speak too much of it is head first C,
320080	323520	in my opinion, it's kind of fun. You write a game in there, you write an old school Asteroids game
323520	330880	in there. Yeah, in C. And we never got to it last year, but, you know, and then eventually,
331040	338240	you know, you're going to want to do something a little bit more probably, and maybe you want to do
338960	344000	algorithms, mastering algorithms to see now, why, why would I do algorithms in C?
345120	348400	People like, do I need to spend time learning data structures and algorithms? The answer is yes.
349440	355680	Maybe not early on in your programming, you know, path. I never did. I didn't go to computer science,
355680	359840	and maybe I'm a worse person for it. But I did eventually learn a lot of amazing things from
359840	363600	the data structures and algorithms book, but I learned them on my own when I needed them.
364160	367680	And you're going to see me coding a lot of that today, actually, later on. I'm kind of a thing.
367680	374640	I'm going to be coding a parser and a compiler for a language called Kegamel using my other
374640	379280	language that I wrote called Pagan. And I had to learn things like graph theory, and, and, you know,
379280	384000	stacks and cues and all of these things. And I had to teach myself those things in order to do
384000	388800	those things, those very fundamental computer science concepts. So but mastering algorithms in
388800	397680	C, you know, Kyle at the beginning of the book, makes a case for having to have that and, and
397680	402000	needing to know those things like it'll just make you, it'll just inform all of your other approaches
402000	405920	to coding, even though you don't have to be able to spit it out in an elite code interview exam or
405920	411440	something. It's more important that you know how these patterns can be applied at a macro level.
411440	414560	And one of the reasons I think that mastering algorithms in C is such a good thing that C
414560	418560	is a great language for this is because C by default doesn't come with those things.
418560	422000	And the last time I said that, I had a lot of C coders say, Oh yeah, sure it does. And it does
422000	427680	if you have the right library, for example, a map and associate of array, right? Or even an array,
427680	434080	period. They're totally different. There's no, there's not even strings, technically speaking,
434080	440400	technically speaking, C does not have strings, string has character arrays. So these things
440400	444480	that we take for granted in these higher level languages don't exist in C, which makes C
444560	450640	a really great language, in my opinion, for, you know, creating something that you actually
450640	455920	have a chance of like maybe if you're writing your own bubble sort, and any official capacity,
455920	459920	you're probably doing it wrong because it's been written safer and better in another library.
459920	462880	But it doesn't hurt for you to write it and see because you can understand why,
463520	469120	you know, why, why it doesn't have it. So I actually do think learning algorithms and data
469120	473760	structures in C is a good thing. I think go is probably the next best thing to learn those
473760	482160	kind of things. Imagine this array of characters being a string, exactly. And so anyway, that's
482160	487360	all I have to say about C. If you want to learn more about C with me and struggle and suffer and
487360	491200	understand what the stack and the heap and the constant section are and why they're there.
492000	498080	But by the way, the head first book is phenomenally good at illustrating that entire thing. I never
498080	503200	fully understood that until I read that book. And I still, I still feel like I'm missing things.
503200	507440	But mostly because, you know, I have to go through it again every year because I forget. So that's
507440	508000	what I think of C.
