1
00:00:00,000 --> 00:00:04,720
So, I just want to make a quick YouTube video about this because it seems to be coming up

2
00:00:04,720 --> 00:00:10,400
and it's a really important topic and I don't know how to make it into a question so I mean

3
00:00:10,400 --> 00:00:20,020
the question I originally was going to have was, what did I just do, you know like I don't

4
00:00:20,020 --> 00:00:24,780
know.

5
00:00:24,780 --> 00:00:34,780
What are contextual rooted command trees?

6
00:00:34,780 --> 00:00:36,660
And this is my new term.

7
00:00:36,660 --> 00:00:40,660
We thought, Milesi's not here, he's one of our community members who told me the idea

8
00:00:40,660 --> 00:00:47,100
that people were referring to this by saying fluid and fluid APIs or fluid command line

9
00:00:47,100 --> 00:00:50,900
APIs and I have not found any reference for that yet.

10
00:00:50,900 --> 00:00:53,980
So, Milesi if you're out there, let me know and put a comment in there, does anybody on

11
00:00:53,980 --> 00:00:57,780
YouTube who knows about this who's got an actual term for this?

12
00:00:57,780 --> 00:01:02,580
So I'm going to describe what it is and I'm going to use my best way of describing it

13
00:01:02,580 --> 00:01:07,500
which the community and I have recently just kind of come up with, you know I'm a little

14
00:01:07,500 --> 00:01:12,420
bit out of the idea but and I'm going to tell you what it is and then we're going to come

15
00:01:12,420 --> 00:01:19,580
up with a name for it because this is really becoming spectacularly popular and so we're

16
00:01:19,580 --> 00:01:23,620
seeing, so let me just summarize what's happening, let me tell you a little story, so you know

17
00:01:23,620 --> 00:01:27,220
if you go back to the Boomer days, you know a lot of good things came from the Boomers,

18
00:01:27,220 --> 00:01:31,700
the Internet, you know C, Unix, bunch of other stuff but one of the horrible things that

19
00:01:31,700 --> 00:01:43,300
came from the Boomer generation is stuff like this, GPG, this is the epitome of Boomer

20
00:01:43,300 --> 00:01:49,260
get-opt hell and I can sit here and hold my finger down and I can, you can see all of

21
00:01:49,260 --> 00:01:54,220
the potential options for like, you know good 60 seconds there and all of those things

22
00:01:54,220 --> 00:01:58,540
have dash dash and everything else right and it's absolutely horrible and in fact there

23
00:01:58,540 --> 00:02:07,620
is other programs that still use this, Cube CTL being one of them, so I mean they do have

24
00:02:07,620 --> 00:02:15,220
kind of a top level of contextual thing but beyond that right you're like, you know it

25
00:02:15,220 --> 00:02:22,260
does kind of give you contextual stuff a little bit right so but you still have like a ton

26
00:02:22,260 --> 00:02:29,900
of options to deal with and it becomes so unwieldy that you know you just, you can't do it, you

27
00:02:29,900 --> 00:02:34,580
have these top level commands and then but beyond that you're you're relegated to command

28
00:02:34,580 --> 00:02:43,140
hell with dashes okay so so so if you go back to the 70s when people had you know constraints

29
00:02:43,140 --> 00:02:49,460
on memory and everything this thing called get-opt was invented right and get-opt is

30
00:02:49,460 --> 00:02:55,140
the thing that from which all of the modern command lines that were not modern but you

31
00:02:55,140 --> 00:03:00,020
know semi-modern command lines have used it's the idea of having a switch with a dash or

32
00:03:00,020 --> 00:03:05,860
two dashes and there's varying and there's competing things and this entire hellish world

33
00:03:05,860 --> 00:03:10,620
that we live in that's that where everything has to have dashes in front of it is finally

34
00:03:10,620 --> 00:03:15,780
dying and I can I can I just tell you how happy I am that this is dying so you know I have

35
00:03:15,780 --> 00:03:19,740
a mantra don't get mad get busy and I was so annoyed by this entire thing and I built

36
00:03:19,740 --> 00:03:24,900
bonsai and this question isn't about bonsai I'll talk about that another day but if you

37
00:03:24,900 --> 00:03:35,020
go to mygithub.com slash rbxrob so bonsai is my my way of dealing with this and it basically

38
00:03:35,020 --> 00:03:42,140
makes very elegant contextual rooted command hierarchies or rooted command trees and so

39
00:03:42,140 --> 00:03:47,620
instead of having all of these dashes like my z command you just do z dot tab tab and

40
00:03:47,620 --> 00:03:58,060
you get a number of composite command trees I call them bonsai trees or bonsai branches

41
00:03:58,060 --> 00:04:02,100
and by the way you can import them very easily just by with one import command from go which

42
00:04:02,100 --> 00:04:07,180
is one of the reasons I love go and and then you can also create alternative pass through

43
00:04:07,180 --> 00:04:11,460
the rooted node graph which is the data structure we're using here and this bonsai bonsai is

44
00:04:11,460 --> 00:04:15,260
something that came about for me completely independent without knowing any of these other

45
00:04:15,260 --> 00:04:18,180
products that are doing the same thing so let me give you an example so if I go to you

46
00:04:18,180 --> 00:04:25,420
tab tab for unique I tap again and I get all these variations on on uniqueness right and

47
00:04:25,420 --> 00:04:31,900
you know I can type hex oops let's do iso sec iso sec you know like oh my god that's

48
00:04:31,900 --> 00:04:36,140
like too much to type well you can create a shortcut through that if you want to that's

49
00:04:36,140 --> 00:04:40,140
just you can create shortcut commands that that that zoom right down to the bottom level

50
00:04:40,140 --> 00:04:45,980
the contextual thing and then you deal with switches and stuff you know like whether you

51
00:04:45,980 --> 00:04:49,500
want your output in yaml and things like that all of those things you might actually be

52
00:04:49,500 --> 00:04:56,060
able to justify a switch for are now stateful and and so that means like if I have a command

53
00:04:56,060 --> 00:05:01,900
that that needs to say okay I prefer yaml as my output then we have like var and we have

54
00:05:01,900 --> 00:05:06,740
a thing called var and we have a thing called config and you can save those things in a stateful

55
00:05:06,740 --> 00:05:10,940
contextual way that sticks into your home directory and that's all built in and those

56
00:05:10,940 --> 00:05:14,500
are you don't have to put that into your monoliths but you can do so those are and by the way

57
00:05:14,500 --> 00:05:19,020
this approach that I do with bonsai is is elsewhere so let me let me give you an example

58
00:05:19,020 --> 00:05:24,940
so even Qubectl has a hint of this right so Qubectl tab tab you get all these options

59
00:05:24,940 --> 00:05:30,260
right but if you go Qube config right when Qubectl config like wow look at all these

60
00:05:30,260 --> 00:05:35,180
other commands right and so then we're going to do available commands wait what happened

61
00:05:36,180 --> 00:05:42,900
all right so get get context so Qubectl is kind of doing the same thing right but so

62
00:05:42,900 --> 00:05:46,940
but it still has dash dash current and all these are the things that you have to add

63
00:05:46,940 --> 00:05:50,180
right but I didn't want to bring this up I'm only I only have one context right now if

64
00:05:50,180 --> 00:05:57,980
you're if you're so this is an I this is an example of stateful contexts entering into

65
00:05:57,980 --> 00:06:02,700
the mainstream and it's not just here you're having more and more commands that that are

66
00:06:02,700 --> 00:06:08,820
expecting they're providing like a default context or state and I mean this this is

67
00:06:08,820 --> 00:06:13,740
revolutionary when it comes to like you know what we used to do the idea that your that

68
00:06:13,740 --> 00:06:19,220
a specific command like Qubectl or anything would have state that's stored in your home

69
00:06:19,220 --> 00:06:24,540
directory that you can then change rather than dealing with this switch every time I

70
00:06:24,540 --> 00:06:27,700
mean because the answer to this up to this moment has been right a bash script or something

71
00:06:27,700 --> 00:06:31,860
like that that's got all of the particular you know options that you want in there and

72
00:06:31,860 --> 00:06:37,500
or an alias or something right I mean let me give you an example so so so so LS right

73
00:06:37,500 --> 00:06:44,460
so LS my LS command is actually LS dash H color equals auto color equals auto if LS had

74
00:06:44,460 --> 00:06:51,140
been written to be a stateful you know command then these kind of things would automatically

75
00:06:51,140 --> 00:06:58,260
be stored in a in a sort of standard way within the home directory of the user rather than

76
00:06:58,260 --> 00:07:04,060
as an alias right with these crazy ass you know human readable thing like and if we actually

77
00:07:04,060 --> 00:07:08,740
did this kind of thing more frequently we would have the ability to transfer our preferences

78
00:07:08,740 --> 00:07:12,820
in a single file or directory dot under dog configure dot local or cash in like that so

79
00:07:12,820 --> 00:07:17,500
this is I'm think I'm thankful to say that this is where the universe is going thank

80
00:07:17,500 --> 00:07:23,500
God is that we are allowing state to be added to even things as granular as LS rather than

81
00:07:23,500 --> 00:07:28,460
create these aliases and stuff and we see that in Cube CTO when we do Cube CTO config

82
00:07:28,460 --> 00:07:31,740
you know we could change the context and all our commands are based on that namespace or

83
00:07:31,740 --> 00:07:35,900
based on that preference or but unfortunately we can't set our default output format that

84
00:07:35,900 --> 00:07:39,740
would be fantastic wouldn't it how many of you would like to change your output format

85
00:07:39,740 --> 00:07:46,100
for Cube CTO to default to wide probably a lot of you or to YAML or to JSON you probably

86
00:07:46,100 --> 00:07:49,700
want for this for the for the duration of the session to change that instead of having

87
00:07:49,700 --> 00:07:54,740
use that fucking switch on every single time you go back into your history and go edit

88
00:07:54,740 --> 00:08:00,980
it no amount of Z shell or fish you know assistance on the command line is going to overcome

89
00:08:00,980 --> 00:08:05,860
the bad design that forces you to put that switch on every fucking command line every

90
00:08:05,860 --> 00:08:10,020
time if that had been turned into a stateful configuration parameter I'm sorry I'm swear

91
00:08:10,020 --> 00:08:15,180
I normally don't do that on YouTube but this stuff gets me very angry yeah pain would have

92
00:08:15,180 --> 00:08:24,580
a config if if if we if we you know dare to give ourselves permission to give all commands

93
00:08:24,580 --> 00:08:33,620
state and context and rooted you know command trees the world would become a better place

94
00:08:33,620 --> 00:08:39,220
and I'm again I'm very grateful to report that this is already sneaking into our world

95
00:08:39,220 --> 00:08:44,660
let me show you a few examples so the first one I know of is get the first substantial

96
00:08:44,660 --> 00:08:55,340
program to violate the one one thing you know do one thing well idea was get and and ironically

97
00:08:55,340 --> 00:09:00,140
get still fulfills that get is just a front end there's actually a ton of commands in

98
00:09:00,140 --> 00:09:06,220
here so you can get add I mean it used to be multiple commands right so the old days

99
00:09:06,220 --> 00:09:12,940
of doing one thing well and and I mean that still applies that that that refactoring into

100
00:09:12,940 --> 00:09:20,020
one thing well but but in you know 2022 we've allowed ourselves to say look we have memory

101
00:09:20,020 --> 00:09:25,860
we have this space it's okay to put these one thing well things inside of monoliths that

102
00:09:25,860 --> 00:09:29,780
travel around and that's what bonsai is by the way and and then that way we know we have

103
00:09:29,780 --> 00:09:35,500
the portability of it all but we bring all of that functionality with us so and I mean

104
00:09:35,500 --> 00:09:40,700
busybox did this very thing and you guys ever seen busybox every single command from the

105
00:09:40,820 --> 00:09:45,580
from unix all of all the base units commands we've been this is not new right it's been

106
00:09:45,580 --> 00:09:50,180
used it's been it's been multicoll binaries before but busybox busy you know let me do

107
00:09:50,180 --> 00:09:54,340
a Docker thing so Docker you some people might not know this actually I have podman on here

108
00:09:54,340 --> 00:10:01,100
let me see if this doesn't work a podman dash it dash dash run I mean how how annoying is

109
00:10:01,100 --> 00:10:06,740
it that I have to type all that right isn't it I mean I am running podman so frequently

110
00:10:06,740 --> 00:10:10,220
with these parameters that I would want that to be my default context but I can't do that

111
00:10:10,860 --> 00:10:17,100
right it drives me crazy why can't I tell podman or docker that by default I want to remove

112
00:10:17,660 --> 00:10:24,140
the things after I run them I have to type dash dash rm every fucking time because it has no sense

113
00:10:24,140 --> 00:10:29,740
of state it should it should and I might actually redo a podman that has it that way but unfortunately

114
00:10:29,740 --> 00:10:35,980
no so it still has a command so I'm going to do a run and I just want to show you alpine

115
00:10:36,940 --> 00:10:43,740
which is the most common with the most popular Unix distro okay fine a Docker just to get it out

116
00:10:43,740 --> 00:10:56,860
of here whoops run what am I doing wrong exec alpine right I cannot remember my Docker commands

117
00:10:56,860 --> 00:11:01,100
right now what am I doing wrong people I'm doing something wrong

118
00:11:05,420 --> 00:11:11,580
is it does it have to be before the flags okay thank you for helping me make my case further

119
00:11:14,460 --> 00:11:20,380
I mean how annoying is that I'm glad that happened on the stream alive because that's

120
00:11:20,380 --> 00:11:24,940
exactly what I'm talking about the flags are part of the commands sometimes they're not though

121
00:11:24,940 --> 00:11:28,860
there has been several commands where that does not matter where they appear in the command line

122
00:11:28,860 --> 00:11:34,620
right but some do yeah whatever I mean it's super annoying it's super annoying because I mean how

123
00:11:34,620 --> 00:11:39,180
many times have I written this command I still can't remember it I should have been able to just

124
00:11:39,180 --> 00:11:45,420
tab my way through the thing and figure out the syntax if it had had a you know a human friendly

125
00:11:46,540 --> 00:11:49,420
you know rooted command tree that I would I would already know what to do

126
00:11:50,460 --> 00:11:53,980
right and if one of those commands has helped then I could I could say okay well this particular

127
00:11:53,980 --> 00:11:58,540
command has state and I can set the state variables for that thing such as remove yourself every time

128
00:12:00,220 --> 00:12:04,540
you know whatever so so so here we are on alpine let me just show you what I'm talking about so if

129
00:12:04,540 --> 00:12:10,460
you go to this slash bin and you ls that shell you'll notice right away that there is a bunch of

130
00:12:10,460 --> 00:12:16,780
stuff that's sim linked right if you go look at the same stuff on busybox it's hard links

131
00:12:17,580 --> 00:12:20,860
it's actually kind of interesting you want to see the difference they're all the same file they're

132
00:12:20,860 --> 00:12:27,340
all the same this is called a multicoll binary and this is a very early version probably earliest

133
00:12:27,340 --> 00:12:38,540
version of a contextual command interface so they maintained you know the one thing good

134
00:12:38,540 --> 00:12:45,100
kind of mantra from unix and from the philosophy but then they hit it from everybody by making all

135
00:12:45,100 --> 00:12:50,220
of them individual commands and those commands are all in a single binary that binary fits on

136
00:12:50,220 --> 00:12:55,820
a floppy disk on a 1.5 megabyte floppy disk that's why busybox was curated and and you can go back

137
00:12:55,820 --> 00:13:00,060
on a lot of people don't know this but you can go let's do the same thing let's run busybox this time

138
00:13:01,180 --> 00:13:06,460
assuming I can get the command right and you just go into bin here and you'll see

139
00:13:08,060 --> 00:13:12,620
hard links this time so the way you know it's a hard link because you got 401 hard links here

140
00:13:12,620 --> 00:13:16,380
they're all exactly the same size binary and they all look like they're actually separate no they're

141
00:13:16,380 --> 00:13:26,700
all hard links and yeah and so yeah this is this is the modern era though so the modern era started

142
00:13:26,700 --> 00:13:32,220
with busybox really but these days you know the closest thing I mean git was the first one

143
00:13:32,220 --> 00:13:36,300
git said you know Torvald said you know we got memory I'm going to put all of the commands

144
00:13:36,300 --> 00:13:46,140
that again now git is almost its own you know thing and strictly speaking these command lines

145
00:13:46,140 --> 00:13:52,220
that we're using for git or whatever are domain specific languages and you know what if we had

146
00:13:52,220 --> 00:13:57,500
treated them like that from the beginning we would have a much better command line world

147
00:13:57,500 --> 00:14:03,980
today and I am happy to report that the world has woken up and decided that creating things that are

148
00:14:04,060 --> 00:14:08,780
naturally intuitive like git has been I mean I mean obviously there's a lot of selections here

149
00:14:08,780 --> 00:14:12,540
but but let me give you another example so you can go to any one of these things right

150
00:14:12,540 --> 00:14:18,860
but let me give you another really good example ip the ip command right same thing it's a it's a

151
00:14:18,860 --> 00:14:23,180
it's a you want to call it a model it you want to call it a command with subcommands whatever you

152
00:14:23,180 --> 00:14:29,820
want to call it it has that and you can like kind of keep going right you can do address okay I got

153
00:14:29,820 --> 00:14:35,660
that and I go address tab tab oh look I got I can do address change delete flush and help

154
00:14:35,660 --> 00:14:42,060
I really really really love this command because I had nothing to do with this command nothing to

155
00:14:42,060 --> 00:14:48,540
do with it I did not even know about it and it has the the creators the brilliant people

156
00:14:48,540 --> 00:14:55,740
behind the ip command have created exactly what I created in bonsai to the letter to the letter

157
00:14:55,740 --> 00:15:02,140
now they they do allow dashes and stuff like that and but the fact that they put the help command

158
00:15:02,140 --> 00:15:09,820
after the command that help is a subcommand of the main command is exactly what I did was z

159
00:15:09,820 --> 00:15:16,140
so I do z bonsai right so I do z is the um my help is way better than that but if I do z unique

160
00:15:16,140 --> 00:15:23,020
right everything in bonsai comes with an optional embedded help command so I can type help and I get

161
00:15:23,020 --> 00:15:28,620
a man page and this has been structured exactly like the man pages and you get this help documentation

162
00:15:28,620 --> 00:15:35,740
for free with bonsai it automatically detects the subcommands as they have been uh composed

163
00:15:35,740 --> 00:15:40,860
into your monolith and at every level in the commands tree at every level of the you know the

164
00:15:40,860 --> 00:15:46,620
command level uh of your of your commentary you you get a different help command that is

165
00:15:47,660 --> 00:15:52,620
specific to the available commands under that section automatically and I built that into

166
00:15:52,620 --> 00:15:57,580
bonsai so the fact that the ip people have actually done the same thing and shows to put help there

167
00:15:57,580 --> 00:16:03,900
instead of dash h which is probably also going to work nope good for you I love the ip whoever

168
00:16:03,900 --> 00:16:09,580
designed the ip command you are brilliant you're a brilliant wonderful people thank you so much for

169
00:16:09,580 --> 00:16:13,500
seat for days and and you know there's a lot of other commands so net plan is one I know people

170
00:16:13,500 --> 00:16:19,420
don't like net plan but people are starting to wake up and we have git you know a cube ctl is

171
00:16:19,420 --> 00:16:23,900
getting better I think it'll eventually come around and create you know this this kind of interface

172
00:16:25,180 --> 00:16:31,580
but I just I'm just super happy with that now unfortunately uh you know that in order to get

173
00:16:31,580 --> 00:16:37,820
color here I still couldn't set state so guess what I had to do you're gonna see it aren't you

174
00:16:38,780 --> 00:16:44,060
I can't set state so the thing the thing that the people doing these command line interfaces have

175
00:16:44,060 --> 00:16:52,700
not yet fully accepted is a way to standardize context and so my term for this and this is

176
00:16:52,700 --> 00:16:59,100
going to be the term I'm going to propagate going forward is contextual rooted command trees

177
00:17:00,140 --> 00:17:03,900
contextual rooted command trees or stateful rooted command trees

178
00:17:05,660 --> 00:17:11,820
stateful contextual the point is that you should be able to set the state of your switches

179
00:17:12,620 --> 00:17:17,420
and and do it one at a time so I'm going to go do this one I'm going to go do another one

180
00:17:18,380 --> 00:17:24,300
and it's not that most of the time when you want dash c on a thing you always want dash c on a thing

181
00:17:24,940 --> 00:17:30,060
right and like for cube ctl how many times have you just wanted the namespace to be for a single

182
00:17:30,060 --> 00:17:38,540
command during a cube ctl session pretty much never right and so you are forced to go up and

183
00:17:38,540 --> 00:17:44,220
redo that exact same command line and rebuild it every time because there's no command to set the

184
00:17:44,220 --> 00:17:49,340
default namespace you can in the context but then you have to go through that convoluted

185
00:17:49,340 --> 00:17:54,940
context switching crap because because no one is really standardized or thought about a simplified

186
00:17:54,940 --> 00:18:02,140
way to do it now I have in bonsai so in bonsai you can actually do var and var is a generic way

187
00:18:02,860 --> 00:18:09,900
to capture variables that are stored statefully in a file for everything

188
00:18:10,540 --> 00:18:16,460
that uses for everything in the monolith and I really wish that that we could standardize on

189
00:18:16,460 --> 00:18:21,660
this so and it so the default way to do this is home art of x robbie goes into your home directory

190
00:18:21,660 --> 00:18:25,820
I don't know can you see that my help description is actually specific to my account

191
00:18:25,980 --> 00:18:33,100
you know why because I'm running the help command from the command

192
00:18:34,540 --> 00:18:41,180
so I have dynamic help that detects your current situation that means all that stateful

193
00:18:41,180 --> 00:18:45,900
stuff that we're also adding guess what you can leverage that in your help documentation so when

194
00:18:45,900 --> 00:18:52,540
you go man or instead of doing man rides you go z whatever help it can actually in interrogate

195
00:18:52,540 --> 00:18:56,460
the local cache or the very variables they've already set and it will display them in your help

196
00:18:58,540 --> 00:19:03,580
I mean these are things that that are like next level when it comes to thinking about these these

197
00:19:03,580 --> 00:19:08,300
these type of like really extremely human friendly interfaces and and and I you know just

198
00:19:08,300 --> 00:19:11,980
rather than getting angry about it I went ahead and build it I would like to see these things

199
00:19:11,980 --> 00:19:18,540
incorporated into more things but being able to standardize on dot cache z vars I mean you throw

200
00:19:18,540 --> 00:19:22,860
away there usually the cache oh yeah this is actually probably one of the best use cases for

201
00:19:22,860 --> 00:19:26,780
go but you know I mean let me just I sounds like I'm selling bounds bonsai here that's not how

202
00:19:26,780 --> 00:19:31,580
what I started on this but bonsai was you know of course my solution to this but I have a z

203
00:19:31,580 --> 00:19:38,700
monolith that that is here just to show you what I'm talking about so um you know and just to show

204
00:19:38,700 --> 00:19:45,660
you how easy it is to do this all I these are all of the the bonsai branches I call them which are

205
00:19:45,660 --> 00:19:54,140
just commands with their own trees and I just import them and they're here that's the end of it

206
00:19:54,140 --> 00:20:01,340
I can create my own uh dynamic template variables for my help I can set flags I can create you know

207
00:20:01,340 --> 00:20:07,020
if I want to do a multi-call I can do that um here is a here is a parent command so this is

208
00:20:07,020 --> 00:20:09,660
this is a command is different I mean you have to get into bonsai I'll do a whole thing I'm on

209
00:20:09,660 --> 00:20:12,780
bonsai I'm gonna write a book about bonsai actually the reason I'm doing all this keg stuff

210
00:20:12,780 --> 00:20:17,580
it's got a lot of books to write and one of the books I want to write is is is bonsai the book

211
00:20:17,580 --> 00:20:21,420
about bonsai the bonsai guide because I think and here's here's the shortcuts here's all my

212
00:20:21,420 --> 00:20:26,700
shortcuts through the command tree that goes into the monolith so I can bypass some things right

213
00:20:28,380 --> 00:20:35,740
and and stuff um and here it says uh and there's I mean here's an example of the help template

214
00:20:35,740 --> 00:20:40,380
which uses the most amazing templating system in the world the go templating system is by far

215
00:20:40,380 --> 00:20:45,740
the most powerful that's ever been created uh it's so easy to create extensive extensible

216
00:20:45,740 --> 00:20:51,260
uh syntax for your templates everything anyway so that's it the rest of this stuff is all pulled

217
00:20:51,260 --> 00:20:56,460
in from these other things including local stuff so the env go this is a sub-command I just wrote

218
00:20:56,460 --> 00:21:00,700
really quickly I was like hey I just want to print my environment variables and I you know

219
00:21:00,700 --> 00:21:03,980
just couldn't come out of stuff I I don't want to get too much into bonsai I just wanted to show

220
00:21:04,780 --> 00:21:08,620
you know I wrote some tmux stuff I'm in the middle of converting all of my

221
00:21:08,620 --> 00:21:12,140
bash scripts into a single z monolith that I can copy onto any target system

222
00:21:12,140 --> 00:21:17,740
including things that running any shell on planet earth because because this is a binary it doesn't

223
00:21:17,740 --> 00:21:23,420
care how it's being executed at all and one of the things I haven't added yet is I want to add

224
00:21:23,420 --> 00:21:27,820
completion so that if you I don't have this yet but if I were right now if I just do z enter it

225
00:21:27,820 --> 00:21:34,940
shows me the help but I am going to add so if you if you wish to you can set up the default shell

226
00:21:35,580 --> 00:21:40,780
and when you do z enter what it will do is it'll it'll put you into a tab completion terminal mode

227
00:21:41,660 --> 00:21:50,300
that's supported on any on any shell whatsoever including DOS so if and when we get that because

228
00:21:50,300 --> 00:21:55,420
that library has already been written I mean gh already uses it right so the gh tool already

229
00:21:55,420 --> 00:22:02,460
uses something to this effect so the create repo create you're seeing this more and more it has

230
00:22:02,460 --> 00:22:07,020
this whole terminal interactive it's like a little sort of it's not truly a command line it's an

231
00:22:07,020 --> 00:22:13,580
interactive terminal session but but but for places that don't have completion I want to

232
00:22:13,580 --> 00:22:16,940
be able to just go z enter and then enter a command and hit tab and have it find the right

233
00:22:16,940 --> 00:22:22,140
command on anything anything anything whatsoever because because the completion will then be built

234
00:22:22,140 --> 00:22:29,580
into the monolith itself in a very tiny like micro shell if you will so that that haven't built that

235
00:22:29,580 --> 00:22:34,460
yet but that that's coming and and to me that's that's where we're going you know we we have these

236
00:22:34,460 --> 00:22:42,700
these other things here you know I have my pomo command is in here and pomo start and there's

237
00:22:42,700 --> 00:22:50,060
my pomo up in the corner z pomo stop anyway so that that's what I I don't know what should we call

238
00:22:50,060 --> 00:22:55,260
them should we call them stateful or contextual what should what should we call them I think we

239
00:22:55,260 --> 00:23:01,500
should call them stateful rooted commandries uh that's what I think I think they're stateful

240
00:23:02,540 --> 00:23:07,180
I think stateful is the right word because because they do have state I mean you know

241
00:23:07,180 --> 00:23:12,300
the a subcommand might you know it switches and stuff might be changed now I also have a config

242
00:23:12,300 --> 00:23:18,220
command which is for you know that throws you into a config yaml file and lets you change your

243
00:23:18,220 --> 00:23:22,220
configuration for your local system for your local z bonzai command and that stuff's not meant to be

244
00:23:22,220 --> 00:23:26,060
temporary cache and that's the kind of thing that you would copy around with you in your dot files

245
00:23:26,860 --> 00:23:31,820
but the vars the vars uh you know bonzai tree those are all optional by the way you don't have to

246
00:23:31,820 --> 00:23:36,700
put those into your bonzai tree if you don't want but if you do put the vars uh the vars into your

247
00:23:36,700 --> 00:23:42,220
bonzai tree you get stuff under dot cache but then if you go onto another system and you don't take

248
00:23:42,220 --> 00:23:47,340
your cache with you you just get the defaults for all your your commands uh unless you you know and

249
00:23:47,340 --> 00:23:53,340
that's it's up to you to kind of decide whether you want to implement uh your bonzai tree command

250
00:23:54,460 --> 00:23:59,820
using config uh so which you know can use a centralized config by the way one config for an

251
00:23:59,820 --> 00:24:09,260
entire monolith um and because you know you're able to like drill down and versus um you know having

252
00:24:09,260 --> 00:24:14,620
having cached variables that are that are that are there now you know the amount of time it takes

253
00:24:14,620 --> 00:24:21,100
to read from those variables and all that stuff is so infinitesimally small that it's it's not an

254
00:24:21,100 --> 00:24:26,140
issue it's not an issue it might have been an issue in 1976 but it's you know it's not anymore

255
00:24:27,180 --> 00:24:31,900
so so that's that's what that's about um that's really all I have to say about that so I I encourage

256
00:24:31,900 --> 00:24:39,500
people to um to play around and if you discover a a stateful root of node tree uh root of command

257
00:24:40,300 --> 00:24:48,060
some somewhere um let me know and we can you know put these together I'd like I'd really

258
00:24:48,060 --> 00:24:54,940
like to kind of see how the world is waking up and throwing get out out thank god uh you know

259
00:24:54,940 --> 00:25:02,300
dashes be damned uh you know I the other great thing about this is that these interfaces that

260
00:25:02,300 --> 00:25:10,060
we're building can easily be spoken if you pick words that are real if you I've tested this on my

261
00:25:10,060 --> 00:25:15,260
on my pixel my google pixel with natural language so I mean people people are already using command

262
00:25:15,260 --> 00:25:22,060
lines we have like sales people using command lines because they're using uh slack right so

263
00:25:22,060 --> 00:25:26,620
somebody writes a slack bot or a twitch bot and you know maybe they put an exclamation point in

264
00:25:26,620 --> 00:25:32,300
front of it but they put a bot in there and then the bot is is processing natural you know

265
00:25:32,300 --> 00:25:38,540
is processing these messages all the time and those messages are real so so the more realistic

266
00:25:38,540 --> 00:25:42,620
and and human that we make our interfaces is simpler we make them without all the dashes you

267
00:25:42,620 --> 00:25:46,780
can never do this with get off right but but if we actually move to a stateful root of node tree

268
00:25:46,780 --> 00:25:53,660
command kind of situation all of our commands on the command line can be directly implemented

269
00:25:53,660 --> 00:26:00,140
as bot commands with no modification and now you can go into your favorite chat app and slack

270
00:26:00,140 --> 00:26:07,260
or a twitch or whatever and you can speak your commands to the thing and that is really the

271
00:26:07,260 --> 00:26:12,780
future now you don't need a full blown machine learning algorithm to to process every possible

272
00:26:12,780 --> 00:26:18,380
thing here you just need the definition of a domain specific language so that you can tell

273
00:26:18,460 --> 00:26:23,660
your bot or your system or whatever about it and then do it alexa's already doing this

274
00:26:24,220 --> 00:26:27,900
series already doing this they already have gotten in fact if you go out if you've ever written on

275
00:26:27,900 --> 00:26:33,580
alexa uh conversational command i was really into conversational ui for a long time about four years

276
00:26:33,580 --> 00:26:40,380
ago i created a thing called skeezix and and sabah which is conversational assistant virtual agent

277
00:26:40,380 --> 00:26:44,700
but i that's i haven't gotten anywhere without since then but i do believe that the future is

278
00:26:44,700 --> 00:26:49,660
going to be conversational interfaces so the more we can start using stateful rooted tree

279
00:26:49,660 --> 00:26:54,060
node tree commands the the closer we're going to get to conversational interactions with our

280
00:26:54,060 --> 00:27:00,780
computer i systems to those you know sci-fi's in the 1970s that we saw where people were talking

281
00:27:00,780 --> 00:27:06,780
to the computers and telling them what to do until we create conversation until we get to the point

282
00:27:06,780 --> 00:27:13,980
where we're getting rid of get ops i can run an ip command by speaking it into my command line if i

283
00:27:13,980 --> 00:27:26,300
had a voice interface i can do it i can't do that with gpg imagine that example i i want to create a

284
00:27:26,300 --> 00:27:31,820
new gpg key right or i want to encrypt something with gpg can i speak the command to my computer

285
00:27:31,820 --> 00:27:37,820
at this moment and have it work no but i could if i wanted to look up the current ip address for

286
00:27:37,820 --> 00:27:42,620
for a specific ethernet configuration assuming my conversational interface let me spell out you

287
00:27:42,620 --> 00:27:47,500
know individual um ethernet ids which would be great if some of the conversation the uis would

288
00:27:47,500 --> 00:27:51,740
start to allow that if they would have a keyword that said spell blah blah blah or whatever we

289
00:27:51,740 --> 00:27:57,260
could actually start doing that and then then we can start using our fancy microphones to write code

290
00:27:58,540 --> 00:28:03,020
or to interact with these systems and we will not ever be able to do that until the world wakes up

291
00:28:03,020 --> 00:28:09,820
as it has been and starts using stateful rooted node node node command trees or if you wish just

292
00:28:09,820 --> 00:28:15,100
natural language command line uis which is what it is i mean i kind of think that's probably the

293
00:28:15,100 --> 00:28:19,180
better way to say it we should start being we should start to use natural language command

294
00:28:19,180 --> 00:28:26,700
line uis and maybe that means that we put you know we make certain words optional maybe maybe we do

295
00:28:26,700 --> 00:28:30,380
maybe we say if somebody puts an article in there or something that we you know they don't have to

296
00:28:30,380 --> 00:28:35,420
talk like a robot to interact with their command line conversational ui maybe maybe we we we use

297
00:28:35,420 --> 00:28:40,540
regular expressions actually that's that's what schesix and kava were they actually i i wrote an

298
00:28:40,540 --> 00:28:45,980
app it's i got to go find it again but i started writing a conversational ui that used a regular

299
00:28:45,980 --> 00:28:53,900
expression to match any of the root node tree commands and now that i think about it that's

300
00:28:53,900 --> 00:29:03,100
probably something we could add to bonsai um the only problem with that is that uh right now the

301
00:29:03,100 --> 00:29:08,300
the way that the um the node tree works you have to have a single unique you know thing through it

302
00:29:08,300 --> 00:29:16,940
but if we could ever create a way to to add helper words that are ignored you know the or whatever

303
00:29:16,940 --> 00:29:23,260
without going full-blown machine learning algorithm model you know or we could we could actually start

304
00:29:23,260 --> 00:29:28,780
speaking in very very natural ways to our to our to our monoliths and do things like that

305
00:29:28,780 --> 00:29:33,580
so and i i look forward to the day but i mean just being able to tab through something to me is like

306
00:29:33,580 --> 00:29:38,620
is like plenty plenty good for now because i don't like reading about all the help and everything i

307
00:29:38,620 --> 00:29:43,980
think you should be able to to immediately understand what your options are on on any command just by

308
00:29:43,980 --> 00:29:50,220
hitting tab i mean if you can't do that if you have to go slog through a man page uh i mean you

309
00:29:50,220 --> 00:29:54,700
should be able to see boom and see all your options and go hmm this one looks really good and you

310
00:29:54,700 --> 00:29:59,980
know to cobra's cobra's credit i will tell them this i they you know if you tab tab through this

311
00:30:00,780 --> 00:30:07,900
um wait that's not the one i'm thinking of um which is the one that does it there's there's uh

312
00:30:09,980 --> 00:30:17,100
there's there's one oh that's not it there's there's one that uh will actually give you a

313
00:30:17,100 --> 00:30:23,340
summary like a very long-winded description oh no gh there is it'll give you a long-winded description

314
00:30:23,420 --> 00:30:31,100
it runs it into more and everything when you do this right um and i do find that kind of interesting

315
00:30:31,100 --> 00:30:36,860
that it that it does that um the reason it's the way it's doing that is it's actually running a shell

316
00:30:36,860 --> 00:30:43,500
script uh in order to get you that and that's that's a bonsai thing and that that's very

317
00:30:43,500 --> 00:30:48,380
shell dependent and they have different versions for each shell and i i feel like that's nice and all

318
00:30:48,380 --> 00:30:54,620
but i it's not it's definitely not portable so um but but i want to show this because it does show

319
00:30:55,340 --> 00:30:59,260
how you could break down you know the the description of of what each of the things are but

320
00:30:59,260 --> 00:31:04,140
i don't even think you really need that i i think you just need to be able to just do z tab tab um

321
00:31:05,340 --> 00:31:12,860
and you should be able to get to look at um you know all of these different things to go

322
00:31:12,860 --> 00:31:17,500
hmm well what does that one about right and then just do path help and you'll you can see the help

323
00:31:17,500 --> 00:31:23,340
okay path doesn't have that path must be a uh a shortcut to something else and i actually don't

324
00:31:23,340 --> 00:31:27,180
know which one it is it is a shortcut i probably should have a shortcuts command or something

325
00:31:28,140 --> 00:31:31,900
that is that is something that i want to look at so i mean help here will show me

326
00:31:32,700 --> 00:31:39,660
i think actually my help does show my shortcuts it does there it goes uh it does yay i did something

327
00:31:39,660 --> 00:31:48,700
good so path path thing is env get path so if i were to do z env uh help and that would give me

328
00:31:48,700 --> 00:31:57,340
that and you can actually do help help help help on being repressed um so so yeah you can actually

329
00:31:57,340 --> 00:32:02,780
the help command uh has a bunch of sub commands and it does its own parsing of the thing so i mean

330
00:32:02,780 --> 00:32:07,740
that's all that's all i have for this youtube video but but i encourage you as i said to to

331
00:32:07,740 --> 00:32:12,220
consider you know making human friendly interfaces at the end of the day that's what we're talking

332
00:32:12,220 --> 00:32:17,580
about and human friendly these days means conversational and that in this case means you

333
00:32:17,580 --> 00:32:25,100
know a stateful commentary uh and and i'm going to just shorten it i'm going to say stateful

334
00:32:25,100 --> 00:32:33,500
commentaries uh and there we made up a new term let me know what you think in the comments below

335
00:32:33,500 --> 00:32:39,260
am i youtubey enough yet

