1
00:00:00,000 --> 00:00:05,660
Start recording. All right, we're recording for the beginner boost today. As you can tell, I am very casual today

2
00:00:05,660 --> 00:00:12,500
I am supposed to clean my room and I've been playing all weekend and went out and had sushi and watched jazz last night and

3
00:00:13,980 --> 00:00:18,420
Before that went to the art show and stuff. So that's on the VODs

4
00:00:19,300 --> 00:00:21,620
What are we doing today though? What do you hear? What are you here?

5
00:00:21,620 --> 00:00:28,660
You're here because you want to know how to configure your dot files and that is what we're gonna do week 13

6
00:00:28,660 --> 00:00:30,660
What an appropriate number

7
00:00:31,300 --> 00:00:36,240
To do your Linux dot files. And so we're gonna talk about well, what what is the dot file?

8
00:00:37,220 --> 00:00:42,020
Where's the name come from what it what which ones do I care about how many of them are there?

9
00:00:42,380 --> 00:00:47,340
What's the standard and this is an essential part of understanding Linux?

10
00:00:48,620 --> 00:00:50,620
Or Unix, you know

11
00:00:51,140 --> 00:00:57,260
The Unix standard does sometimes apply but not not always and so we're gonna we're gonna go over all that

12
00:00:57,260 --> 00:01:00,300
So the first thing I'm gonna do and we already did this like four or five weeks ago, right?

13
00:01:00,300 --> 00:01:02,460
We we went through kind of like a speed pace

14
00:01:02,460 --> 00:01:06,260
We went through all the configuration files just to kind of talk about the file system

15
00:01:06,260 --> 00:01:11,740
We were talking about the organization of the overall file system of Linux and we really don't have other than that

16
00:01:11,740 --> 00:01:16,420
Dave or we kind of went through that. We really don't want to spend a lot of time explaining to you

17
00:01:16,420 --> 00:01:18,760
What every directory in all of Linux is for?

18
00:01:19,860 --> 00:01:24,140
That wouldn't be a boost that would be you know a full whatever, you know

19
00:01:24,580 --> 00:01:27,380
Comprehensive coverage of the whole thing. So we're not gonna do that

20
00:01:27,380 --> 00:01:31,660
But we are gonna talk about everything in your home directory and that's super important

21
00:01:32,180 --> 00:01:37,660
We did finish bash coding scripting yesterday or last not yesterday, but last time

22
00:01:38,380 --> 00:01:40,020
so

23
00:01:40,020 --> 00:01:46,260
And that was a prerequisite you really can't do any configuration until you know how to write the code

24
00:01:46,260 --> 00:01:51,240
So one of the best ways to get practice with with bash is to actually write the bash

25
00:01:51,560 --> 00:01:57,380
Configuration file, which is also written in bash and so we're gonna jump right in and talk about all that

26
00:01:58,280 --> 00:02:03,300
We are gonna go for four hours today. So we'll be taking breaks as we go, but but beyond bash. So

27
00:02:04,560 --> 00:02:09,440
Let's talk about the specific files. We're gonna cover. Okay, so we're gonna say we're gonna do

28
00:02:11,000 --> 00:02:12,520
shell

29
00:02:12,520 --> 00:02:14,240
bash

30
00:02:14,240 --> 00:02:19,400
Shell configuration and we will talk about how to configure other shells a little bit

31
00:02:21,280 --> 00:02:23,960
Just so you can know if you like around a Mac you see stuff

32
00:02:23,960 --> 00:02:29,200
It's different, you know why which defaults to Z shell we've already, you know talked about that

33
00:02:29,200 --> 00:02:31,200
We've already bashed Z shell enough

34
00:02:36,080 --> 00:02:41,600
And we already know how to use them we did that we covered that y'all should know that so we're gonna talk about

35
00:02:42,120 --> 00:02:44,120
them configuration and

36
00:02:44,840 --> 00:02:46,840
We're gonna talk about

37
00:02:46,920 --> 00:02:48,920
Actually, we're gonna do X

38
00:02:49,280 --> 00:02:51,280
slash

39
00:02:52,240 --> 00:02:54,240
Vi

40
00:02:55,240 --> 00:02:57,240
Slash

41
00:02:57,240 --> 00:02:58,920
Vim

42
00:02:58,920 --> 00:03:01,480
Configuration we are not gonna do anything besides that

43
00:03:02,520 --> 00:03:07,880
We are gonna do T-Mux configuration. So we covered T-Mux utilization

44
00:03:09,320 --> 00:03:12,560
But we didn't cover T-Mux configuration very much and

45
00:03:13,400 --> 00:03:15,400
And

46
00:03:15,760 --> 00:03:20,640
So these are the things that kind of go together bash vi T-Mux and

47
00:03:23,160 --> 00:03:26,440
We will configure a few other things

48
00:03:28,000 --> 00:03:30,000
So like your scripts directory

49
00:03:30,760 --> 00:03:32,760
right and

50
00:03:33,400 --> 00:03:39,520
So you can start writing scripts and you know use them and thing and what else we need to do

51
00:03:39,760 --> 00:03:44,480
We probably will do links and or w3m

52
00:03:46,560 --> 00:03:48,560
So you can use those

53
00:03:48,880 --> 00:03:50,000
And

54
00:03:50,000 --> 00:03:53,080
We already talked about that but we're gonna talk about after that and

55
00:03:53,760 --> 00:03:57,920
I mean once you have those things you're pretty much gonna have everything on the terminal that you need and

56
00:03:58,200 --> 00:04:02,160
The real important ones are these three the bash vi and T-Mux

57
00:04:02,520 --> 00:04:08,520
Because those are gonna give you files that you can transfer as a single file each one a single file

58
00:04:09,080 --> 00:04:10,760
into

59
00:04:10,760 --> 00:04:15,920
Any system that you're ever using so if you get on a container, and I'll show you how to do that using SSH

60
00:04:17,000 --> 00:04:21,680
We did do some SSH configurations. So we should probably put that in there

61
00:04:22,560 --> 00:04:23,760
I

62
00:04:23,760 --> 00:04:28,960
Mean I think you already have that but we should refer to that. So it's really important that we talk about that one for security purposes

63
00:04:29,280 --> 00:04:32,440
We're not gonna be doing GPG today. Okay. I

64
00:04:34,360 --> 00:04:37,720
Mean I don't I don't know maybe we should do GPG today

65
00:04:39,320 --> 00:04:45,240
Because we have to do get up eventually, you know, we'll save GPG from when we do get up which will probably be next week

66
00:04:48,280 --> 00:04:55,560
But I would I really want to get through all this today if we can because I just want all the configuration settings in here

67
00:04:56,040 --> 00:04:58,680
kind of kind of talked about in one day and then

68
00:04:59,200 --> 00:05:03,480
Y'all can go use it and configure your own VM. Let me just remind you

69
00:05:04,280 --> 00:05:10,040
That the VM that I'm using that has all of my own configurations in it that we're going to be going over today is

70
00:05:10,640 --> 00:05:12,560
in github.com

71
00:05:12,560 --> 00:05:13,760
rvx-rob

72
00:05:13,760 --> 00:05:14,760
boost

73
00:05:14,760 --> 00:05:20,320
VM and you can install VMware player or VMware workstation pro if you want to buy it and

74
00:05:20,520 --> 00:05:25,800
You can put that VM that I'm using you can use this exact same one. We've covered that already in earlier days of the boost

75
00:05:27,400 --> 00:05:32,840
So but that's I'm saying that because you're gonna want to know where to get all that stuff and that's where it's at

76
00:05:34,280 --> 00:05:37,680
So again, these are the things like when I when I install a system

77
00:05:37,680 --> 00:05:41,720
They're the first things I put on so that everything just works, right? And

78
00:05:44,280 --> 00:05:47,640
I'm we should probably talk about I

79
00:05:48,440 --> 00:05:51,040
Mean there's we're not gonna talk about it. I

80
00:05:53,000 --> 00:05:56,080
Want to talk about git I want to talk about github. I want to talk about a bunch of us

81
00:05:56,240 --> 00:06:00,360
But we're gonna save those conversations for when we talk about those tools

82
00:06:03,480 --> 00:06:05,480
I have a question for the for the group here

83
00:06:06,440 --> 00:06:10,800
Should we cover and this is my style. I would do this if I were teaching in person

84
00:06:11,360 --> 00:06:13,360
should we cover

85
00:06:15,520 --> 00:06:18,760
Get and github before we do go programming or after

86
00:06:21,200 --> 00:06:23,200
Because if we do it before

87
00:06:23,320 --> 00:06:28,600
Then we can use it to do our commits to our go code as we are working through it if we do it after then

88
00:06:28,920 --> 00:06:30,660
We can kind of retroactively do it

89
00:06:30,660 --> 00:06:34,540
But we there's a there's a chance we're gonna lose our our code along the way. I

90
00:06:35,260 --> 00:06:40,020
Think we should probably do it before but it's so it's not fun people don't like it

91
00:06:40,020 --> 00:06:41,900
They you know, they just want to get coding, right?

92
00:06:43,100 --> 00:06:46,060
Before would be helpful for go commits. You think before all right

93
00:06:46,540 --> 00:06:51,140
Well, we'll go ahead and and and do it before I think you're right. I think we do need to do it before

94
00:06:52,020 --> 00:06:57,540
All right, so that's at least you know another week of stuff that we have to do before

95
00:06:58,540 --> 00:07:02,580
It's definitely not fun though. And that's why I don't I mean, you know, I

96
00:07:03,420 --> 00:07:09,420
I'm gonna tell you right now being a boost and all we are not going to do. Yeah. Oh, it's absolutely safe your butt

97
00:07:09,420 --> 00:07:12,580
Oh my god, it's saved me so many times. All right, so we will do that

98
00:07:13,540 --> 00:07:18,500
Next week. All right, so so next week. We'll put that down here

99
00:07:19,780 --> 00:07:21,780
Next week

100
00:07:22,140 --> 00:07:26,580
We're gonna do I want to put these all here we're gonna do that means we're gonna have to do GPG

101
00:07:27,180 --> 00:07:31,860
Let's actually save SSH for that same day and that I'll get us through this nice and fun

102
00:07:31,860 --> 00:07:36,060
We'll have a fun day today and then we'll do SSH and GPG config, right?

103
00:07:36,820 --> 00:07:38,820
and then we'll do get

104
00:07:40,140 --> 00:07:42,140
We'll do the GH tool and

105
00:07:43,020 --> 00:07:45,020
We'll do get hub and

106
00:07:46,300 --> 00:07:51,980
We'll talk about we'll talk about all that that that's gonna take a full, you know, a four-hour day all by itself

107
00:07:52,980 --> 00:07:57,220
So that I think that's good. Let's do that and then and then the week after that

108
00:07:58,340 --> 00:07:59,700
I

109
00:07:59,700 --> 00:08:04,500
Think we're pretty set to start coding after that and go

110
00:08:05,380 --> 00:08:08,500
Again, the whole this is very loosey-goosey because I like to

111
00:08:08,900 --> 00:08:11,900
Work with a group and see where they where they want to be and what they want to do

112
00:08:11,900 --> 00:08:17,060
I've changed entire classes from from Java to go on the whims of the people in the class

113
00:08:17,820 --> 00:08:21,500
That's six weeks to set up emacs. No, we're not we're not touching emacs

114
00:08:21,500 --> 00:08:25,380
If you want to touch emacs or VS code or any of that you're gonna have to learn that on your own

115
00:08:26,660 --> 00:08:30,700
Because I mean, you know, that's not hard to pick up that none of this is really hard to pick up if you spend time with it

116
00:08:30,700 --> 00:08:35,980
But but but yeah, all right, so that's a that's kind of our goal for today

117
00:08:37,580 --> 00:08:39,580
I'm gonna put this is the read me and

118
00:08:40,980 --> 00:08:44,180
We're talking about configuration today not necessarily usage but

119
00:08:45,020 --> 00:08:47,020
As we go we're gonna cover that as well

120
00:08:47,540 --> 00:08:52,020
All right, so the first file that we need to talk about is the bash receive us

121
00:08:52,020 --> 00:08:56,440
Let's talk about the home directory. So let's cd enter which takes you into your home directory

122
00:08:57,220 --> 00:09:00,420
And what does the tilde mean? It's just a little bit of a review

123
00:09:01,220 --> 00:09:04,020
What does the tilde mean the tilde means are in your home directory, right?

124
00:09:05,780 --> 00:09:08,140
The review of the prompt this is the active username

125
00:09:08,900 --> 00:09:10,900
This is the machine. I'm on

126
00:09:11,020 --> 00:09:16,100
This stuff is all represented in an environment variable called ps is a ps or ps one

127
00:09:16,620 --> 00:09:20,980
There's my ps one. This tells me everything. We're gonna go through these really quickly

128
00:09:21,860 --> 00:09:24,180
as usual if you want a full

129
00:09:25,940 --> 00:09:32,460
Explanation of bash the best place to go is the man bash and I strongly strongly encourage everybody listening to this

130
00:09:32,980 --> 00:09:39,220
Including the veterans to go through all of the bash man page beginning to end at least once

131
00:09:39,860 --> 00:09:45,260
Right because there's stuff in there that you may not even know exists like for example completion

132
00:09:45,500 --> 00:09:50,380
You can do completion with one command instead of writing a separate shell script and people don't know this because I haven't read it

133
00:09:50,780 --> 00:09:53,100
So it's not covered in any books or anything

134
00:09:53,740 --> 00:09:58,260
So so there you go. You can go look at that and and know where to go to look for stuff

135
00:09:58,820 --> 00:10:03,140
All right, so I am in my home directory. So if I type tree you're gonna get a lot of stuff

136
00:10:03,140 --> 00:10:06,900
I don't want you to see all of that stuff. That's like all my get commits and stuff

137
00:10:07,780 --> 00:10:12,060
And as you I mean, let's just do find dot

138
00:10:13,020 --> 00:10:15,020
depth one

139
00:10:15,540 --> 00:10:17,540
Whoops

140
00:10:17,540 --> 00:10:19,540
Past must be presided. Oh

141
00:10:21,260 --> 00:10:24,780
By what did I do that right is it depth I thought was depth I

142
00:10:28,860 --> 00:10:34,260
Have to look at my thing you guys know about this so if you don't want to list everything. Hey, thank you for the fall

143
00:10:37,780 --> 00:10:40,500
I don't remember my depth command again go look at max depth

144
00:10:42,180 --> 00:10:44,180
Yeah max depth, I think it is

145
00:10:46,140 --> 00:10:48,140
Max depth one. Yeah

146
00:10:48,940 --> 00:10:54,140
All right, so this tells you everything that's in the current directory. Okay, so let's let's just do directories though

147
00:10:56,140 --> 00:11:01,460
Let's do find dash type TD find as your friend my friends

148
00:11:02,060 --> 00:11:03,260
Uh

149
00:11:03,260 --> 00:11:11,140
Warning you have a global max to find the arguments type bookable options are not positional max of effects test specific specified before it as well

150
00:11:11,140 --> 00:11:12,460
Okay

151
00:11:12,460 --> 00:11:19,260
All right. Well, maybe I should do it like this then instead that make the warning go away. Okay, so here's everything in there

152
00:11:19,260 --> 00:11:21,260
If we do a max depth of two

153
00:11:22,460 --> 00:11:24,460
You can see like two layers

154
00:11:25,380 --> 00:11:33,820
So, I mean, there's lots of stuff in here and we're gonna talk about what's in here, but the reason it's called dot files is

155
00:11:37,340 --> 00:11:39,660
So we'll say covered

156
00:11:43,700 --> 00:11:45,700
Covered

157
00:11:47,660 --> 00:11:49,980
Why are they called dot files

158
00:11:50,500 --> 00:11:55,580
Pipes, yeah, we did that we did pipes

159
00:11:59,380 --> 00:12:01,460
Yeah, we did pipes and filters and stuff

160
00:12:03,060 --> 00:12:05,900
I'm pretty sure we did that didn't we we did that last week

161
00:12:06,540 --> 00:12:09,820
How to read use reading we did read IFS and all that stuff

162
00:12:11,220 --> 00:12:14,300
We didn't do different the pipe file type we didn't do five-folds or anything

163
00:12:15,100 --> 00:12:17,100
So why are they called dot files?

164
00:12:17,540 --> 00:12:20,980
They're called off I was gonna be without and what does a dot do?

165
00:12:23,060 --> 00:12:27,580
What is the dot use use initial

166
00:12:28,380 --> 00:12:30,380
dot to

167
00:12:30,460 --> 00:12:32,140
hide a

168
00:12:32,140 --> 00:12:34,140
file or directory

169
00:12:34,500 --> 00:12:40,660
So that's why we use the dot to hide things. Okay, so so normally when you're listening in here

170
00:12:40,660 --> 00:12:44,060
You don't see all that stuff right if you do want to see them. What do you use?

171
00:12:45,060 --> 00:12:47,060
L s dash L a

172
00:12:47,820 --> 00:12:49,820
to see all hidden

173
00:12:51,140 --> 00:12:56,020
Right, you could also use find and I just did that right so you could do L s dash L a

174
00:12:56,740 --> 00:13:03,220
You see all your files there and you see some of them are redirects and we're gonna talk about that and that's a that's a

175
00:13:03,700 --> 00:13:07,740
Way to manage your dot files. I mean we don't we're not gonna don't worry. We'll get there

176
00:13:08,300 --> 00:13:10,700
But just so you know dot files means

177
00:13:11,300 --> 00:13:15,940
Hidden right so that it's not shown. It's not in your face all the time

178
00:13:16,500 --> 00:13:20,500
L s dash L will give you the long version L s dash a will give you just others all the files

179
00:13:20,500 --> 00:13:22,500
so there's lots of them there and

180
00:13:22,940 --> 00:13:29,060
The colors represent different, you know, whether they're a symbolic link or their directory or just a file

181
00:13:29,860 --> 00:13:35,620
I have to be careful here because I mean I haven't put anything in there that I need to be careful of except for the SSH directory

182
00:13:35,820 --> 00:13:37,820
Which we'll talk about next week

183
00:13:38,060 --> 00:13:43,220
But the thing to note here is be careful

184
00:13:45,500 --> 00:13:50,060
Who you know who you show

185
00:13:52,140 --> 00:13:54,140
Your dot files

186
00:13:54,140 --> 00:13:55,580
to

187
00:13:55,580 --> 00:14:01,700
It really depends on the dot file most of the time it doesn't matter and I all of my dot files

188
00:14:01,700 --> 00:14:05,800
By the way, if you want to see any of mine are in my dot directory

189
00:14:06,040 --> 00:14:11,360
Which is on github so you can go in there and you can study it offline if you want to

190
00:14:12,040 --> 00:14:17,160
Art of X-Rob slash dot and that includes my scripts and stuff like that. So I

191
00:14:19,120 --> 00:14:23,640
Mean so how let's talk about how should I manage?

192
00:14:25,440 --> 00:14:27,240
Manage my

193
00:14:27,240 --> 00:14:28,840
Dodd files

194
00:14:28,840 --> 00:14:30,400
So there's lots of ways to do this

195
00:14:30,400 --> 00:14:35,360
I've seen streamers talk about tools that they install to help manage your dot files better and everything

196
00:14:35,880 --> 00:14:42,080
I don't like any of those techniques. So my favorite technique is to

197
00:14:43,000 --> 00:14:45,000
Put your dot file

198
00:14:45,560 --> 00:14:47,360
Into a git repo

199
00:14:47,360 --> 00:14:51,480
Which we will do next week. Okay, we're gonna create the dot file directory today

200
00:14:52,480 --> 00:14:57,840
And we're gonna put our stuff in there, but and we're gonna symbolic link it and all that but we are not going

201
00:14:58,600 --> 00:15:04,920
To you know, we're not we're not gonna make a git a repo for you not this week. Okay, so

202
00:15:05,800 --> 00:15:11,760
See see here. I have like all my dot files and and you can choose how you want to organize them and we're gonna go through all that right now

203
00:15:11,840 --> 00:15:13,680
All right, so

204
00:15:13,680 --> 00:15:15,480
And I'm gonna show you how I do it

205
00:15:15,480 --> 00:15:19,480
But of course you can do it however you want I've had you know

206
00:15:19,480 --> 00:15:24,840
There's streamers who take strong exception to the idea of writing your own setup scripts to do your dot files

207
00:15:24,840 --> 00:15:26,960
I'm like, why would you need a tool for that?

208
00:15:27,600 --> 00:15:32,240
That's what shell scripting is for so I want control of it. And so I do it that way

209
00:15:33,200 --> 00:15:34,800
I

210
00:15:34,800 --> 00:15:39,200
Mean any there's a couple of things about the dot file organization that we need to cover before we leave this

211
00:15:41,160 --> 00:15:43,160
So

212
00:15:45,160 --> 00:15:49,400
Let's let's talk about that a standard

213
00:15:52,560 --> 00:15:54,560
Expected right

214
00:15:57,440 --> 00:16:00,840
Content I guess files and directories

215
00:16:02,360 --> 00:16:05,760
And this is kind of gonna be I

216
00:16:08,320 --> 00:16:10,320
Don't know how to do this

217
00:16:10,920 --> 00:16:13,880
Let's make it its own section. Okay, so there

218
00:16:15,000 --> 00:16:17,880
So let's let's just start start right off the bat

219
00:16:17,880 --> 00:16:23,040
I'm gonna give you an overview and then we'll go in and then we'll start looking at them. Okay, so profile profile

220
00:16:24,080 --> 00:16:26,080
What is profile?

221
00:16:26,280 --> 00:16:28,280
right

222
00:16:28,680 --> 00:16:30,680
profile is

223
00:16:30,960 --> 00:16:37,360
Used this is the boost. Yep. This is a boost episode even though I'm being like chill

224
00:16:38,280 --> 00:16:40,280
so

225
00:16:40,520 --> 00:16:45,640
So boost I'm actually live in case you're wondering so profile is like

226
00:16:46,560 --> 00:16:48,560
original

227
00:16:48,560 --> 00:16:50,560
login

228
00:16:51,120 --> 00:16:53,120
Script so

229
00:16:53,280 --> 00:16:56,840
What is the dot profile file? Let's see how they say it

230
00:16:58,280 --> 00:17:00,280
What is the stream title saying right now?

231
00:17:01,400 --> 00:17:03,600
Well, yeah, let me change the stream title. I'm sorry

232
00:17:05,040 --> 00:17:09,220
Yeah, let me change it. You know what I've gotten used to not doing that because these days

233
00:17:09,220 --> 00:17:11,720
I don't need to change the stream title

234
00:17:13,000 --> 00:17:15,000
because

235
00:17:15,560 --> 00:17:18,960
I'm just recording it. So thank you for the reminder

236
00:17:21,280 --> 00:17:23,280
We are week 13

237
00:17:25,120 --> 00:17:27,120
Thank you for the reminder

238
00:17:27,480 --> 00:17:31,000
Let me change it really quick

239
00:17:32,040 --> 00:17:34,040
We're still in just chatting to you

240
00:17:34,520 --> 00:17:37,040
We should go in software and where's the science and tech

241
00:17:38,480 --> 00:17:40,480
We're in science and tech. This isn't software

242
00:17:41,880 --> 00:17:43,560
Linux

243
00:17:43,560 --> 00:17:45,120
MA. Yeah

244
00:17:45,120 --> 00:17:46,440
done

245
00:17:46,440 --> 00:17:48,440
How's that?

246
00:17:49,000 --> 00:17:53,080
Sorry about that everybody as I said, I'm very informal I

247
00:17:54,080 --> 00:17:57,280
Said a dash a for what?

248
00:17:59,840 --> 00:18:01,840
For listing

249
00:18:02,840 --> 00:18:04,840
What are you talking about

250
00:18:06,760 --> 00:18:08,920
No, no such else fine

251
00:18:12,840 --> 00:18:17,280
Does it I mean I've never used it is that is that a positive thing as well I

252
00:18:18,600 --> 00:18:20,600
Mean let's test it

253
00:18:20,600 --> 00:18:24,120
This is why we have a team of people here are watching me so we can check it

254
00:18:24,120 --> 00:18:26,640
Let's go to busybox to see if it supports actually that was the alpine

255
00:18:28,480 --> 00:18:30,480
Run

256
00:18:30,800 --> 00:18:33,400
RM we'll do is whatever alpine has hey

257
00:18:36,320 --> 00:18:37,880
Alpine

258
00:18:37,880 --> 00:18:41,360
Alpine is a container that has a minimal unit distribution in it and

259
00:18:42,480 --> 00:18:45,080
So LS dash capital L. Okay, cool

260
00:18:45,840 --> 00:18:49,080
Never used it not not a thing that I ever used really

261
00:18:50,840 --> 00:18:52,840
Let's see go back home LS dash

262
00:18:54,000 --> 00:18:56,160
L L L nothing there

263
00:18:58,680 --> 00:19:00,040
Interesting

264
00:19:00,040 --> 00:19:05,200
Yeah, I I don't know I've never used it. So but yeah, it's cool. Sounds like a good option to use

265
00:19:07,680 --> 00:19:16,040
Okay, what is profile so profile and in Linux is I mean I when I list I want to see everything so it's probably why

266
00:19:17,040 --> 00:19:18,240
Um

267
00:19:18,240 --> 00:19:24,680
Profile extension issues for files in the terminal programs show profiles by Linux and macOS terminal program contains definition for shell environments

268
00:19:24,680 --> 00:19:27,960
Such as environment variables. This is a horrible answer

269
00:19:29,640 --> 00:19:31,640
And how do I open it?

270
00:19:32,240 --> 00:19:34,240
No

271
00:19:35,760 --> 00:19:40,920
So I know what I want to say, but I want to see what other people are saying about it

272
00:19:41,920 --> 00:19:46,120
So I'm gonna go ahead and say it so the profile is

273
00:19:48,400 --> 00:19:55,920
What controls you logging in right it's for logging in and there's something we probably need to talk about here really quick

274
00:19:58,520 --> 00:20:00,520
So there is

275
00:20:02,680 --> 00:20:04,680
Difference between

276
00:20:06,480 --> 00:20:08,480
Login

277
00:20:08,520 --> 00:20:10,520
And

278
00:20:11,720 --> 00:20:13,720
Login let's see

279
00:20:14,440 --> 00:20:16,440
Login shell

280
00:20:17,120 --> 00:20:20,040
All right, so what is the login show we're gonna have to talk about this so

281
00:20:20,880 --> 00:20:24,200
There are log in slash interactive, right?

282
00:20:26,840 --> 00:20:31,200
Now who does anybody want to take a stab at talking about the difference here

283
00:20:32,200 --> 00:20:36,320
In order we have the knowledge to cover this because we've already talked about

284
00:20:37,040 --> 00:20:40,400
Sub shells and sub process anybody remember what those are?

285
00:20:41,520 --> 00:20:46,320
So this isn't this is gonna be important because it's the first thing in the bash RC file when we get into it

286
00:20:46,560 --> 00:20:51,880
So when I run a shell, so when I start a new bash program

287
00:20:52,400 --> 00:20:56,320
It runs a new interactive shell because it knows it's got a terminal and everything right

288
00:20:56,560 --> 00:21:03,280
But when I run something in the background and we haven't talked about backgrounding processes or anything like that yet and bash

289
00:21:03,280 --> 00:21:05,280
And we probably should have talked about that

290
00:21:05,560 --> 00:21:07,560
I

291
00:21:09,120 --> 00:21:12,800
Don't know if that's a boost topic or not. All right

292
00:21:15,200 --> 00:21:19,680
Suffice it to say that when you like run ps3 you might have to install it, right?

293
00:21:19,680 --> 00:21:22,560
If you have to sudo app install ps3, right?

294
00:21:22,560 --> 00:21:26,400
So this shows you everything that's running on the machine as you can see we got system D

295
00:21:26,400 --> 00:21:33,680
There's running as a top and and then we have all the the the the programs that run under that these programs are all executed

296
00:21:33,680 --> 00:21:35,680
using a syscall called exec and

297
00:21:36,720 --> 00:21:40,800
Ultimately, they create this parent child hierarchy relationship, right?

298
00:21:41,360 --> 00:21:44,320
That's kind of thing exists all over in in you know

299
00:21:45,040 --> 00:21:49,840
In this and you can see there's my tmux server and I have bash and bash is running links and stuff, right?

300
00:21:49,920 --> 00:21:52,160
And there's my bash process running ps3. Okay

301
00:21:53,440 --> 00:21:56,160
Well, what happens when you have a bash?

302
00:21:56,800 --> 00:21:58,800
That's running another bash

303
00:21:58,960 --> 00:22:00,400
right

304
00:22:00,400 --> 00:22:06,000
Then you have a situation where we talked about exporting variables and all that. I don't want to cover that again

305
00:22:06,720 --> 00:22:08,240
but

306
00:22:08,240 --> 00:22:10,240
The difference between interactive shell

307
00:22:10,960 --> 00:22:12,640
and a login shell

308
00:22:12,640 --> 00:22:18,160
Or I mean a non login shell login or interactive. I guess of the kind of the same or technically not. I mean there

309
00:22:18,960 --> 00:22:26,320
There's yet another situation where you remotely connect into the shell into the machine and that is yet another thing

310
00:22:27,040 --> 00:22:31,120
Um, that will that will run if you make a remote connection into the machine

311
00:22:31,760 --> 00:22:34,640
so you have these sort of three states of

312
00:22:35,360 --> 00:22:38,320
Bash or frankly anything running on the system you have

313
00:22:38,960 --> 00:22:44,800
Some a shell where someone has interactively like connected and and that's going to show you like

314
00:22:45,840 --> 00:22:48,000
Look at all those tmux processes that are still running

315
00:22:48,880 --> 00:22:54,640
Um, so like you remember I I I'm I'm ssh'd into this so technically I'm remote

316
00:22:55,520 --> 00:22:57,280
Uh, would be who?

317
00:22:57,280 --> 00:23:02,800
Yeah, so here's all my tmux sessions and it shows that I came from that machine and the ssh'd in or whatever

318
00:23:03,680 --> 00:23:10,560
And and then you have just an interactive shell that maybe was started by another login shell

319
00:23:11,280 --> 00:23:17,520
Uh, I think yeah, you have remote shell non login and login. That's a good way to put it. Thank you and

320
00:23:18,640 --> 00:23:22,960
Interactive just means that you can type you can like interact with the shell, right? It's not

321
00:23:23,600 --> 00:23:29,280
Running behind something it's not running because some other programs started it or something and

322
00:23:30,080 --> 00:23:34,640
This becomes important when you're doing things like like in my my my bonsai command

323
00:23:34,640 --> 00:23:36,720
Which we're going to write we're going to write some bonsai and go

324
00:23:37,440 --> 00:23:40,880
And I you can see how the colors are all here and everything, right?

325
00:23:41,440 --> 00:23:45,760
That's because the program that can detect that it's in an interactive shell

326
00:23:46,560 --> 00:23:49,840
That the that the output the standard output is to a terminal

327
00:23:49,920 --> 00:23:54,800
That's how you detect this by the way the way to detect that you are using an interactive

328
00:23:55,520 --> 00:24:00,080
Uh slash login shell is that the standard output is going to

329
00:24:00,960 --> 00:24:04,560
Uh a terminal if it's not going to a terminal. It's going to a program or something

330
00:24:05,040 --> 00:24:07,680
And and the that's so you can do things like this

331
00:24:08,080 --> 00:24:13,440
I can see that the colors are not there now, right because why I I sent the same exact output

332
00:24:14,000 --> 00:24:17,760
Uh to a program to a pager more which is alias to less

333
00:24:18,400 --> 00:24:22,960
And and now the colors are taken away and the reason for that is so that if I wanted to output

334
00:24:23,600 --> 00:24:26,000
That the output of that command to a file

335
00:24:26,080 --> 00:24:30,800
I wouldn't have all those ugly, you know color escapes for the for that in there

336
00:24:30,960 --> 00:24:33,520
And that's a that's an important technique that's used all the time

337
00:24:33,920 --> 00:24:40,960
But I'm I'm showing it right now to illustrate that an interactive shell or an interactive terminal or a login terminal

338
00:24:40,960 --> 00:24:42,960
Which are kind of the same

339
00:24:43,760 --> 00:24:46,640
Is you know one that the the output

340
00:24:47,520 --> 00:24:51,680
Is going to a terminal and that's the best way programmatically to determine that

341
00:24:53,360 --> 00:24:59,360
I believe that dot profile is the one that runs all the time no matter what it always runs, right?

342
00:24:59,760 --> 00:25:03,760
So you kind of have to have a dot profile even if

343
00:25:05,200 --> 00:25:07,200
In fact, let me try it without it

344
00:25:07,520 --> 00:25:09,520
Let me let me try it. Let's do some experimentation

345
00:25:09,840 --> 00:25:13,600
Let's go back into here and let's actually move my dot profile out of the way, right?

346
00:25:14,080 --> 00:25:16,080
Let's move it to dot old profile

347
00:25:17,360 --> 00:25:21,440
And so now I have no profile, right now. Let's actually log in

348
00:25:22,000 --> 00:25:24,880
Uh from Anton again. I'm going to have to go out here

349
00:25:25,920 --> 00:25:27,920
And make a a new screen

350
00:25:28,320 --> 00:25:33,440
So so this this is robbit tv. This is this is my git bash terminal running on windows

351
00:25:33,920 --> 00:25:37,120
Not wsl windows. This is git bash running on windows

352
00:25:37,600 --> 00:25:39,600
So I can ssh

353
00:25:39,920 --> 00:25:46,080
If you want a bash like environment, your bash is by far the best and you ssh into Anton

354
00:25:46,480 --> 00:25:50,720
Which is the name of my system and it gives me normal stuff

355
00:25:52,400 --> 00:25:54,400
And it says

356
00:25:55,040 --> 00:25:57,040
Well, it's kind of filled the screen there. What's up with that?

357
00:25:57,760 --> 00:25:59,760
All right, so so as you can see

358
00:26:00,960 --> 00:26:06,080
That still worked and the reason it worked is because my shell is bash

359
00:26:06,880 --> 00:26:08,880
Right, so

360
00:26:09,040 --> 00:26:12,880
It knows to run another file in here, which is called

361
00:26:14,560 --> 00:26:16,560
Dot bash, right

362
00:26:17,600 --> 00:26:21,840
That dot bash, uh, I think profile or bash rc

363
00:26:22,480 --> 00:26:26,800
So bash profile, uh, is let's go actually take a

364
00:26:27,920 --> 00:26:29,920
Let's go. Let's take a look at

365
00:26:30,960 --> 00:26:32,400
Um

366
00:26:32,400 --> 00:26:34,400
Another account here

367
00:26:35,360 --> 00:26:40,640
I want to take a look at a brand new account. Actually, let's do that. Let's use a brand. Let's don't use mine. Let's use a brand new one

368
00:26:42,160 --> 00:26:44,960
All right, so so now well

369
00:26:49,200 --> 00:26:51,200
I think we already configured this one, didn't we?

370
00:26:52,560 --> 00:26:54,880
No, I did ssh. That's why so it should be fine

371
00:26:55,600 --> 00:26:57,920
So if I look at dot profile, what's in there?

372
00:26:58,640 --> 00:27:01,440
All right, so this is what becomes in your dot profile file

373
00:27:02,160 --> 00:27:04,160
And it's usually really bad

374
00:27:04,880 --> 00:27:07,520
The profile executed by the command interpreter for login shills

375
00:27:08,400 --> 00:27:09,760
So

376
00:27:09,760 --> 00:27:11,440
The file is not

377
00:27:11,440 --> 00:27:16,720
Read by bash if bash profile bash login exists. Okay, so bash is unique

378
00:27:17,280 --> 00:27:20,080
Um, if you're on older unique systems that we won't get into

379
00:27:20,720 --> 00:27:23,280
uh profile becomes important because

380
00:27:24,000 --> 00:27:26,320
Uh, particularly if you're like running on mac

381
00:27:26,880 --> 00:27:28,160
I'm pretty sure if you're running mac

382
00:27:28,160 --> 00:27:32,240
If unless you're running your back even if you're running bash is you're making sure they're still needed. Um

383
00:27:33,200 --> 00:27:34,560
And

384
00:27:34,560 --> 00:27:36,560
Is it good to have this file around?

385
00:27:36,880 --> 00:27:39,600
Yeah, it's probably good to keep it in your collection

386
00:27:40,000 --> 00:27:43,120
I've never had it had to need it when I go work on a remote system

387
00:27:43,440 --> 00:27:45,440
I just copy over my bash rc file

388
00:27:45,760 --> 00:27:50,240
And so one of the the goals that we're going to talk about is how to make all your stuff in a single file

389
00:27:50,560 --> 00:27:53,680
Instead of having it in bash profile and bash login and all over the place

390
00:27:54,240 --> 00:27:55,280
um

391
00:27:55,280 --> 00:27:57,280
And so bash rc so

392
00:27:57,920 --> 00:28:06,400
Bash rc is meant to run anytime you have any bash program execute whatsoever login remote or anything, right?

393
00:28:06,960 --> 00:28:08,080
um

394
00:28:08,080 --> 00:28:10,080
Bash profile and bash login

395
00:28:10,480 --> 00:28:16,640
Are supposed to be only for login shills, right? And uh the default mask is an etsy profile

396
00:28:17,760 --> 00:28:21,600
By the way, if you want to change where this comes from you can go look at that, right?

397
00:28:22,320 --> 00:28:26,320
Uh etsy profile is where all this stuff comes from for the whole system

398
00:28:27,120 --> 00:28:30,880
Right, this is this is where it copies this over for everybody

399
00:28:31,680 --> 00:28:33,120
um

400
00:28:33,120 --> 00:28:34,400
and

401
00:28:34,400 --> 00:28:39,280
So I I don't want to go too far down that horrible. It's a pretty big rabbit hole

402
00:28:40,000 --> 00:28:43,600
It suffices to say it's annoying as hell to have to manage multiple files

403
00:28:44,400 --> 00:28:48,800
So the region so what I would suggest is that

404
00:28:49,840 --> 00:28:55,520
You just put everything in bash rc and I'm going to show you how to do that. Okay, so

405
00:28:56,640 --> 00:29:01,680
Like right now if we log we log in actually, let's do this. Let's let's actually log in

406
00:29:02,320 --> 00:29:08,800
So you can actually log in from the command line to another account as if you had remotely logged in using the login command

407
00:29:09,360 --> 00:29:13,360
Uh su uh su dash does the same thing essentially

408
00:29:13,920 --> 00:29:16,880
um, but so we're going to do login. Let's log in as the boost account

409
00:29:17,680 --> 00:29:18,960
and

410
00:29:18,960 --> 00:29:20,960
Cannot work without effective root

411
00:29:21,600 --> 00:29:22,960
all right fine

412
00:29:22,960 --> 00:29:24,960
su do login

413
00:29:24,960 --> 00:29:26,160
uh

414
00:29:26,160 --> 00:29:29,680
Called by bash rc and can keep bash is clean. I don't I don't agree with that at all

415
00:29:30,640 --> 00:29:34,320
I hate that approach. I I've read that so many times and I hate it

416
00:29:34,800 --> 00:29:39,840
Bash aliases is supposed to be for bash aliases people who put a full blown bash rc and our bash aliases

417
00:29:40,480 --> 00:29:42,880
Are not doing what I would do

418
00:29:43,760 --> 00:29:46,400
Uh, I don't agree with that, but if you want to do that, that's fine

419
00:29:47,120 --> 00:29:52,560
People think it's fine and they'll leave there the only time that would make sense to put anything in your bash aliases file

420
00:29:53,040 --> 00:29:55,120
would be if you wanted to keep the

421
00:29:55,840 --> 00:29:57,840
uh dot bash rc file

422
00:29:58,480 --> 00:30:02,960
Unmodified and you or for some reason your multi user system has locked down that file

423
00:30:03,520 --> 00:30:09,360
Uh, I don't encounter that situation very often. So that's that's not something I recommend

424
00:30:09,520 --> 00:30:11,520
That it made a lot of people recommend it all the time

425
00:30:11,840 --> 00:30:18,720
So I just want to say I find that really annoying mostly because it's a misnomer. It's not a bash aliases file

426
00:30:18,960 --> 00:30:22,000
It's like everything right so my preference

427
00:30:22,160 --> 00:30:26,480
By the way, when you're doing this you got to be careful to do it with this with an extra account

428
00:30:26,960 --> 00:30:31,120
Because or to keep the other file around because you can keep yourself from logging in

429
00:30:31,760 --> 00:30:33,920
Uh, if if you're not careful, so

430
00:30:34,800 --> 00:30:40,240
You know, but you have a vm. By the way, how do you go take a so we take a snapshot of our vm?

431
00:30:41,120 --> 00:30:43,680
You can go take a snapshot of your vm if you if you're scared

432
00:30:44,720 --> 00:30:46,720
Right, that's why we're doing vms. Let's do it

433
00:30:47,200 --> 00:30:49,200
Let's go into

434
00:30:49,200 --> 00:30:51,200
um

435
00:30:51,440 --> 00:30:53,840
Maybe in our workstation pro or whatever yours is

436
00:30:54,720 --> 00:31:00,800
And where are you my friend? Okay, here we go. And so we're not on the ssh endpoint. We're going to go find

437
00:31:01,520 --> 00:31:03,520
Our other one. We're going to go to anton

438
00:31:04,080 --> 00:31:06,560
And I am going to take a snapshot

439
00:31:08,080 --> 00:31:13,520
File where is it? It's vm snap snapshot take snapshot

440
00:31:14,400 --> 00:31:17,920
All right, and we're going to do take snapshot snapshot one

441
00:31:18,480 --> 00:31:21,840
Boom. Okay. Now you can always go back to that later if you need to

442
00:31:22,720 --> 00:31:27,680
Uh, we are running right now. So this might make us a little bit slower for a second

443
00:31:28,800 --> 00:31:30,800
It's really lagging. Oh my god

444
00:31:33,200 --> 00:31:37,760
It's a pretty big image, so I don't know we might crash. I hope I don't

445
00:31:40,400 --> 00:31:42,400
Uh

446
00:31:42,640 --> 00:31:49,120
Yeah, you know what, you know, I forgot to pause it. I forgot to pause Anton to take a snapshot

447
00:31:50,080 --> 00:31:52,080
You should generally pause it before you do that

448
00:31:54,240 --> 00:31:56,240
I'm kind of curious to see if it's even going to be able to do it

449
00:31:58,880 --> 00:32:01,680
My uh, my fan is sure moving fast

450
00:32:04,720 --> 00:32:06,720
Yeah, I did a lot of around there

451
00:32:08,160 --> 00:32:10,160
I hope I didn't break it

452
00:32:12,720 --> 00:32:16,560
I was at a grub arg

453
00:32:18,160 --> 00:32:20,160
Because we finished. Oh

454
00:32:23,200 --> 00:32:26,000
When is command jake command no, I'm not doing that

455
00:32:27,360 --> 00:32:29,360
Um

456
00:32:30,000 --> 00:32:32,640
In it bin bash interesting. Yeah

457
00:32:33,360 --> 00:32:38,240
Yeah, I we don't play with grub because we're using VMs right now, but you could do that if you wanted to

458
00:32:39,200 --> 00:32:43,200
Um, yeah, that would be more for like if you want to which I want to do by the way

459
00:32:43,200 --> 00:32:46,720
If we have time not in this booth, but later on I make it so

460
00:32:47,600 --> 00:32:49,760
We can talk about how to make your own Linux machine

461
00:32:50,640 --> 00:32:54,560
If that's what you want to do, uh, I'm not I've done something that I do anymore

462
00:32:54,960 --> 00:32:59,600
I am going to be installing Linux on a bunch of other stuff. We're getting kind of foggy here

463
00:33:01,760 --> 00:33:03,760
Yeah

464
00:33:03,920 --> 00:33:05,920
Get back into a VM

465
00:33:06,720 --> 00:33:08,720
Yeah, I feel like I might have broke this

466
00:33:10,960 --> 00:33:14,080
I might have broke this by taking a snapshot. It usually doesn't do that

467
00:33:15,920 --> 00:33:17,760
Well

468
00:33:17,760 --> 00:33:21,120
I should have I should have stopped the image engine before it's taken a snapshot

469
00:33:21,680 --> 00:33:27,040
It's trying really hard to do it with all this processing power going on and it's kind of lagging my community up if you're up

470
00:33:29,360 --> 00:33:31,360
Yeah

471
00:33:32,320 --> 00:33:39,680
We are definitely breaking I know we're breaking because I this is a huge VM

472
00:33:44,480 --> 00:33:49,680
Yeah, it it's a huge the machine doesn't have enough memory is the problem

473
00:33:52,320 --> 00:33:54,320
Uh, I don't have to stop it

474
00:33:54,320 --> 00:33:56,320
Okay

475
00:34:22,080 --> 00:34:24,080
Shut down

476
00:34:24,320 --> 00:34:38,320
Client loop. We got a client loop. Yeah. Power off.

477
00:34:38,320 --> 00:34:50,320
Are you still there?

478
00:34:50,320 --> 00:35:05,320
Taking a snapshot is supposed to take a snapshot of the VM, but you need to have the VM paused or stopped to do it. I can't believe it. Let me do it. I made a mistake.

479
00:35:05,320 --> 00:35:15,320
Yeah.

480
00:35:15,320 --> 00:35:31,320
Yeah, I broke it. And then my host OS is having all kinds of problems because it's running out of RAM.

481
00:35:31,320 --> 00:35:52,320
So because I turned up the RAM on my VM and it's trying to swap it all out, which is really bad.

482
00:35:52,320 --> 00:36:19,320
And I think about bash OSes.

483
00:36:19,320 --> 00:36:34,320
Yeah, it didn't have enough RAM. I had to free up some apps to give it the RAM. That's why it was failing.

484
00:36:34,320 --> 00:36:38,320
Now it's fine. It's fine now. I had to free up some RAM.

485
00:36:38,320 --> 00:36:44,320
Yep. All right. So we're back. We should be back now. Sorry about that.

486
00:36:44,320 --> 00:36:55,320
The reason for that, in case you're wondering, I know exactly why that happened. I just forgot. First of all, number one, I forgot to pause the VM, which makes the saving faster.

487
00:36:55,320 --> 00:37:06,320
And number two, I've allocated eight gigabytes of RAM to Anton because I want a nice smooth experience.

488
00:37:06,320 --> 00:37:22,320
So taking a snapshot of an eight gigabyte memory image on a 16 gigabyte system that's running other things at all causes lots of like pain and suffering on the part of windows.

489
00:37:22,320 --> 00:37:31,320
Or any computer, frankly, because it didn't have it and it didn't swap it very well. So as soon as I cleaned up some of that memory and got rid of those other applications,

490
00:37:31,320 --> 00:37:38,320
both of them electron applications, by the way, Discord and Spotify, which take enormous amounts of RAM.

491
00:37:38,320 --> 00:37:47,320
And as soon as I cleared it, cleared up that RAM, I had enough RAM for VMware to finish the snapshot, which probably would have done even without me turning it off.

492
00:37:47,320 --> 00:37:55,320
But I'm going to go ahead and turn it back on. I actually have a command for that. We already have a snapshot now taken so we can do that.

493
00:37:55,320 --> 00:38:03,320
So if I want to turn it back on, I have a command here called VM run Anton.

494
00:38:03,320 --> 00:38:13,320
And that's a script I have. And that will start up Anton and then we can ssh back into Anton as soon as it comes back up.

495
00:38:13,320 --> 00:38:22,320
And that does it headlessly. And we've covered about how to do this stuff in other booths. So I don't want to go back to it, but that's kind of a fun.

496
00:38:22,320 --> 00:38:33,320
You have to write your own VM run command. It's waiting for it to come on. You guys want to see which one it is.

497
00:38:33,320 --> 00:38:38,320
So this is what's in there. Oh, whoops.

498
00:38:39,320 --> 00:38:55,320
Oh, it's just a, okay, there we go. So VM run is just a, is just a function that I added to my bash RC file in on my Windows machine.

499
00:38:55,320 --> 00:39:05,320
And so it runs VM run and runs the headless no GUI for this. This is actually a really good thing to have.

500
00:39:05,320 --> 00:39:14,320
I did, I think we cut and paste that into other, other stuff, but I kind of want to put it in the notes as well.

501
00:39:14,320 --> 00:39:22,320
Again, once we get there, so ssh Anton, Anton should be up now. And that's because we set up our ssh config, which we did a while ago.

502
00:39:22,320 --> 00:39:32,320
And so now we are in here again, we're in the home directory, and we'll just run the Tmux from here.

503
00:39:32,320 --> 00:39:46,320
And we should be good. All right, so let's see here though, I do want to go to the boost again really quick and go to the 13 read me.

504
00:39:46,320 --> 00:39:56,320
I want to put that a little bit of code in there.

505
00:39:56,320 --> 00:40:07,320
VM, actually, let's, let's put it a separate file, because I want to cut and paste that into the, to the docs.

506
00:40:07,320 --> 00:40:18,320
Tmux, actually, no, because it's a, it's a function.

507
00:40:18,320 --> 00:40:34,320
So, so yeah, that's a windows thing. Now, I do kind of want this, in fact, in fact, I'm probably going to add this to my bash RC file because, and this is leading into another thing I want to talk about, which is conditional evaluation of stuff in your bash RC.

508
00:40:34,320 --> 00:40:45,320
So, even if you can always use init equals bin bash to get back into Linux without a snapshot.

509
00:40:45,320 --> 00:40:56,320
Yeah, but I wanted to save the changes up to that point. So, okay, so we've got, we'll call this and read me again.

510
00:40:57,320 --> 00:41:05,320
And we'll go back here. And we're in the home directory. All right, so dot profile.

511
00:41:05,320 --> 00:41:15,320
By default, if you want to look, and the master makes a good point, if you, if you want to use all the defaults, you can do that if you want.

512
00:41:15,320 --> 00:41:23,320
Right. And you can just put everything in the bash aliases file. I don't particularly like to do that myself. But if you want to do that, you could with bash.

513
00:41:23,320 --> 00:41:32,320
Okay. If you want it. Now, the way that I've configured mine is that it works at one point. I think I actually have broken it since then.

514
00:41:32,320 --> 00:41:43,320
At one point, my bash RC would work with politics shell and bash and a bunch of other stuff. But I've since changed it. So it's pretty bash, bashified.

515
00:41:43,320 --> 00:41:51,320
It's also no longer generic. And so let's talk about, let's talk about organization of files again for a second.

516
00:41:51,320 --> 00:42:05,320
So, so you have, you have this profile, we talked about the interactive thing, right? And you have the login or slash interactive, and then you have remote, which means you came from outside from someplace else.

517
00:42:05,320 --> 00:42:19,320
And those are the main ways. And then you have non interactive, which means stuff is running, but there's no interactive terminal and that includes scripts that are being called from, from other things.

518
00:42:19,320 --> 00:42:30,320
Okay. And we're going to, we're going to jump right into the bash RC file right away on that. And you can decide whether you want to do the, but let's talk about the organization a bit.

519
00:42:30,320 --> 00:42:40,320
So you have the dot profile, which is just kind of there, you have the bash profile, which executed if you have bash, the bash history file, which is created.

520
00:42:41,320 --> 00:42:51,320
That's the thing that, you know, when you do your set dash OVI, which we're going to talk about, you can navigate through here and check the lines out, you can even go to a line.

521
00:42:51,320 --> 00:43:04,320
If you, well, no, I guess you can't. That was, I guess you can't. I thought you could. Anyway, so bash profile bash RC. And then we have some standard directories and I want to put these in the read me.

522
00:43:04,320 --> 00:43:29,320
Okay. So we have, I'm just going to put these out here first. So we have dot config, standard, say, user slash local, local means, usually just for the user configurations for different applications.

523
00:43:29,320 --> 00:43:48,320
And go, by the way, this is called the US OS. I think it's user. It's not user. It's user config. I think it is. I guess user configure.

524
00:43:48,320 --> 00:44:08,320
Let people know this. So I'm going to show you how to get to it. There we go. User caster, user configure and user home. Those are the, those are the main ones. So user configure.

525
00:44:08,320 --> 00:44:25,320
So this is a standard across, it's set by the, the open desktop. And we have cash, okay, is your local cash. Now what is cash?

526
00:44:25,320 --> 00:44:46,320
Cash is cash is where you write things temporarily that are meant to be to go away. So like your browser cash or, you know, things that are that a program wants to use and have it be there for next time, but might throw it away.

527
00:44:46,320 --> 00:44:59,320
And that contains sensitive data like tokens and things like that. So you don't want to make that public. There's another one couple here that are that don't have, they're not part of an official standard.

528
00:44:59,320 --> 00:45:20,320
And this localized is just a localized tree similar to slash. So this is something that has kind of taken off recently, which recently being like five, six years or so, which is, which I find very, very nice.

529
00:45:20,320 --> 00:45:39,320
So if you want to, instead of putting something in like user bin, which is, you know, you guys know user bin is right. User bin is where we have all the programs and stuff, right. So let's say you compile some code, you know, you could, at one point we used to put this in, you know, bin, right.

530
00:45:40,320 --> 00:46:01,320
And at one point we used to have, you know, TMP and, and that kind of thing and we would put them, you know, as a old, old school place to put localized biners.

531
00:46:01,320 --> 00:46:15,320
But this has since changed to be like, like this is your local bin, modern place to put localized binary executables.

532
00:46:16,320 --> 00:46:38,320
So, you know, I used to put them in bin. It's like, you know, this is like the old school place to put, to put TMP files. And, and these, these things, you know, are related to the stuff that's on the system.

533
00:46:39,320 --> 00:47:04,320
What else we got? So, so we have cash, which we talked about. And if you look at the cash, LSDOT cash, you'll see we have, you know, different programs in here, I put my Z program cash in here, go Java, go build, I mean, stuff does this.

534
00:47:04,320 --> 00:47:16,320
Now, the problem we're going to have is that there's kind of modernized applications and there's the old stuff. And the old stuff still does dot files at the root.

535
00:47:16,320 --> 00:47:30,320
And as you can see, it's rather messy. And this has been a problem now that Linux has kind of become more prominent, because there's so many people that wanted a configuration that the dot files, I mean, this is a relatively clean new system.

536
00:47:30,320 --> 00:47:43,320
I've only been working on the ads on here for kind of a couple months. And, but, but as you get going, and depending on how old the applications are, the more messy everything gets. And one of the things that NeoVim claims to fame is that they put their stuff in the right location.

537
00:47:43,320 --> 00:47:56,320
Right, because they, NeoVim will put everything under dot config cat dot cash and dot local, as opposed to VIM, which uses dot VIM info dot VIM and dot VIM RC at the top level.

538
00:47:56,320 --> 00:48:15,320
Right. And in GNU PG, for example, GPG, that's, that's another thing that doesn't observe, you know, these old conventions that SSH is one of the older applications. So when you are looking around in here, just know that there are kind of modern approaches to this and then there's the old approach to it.

539
00:48:15,320 --> 00:48:19,320
Right. Tmux by default looks here as well.

540
00:48:20,320 --> 00:48:32,320
And this is my own stuff, but, but the Tmux. So that's just something to keep in mind as, as we go through it. So those are the, the, the main directories.

541
00:48:32,320 --> 00:49:01,320
So, yeah, I, we want to put here something about old school, Holmder organization versus, that's about right, versus, versus modern standards.

542
00:49:01,320 --> 00:49:10,320
And it's, it's called, and if you want to know where the standard is, you can go look it up. I think it's x 386.

543
00:49:10,320 --> 00:49:21,320
A desktop standard. This has become the, the place to go get the documentation.

544
00:49:22,320 --> 00:49:40,320
If you want to look it up, the, they're the ones who, who kind of championed it, even though X is a, you know, is it the terminal, not a nonterm, I mean, I want to say a window technology.

545
00:49:40,320 --> 00:49:47,320
So you can actually do a desktop standard directory organization.

546
00:49:47,320 --> 00:50:05,320
All right. Let's go look at that x 36 directory, FSF free software directory x 36 implementation. No, I don't know what it is.

547
00:50:05,320 --> 00:50:11,320
Linux directory. I'm trying to, I thought it was free desktop foundation.

548
00:50:11,320 --> 00:50:38,320
Actually, there we go. It's specifications free desktop.org based or x DG cash home x DG, whatever. So these environment variables, which we'll talk about are also where you should go if you're writing scripts instead of, you know, but go has encapsulated that.

549
00:50:38,320 --> 00:50:52,320
And it's looking for that base directory. If you're making new code, if you're making new scripts that are meant to be run by users, or if you're making new applications, I strongly encourage you to get up to speed on the specification for that.

550
00:50:52,320 --> 00:51:08,320
And again, and on Windows, it's local app data, which is low cash, and it varies right so it's home dash cash on Linux and Unix. And this is again one of the advantages of go is that, you know, you write it and go you do it right.

551
00:51:08,320 --> 00:51:14,320
It will cross compile and work anywhere and it will use appropriate locations for things. That's why I like it so much.

552
00:51:15,320 --> 00:51:24,320
And so, so there we go. Well, old school home to organization versus modern standards. So just make sure you got that down.

553
00:51:26,320 --> 00:51:35,320
And I think that's enough conversation about how this thing is organized. And now we're going to dive into the individual programs to and how to organize them.

554
00:51:35,320 --> 00:51:56,320
So the, the first one is going to be all the stuff to log in. And we talked about this. So the bash profile, the bash RC is the most important, in my opinion, unless they don't have a bash aliases file, if you look at the standard bash aliases, or bash profile, which I should be able to look at here.

555
00:51:57,320 --> 00:52:21,320
Oh, no, Etsy scale Etsy scale contains a Etsy scale is an exact duplicate of a new user's home directory. So if you put anything in Etsy scale, adding to Etsy scale for all new users.

556
00:52:21,320 --> 00:52:27,320
If you add anything in Etsy scale will automatically be added to everybody else. So it's also a good way to go back and see the defaults.

557
00:52:28,320 --> 00:52:37,320
So let's say you screw something up and you want to revert. Yeah, you can go back to the skill. And, and you can go check it out.

558
00:52:38,320 --> 00:52:44,320
So this is one of the reasons I don't mind just using my bash RC because if I needed to revert, I can go back in here and see it.

559
00:52:45,320 --> 00:52:50,320
Bash RC. So this is a default bash RC for the system.

560
00:52:52,320 --> 00:53:01,320
And again, so this is the first program that runs when you log in. And we talked about this before, but I want to show it to you again.

561
00:53:02,320 --> 00:53:07,320
So Etsy password is the file that contains all the users on the system.

562
00:53:08,320 --> 00:53:16,320
The X stands for where the password used to be in flat text, by the way, and, and it's now in secret.

563
00:53:17,320 --> 00:53:22,320
And then we have the user ID and the user group ID, which are almost always the same.

564
00:53:23,320 --> 00:53:25,320
There's usually always a group made for a given user.

565
00:53:26,320 --> 00:53:32,320
And then we have just a generic like comment field, people put all kinds of things in here.

566
00:53:33,320 --> 00:53:36,320
There's a standard like common notation for like that.

567
00:53:37,320 --> 00:53:43,320
It's a really old script from for dealing with like multi-user student systems when you do add password that does that.

568
00:53:44,320 --> 00:53:47,320
And then we have over here, we have the actual home directory.

569
00:53:48,320 --> 00:53:54,320
This is the directory that they'll be put into when they start their login or if they start a new process.

570
00:53:55,320 --> 00:54:00,320
And over here, then we have their shell and the shell, the shell can be used.

571
00:54:00,320 --> 00:54:03,320
I mean, this is our login shell or your login application.

572
00:54:04,320 --> 00:54:06,320
And you can do all kinds of fancy things with this.

573
00:54:07,320 --> 00:54:08,320
I mean, you see route has been bashed.

574
00:54:09,320 --> 00:54:11,320
You could actually make your login shell Python if you wanted to.

575
00:54:12,320 --> 00:54:19,320
You can, when I worked at teleport, we made the login shell of a particular account and application that showed transit times.

576
00:54:20,320 --> 00:54:22,320
And it was actually a way to start it.

577
00:54:23,320 --> 00:54:27,320
If you wanted to create a mud multi-user dungeon or some sort of interactive text adventure,

578
00:54:27,320 --> 00:54:30,320
as long as you're careful so they can't break out, right?

579
00:54:31,320 --> 00:54:33,320
You can, you can set that to be the shell.

580
00:54:34,320 --> 00:54:37,320
And then people get, there's actually the Star Wars.

581
00:54:38,320 --> 00:54:44,320
You can, you can SSH to a particular account someplace and you can watch and ask the animation of Star Wars.

582
00:54:45,320 --> 00:54:49,320
And that's because they set as the shell the program to run when they log in.

583
00:54:50,320 --> 00:54:56,320
So we covered this already, but it's important that we go over it again because it does kind of, I mean, bin false means, hey,

584
00:54:57,320 --> 00:54:59,320
you know, nobody should be logging into that account.

585
00:55:00,320 --> 00:55:01,320
Period. Right.

586
00:55:02,320 --> 00:55:06,320
And bin bashed and Berry is another one.

587
00:55:07,320 --> 00:55:08,320
So I've been bashed on Berry too.

588
00:55:09,320 --> 00:55:12,320
And that, that's going to cover it.

589
00:55:16,320 --> 00:55:17,320
Yeah.

590
00:55:21,320 --> 00:55:23,320
I'm sure I'm thinking about something here.

591
00:55:24,320 --> 00:55:27,320
Yeah, that's it. No, that's right. That's right. I got it. Okay.

592
00:55:28,320 --> 00:55:36,320
What's the difference between user bin no login and false bin false is a program that just returns one, I mean, zero, one or negative one or something.

593
00:55:37,320 --> 00:55:39,320
Let's say it's an actual program that predates everything.

594
00:55:40,320 --> 00:55:43,320
No login is a fancier version of that.

595
00:55:44,320 --> 00:55:45,320
I don't, I don't know.

596
00:55:46,320 --> 00:55:47,320
Man, no login.

597
00:55:48,320 --> 00:55:50,320
Politely refuse a login.

598
00:55:50,320 --> 00:55:53,320
Oh, apparently it's more polite than it's a BSD thing.

599
00:55:54,320 --> 00:55:56,320
I'm not, I don't use the login.

600
00:55:57,320 --> 00:55:58,320
I use false.

601
00:55:59,320 --> 00:56:00,320
I've been using false forever.

602
00:56:01,320 --> 00:56:03,320
So, yeah.

603
00:56:04,320 --> 00:56:06,320
I don't think that's why I didn't log into the login.

604
00:56:10,320 --> 00:56:11,320
Yeah. Interesting.

605
00:56:14,320 --> 00:56:16,320
It gives less, less exciting.

606
00:56:17,320 --> 00:56:18,320
Yeah, it doesn't give any.

607
00:56:18,320 --> 00:56:19,320
Info at all.

608
00:56:20,320 --> 00:56:21,320
So they don't know what to use or anything.

609
00:56:22,320 --> 00:56:23,320
They just connect and it just drops it.

610
00:56:24,320 --> 00:56:25,320
That's why I like false.

611
00:56:27,320 --> 00:56:30,320
I couldn't remember why, but I think that's probably the reason.

612
00:56:31,320 --> 00:56:34,320
So, so again, here is the standard bash RC file.

613
00:56:35,320 --> 00:56:38,320
So this, this is the, I mean, technically speaking,

614
00:56:39,320 --> 00:56:42,320
if you're running from a remote login shell bash profile,

615
00:56:43,320 --> 00:56:46,320
I think runs first, but it's empty, right?

616
00:56:46,320 --> 00:56:49,320
Let's look, let's, let's see what's in XT scale, by the way.

617
00:56:50,320 --> 00:56:55,320
So, so dot profile is like any remote thing.

618
00:56:56,320 --> 00:56:57,320
So let's look at that one.

619
00:57:00,320 --> 00:57:03,320
So this on a standard system executes command interpreter

620
00:57:04,320 --> 00:57:05,320
for login shells.

621
00:57:06,320 --> 00:57:07,320
This file is not read by bash.

622
00:57:08,320 --> 00:57:09,320
If bash profile bash login exists.

623
00:57:10,320 --> 00:57:11,320
And then I'm asking myself, why do I even have one?

624
00:57:12,320 --> 00:57:14,320
The only reason I do have one is there are occasions

625
00:57:14,320 --> 00:57:15,320
I think Mac is one of them.

626
00:57:16,320 --> 00:57:17,320
We're having it night.

627
00:57:18,320 --> 00:57:19,320
It works nicely.

628
00:57:20,320 --> 00:57:21,320
So this just says, Hey, if I'm going to, for some reason,

629
00:57:22,320 --> 00:57:23,320
I ran dot profile instead of everything else,

630
00:57:24,320 --> 00:57:25,320
go ahead and execute it.

631
00:57:26,320 --> 00:57:28,320
In fact, I wonder, I'm going to experiment with something.

632
00:57:29,320 --> 00:57:30,320
I'm going to get rid of mine.

633
00:57:31,320 --> 00:57:32,320
Did we already do that?

634
00:57:33,320 --> 00:57:34,320
Did we already do that?

635
00:57:39,320 --> 00:57:40,320
No, it's not there.

636
00:57:41,320 --> 00:57:42,320
So apparently profiles like really not used.

637
00:57:43,320 --> 00:57:44,320
I might even be able to delete it from my system.

638
00:57:45,320 --> 00:57:46,320
Let me try something else.

639
00:57:47,320 --> 00:57:48,320
Bash dash.

640
00:57:49,320 --> 00:57:50,320
Nope.

641
00:57:51,320 --> 00:57:52,320
They got it.

642
00:57:53,320 --> 00:57:54,320
So kind of useless.

643
00:57:55,320 --> 00:57:56,320
I mean, I hate to say it, but it is the profile is kind of useless.

644
00:57:57,320 --> 00:57:58,320
You may find that you need it on another system.

645
00:57:59,320 --> 00:58:00,320
If you want to run bashing for some reason,

646
00:58:01,320 --> 00:58:02,320
you can't change your login show.

647
00:58:03,320 --> 00:58:04,320
I mean, I don't know.

648
00:58:05,320 --> 00:58:06,320
I can't remember why I have it.

649
00:58:07,320 --> 00:58:08,320
This one, I'm considering getting rid of it.

650
00:58:09,320 --> 00:58:10,320
I mean, I do have one,

651
00:58:10,320 --> 00:58:13,320
but mine is all it does is just run my bash RC.

652
00:58:14,320 --> 00:58:16,320
It's basically a short version.

653
00:58:17,320 --> 00:58:18,320
It was anyway until I moved it.

654
00:58:19,320 --> 00:58:22,320
It's just a, do I have a bash profession in this?

655
00:58:23,320 --> 00:58:25,320
Oh, and you notice how this is written in old school shell as well.

656
00:58:27,320 --> 00:58:28,320
It's like the headaches.

657
00:58:30,320 --> 00:58:31,320
Yeah.

658
00:58:32,320 --> 00:58:33,320
So if we have bash,

659
00:58:34,320 --> 00:58:36,320
then include bash RC and just run it.

660
00:58:38,320 --> 00:58:39,320
Yeah.

661
00:58:40,320 --> 00:58:41,320
It's interesting because this is using,

662
00:58:42,320 --> 00:58:45,320
this is using politics notation for the shell stuff as if,

663
00:58:46,320 --> 00:58:48,320
because dot profile, this is the one thing I know about profile dot

664
00:58:49,320 --> 00:58:53,320
profile is spans all shell types.

665
00:58:54,320 --> 00:58:56,320
So like if you're on a unique system reacts,

666
00:58:57,320 --> 00:58:58,320
which I haven't been on in a long time,

667
00:58:59,320 --> 00:59:00,320
or BST even on a Mac,

668
00:59:01,320 --> 00:59:02,320
you might have issues with dot profile.

669
00:59:03,320 --> 00:59:04,320
So dot profile might be the first thing that runs.

670
00:59:05,320 --> 00:59:06,320
Just know that.

671
00:59:07,320 --> 00:59:09,320
But more importantly is dot bash RC, right?

672
00:59:10,320 --> 00:59:11,320
This is the most important file

673
00:59:12,320 --> 00:59:17,320
and you're the main bash configuration file.

674
00:59:18,320 --> 00:59:22,320
And I prefer to do everything in bash RC

675
00:59:23,320 --> 00:59:25,320
so that I can SCP that bash RC file to anything

676
00:59:26,320 --> 00:59:27,320
and I get the exactly the same environment.

677
00:59:28,320 --> 00:59:29,320
So, so let me give you,

678
00:59:30,320 --> 00:59:31,320
let's actually do an example of that.

679
00:59:31,320 --> 00:59:32,320
Okay.

680
00:59:33,320 --> 00:59:36,320
So if I, let's say I want to work on a container for some reason

681
00:59:37,320 --> 00:59:39,320
and I want to Docker, we haven't done Docker yet,

682
00:59:40,320 --> 00:59:41,320
but in fact, when are we going to put Docker on there?

683
00:59:42,320 --> 00:59:43,320
And we need to put that on there somewhere,

684
00:59:44,320 --> 00:59:45,320
probably after the ghost stuff,

685
00:59:46,320 --> 00:59:47,320
because we can do from scratch containers.

686
00:59:48,320 --> 00:59:49,320
All right.

687
00:59:50,320 --> 00:59:51,320
So Docker dot it dash dash RM, let's run Ubuntu,

688
00:59:52,320 --> 00:59:53,320
which will run Ubuntu server.

689
00:59:54,320 --> 00:59:55,320
It's a lightweight image.

690
00:59:56,320 --> 00:59:57,320
And let's just go run that.

691
00:59:59,320 --> 01:00:00,320
Oh, I didn't do run.

692
01:00:01,320 --> 01:00:03,320
And so now I'm on Ubuntu.

693
01:00:04,320 --> 01:00:05,320
Okay.

694
01:00:06,320 --> 01:00:07,320
And let's actually see.

695
01:00:08,320 --> 01:00:09,320
Do we have a user over here?

696
01:00:10,320 --> 01:00:11,320
Let's add a user, add user.

697
01:00:13,320 --> 01:00:16,320
RxRob and new password.

698
01:00:17,320 --> 01:00:18,320
By the way, these,

699
01:00:19,320 --> 01:00:20,320
see how it's copying files?

700
01:00:22,320 --> 01:00:23,320
That's what you want to try again.

701
01:00:24,320 --> 01:00:25,320
Oopsie.

702
01:00:26,320 --> 01:00:27,320
Yes, please.

703
01:00:28,320 --> 01:00:29,320
My super secret password.

704
01:00:29,320 --> 01:00:30,320
And I'm going to leave them.

705
01:00:31,320 --> 01:00:32,320
I told you the commas.

706
01:00:33,320 --> 01:00:34,320
So this stuff all goes in the common.

707
01:00:35,320 --> 01:00:36,320
There is a user ad as well.

708
01:00:37,320 --> 01:00:38,320
Ad user is a pearl script that comes on all Ubuntu.

709
01:00:39,320 --> 01:00:40,320
Makes it kind of nice to do it.

710
01:00:41,320 --> 01:00:42,320
It's just a convenience.

711
01:00:43,320 --> 01:00:44,320
You can do all the same things with user ad,

712
01:00:45,320 --> 01:00:46,320
which you should probably memorize as well.

713
01:00:47,320 --> 01:00:48,320
I haven't, I mean, I look for it all the time

714
01:00:49,320 --> 01:00:50,320
because I always do this.

715
01:00:51,320 --> 01:00:52,320
So, and now I can actually change over to that user.

716
01:00:53,320 --> 01:00:54,320
And now I'm running as me.

717
01:00:55,320 --> 01:00:56,320
Now I don't have my profile, right?

718
01:00:57,320 --> 01:00:58,320
So this is me with an absolute bare bones

719
01:00:59,320 --> 01:01:00,320
of my Linux profile.

720
01:01:01,320 --> 01:01:03,320
And I have all the stuff we just looked at.

721
01:01:04,320 --> 01:01:06,320
We have a profile that there's no VI on here.

722
01:01:08,320 --> 01:01:09,320
Oh, that's right.

723
01:01:10,320 --> 01:01:11,320
I have to use Vim.

724
01:01:12,320 --> 01:01:13,320
It's probably Vim Tiny too.

725
01:01:14,320 --> 01:01:15,320
What the hell?

726
01:01:16,320 --> 01:01:18,320
Ubuntu server doesn't have Vim installed by default anymore?

727
01:01:19,320 --> 01:01:20,320
Since when?

728
01:01:20,320 --> 01:01:21,320
Since when?

729
01:01:25,320 --> 01:01:26,320
Sudo app update.

730
01:01:28,320 --> 01:01:29,320
I should have pushed.

731
01:01:30,320 --> 01:01:31,320
Oh, I guess I don't need that.

732
01:01:32,320 --> 01:01:33,320
There's no, there's no Sudo either.

733
01:01:34,320 --> 01:01:35,320
What?

734
01:01:38,320 --> 01:01:39,320
There's no Vim.

735
01:01:42,320 --> 01:01:43,320
I have to install Vim.

736
01:01:44,320 --> 01:01:45,320
You don't want, you want Vim instead of Vim Tiny.

737
01:01:46,320 --> 01:01:47,320
Vim Tiny is usually the one on by default.

738
01:01:48,320 --> 01:01:50,320
I mean, I don't know why you would do this, but, you know.

739
01:01:52,320 --> 01:01:53,320
All right.

740
01:01:54,320 --> 01:01:55,320
Let's do that.

741
01:01:56,320 --> 01:01:57,320
Okay.

742
01:01:58,320 --> 01:01:59,320
Hey, we can see stuff now.

743
01:02:00,320 --> 01:02:01,320
So let's do our XROM.

744
01:02:02,320 --> 01:02:03,320
Vim.profile.

745
01:02:04,320 --> 01:02:05,320
So here is the file as we just saw.

746
01:02:06,320 --> 01:02:08,320
And the default Vim's gotten better, by the way.

747
01:02:09,320 --> 01:02:10,320
The syntax highlighting's gotten a lot better.

748
01:02:11,320 --> 01:02:13,320
So now we have a Vim info because I actually did something with Vim.

749
01:02:14,320 --> 01:02:16,320
So we have a bash history because that shows

750
01:02:17,320 --> 01:02:18,320
all this stuff that I did.

751
01:02:20,320 --> 01:02:21,320
There's all my commands.

752
01:02:22,320 --> 01:02:25,320
My skill bot actually would query interactively the history file,

753
01:02:26,320 --> 01:02:28,320
which you can make update in real time.

754
01:02:29,320 --> 01:02:32,320
And it would tell you if you did it right by looking at your commands.

755
01:02:34,320 --> 01:02:35,320
And that's why I, be careful.

756
01:02:36,320 --> 01:02:38,320
I mean, if you type a password wrong or something like that

757
01:02:39,320 --> 01:02:41,320
and you go splash your, your history file on this live stream.

758
01:02:43,320 --> 01:02:44,320
Yeah.

759
01:02:45,320 --> 01:02:47,320
I've seen passwords in history files before

760
01:02:48,320 --> 01:02:51,320
because people don't know where they are and they type in the wrong place

761
01:02:52,320 --> 01:02:53,320
or something or worse.

762
01:02:54,320 --> 01:02:55,320
They're in a program that takes the password on the command line,

763
01:02:56,320 --> 01:02:57,320
which is totally stupid.

764
01:02:58,320 --> 01:03:01,320
Bash logout executed by bash when login script exists.

765
01:03:02,320 --> 01:03:04,320
So this is kind of a way with bash logout file.

766
01:03:05,320 --> 01:03:06,320
I don't ever use it.

767
01:03:07,320 --> 01:03:08,320
I don't even think I have one actually.

768
01:03:10,320 --> 01:03:11,320
Do I have one?

769
01:03:15,320 --> 01:03:16,320
I do have one, but I don't use it.

770
01:03:18,320 --> 01:03:19,320
Oh, it just clears your console.

771
01:03:20,320 --> 01:03:21,320
So it increases your privacy.

772
01:03:22,320 --> 01:03:23,320
That's cool.

773
01:03:24,320 --> 01:03:25,320
Now I don't use that though.

774
01:03:26,320 --> 01:03:27,320
You have an alias to delete the last history line for that.

775
01:03:28,320 --> 01:03:29,320
Just to delete the last one.

776
01:03:30,320 --> 01:03:31,320
Yeah, that's probably a good idea.

777
01:03:33,320 --> 01:03:34,320
Yeah.

778
01:03:35,320 --> 01:03:36,320
And everybody knows like if you, if you're,

779
01:03:37,320 --> 01:03:38,320
I'm going to show you something.

780
01:03:39,320 --> 01:03:40,320
I mean, I think people know this already.

781
01:03:41,320 --> 01:03:42,320
We already covered it, but let me show you again.

782
01:03:42,320 --> 01:03:43,320
My thing.

783
01:03:44,320 --> 01:03:46,320
I'm a bad streamer, bad streamer.

784
01:03:47,320 --> 01:03:48,320
I did.

785
01:03:49,320 --> 01:03:50,320
I killed my thing.

786
01:03:52,320 --> 01:03:53,320
Where's my Docker line?

787
01:03:54,320 --> 01:03:55,320
All right, let's get back in a bunch again.

788
01:03:56,320 --> 01:03:57,320
I got to do it over again now.

789
01:03:58,320 --> 01:03:59,320
So it's good exercise.

790
01:04:00,320 --> 01:04:01,320
I'm not going to have them on here again though,

791
01:04:02,320 --> 01:04:05,320
because I threw it away because ephemeral containers don't stay around.

792
01:04:06,320 --> 01:04:07,320
They don't remember their state.

793
01:04:08,320 --> 01:04:10,320
So I got to put container.

794
01:04:12,320 --> 01:04:13,320
How about that?

795
01:04:14,320 --> 01:04:15,320
Sudo.

796
01:04:16,320 --> 01:04:17,320
No.

797
01:04:18,320 --> 01:04:19,320
Update.

798
01:04:20,320 --> 01:04:21,320
That's why.

799
01:04:22,320 --> 01:04:23,320
And that's why it is taken by apt update.

800
01:04:24,320 --> 01:04:25,320
By the way, people said it's not.

801
01:04:26,320 --> 01:04:27,320
It is.

802
01:04:30,320 --> 01:04:31,320
So we do apt install them.

803
01:04:32,320 --> 01:04:33,320
That's why them.

804
01:04:34,320 --> 01:04:35,320
I'm rooted.

805
01:04:36,320 --> 01:04:37,320
So I don't need a sudo there.

806
01:04:39,320 --> 01:04:40,320
Alrighty.

807
01:04:40,320 --> 01:04:41,320
So what I wanted to show you.

808
01:04:42,320 --> 01:04:45,320
So we were, we were talking about add user to the X-Rub.

809
01:04:47,320 --> 01:04:48,320
Password, password.

810
01:04:54,320 --> 01:04:55,320
All right.

811
01:04:56,320 --> 01:04:58,320
Now that's the same as saying login if I had, right?

812
01:04:59,320 --> 01:05:00,320
So you see my stuff sell the same.

813
01:05:01,320 --> 01:05:04,320
I hate fuzzy finders and I absolutely detest control R.

814
01:05:06,320 --> 01:05:07,320
I do not ever use control R.

815
01:05:07,320 --> 01:05:09,320
I use set dash OVI and we're going to talk about that.

816
01:05:10,320 --> 01:05:11,320
Don't let me forget.

817
01:05:12,320 --> 01:05:14,320
If you're not using set dash OVI, you're doing it wrong in my opinion.

818
01:05:15,320 --> 01:05:16,320
Because you're using VI for everything else.

819
01:05:17,320 --> 01:05:18,320
And I have strong opinion on that.

820
01:05:19,320 --> 01:05:20,320
So we'll talk about that.

821
01:05:21,320 --> 01:05:23,320
People tell me all the time use control L the clear the screen.

822
01:05:24,320 --> 01:05:25,320
I'm like, get bent.

823
01:05:28,320 --> 01:05:29,320
You have no idea what you're talking about.

824
01:05:30,320 --> 01:05:31,320
Okay.

825
01:05:32,320 --> 01:05:33,320
So LS, LS dash A.

826
01:05:34,320 --> 01:05:35,320
So there's all our files, right?

827
01:05:35,320 --> 01:05:40,320
And let's go edit a profile and we'll get our VIM stuff all automatically initialized.

828
01:05:41,320 --> 01:05:42,320
And we do that.

829
01:05:43,320 --> 01:05:44,320
So there's our VIM info.

830
01:05:46,320 --> 01:05:47,320
Yeah.

831
01:05:48,320 --> 01:05:49,320
Look, if you want to do it, that's fine.

832
01:05:50,320 --> 01:05:51,320
You know, I don't really hate you when I say that, right?

833
01:05:52,320 --> 01:05:53,320
I'm just, I'll just laugh at you.

834
01:05:54,320 --> 01:05:55,320
And then I'll buy you a beer.

835
01:05:57,320 --> 01:05:58,320
Okay.

836
01:05:59,320 --> 01:06:00,320
So if you want to do that, that's fine.

837
01:06:00,320 --> 01:06:04,320
HL search, uh, file marks.

838
01:06:05,320 --> 01:06:06,320
It tells you this remembers.

839
01:06:07,320 --> 01:06:11,320
So this file like remembers all the information about your stuff while you're doing your VIM editing.

840
01:06:12,320 --> 01:06:13,320
And you really shouldn't depend on it.

841
01:06:14,320 --> 01:06:15,320
It is nice.

842
01:06:16,320 --> 01:06:17,320
It does remember where your lines are.

843
01:06:18,320 --> 01:06:19,320
And we're going to go through that later.

844
01:06:20,320 --> 01:06:21,320
But, uh, and the bash log out, you don't need mess with.

845
01:06:22,320 --> 01:06:24,320
But what I wanted to show you is that the only file that matters here is bash RC.

846
01:06:25,320 --> 01:06:29,320
But I do want to show you what Mossy was talking about, which is if you'd rather not mess with the file,

847
01:06:30,320 --> 01:06:32,320
even says it in the recommendations in the comments down here.

848
01:06:33,320 --> 01:06:34,320
And, but I just don't trust them.

849
01:06:35,320 --> 01:06:36,320
Alias definitions.

850
01:06:37,320 --> 01:06:43,320
You may want to put all your additions into a separate file like bash, like bash aliases instead of adding them here directly.

851
01:06:44,320 --> 01:06:45,320
And my question is why?

852
01:06:47,320 --> 01:06:50,320
Why have yet another file that you have to manage that's just sitting around there?

853
01:06:51,320 --> 01:06:56,320
I don't, I don't ever do this because I want to clean directory and I want to control what goes into the directory.

854
01:06:57,320 --> 01:06:58,320
I want total control.

855
01:06:58,320 --> 01:07:01,320
I don't want to trust some really bad shell code, by the way.

856
01:07:02,320 --> 01:07:06,320
Uh, this, this new bun two default bash RC is really bad.

857
01:07:07,320 --> 01:07:08,320
It's just so bad.

858
01:07:09,320 --> 01:07:13,320
And, and I don't want to go, for example, the history file size massively broken.

859
01:07:14,320 --> 01:07:16,320
And we can get into this when we get into it.

860
01:07:17,320 --> 01:07:19,320
Um, it does set some other history settings.

861
01:07:20,320 --> 01:07:27,320
So the main reason that I don't want to use a bash aliases thing is because I want to throw this crap out as soon as possible.

862
01:07:28,320 --> 01:07:30,320
It's absolute crap.

863
01:07:30,320 --> 01:07:31,320
It's a good start.

864
01:07:31,320 --> 01:07:34,320
If you want to like go from there, but it does things that I would never do.

865
01:07:34,320 --> 01:07:35,320
Plus it's using single.

866
01:07:35,320 --> 01:07:37,320
I mean, I don't, I just don't want to talk about because I'll get angry.

867
01:07:38,320 --> 01:07:39,320
Okay.

868
01:07:39,320 --> 01:07:40,320
It's horrible.

869
01:07:40,320 --> 01:07:41,320
It's just really bad.

870
01:07:41,320 --> 01:07:43,320
And I mean, God, look at this.

871
01:07:44,320 --> 01:07:45,320
I cannot.

872
01:07:45,320 --> 01:07:46,320
Okay.

873
01:07:47,320 --> 01:07:51,320
Plus it says you're really horrible color prompt, which is completely bad.

874
01:07:51,320 --> 01:07:52,320
And it's inefficient.

875
01:07:53,320 --> 01:08:00,320
It's totally inefficient because now you're, you're starting this really horrible thing to start another thing, which also has to run another script.

876
01:08:01,320 --> 01:08:02,320
It's inefficient.

877
01:08:02,320 --> 01:08:04,320
It slows down your, it slows down your logins and everything.

878
01:08:04,320 --> 01:08:05,320
Okay.

879
01:08:05,320 --> 01:08:07,320
And, and I don't want to do that.

880
01:08:07,320 --> 01:08:09,320
It tries to give you some aliases.

881
01:08:09,320 --> 01:08:12,320
Uh, it's just, it's just bad.

882
01:08:12,320 --> 01:08:16,320
I mean, why would they put the aliases in dirt colors if dirt colors doesn't exist?

883
01:08:16,320 --> 01:08:17,320
Right.

884
01:08:17,320 --> 01:08:21,320
Why would they, you know, they only activate color if there's only dirt colors.

885
01:08:21,320 --> 01:08:24,320
No, you can use grep with color without dirt colors being enabled.

886
01:08:24,320 --> 01:08:30,320
There's just like so many stupid assumptions based in here that I just, I can't talk about it and not get upset.

887
01:08:30,320 --> 01:08:34,320
I do want to say though that this is where a number of misconceptions come from.

888
01:08:34,320 --> 01:08:40,320
For example, people log into Ubuntu or Kali Linux or something and they tell me, oh, you should use LL for everything.

889
01:08:40,320 --> 01:08:43,320
And I'm talking about, you mean LS-L, right?

890
01:08:43,320 --> 01:08:48,320
And, or they make a command called L that does this, right?

891
01:08:48,320 --> 01:08:53,320
And the answer is that's an alias and they don't know it because they don't know what an alias is.

892
01:08:53,320 --> 01:08:54,320
Now you do.

893
01:08:54,320 --> 01:09:00,320
Um, and you know, they, they set up alerting, which I don't really like alert.

894
01:09:00,320 --> 01:09:03,320
I mean, look at how horrible this line is.

895
01:09:03,320 --> 01:09:06,320
This is, this is objective proof.

896
01:09:06,320 --> 01:09:10,320
These people have no idea how to code or script.

897
01:09:10,320 --> 01:09:13,320
This script is so stinking bad.

898
01:09:13,320 --> 01:09:15,320
I don't have words.

899
01:09:15,320 --> 01:09:19,320
And, and you do, you understand why all these sub-shells are unnecessary.

900
01:09:19,320 --> 01:09:24,320
Uh, the reason they had to do that is because they made it into an alert instead of making it another script or a function.

901
01:09:24,320 --> 01:09:28,320
They could have done this whole thing as a function and saved all of that crap, but they didn't.

902
01:09:28,320 --> 01:09:30,320
And they decided to make an alias.

903
01:09:30,320 --> 01:09:33,320
And by the way, why are alias is bad because it can't be used as Unix filters.

904
01:09:33,320 --> 01:09:36,320
I could go on and on and on.

905
01:09:36,320 --> 01:09:43,320
This was written by whoever manages, somebody at Canonical, whoever manages the, the main login for Ubuntu.

906
01:09:43,320 --> 01:09:48,320
And I'm glad I opened it up because it was a really good reminder why I'm never using it.

907
01:09:48,320 --> 01:09:51,320
Okay.

908
01:09:51,320 --> 01:09:53,320
And you don't have to use it either.

909
01:09:53,320 --> 01:09:54,320
And here's how you change it.

910
01:09:54,320 --> 01:09:55,320
Okay.

911
01:09:55,320 --> 01:10:00,320
So, so I'm going to go back over to my other script over here and I'm going to show you why I think you should put everything in a single Bash RC.

912
01:10:00,320 --> 01:10:05,320
Because when it's in a single Bash RC, all I have to do, uh, is copy it over.

913
01:10:05,320 --> 01:10:06,320
Right.

914
01:10:06,320 --> 01:10:11,320
And, uh, I don't remember how to, how to SSH into containers.

915
01:10:11,320 --> 01:10:13,320
Does anybody else know how to do that?

916
01:10:13,320 --> 01:10:15,320
What's the Docker command for that?

917
01:10:15,320 --> 01:10:16,320
What's the command for it?

918
01:10:16,320 --> 01:10:17,320
I don't remember it.

919
01:10:17,320 --> 01:10:20,320
Does anybody remember?

920
01:10:20,320 --> 01:10:21,320
What is the Docker?

921
01:10:21,320 --> 01:10:25,320
I know there's an SCP command for Docker that will SCP into a running instance.

922
01:10:25,320 --> 01:10:26,320
And I can't remember it.

923
01:10:26,320 --> 01:10:30,320
And I didn't mount the directory because they don't normally do this.

924
01:10:30,320 --> 01:10:37,320
Normally I would, you know, but if I wanted to, I'm trying to figure out how, how I could do that.

925
01:10:37,320 --> 01:10:38,320
I mean, let me think.

926
01:10:38,320 --> 01:10:39,320
Let me think.

927
01:10:39,320 --> 01:10:40,320
Let me think.

928
01:10:40,320 --> 01:10:41,320
Let me think.

929
01:10:41,320 --> 01:10:42,320
We can actually SSH.

930
01:10:42,320 --> 01:10:46,320
Sometimes I go to the machine and SCP it from the target machine and sometimes I do the

931
01:10:46,320 --> 01:10:47,320
reverse.

932
01:10:47,320 --> 01:10:48,320
Is it just Docker copy?

933
01:10:48,320 --> 01:10:49,320
Really?

934
01:10:49,320 --> 01:10:50,320
God, am I that?

935
01:10:50,320 --> 01:10:53,320
But don't have to do it to the running container.

936
01:10:53,320 --> 01:10:56,320
God, I'm so out of shape.

937
01:10:56,320 --> 01:10:58,320
I am so out of shape when it comes to this stuff.

938
01:10:58,320 --> 01:10:59,320
So we are running one.

939
01:10:59,320 --> 01:11:00,320
Okay.

940
01:11:00,320 --> 01:11:01,320
So there, what is this name?

941
01:11:01,320 --> 01:11:02,320
And container ID.

942
01:11:02,320 --> 01:11:03,320
Okay.

943
01:11:03,320 --> 01:11:04,320
Okay.

944
01:11:04,320 --> 01:11:05,320
Okay.

945
01:11:05,320 --> 01:11:09,320
So, uh, Docker copy, uh, dot Bash RC.

946
01:11:09,320 --> 01:11:11,320
To, I mean, this is one example.

947
01:11:11,320 --> 01:11:16,320
I mean, pretend like this Docker copy is like an SCP to another VM or something.

948
01:11:16,320 --> 01:11:17,320
Right.

949
01:11:17,320 --> 01:11:23,320
Um, I'm not the feeling that containers going to come first.

950
01:11:23,320 --> 01:11:27,320
Uh, dot Bash RC.

951
01:11:27,320 --> 01:11:30,320
And I mean, I didn't put the user.

952
01:11:30,320 --> 01:11:32,320
I should probably do that.

953
01:11:32,320 --> 01:11:36,320
I must specify at least one container source.

954
01:11:36,320 --> 01:11:38,320
I think it did.

955
01:11:38,320 --> 01:11:40,320
I don't, I don't know how to do this.

956
01:11:40,320 --> 01:11:45,320
I don't have to look it up.

957
01:11:45,320 --> 01:11:46,320
I'm sorry.

958
01:11:46,320 --> 01:11:48,320
I don't know everything.

959
01:11:48,320 --> 01:11:49,320
Sue me.

960
01:11:49,320 --> 01:11:51,320
Uh, Docker copy.

961
01:11:51,320 --> 01:11:52,320
Oh, really?

962
01:11:52,320 --> 01:11:53,320
Is it?

963
01:11:53,320 --> 01:11:54,320
That's all.

964
01:11:54,320 --> 01:11:55,320
All right.

965
01:11:55,320 --> 01:12:03,320
Well, colon, uh, no, no, no, no, no, no.

966
01:12:03,320 --> 01:12:09,320
We want to dot Bash RC into, and yes, I use my mouse again.

967
01:12:09,320 --> 01:12:10,320
Sue me.

968
01:12:10,320 --> 01:12:14,320
Um, slash 10.

969
01:12:14,320 --> 01:12:15,320
Yay.

970
01:12:15,320 --> 01:12:16,320
All right.

971
01:12:16,320 --> 01:12:21,320
So we should be able to go back to the Docker container and do LL slash temp and see nothing

972
01:12:21,320 --> 01:12:23,320
because it's hidden.

973
01:12:23,320 --> 01:12:24,320
All right.

974
01:12:24,320 --> 01:12:26,320
So now we have a bash.

975
01:12:26,320 --> 01:12:27,320
Oh, you know what?

976
01:12:27,320 --> 01:12:28,320
It's a sim link.

977
01:12:28,320 --> 01:12:29,320
Yeah.

978
01:12:29,320 --> 01:12:30,320
Watch.

979
01:12:30,320 --> 01:12:35,320
I copied the sim link and not the file it points to, which, you know, you wouldn't do.

980
01:12:35,320 --> 01:12:38,680
Okay, let me resolve the sim link there.

981
01:12:38,680 --> 01:12:39,680
I can fix this.

982
01:12:39,680 --> 01:12:40,680
I can fix it.

983
01:12:40,680 --> 01:12:49,680
All right, so we're going to say, what's the thing that resolves symbolic links automatically?

984
01:12:49,680 --> 01:12:52,200
I should probably learn that again.

985
01:12:52,200 --> 01:12:53,200
There's a switch.

986
01:12:53,200 --> 01:12:58,600
There's a flag you can put on copy and the other one that will actually copy the destination

987
01:12:58,600 --> 01:13:02,520
file instead of the actual symbolic link because I, what I want to do is this.

988
01:13:02,520 --> 01:13:06,000
I want to do, I think, is it dash F?

989
01:13:06,000 --> 01:13:07,480
I don't use it very much.

990
01:13:07,480 --> 01:13:09,120
This is for me too.

991
01:13:09,120 --> 01:13:12,880
So we want to follow some links.

992
01:13:12,880 --> 01:13:13,880
Hard links are going to dereference.

993
01:13:13,880 --> 01:13:14,880
There we go.

994
01:13:14,880 --> 01:13:21,680
Dash L. So you might want to do a dash L. I wonder if the Docker has a dash L. Wouldn't

995
01:13:21,680 --> 01:13:25,720
that be cool?

996
01:13:25,720 --> 01:13:27,280
It might.

997
01:13:27,280 --> 01:13:29,880
It might have it.

998
01:13:29,880 --> 01:13:35,800
Oh, damn.

999
01:13:35,800 --> 01:13:38,120
It does.

1000
01:13:38,120 --> 01:13:39,120
It does have it.

1001
01:13:39,120 --> 01:13:40,120
That makes me very happy.

1002
01:13:40,120 --> 01:13:43,640
Okay, so the Docker CP command has a dash capital L as well as the capital.

1003
01:13:43,640 --> 01:13:46,640
All right, I'm going to put that on my list because I need to remember that one.

1004
01:13:46,640 --> 01:13:47,640
I don't use that ever.

1005
01:13:47,640 --> 01:13:52,280
I need to.

1006
01:13:52,280 --> 01:13:59,800
C dash L. Follow symbolic links.

1007
01:13:59,800 --> 01:14:00,800
We haven't.

1008
01:14:00,800 --> 01:14:01,800
Do we do symbolic links?

1009
01:14:01,800 --> 01:14:03,920
I don't think we've done symbolic links yet.

1010
01:14:03,920 --> 01:14:06,080
Do we need to talk about that?

1011
01:14:06,080 --> 01:14:07,960
I think we, no, we're going to, you know what?

1012
01:14:07,960 --> 01:14:10,240
We're going to talk about it because we're going to put all that stuff in a Git repo

1013
01:14:10,240 --> 01:14:12,000
and then we're going to link it in.

1014
01:14:12,000 --> 01:14:16,480
And people, people complain about that all the time and they say it's messy.

1015
01:14:16,480 --> 01:14:19,400
There's streamers who complain about that because then they want to use some fancy tool

1016
01:14:19,400 --> 01:14:20,400
for it.

1017
01:14:20,400 --> 01:14:24,080
And I think learning how to do the symbolic links properly is better personally because

1018
01:14:24,080 --> 01:14:25,080
it works everywhere.

1019
01:14:25,080 --> 01:14:28,000
And you don't have to install some extra tool that you don't have access to.

1020
01:14:28,000 --> 01:14:29,000
It just works.

1021
01:14:29,000 --> 01:14:34,280
It's spelled out flag when I don't remember.

1022
01:14:34,280 --> 01:14:36,880
Can you do dash dash flag?

1023
01:14:36,880 --> 01:14:37,880
I wasn't sure of that.

1024
01:14:37,880 --> 01:14:38,880
Okay.

1025
01:14:38,880 --> 01:14:41,800
So, so anyway, we've got this new bash rc here, right?

1026
01:14:41,800 --> 01:14:43,320
And I want to take it over.

1027
01:14:43,320 --> 01:14:48,000
So all I have to do, I mean, I could have copied it right to the directory if I wanted to,

1028
01:14:48,000 --> 01:14:52,080
but I kind of want the option of having, you know, remember, I can go get the, this

1029
01:14:52,080 --> 01:14:54,760
one from Etsy scale if I need to, right?

1030
01:14:54,760 --> 01:14:56,000
So let's just do that.

1031
01:14:56,000 --> 01:15:01,520
Let's just copy temp.bashrc and we'll copy it to here if we can.

1032
01:15:01,520 --> 01:15:07,680
And now I do ls-l, a, we should see that the file has changed.

1033
01:15:07,680 --> 01:15:09,680
It's still readable and everything.

1034
01:15:09,680 --> 01:15:11,320
It's bigger though.

1035
01:15:11,320 --> 01:15:13,680
And we're going to go look at it.

1036
01:15:13,680 --> 01:15:21,480
And now we have, this is my shell check enabled bash rc file, which we are now going to go

1037
01:15:21,480 --> 01:15:22,480
through.

1038
01:15:22,480 --> 01:15:23,480
All right.

1039
01:15:23,480 --> 01:15:30,400
But now the other piece of this is when you copy a bash rc file over, you're like, but

1040
01:15:30,400 --> 01:15:33,200
it doesn't look like it's using it.

1041
01:15:33,200 --> 01:15:37,240
And people log out of the terminal all the time and log all the way back in, you know,

1042
01:15:37,240 --> 01:15:39,840
reboot their computer to get the fresh colors on their terminal.

1043
01:15:39,840 --> 01:15:41,520
You know, you don't need to do any of that.

1044
01:15:41,520 --> 01:15:43,600
You need to remember this command.

1045
01:15:43,600 --> 01:15:47,640
ssec bash dash l for login shell.

1046
01:15:47,640 --> 01:15:50,480
And what this does, oh, do you reference this one?

1047
01:15:50,480 --> 01:15:51,480
Okay.

1048
01:15:51,480 --> 01:16:00,560
What this does is it replaces the running program with a new program, keeping all of its associated

1049
01:16:00,560 --> 01:16:04,280
connections and pipes and resources and everything.

1050
01:16:04,280 --> 01:16:07,960
And it's a way to re-initialize your shell with a new one.

1051
01:16:07,960 --> 01:16:11,720
So after I execute that, it executes bash really quickly.

1052
01:16:11,720 --> 01:16:19,440
And you see now I get my fancy ps prompt from, you know, the one that I've been maintaining.

1053
01:16:19,440 --> 01:16:24,880
And you can't even tell other than the host name that I'm not on my own system, right?

1054
01:16:24,880 --> 01:16:28,800
All I had to do was copy one file and I copied it to temp, but I didn't have to.

1055
01:16:28,800 --> 01:16:30,960
I could have copied it right over the top of the other one.

1056
01:16:30,960 --> 01:16:32,200
It would have worked.

1057
01:16:32,200 --> 01:16:36,640
And that is all I would have had to do to get my bash to work properly.

1058
01:16:36,640 --> 01:16:42,680
So you'll hear me when I argue against these shell and fish and other things like that.

1059
01:16:42,680 --> 01:16:48,400
One of my main arguments against them is all of the individual files that have to be copied

1060
01:16:48,400 --> 01:16:51,380
over to a target environment to get it to work.

1061
01:16:51,380 --> 01:16:54,220
So hypothetically, you're working for a new company.

1062
01:16:54,220 --> 01:16:58,080
You come on and they have like really old login jump machines that you have to use.

1063
01:16:58,080 --> 01:16:59,080
You don't get the choice.

1064
01:16:59,080 --> 01:17:00,240
You have to use them.

1065
01:17:00,240 --> 01:17:05,160
But you do get the ability to manage your own home directory, hopefully, including your

1066
01:17:05,160 --> 01:17:06,160
RC file.

1067
01:17:06,360 --> 01:17:11,600
Some places that won't let you even change your own RC file, which is just stupid.

1068
01:17:11,600 --> 01:17:14,760
But if they do, then you just copy that file over.

1069
01:17:14,760 --> 01:17:18,480
You log in your exec bash shell and you're good to go.

1070
01:17:18,480 --> 01:17:20,760
And now you've got all your favorite things.

1071
01:17:20,760 --> 01:17:27,560
You got your, you got your, you know, you got your aliases, but actually I don't, right?

1072
01:17:27,560 --> 01:17:30,720
And this is actually one of the problems I've had in the past.

1073
01:17:30,720 --> 01:17:33,960
At one point I'm going to, I'm going to just confess here.

1074
01:17:33,960 --> 01:17:38,560
At one point I put all of the stuff that I have in my scripts directory, I put all of

1075
01:17:38,560 --> 01:17:43,280
it as functions inside of my bash or C file, and it was huge.

1076
01:17:43,280 --> 01:17:47,120
And it was kind of stupid because every time anything ran, it had to initialize all that

1077
01:17:47,120 --> 01:17:48,720
stuff over again.

1078
01:17:48,720 --> 01:17:51,700
And that's actually one of the advantages of Z shell.

1079
01:17:51,700 --> 01:17:55,920
If you're on the same environment is it has lazy loading of functions when they're used.

1080
01:17:55,920 --> 01:17:58,240
And so you, the functions are not stored in the file.

1081
01:17:58,240 --> 01:18:00,520
They're stored in a separate directory.

1082
01:18:00,520 --> 01:18:03,920
And that you have to copy the whole directory over if you want to use any of the functions.

1083
01:18:03,920 --> 01:18:09,200
And since my, and by the way, if you use functions like that, those functions are still not usable

1084
01:18:09,200 --> 01:18:11,400
as, as UNIX filters.

1085
01:18:11,400 --> 01:18:15,520
So you can't use them as, you know, from, you know, magic wand commands inside of them

1086
01:18:15,520 --> 01:18:16,560
or anything like that.

1087
01:18:16,560 --> 01:18:21,680
So you still have to have a collection of scripts and we're going to get to that.

1088
01:18:21,680 --> 01:18:25,000
But you only need to bring over the scripts that you've come to love.

1089
01:18:25,000 --> 01:18:30,640
But as we go through the bash or C file, one of the topics we're going to talk about is

1090
01:18:30,640 --> 01:18:45,480
when to use, when to use an alias, an alias function or a script.

1091
01:18:45,480 --> 01:18:48,120
Okay.

1092
01:18:48,120 --> 01:18:52,720
And that, that is, that is a big question.

1093
01:18:52,720 --> 01:18:56,800
Every time a script runs bash or C runs, yes, it's absolutely right.

1094
01:18:56,800 --> 01:19:03,960
And that, that is why I'm glad you answered the question because, because, because we're

1095
01:19:03,960 --> 01:19:08,560
going to watch the, the reason it's, okay, so let's get into the bash or C file itself.

1096
01:19:08,560 --> 01:19:10,120
Let's start going through it.

1097
01:19:10,120 --> 01:19:11,120
Okay.

1098
01:19:11,120 --> 01:19:17,080
And just like anything else, you can actually put shell check in here.

1099
01:19:17,080 --> 01:19:23,720
We can guarantee the correct, the correct task with the script of copy process, correct

1100
01:19:23,720 --> 01:19:24,720
task of the script.

1101
01:19:24,720 --> 01:19:26,760
I don't know about that.

1102
01:19:26,760 --> 01:19:27,800
Yeah.

1103
01:19:27,800 --> 01:19:30,040
I don't know.

1104
01:19:30,040 --> 01:19:31,040
Let's go through this.

1105
01:19:31,040 --> 01:19:32,040
Okay.

1106
01:19:32,040 --> 01:19:33,040
So I'm going to go through this.

1107
01:19:33,040 --> 01:19:34,040
Really.

1108
01:19:34,040 --> 01:19:35,040
I know we haven't taken any breaks.

1109
01:19:35,040 --> 01:19:36,040
Do we need a break before we keep going?

1110
01:19:36,040 --> 01:19:37,040
What time is it?

1111
01:19:37,040 --> 01:19:39,540
Is everybody, does anybody need a break?

1112
01:19:39,540 --> 01:19:43,080
Otherwise I just, I feel the need to keep going.

1113
01:19:43,080 --> 01:19:45,620
Shaw, you can, but you don't need to.

1114
01:19:45,620 --> 01:19:46,760
You could just read it.

1115
01:19:46,760 --> 01:19:47,760
Right.

1116
01:19:47,760 --> 01:19:51,760
You could do that, but in this case, we're just reading it, it's just copying locally.

1117
01:19:51,760 --> 01:19:53,580
You know.

1118
01:19:53,580 --> 01:19:57,300
All right, I'm just going to keep going.

1119
01:19:57,300 --> 01:20:03,900
If you need to pause the video or whatever, let me know.

1120
01:20:03,900 --> 01:20:05,100
So here we go.

1121
01:20:05,100 --> 01:20:06,460
You could do it, Sean.

1122
01:20:06,460 --> 01:20:13,020
So Ping and Masi are talking about validating the file that you just copied over, right?

1123
01:20:13,020 --> 01:20:17,980
If you're using SCP, you don't need to do that, you just don't.

1124
01:20:17,980 --> 01:20:22,460
If you want to be extremely paranoid for no reason, you could, but you really don't need

1125
01:20:22,460 --> 01:20:23,460
to do that.

1126
01:20:23,460 --> 01:20:25,860
You don't want to do that, you could, right?

1127
01:20:25,860 --> 01:20:30,020
And what that's, checking an SHJ is a way to validate that the file has not been modified

1128
01:20:30,020 --> 01:20:31,700
in any way.

1129
01:20:31,700 --> 01:20:32,700
And it usually works.

1130
01:20:32,700 --> 01:20:33,700
It didn't.

1131
01:20:33,700 --> 01:20:39,340
One of the biggest hacks in history in the 90s, they hacked the WFTP server and they

1132
01:20:39,340 --> 01:20:48,940
successfully hacked the source and created a file that had Trojan in it malware that

1133
01:20:48,940 --> 01:20:54,060
passed the checksum validation because they made sure to avoid the sections of the file

1134
01:20:54,060 --> 01:20:57,220
that were used in calculating the mathematical checksum of the file.

1135
01:20:57,220 --> 01:21:02,460
So the checksums have gotten way better since then, and you know, you're usually safe to

1136
01:21:02,460 --> 01:21:07,860
do that checksum validation, but it can still be defeated if you're using the bad one.

1137
01:21:07,860 --> 01:21:12,460
So I don't know if that's the reason I don't, I think you should do it, but if you're doing

1138
01:21:12,460 --> 01:21:21,780
encrypted tunneling, so which is SCP or HTTPS, TLS, then it's not as big a deal.

1139
01:21:21,780 --> 01:21:25,900
You should probably still do it for fun, but particularly if it's a script that you're

1140
01:21:25,900 --> 01:21:26,900
going to be reading, right?

1141
01:21:26,900 --> 01:21:29,980
If you're going to be reading through the script, but if it makes you feel better, you

1142
01:21:29,980 --> 01:21:31,580
should do checksum validation on the thing.

1143
01:21:31,580 --> 01:21:35,100
If there's any possible reason to do that.

1144
01:21:35,100 --> 01:21:38,580
We are doing the boost, my friend, so welcome to the stream.

1145
01:21:38,580 --> 01:21:40,820
We are recording this for YouTube.

1146
01:21:40,820 --> 01:21:44,780
So just know this, every Sunday we record videos for YouTube.

1147
01:21:44,780 --> 01:21:48,620
Okay, so I'm going to go through this file line by line, and we got a lot of coverage.

1148
01:21:48,620 --> 01:21:53,060
So, and I'm going to give very brief summaries of what it's doing.

1149
01:21:53,060 --> 01:21:57,420
If anybody has questions, please ask the questions now because I'm not going through it again,

1150
01:21:57,420 --> 01:21:58,500
all right?

1151
01:21:58,500 --> 01:22:03,020
And this is based on the assumption that as any beginner would, you're going to find

1152
01:22:03,020 --> 01:22:07,620
a veteran out there or somebody that you trust, and you're going to say, I don't really understand

1153
01:22:07,620 --> 01:22:10,180
Bash yet, or I don't understand Vim or T-Mux.

1154
01:22:10,300 --> 01:22:11,900
I kind of use your files.

1155
01:22:11,900 --> 01:22:20,300
And so it's a part of the culture of Linux and Unix to pass down or to share .files.

1156
01:22:20,300 --> 01:22:30,060
In fact, if you go to GitHub, and you just search on GitHub for .files, you will find

1157
01:22:30,060 --> 01:22:37,340
literally thousands of repos that have different people's .files, right?

1158
01:22:37,340 --> 01:22:39,620
Because everybody is proud of their .files.

1159
01:22:39,620 --> 01:22:45,620
It's like the customization on their car, and they want to show you their version.

1160
01:22:45,620 --> 01:22:47,500
There's Jess Razzles .files.

1161
01:22:47,500 --> 01:22:49,260
So she's container girl.

1162
01:22:49,260 --> 01:22:50,260
She was.

1163
01:22:50,260 --> 01:22:53,740
She's over at Oxide with Brian Ketchel now.

1164
01:22:53,740 --> 01:22:55,500
Everybody puts in .files.

1165
01:22:55,500 --> 01:22:57,060
My .files are there.

1166
01:22:57,060 --> 01:22:58,060
Everybody puts in .files.

1167
01:22:58,060 --> 01:23:05,620
In fact, having a significant .files repo that is well-organized is a really great way

1168
01:23:05,620 --> 01:23:09,820
to improve trust with a potential employer, because they can go in there, and they can

1169
01:23:09,820 --> 01:23:11,060
see that you know you're talking about.

1170
01:23:11,060 --> 01:23:14,740
Right away, I know this person is not someone I would ever talk to, because they're using

1171
01:23:14,740 --> 01:23:17,900
crappy ZShell shit on a Mac.

1172
01:23:17,900 --> 01:23:18,900
I'm just kidding.

1173
01:23:18,900 --> 01:23:19,900
It's a joke.

1174
01:23:19,900 --> 01:23:20,900
Oh, my God.

1175
01:23:20,900 --> 01:23:21,900
All right.

1176
01:23:21,900 --> 01:23:26,700
So, and look at what they're doing, too.

1177
01:23:26,700 --> 01:23:28,900
He's making his entire Git repo.

1178
01:23:28,900 --> 01:23:30,420
This just shows he doesn't know what he's doing.

1179
01:23:30,420 --> 01:23:32,660
This person doesn't know what he's doing.

1180
01:23:32,660 --> 01:23:35,660
He's cloning.

1181
01:23:35,660 --> 01:23:39,060
He's making a .files, and then he's going into there, and he's doing script bootstrap

1182
01:23:39,060 --> 01:23:40,060
for the whole thing.

1183
01:23:40,060 --> 01:23:41,060
Okay.

1184
01:23:41,060 --> 01:23:49,820
So, I'm kind of jumping ahead, but is there not having public .files?

1185
01:23:49,820 --> 01:23:54,340
Because a lot of the things that are going to go in your .files are going to be login

1186
01:23:54,340 --> 01:24:03,180
tokens, organization of mostly login tokens, your secure shell configuration files.

1187
01:24:03,180 --> 01:24:07,260
By the way, people commit, all the time, they commit their private keys.

1188
01:24:07,260 --> 01:24:11,340
People constantly commit their private keys to GitHub, because they don't have any, they

1189
01:24:11,340 --> 01:24:14,580
just, I'm going to put my whole home directory in there, and they just commit their home.

1190
01:24:14,580 --> 01:24:16,220
Please don't do that.

1191
01:24:16,220 --> 01:24:22,300
There's nothing that says, don't ever hire me more than some shit like that.

1192
01:24:22,300 --> 01:24:26,380
By the way, we have that, there's a company that I know of that shall not be named, that

1193
01:24:26,380 --> 01:24:28,460
is doing that in production.

1194
01:24:28,460 --> 01:24:36,420
And they're saying, well, the repos are private, and I'm like, oh my God.

1195
01:24:36,420 --> 01:24:37,500
You know, and then what is it?

1196
01:24:37,500 --> 01:24:41,860
Last month, all of GitHub's private repos were compromised.

1197
01:24:41,860 --> 01:24:42,860
Okay.

1198
01:24:42,860 --> 01:24:46,780
Well, it's more fun for the hackers out there.

1199
01:24:46,780 --> 01:24:48,100
I'll put it that way.

1200
01:24:48,100 --> 01:24:50,580
So anyway, you can go through the dot files.

1201
01:24:50,580 --> 01:24:54,060
It's don't feel bad or don't feel guilty or dirty.

1202
01:24:54,060 --> 01:24:57,860
Just set as a goal that you're going to go make your own dot files.

1203
01:24:57,860 --> 01:25:01,900
You're going to seek to understand your own dot files, but for right now, there's no reason

1204
01:25:01,900 --> 01:25:03,140
not to steal somebody else.

1205
01:25:03,140 --> 01:25:07,260
And as I mentioned, if you want to go steal mine, which could always use improvement because,

1206
01:25:07,260 --> 01:25:11,980
you know, you can go out to slash dot and you can see my stuff.

1207
01:25:11,980 --> 01:25:16,860
Now, one of the things I'm going to show you right away, I'll show you from here actually,

1208
01:25:16,860 --> 01:25:18,140
it's the organization of it.

1209
01:25:18,140 --> 01:25:25,180
So my bash or C, and this, by the way, I noticed the other day when I was going through this

1210
01:25:25,180 --> 01:25:32,740
that a couple of specific things to me referring to my name are in here.

1211
01:25:32,740 --> 01:25:38,180
My goal in creating a dot files is creating something that you can copy and paste as is

1212
01:25:38,180 --> 01:25:40,500
for you, right?

1213
01:25:40,500 --> 01:25:42,420
So see this whole who am I thing?

1214
01:25:42,420 --> 01:25:43,860
This is so that I can create a user.

1215
01:25:43,860 --> 01:25:45,460
We're going to come back to that.

1216
01:25:45,460 --> 01:25:50,460
But you know, I get busy and sometimes I'll make a mistake and I'll commit something that

1217
01:25:50,460 --> 01:25:51,460
refers to me.

1218
01:25:51,460 --> 01:25:52,700
In fact, I think I have something in here.

1219
01:25:52,700 --> 01:26:01,700
I don't know where it is, but if you do that kind of thing, now, see the better option

1220
01:26:01,700 --> 01:26:06,740
instead of doing a dot files that is this, right?

1221
01:26:06,740 --> 01:26:14,460
So this is something I use, I source, I wrote a function called source if, and then I have

1222
01:26:14,460 --> 01:26:19,580
added dot bash personal dot bash private and dot bash work.

1223
01:26:19,580 --> 01:26:24,100
And this allows me to use the same bash or C file everywhere I am.

1224
01:26:24,100 --> 01:26:28,580
And I have a bunch of stuff in dot bash work, for example, that deals with our VPN and logging

1225
01:26:28,580 --> 01:26:33,580
around it and, you know, sets a SOX proxy and all this stuff that you'll get into if

1226
01:26:33,580 --> 01:26:36,900
you get into the IT profession.

1227
01:26:36,900 --> 01:26:42,180
And you know, so you can you can do that that way if you want to my dot bash private is

1228
01:26:42,180 --> 01:26:48,020
actually mounted as a USB stick, which is another reason to use a VM instead of Docker.

1229
01:26:48,020 --> 01:26:56,540
I'm sorry, instead of, instead of WSL2, WSL2 does not allow you to mount USB sticks, period,

1230
01:26:56,540 --> 01:26:58,260
which is really horrible.

1231
01:26:58,260 --> 01:27:03,620
So I happen to keep, I mean, I'm not doxing anything here, I keep my private data, my

1232
01:27:03,620 --> 01:27:08,860
private stuff on a USB stick, and then I mount that USB stick, and then this gets symbolically

1233
01:27:08,860 --> 01:27:14,020
linked to what's called a raw Git repo that never touches the internet, ever.

1234
01:27:14,020 --> 01:27:18,900
And that's got, you know, my private keys, my GPG stuff in it and stuff like that.

1235
01:27:18,900 --> 01:27:21,500
And that's one of the reasons I'm using a VM container here, because I don't want to

1236
01:27:21,500 --> 01:27:22,500
show you that stuff.

1237
01:27:22,500 --> 01:27:26,340
But I do want to show you how you could do that if you wanted to.

1238
01:27:26,340 --> 01:27:29,420
And then you can you can break these out, okay.

1239
01:27:29,420 --> 01:27:34,140
So in terms of references, if you want to follow along in this thing, and you can just

1240
01:27:34,140 --> 01:27:38,820
go click on the dot file here, and I'll send you the link here so you can go look at it.

1241
01:27:39,780 --> 01:27:43,700
And I'm always, you know, pilfering other people's good ideas as well, I'm constantly

1242
01:27:43,700 --> 01:27:44,700
going through it.

1243
01:27:44,700 --> 01:27:47,500
All right, so let's let's jam through this thing really fast.

1244
01:27:47,500 --> 01:27:50,060
I'd like to read about dot files.

1245
01:27:50,060 --> 01:27:51,580
Oh, yeah, it's so much fun.

1246
01:27:51,580 --> 01:27:54,740
Yeah, I've made so many friends just through my dot files.

1247
01:27:54,740 --> 01:27:58,540
Seriously, because I've like reached out to other people's dot files, I'm like, man, I

1248
01:27:58,540 --> 01:28:00,060
really love what you did here.

1249
01:28:00,060 --> 01:28:03,340
Blah, blah, blah, say thank you, or you open an issue on the dot files thing just to be

1250
01:28:03,340 --> 01:28:05,980
nice or, you know, comment or something.

1251
01:28:05,980 --> 01:28:12,220
And I've had people, Q-Macro found me through my dot files on Twitter, and then saw some

1252
01:28:12,220 --> 01:28:16,820
stuff in there and started talking about it to his to his pair of group, and it's a part

1253
01:28:16,820 --> 01:28:18,060
of the culture, right.

1254
01:28:18,060 --> 01:28:22,660
So, you know, drink a beer or whatever, non beer, coffee, whatever you want to whatever

1255
01:28:22,660 --> 01:28:26,020
beverage you want, and then talk about making a better dot files.

1256
01:28:26,020 --> 01:28:30,540
People at night, like when I'm like putting the music on, I'm all I'm doing is cleaning

1257
01:28:30,540 --> 01:28:33,980
my dot files up, and it's fun.

1258
01:28:33,980 --> 01:28:38,300
Cleaning your dot files, your dot files up is really, really fun.

1259
01:28:38,300 --> 01:28:42,700
You just put music on and, you know, shoot the breeze of your friends on Twitch and just

1260
01:28:42,700 --> 01:28:43,700
clean up your dot files.

1261
01:28:43,700 --> 01:28:44,700
In fact, it's addicting.

1262
01:28:44,700 --> 01:28:45,700
It's really addicting.

1263
01:28:45,700 --> 01:28:49,060
You want to like creating new ways to doing things.

1264
01:28:49,060 --> 01:28:55,540
In fact, because of this, I ended up making Banzai, which is a monolith that has all of

1265
01:28:55,540 --> 01:28:58,540
my commands in it that I can compile for another system.

1266
01:28:58,540 --> 01:29:00,020
Let me show you that.

1267
01:29:00,020 --> 01:29:04,580
So this, I'm going to give you a little snapshot of Banzai.

1268
01:29:04,580 --> 01:29:06,900
So where's my CP command?

1269
01:29:06,900 --> 01:29:13,140
All right, wait, wait, wait, wait, so it's over here, there we do it, okay.

1270
01:29:13,140 --> 01:29:19,860
So I can do capi dash l, I can do which is Z, right.

1271
01:29:19,860 --> 01:29:22,740
You remember my Z command that's got the POMO timer and everything?

1272
01:29:22,740 --> 01:29:26,340
Yeah, I can copy my Z command, and I can copy that.

1273
01:29:26,340 --> 01:29:27,980
Oh, let's make a new directory.

1274
01:29:27,980 --> 01:29:31,460
So while we're at it, where am I?

1275
01:29:31,460 --> 01:29:35,660
All right, so I want to be careful because if I close this window, we're dead.

1276
01:29:35,660 --> 01:29:37,660
My whole thing will get reset.

1277
01:29:37,660 --> 01:29:45,860
So we're going to make a directory called .local.bin, notice file directory, oh, what's the fix

1278
01:29:45,860 --> 01:29:47,940
for that?

1279
01:29:47,940 --> 01:29:51,420
What's the fix for that?

1280
01:29:51,420 --> 01:29:56,140
It's a non-posix fix, but what's the fix for that?

1281
01:29:56,140 --> 01:29:57,140
What just happened?

1282
01:29:57,140 --> 01:30:01,660
We have a quiz here, we cover this, I just want to see who knows.

1283
01:30:01,660 --> 01:30:06,740
I tried to create a directory that doesn't have a parent directory, how do I fix that?

1284
01:30:06,740 --> 01:30:11,540
Dash P, well, that's a good job, okay, so dash P, it says make all parent directories

1285
01:30:11,540 --> 01:30:15,340
as well, right.

1286
01:30:15,340 --> 01:30:17,260
That's all in it, yep, dash P.

1287
01:30:17,260 --> 01:30:19,660
That does not work on BSD Unix, by the way.

1288
01:30:19,660 --> 01:30:28,180
It is a bash, I'm sorry, it's a, I don't know, it's a bashism, it's a linuxism.

1289
01:30:28,180 --> 01:30:34,660
All right, so anyway, so now I have a bin directory, right, and I'm going to go over

1290
01:30:34,660 --> 01:30:41,380
here and I'm going to copy my Z program, which is, you guys are going to make one too if

1291
01:30:41,380 --> 01:30:49,500
you want to, it's a bunch of only, a bunch of only, a lot of people do that, yeah.

1292
01:30:50,340 --> 01:30:55,260
A lot of people do that, but I don't, like, sometimes I like doing it explicitly, but,

1293
01:30:55,260 --> 01:31:00,940
so let's actually copy this into the home directory, but to do this, we might have to

1294
01:31:00,940 --> 01:31:03,780
do it as a specific user.

1295
01:31:03,780 --> 01:31:07,140
I think it's just going to copy it over as root, does it dash U, already make sure of?

1296
01:31:07,140 --> 01:31:11,140
Actually, no, let's just put it in slash temp, and I'll copy it over, it doesn't matter.

1297
01:31:11,140 --> 01:31:12,140
Either way, it's fine.

1298
01:31:12,140 --> 01:31:18,740
All right, so now I can do this, I can say copy slash temp Z into .local, and because

1299
01:31:18,740 --> 01:31:28,980
it's Unix, already, right, which is Z, exec bash dash L, and which is Z, and the reason

1300
01:31:28,980 --> 01:31:33,100
that it didn't see it in the path is some cool magic that I'm doing with the path, building

1301
01:31:33,100 --> 01:31:37,540
up my path on login, and I want to show you that in a second.

1302
01:31:37,540 --> 01:31:40,140
So now I have a Z program, right?

1303
01:31:40,140 --> 01:31:47,780
Well, it's not, you know, schmox, which is Z.

1304
01:31:47,780 --> 01:31:53,180
All right, so now we can do Z, and that's my Z program.

1305
01:31:53,180 --> 01:31:54,420
Pretty cool, huh?

1306
01:31:54,420 --> 01:31:58,300
I could have done that on PowerShell, I could have done that on Plan 9, I could have done

1307
01:31:58,300 --> 01:32:03,180
that on BSD Unix, I could have done that on AIX, I could have done it on anything.

1308
01:32:03,180 --> 01:32:08,220
So this is the moment where I'm going to tell you that I am in the middle of porting all

1309
01:32:08,220 --> 01:32:18,780
of my scripts, why use a bonsai monolith instead of scripts.

1310
01:32:18,780 --> 01:32:24,460
So I'm moving on to the next phase of evolution, and I am getting rid of my scripts, and I'm

1311
01:32:24,460 --> 01:32:29,920
putting the ones that I use all the time and do a single bonsai monolith, because why?

1312
01:32:29,920 --> 01:32:34,700
Because I was able to copy every single script and every single thing I ever want to use

1313
01:32:34,700 --> 01:32:42,340
by using one copy command for all of that stuff, and it fulfills everything I need as

1314
01:32:42,340 --> 01:32:49,060
a, look at that, ZPOMO start.

1315
01:32:49,060 --> 01:32:51,740
My Tmux over here isn't set up yet, so that's why it's not doing it.

1316
01:32:51,740 --> 01:32:54,260
But if I do ZPOMO, you'll see it's there.

1317
01:32:54,260 --> 01:32:57,540
Oh, I haven't set it yet, ZPOMO in it.

1318
01:32:57,540 --> 01:33:03,500
All right, now let's try ZPOMO.

1319
01:33:03,500 --> 01:33:04,940
There we go.

1320
01:33:04,940 --> 01:33:08,460
So my POMO is running in my new container, and I didn't have to do anything, I just

1321
01:33:08,460 --> 01:33:11,140
copied it to binary over, one binary.

1322
01:33:11,140 --> 01:33:15,100
So and look at all the commands I get for free.

1323
01:33:15,100 --> 01:33:16,100
You see that?

1324
01:33:16,100 --> 01:33:17,740
I get all of those commands for free.

1325
01:33:17,740 --> 01:33:23,820
I want to do epic, and I want to do iso-nan.

1326
01:33:23,820 --> 01:33:31,700
I can do that, I can do, I can run, I mean anything, I've got my ENV thing, I don't know

1327
01:33:32,100 --> 01:33:38,420
how to get all of my environment variables, I can get, whatever, and that would work on

1328
01:33:38,420 --> 01:33:40,740
Windows, it doesn't even have Linux if I did it.

1329
01:33:40,740 --> 01:33:42,720
It's one of the reasons I like it so much.

1330
01:33:42,720 --> 01:33:48,420
So I'm, as I said, it's got, it's got my YAML parser built into it, so I don't have

1331
01:33:48,420 --> 01:33:49,780
to install that.

1332
01:33:49,780 --> 01:33:55,600
It's got my, you know, it's got a way to set localized variables.

1333
01:33:55,600 --> 01:34:00,980
It's got a way to talk to Twitch if I wanted to do that, and I can adjust it to have anything

1334
01:34:00,980 --> 01:34:03,540
else off of that that I might not want.

1335
01:34:03,540 --> 01:34:05,860
What does AFK do?

1336
01:34:05,860 --> 01:34:08,740
Oh, there's no chat command.

1337
01:34:08,740 --> 01:34:11,620
Oh, my chat command talks to WeChat.

1338
01:34:11,620 --> 01:34:12,620
That's the problem.

1339
01:34:12,620 --> 01:34:13,620
Hello.

1340
01:34:13,620 --> 01:34:16,620
Well, I'm just going to try to chat, talk to WeChat, and there's no WeChat.

1341
01:34:16,620 --> 01:34:22,340
Yeah, so it can't do it, and now it's not happy.

1342
01:34:22,340 --> 01:34:25,140
Why isn't it happy?

1343
01:34:25,140 --> 01:34:26,140
What did I do to it?

1344
01:34:26,140 --> 01:34:27,140
I broke it.

1345
01:34:27,140 --> 01:34:32,020
It's waiting on my, it's waiting on terminal input, and it's trying to talk to WeChat,

1346
01:34:32,020 --> 01:34:35,220
and WeChat's not there.

1347
01:34:35,220 --> 01:34:36,220
I found a bug.

1348
01:34:36,220 --> 01:34:39,220
I definitely found a bug.

1349
01:34:39,220 --> 01:34:40,220
All right.

1350
01:34:40,220 --> 01:34:42,620
Let me, let me go log in or something, so I can fix that one.

1351
01:34:42,620 --> 01:34:43,620
All right.

1352
01:34:43,620 --> 01:34:45,740
So Docker, when does it connect?

1353
01:34:45,740 --> 01:34:49,060
No, it's attached, right?

1354
01:34:49,060 --> 01:34:50,060
Docker attached.

1355
01:34:50,060 --> 01:34:51,060
I know.

1356
01:34:51,060 --> 01:34:52,060
That's embarrassing.

1357
01:34:52,060 --> 01:34:53,060
That's what I do.

1358
01:34:53,060 --> 01:34:56,060
My program is trying to talk to WeChat, and it's all hung, and it's not doing control

1359
01:34:56,060 --> 01:35:01,500
D because control D is getting intercepted by stuff before.

1360
01:35:01,500 --> 01:35:02,780
A monolithic function is only file.

1361
01:35:02,780 --> 01:35:03,780
I would love that.

1362
01:35:03,780 --> 01:35:05,780
Wouldn't that be great, Masi?

1363
01:35:05,780 --> 01:35:06,780
Yeah.

1364
01:35:06,780 --> 01:35:09,500
I mean, we'd have to be scripts though.

1365
01:35:09,500 --> 01:35:12,340
So I mean, you could just do a tar ball and untar it.

1366
01:35:12,340 --> 01:35:15,340
That's what everybody else does, right?

1367
01:35:15,340 --> 01:35:18,060
Another way to do this is just make a tar ball of your scripts, and then just untar

1368
01:35:18,060 --> 01:35:20,500
your scripts, and then you're good to go, right?

1369
01:35:20,500 --> 01:35:22,740
Some people do that with their entire home directory.

1370
01:35:22,740 --> 01:35:26,580
They just tar, they have a set up script that just tars their home directory, and they

1371
01:35:26,580 --> 01:35:28,940
just go over there, and they just run it, and untars it, and does it.

1372
01:35:28,940 --> 01:35:33,540
It's kind of a fun script to write if you want to do that.

1373
01:35:33,540 --> 01:35:36,260
So oops, I don't know.

1374
01:35:36,260 --> 01:35:38,580
What is the name of our Docker thing?

1375
01:35:38,580 --> 01:35:41,420
I know this is taking a long time.

1376
01:35:41,420 --> 01:35:42,420
I'm sorry.

1377
01:35:42,420 --> 01:35:43,420
Docker attached.

1378
01:35:43,420 --> 01:35:53,540
Did I do that right, or did I do exec?

1379
01:35:53,540 --> 01:35:54,940
I can't remember my Docker commands.

1380
01:35:54,940 --> 01:35:55,940
I'm sorry.

1381
01:35:55,940 --> 01:35:56,940
There we go.

1382
01:35:56,940 --> 01:35:57,940
su-rvxrub.

1383
01:35:57,940 --> 01:35:58,940
Phew.

1384
01:35:58,940 --> 01:35:59,940
ps-efgrapvxrub.

1385
01:35:59,940 --> 01:36:00,940
Oh, there's no pcrgrapv.

1386
01:36:00,940 --> 01:36:10,940
I forgot about that.

1387
01:36:10,940 --> 01:36:23,180
You guys know about that, right?

1388
01:36:23,180 --> 01:36:24,180
Any time.

1389
01:36:24,180 --> 01:36:27,500
Okay, I'm going to show you this.

1390
01:36:27,500 --> 01:36:44,860
Use to disable aliases, aliases and functions.

1391
01:36:44,860 --> 01:36:46,860
So do you see what I did?

1392
01:36:46,860 --> 01:36:50,900
It's like, I forgot I don't have pcrgrep installed, so I want to use the actual grip

1393
01:36:50,900 --> 01:36:54,740
from the system, so I put a slash in front of grip, and then that finds the actual grip

1394
01:36:54,740 --> 01:36:57,060
and it works, right?

1395
01:36:57,060 --> 01:36:59,180
So now I need to kill zchat.

1396
01:36:59,180 --> 01:37:03,140
So the other thing that I like about using the zchat compile thing is I can see it.

1397
01:37:03,140 --> 01:37:05,300
It's not like bash something, right?

1398
01:37:05,300 --> 01:37:06,300
So I need to do this.

1399
01:37:06,300 --> 01:37:19,820
I need to do pkill756, we'll try to kill it nicely and see if it dies, and I'll see.

1400
01:37:19,820 --> 01:37:20,820
Is it still there?

1401
01:37:20,820 --> 01:37:22,220
No, I'm not having it.

1402
01:37:22,220 --> 01:37:23,220
Okay, fine.

1403
01:37:23,220 --> 01:37:24,220
That's nine.

1404
01:37:24,220 --> 01:37:29,220
No, we need to kill sophysics.

1405
01:37:29,220 --> 01:37:31,220
One more time.

1406
01:37:31,220 --> 01:37:33,220
Okay, it's gone.

1407
01:37:33,220 --> 01:37:40,660
I could also have done pkillz and that would have got it, but that's a little bit scarier.

1408
01:37:40,660 --> 01:37:43,340
And now we should have two containers.

1409
01:37:43,340 --> 01:37:47,660
Yeah, we should have two container processes.

1410
01:37:47,660 --> 01:37:48,660
There we go.

1411
01:37:48,660 --> 01:37:52,020
So, by the way, has anybody had to do that on assistive before?

1412
01:37:52,020 --> 01:37:55,900
Did you like login on the outside and then go kill the process and went crazy?

1413
01:37:55,900 --> 01:38:00,460
So it's a thing that people do to survive.

1414
01:38:00,460 --> 01:38:02,380
I've done that with X before.

1415
01:38:02,380 --> 01:38:11,980
I've had my, it's happened with, what's it called?

1416
01:38:11,980 --> 01:38:12,980
Popoos.

1417
01:38:12,980 --> 01:38:18,260
Popoos was blacking out my screen and I had to SSH in, kill all the processes surgically

1418
01:38:18,260 --> 01:38:20,660
and then reboot it because it was so screwed up.

1419
01:38:21,140 --> 01:38:22,900
That's why I got rid of Popoos, by the way.

1420
01:38:22,900 --> 01:38:23,900
It's crap.

1421
01:38:23,900 --> 01:38:24,900
Absolute crap.

1422
01:38:24,900 --> 01:38:30,940
We've read an install script for every dependency like use for curl, etc.

1423
01:38:30,940 --> 01:38:31,940
I do.

1424
01:38:31,940 --> 01:38:33,860
I do have an install script and we're going to talk about that.

1425
01:38:33,860 --> 01:38:37,220
We're going to talk about how to write installers.

1426
01:38:37,220 --> 01:38:38,940
I don't know if we're going to get to that today.

1427
01:38:38,940 --> 01:38:41,460
Maybe we should do that next week.

1428
01:38:41,460 --> 01:38:42,460
Let's talk about that.

1429
01:38:42,460 --> 01:38:43,460
Do we have time?

1430
01:38:43,460 --> 01:38:45,500
I don't know if we're going to have time.

1431
01:38:45,500 --> 01:38:49,900
We still have to get through the other configuration files and it's, oops, wrong system.

1432
01:38:50,900 --> 01:38:51,900
Date.

1433
01:38:51,900 --> 01:38:57,060
It's four o'clock and we're supposed to, we're going until six though, right?

1434
01:38:57,060 --> 01:38:58,060
We're going until six.

1435
01:38:58,060 --> 01:39:00,220
I get that right.

1436
01:39:00,220 --> 01:39:03,100
We just changed the time recently, that's why I'm wondering.

1437
01:39:03,100 --> 01:39:04,660
So yeah, we're going until six.

1438
01:39:04,660 --> 01:39:05,660
Okay.

1439
01:39:05,660 --> 01:39:06,660
So we have time.

1440
01:39:06,660 --> 01:39:08,460
We have a lot of things to configure.

1441
01:39:08,460 --> 01:39:13,460
So let me, let me, let me put that on the list.

1442
01:39:13,460 --> 01:39:19,100
We need to put linking, we're going to put git, we're going to put gh, we're going to

1443
01:39:19,100 --> 01:39:32,900
put github, we're going to put linking, uh, ln, and we need to do, uh, installers, uh,

1444
01:39:32,900 --> 01:39:34,140
custom installers if you want them.

1445
01:39:34,140 --> 01:39:35,540
And we will justify why.

1446
01:39:35,540 --> 01:39:37,460
I don't want to get into that right now.

1447
01:39:37,460 --> 01:39:39,060
Let's finish going through the bash recipe file.

1448
01:39:39,060 --> 01:39:43,860
But yes, I have custom installers for everything because there's no less than six ways to install

1449
01:39:43,860 --> 01:39:49,020
most Kubernetes things and you have to pick the way you want to, you know, do that.

1450
01:39:49,020 --> 01:39:53,660
Sometimes it's just adding it to an app, you know, a list of stuff to app get, um, and

1451
01:39:53,660 --> 01:39:55,740
other times it's snot.

1452
01:39:55,740 --> 01:39:59,500
So I, this has been a problem.

1453
01:39:59,500 --> 01:40:02,900
I'm, I'm repeating, I'm going to repeat myself tomorrow the next week.

1454
01:40:02,900 --> 01:40:10,740
But this is, um, this is one of my, my, my main concerns is, is I want to be in charge

1455
01:40:10,740 --> 01:40:13,500
of how something gets installed on my system.

1456
01:40:13,500 --> 01:40:18,100
And I like the package matters and stuff, but let's take go for example, right?

1457
01:40:18,100 --> 01:40:21,620
Depending on where you install it, you're going to get version 16 or 17.

1458
01:40:21,620 --> 01:40:23,500
You're not going to get version 1.18.

1459
01:40:23,500 --> 01:40:26,780
So in order to get a 1.18, you got to do some extra things to make sure you get the right

1460
01:40:26,780 --> 01:40:27,780
one.

1461
01:40:27,780 --> 01:40:32,860
You can try to customize an extra, you know, get repo, uh, an extra, you know, app repository

1462
01:40:32,860 --> 01:40:36,660
in order to get the latest one to do apt install, or you can just write a minimal script that

1463
01:40:36,660 --> 01:40:40,500
curls down the right tar ball and, and untars it to the right location.

1464
01:40:40,500 --> 01:40:46,500
And so the ability, this is why we did bash scripting my friends before I wanted to do

1465
01:40:46,500 --> 01:40:54,100
anything with configuration because you know, if you don't know how to do basic bash scripting,

1466
01:40:54,100 --> 01:40:59,220
you're really going to be lost when it comes to automating yourself, you know, and configuring

1467
01:40:59,220 --> 01:41:03,940
your life in Linux and, and, and that includes writing those installers.

1468
01:41:03,940 --> 01:41:06,140
So we covered that over three weeks.

1469
01:41:06,140 --> 01:41:08,780
So hopefully you've got at least enough bash behind you to understand what we're going

1470
01:41:08,780 --> 01:41:09,780
to be reading.

1471
01:41:09,780 --> 01:41:10,780
All right.

1472
01:41:10,780 --> 01:41:13,460
So let's go back to the container and read the default bash RC, which I just copied over

1473
01:41:13,460 --> 01:41:14,460
here.

1474
01:41:14,460 --> 01:41:18,180
Um, and let's break this down line by line as we were going.

1475
01:41:18,180 --> 01:41:19,180
All right.

1476
01:41:19,180 --> 01:41:23,580
So the first thing you see is a shebang line that has just the word bash in it.

1477
01:41:23,580 --> 01:41:25,140
And this is for one purpose only.

1478
01:41:25,140 --> 01:41:32,900
This is to tell, uh, my VIM or any VIM, whether or not VIM has been configured yet, which

1479
01:41:32,900 --> 01:41:36,700
is kind of the point that it's a bash file, right?

1480
01:41:36,700 --> 01:41:43,060
Uh, dot bash RC is not by default recognized as a bash, uh, thing.

1481
01:41:43,060 --> 01:41:47,700
And of course you could always do set, you know, FT equals bash here.

1482
01:41:47,700 --> 01:41:49,340
And that'll do the same thing.

1483
01:41:49,340 --> 01:41:52,300
But that's just a nice convenience.

1484
01:41:52,300 --> 01:41:53,300
It works everywhere.

1485
01:41:53,300 --> 01:41:55,780
It does not actually evaluate it at all.

1486
01:41:55,780 --> 01:41:56,780
It's just a thing.

1487
01:41:56,780 --> 01:41:59,620
You'll see people, pearl people doing that too, sometimes Python people will do that.

1488
01:41:59,620 --> 01:42:07,380
Um, this next line is the default line that's read by shell check to disable certain checks

1489
01:42:07,380 --> 01:42:09,820
that I think are dumb or stupid or overzealous.

1490
01:42:09,820 --> 01:42:11,620
And I turned that off.

1491
01:42:11,620 --> 01:42:14,460
And I haven't run shell check on my, I'm kind of embarrassed to run.

1492
01:42:14,460 --> 01:42:15,460
I don't want to do it.

1493
01:42:15,460 --> 01:42:18,380
I haven't run shell check on my, on my bash RC in a long time.

1494
01:42:18,380 --> 01:42:22,820
I am regularly changing my bash RC and not running shell check on.

1495
01:42:22,820 --> 01:42:23,820
I probably should.

1496
01:42:23,820 --> 01:42:30,620
Um, so anyway, and, and then we're onto the most important piece of the beginning of this.

1497
01:42:30,620 --> 01:42:31,620
Okay.

1498
01:42:31,620 --> 01:42:35,020
And this is what allows you to have a single file instead of all those other files.

1499
01:42:35,020 --> 01:42:39,740
Remember all that talk we said about login and interactive shells and all that stuff.

1500
01:42:39,740 --> 01:42:41,240
Well, here you go.

1501
01:42:41,240 --> 01:42:45,840
This is one of the most cryptic things any beginner will ever see.

1502
01:42:45,840 --> 01:42:50,160
And I, to this day, still have trouble understanding what it is.

1503
01:42:50,160 --> 01:42:54,800
So we're going to unpack it, but I want you to know that all it's really doing is it's

1504
01:42:54,800 --> 01:43:02,160
detecting whether this bash RC is running from a login shell or is it running under

1505
01:43:02,160 --> 01:43:03,960
an interactive shell?

1506
01:43:03,960 --> 01:43:05,120
Okay.

1507
01:43:05,120 --> 01:43:12,280
And, um, if it's running, uh, interactively, then it continues to work.

1508
01:43:12,280 --> 01:43:16,240
If it's not running interactively, and this is, we were talking about this before, we're

1509
01:43:16,240 --> 01:43:19,600
kind of bouncing around the topic.

1510
01:43:19,600 --> 01:43:23,120
Sometimes you don't want all of this to run, right?

1511
01:43:23,120 --> 01:43:26,840
So if it's running interactively, I want this bash RC to run.

1512
01:43:26,840 --> 01:43:31,400
If it's not running interactively, I want it to end immediately.

1513
01:43:31,400 --> 01:43:36,000
I want it to stop working and I want it to return, right?

1514
01:43:36,000 --> 01:43:39,360
And if you don't do that, then every shell script under that is going to run the bash

1515
01:43:39,360 --> 01:43:41,240
RC file.

1516
01:43:41,240 --> 01:43:44,960
And I forgot about the nuances of this, but that's what this is doing.

1517
01:43:44,960 --> 01:43:50,840
This is ensuring that, um, and I, if I think, if I remember right, I think, um, I think

1518
01:43:50,840 --> 01:43:55,760
no matter what dot pro, well, no, that's not right, never mind, uh, prefer version that

1519
01:43:55,760 --> 01:43:58,400
might not be a part of the package measure repo.

1520
01:43:58,400 --> 01:44:00,120
Yes.

1521
01:44:00,120 --> 01:44:01,120
That is part of it.

1522
01:44:01,120 --> 01:44:02,120
Problem.

1523
01:44:02,120 --> 01:44:03,120
Yes.

1524
01:44:03,120 --> 01:44:04,120
That is very true too.

1525
01:44:04,120 --> 01:44:05,120
And you stick a list of packages and you have an app.

1526
01:44:05,120 --> 01:44:12,040
No, you can't actually, um, yes.

1527
01:44:12,040 --> 01:44:13,040
Animation first approach.

1528
01:44:13,040 --> 01:44:14,040
Yes.

1529
01:44:14,040 --> 01:44:20,360
Uh, if we're just doing not manual action, yeah.

1530
01:44:20,360 --> 01:44:23,160
And another thing too about writing install scripts and we're going to talk about that

1531
01:44:23,160 --> 01:44:28,920
at length next week is I, I regularly take those install scripts and copy an install

1532
01:44:28,920 --> 01:44:30,560
script over to a system.

1533
01:44:30,560 --> 01:44:36,360
I want to put that on or I copy that in skull script and I put that code into a Docker file

1534
01:44:36,360 --> 01:44:38,160
to create a new Docker image.

1535
01:44:38,160 --> 01:44:41,480
Um, so there's lots of reasons to isolate your stuff.

1536
01:44:41,480 --> 01:44:45,120
I've tried to make my own package management systems before and stuff in a bottom line.

1537
01:44:45,120 --> 01:44:50,360
I just broke down and make individual scripts and make somewhat logical break up here.

1538
01:44:50,360 --> 01:44:56,000
So all you need to know about this is that this says return right away unless this is

1539
01:44:56,000 --> 01:44:57,560
an interactive login show.

1540
01:44:57,560 --> 01:44:58,560
Okay.

1541
01:44:58,560 --> 01:45:04,680
And you can actually look at, um, I don't know if this is going to be covered here.

1542
01:45:04,680 --> 01:45:09,440
We're going to have to go look for that.

1543
01:45:09,440 --> 01:45:11,440
Oh, whoops.

1544
01:45:11,440 --> 01:45:22,560
Uh, let's go see that actually dollar that actually does say what does dollar, uh, do

1545
01:45:22,560 --> 01:45:25,960
in Linux.

1546
01:45:26,920 --> 01:45:31,680
Yeah, I don't, but the, the things change too much.

1547
01:45:31,680 --> 01:45:34,760
It changes too much for you to modify your VM that often.

1548
01:45:34,760 --> 01:45:36,960
It's way too tedious in my opinion.

1549
01:45:36,960 --> 01:45:41,920
Uh, so anyway, Linux terminal.

1550
01:45:41,920 --> 01:45:44,680
So they got all these special things, right?

1551
01:45:44,680 --> 01:45:51,800
Um, these are all the arguments, like what the argument numbers are actually, I'm this

1552
01:45:51,800 --> 01:46:00,640
I'm trying to look, I'm trying to look for the actual explanation of that thing.

1553
01:46:00,640 --> 01:46:06,160
I know you can just echo it by the way, it'll tell you all the things in it, but I've never,

1554
01:46:06,160 --> 01:46:12,400
these are all of the commands that have been set for the current shell.

1555
01:46:12,400 --> 01:46:14,880
Yeah.

1556
01:46:14,880 --> 01:46:17,640
So, yeah.

1557
01:46:17,640 --> 01:46:29,000
So you could do, I'm trying to find, I think it's options.

1558
01:46:29,000 --> 01:46:39,320
I should know this, but I don't know this dollar, it's preceded by dollars per understand

1559
01:46:39,320 --> 01:46:47,640
what dollar dash, I think we have to escape it.

1560
01:46:47,640 --> 01:46:48,640
There it is.

1561
01:46:48,640 --> 01:46:55,640
PS one is set and dollar dash includes I, oh, there we go.

1562
01:46:55,640 --> 01:46:56,640
Here we go.

1563
01:46:56,640 --> 01:47:02,360
Oh, look, look, a login shell and the good reason I read, read the bash man page.

1564
01:47:02,360 --> 01:47:08,680
A login shell is one of the first characters of argument zero, uh, is dash or when it started

1565
01:47:08,680 --> 01:47:14,440
with dash dash login option and interactive shell is one started without non-option arguments

1566
01:47:14,440 --> 01:47:18,960
unless dash s is specified and without dash c option, blah, blah, blah.

1567
01:47:18,960 --> 01:47:26,800
So PS one is set and so you don't even get a PS one unless dollar I includes, unless

1568
01:47:26,800 --> 01:47:30,840
dollar dash includes I, if bash is interactive.

1569
01:47:30,840 --> 01:47:37,840
So this is how you can tell if it's interactive and let's go see if we can find the next one.

1570
01:47:37,840 --> 01:47:41,360
The current set of options, there we go.

1571
01:47:41,360 --> 01:47:42,360
Here we go.

1572
01:47:42,360 --> 01:47:43,360
Here we go.

1573
01:47:43,360 --> 01:47:44,360
Here we go.

1574
01:47:44,360 --> 01:47:45,360
Here we go.

1575
01:47:45,360 --> 01:47:46,360
Here we go.

1576
01:47:46,360 --> 01:47:47,360
Here we go.

1577
01:47:47,360 --> 01:47:48,360
So signal the end of options.

1578
01:47:48,360 --> 01:47:49,360
Okay.

1579
01:47:49,360 --> 01:47:52,960
Cause all R extra to be assigned.

1580
01:47:52,960 --> 01:47:57,440
So here's all of the options, right?

1581
01:47:57,440 --> 01:48:04,880
So we have H set, location of commands that are set.

1582
01:48:04,880 --> 01:48:08,200
So I guess that's all the commands that, all the options that were passed the bash.

1583
01:48:08,200 --> 01:48:14,320
I've never really looked.

1584
01:48:14,320 --> 01:48:19,760
The options are off by default unless otherwise noted using plus rather than dash causes the

1585
01:48:19,760 --> 01:48:22,000
options to be turned off.

1586
01:48:22,000 --> 01:48:26,400
The options can be, can, can also be specified as arguments to the indication of the shell.

1587
01:48:26,400 --> 01:48:29,880
The current set of options may be found in dollar dash.

1588
01:48:29,880 --> 01:48:32,080
The return status is always true.

1589
01:48:32,080 --> 01:48:33,080
Interesting.

1590
01:48:33,080 --> 01:48:38,800
So dollar dash tells you all your options.

1591
01:48:38,800 --> 01:48:41,800
Yeah.

1592
01:48:41,800 --> 01:48:48,400
So that, that's interesting because some of them are just indicated by a dash, you know?

1593
01:48:48,400 --> 01:48:51,200
So, so yeah.

1594
01:48:51,200 --> 01:48:52,200
Very cool.

1595
01:48:52,200 --> 01:48:56,240
Anyway, so this is how you check if it's interactive and this is pretty much code.

1596
01:48:56,240 --> 01:48:57,240
Hi Matt.

1597
01:48:57,240 --> 01:48:58,240
How you doing?

1598
01:48:58,240 --> 01:49:02,240
So this is code you're pretty much going to need to write no matter what, right?

1599
01:49:02,240 --> 01:49:03,240
This always to be there.

1600
01:49:03,240 --> 01:49:04,240
All right.

1601
01:49:04,240 --> 01:49:05,440
Let's go on.

1602
01:49:05,440 --> 01:49:07,440
So a district detection.

1603
01:49:07,440 --> 01:49:13,880
So this is something, I actually had a very exhaustive district detection section at

1604
01:49:13,880 --> 01:49:15,800
one point.

1605
01:49:15,800 --> 01:49:21,040
I was checking the U names for Mac and, and all these different versions and I deleted

1606
01:49:21,040 --> 01:49:22,040
it all.

1607
01:49:22,040 --> 01:49:25,920
If you go back in my files and look at the history of that, you can find that this is

1608
01:49:25,920 --> 01:49:27,240
actually dead.

1609
01:49:27,240 --> 01:49:32,160
I don't do WSL2 at all anymore, so I would take that out.

1610
01:49:32,160 --> 01:49:38,720
But if you want to set a variable, we're, you know, back to, this is why you know bash,

1611
01:49:38,720 --> 01:49:39,720
right?

1612
01:49:39,720 --> 01:49:42,960
If you want to set an environment variable that contains your distro, you can do a little

1613
01:49:42,960 --> 01:49:48,240
bit of detection and then you can have a single bash RC that has conditional logic in it for

1614
01:49:48,240 --> 01:49:51,360
the different distros.

1615
01:49:51,360 --> 01:50:00,800
I am so regularly on the one-two server and potentially in the future, Fedora or, you

1616
01:50:00,800 --> 01:50:04,840
know, Rocky or something that I really don't care.

1617
01:50:04,840 --> 01:50:12,000
But I also have a bash RC that's, that I run on my Mac, but I stopped caring about that

1618
01:50:12,000 --> 01:50:15,600
as well because I started running VMs and just using Linux everywhere.

1619
01:50:15,600 --> 01:50:21,240
So in order to simplify my shell, I added this U name, let's look at U name.

1620
01:50:21,240 --> 01:50:37,800
So let's see, use U name to see, to see info about the system.

1621
01:50:37,800 --> 01:50:43,680
So U name and there's LS, LF or whatever, not LF, there's no one.

1622
01:50:43,680 --> 01:50:44,800
U name is pretty common though.

1623
01:50:44,800 --> 01:50:51,360
So U name, U name dash A, this gives you basic information about your system.

1624
01:50:51,360 --> 01:50:54,560
And we'll just, I'll let you read about that on your own.

1625
01:50:54,560 --> 01:51:01,560
So U name dash R gives you, I think the, what is it, the distro?

1626
01:51:01,560 --> 01:51:05,840
Oh, it gives you the actual version.

1627
01:51:05,840 --> 01:51:06,840
Interesting.

1628
01:51:06,840 --> 01:51:09,880
And I noticed the WSL, if you do that, you get Microsoft.

1629
01:51:09,880 --> 01:51:10,880
It's so weird.

1630
01:51:10,880 --> 01:51:13,520
I would put that, that doesn't make any sense.

1631
01:51:13,520 --> 01:51:14,520
Okay.

1632
01:51:14,520 --> 01:51:17,240
So at one point I had all the rest in there, I deleted them all.

1633
01:51:17,240 --> 01:51:18,240
Yeah.

1634
01:51:18,240 --> 01:51:23,840
Because Darwin, if you're on a Mac, it gives you Darwin, if you're on, you know, whatever.

1635
01:51:23,840 --> 01:51:26,440
Local utility functions.

1636
01:51:26,440 --> 01:51:28,440
So these are some functions that I wrote.

1637
01:51:28,440 --> 01:51:31,920
By the way, if you're going to do an inline function in Bash, you're supposed to do Bash

1638
01:51:31,920 --> 01:51:32,920
already.

1639
01:51:32,920 --> 01:51:33,920
We just spent three weeks on it.

1640
01:51:33,920 --> 01:51:34,920
Okay.

1641
01:51:34,920 --> 01:51:39,640
So if you, I put underscores in front of things that I want to be private, I just do that

1642
01:51:39,640 --> 01:51:43,640
no matter what, just to remind me visually.

1643
01:51:43,640 --> 01:51:47,080
So this, by the way, we didn't talk about this before.

1644
01:51:47,080 --> 01:51:51,960
This redirects both standard error and output at the same time.

1645
01:51:51,960 --> 01:51:54,840
It's a Bash four plus ism.

1646
01:51:54,840 --> 01:51:59,160
And you can do one liner's functions if you put a semicolon in there.

1647
01:51:59,160 --> 01:52:03,000
You got to make sure to put a semicolon in there because that serves as a line return,

1648
01:52:03,000 --> 01:52:04,000
right?

1649
01:52:04,000 --> 01:52:08,840
So this is probably not the best, I probably use command dash v here, but that would be

1650
01:52:08,840 --> 01:52:10,000
only if I wanted to command.

1651
01:52:10,000 --> 01:52:15,520
So type says, this is, I just have this to check whether I either have a function, alias

1652
01:52:15,520 --> 01:52:18,320
or script, right?

1653
01:52:18,320 --> 01:52:22,320
If I have any of those three script in the path, if I have any of those three that will

1654
01:52:22,320 --> 01:52:26,240
come back as positive, source if.

1655
01:52:26,240 --> 01:52:34,400
So source if says, if the first argument exists, if it's readable, if it's a readable file,

1656
01:52:34,400 --> 01:52:36,840
then source it.

1657
01:52:36,840 --> 01:52:38,320
And what does sourcing do?

1658
01:52:38,320 --> 01:52:41,400
So we haven't talked about this in Bash before, but I'm going to go through it.

1659
01:52:41,400 --> 01:52:49,560
So sourcing, which is either the word source or a dot by itself, literally, this does the

1660
01:52:49,560 --> 01:52:54,480
same thing as if you typed every line of the file at that location.

1661
01:52:54,480 --> 01:52:57,240
So it's not like import in Python or something like that.

1662
01:52:57,240 --> 01:53:03,960
It's the same thing as if you had actually typed those lines at that location, as is.

1663
01:53:03,960 --> 01:53:07,320
And it's very essential in your Bash or C file.

1664
01:53:07,360 --> 01:53:12,920
Also, I really make sources of security flaws because somebody who makes some stupid app

1665
01:53:12,920 --> 01:53:16,400
out there is going to say, just source this and you'll be good.

1666
01:53:16,400 --> 01:53:18,320
And they don't even have you look at the code.

1667
01:53:18,320 --> 01:53:23,040
Cobra is one of these dumb things that does this.

1668
01:53:23,040 --> 01:53:24,840
And we'll get into that a little bit later.

1669
01:53:24,840 --> 01:53:28,520
So environment variables also see NVX.

1670
01:53:28,520 --> 01:53:33,640
NVX is a command of mine that helps me manage environment variables without having them be

1671
01:53:33,640 --> 01:53:34,640
hard coded.

1672
01:53:34,640 --> 01:53:36,640
Hey, how are you?

1673
01:53:37,520 --> 01:53:38,520
What's that?

1674
01:53:38,520 --> 01:53:43,400
I remember to test for interactive to use the test command itself.

1675
01:53:43,400 --> 01:53:44,400
That's another way.

1676
01:53:44,400 --> 01:53:45,400
Yeah.

1677
01:53:45,400 --> 01:53:46,400
That's another way to do that.

1678
01:53:46,400 --> 01:53:48,400
You could also do that for sure.

1679
01:53:48,400 --> 01:53:49,400
Yeah.

1680
01:53:49,400 --> 01:53:56,320
And that's actually how I test for interactivity in other applications.

1681
01:53:56,320 --> 01:54:03,520
I think that the way of using dash T, of using, I don't use single brackets, but if it's

1682
01:54:03,520 --> 01:54:08,120
just, you know, I think you can use that as well.

1683
01:54:08,120 --> 01:54:20,160
If you are, I think you could do that on any shell, not just bash.

1684
01:54:20,160 --> 01:54:23,240
So I've seen both of these.

1685
01:54:23,240 --> 01:54:26,240
I actually do that very thing in my bash code too.

1686
01:54:26,240 --> 01:54:27,880
So they're both work.

1687
01:54:28,720 --> 01:54:35,720
The reason this one is here is I'm pretty sure this one works in shells that are not

1688
01:54:35,720 --> 01:54:36,720
bash.

1689
01:54:36,720 --> 01:54:39,400
Did I get that right?

1690
01:54:39,400 --> 01:54:41,760
I think it works in POSIX as well, but I don't remember.

1691
01:54:41,760 --> 01:54:45,640
I've had this this way for God, since the 90s.

1692
01:54:45,640 --> 01:54:51,440
So what this does, by the way, everybody, Klondike is repeating something we talked

1693
01:54:51,440 --> 01:54:52,760
about earlier.

1694
01:54:52,760 --> 01:54:59,600
This checks to see if the terminal to which the running shell program is connected.

1695
01:54:59,600 --> 01:55:08,120
If the standard output, which is zero, is going to standard output, I mean, if the program's

1696
01:55:08,120 --> 01:55:16,240
output is being sent to zero, which is standard output, if it's not, then you know that it's

1697
01:55:16,240 --> 01:55:19,040
embedded inside of something else.

1698
01:55:19,040 --> 01:55:20,200
C shell as well.

1699
01:55:20,200 --> 01:55:21,200
Does it?

1700
01:55:21,200 --> 01:55:22,200
Yeah.

1701
01:55:22,640 --> 01:55:23,640
Yeah.

1702
01:55:23,640 --> 01:55:28,760
So I think this might be a better answer saying you say that.

1703
01:55:28,760 --> 01:55:29,760
Thank you for bringing that up.

1704
01:55:29,760 --> 01:55:30,760
Yeah.

1705
01:55:30,760 --> 01:55:36,560
I'm going to put that in the notes.

1706
01:55:36,560 --> 01:55:48,400
When to use dash t zero versus case dot dot.

1707
01:55:48,400 --> 01:55:50,960
So yeah, that's a good thing.

1708
01:55:51,000 --> 01:55:56,640
I don't think I really, I mean, I honestly didn't know that until today.

1709
01:55:56,640 --> 01:56:03,240
I mean, I knew that it worked on bash, but I, and I suspected it worked on AT&T and other

1710
01:56:03,240 --> 01:56:06,560
stuff, but that it's hard because I've been around for a while.

1711
01:56:06,560 --> 01:56:11,840
So I don't always remember whether it works on AIX or whatever.

1712
01:56:11,840 --> 01:56:18,600
And this, my original bash RC was created to run or it wasn't even a bash RC originally.

1713
01:56:18,600 --> 01:56:21,360
And it was just, you know, whatever.

1714
01:56:21,360 --> 01:56:25,040
And it was originally designed to run, to run on anything.

1715
01:56:25,040 --> 01:56:26,960
It's very much of just bash now though.

1716
01:56:26,960 --> 01:56:27,960
All right.

1717
01:56:27,960 --> 01:56:29,840
So here we have a number of environment variables.

1718
01:56:29,840 --> 01:56:30,840
Let's go through these.

1719
01:56:30,840 --> 01:56:31,840
What time we got?

1720
01:56:31,840 --> 01:56:35,160
So I'm just going to power through my friends.

1721
01:56:35,160 --> 01:56:40,520
So this is using the default sort of thing.

1722
01:56:40,520 --> 01:56:45,440
It's a little bit redundant because, you know, I could have just done this, but this says

1723
01:56:45,440 --> 01:56:51,320
set the user to the user, uh, it will go until six map.

1724
01:56:51,320 --> 01:56:53,960
So and then it's just me at home eating food.

1725
01:56:53,960 --> 01:56:55,840
I'm not going to do anything fancy today.

1726
01:56:55,840 --> 01:57:00,440
I got, I'm, I'm, I got my jammies on, I'm making YouTube videos with my jammies on.

1727
01:57:00,440 --> 01:57:02,600
That's how shelly I'm doing.

1728
01:57:02,600 --> 01:57:07,040
Um, so user equals user, whatever.

1729
01:57:07,040 --> 01:57:08,800
And then who am I?

1730
01:57:08,800 --> 01:57:12,240
So this actually runs the command, who am I?

1731
01:57:12,240 --> 01:57:18,120
And gives you the current, um, effective user ID.

1732
01:57:18,120 --> 01:57:20,480
And you can read all about it here.

1733
01:57:20,480 --> 01:57:25,920
Uh, what's the difference between effective user ID and user ID?

1734
01:57:25,920 --> 01:57:26,920
Right.

1735
01:57:26,920 --> 01:57:33,440
And there, I think I could have used an environment variable for that, but that's a reliable way

1736
01:57:33,440 --> 01:57:34,440
to do it.

1737
01:57:34,440 --> 01:57:38,160
The reason I want this is so that I can set these things up and, and if I'm running as

1738
01:57:38,160 --> 01:57:42,360
a different user, uh, my, my brush are still work, right?

1739
01:57:42,360 --> 01:57:43,360
These are all exported.

1740
01:57:43,360 --> 01:57:44,360
Why?

1741
01:57:44,360 --> 01:57:47,200
Why am I exporting these?

1742
01:57:47,200 --> 01:57:49,800
Somebody, somebody give us a quick and dirty answer.

1743
01:57:49,800 --> 01:57:54,640
Why am I exporting these variables instead of just setting them for this file?

1744
01:57:54,640 --> 01:57:59,840
I mean, we cover this as a bit of review.

1745
01:57:59,840 --> 01:58:07,240
Why not just do whatever, right?

1746
01:58:07,240 --> 01:58:12,600
We're exporting them because we want any program that uses this shell, which is every

1747
01:58:12,600 --> 01:58:17,680
single program after the shell starts to use them as well.

1748
01:58:17,680 --> 01:58:24,120
So that means when I run any program at all, uh, that starts from the shell as the parent,

1749
01:58:24,120 --> 01:58:25,120
it gets it.

1750
01:58:25,120 --> 01:58:29,280
So that's what exports about, um, we're putting double quotes around everything for safety

1751
01:58:29,280 --> 01:58:31,600
because she'll check told us to write.

1752
01:58:31,600 --> 01:58:34,240
We don't want people doing crazy things there.

1753
01:58:34,240 --> 01:58:36,680
Uh, I'm setting a repost directory.

1754
01:58:36,680 --> 01:58:39,520
I, I personally think it's good to have your get it.

1755
01:58:39,520 --> 01:58:44,560
We'll talk about the get up stuff next week, but I personally use a repost directory and

1756
01:58:44,560 --> 01:58:47,360
put everything in there and we'll talk about that a lot.

1757
01:58:47,360 --> 01:58:51,800
I have a dot files repo, which links to my GitHub repos.

1758
01:58:51,800 --> 01:58:56,240
And then, um, I can use that as a variable as well.

1759
01:58:56,240 --> 01:59:01,160
Uh, I've added some other ones, some snippets and scripts, my help browser, you know, these

1760
01:59:01,160 --> 01:59:02,680
things keep growing.

1761
01:59:02,680 --> 01:59:05,760
Um, I have documents downloads and templates and things because not everybody wants to

1762
01:59:05,760 --> 01:59:07,320
name them the same.

1763
01:59:07,320 --> 01:59:12,160
And I have those pointing to other things, uh, public and private, my pictures, music

1764
01:59:12,160 --> 01:59:16,760
videos, PDFs, virtual machines, um, all stuff that I've just come to use for my other scripts

1765
01:59:16,760 --> 01:59:17,760
and stuff.

1766
01:59:17,760 --> 01:59:19,080
Uh, is that directory?

1767
01:59:19,080 --> 01:59:20,080
This is a big thing.

1768
01:59:20,080 --> 01:59:24,200
This is, you know, for my notes and stuff, my Zettle cast back when I was doing videos

1769
01:59:24,200 --> 01:59:25,720
to go with my Zettle cast entries.

1770
01:59:25,720 --> 01:59:27,120
I don't do that anymore.

1771
01:59:27,120 --> 01:59:31,280
Um, my clips directory, which makes me very sad because I can't run my clips now that I'm

1772
01:59:31,280 --> 01:59:33,200
doing terminal only.

1773
01:59:33,200 --> 01:59:34,280
I need to figure that out.

1774
01:59:34,280 --> 01:59:35,280
I'm going to do that.

1775
01:59:35,280 --> 01:59:38,760
And then command clip, this stuff is all old, I need to get rid of it.

1776
01:59:38,760 --> 01:59:41,040
So here's a very controversial one.

1777
01:59:41,040 --> 01:59:45,120
I'm setting, I'm explicitly setting the term to X term, two to six color.

1778
01:59:45,120 --> 01:59:50,960
And this, this is highly controversial because it's not necessarily a two to six color terminal.

1779
01:59:50,960 --> 01:59:56,040
And I don't want to go down the rabbit hole of terminal color right now, uh, when we do

1780
01:59:56,040 --> 01:59:59,960
some of our coding and go, we're going to be talking about escape sequences and terminal

1781
01:59:59,960 --> 02:00:04,920
colors and, and, and dealing with all of the ANSI terminal, you know, standards and everything.

1782
02:00:04,920 --> 02:00:06,520
So we're going to talk about that.

1783
02:00:06,520 --> 02:00:10,040
But if you want your 256 colors to work, you have to do this.

1784
02:00:10,040 --> 02:00:14,920
So if you're going to run things like sunrise, which, uh, I know it's like, you see how it's

1785
02:00:14,920 --> 02:00:17,600
kind of the colors are not completely on.

1786
02:00:17,600 --> 02:00:21,840
It's kind of because there's, there's a millions of colors set, right?

1787
02:00:21,840 --> 02:00:30,240
So we'll get to that HR rule is my own rule with, uh, 73 total, uh, editor of EI visual

1788
02:00:30,240 --> 02:00:39,120
VI. This is your editor, uh, editor prefix VI, uh, my, my private binary key that we'll

1789
02:00:39,120 --> 02:00:41,360
talk about in the go environment variables later.

1790
02:00:41,360 --> 02:00:45,520
Uh, these are really important, but they're not, we're talking about it all right now.

1791
02:00:45,520 --> 02:00:50,880
Uh, Python don't write by who I used to have a really derogatory comment right by the

1792
02:00:50,880 --> 02:00:52,560
century.

1793
02:00:52,560 --> 02:00:56,880
If you go through my history, you can go find it because I hate it.

1794
02:00:56,880 --> 02:01:02,280
Who made this, who picked this name, some stupid Python programmer.

1795
02:01:02,280 --> 02:01:09,800
Um, so anyway, LC collate, this makes all of your sorting, uh, use the C method for,

1796
02:01:09,800 --> 02:01:13,920
for, for sorting and you're going to want to set that for everything.

1797
02:01:13,920 --> 02:01:19,240
Um, the C flags, this is just for C compilation, um, by standard flags, it just uses them.

1798
02:01:19,240 --> 02:01:22,280
We're not going to do any of that until maybe Christmas, we'll go through the C book pop

1799
02:01:22,280 --> 02:01:23,280
possibly again.

1800
02:01:23,280 --> 02:01:26,000
Um, and then here's some fun stuff.

1801
02:01:26,000 --> 02:01:27,000
Okay.

1802
02:01:27,000 --> 02:01:28,000
A lot of people don't know this.

1803
02:01:28,000 --> 02:01:30,880
This, this is something I didn't find until my forties.

1804
02:01:30,880 --> 02:01:35,880
And this is, this is based on, this is how I get terminal color, right?

1805
02:01:35,880 --> 02:01:40,960
So when I'm doing, when I do man LS, I get colors in my LS, right?

1806
02:01:40,960 --> 02:01:46,440
And people will tell you to use some other form of man or, you know, they'll install

1807
02:01:46,440 --> 02:01:48,520
this or that program.

1808
02:01:48,520 --> 02:01:55,720
All you really need to do is use the historical support for term cap, which is a way of communicating

1809
02:01:55,720 --> 02:01:58,000
what type of terminal you have to everything.

1810
02:01:58,000 --> 02:02:01,960
Now that's terminals have been really, really standardized at this point.

1811
02:02:01,960 --> 02:02:07,480
Um, so these settings are not as significant, but you can go in here and we're actually

1812
02:02:07,480 --> 02:02:14,520
putting in, uh, the codes for the colors, which again, we'll get into when we do go programming

1813
02:02:14,520 --> 02:02:16,880
and you can set them.

1814
02:02:16,880 --> 02:02:17,880
You can set them.

1815
02:02:17,880 --> 02:02:23,600
And once you set them, uh, anytime you do anything that uses, uh, less or more or anything

1816
02:02:23,600 --> 02:02:27,920
that, that, that uses, you know, trough and rough, all the stuff that does that rendering,

1817
02:02:27,920 --> 02:02:29,240
you'll get color.

1818
02:02:29,240 --> 02:02:31,280
So if you want color, that's how to do it.

1819
02:02:31,280 --> 02:02:35,880
Uh, Ansible inventory, uh, this is something left over from Ansible that I don't even know

1820
02:02:35,880 --> 02:02:36,880
about.

1821
02:02:36,880 --> 02:02:40,160
There's my good old Docker UNIX host, which I hate.

1822
02:02:40,160 --> 02:02:42,720
We're not going to talk about that right now.

1823
02:02:42,720 --> 02:02:47,520
VIM spell, um, we'll talk about that when we talk about VIM configuration after this.

1824
02:02:47,520 --> 02:02:51,680
Uh, it's, this is pointing to your spelling, your spelling dictionary.

1825
02:02:51,920 --> 02:02:57,240
Uh, GPG, GPG, TTY, I don't know about that one.

1826
02:02:57,240 --> 02:03:00,320
We'll have to go look back at that one when we do GPG.

1827
02:03:00,320 --> 02:03:06,080
So pager, this is important, um, this checks to see if you have less pipe enabled.

1828
02:03:06,080 --> 02:03:11,960
Um, if you do, it makes it so your pager acts better.

1829
02:03:11,960 --> 02:03:14,680
Uh, that's all I can say about that.

1830
02:03:14,680 --> 02:03:16,200
Uh, let's keep going.

1831
02:03:16,200 --> 02:03:17,200
Door colors.

1832
02:03:17,200 --> 02:03:18,200
Okay.

1833
02:03:18,200 --> 02:03:19,200
This is super important.

1834
02:03:19,200 --> 02:03:20,200
Right.

1835
02:03:20,200 --> 02:03:25,080
If you're in your terminal on the LS command, you have to set up your drawer colors.

1836
02:03:25,080 --> 02:03:26,320
All right.

1837
02:03:26,320 --> 02:03:29,000
So, um, let's do that.

1838
02:03:29,000 --> 02:03:30,000
Let's look at that.

1839
02:03:30,000 --> 02:03:33,480
So drawer color.

1840
02:03:33,480 --> 02:03:38,680
And do you, if you think that I typed this by myself, you would be vastly mistaken.

1841
02:03:38,680 --> 02:03:42,840
So I have taken somebody, I love that this, this is such an old file.

1842
02:03:42,840 --> 02:03:48,360
It actually has something that shows you the colors when you set them, isn't that cool?

1843
02:03:48,360 --> 02:03:54,600
So this is an ancient, ancient file, a dot dir colors file that you need to go in and

1844
02:03:54,600 --> 02:03:55,600
set.

1845
02:03:55,600 --> 02:03:58,240
I, I don't even know where I got mine.

1846
02:03:58,240 --> 02:04:03,200
I, I ripped it off from somebody years ago and I have been tweaking on it ever since.

1847
02:04:03,200 --> 02:04:08,440
Um, but this allows you to set the colors for the different type of files depending

1848
02:04:08,440 --> 02:04:12,040
on your, on your, you know, your, your terminal color.

1849
02:04:12,040 --> 02:04:15,440
And if you want my terminal cause, I already told you, you can go get those in my dot files.

1850
02:04:15,440 --> 02:04:21,080
Um, but this is how come that when I, unless I get files that look a particular way, I

1851
02:04:21,080 --> 02:04:24,960
go in slash proc L S S L you see some of those files.

1852
02:04:24,960 --> 02:04:25,960
They look a little bit different.

1853
02:04:25,960 --> 02:04:30,320
Uh, I don't see any FIFOs though, where would they be?

1854
02:04:30,320 --> 02:04:34,440
Maybe in slash, um, yeah, look at all those weird, different colors.

1855
02:04:34,440 --> 02:04:39,360
See, I might actually want to change the, the TTY, uh, color scheme now that I'm looking

1856
02:04:39,360 --> 02:04:40,360
at it.

1857
02:04:40,360 --> 02:04:45,120
I haven't ever invested a lot of time into it, um, but, but yeah, that's, that's where

1858
02:04:45,120 --> 02:04:49,280
you would go do all that stuff, uh, is in your adult dirt colors.

1859
02:04:49,280 --> 02:04:54,640
This says dash R says, if I have a readable dirt colors file in my home directory, then

1860
02:04:54,640 --> 02:04:59,400
evaluate dirt colors dash B home home colors.

1861
02:04:59,400 --> 02:05:06,440
And that means evaluate, you have to be very, very careful with evaluate says take run this

1862
02:05:06,440 --> 02:05:07,440
command.

1863
02:05:07,440 --> 02:05:08,700
See how it's in quotes.

1864
02:05:08,700 --> 02:05:11,440
It actually runs that command at that location.

1865
02:05:11,440 --> 02:05:12,440
All right.

1866
02:05:12,440 --> 02:05:14,120
It's not the same as an import.

1867
02:05:14,120 --> 02:05:17,400
It actually runs the command and you build up the command as a string and then you run

1868
02:05:17,400 --> 02:05:18,800
evaluate the string.

1869
02:05:18,800 --> 02:05:23,000
Eval is generally considered to be really, really, really bad and you don't really need

1870
02:05:23,000 --> 02:05:24,000
it in bash.

1871
02:05:24,000 --> 02:05:29,120
There's another way to do this, uh, using a here variable, um, I mean, uh, not a here

1872
02:05:29,120 --> 02:05:33,480
variable file descriptor replacement and I probably should update that, but this works

1873
02:05:33,480 --> 02:05:37,960
any on any shell, um, and line text backgrounds.

1874
02:05:37,960 --> 02:05:38,960
Yeah.

1875
02:05:38,960 --> 02:05:41,720
You can use any kinds that you want.

1876
02:05:41,720 --> 02:05:48,000
Um, I've left this as an eval because this, this particular code right here works on any

1877
02:05:48,000 --> 02:05:49,880
Unix or Linux system.

1878
02:05:49,880 --> 02:05:54,160
Uh, and if I were to do some of the other fancy batches and there, it would not work.

1879
02:05:54,160 --> 02:05:55,720
So I left it that way.

1880
02:05:55,720 --> 02:05:59,720
Uh, uh, it's just that that makes it, I love color.

1881
02:05:59,720 --> 02:06:00,720
Yeah.

1882
02:06:00,720 --> 02:06:05,480
So this is some pretty amazing magic that I discovered on the internet, um, two years

1883
02:06:05,480 --> 02:06:11,480
ago actually, and I will never, ever go back and I cannot tell you how cool this is.

1884
02:06:11,480 --> 02:06:12,920
Uh, I'm running out of steam.

1885
02:06:12,920 --> 02:06:15,560
I've been talking straight for 43 hours.

1886
02:06:15,560 --> 02:06:16,560
How much time we got?

1887
02:06:16,560 --> 02:06:23,480
Are we, are we, this one's going to take a while to talk through, uh, date 427.

1888
02:06:23,480 --> 02:06:24,480
Man.

1889
02:06:24,480 --> 02:06:27,200
I haven't, I've been, I haven't been taking any breaks.

1890
02:06:27,200 --> 02:06:28,200
I'm just going to keep going.

1891
02:06:28,200 --> 02:06:30,440
I want to get through these configs today.

1892
02:06:30,440 --> 02:06:31,440
All right.

1893
02:06:31,440 --> 02:06:34,600
So, I mean, you got, you all can stop the video, right?

1894
02:06:34,600 --> 02:06:39,560
So if you need to stop it, uh, so a couple of things here.

1895
02:06:39,560 --> 02:06:45,200
This thing, I want you to see how the functions have the pattern of a function definition

1896
02:06:45,200 --> 02:06:49,320
body and then at an, an export.

1897
02:06:49,320 --> 02:06:51,760
I know I need a coffee break, but I'm not going to take it right now.

1898
02:06:51,760 --> 02:06:55,360
I'm actually really hungry, but I'm, I'm going to go through the six.

1899
02:06:55,360 --> 02:06:59,560
So maybe after this bash RC and then we'll do the MRC after this.

1900
02:06:59,560 --> 02:07:00,560
Okay.

1901
02:07:00,560 --> 02:07:01,560
I want to get through this file.

1902
02:07:01,560 --> 02:07:02,560
It's going to take a long time.

1903
02:07:02,560 --> 02:07:03,560
This is like 800 lines long.

1904
02:07:03,560 --> 02:07:09,520
So, um, so here we have where this, I don't want the, the, the, the, the, the, the, the

1905
02:07:09,520 --> 02:07:13,480
convention I want you to see here is we will soon.

1906
02:07:13,480 --> 02:07:14,480
Yeah.

1907
02:07:14,480 --> 02:07:18,720
See here it says and export path append.

1908
02:07:18,720 --> 02:07:26,120
If you don't do that, then this says conditionally, if, if there's nothing wrong with the syntax

1909
02:07:26,120 --> 02:07:33,440
of this function, then export it so that sub bash shells can use it.

1910
02:07:33,440 --> 02:07:34,440
Okay.

1911
02:07:34,440 --> 02:07:36,040
That's what this is about.

1912
02:07:36,040 --> 02:07:37,240
That's what that convention is about.

1913
02:07:37,240 --> 02:07:38,360
And this is the way you should do it.

1914
02:07:38,360 --> 02:07:41,080
And this is a bash only thing.

1915
02:07:41,080 --> 02:07:47,960
You cannot export functions from Z shell and, um, exporting functions in bash was the, the

1916
02:07:47,960 --> 02:07:50,720
cause of shell shock, uh, or bash door.

1917
02:07:50,720 --> 02:07:54,120
If you want to go do the research on it as the biggest, is the biggest Linux bug in history

1918
02:07:54,120 --> 02:08:00,360
some say they refer to it in Mr. Robot actually, uh, shell shock was called.

1919
02:08:00,360 --> 02:08:06,080
And what it did is it allowed people to define functions, uh, just by setting, setting variables

1920
02:08:06,080 --> 02:08:11,920
because they, they had a problem and that, that's been fixed for more than a decade.

1921
02:08:11,920 --> 02:08:16,280
And so that's not a problem, but the ability to export functions in bash is one of its most

1922
02:08:16,280 --> 02:08:18,920
powerful and most controversial things.

1923
02:08:18,920 --> 02:08:22,560
Um, but that's, that's, that's a function that's doing that.

1924
02:08:22,560 --> 02:08:27,760
So this says for all the arguments that we've talked about that, go ahead and check them.

1925
02:08:27,760 --> 02:08:31,840
And I'm going to go through this logic and then, um, we're, we'll take a break of this.

1926
02:08:31,840 --> 02:08:35,040
Um, so path equals.

1927
02:08:35,040 --> 02:08:40,280
So again, the path is a variable, an environment variable path, right?

1928
02:08:40,280 --> 02:08:41,440
Echo path.

1929
02:08:41,440 --> 02:08:44,520
Here's the, here's the short, here's the actual version.

1930
02:08:44,520 --> 02:08:51,560
The path is a variable that contains in order every directory to look in to run a program.

1931
02:08:51,560 --> 02:08:54,400
So when I do which LS, it tells me, Oh, it's user bin LS.

1932
02:08:54,400 --> 02:09:00,920
Well, we see here user bin LS, oops, user bin LS is one of the directories, right?

1933
02:09:00,920 --> 02:09:05,480
If I were to put a program called LS up higher in the directory path, that one would resolve

1934
02:09:05,480 --> 02:09:09,920
first, which is one of the reasons I don't like using user bin ENV Python or bash or

1935
02:09:09,920 --> 02:09:17,280
things like that, because user bin ENV, uh, can be defeated by messing with the path locations

1936
02:09:17,280 --> 02:09:18,280
of things.

1937
02:09:18,280 --> 02:09:23,240
If you, if you want to own somebody, uh, put something that they use all the time.

1938
02:09:23,240 --> 02:09:28,920
And if you get access, put something in a path above that, uh, and watch them get very

1939
02:09:28,920 --> 02:09:33,920
confused because, you know, it'll run that instead of what they think.

1940
02:09:33,920 --> 02:09:36,880
So and you'll do that to yourself a lot too.

1941
02:09:36,880 --> 02:09:44,800
Um, so what this script does, what this function does is it adds something to the end of the

1942
02:09:44,800 --> 02:09:52,160
path if and only if that thing exists, right?

1943
02:09:52,160 --> 02:09:57,040
That thing, that thing is not already in the path.

1944
02:09:57,040 --> 02:10:04,600
That's what this is, uh, that thing doesn't already exist in the path and it also actually

1945
02:10:04,600 --> 02:10:06,460
exists as a file.

1946
02:10:06,460 --> 02:10:11,120
So the test that she says, if it doesn't exist, we're going to skip it, right?

1947
02:10:11,120 --> 02:10:15,240
And this is why when I added that new Z bin and I tried to look for it, I couldn't find

1948
02:10:15,240 --> 02:10:19,520
it and it had to rerun the shell because you don't want to unnecessarily clutter your

1949
02:10:19,520 --> 02:10:21,800
path with a bunch of paths to things.

1950
02:10:21,800 --> 02:10:27,400
So I am a huge fan of this approach because it only updates your path with stuff that

1951
02:10:27,400 --> 02:10:32,800
exists and because if, if you have something in your path and somebody sees you have something

1952
02:10:32,800 --> 02:10:35,560
in your path and there's a directory there and they can access, they can just go put

1953
02:10:35,560 --> 02:10:36,560
everything one in that directory.

1954
02:10:36,560 --> 02:10:40,800
I mean, they have to get, you know, they have to escalate privileges to do that, but still

1955
02:10:40,800 --> 02:10:43,280
it's just not wise to do that, right?

1956
02:10:43,280 --> 02:10:47,400
You shouldn't be putting anything in your path that, and, and you can actually append to

1957
02:10:47,400 --> 02:10:48,400
the back.

1958
02:10:48,400 --> 02:10:50,360
The other thing that's really great about this is let's say you have a script and you

1959
02:10:50,360 --> 02:10:54,640
want to add a new path just for the, the sake of testing, you can run this from the

1960
02:10:54,640 --> 02:10:56,120
command line, right?

1961
02:10:56,120 --> 02:10:58,960
So I can go over here and I can say so path, right?

1962
02:10:58,960 --> 02:11:02,200
And it gives me my path and I can say, well, what's my current directory?

1963
02:11:02,200 --> 02:11:03,200
Okay.

1964
02:11:03,200 --> 02:11:04,200
Well, that's not in the path.

1965
02:11:04,200 --> 02:11:05,200
Let's temporarily add it.

1966
02:11:05,200 --> 02:11:11,680
So I can say path prepend, path prepend dot, right?

1967
02:11:11,680 --> 02:11:16,440
And now when I run my path, I can say, okay, so let's say that I'm running a bunch of stuff

1968
02:11:16,440 --> 02:11:18,200
in this directory, right?

1969
02:11:18,200 --> 02:11:33,040
So, you know, like echo, echo, hello, hello world, do, hello, schmox, hello.

1970
02:11:33,040 --> 02:11:38,800
And now I can run hello and it will see it, at least it should see it.

1971
02:11:38,800 --> 02:11:42,600
Why did I not do it right?

1972
02:11:42,600 --> 02:11:45,760
Oh, whoops.

1973
02:11:45,760 --> 02:11:47,360
I had an infinite loop.

1974
02:11:47,360 --> 02:11:48,520
So there you go.

1975
02:11:48,520 --> 02:11:55,520
See how it ran it without me doing the dot slash, but, but, uh, exec bash, I think it

1976
02:11:55,520 --> 02:11:57,520
actually is going to remember it.

1977
02:11:57,520 --> 02:12:01,960
Yeah, it still did see that, but it put the other stuff in front of it.

1978
02:12:01,960 --> 02:12:02,960
That's interesting.

1979
02:12:02,960 --> 02:12:03,960
Hmm.

1980
02:12:03,960 --> 02:12:05,960
That's really interesting.

1981
02:12:05,960 --> 02:12:09,120
So yeah, but you can go ahead and remove it out of there if you want.

1982
02:12:09,120 --> 02:12:13,560
Um, so anyway, if you temporarily want to add something to your path, you can just type

1983
02:12:13,560 --> 02:12:14,560
that and add it.

1984
02:12:14,840 --> 02:12:19,400
It also prevents you from adding, a lot of people who are in their scripts, what they

1985
02:12:19,400 --> 02:12:24,880
will do is they will add to the end of the path and they'll just keep adding to the end.

1986
02:12:24,880 --> 02:12:27,360
And so you'll end up with a path.

1987
02:12:27,360 --> 02:12:31,800
Every time you rerun your shell, you end up with a path that's got the same path in it

1988
02:12:31,800 --> 02:12:34,000
like 40 times, right?

1989
02:12:34,000 --> 02:12:36,920
So, so this fixes that.

1990
02:12:36,920 --> 02:12:39,280
And I encourage you to study it and look at it.

1991
02:12:39,280 --> 02:12:43,160
Um, another cool thing about this is that, I don't care if you can see this here, but

1992
02:12:43,160 --> 02:12:50,160
this adds any command, uh, that I have so I can actually make a GitHub repo and it will

1993
02:12:50,160 --> 02:12:53,000
look inside of the repos.

1994
02:12:53,000 --> 02:12:57,880
And if it sees anything in there, it will add that directory to the path automatically.

1995
02:12:57,880 --> 02:13:02,160
So this allows me to, some of my bigger commands, I can put them in their own get repo and then

1996
02:13:02,160 --> 02:13:05,640
they get added to the path automatically as long as I put them in the right place.

1997
02:13:05,640 --> 02:13:10,840
Um, and then we have all the, all the regular things here, open gdk bin and my script directory

1998
02:13:10,840 --> 02:13:11,840
is last.

1999
02:13:11,840 --> 02:13:15,080
Um, and again, we have the path append here.

2000
02:13:15,080 --> 02:13:16,640
So this is my append path.

2001
02:13:16,640 --> 02:13:17,640
I put all my stuff.

2002
02:13:17,640 --> 02:13:18,920
And this is relatively new additions.

2003
02:13:18,920 --> 02:13:23,760
I put some of the virtual box stuff up there, uh, because again, I can run this on git bash

2004
02:13:23,760 --> 02:13:26,560
or the Bissell too, or whatever, right?

2005
02:13:26,560 --> 02:13:31,440
So I can, I can do some of that stuff ahead CD path.

2006
02:13:31,440 --> 02:13:32,440
Okay.

2007
02:13:32,440 --> 02:13:36,640
So this is the last thing we're going to cover for a bit before I go get some coffee or something.

2008
02:13:36,640 --> 02:13:45,960
So the CD path is by far the most misunderstood, not known thing in bash.

2009
02:13:45,960 --> 02:13:52,400
Anybody who comes at you with, I want, I want to be able to do, I want to do fuzzy finding

2010
02:13:52,400 --> 02:13:57,520
and tab completion on my paths and, and I just love how all my Zshell just reads my mind

2011
02:13:57,520 --> 02:13:58,720
when I want to change directories.

2012
02:13:58,720 --> 02:14:01,160
They don't know about CD path.

2013
02:14:01,160 --> 02:14:05,360
It's very poorly documented, even in the bash man page.

2014
02:14:05,360 --> 02:14:08,880
And it's considered unsafe by some people.

2015
02:14:08,880 --> 02:14:13,800
And I want to talk about it fully before we get into it, um, because of that.

2016
02:14:13,800 --> 02:14:18,520
So CD path is a special environment variable, which for some reason doesn't even show when

2017
02:14:18,520 --> 02:14:19,520
you try to echo it.

2018
02:14:19,520 --> 02:14:20,520
It doesn't even display.

2019
02:14:20,520 --> 02:14:22,520
I think it's a bug.

2020
02:14:22,520 --> 02:14:24,280
And I mean, you can't do this.

2021
02:14:24,280 --> 02:14:26,960
You can't echo CD path.

2022
02:14:26,960 --> 02:14:28,460
It doesn't work.

2023
02:14:28,460 --> 02:14:30,680
I don't know why it, wait, that worked that time.

2024
02:14:30,680 --> 02:14:31,680
I must have lied.

2025
02:14:31,680 --> 02:14:32,680
Oh well.

2026
02:14:32,680 --> 02:14:33,680
I lied.

2027
02:14:33,680 --> 02:14:34,680
I didn't work before.

2028
02:14:34,680 --> 02:14:35,680
I was wrong.

2029
02:14:35,680 --> 02:14:37,360
I must have been doing something wrong.

2030
02:14:37,360 --> 02:14:41,640
So the search for path for CD, this is a column separate list of directories that the shell

2031
02:14:41,640 --> 02:14:45,320
looks for destination directory specified by the CD command.

2032
02:14:45,320 --> 02:14:47,680
A sample value is dot.

2033
02:14:47,680 --> 02:14:51,320
And okay, this is the part where it gets controversial, right?

2034
02:14:51,320 --> 02:14:52,520
There's like that.

2035
02:14:52,520 --> 02:14:54,680
Never, never, never put dot in your path.

2036
02:14:54,680 --> 02:14:55,680
Right?

2037
02:14:55,680 --> 02:14:56,680
Why?

2038
02:14:56,680 --> 02:14:59,000
Because you don't want people running stuff in your current path.

2039
02:14:59,000 --> 02:15:03,080
They want to make sure you put it in a safe place or make them type dot slash, right?

2040
02:15:03,080 --> 02:15:07,080
But when you're talking about seeding around to different things, you always want to include

2041
02:15:07,080 --> 02:15:08,520
dot colon as the first.

2042
02:15:08,520 --> 02:15:13,560
And if you don't, it's really funny.

2043
02:15:13,560 --> 02:15:17,460
If you don't do that, if you, if you add a CD path and you don't put that, you'll type

2044
02:15:17,460 --> 02:15:21,560
CD to go into something that's in the current directory and it will take you someplace completely

2045
02:15:21,560 --> 02:15:23,480
different based on the rest of the path.

2046
02:15:23,480 --> 02:15:26,560
Because it won't let you change directories into anything in the current directories.

2047
02:15:26,560 --> 02:15:30,800
Very, very, the first time you do it and I did it, it was, it's pretty freaky trick,

2048
02:15:30,800 --> 02:15:33,160
triggers it out, you know, freaks you out.

2049
02:15:33,160 --> 02:15:38,400
So, so yeah, this says, this says I want to look in my current directory.

2050
02:15:38,400 --> 02:15:42,000
I want to look into my home directory or I want to look into the user directory.

2051
02:15:42,000 --> 02:15:46,080
And if you look at my CD path, it's pretty complicated.

2052
02:15:46,080 --> 02:15:56,360
I actually build up a CD path, CD path, I build up a CD path that contains my dot files,

2053
02:15:56,360 --> 02:15:58,400
my common directories.

2054
02:15:58,400 --> 02:16:00,760
And this is how I can get away with this.

2055
02:16:00,760 --> 02:16:03,880
So I can do CD scripts, right?

2056
02:16:03,880 --> 02:16:05,400
Look what it took me to.

2057
02:16:05,400 --> 02:16:10,080
I was in my home directory and it took me right into the scripts directory.

2058
02:16:10,080 --> 02:16:18,280
And yes, but it does add to the length of letters to type different, differential out

2059
02:16:18,280 --> 02:16:19,280
of directories.

2060
02:16:19,280 --> 02:16:20,280
I don't know.

2061
02:16:20,280 --> 02:16:21,280
It depends on the directories.

2062
02:16:21,280 --> 02:16:23,560
I don't have that many places I go.

2063
02:16:23,560 --> 02:16:24,560
No.

2064
02:16:25,520 --> 02:16:28,240
I mean, yeah, I mean, what would you do?

2065
02:16:28,240 --> 02:16:34,560
You could just do CD scripts tab, tab, and I can just do that.

2066
02:16:34,560 --> 02:16:38,040
It does tab completion.

2067
02:16:38,040 --> 02:16:39,520
So I don't know.

2068
02:16:39,520 --> 02:16:43,040
I like it because I don't have to install anything.

2069
02:16:43,040 --> 02:16:46,680
And people that like to install extra fuzzy finders and tools and stuff like that just

2070
02:16:46,680 --> 02:16:47,920
exhaust me.

2071
02:16:47,920 --> 02:16:54,240
I only want to install one RC file and one monolith script.

2072
02:16:54,240 --> 02:16:57,880
I mean, command from now on, I don't want to have to install scripts or untar a whole

2073
02:16:57,880 --> 02:16:58,880
bunch of stuff.

2074
02:16:58,880 --> 02:17:03,360
I want to minimize the amount of time it takes me to set up on a remote system or any system.

2075
02:17:03,360 --> 02:17:05,480
And that's my priority.

2076
02:17:05,480 --> 02:17:09,520
So people have different priorities and that's fine.

2077
02:17:09,520 --> 02:17:14,800
So I would encourage you to look at CD path before reaching for Z shell, which is a horribly

2078
02:17:14,800 --> 02:17:18,360
flawed shell on several counts.

2079
02:17:18,360 --> 02:17:23,640
And we'll just burn into your muscle memory things that I think are bad for you.

2080
02:17:23,640 --> 02:17:28,800
Seriously, a lot of my best friends strongly disagree with that statement, but I'm telling

2081
02:17:28,800 --> 02:17:31,800
you what I think.

2082
02:17:31,800 --> 02:17:37,880
Having any friction using CD path, yeah, particularly because it's for an interactive process.

2083
02:17:37,880 --> 02:17:44,560
Putting is setting up a CD path in an actual script would be interesting.

2084
02:17:44,560 --> 02:17:47,640
You'd only be able to CD into that thing.

2085
02:17:47,640 --> 02:17:54,900
You could actually export CD path into a runnable script and force it so that directory could

2086
02:17:54,900 --> 02:17:59,400
never go in any of those, but those paths, which is a nice security mechanism that's

2087
02:17:59,400 --> 02:18:02,760
consistent with what we used to do with path by explicitly defining path at the beginning

2088
02:18:02,760 --> 02:18:08,040
of any script, particularly in system scripts that are shell scripts that run at log in

2089
02:18:08,040 --> 02:18:10,120
or the running is rude or something like that.

2090
02:18:10,120 --> 02:18:12,120
And we talked about that a lot during the show programming days.

2091
02:18:12,120 --> 02:18:15,840
I don't want to get rehashed, but people that write shell scripts these days are just like

2092
02:18:15,840 --> 02:18:18,640
totally lazy when it comes to security.

2093
02:18:18,640 --> 02:18:23,400
They use use of an ENV, they don't care where they are, sometimes they'll put dot slash

2094
02:18:23,400 --> 02:18:24,400
in their path.

2095
02:18:24,400 --> 02:18:29,960
I mean, they're just lame and it drives me nuts because there was a time when we actually

2096
02:18:29,960 --> 02:18:34,480
cared about security for these things and you just don't see that that much these days.

2097
02:18:34,480 --> 02:18:37,480
So yeah, a good old days, right?

2098
02:18:37,480 --> 02:18:43,040
You've tab complete a lot of directories, so CD path can give you unexpected completions.

2099
02:18:43,520 --> 02:18:46,760
I don't think it is ever giving you an unexpected completion.

2100
02:18:47,360 --> 02:18:49,760
No, it gives me because I know where my directories are.

2101
02:18:50,360 --> 02:18:56,000
Yeah, there has been a time or two where something resolves ahead in priority from another thing.

2102
02:18:56,480 --> 02:18:59,800
And in those cases, I just CD into one of the top level things that I'm fine.

2103
02:19:00,040 --> 02:19:06,480
So for example, one of my favorite commands is this CD GitHub.com is like, OK, well, now,

2104
02:19:06,480 --> 02:19:07,160
now what do I do?

2105
02:19:07,160 --> 02:19:08,360
Tab, tab, right?

2106
02:19:08,360 --> 02:19:11,360
CD, tab, tab, and I can get, I can do my old, all my other stuff.

2107
02:19:11,360 --> 02:19:17,800
So I don't I think the reason I like it is because I'm no less fast than people who use

2108
02:19:17,800 --> 02:19:23,520
any other type of tool, and I'm 100 percent compliant with bash on any system.

2109
02:19:24,160 --> 02:19:31,120
So, you know, I if you I don't believe in adding a dependency to your muscle memory

2110
02:19:31,120 --> 02:19:33,920
or that has to be installed without there being a good reason.

2111
02:19:34,160 --> 02:19:38,160
And if there's something that's good enough, I'm going to give it more weight than

2112
02:19:38,440 --> 02:19:43,680
some extra shit written in Rust by somebody who wants to replace, you know, whatever.

2113
02:19:44,160 --> 02:19:48,120
And that's why I use VI, you know, instead of I use Vim, but that's why I don't use any of them.

2114
02:19:48,840 --> 02:19:51,440
So anyway, so here's a check.

2115
02:19:51,440 --> 02:19:53,400
Here's the options.

2116
02:19:53,400 --> 02:19:55,400
The options are going to take a while for us to talk about.

2117
02:19:56,480 --> 02:19:57,400
And so is history.

2118
02:19:57,400 --> 02:19:59,440
So how much how much more we got?

2119
02:19:59,440 --> 02:20:01,000
We got a line of 150.

2120
02:20:01,000 --> 02:20:03,480
OK, so we're halfway through.

2121
02:20:03,480 --> 02:20:06,680
I am going to take a break, though, because I am stop.

2122
02:20:06,720 --> 02:20:08,640
I'm going to stop talking here.

2123
02:20:08,640 --> 02:20:10,360
Simplicity is undervalued.

2124
02:20:10,360 --> 02:20:12,160
I do think simplicity is undervalued.

2125
02:20:12,160 --> 02:20:15,840
And I, you know, I'll end with this.

2126
02:20:15,840 --> 02:20:21,760
But the thing that annoys me is that so many people.

2127
02:20:22,880 --> 02:20:26,400
I don't know if it's an age thing, but I think when you've been around longer,

2128
02:20:27,480 --> 02:20:34,320
you start to value the simplicity more than you do your ability to show off something.

2129
02:20:34,520 --> 02:20:37,360
I don't know if it's an age thing.

2130
02:20:37,360 --> 02:20:43,760
I don't know what it is, but but I find it unfortunate that that sometimes people who

2131
02:20:43,760 --> 02:20:47,800
choose simplicity who are very capable of using a very highly complex method,

2132
02:20:47,800 --> 02:20:53,320
they've just chosen the simple one are judged as being simple themselves.

2133
02:20:53,640 --> 02:20:57,120
And, you know, I don't have any specific cases to talk about here,

2134
02:20:57,120 --> 02:20:59,480
but I do feel I feel like that's a thing.

2135
02:21:00,520 --> 02:21:01,920
Yeah, we're going to take a break.

2136
02:21:01,920 --> 02:21:03,600
We're we're not going anywhere, though.

2137
02:21:03,600 --> 02:21:05,440
We're going to be here until six tonight.

2138
02:21:06,680 --> 02:21:09,320
And I don't know.

2139
02:21:09,320 --> 02:21:11,080
Maybe I might catch the sunset.

2140
02:21:11,080 --> 02:21:13,520
We'll see. So I'm going to put the timer on.

2141
02:21:13,600 --> 02:21:14,560
I'm going to take eight minutes.

2142
02:21:14,560 --> 02:21:17,080
I'm going to go make a smoothie and we'll be back.

2143
02:21:18,200 --> 02:21:21,800
I can't turn music on for you, though, unfortunately,

2144
02:21:21,800 --> 02:21:27,760
because the music will be recorded.

2145
02:21:28,240 --> 02:21:30,200
And I can't I can't do that.

2146
02:21:30,200 --> 02:21:31,040
Can I do stock?

2147
02:21:31,040 --> 02:21:32,200
Can I go pause recording?

2148
02:21:32,240 --> 02:21:34,280
I can do pause recording.

2149
02:21:34,280 --> 02:21:35,720
Oh, my gosh, I'm going to do that.

2150
02:21:35,720 --> 02:21:36,720
All right.

2151
02:21:37,800 --> 02:21:39,800
So on pause.

2152
02:21:41,920 --> 02:21:43,600
Pause recording. OK.

2153
02:21:43,600 --> 02:21:45,000
So it looks like we're recording again.

2154
02:21:45,000 --> 02:21:47,080
All right. So.

2155
02:21:47,080 --> 02:21:49,800
It's auto-tenera and now it's auto-tenera.

2156
02:21:49,800 --> 02:21:51,680
We're just talking about music, my friends.

2157
02:21:51,680 --> 02:21:54,480
We were we were just going we were just we were listening to the killers

2158
02:21:54,480 --> 02:21:58,240
and and, you know, different people.

2159
02:21:58,240 --> 02:22:01,840
There's a playlist called She's Still Preoccupied with 2005.

2160
02:22:02,480 --> 02:22:05,120
It's kind of a play on the 1985 thing, right?

2161
02:22:05,120 --> 02:22:10,040
And, you know, it's just crazy to me how an entire decade

2162
02:22:10,040 --> 02:22:13,280
has gone by, a decade and a half since this music.

2163
02:22:15,360 --> 02:22:18,760
I know it's making me feel old.

2164
02:22:20,760 --> 02:22:22,960
But it's time to finish up our configuration

2165
02:22:22,960 --> 02:22:24,720
and have some fun tonight later on.

2166
02:22:24,720 --> 02:22:25,520
I'm not going anywhere.

2167
02:22:25,520 --> 02:22:26,320
I'm just getting wondering.

2168
02:22:26,320 --> 02:22:28,560
Not even the sunset tonight.

2169
02:22:28,560 --> 02:22:31,240
OK, maybe the sunset looks pretty.

2170
02:22:31,280 --> 02:22:34,080
We'll see. American hip hop.

2171
02:22:34,240 --> 02:22:36,680
Yeah. OK, we can talk about music forever.

2172
02:22:37,320 --> 02:22:40,600
Come back if you're on the YouTube watching this right now.

2173
02:22:40,600 --> 02:22:42,160
Come back some other time and have fun with us.

2174
02:22:42,160 --> 02:22:44,160
We we have a lot of fun over on Twitch.

2175
02:22:46,600 --> 02:22:47,960
But you don't want to hear about that now.

2176
02:22:47,960 --> 02:22:49,560
You want to skip over. OK.

2177
02:22:49,560 --> 02:22:53,240
What are all these show check options and where do I read about them?

2178
02:22:54,360 --> 02:22:56,840
I'm going to confess something right now.

2179
02:22:56,840 --> 02:22:59,040
I only know what two or three of these actually mean.

2180
02:22:59,160 --> 02:23:01,080
And I have to go look them up every time.

2181
02:23:01,080 --> 02:23:06,040
And. And no, I remember finding this problem.

2182
02:23:07,400 --> 02:23:09,560
We want to cover. We want to cover no clover, though.

2183
02:23:10,840 --> 02:23:13,240
I think no cover is an important one to cover.

2184
02:23:13,240 --> 02:23:18,680
So. So. So. First of all, how can you even look these up?

2185
02:23:18,680 --> 02:23:21,360
I don't recall. So let's go look shopped.

2186
02:23:22,800 --> 02:23:25,360
Help shopped.

2187
02:23:25,360 --> 02:23:29,160
So shopped is said an unset shell options,

2188
02:23:29,200 --> 02:23:33,320
changing the setting of each shell option, which takes the name dash.

2189
02:23:33,320 --> 02:23:36,720
Oh. Well, how is this different than set?

2190
02:23:38,040 --> 02:23:39,280
What is set about?

2191
02:23:39,280 --> 02:23:41,400
Because I use set all the time.

2192
02:23:41,400 --> 02:23:42,960
How is set different than shopped?

2193
02:23:42,960 --> 02:23:45,640
I know my club service. Yeah, we'll talk about those ones.

2194
02:23:47,400 --> 02:23:50,000
Is it for a project of work?

2195
02:23:50,000 --> 02:23:52,120
Really? Oh, that's so kind.

2196
02:23:52,120 --> 02:23:54,200
Thank you for saying so. That makes me very happy.

2197
02:23:55,960 --> 02:23:56,920
I'm going to make it better.

2198
02:23:56,920 --> 02:23:57,520
I'm going to make it better.

2199
02:23:57,520 --> 02:23:59,880
We're going to make it so you can do pipes within it, if you want.

2200
02:24:00,760 --> 02:24:03,720
Anyway, stay tuned for bonsai programming.

2201
02:24:03,720 --> 02:24:06,320
I may do some of that tonight, but I'm not promising anything.

2202
02:24:07,160 --> 02:24:10,720
All right. So what is the difference between set and shopped?

2203
02:24:10,720 --> 02:24:13,840
I have wanted to know this since I mean, I've been doing this for years

2204
02:24:13,840 --> 02:24:15,440
and I still don't know the difference.

2205
02:24:15,440 --> 02:24:16,880
So what is it?

2206
02:24:16,880 --> 02:24:22,800
So set that show V I, which we'll get to is a thing, right?

2207
02:24:24,080 --> 02:24:27,280
And set our unset values of shell options and positional parameters.

2208
02:24:28,400 --> 02:24:30,880
Change the value of shell attributes or positional parameters

2209
02:24:30,880 --> 02:24:32,160
or display the names of them.

2210
02:24:33,520 --> 02:24:36,320
I mean, seriously, I still don't get the difference.

2211
02:24:36,320 --> 02:24:37,520
I want help here.

2212
02:24:37,520 --> 02:24:39,920
What is the difference between set and shopped?

2213
02:24:40,800 --> 02:24:42,400
I have never known.

2214
02:24:43,360 --> 02:24:44,640
They're both in there.

2215
02:24:45,360 --> 02:24:47,600
Change the setting of each shell option op name.

2216
02:24:50,080 --> 02:24:51,040
Set an unset shell option.

2217
02:24:51,040 --> 02:24:51,840
Should we try it?

2218
02:24:51,840 --> 02:24:52,640
Should we try it?

2219
02:24:52,640 --> 02:24:53,200
Let's try it.

2220
02:24:53,200 --> 02:24:56,720
Let's do, let's do a, well, let's see.

2221
02:24:56,720 --> 02:24:57,680
It doesn't be a bash.

2222
02:24:58,240 --> 02:24:59,840
Let's, let's run a new shell.

2223
02:24:59,840 --> 02:25:01,600
I'm, I'm going to try something here.

2224
02:25:01,600 --> 02:25:04,640
Let's, let's see if we can actually set the VI as a default shell command

2225
02:25:04,640 --> 02:25:07,040
editor with this.

2226
02:25:07,040 --> 02:25:08,560
I mean, X, right?

2227
02:25:08,560 --> 02:25:09,040
Experiment.

2228
02:25:09,040 --> 02:25:09,840
Let's experiment.

2229
02:25:09,840 --> 02:25:13,280
So run it.

2230
02:25:13,280 --> 02:25:13,920
What are we going to run?

2231
02:25:13,920 --> 02:25:15,680
We're going to run it and remove it.

2232
02:25:16,240 --> 02:25:20,480
We're going to run it one, two server and see what we get.

2233
02:25:23,600 --> 02:25:25,840
So, so there.

2234
02:25:25,840 --> 02:25:29,760
So shopped dash O. Yeah.

2235
02:25:32,720 --> 02:25:34,960
It shows you what the value is.

2236
02:25:37,120 --> 02:25:37,600
What?

2237
02:25:39,440 --> 02:25:40,320
Set that show.

2238
02:25:40,320 --> 02:25:40,560
Yeah.

2239
02:25:42,240 --> 02:25:43,520
Oh, look at that.

2240
02:25:43,520 --> 02:25:49,360
So set changed it and shopped just told me what the value is.

2241
02:25:49,360 --> 02:25:51,040
At least dash O shows you what the value is.

2242
02:25:51,040 --> 02:25:51,840
That's interesting.

2243
02:25:51,840 --> 02:25:52,560
I did not know that.

2244
02:25:53,520 --> 02:25:54,480
I did not know that.

2245
02:25:55,440 --> 02:25:55,920
All right.

2246
02:25:55,920 --> 02:26:02,560
So, so, so, so I'll put that in here in the notes.

2247
02:26:04,640 --> 02:26:18,400
Use shopped dash O to see the value of a shell option and use set dash O

2248
02:26:20,000 --> 02:26:23,840
to change the value of a shell option.

2249
02:26:24,560 --> 02:26:25,120
Kind of cool.

2250
02:26:26,720 --> 02:26:28,080
Are you found a stack exchange thing?

2251
02:26:31,760 --> 02:26:32,640
What were your search terms?

2252
02:26:32,640 --> 02:26:35,200
Because I refuse to use a graphic browser.

2253
02:26:35,200 --> 02:26:36,320
It's against my religion.

2254
02:26:37,520 --> 02:26:44,400
So set and shopped Y2.

2255
02:26:44,400 --> 02:26:48,560
You know, I hate it when I have to admit that stack exchange is useful sometimes.

2256
02:26:49,280 --> 02:26:50,000
I really hate it.

2257
02:26:50,000 --> 02:26:54,720
Good old Google.

2258
02:26:54,720 --> 02:26:55,760
No, I used duck duck O.

2259
02:26:55,760 --> 02:26:56,160
So there.

2260
02:26:57,280 --> 02:26:58,480
I at least I didn't use Google.

2261
02:26:59,280 --> 02:26:59,680
Okay.

2262
02:26:59,680 --> 02:27:01,600
So what are we reading here?

2263
02:27:04,240 --> 02:27:07,440
A set and shopped are both shell built-ins that control various options.

2264
02:27:08,560 --> 02:27:09,840
I often forget which ones as well.

2265
02:27:09,840 --> 02:27:10,480
That's the question.

2266
02:27:10,480 --> 02:27:10,720
Okay.

2267
02:27:11,680 --> 02:27:14,000
I tried looking at the second line of help set and help shop.

2268
02:27:14,000 --> 02:27:15,280
If I did that, we just did that.

2269
02:27:16,240 --> 02:27:17,440
Don't tell me what I already know.

2270
02:27:17,440 --> 02:27:18,400
Don't tell me to RTFM.

2271
02:27:20,000 --> 02:27:23,200
In bash release, it says set or unset values of shell options, personal values and set

2272
02:27:23,200 --> 02:27:24,240
and unset shell options.

2273
02:27:26,960 --> 02:27:27,920
This is not helping me.

2274
02:27:29,440 --> 02:27:31,120
As usual, the first answer is wrong.

2275
02:27:31,120 --> 02:27:33,600
As far as I know, the set that show options are the ones that are

2276
02:27:33,600 --> 02:27:35,520
inherited from born self shell.

2277
02:27:36,080 --> 02:27:37,600
Ooh, now that would make sense.

2278
02:27:38,400 --> 02:27:39,360
That would make sense.

2279
02:27:45,600 --> 02:27:47,440
You might know where the comments is strictly speaking.

2280
02:27:47,440 --> 02:27:47,680
Yes.

2281
02:27:48,320 --> 02:27:51,520
And the shopped options are the ones that are specific to bash.

2282
02:27:53,440 --> 02:27:55,120
That makes a lot of sense to me.

2283
02:27:55,120 --> 02:27:58,400
It seems intuitive, even though I don't see enough proof that that's true.

2284
02:27:59,120 --> 02:28:00,320
There's no logic that I know of.

2285
02:28:01,920 --> 02:28:03,280
Any documentation are shopped.

2286
02:28:03,280 --> 02:28:05,680
Well, there are set to show options like blah, blah, blah.

2287
02:28:08,000 --> 02:28:08,880
It's probably the idea.

2288
02:28:08,880 --> 02:28:10,000
I don't want to hear probably.

2289
02:28:10,000 --> 02:28:11,280
I want to hear what it is.

2290
02:28:11,840 --> 02:28:14,800
The difference is it changed environment variables.

2291
02:28:14,800 --> 02:28:18,720
The difference is in the changed environment variable used by bash

2292
02:28:19,520 --> 02:28:25,840
setting with a set command results in shell ops while shopped results in bash ops.

2293
02:28:26,480 --> 02:28:27,440
And there it is.

2294
02:28:29,040 --> 02:28:30,480
And that is worth quoting.

2295
02:28:32,240 --> 02:28:33,600
That is indeed worth quoting.

2296
02:28:35,200 --> 02:28:35,600
Yeah.

2297
02:28:37,360 --> 02:28:38,160
I don't know.

2298
02:28:38,160 --> 02:28:38,800
We'll figure it.

2299
02:28:38,800 --> 02:28:39,040
Okay.

2300
02:28:42,560 --> 02:28:42,880
Okay.

2301
02:28:45,760 --> 02:28:53,680
Grock the difference between shopped and set,

2302
02:28:54,400 --> 02:29:00,320
which boils down to set being legacy and shopping bash.

2303
02:29:02,480 --> 02:29:03,520
I learned something today.

2304
02:29:04,320 --> 02:29:05,200
Did not know that.

2305
02:29:06,240 --> 02:29:07,120
Did not know that.

2306
02:29:09,600 --> 02:29:10,080
So yeah.

2307
02:29:12,800 --> 02:29:13,040
Okay.

2308
02:29:13,040 --> 02:29:14,560
So anyway, all right, we're done.

2309
02:29:14,960 --> 02:29:16,000
We're done with that part anyway.

2310
02:29:16,880 --> 02:29:17,200
Next.

2311
02:29:18,000 --> 02:29:18,320
Okay.

2312
02:29:18,320 --> 02:29:19,680
So what is check wind size?

2313
02:29:20,320 --> 02:29:21,680
I don't even know how to look these things up.

2314
02:29:22,880 --> 02:29:24,320
I think we can do it in the man page though.

2315
02:29:24,320 --> 02:29:24,880
Let's do that.

2316
02:29:27,200 --> 02:29:28,240
Can we do it in the man page?

2317
02:29:29,120 --> 02:29:29,680
I think we can.

2318
02:29:30,880 --> 02:29:31,680
I think we can.

2319
02:29:31,680 --> 02:29:32,240
I think we can.

2320
02:29:32,240 --> 02:29:37,200
Um, help shopped.

2321
02:29:38,160 --> 02:29:42,160
All right.

2322
02:29:42,160 --> 02:29:43,760
So scoop it up.

2323
02:29:45,040 --> 02:29:46,480
I'm the scat man.

2324
02:29:48,000 --> 02:29:48,960
Who played that the other day?

2325
02:29:48,960 --> 02:29:49,600
It was so funny.

2326
02:29:51,600 --> 02:29:52,640
Because I'm always doing that too.

2327
02:29:52,640 --> 02:29:56,560
I'm like, cool story too for the scat man.

2328
02:29:56,560 --> 02:29:58,480
Did you know the scat man actually had problems speaking?

2329
02:29:58,480 --> 02:29:59,760
And then he'd made the scat man stuff.

2330
02:29:59,760 --> 02:30:01,120
Now he's famous because he's a scat man.

2331
02:30:03,680 --> 02:30:04,480
That's what happened.

2332
02:30:04,480 --> 02:30:05,120
That's the story.

2333
02:30:06,080 --> 02:30:09,280
A little, a little, that's the coffee.

2334
02:30:09,280 --> 02:30:10,720
That's why I'm getting like this.

2335
02:30:10,720 --> 02:30:11,040
Okay.

2336
02:30:11,040 --> 02:30:13,360
So shopped.

2337
02:30:13,360 --> 02:30:14,640
I have no idea how to look it up.

2338
02:30:14,640 --> 02:30:15,360
Man bash.

2339
02:30:16,160 --> 02:30:17,440
When in doubt, man it out.

2340
02:30:18,400 --> 02:30:18,880
Man up.

2341
02:30:22,160 --> 02:30:23,360
Check wind size.

2342
02:30:26,800 --> 02:30:27,280
Columns.

2343
02:30:28,480 --> 02:30:29,760
Columns used by the select compound.

2344
02:30:29,760 --> 02:30:30,960
So columns is a variable.

2345
02:30:31,200 --> 02:30:36,000
Automatically said, if the check wind size option is enabled,

2346
02:30:37,840 --> 02:30:42,160
are you telling me that we don't get columns and rows without the check wind size option?

2347
02:30:42,160 --> 02:30:48,400
Oh, I'm going to actually put this in here.

2348
02:30:48,400 --> 02:30:49,040
Wait, no, I'm not.

2349
02:30:49,040 --> 02:30:49,680
That's a container.

2350
02:30:50,560 --> 02:30:53,200
That would be, that would be non-productive.

2351
02:30:54,000 --> 02:30:56,960
I'm going to put this in my own bash receive because reasons.

2352
02:30:57,920 --> 02:31:04,240
I, I like, I like making my bash receive into like an instructive assistant sort of thing.

2353
02:31:05,040 --> 02:31:19,520
So even though it's an extra line that parts shopped is for bash ops set is for shell ops.

2354
02:31:21,840 --> 02:31:24,800
I think shell is actually a dollar dash as well.

2355
02:31:27,840 --> 02:31:38,320
So check, check wind size enables columns and rows.

2356
02:31:39,840 --> 02:31:40,640
I'm going to check this.

2357
02:31:40,640 --> 02:31:41,440
I'm going to check this.

2358
02:31:41,440 --> 02:31:44,640
I, I, I know that we're going over time, but I don't care.

2359
02:31:44,640 --> 02:31:48,000
I mean, we're not really, but I want to check this.

2360
02:31:48,000 --> 02:31:48,880
I'm going to check it right now.

2361
02:31:48,880 --> 02:32:01,840
So there, docker run dash it anything really that has to be, it has to be bashy.

2362
02:32:01,840 --> 02:32:05,600
So let's do one, one, two dash, dash or one, two.

2363
02:32:06,400 --> 02:32:09,920
This is why I do like having Docker around because I can try different distros that really quickly.

2364
02:32:10,480 --> 02:32:11,920
I could have done with Cali if I wanted.

2365
02:32:14,560 --> 02:32:16,000
So echo columns.

2366
02:32:16,640 --> 02:32:17,920
Oh, look, we have columns.

2367
02:32:18,640 --> 02:32:19,120
Yeah.

2368
02:32:19,120 --> 02:32:23,440
I wonder if we have, let's see, echo bash ops.

2369
02:32:24,720 --> 02:32:27,360
We have check wind size set by default.

2370
02:32:28,640 --> 02:32:29,120
Interesting.

2371
02:32:29,120 --> 02:32:31,120
So I, I didn't really need to put to set it.

2372
02:32:31,120 --> 02:32:32,800
It's kind of a built in, right?

2373
02:32:33,520 --> 02:32:34,240
How do I turn it off?

2374
02:32:34,240 --> 02:32:34,960
Shopped.

2375
02:32:38,400 --> 02:32:39,840
I mean, shopped.

2376
02:32:40,480 --> 02:32:40,960
What?

2377
02:32:41,920 --> 02:32:47,440
What's the opposite of dash s?

2378
02:32:49,200 --> 02:32:50,240
I don't know shopped.

2379
02:32:50,240 --> 02:32:50,960
I'm learning it.

2380
02:32:50,960 --> 02:32:51,360
So there.

2381
02:32:54,560 --> 02:32:56,800
Enable, set each up name, disable.

2382
02:32:56,800 --> 02:32:57,200
Okay.

2383
02:32:59,040 --> 02:32:59,760
Set that show.

2384
02:32:59,760 --> 02:33:00,400
We know that one.

2385
02:33:01,520 --> 02:33:02,240
I know.

2386
02:33:02,240 --> 02:33:03,360
Unset's for variables, right?

2387
02:33:03,920 --> 02:33:07,920
So, so let's try.

2388
02:33:07,920 --> 02:33:13,760
I mean, shopped dash.

2389
02:33:13,760 --> 02:33:15,040
I've never done this before.

2390
02:33:15,040 --> 02:33:16,080
U for unset.

2391
02:33:18,880 --> 02:33:21,760
Check wind size.

2392
02:33:21,760 --> 02:33:22,800
I want to know.

2393
02:33:22,800 --> 02:33:23,600
I want to know.

2394
02:33:29,200 --> 02:33:30,240
Shopped dash.

2395
02:33:30,240 --> 02:33:32,000
Oh, check wind size.

2396
02:33:34,320 --> 02:33:35,040
Gosh, dang it.

2397
02:33:38,640 --> 02:33:41,600
What the heck?

2398
02:33:44,960 --> 02:33:45,760
All right.

2399
02:33:45,760 --> 02:33:47,520
Shopped dash you.

2400
02:33:48,640 --> 02:33:50,720
Check wind size.

2401
02:33:52,640 --> 02:33:53,040
Uh-huh.

2402
02:33:53,920 --> 02:33:55,120
I want to do echo bash ops.

2403
02:33:55,840 --> 02:33:56,560
It's off now.

2404
02:33:57,280 --> 02:33:58,640
Echo columns.

2405
02:33:58,640 --> 02:33:59,600
I bet it's already there though,

2406
02:33:59,600 --> 02:34:00,880
because it was already set when it logged in.

2407
02:34:01,760 --> 02:34:02,640
I see it told you.

2408
02:34:03,440 --> 02:34:04,400
I told you.

2409
02:34:04,400 --> 02:34:06,640
So, so how do I not have that?

2410
02:34:08,240 --> 02:34:15,680
Exec bash to show.

2411
02:34:17,040 --> 02:34:18,080
No, because it's going to log in

2412
02:34:18,080 --> 02:34:19,040
and it's going to set it again,

2413
02:34:19,040 --> 02:34:20,320
because it's going to run through the bash or C.

2414
02:34:23,440 --> 02:34:23,920
Uh-huh.

2415
02:34:24,480 --> 02:34:25,760
I mean, what, what have I did this?

2416
02:34:25,760 --> 02:34:30,080
What if I said bash or C?

2417
02:34:31,600 --> 02:34:32,160
No, Vim.

2418
02:34:33,120 --> 02:34:33,840
Oh my God.

2419
02:34:35,360 --> 02:34:36,000
Oh my God.

2420
02:34:38,640 --> 02:34:40,720
I don't know why I'm doing this.

2421
02:34:41,600 --> 02:34:42,320
Set emacs.

2422
02:34:43,600 --> 02:34:44,320
That would be a no.

2423
02:34:49,760 --> 02:34:51,360
I can't believe they don't ship with Vim anymore.

2424
02:34:52,560 --> 02:34:54,000
They want that thing tiny, I guess.

2425
02:34:55,680 --> 02:34:57,200
Okay, Vim.

2426
02:34:58,720 --> 02:34:59,680
That's Vim, I promise.

2427
02:35:02,320 --> 02:35:04,880
Bash or C.

2428
02:35:08,080 --> 02:35:12,080
Where's all the, the stuff?

2429
02:35:14,880 --> 02:35:15,280
You know?

2430
02:35:16,000 --> 02:35:17,440
All right, all right, all right, all right.

2431
02:35:17,440 --> 02:35:18,400
Hissapen, there it is.

2432
02:35:19,760 --> 02:35:22,960
Shopped dash U.

2433
02:35:26,160 --> 02:35:26,800
Check.

2434
02:35:26,800 --> 02:35:29,680
This is a bunch of server container.

2435
02:35:30,480 --> 02:35:31,360
Check win size.

2436
02:35:32,800 --> 02:35:33,360
Now what?

2437
02:35:34,080 --> 02:35:35,760
Exec bash dash U.

2438
02:35:35,760 --> 02:35:36,000
L.

2439
02:35:36,640 --> 02:35:37,200
Now what?

2440
02:35:39,200 --> 02:35:46,800
Uh, shopped, um, oh, check win size.

2441
02:35:49,440 --> 02:35:51,680
I, that's it.

2442
02:35:52,880 --> 02:35:54,000
Echo bash ops.

2443
02:35:56,800 --> 02:35:57,200
Damn it.

2444
02:36:00,080 --> 02:36:01,520
What's, what's happening, people?

2445
02:36:01,520 --> 02:36:02,320
All right, so let's say.

2446
02:36:03,920 --> 02:36:05,120
Shopped, no.

2447
02:36:06,080 --> 02:36:07,360
I'm staring at you.

2448
02:36:07,360 --> 02:36:08,800
And why are you saying that it don't exist?

2449
02:36:08,800 --> 02:36:10,240
Because I am staring right at you.

2450
02:36:14,400 --> 02:36:15,280
Oh, I know.

2451
02:36:15,920 --> 02:36:18,880
Wait, I know an option name.

2452
02:36:20,240 --> 02:36:21,680
But does this only do that with like a VI?

2453
02:36:22,240 --> 02:36:23,600
Oh my goodness.

2454
02:36:24,240 --> 02:36:25,200
What do we have here?

2455
02:36:27,600 --> 02:36:28,480
What do we have here?

2456
02:36:31,120 --> 02:36:33,280
Shopped is, uh, fine.

2457
02:36:34,800 --> 02:36:35,520
Man, shopped.

2458
02:36:36,240 --> 02:36:39,280
Uh, help shopped.

2459
02:36:41,280 --> 02:36:42,080
Oh my God.

2460
02:36:45,280 --> 02:36:47,280
Uh, oh, restrict op name.

2461
02:36:47,280 --> 02:36:48,480
Oh, look at that.

2462
02:36:52,400 --> 02:36:54,240
I thought I was just going to print it.

2463
02:36:54,240 --> 02:36:56,800
Print HSO option with an indication of a status.

2464
02:36:56,800 --> 02:36:58,240
Ooh, that's what I should have done.

2465
02:36:58,240 --> 02:36:58,960
I should have done that one.

2466
02:36:58,960 --> 02:37:00,000
Let's do that.

2467
02:37:00,000 --> 02:37:00,480
All right.

2468
02:37:00,480 --> 02:37:00,800
Ready?

2469
02:37:01,520 --> 02:37:02,240
Ready?

2470
02:37:02,240 --> 02:37:03,440
Shopped dash P.

2471
02:37:04,400 --> 02:37:04,880
Wow.

2472
02:37:06,080 --> 02:37:06,880
My goodness.

2473
02:37:06,880 --> 02:37:08,720
I did not know that was the thing until today.

2474
02:37:12,640 --> 02:37:13,600
I like it.

2475
02:37:18,720 --> 02:37:20,240
Look at all those things.

2476
02:37:20,240 --> 02:37:21,760
Look at all those thingamabobs.

2477
02:37:26,000 --> 02:37:26,640
Yeah.

2478
02:37:26,640 --> 02:37:28,880
All those great options that are set on the shell.

2479
02:37:30,000 --> 02:37:30,560
Last pipe.

2480
02:37:30,560 --> 02:37:32,160
I mean, some of these you actually want to,

2481
02:37:32,160 --> 02:37:34,000
you want to set, but I think most of them you do with,

2482
02:37:34,000 --> 02:37:35,520
with, with, with the set dash.

2483
02:37:35,520 --> 02:37:36,080
Oh, I think.

2484
02:37:38,560 --> 02:37:42,080
I think, I think shopped is like set on steroids.

2485
02:37:42,080 --> 02:37:42,960
That's what I think it is.

2486
02:37:43,920 --> 02:37:45,600
I think shopped is set on steroids,

2487
02:37:45,600 --> 02:37:47,920
but I can't say that for sure.

2488
02:37:49,520 --> 02:37:51,760
That's enough for my curiosity to be satisfied.

2489
02:37:51,760 --> 02:37:52,000
All right.

2490
02:37:52,000 --> 02:37:52,720
So let's move on.

2491
02:37:55,120 --> 02:37:59,040
Shopped is a thing that sets options.

2492
02:38:00,880 --> 02:38:03,280
There's probably a shopped variation for no clover.

2493
02:38:03,280 --> 02:38:05,280
I probably could put no clover here

2494
02:38:05,280 --> 02:38:06,400
without using set dash O.

2495
02:38:07,200 --> 02:38:09,520
I know that set dash O works on any system though.

2496
02:38:09,520 --> 02:38:10,000
You know what I mean?

2497
02:38:12,480 --> 02:38:13,040
Or unsaid.

2498
02:38:13,040 --> 02:38:13,840
Yes, they're unsaid.

2499
02:38:15,040 --> 02:38:16,240
But did it say, did it wait?

2500
02:38:18,640 --> 02:38:20,080
Shopped dash P.

2501
02:38:20,080 --> 02:38:21,200
Was there like a no clover there?

2502
02:38:24,240 --> 02:38:25,360
No, there's not.

2503
02:38:27,120 --> 02:38:27,360
No.

2504
02:38:30,480 --> 02:38:31,120
What?

2505
02:38:35,920 --> 02:38:37,840
No, that's freaking me out.

2506
02:38:39,600 --> 02:38:40,320
So, okay.

2507
02:38:40,320 --> 02:38:41,200
So apparently.

2508
02:38:42,960 --> 02:38:43,360
All right.

2509
02:38:43,360 --> 02:38:43,680
All right.

2510
02:38:43,680 --> 02:38:44,080
All right.

2511
02:38:45,040 --> 02:38:45,920
Set dash P.

2512
02:38:47,280 --> 02:38:48,480
Man set.

2513
02:38:48,480 --> 02:38:49,280
Help set.

2514
02:38:53,600 --> 02:38:56,080
Turns on whatever the real effective user needs to do to the match.

2515
02:38:57,200 --> 02:38:58,160
Look at all that stuff.

2516
02:38:58,800 --> 02:39:01,680
Oh, this is the one where it's like all smashed into each other.

2517
02:39:03,200 --> 02:39:04,400
Same as dash C.

2518
02:39:06,240 --> 02:39:07,280
This is weird.

2519
02:39:10,480 --> 02:39:12,320
See if I can run it like this or not.

2520
02:39:12,320 --> 02:39:15,040
I think these are the things that are in the opt variable.

2521
02:39:15,680 --> 02:39:16,400
That's what I think.

2522
02:39:18,160 --> 02:39:19,520
Set of the value of the variable.

2523
02:39:21,680 --> 02:39:24,480
All assignments, job controls, enable, recommands.

2524
02:39:25,680 --> 02:39:26,240
Set dash O.

2525
02:39:26,240 --> 02:39:27,840
This is what I use all the time.

2526
02:39:27,840 --> 02:39:29,120
This is how you turn VI mode on.

2527
02:39:29,120 --> 02:39:30,080
And we'll talk about that in a bit.

2528
02:39:30,640 --> 02:39:31,280
In fact, I don't.

2529
02:39:31,280 --> 02:39:32,560
Why has the VI mode on here?

2530
02:39:33,600 --> 02:39:34,640
Oh, I think I put it under VI.

2531
02:39:35,440 --> 02:39:38,880
That's a history thing.

2532
02:39:38,880 --> 02:39:39,760
That's why.

2533
02:39:39,760 --> 02:39:40,080
All right.

2534
02:39:43,840 --> 02:39:44,960
We got keywords.

2535
02:39:44,960 --> 02:39:45,360
What else?

2536
02:39:45,360 --> 02:39:46,720
I want to see all the options.

2537
02:39:46,720 --> 02:39:47,280
How do I do that?

2538
02:39:48,880 --> 02:39:49,600
How do I do that?

2539
02:39:52,480 --> 02:39:54,960
How do I run it to see all of the options?

2540
02:40:00,240 --> 02:40:02,080
I want to see all the stuff that's on.

2541
02:40:02,080 --> 02:40:02,960
Oh, there we go.

2542
02:40:02,960 --> 02:40:06,160
The current set of flags may be found in dollar dash.

2543
02:40:12,320 --> 02:40:13,600
Oh, look at this.

2544
02:40:14,240 --> 02:40:14,800
Oh my God.

2545
02:40:14,800 --> 02:40:16,480
That's so freaking cryptic.

2546
02:40:17,040 --> 02:40:18,800
Does that mean, watch, echo.

2547
02:40:20,080 --> 02:40:22,480
I now, well, I finally understand dollar dash.

2548
02:40:24,160 --> 02:40:27,040
Because it has like a one line equal.

2549
02:40:27,920 --> 02:40:28,400
Look, watch.

2550
02:40:29,200 --> 02:40:31,600
Set that show no clover and watch.

2551
02:40:31,600 --> 02:40:32,560
Big C is going to go on.

2552
02:40:33,840 --> 02:40:34,480
Yep.

2553
02:40:34,480 --> 02:40:34,800
See.

2554
02:40:37,200 --> 02:40:38,320
I made a joke.

2555
02:40:39,680 --> 02:40:40,800
I'm writing some code in the goal.

2556
02:40:40,800 --> 02:40:42,880
They allow me to create and manage my virtual machines.

2557
02:40:42,880 --> 02:40:43,200
Nice.

2558
02:40:44,800 --> 02:40:46,000
Using the vert.

2559
02:40:46,000 --> 02:40:46,560
Super cool.

2560
02:40:50,240 --> 02:40:50,560
All right.

2561
02:40:50,560 --> 02:40:53,440
So, so, so this is interesting.

2562
02:40:53,440 --> 02:40:55,760
So apparently there are two sets.

2563
02:40:55,760 --> 02:40:56,960
I'm going to summarize their phrase.

2564
02:40:56,960 --> 02:40:58,480
You don't have to pay attention.

2565
02:40:58,480 --> 02:40:58,800
Okay.

2566
02:40:59,520 --> 02:41:02,080
Apparently there are two sets of settings.

2567
02:41:03,600 --> 02:41:07,200
For bash, there are the bash only settings,

2568
02:41:07,200 --> 02:41:10,240
which are set with shopped SHOPT.

2569
02:41:10,240 --> 02:41:12,400
And there are the kind of legacy settings,

2570
02:41:12,400 --> 02:41:13,760
which have always been set as,

2571
02:41:14,320 --> 02:41:17,440
as with just the set command that go back to politics,

2572
02:41:17,440 --> 02:41:19,680
both of which are, are, are,

2573
02:41:19,680 --> 02:41:22,400
are contained in different environment variables.

2574
02:41:22,400 --> 02:41:23,520
So we have bash opt,

2575
02:41:26,080 --> 02:41:29,520
which will give you all of these.

2576
02:41:29,520 --> 02:41:31,840
And then we have shell ops,

2577
02:41:31,920 --> 02:41:38,240
which is the long form of, oh, wow.

2578
02:41:41,840 --> 02:41:42,720
Are you seeing this?

2579
02:41:43,680 --> 02:41:44,000
Okay.

2580
02:41:44,000 --> 02:41:47,200
So shell opt is the long form of bash opt

2581
02:41:47,200 --> 02:41:48,800
that gives you the names.

2582
02:41:52,880 --> 02:41:55,680
And that's very interesting.

2583
02:41:57,840 --> 02:41:58,960
Because we had a no club.

2584
02:41:58,960 --> 02:42:02,000
But, but, but there's also this other old school

2585
02:42:02,000 --> 02:42:02,880
environment variable,

2586
02:42:02,880 --> 02:42:07,040
which just has the letters that go with the names.

2587
02:42:08,640 --> 02:42:10,240
So I want to see if this works here.

2588
02:42:10,240 --> 02:42:13,920
So up here we have an H and H is what,

2589
02:42:13,920 --> 02:42:15,040
as an H is what it said.

2590
02:42:15,040 --> 02:42:16,080
I've always wanted to know this.

2591
02:42:16,080 --> 02:42:17,920
So I'm taking some time to figure it out.

2592
02:42:17,920 --> 02:42:19,840
So the H hash all.

2593
02:42:20,560 --> 02:42:20,880
All right.

2594
02:42:20,880 --> 02:42:22,080
So there's hash all, right?

2595
02:42:24,160 --> 02:42:25,360
Did I am positive recording?

2596
02:42:26,160 --> 02:42:26,480
Yeah.

2597
02:42:29,040 --> 02:42:29,520
Yeah.

2598
02:42:29,520 --> 02:42:30,240
I think I did.

2599
02:42:33,520 --> 02:42:35,520
I mean, I think it says it's some pause.

2600
02:42:36,480 --> 02:42:38,240
Should I check the file and see if it's,

2601
02:42:38,240 --> 02:42:39,280
see if it's getting bigger?

2602
02:42:41,840 --> 02:42:42,160
I know.

2603
02:42:42,160 --> 02:42:43,200
Now you got me scared.

2604
02:42:53,520 --> 02:42:56,640
I mean, yeah.

2605
02:42:59,920 --> 02:43:01,280
Properties.

2606
02:43:04,800 --> 02:43:06,720
1.18 gigabytes.

2607
02:43:06,720 --> 02:43:07,280
What the hell?

2608
02:43:09,200 --> 02:43:10,240
That's huge.

2609
02:43:10,240 --> 02:43:11,520
That's gonna take forever to load then.

2610
02:43:12,640 --> 02:43:13,120
Oh, well.

2611
02:43:14,000 --> 02:43:17,600
Um, yeah, we're, I'm pretty sure I did.

2612
02:43:20,560 --> 02:43:22,160
If I didn't, I'll just publish the volume.

2613
02:43:22,160 --> 02:43:22,880
We'll call it a day.

2614
02:43:24,400 --> 02:43:26,080
Now I'll go cut out the music and stuff.

2615
02:43:27,280 --> 02:43:28,000
All right.

2616
02:43:28,000 --> 02:43:29,280
So never you fear.

2617
02:43:30,560 --> 02:43:31,280
Anyway.

2618
02:43:31,280 --> 02:43:33,280
So I, what does the I do?

2619
02:43:34,400 --> 02:43:38,400
So I, I don't know.

2620
02:43:40,560 --> 02:43:41,920
Emux, I'll screw that.

2621
02:43:43,680 --> 02:43:44,000
No.

2622
02:43:44,000 --> 02:43:44,640
Here we go.

2623
02:43:44,640 --> 02:43:45,600
Help, help set.

2624
02:43:50,320 --> 02:43:52,640
I think I is interactive.

2625
02:43:52,640 --> 02:43:53,360
Set that shy.

2626
02:43:54,400 --> 02:43:55,920
Oh, we know that one because we already went through.

2627
02:43:55,920 --> 02:43:56,240
Yeah.

2628
02:43:56,240 --> 02:43:57,040
Okay.

2629
02:43:57,040 --> 02:44:01,440
So that is, but is it interactive dash comments?

2630
02:44:02,640 --> 02:44:04,480
What the hell is interactive dash comments?

2631
02:44:04,480 --> 02:44:05,360
I do not know.

2632
02:44:07,760 --> 02:44:10,400
Um, you know what I'm saying?

2633
02:44:12,160 --> 02:44:13,600
Mark variables, blah, blah, blah, blah, blah.

2634
02:44:14,720 --> 02:44:16,640
Option name, set is that she all export.

2635
02:44:18,720 --> 02:44:21,680
I mean, interactive comment.

2636
02:44:21,680 --> 02:44:24,480
Allow comments to appear in interactive commands.

2637
02:44:27,840 --> 02:44:30,240
Could I indeed be checking for,

2638
02:44:34,720 --> 02:44:39,600
I don't, it doesn't look like I have interactive mode set to me,

2639
02:44:40,640 --> 02:44:41,760
which is like freaking me out.

2640
02:44:42,960 --> 02:44:43,600
Look at this too.

2641
02:44:43,600 --> 02:44:45,440
We have like an interactive comments here

2642
02:44:45,440 --> 02:44:47,120
and then we have an interactive comments here.

2643
02:44:47,120 --> 02:44:47,760
It's totally different.

2644
02:44:48,480 --> 02:44:50,480
Login shell, that's set over there.

2645
02:44:55,040 --> 02:44:56,160
Wait, wait, wait.

2646
02:44:56,240 --> 02:44:59,840
I have a feeling that this is actually this one

2647
02:44:59,840 --> 02:45:01,120
and not this one.

2648
02:45:01,120 --> 02:45:01,840
That's what I think.

2649
02:45:03,200 --> 02:45:05,600
I think that this is, I think this is goes with bash.

2650
02:45:05,600 --> 02:45:06,640
That's what I think.

2651
02:45:06,640 --> 02:45:06,880
Yeah.

2652
02:45:06,880 --> 02:45:11,840
Because watch, if we do no clover, we already have no clover is set.

2653
02:45:11,840 --> 02:45:13,360
We know we have, we already set that one, right?

2654
02:45:14,640 --> 02:45:15,840
So, yeah.

2655
02:45:15,840 --> 02:45:19,680
So no clover was correct, right?

2656
02:45:19,680 --> 02:45:20,480
That one matches.

2657
02:45:20,480 --> 02:45:22,160
It was capital C. That was the one I checked.

2658
02:45:23,120 --> 02:45:25,120
So there's capital C, right?

2659
02:45:26,400 --> 02:45:28,880
Um, vi mode should be here.

2660
02:45:30,880 --> 02:45:31,280
Uh-huh.

2661
02:45:32,480 --> 02:45:33,920
Vi mode is the one I set all the time.

2662
02:45:33,920 --> 02:45:34,880
So let's go check that one.

2663
02:45:36,080 --> 02:45:38,320
Exit error set dash E,

2664
02:45:38,320 --> 02:45:40,160
which is something we should set in our shell scripts.

2665
02:45:40,160 --> 02:45:41,200
We talked about last week.

2666
02:45:42,080 --> 02:45:44,240
Um, emacs style.

2667
02:45:46,640 --> 02:45:47,760
I don't have emacs style.

2668
02:45:48,480 --> 02:45:50,960
So what does that go?

2669
02:45:52,480 --> 02:45:54,080
There's like no equivalent for that one.

2670
02:45:54,080 --> 02:45:54,640
What the hell?

2671
02:45:55,600 --> 02:45:57,200
If I fail, pause, I pretty much vi.

2672
02:45:57,200 --> 02:46:00,000
Oh, use the vi line editing interface.

2673
02:46:03,120 --> 02:46:06,640
But it doesn't look like I can grab it from here.

2674
02:46:08,000 --> 02:46:10,320
So there's only like special things that get written here.

2675
02:46:10,320 --> 02:46:11,920
This is kind of frustrating.

2676
02:46:14,240 --> 02:46:15,600
I mean, what's the criteria, right?

2677
02:46:15,600 --> 02:46:16,320
Like what's I?

2678
02:46:16,960 --> 02:46:18,160
I is interactive commands.

2679
02:46:18,160 --> 02:46:20,480
I'm guessing there's no proof of that.

2680
02:46:21,040 --> 02:46:22,080
M is what?

2681
02:46:23,600 --> 02:46:24,240
What is M?

2682
02:46:24,640 --> 02:46:27,040
M is monitor, which is on.

2683
02:46:27,040 --> 02:46:27,280
Okay.

2684
02:46:28,400 --> 02:46:29,440
Sometimes I have short flags.

2685
02:46:30,400 --> 02:46:31,280
Capital B.

2686
02:46:31,280 --> 02:46:32,080
Is that one covered?

2687
02:46:36,000 --> 02:46:36,240
No.

2688
02:46:37,360 --> 02:46:38,640
What is capital B?

2689
02:46:38,640 --> 02:46:39,440
Oh, there it is.

2690
02:46:39,440 --> 02:46:40,320
Brace expand.

2691
02:46:41,600 --> 02:46:42,320
Okay.

2692
02:46:42,320 --> 02:46:43,120
Brace expand.

2693
02:46:43,120 --> 02:46:43,360
Okay.

2694
02:46:43,360 --> 02:46:44,080
Then we got that one.

2695
02:46:44,720 --> 02:46:46,720
C we know that one's no clover.

2696
02:46:46,720 --> 02:46:47,040
H.

2697
02:46:51,120 --> 02:46:52,160
Do you have to get it to show up?

2698
02:46:52,160 --> 02:46:52,800
Is that a thing?

2699
02:46:53,760 --> 02:46:55,120
Manic, that's it.

2700
02:46:55,120 --> 02:46:56,080
That looks very interesting.

2701
02:46:56,080 --> 02:46:56,800
We'll try that next.

2702
02:46:59,840 --> 02:47:00,720
Let me give you a second though.

2703
02:47:00,720 --> 02:47:02,640
So we got B for brace expanded.

2704
02:47:02,640 --> 02:47:05,920
C for no clover.

2705
02:47:05,920 --> 02:47:08,800
H is his expand, which we have.

2706
02:47:10,160 --> 02:47:12,800
And S.

2707
02:47:12,800 --> 02:47:14,080
S has got to be VI mode.

2708
02:47:18,400 --> 02:47:20,480
S has got to be VI mode, but I don't see how.

2709
02:47:23,760 --> 02:47:24,960
You know what I mean?

2710
02:47:26,320 --> 02:47:27,280
I was not listed here.

2711
02:47:29,360 --> 02:47:30,080
And it's like V.

2712
02:47:32,080 --> 02:47:34,160
Let's set brace expand and see if it'll be, yeah.

2713
02:47:34,160 --> 02:47:35,600
I actually think it will do that, yeah.

2714
02:47:36,640 --> 02:47:37,760
All right, that's that.

2715
02:47:37,760 --> 02:47:38,000
All right.

2716
02:47:38,000 --> 02:47:44,480
So we set, it's not unset.

2717
02:47:44,480 --> 02:47:45,600
Unset is for variables.

2718
02:47:47,280 --> 02:47:47,840
What is it?

2719
02:47:47,840 --> 02:47:48,560
Set dash?

2720
02:47:48,560 --> 02:47:48,960
What is it?

2721
02:47:48,960 --> 02:47:49,680
Set dash something?

2722
02:47:50,640 --> 02:47:51,280
How's it going?

2723
02:47:51,280 --> 02:47:52,160
Job?

2724
02:47:53,680 --> 02:47:56,880
Job's value.

2725
02:47:59,440 --> 02:48:02,080
Pprivilege VI verbose mode.

2726
02:48:03,120 --> 02:48:04,000
Is it dash U?

2727
02:48:04,000 --> 02:48:04,720
Same as the other one?

2728
02:48:04,720 --> 02:48:05,520
Okay.

2729
02:48:05,520 --> 02:48:10,720
So set dash U brace expand.

2730
02:48:12,560 --> 02:48:13,600
What is brace expand?

2731
02:48:15,520 --> 02:48:18,000
Can I use like the, yeah, you can.

2732
02:48:21,120 --> 02:48:22,160
I mean, I remember reading that.

2733
02:48:22,240 --> 02:48:24,560
So I'll get that.

2734
02:48:25,200 --> 02:48:25,840
It's gone.

2735
02:48:27,360 --> 02:48:28,000
It's gone.

2736
02:48:29,920 --> 02:48:30,480
It did it.

2737
02:48:32,160 --> 02:48:34,640
So VI is just not covered.

2738
02:48:36,000 --> 02:48:38,720
I mean, it's not covered.

2739
02:48:38,720 --> 02:48:40,000
I don't know why it's just not.

2740
02:48:41,360 --> 02:48:43,200
VI print shell input lines as they're read.

2741
02:48:43,200 --> 02:48:43,360
No.

2742
02:48:44,160 --> 02:48:45,280
Turn on whatever the real thing is.

2743
02:48:45,280 --> 02:48:46,000
Same as X.

2744
02:48:46,800 --> 02:48:47,600
Emax mode.

2745
02:48:48,160 --> 02:48:49,920
It's almost like the person who wrote this

2746
02:48:49,920 --> 02:48:51,920
didn't want to do the other one.

2747
02:48:52,400 --> 02:48:54,800
Either we are truncating our help file or something.

2748
02:48:57,040 --> 02:48:57,520
Emax.

2749
02:48:58,160 --> 02:48:58,800
There's no Emax.

2750
02:48:58,800 --> 02:49:01,440
There's only VI because I set dash VI.

2751
02:49:03,440 --> 02:49:06,160
I think it's probably like a flip on or off kind of thing.

2752
02:49:06,160 --> 02:49:07,440
That's why it doesn't have its own value.

2753
02:49:08,400 --> 02:49:09,440
But I don't know.

2754
02:49:09,440 --> 02:49:09,920
I don't know.

2755
02:49:10,640 --> 02:49:11,760
I just know that that's a way.

2756
02:49:11,760 --> 02:49:12,720
There's no way to know.

2757
02:49:12,720 --> 02:49:13,520
I mean, what's S?

2758
02:49:14,960 --> 02:49:15,680
What is S?

2759
02:49:18,160 --> 02:49:18,480
All right.

2760
02:49:18,480 --> 02:49:19,040
I'm going to change it.

2761
02:49:19,040 --> 02:49:20,320
I'm going to change it to Emax mode.

2762
02:49:21,120 --> 02:49:21,760
Uh-huh.

2763
02:49:21,760 --> 02:49:22,560
Set that show.

2764
02:49:23,280 --> 02:49:23,840
Emax.

2765
02:49:25,120 --> 02:49:26,480
And then we're going to echo.

2766
02:49:27,280 --> 02:49:29,200
I can't even use my counter cursor anymore.

2767
02:49:30,800 --> 02:49:31,840
And it's still S.

2768
02:49:33,120 --> 02:49:34,640
It's still S, people.

2769
02:49:36,560 --> 02:49:36,960
Why?

2770
02:49:39,520 --> 02:49:40,480
No unset.

2771
02:49:40,480 --> 02:49:41,440
What the hell does that mean?

2772
02:49:42,000 --> 02:49:43,840
And why isn't there Emax mode there anymore?

2773
02:49:46,880 --> 02:49:48,160
Is Emax not a thing?

2774
02:49:49,040 --> 02:49:50,400
Maybe Emax is a default.

2775
02:49:52,880 --> 02:49:53,680
Oh, there it is.

2776
02:49:53,680 --> 02:49:54,240
Never mind.

2777
02:49:54,240 --> 02:49:54,720
There it is.

2778
02:49:54,720 --> 02:49:55,440
There's it right there.

2779
02:49:56,400 --> 02:49:56,880
All right.

2780
02:49:56,880 --> 02:50:07,040
So, so, I think the dash, the S is whatever.

2781
02:50:07,040 --> 02:50:07,760
No, it's not.

2782
02:50:08,640 --> 02:50:09,600
No, Emax.

2783
02:50:09,600 --> 02:50:11,360
No, it's stash OVI.

2784
02:50:12,640 --> 02:50:13,680
Stash OVI.

2785
02:50:14,480 --> 02:50:17,440
That's, I've been doing that for literally three days.

2786
02:50:17,760 --> 02:50:18,480
Literally three decades.

2787
02:50:21,360 --> 02:50:24,000
So, there you go.

2788
02:50:25,280 --> 02:50:29,280
So, it's interesting because it does not have a letter equivalent.

2789
02:50:30,640 --> 02:50:32,960
You cannot look it up in the show-up.

2790
02:50:32,960 --> 02:50:36,320
I mean, not in the small ones anyway.

2791
02:50:36,320 --> 02:50:37,200
The short ones.

2792
02:50:37,200 --> 02:50:37,760
It's not there.

2793
02:50:39,280 --> 02:50:39,920
It's not there.

2794
02:50:39,920 --> 02:50:43,200
We noticed that because we saw that it didn't change at all when we were changing.

2795
02:50:43,200 --> 02:50:44,400
So, it's one of those options.

2796
02:50:44,400 --> 02:50:46,000
It's interesting because I have a feeling that

2797
02:50:46,960 --> 02:50:54,560
that it's kind of in between, historically, the single letter sort of operate,

2798
02:50:55,600 --> 02:50:58,400
settings, and then the full shop stuff that came later.

2799
02:51:01,520 --> 02:51:02,640
Editor is different.

2800
02:51:02,640 --> 02:51:04,640
No, this is not editor, right?

2801
02:51:04,640 --> 02:51:06,320
This is your command line, read line.

2802
02:51:07,600 --> 02:51:09,680
Yeah, it's your history.

2803
02:51:09,680 --> 02:51:10,720
It's your history editor.

2804
02:51:10,720 --> 02:51:11,600
It's your history mode.

2805
02:51:12,160 --> 02:51:14,160
So, I mean, we're getting ahead of ourselves.

2806
02:51:14,480 --> 02:51:19,920
But the history uses something called the read line C package and the read line,

2807
02:51:19,920 --> 02:51:24,160
anything that uses read line, including, I mean, anything, you know, whether it be

2808
02:51:24,160 --> 02:51:28,400
Pine or Nano or WeChat or any application that uses the read line library,

2809
02:51:30,160 --> 02:51:33,360
allows you to, will recognize VI mode or Emacs mode.

2810
02:51:34,160 --> 02:51:38,800
And that means you just navigate the history using VI or Emacs.

2811
02:51:39,760 --> 02:51:45,360
And the default, by the way, is Emacs because the people that wrote Bash and all this stuff

2812
02:51:45,360 --> 02:51:53,280
are big Emacs users, even though the standard should have been VI because VI is the standard

2813
02:51:53,280 --> 02:52:00,880
Unix editor because VI is the visual mode of X and X is the modern version of Ed.

2814
02:52:00,880 --> 02:52:02,720
And Ed is the standard Unix editor.

2815
02:52:03,360 --> 02:52:08,480
Emacs is a bloated piece of crap that a lot of amazing people use to make great software.

2816
02:52:09,520 --> 02:52:14,240
It has, so, so, yeah.

2817
02:52:14,240 --> 02:52:16,960
Anyway, I mean, that was a, that was a fun rabbit hole.

2818
02:52:16,960 --> 02:52:19,440
I mean, that was a big X on the RWX, right?

2819
02:52:19,440 --> 02:52:21,040
Explorant rotation.

2820
02:52:21,920 --> 02:52:26,400
But I feel like I know more about set and shopped.

2821
02:52:26,400 --> 02:52:28,480
I've been wanting to know about them for a long time.

2822
02:52:28,480 --> 02:52:29,920
So that was kind of fun to look at.

2823
02:52:31,120 --> 02:52:33,840
So as you can see, you can go read about these anywhere you want to.

2824
02:52:34,640 --> 02:52:36,400
Check when size is by default.

2825
02:52:36,400 --> 02:52:38,000
A lot of these are on by default.

2826
02:52:38,000 --> 02:52:39,680
But I go ahead and set them anyway.

2827
02:52:41,120 --> 02:52:46,720
I need columns or rows if I want to do anything fancy with like resizing my window or anything.

2828
02:52:48,400 --> 02:52:49,920
Like Tim, I use those in Timx all the time.

2829
02:52:50,800 --> 02:52:52,400
And expand aliases.

2830
02:52:52,400 --> 02:52:57,920
This is, so like if you have, if you have an alias, do I have an alias?

2831
02:52:57,920 --> 02:52:58,560
What do I have an alias?

2832
02:52:58,560 --> 02:52:59,520
What kind of alias do I have?

2833
02:53:00,560 --> 02:53:01,600
Do I have any alias?

2834
02:53:02,880 --> 02:53:04,080
Alias dashed out.

2835
02:53:04,080 --> 02:53:04,640
Is that a thing?

2836
02:53:05,600 --> 02:53:06,480
I don't know.

2837
02:53:06,480 --> 02:53:07,120
I've never done it.

2838
02:53:07,120 --> 02:53:07,920
There we go, alias.

2839
02:53:08,880 --> 02:53:09,920
Oh, coin flip.

2840
02:53:09,920 --> 02:53:10,720
Yeah, we don't have that.

2841
02:53:11,520 --> 02:53:14,400
So, so you can do diff tab, tab.

2842
02:53:17,840 --> 02:53:20,960
I think, I don't know, it's not working right now,

2843
02:53:20,960 --> 02:53:24,800
but that will expand aliases in the command line.

2844
02:53:24,800 --> 02:53:29,200
Globstar is the thing that gets you extended Globstar.

2845
02:53:29,840 --> 02:53:33,280
Globstar gets you your star expansion from the command line,

2846
02:53:33,280 --> 02:53:36,160
which we talked about at length in the bash the other day.

2847
02:53:37,600 --> 02:53:41,120
Dot glob includes the dot files in your glob.

2848
02:53:41,120 --> 02:53:46,240
If you don't have that, when you do commands and stuff, they won't get included.

2849
02:53:46,880 --> 02:53:53,440
So, so yeah, an extended glob allows you to use star star.

2850
02:53:54,160 --> 02:53:56,080
If you don't have that, you actually need to put that.

2851
02:53:56,080 --> 02:54:01,200
If you want to use the like 10 line shell script to write your own static site generator

2852
02:54:01,200 --> 02:54:04,160
with Pandoc and bash, you need to have that enabled

2853
02:54:04,160 --> 02:54:06,720
because otherwise it won't descend and won't use the two star thing.

2854
02:54:06,720 --> 02:54:07,760
That's not on by default.

2855
02:54:10,400 --> 02:54:11,520
You know, the VIMO though.

2856
02:54:11,520 --> 02:54:13,680
Yeah, I don't, I don't, I don't know what VIMO does.

2857
02:54:15,840 --> 02:54:19,760
It will get to the VI stuff in a bit here and shop no glob.

2858
02:54:19,760 --> 02:54:26,320
So, I don't remember why no glob killed something.

2859
02:54:26,320 --> 02:54:32,960
I think no glob will actually

2860
02:54:34,400 --> 02:54:37,440
glob even if you don't have anything typed at all.

2861
02:54:39,600 --> 02:54:40,240
Let's go look.

2862
02:54:42,320 --> 02:54:45,360
So we could do man, no.

2863
02:54:46,480 --> 02:54:50,240
I mean, we could do man bash, no glob.

2864
02:54:50,240 --> 02:54:51,360
Go back to the source.

2865
02:54:52,320 --> 02:54:53,760
The little glob option is set.

2866
02:54:56,160 --> 02:55:00,160
Let's see if, if no matching file names are found and the shell option no glob is not

2867
02:55:00,160 --> 02:55:02,560
enabled, the word is left unchanged.

2868
02:55:02,560 --> 02:55:06,080
If the null glob option is set and no matches are found,

2869
02:55:06,080 --> 02:55:06,960
the word is removed.

2870
02:55:06,960 --> 02:55:09,680
If the fail glob is set, no matches.

2871
02:55:11,200 --> 02:55:11,920
I don't want to do that.

2872
02:55:12,800 --> 02:55:16,160
At the start of the name or immediately following a slash must be matched explicitly

2873
02:55:16,160 --> 02:55:18,640
unless the shell option dot glob is set.

2874
02:55:18,640 --> 02:55:21,680
The file names dot and dot dot must always be matched explicitly,

2875
02:55:22,560 --> 02:55:24,320
even if dot glob is unset.

2876
02:55:25,840 --> 02:55:30,320
So all of this stuff has to do with globbing from the command line.

2877
02:55:30,320 --> 02:55:32,800
And we talked about that a couple of weeks ago.

2878
02:55:32,800 --> 02:55:35,440
So like L is splat, right?

2879
02:55:35,440 --> 02:55:38,560
If I do splat splat, it does everything all the way down, right?

2880
02:55:40,480 --> 02:55:41,520
I do like that.

2881
02:55:41,520 --> 02:55:42,960
It's going to do everything.

2882
02:55:42,960 --> 02:55:45,760
In fact, there's too much stuff, like way too much stuff.

2883
02:55:46,640 --> 02:55:47,520
So let's go over here.

2884
02:55:47,520 --> 02:55:48,160
So let's do this.

2885
02:55:48,160 --> 02:55:53,280
Let's say ls, wait, am I on Anton?

2886
02:55:54,080 --> 02:55:55,120
We need to get off Anton.

2887
02:55:56,240 --> 02:55:56,480
All right.

2888
02:55:56,480 --> 02:56:00,880
So let's do ls-l star.

2889
02:56:00,880 --> 02:56:02,240
And it will give you all the directories.

2890
02:56:03,040 --> 02:56:04,080
I use star star.

2891
02:56:04,080 --> 02:56:06,480
It will give me all the directories and the sub directories.

2892
02:56:07,760 --> 02:56:08,720
And it includes dot.

2893
02:56:09,600 --> 02:56:10,880
And I think if I turn the other stuff off,

2894
02:56:10,880 --> 02:56:12,160
it wouldn't even give me the dot file.

2895
02:56:12,160 --> 02:56:14,800
So they would be kept out of that.

2896
02:56:15,440 --> 02:56:17,920
I should note, by the way, that you can set these things.

2897
02:56:17,920 --> 02:56:20,160
These options for the course of a script,

2898
02:56:20,160 --> 02:56:23,280
if you want to have your script not go through the hidden files

2899
02:56:23,280 --> 02:56:26,800
or something, you can explicitly set it at the top of your script.

2900
02:56:27,760 --> 02:56:28,640
And people did it a lot.

2901
02:56:28,640 --> 02:56:31,360
Or if you need to turn on double star expanded globs,

2902
02:56:31,360 --> 02:56:33,600
like if you're making a static site generator with Pandoc,

2903
02:56:34,320 --> 02:56:36,240
that's something you could do for that as well.

2904
02:56:38,560 --> 02:56:40,320
So yeah, did I just close my container?

2905
02:56:40,320 --> 02:56:41,760
Damn, I'm going to have another one open.

2906
02:56:43,360 --> 02:56:44,800
I've been trying not to do that.

2907
02:56:45,600 --> 02:56:46,480
Oh, shit.

2908
02:56:46,480 --> 02:56:47,520
I think I closed this one too.

2909
02:56:48,400 --> 02:56:50,320
I think my container is no more.

2910
02:56:51,120 --> 02:56:51,520
Oh, well.

2911
02:56:52,880 --> 02:56:53,360
Hey, Doug.

2912
02:56:55,280 --> 02:56:55,680
Whatever.

2913
02:56:56,560 --> 02:56:59,200
You know, I'm getting sloppy because I'm tired.

2914
02:57:00,080 --> 02:57:00,800
Here we go.

2915
02:57:00,800 --> 02:57:02,240
So back to where we were.

2916
02:57:04,320 --> 02:57:05,600
STTY annoyances.

2917
02:57:05,600 --> 02:57:11,440
So STTY, so this is a really, really big one.

2918
02:57:12,000 --> 02:57:13,120
And let's talk about this.

2919
02:57:13,120 --> 02:57:17,040
So just Disables, Control, S, Accidental, Thermal Stop.

2920
02:57:17,040 --> 02:57:20,000
Somebody told me about this two years ago,

2921
02:57:20,000 --> 02:57:21,760
a year ago, a year and a half ago on Twitch.

2922
02:57:22,480 --> 02:57:23,280
I love Twitch.

2923
02:57:23,280 --> 02:57:24,160
God bless you, Twitch.

2924
02:57:24,160 --> 02:57:25,120
Thank you for existing.

2925
02:57:25,120 --> 02:57:26,880
If we have any Twitch admins watching right now,

2926
02:57:27,440 --> 02:57:29,920
thank you for existing because I have learned so much through Twitch

2927
02:57:29,920 --> 02:57:32,560
just from people telling me, why are you doing that?

2928
02:57:32,560 --> 02:57:33,040
You're dumb.

2929
02:57:33,520 --> 02:57:36,160
And I've fixed some things.

2930
02:57:36,160 --> 02:57:37,680
And this is something I've never known about.

2931
02:57:37,680 --> 02:57:40,000
So let's take a moment to show you about this.

2932
02:57:40,000 --> 02:57:42,240
This is really, really important.

2933
02:57:42,240 --> 02:57:43,120
In fact, it's so important.

2934
02:57:43,120 --> 02:57:45,440
I'm going to give it its own bullet point in the

2935
02:57:47,360 --> 02:57:49,040
in the video, right?

2936
02:57:50,960 --> 02:57:59,760
So yeah, this is so use STTY.

2937
02:57:59,760 --> 02:58:01,600
We talked about TTYs and what they were.

2938
02:58:01,600 --> 02:58:03,520
We're going to talk about them a lot more

2939
02:58:03,520 --> 02:58:06,640
when we talk about the colors.

2940
02:58:06,640 --> 02:58:09,200
But we've already gone through that it stands for teletype

2941
02:58:09,200 --> 02:58:12,320
and it's left over from the days of terminals stuff.

2942
02:58:12,320 --> 02:58:21,120
It's a disabled, dental terminal suspend.

2943
02:58:22,320 --> 02:58:22,640
All right.

2944
02:58:22,640 --> 02:58:24,400
So in order for me to explain this one to you,

2945
02:58:24,400 --> 02:58:25,760
and I've talked about this before.

2946
02:58:25,760 --> 02:58:29,200
So back in the day, teletype machines,

2947
02:58:29,200 --> 02:58:30,640
you don't know what a teletype machine is.

2948
02:58:30,640 --> 02:58:32,880
I know for visual interest,

2949
02:58:32,880 --> 02:58:34,720
I will show you what a teletype machine looks like.

2950
02:58:35,360 --> 02:58:36,080
If you haven't seen it,

2951
02:58:36,080 --> 02:58:38,320
you can think about the teletype machine while I'm talking.

2952
02:58:39,280 --> 02:58:43,040
And so all terminals are have as origins,

2953
02:58:43,040 --> 02:58:44,160
these teletype things, right?

2954
02:58:45,040 --> 02:58:46,960
And that's what TTY means, right?

2955
02:58:46,960 --> 02:58:50,000
So and, you know, their line return,

2956
02:58:50,000 --> 02:58:51,600
line feed, carriage return, line feed,

2957
02:58:51,600 --> 02:58:53,360
that whole thing was all, you know,

2958
02:58:53,360 --> 02:58:55,120
advanced backspace, bell.

2959
02:58:56,400 --> 02:58:58,560
And so all of these special, you know,

2960
02:58:58,560 --> 02:59:00,800
escape sequences that don't print anything

2961
02:59:01,760 --> 02:59:04,800
were designed to control the teletype machine.

2962
02:59:05,760 --> 02:59:09,680
And to this day, they still exist, right?

2963
02:59:09,680 --> 02:59:12,080
Well, one of the commands was for when

2964
02:59:12,080 --> 02:59:14,720
the teletype machine got too slow.

2965
02:59:14,720 --> 02:59:16,320
If the teletype machine was too slow

2966
02:59:16,320 --> 02:59:17,840
and it was getting too much data,

2967
02:59:19,280 --> 02:59:23,040
there was a special escape sequence that it could use

2968
02:59:23,600 --> 02:59:26,720
to say, I want to suspend, right?

2969
02:59:27,280 --> 02:59:29,920
And what it would do is the data would still come in,

2970
02:59:30,640 --> 02:59:33,760
but it would suspend the data for a while

2971
02:59:33,760 --> 02:59:34,960
and it would stop printing,

2972
02:59:34,960 --> 02:59:38,320
even though it was still receiving data from whatever,

2973
02:59:38,320 --> 02:59:39,360
being typed in or whatever.

2974
02:59:39,360 --> 02:59:40,560
And it would be some sort of buffer

2975
02:59:41,360 --> 02:59:42,800
that would capture all that stuff.

2976
02:59:42,800 --> 02:59:44,560
And then when it unsuspended,

2977
02:59:44,560 --> 02:59:46,560
it would go back and get the new stuff and write it out.

2978
02:59:46,560 --> 02:59:50,880
Well, let me show you that exact thing happening

2979
02:59:50,880 --> 02:59:53,200
on the command line to an unsuspecting person

2980
02:59:54,480 --> 02:59:56,400
who just started using the terminal.

2981
02:59:56,400 --> 02:59:58,480
It's the most annoying thing beginners

2982
02:59:58,480 --> 03:00:00,080
have to deal with all the time.

2983
03:00:00,080 --> 03:00:02,320
And I didn't know until two years ago

2984
03:00:02,400 --> 03:00:06,880
how to escape this without exiting my terminal, right?

2985
03:00:06,880 --> 03:00:08,960
So I'm going to try to recreate it for you.

2986
03:00:08,960 --> 03:00:10,640
In fact, I'm going to start a brand.

2987
03:00:10,640 --> 03:00:13,040
I don't know if I think I've got too many fixes in place for it.

2988
03:00:13,680 --> 03:00:21,040
So I'm actually going to start a new terminal to Anton as Boost.

2989
03:00:21,040 --> 03:00:21,440
Let's do it.

2990
03:00:21,440 --> 03:00:22,240
No, let's see.

2991
03:00:23,680 --> 03:00:25,040
I'm wondering who I could attach to.

2992
03:00:25,040 --> 03:00:28,320
So we need to Boost at Anton.

2993
03:00:30,000 --> 03:00:30,560
Okay, fine.

2994
03:00:31,120 --> 03:00:36,240
Let me go back on Anton and then we'll SU.

2995
03:00:36,240 --> 03:00:37,760
I think we can probably, I don't know.

2996
03:00:39,120 --> 03:00:41,040
You know, I think I'm going to be fine over here.

2997
03:00:41,040 --> 03:00:41,840
I think so.

2998
03:00:41,840 --> 03:00:45,200
I think if I just, here, su-boost.

2999
03:00:48,400 --> 03:00:50,640
Oh no, I got too much configuration going on.

3000
03:00:50,640 --> 03:00:52,000
So we can't have that.

3001
03:00:52,000 --> 03:00:57,360
Let's do, I mean, I, okay.

3002
03:00:57,360 --> 03:00:59,280
So the reason I'm concerned is because we have Tmux

3003
03:00:59,280 --> 03:01:00,880
and a bunch of other things that might fix it for us.

3004
03:01:00,880 --> 03:01:02,880
Okay, but I'm going to try it anyway.

3005
03:01:02,880 --> 03:01:06,960
Okay, so normally if you, if you type this and be careful

3006
03:01:06,960 --> 03:01:09,920
if you do this case, because you're, when you do it,

3007
03:01:09,920 --> 03:01:11,600
you might have trouble recovering.

3008
03:01:11,600 --> 03:01:13,840
So make an extra terminal or whatever you want to do.

3009
03:01:14,640 --> 03:01:19,520
But you'll be typing along and then you hit control S, right?

3010
03:01:20,320 --> 03:01:23,120
Now, mine goes into searching mode, right?

3011
03:01:24,640 --> 03:01:25,840
Which is a totally different thing.

3012
03:01:26,800 --> 03:01:29,680
And the reason for that is because I have this safeguard

3013
03:01:29,680 --> 03:01:30,560
put in place now.

3014
03:01:31,120 --> 03:01:36,160
And I didn't have this, this before, right?

3015
03:01:36,160 --> 03:01:41,200
And I'm trying to create a situation where that's true.

3016
03:01:41,200 --> 03:01:44,240
And let me see if I can, I'm going to break.

3017
03:01:47,360 --> 03:01:49,200
All right, so, so root doesn't have it.

3018
03:01:49,200 --> 03:01:51,840
Okay, so root doesn't have it.

3019
03:01:51,840 --> 03:01:52,800
I'm not taking it in my head.

3020
03:01:52,800 --> 03:01:53,600
I'm not right now anyway.

3021
03:01:54,320 --> 03:01:56,080
So root doesn't have it.

3022
03:01:57,040 --> 03:01:59,360
And let's see if root has trolls.

3023
03:01:59,360 --> 03:02:02,160
So I'm typing LS, I'm taking me PWD.

3024
03:02:02,160 --> 03:02:04,720
Maybe I'm working on a file temp foo.

3025
03:02:04,720 --> 03:02:07,920
I'm like, and I'm really going fast or something.

3026
03:02:07,920 --> 03:02:09,040
And I hit control S.

3027
03:02:10,240 --> 03:02:11,600
Well, that one doesn't do it either.

3028
03:02:11,600 --> 03:02:12,000
Damn it.

3029
03:02:13,360 --> 03:02:14,480
All right, control S.

3030
03:02:15,840 --> 03:02:17,360
No, this has been fixed too.

3031
03:02:17,920 --> 03:02:18,320
Damn.

3032
03:02:19,520 --> 03:02:21,200
I can't, this isn't work.

3033
03:02:21,200 --> 03:02:22,160
I knew this was going to happen.

3034
03:02:22,800 --> 03:02:24,000
I can't break it now.

3035
03:02:26,880 --> 03:02:27,760
It's only, you know what?

3036
03:02:28,400 --> 03:02:29,440
Wait, wait, wait, wait.

3037
03:02:31,520 --> 03:02:32,480
I might have an idea.

3038
03:02:34,640 --> 03:02:36,320
I've totally fixed myself.

3039
03:02:36,320 --> 03:02:40,480
So I fixed myself so good that now I'm broke

3040
03:02:40,480 --> 03:02:42,240
because I can't show you how to break it.

3041
03:02:43,280 --> 03:02:46,960
All right, so, so yeah, so control S.

3042
03:02:47,600 --> 03:02:48,480
No, damn.

3043
03:02:49,360 --> 03:02:51,440
I mean, maybe a container, maybe a container.

3044
03:02:52,160 --> 03:02:56,560
SSH, no, because the whole thing's getting,

3045
03:02:56,560 --> 03:02:56,960
you know what?

3046
03:02:56,960 --> 03:02:58,800
It's all because of the host terminal.

3047
03:02:59,520 --> 03:02:59,760
Yeah.

3048
03:02:59,760 --> 03:03:01,360
And my git bash has it in as well.

3049
03:03:01,360 --> 03:03:03,360
So it's really hard for me to break it again.

3050
03:03:05,200 --> 03:03:05,760
You know what?

3051
03:03:05,760 --> 03:03:06,160
You know what?

3052
03:03:06,160 --> 03:03:07,040
I think I figured it out.

3053
03:03:07,760 --> 03:03:09,360
I'll go use Anton from the command line.

3054
03:03:10,480 --> 03:03:10,720
Yeah.

3055
03:03:11,440 --> 03:03:13,600
Because I mean, watch, I mean, even here,

3056
03:03:15,280 --> 03:03:18,800
see, it's even fixed here because my bash

3057
03:03:18,800 --> 03:03:19,600
grandline's about to fix it.

3058
03:03:22,320 --> 03:03:23,920
I can't break it, my friends.

3059
03:03:24,480 --> 03:03:24,880
All right.

3060
03:03:24,880 --> 03:03:30,800
So I know, well, what does that do?

3061
03:03:30,800 --> 03:03:31,680
Resets everything?

3062
03:03:33,120 --> 03:03:34,320
Is that the one that turns them all off?

3063
03:03:35,600 --> 03:03:36,720
Is that the one that lists them all?

3064
03:03:40,480 --> 03:03:41,200
I can't remember.

3065
03:03:43,840 --> 03:03:48,160
So anyway, the STTY command controls the TTY.

3066
03:03:48,160 --> 03:03:50,640
It's a great way to look up how many rows and stuff you have

3067
03:03:50,640 --> 03:03:52,160
like that, if you don't have the environment variable.

3068
03:03:52,880 --> 03:03:54,880
It can do all kinds of fancy stuff from here.

3069
03:03:54,880 --> 03:03:55,680
Oh, it is the one.

3070
03:03:55,680 --> 03:03:56,480
That is the printer.

3071
03:03:57,040 --> 03:03:57,280
Yeah.

3072
03:03:58,480 --> 03:03:58,800
All right.

3073
03:03:58,800 --> 03:04:01,040
So let me check it.

3074
03:04:01,040 --> 03:04:02,560
Here's your BOD speed.

3075
03:04:02,560 --> 03:04:04,240
I mean, all this stuff from the old school terminal

3076
03:04:04,240 --> 03:04:04,880
that mattered, right?

3077
03:04:04,880 --> 03:04:06,160
We don't do any of that now.

3078
03:04:08,080 --> 03:04:09,520
Suspend is Control-Z.

3079
03:04:10,400 --> 03:04:11,600
See, this is what I find interesting,

3080
03:04:11,600 --> 03:04:13,760
is that it's not doing it anymore.

3081
03:04:13,760 --> 03:04:15,760
That's like, oh, stop.

3082
03:04:15,760 --> 03:04:17,120
See, look, stop, spend, undeft.

3083
03:04:18,400 --> 03:04:20,160
And actually, it wasn't suspend.

3084
03:04:20,160 --> 03:04:22,480
It was, was it, did I do it wrong?

3085
03:04:22,480 --> 03:04:23,120
Control-Z.

3086
03:04:24,640 --> 03:04:26,160
No, my Control-Z is off too.

3087
03:04:26,720 --> 03:04:28,640
It's, it must have been stop.

3088
03:04:29,680 --> 03:04:30,480
I think I got it wrong.

3089
03:04:30,480 --> 03:04:32,240
I think I've been saying it wrong all this time.

3090
03:04:32,240 --> 03:04:34,000
It was doing stop instead of suspend.

3091
03:04:34,000 --> 03:04:35,440
It was, I mean, it felt like a suspend,

3092
03:04:35,440 --> 03:04:37,520
but it was stopping the stuff.

3093
03:04:38,640 --> 03:04:41,680
So we have to get it so that that's not undeft.

3094
03:04:41,680 --> 03:04:43,040
We need to define it to be, I know.

3095
03:04:43,760 --> 03:04:44,400
I know.

3096
03:04:44,400 --> 03:04:45,360
I think we can do this.

3097
03:04:46,400 --> 03:04:47,760
I mean, how can we tell it here?

3098
03:04:48,240 --> 03:04:51,440
STTY, I've never done this.

3099
03:04:52,000 --> 03:04:55,040
STTY, stop.

3100
03:04:58,320 --> 03:04:59,120
I don't know.

3101
03:04:59,120 --> 03:05:00,000
I don't know what I'm doing.

3102
03:05:00,960 --> 03:05:01,760
I want to know though.

3103
03:05:03,200 --> 03:05:04,560
I promise it'll be worth it,

3104
03:05:04,560 --> 03:05:06,560
because every one of you who doesn't have this set right now

3105
03:05:06,560 --> 03:05:07,920
has encountered this as soon as you see it,

3106
03:05:07,920 --> 03:05:09,520
you're like, oh my gosh, that's what's going on.

3107
03:05:10,080 --> 03:05:10,960
It's so annoying.

3108
03:05:13,200 --> 03:05:15,040
Echo, so turning off Echo, by the way,

3109
03:05:15,040 --> 03:05:17,440
if you want to make a script that doesn't echo to the screen

3110
03:05:17,440 --> 03:05:18,960
when you're typing in passwords and stuff,

3111
03:05:18,960 --> 03:05:19,760
that's how you do it.

3112
03:05:20,800 --> 03:05:23,040
Is it just S?

3113
03:05:25,360 --> 03:05:27,120
Yeah, yours does S, right?

3114
03:05:28,400 --> 03:05:31,280
I don't know how to have it type it though.

3115
03:05:33,200 --> 03:05:34,560
Yeah, I'm trying to figure it out.

3116
03:05:35,760 --> 03:05:36,640
Input settings.

3117
03:05:38,640 --> 03:05:39,680
It's definitely stop.

3118
03:05:42,160 --> 03:05:43,760
This is way more than I normally would look up.

3119
03:05:43,760 --> 03:05:44,320
I don't care.

3120
03:05:44,960 --> 03:05:50,000
There is stop, char, but I have to type the character.

3121
03:05:52,400 --> 03:05:55,120
Yeah, and it's going to try to do something when I type it.

3122
03:05:56,240 --> 03:05:58,240
Yeah, but I don't think I can type.

3123
03:05:59,600 --> 03:06:04,480
Yeah, I think I have to do the dollar sign for that.

3124
03:06:05,040 --> 03:06:05,760
Yeah, let's try this.

3125
03:06:06,480 --> 03:06:10,160
STTY, I'm just taking it on my Bashar scene and reload.

3126
03:06:11,120 --> 03:06:13,360
You know, stop.

3127
03:06:17,280 --> 03:06:18,320
I can't just do that.

3128
03:06:18,320 --> 03:06:19,680
That's not going to, I don't think it's going to work.

3129
03:06:21,680 --> 03:06:22,800
I don't think it's going to work.

3130
03:06:22,800 --> 03:06:23,440
Let's go check.

3131
03:06:24,160 --> 03:06:24,400
Hey.

3132
03:06:25,520 --> 03:06:26,000
Oh, wow.

3133
03:06:26,000 --> 03:06:26,720
Maybe it did work.

3134
03:06:27,680 --> 03:06:28,720
Maybe it did work.

3135
03:06:28,720 --> 03:06:29,920
All right, here we go.

3136
03:06:29,920 --> 03:06:31,200
So we're doing our thing.

3137
03:06:32,800 --> 03:06:34,320
And I accidentally hit Control S.

3138
03:06:34,960 --> 03:06:36,160
Oh, it worked.

3139
03:06:36,160 --> 03:06:36,800
Yay.

3140
03:06:36,800 --> 03:06:38,480
So it is, it is a carrot.

3141
03:06:38,480 --> 03:06:38,720
Okay.

3142
03:06:39,600 --> 03:06:42,240
So now I'm like typing like, oh, what happened?

3143
03:06:42,240 --> 03:06:43,680
Anybody ever had this happen, by the way?

3144
03:06:44,640 --> 03:06:48,080
Has anybody, I call this a suspend, but actually that's wrong.

3145
03:06:48,080 --> 03:06:49,280
The name is stop.

3146
03:06:49,280 --> 03:06:50,720
Has anybody ever stopped their terminal?

3147
03:06:53,440 --> 03:06:54,320
Anybody ever done it?

3148
03:06:56,640 --> 03:07:00,240
I know it's control, but normally when you see a carrot,

3149
03:07:00,240 --> 03:07:02,720
it means that the actual control character has to be typed.

3150
03:07:03,680 --> 03:07:05,520
So in, at least in Bash.

3151
03:07:05,520 --> 03:07:08,320
So anyway, I just typed a whole bunch of stuff.

3152
03:07:08,320 --> 03:07:13,600
Watch what happens when I do start, which is control Q.

3153
03:07:13,600 --> 03:07:14,000
Boom.

3154
03:07:14,000 --> 03:07:16,080
It types them all out because it just bring the buffer

3155
03:07:16,080 --> 03:07:17,360
was all filling on and all that stuff.

3156
03:07:18,560 --> 03:07:24,400
Control Z is suspend and the suspend will work.

3157
03:07:24,400 --> 03:07:26,000
Like if you're doing sunrise, right?

3158
03:07:27,600 --> 03:07:30,480
You can do sunrise and you can do control Z and it will stop it,

3159
03:07:31,440 --> 03:07:32,240
but it's still running.

3160
03:07:32,960 --> 03:07:36,000
And that sends it, it sends it a suspend, right?

3161
03:07:36,880 --> 03:07:40,000
And you can foreground that and it will bring it back.

3162
03:07:41,680 --> 03:07:43,120
Control Z is suspend.

3163
03:07:43,760 --> 03:07:48,160
By the way, this is a reason I hate nano for beginners

3164
03:07:49,440 --> 03:07:54,880
because nano encourages beginners to try to use control commands

3165
03:07:55,840 --> 03:07:57,680
to do things they shouldn't.

3166
03:07:58,400 --> 03:08:02,800
Like they want to get out of something so they do control S for stop or something

3167
03:08:02,800 --> 03:08:04,880
and then they, then they get getting screwed up.

3168
03:08:04,880 --> 03:08:06,720
And if they don't have that configuration,

3169
03:08:06,720 --> 03:08:11,120
which is what set us off on this conversation, they don't have this thing.

3170
03:08:11,120 --> 03:08:14,400
So while we're at it since time, and we haven't really talked to it before,

3171
03:08:15,920 --> 03:08:24,480
let's under this, but here, grok backgrounding, suspending processes.

3172
03:08:24,480 --> 03:08:26,160
So a process is a running program.

3173
03:08:27,280 --> 03:08:31,840
And any program that you have at all, it can be backgrounded, right?

3174
03:08:31,840 --> 03:08:34,240
So I can do like right now, I could probably try it.

3175
03:08:34,240 --> 03:08:36,800
Let's try, I'm gonna save my stuff so I don't lose it.

3176
03:08:36,800 --> 03:08:40,160
So control Z there.

3177
03:08:40,160 --> 03:08:45,120
So that stopped my Vim program, but it's still there, right?

3178
03:08:45,120 --> 03:08:48,720
By the way, how do I show all the running programs in the background?

3179
03:08:48,720 --> 03:08:52,320
Jobs, jobs shows all the stuff that I have running, right?

3180
03:08:53,040 --> 03:08:55,600
And if I go on it back, I just do foreground.

3181
03:08:56,640 --> 03:08:59,600
And if you have to pick one, you can do foreground and then percent

3182
03:08:59,600 --> 03:09:01,840
and then the number and that'll get it.

3183
03:09:01,840 --> 03:09:04,080
I don't want to overly dwell on jobs.

3184
03:09:04,560 --> 03:09:07,680
But it is the way you can like suspend a thing or put it in the background.

3185
03:09:07,680 --> 03:09:11,360
So if you're doing something, yeah, you wouldn't want to do kill,

3186
03:09:11,360 --> 03:09:13,280
that's one that would kill that process, right?

3187
03:09:14,000 --> 03:09:16,720
But you can refer to any job with a percent in front of it.

3188
03:09:17,840 --> 03:09:20,240
And that will do it.

3189
03:09:20,240 --> 03:09:24,800
So, but sometimes, for example, if you're like running a Minecraft server, right?

3190
03:09:25,680 --> 03:09:28,560
If you accidentally run Minecraft, you don't have Tmux running

3191
03:09:28,560 --> 03:09:30,320
and you just have backgrounding and that's all you have.

3192
03:09:30,320 --> 03:09:32,720
And you got to get to the shell and then come back to it.

3193
03:09:32,720 --> 03:09:34,960
You can like leave the Minecraft server running

3194
03:09:34,960 --> 03:09:39,520
and you can do control Z and suspend it and do whatever.

3195
03:09:40,080 --> 03:09:43,200
And then you can just foreground or whatever and you go back to your process.

3196
03:09:43,200 --> 03:09:43,760
Okay.

3197
03:09:43,760 --> 03:09:49,040
So it's kind of like a poor person's poor man's screen or poor man's Tmux, right?

3198
03:09:49,040 --> 03:09:50,960
Tmux and screen are way better for that kind of stuff.

3199
03:09:52,400 --> 03:09:54,000
But it is, it is possible.

3200
03:09:54,000 --> 03:09:56,960
Now, the problem, though, is that if you do control S,

3201
03:09:58,000 --> 03:10:00,720
which is not currently enabled on this one,

3202
03:10:01,360 --> 03:10:03,280
we got to, we got to put that in a terminal where it's enabled,

3203
03:10:03,280 --> 03:10:05,520
it's enabled in a stty-shay.

3204
03:10:05,520 --> 03:10:06,400
Let's go look.

3205
03:10:06,400 --> 03:10:07,360
So it's undefined again.

3206
03:10:07,360 --> 03:10:10,000
So stty, we used to have to do this with,

3207
03:10:10,000 --> 03:10:11,920
anybody remember having backspace problems?

3208
03:10:13,600 --> 03:10:16,320
We used to have to do, we used to have to set a race

3209
03:10:17,680 --> 03:10:20,160
and EOL, we used to have to set a race all the time.

3210
03:10:20,160 --> 03:10:21,840
Otherwise, if you push the delete key,

3211
03:10:21,840 --> 03:10:23,760
it would just keep pushing control characters.

3212
03:10:23,760 --> 03:10:25,120
Anybody remember this?

3213
03:10:25,120 --> 03:10:27,120
I mean, it was a long time ago, but in the 90s,

3214
03:10:27,760 --> 03:10:29,920
in order to get delete, the delete key to work,

3215
03:10:30,480 --> 03:10:31,680
you'd have to do that, right?

3216
03:10:31,680 --> 03:10:32,640
So you can also do,

3217
03:10:34,720 --> 03:10:37,120
you can also suspend a process using the PID, right?

3218
03:10:37,120 --> 03:10:37,600
Absolutely.

3219
03:10:38,320 --> 03:10:39,040
Yeah, you can.

3220
03:10:39,040 --> 03:10:40,800
You can do kill, whatever, and then the PID.

3221
03:10:40,800 --> 03:10:43,120
And then that'll stop, that'll suspend the process as well.

3222
03:10:45,120 --> 03:10:48,320
So, so yeah, let's try the other stty.

3223
03:10:48,320 --> 03:10:54,400
So stty, stop, we're going to make it the same as normal S.

3224
03:10:55,360 --> 03:11:00,320
And, and now when we, we type control S, we get frozen and like,

3225
03:11:00,320 --> 03:11:01,920
oh no, I need to close my terminal.

3226
03:11:01,920 --> 03:11:02,720
No, you don't really.

3227
03:11:02,720 --> 03:11:05,840
You just need to do control Q and that'll restart it.

3228
03:11:05,840 --> 03:11:08,560
Now, granted, a lot of people do this,

3229
03:11:08,560 --> 03:11:10,080
and then they try all kinds of crap.

3230
03:11:10,080 --> 03:11:12,560
They're like exit and all sorts of things.

3231
03:11:12,560 --> 03:11:14,160
Remember that everything, when you,

3232
03:11:14,160 --> 03:11:16,000
when you actually find the right keystrokes,

3233
03:11:16,000 --> 03:11:19,280
all that random stuff that you type to try to get the right thing,

3234
03:11:19,280 --> 03:11:21,920
will execute because it's just been, you know,

3235
03:11:21,920 --> 03:11:24,080
so sometimes it is better to just kill the screen.

3236
03:11:24,560 --> 03:11:26,000
I mean, if that were to ever happen to you too,

3237
03:11:26,000 --> 03:11:27,840
you can only just do, you know, Tmux,

3238
03:11:27,840 --> 03:11:31,840
which is control a ampersand, you know, and sign,

3239
03:11:32,480 --> 03:11:36,960
and that puts you, it just kills your whole terminal window.

3240
03:11:36,960 --> 03:11:38,960
And I, that's my go-to for everything.

3241
03:11:38,960 --> 03:11:41,680
It just shuts my entire window instantly,

3242
03:11:41,680 --> 03:11:43,920
and it's just as easy to type.

3243
03:11:43,920 --> 03:11:45,600
But I don't always have Tmux available,

3244
03:11:45,600 --> 03:11:48,000
so it's good to know how to do that.

3245
03:11:48,720 --> 03:11:54,880
And, and so, it's so back to our, our exercise.

3246
03:11:57,360 --> 03:11:58,400
Yeah, there's all the other stuff.

3247
03:12:01,040 --> 03:12:03,520
Looks like we got a lot of random crap running right now, so.

3248
03:12:04,400 --> 03:12:08,960
All right, so here is our vashrc file.

3249
03:12:11,680 --> 03:12:12,800
Yeah, I'm not using control alt.

3250
03:12:14,080 --> 03:12:14,960
I need a TTY.

3251
03:12:16,160 --> 03:12:16,480
No.

3252
03:12:18,320 --> 03:12:19,760
No, I'm not, not a fan of that.

3253
03:12:20,320 --> 03:12:22,000
I guess you could do that, but I'm not a fan.

3254
03:12:22,640 --> 03:12:26,080
So stdty noise is disabled control s accidental terminal stops.

3255
03:12:26,080 --> 03:12:27,200
So if you don't do that,

3256
03:12:27,200 --> 03:12:31,120
then it will actually send control s to this,

3257
03:12:31,120 --> 03:12:33,120
to the, the, the program.

3258
03:12:33,120 --> 03:12:35,760
And in the case of bash,

3259
03:12:35,760 --> 03:12:39,280
that makes an interactive backwards search,

3260
03:12:39,280 --> 03:12:42,080
which is something I don't normally do, but, but,

3261
03:12:42,080 --> 03:12:43,360
and frankly, I didn't do probably

3262
03:12:43,360 --> 03:12:46,080
because this was never a set in my vashrc before.

3263
03:12:47,040 --> 03:12:50,000
So that's a, quite a bit on that one, but that'll help you out.

3264
03:12:50,000 --> 03:12:50,640
We're halfway through.

3265
03:12:50,640 --> 03:12:52,480
We're going to go through this fast history control.

3266
03:12:54,640 --> 03:12:57,360
So it's super important, my friends,

3267
03:12:57,360 --> 03:12:59,520
that you increase your history file size.

3268
03:13:01,760 --> 03:13:07,040
And for lots of reasons, we'll get into history and his depend.

3269
03:13:08,080 --> 03:13:09,920
The shot of history pen, what this does

3270
03:13:09,920 --> 03:13:13,200
is it causes your history to constantly get added to

3271
03:13:13,200 --> 03:13:14,960
instead of resetting it every time you log in.

3272
03:13:16,240 --> 03:13:18,480
Set that show causes your history to be editable

3273
03:13:18,480 --> 03:13:20,000
as if it's a big VI file.

3274
03:13:20,720 --> 03:13:25,120
So my, I escape and then I'm pushing up and down J and K.

3275
03:13:25,120 --> 03:13:26,240
I'm going up and down.

3276
03:13:26,240 --> 03:13:30,320
I can look through anything in my entire shell history with a slash.

3277
03:13:30,320 --> 03:13:32,320
So I don't need to have completion for this.

3278
03:13:32,320 --> 03:13:33,600
And if I wanted to, I could do it.

3279
03:13:33,600 --> 03:13:35,600
I, I prefer this because my,

3280
03:13:35,600 --> 03:13:37,280
it turns my history into,

3281
03:13:37,280 --> 03:13:42,640
in a huge VI file to which I have one line of visibility.

3282
03:13:43,440 --> 03:13:46,000
And since my go to is using slash for things,

3283
03:13:46,000 --> 03:13:48,320
anyway, and then I can just N, N, N, N, N,

3284
03:13:48,320 --> 03:13:50,880
and find all the Docker things or capital N, N, N, N, N,

3285
03:13:50,880 --> 03:13:52,640
or dot and then go to the right thing.

3286
03:13:53,360 --> 03:13:54,960
I use it constantly.

3287
03:13:54,960 --> 03:13:56,400
I use, I use that constantly.

3288
03:13:56,400 --> 03:13:58,240
I don't use anything else.

3289
03:13:59,440 --> 03:14:01,360
I think it's kind of silly to,

3290
03:14:01,360 --> 03:14:03,280
to use some of the other options that are out there.

3291
03:14:04,320 --> 03:14:06,640
I'm able to pull up stuff from months ago

3292
03:14:07,280 --> 03:14:09,200
by just typing slash whatever and it'll pull it up.

3293
03:14:10,160 --> 03:14:12,160
And I like it more because it's explicit.

3294
03:14:12,160 --> 03:14:13,600
It does take a few more keystrokes.

3295
03:14:14,400 --> 03:14:17,600
I really, really don't like command line history,

3296
03:14:18,240 --> 03:14:19,760
things like, like all my z-show

3297
03:14:19,760 --> 03:14:21,760
that try to guess what you want to do.

3298
03:14:21,760 --> 03:14:24,400
And they're constantly trying to help you out by hitting tab.

3299
03:14:24,400 --> 03:14:25,520
Drives me insane.

3300
03:14:26,880 --> 03:14:28,000
I, I don't like that.

3301
03:14:28,000 --> 03:14:29,520
I'm a more of a precise guy.

3302
03:14:29,520 --> 03:14:31,440
I want to put slash and I want to know exactly

3303
03:14:31,440 --> 03:14:34,800
what I'm looking for so that I can find it.

3304
03:14:34,800 --> 03:14:36,560
So if I did something as rude, I can go look it up.

3305
03:14:37,120 --> 03:14:38,720
By the way, this is another reason

3306
03:14:38,720 --> 03:14:42,000
that I use command line links searching

3307
03:14:42,000 --> 03:14:45,040
because my command line history becomes my search history.

3308
03:14:45,920 --> 03:14:46,800
Let me say that again.

3309
03:14:47,600 --> 03:14:50,240
If you learn how to do command line text searches,

3310
03:14:50,880 --> 03:14:55,840
your command line search history becomes your web search history.

3311
03:14:56,640 --> 03:14:58,240
At least when it comes to research

3312
03:14:58,240 --> 03:15:00,240
that you don't really care about, you know,

3313
03:15:00,240 --> 03:15:02,240
even if I need pictures or something,

3314
03:15:02,240 --> 03:15:06,560
I will do the initial like location of those pictures from here.

3315
03:15:06,560 --> 03:15:09,600
And then I'll go to the URL with the dot or whatever.

3316
03:15:09,600 --> 03:15:12,160
And I'll open a graphic web browser and look at the image.

3317
03:15:12,960 --> 03:15:13,840
Much more efficient.

3318
03:15:13,840 --> 03:15:15,120
We'll talk about that more when we did links.

3319
03:15:15,120 --> 03:15:16,240
We already did links a little bit.

3320
03:15:16,240 --> 03:15:17,440
We'll come back to it.

3321
03:15:17,440 --> 03:15:19,440
So, but that's another reason I did that.

3322
03:15:20,080 --> 03:15:23,360
I also do, you know, my Zettle Castings when I create them,

3323
03:15:23,360 --> 03:15:24,320
I use the term.

3324
03:15:24,320 --> 03:15:27,040
So I use my history for everything.

3325
03:15:27,840 --> 03:15:30,960
And I don't use, you know, dollar, dollar, I mean,

3326
03:15:30,960 --> 03:15:33,040
or bang, bang or whatever people use.

3327
03:15:33,040 --> 03:15:35,280
I don't need it because I can just go up into history.

3328
03:15:35,280 --> 03:15:36,400
It's like faster.

3329
03:15:36,400 --> 03:15:39,120
So, so that's my take on that.

3330
03:15:39,120 --> 03:15:39,840
You can go look at them.

3331
03:15:40,800 --> 03:15:43,120
There is another option here that you can set that

3332
03:15:44,480 --> 03:15:45,680
is a little more complicated,

3333
03:15:45,680 --> 03:15:52,320
but you can put a command inside of your dynamically evaluated prompt

3334
03:15:53,040 --> 03:15:56,000
that will cause your history to update

3335
03:15:57,680 --> 03:16:02,480
as each time your prompt displays,

3336
03:16:02,480 --> 03:16:04,240
it will update the last history.

3337
03:16:04,880 --> 03:16:06,800
And that's more efficient.

3338
03:16:07,600 --> 03:16:09,760
It confuses you though if you have multiple terminals on,

3339
03:16:09,760 --> 03:16:12,880
right, because you'll maybe have another terminal

3340
03:16:12,880 --> 03:16:15,920
and then now your history and you go up in the other terminal.

3341
03:16:15,920 --> 03:16:17,520
And logically you're thinking you're going to go get

3342
03:16:17,520 --> 03:16:18,560
to that last command you were at

3343
03:16:18,560 --> 03:16:19,760
and you ended up going to the last command

3344
03:16:19,760 --> 03:16:21,360
that was entered in another terminal.

3345
03:16:22,000 --> 03:16:25,600
So I don't like that, but that's the trick a lot of people do.

3346
03:16:27,840 --> 03:16:30,480
You can set, this is me building my prompt.

3347
03:16:31,360 --> 03:16:33,120
I am not going to explain this.

3348
03:16:33,120 --> 03:16:37,280
This is me proving to myself into the world

3349
03:16:37,280 --> 03:16:39,280
that you don't need fancy prompts.

3350
03:16:39,280 --> 03:16:43,200
This gives you a prompt that will automatically

3351
03:16:43,200 --> 03:16:44,880
wrap to two lines.

3352
03:16:46,480 --> 03:16:47,440
History dash A, yeah,

3353
03:16:47,440 --> 03:16:49,200
if you want to put history dash A in there, you can do that.

3354
03:16:50,000 --> 03:16:51,760
I don't particularly like that,

3355
03:16:51,760 --> 03:16:53,040
but if you want to do that,

3356
03:16:53,040 --> 03:16:55,360
it just makes your history update

3357
03:16:55,360 --> 03:16:56,640
no matter what terminal you're on.

3358
03:16:57,680 --> 03:17:00,080
And I, again, I like having,

3359
03:17:00,640 --> 03:17:03,360
so my history doesn't update until,

3360
03:17:05,520 --> 03:17:07,520
for everything until the terminal dies.

3361
03:17:07,520 --> 03:17:08,640
If that terminal dies,

3362
03:17:08,640 --> 03:17:11,200
it writes everything that that terminal ever did

3363
03:17:11,200 --> 03:17:12,800
to my master history file.

3364
03:17:12,800 --> 03:17:15,840
Otherwise it's just available to that terminal only.

3365
03:17:15,840 --> 03:17:17,680
I'm talking about Tmux window.

3366
03:17:17,680 --> 03:17:21,840
And then, but if I, if I want all that stuff to be available,

3367
03:17:21,840 --> 03:17:23,920
I just have to close that pane and then boom,

3368
03:17:23,920 --> 03:17:26,240
it gets all written to the history file and go get it.

3369
03:17:26,240 --> 03:17:27,440
And I prefer that myself.

3370
03:17:27,760 --> 03:17:29,280
I don't like being surprised

3371
03:17:29,280 --> 03:17:31,520
by having edited something like,

3372
03:17:31,520 --> 03:17:33,120
usually when I'm opening a new window,

3373
03:17:33,120 --> 03:17:34,800
it's because I want to do something really temporarily.

3374
03:17:34,800 --> 03:17:35,840
I want to go look at something.

3375
03:17:35,840 --> 03:17:39,040
I don't want it to screw up the history of my other pane.

3376
03:17:39,680 --> 03:17:42,640
And so I don't like history dash A in the prompt command,

3377
03:17:42,640 --> 03:17:45,200
personally. A lot of people do it though.

3378
03:17:45,200 --> 03:17:48,880
All right, so down here I have my prompt command.

3379
03:17:49,840 --> 03:17:52,720
Again, as I said, the prompt command is,

3380
03:17:52,720 --> 03:17:54,480
does one, you don't need to export this, by the way,

3381
03:17:54,480 --> 03:17:56,160
because it's not used by anything else.

3382
03:17:56,160 --> 03:17:59,120
The prompt command environment variable is very special,

3383
03:17:59,120 --> 03:18:03,600
and it will execute or eval whatever the string is

3384
03:18:03,600 --> 03:18:06,080
every time you enter a command.

3385
03:18:07,040 --> 03:18:09,840
And it can slow things down, but by doing that,

3386
03:18:09,840 --> 03:18:11,600
I've written this kind of fun little script

3387
03:18:11,600 --> 03:18:16,800
that rebuilds my prompt, depending on the size and where I am.

3388
03:18:16,800 --> 03:18:19,520
So if I have a short name like this,

3389
03:18:19,520 --> 03:18:21,200
it puts it all on the same.

3390
03:18:21,200 --> 03:18:24,960
If I get kind of down low into the middle,

3391
03:18:25,040 --> 03:18:26,560
user local bin.

3392
03:18:27,840 --> 03:18:29,360
It's just usually still using bin.

3393
03:18:30,560 --> 03:18:32,400
I think only if I get,

3394
03:18:32,400 --> 03:18:34,160
I probably need to get into GitHub directory.

3395
03:18:35,120 --> 03:18:36,720
If the, there we go.

3396
03:18:36,720 --> 03:18:38,480
So if I want to show my GitHub,

3397
03:18:38,480 --> 03:18:40,000
or I want to show what branch I'm in,

3398
03:18:41,040 --> 03:18:42,320
I was going to detect on CD.

3399
03:18:44,160 --> 03:18:45,440
Did I remove that?

3400
03:18:45,440 --> 03:18:46,080
I hope I didn't.

3401
03:18:47,840 --> 03:18:50,640
Yeah, I'm still in main right now, so it's not showing it.

3402
03:18:50,640 --> 03:18:52,480
At one point I had it showing like,

3403
03:18:52,480 --> 03:18:53,680
what my current directory was,

3404
03:18:53,680 --> 03:18:55,520
and I, that's not there anymore for some reason.

3405
03:18:56,640 --> 03:18:57,520
I'll have to go fix that.

3406
03:18:57,520 --> 03:18:59,200
But it was, you know,

3407
03:18:59,200 --> 03:19:02,160
I'll show you what branch you're on and that kind of thing.

3408
03:19:02,160 --> 03:19:05,440
And it wraps automatically if this number count

3409
03:19:05,440 --> 03:19:08,640
is past a certain point and it does the double line.

3410
03:19:09,440 --> 03:19:11,120
So you can have fun with your own prompt.

3411
03:19:11,120 --> 03:19:12,560
I'm not going to go there.

3412
03:19:13,520 --> 03:19:15,600
Yeah, but my B is not working for some reason.

3413
03:19:15,600 --> 03:19:17,600
Oh, maybe it's because I'm a master.

3414
03:19:19,520 --> 03:19:21,520
Yeah, if I'm a master, it doesn't look like it.

3415
03:19:21,520 --> 03:19:22,320
Well, maybe not me.

3416
03:19:22,320 --> 03:19:24,720
It doesn't look like it's working right now at all.

3417
03:19:24,720 --> 03:19:25,520
Should I take it out?

3418
03:19:26,560 --> 03:19:27,520
I might have taken it out.

3419
03:19:30,240 --> 03:19:32,320
Double, short, where's B?

3420
03:19:32,320 --> 03:19:32,880
B is there.

3421
03:19:35,040 --> 03:19:36,400
B equals master.

3422
03:19:36,400 --> 03:19:37,920
If B equals master or B equals main,

3423
03:19:39,680 --> 03:19:43,920
that, that is incorrect, I think.

3424
03:19:46,000 --> 03:19:47,120
I have a bug.

3425
03:19:49,200 --> 03:19:50,080
I do have a bug.

3426
03:19:52,720 --> 03:19:53,920
I'll have to go figure it out.

3427
03:19:53,920 --> 03:19:54,240
Anyway,

3428
03:19:59,120 --> 03:20:00,960
I don't know where my B is not showing up.

3429
03:20:02,400 --> 03:20:03,120
Nope, it's not.

3430
03:20:03,120 --> 03:20:04,160
I'll have to fix it another day.

3431
03:20:05,360 --> 03:20:06,160
I don't know where it went.

3432
03:20:06,160 --> 03:20:08,160
I actually didn't notice that that was broken.

3433
03:20:08,160 --> 03:20:10,320
It used to show main and blah, blah, blah, blah, blah, blah,

3434
03:20:11,440 --> 03:20:14,080
but somehow I broke it and I'll go figure it out.

3435
03:20:14,080 --> 03:20:15,200
It's kind of fun though.

3436
03:20:15,200 --> 03:20:16,240
This is the kind of thing, you know,

3437
03:20:16,240 --> 03:20:19,200
you blow like an evening on just having fun with.

3438
03:20:19,920 --> 03:20:21,200
These are all the colors, by the way.

3439
03:20:23,280 --> 03:20:24,240
And stuff.

3440
03:20:24,960 --> 03:20:25,840
I'm going to skip this though.

3441
03:20:25,840 --> 03:20:26,960
I'm spending too much time on it.

3442
03:20:27,680 --> 03:20:29,040
All right, so keyboard.

3443
03:20:30,640 --> 03:20:33,760
This is where I map my keyboard.

3444
03:20:33,760 --> 03:20:37,040
This only works on a system where I can actually map it.

3445
03:20:38,320 --> 03:20:40,640
It says 6K, XK, B map.

3446
03:20:40,640 --> 03:20:42,160
This doesn't work on a virtual machine.

3447
03:20:43,360 --> 03:20:46,160
So, I mean, I don't think it does anyway.

3448
03:20:46,160 --> 03:20:46,720
Let me try.

3449
03:20:52,560 --> 03:20:53,840
Yeah, it's not working right now.

3450
03:20:53,840 --> 03:20:55,520
It only works if you have a hardware.

3451
03:20:55,520 --> 03:20:56,000
Oh boy.

3452
03:20:57,520 --> 03:20:58,320
Yeah, I see what I did.

3453
03:20:58,960 --> 03:21:00,880
So, that was me remapping Caps Lock.

3454
03:21:02,400 --> 03:21:05,680
It only works if you don't, if you have access to the hardware.

3455
03:21:06,480 --> 03:21:08,640
And I don't in my virtual machine.

3456
03:21:08,640 --> 03:21:11,520
It would be interesting to find out a good way to get this to work.

3457
03:21:12,800 --> 03:21:14,560
Oh, it's looking for the display variable, that's why.

3458
03:21:15,360 --> 03:21:17,440
This only works if it's an X thing.

3459
03:21:17,440 --> 03:21:19,280
So, it probably wouldn't work with Wayland either, I don't know.

3460
03:21:20,240 --> 03:21:23,440
But if you had, it's because it's a hardware OS mapping.

3461
03:21:25,840 --> 03:21:28,080
You know, I don't know.

3462
03:21:28,080 --> 03:21:31,200
And I don't think I even have a display variable set, actually.

3463
03:21:32,000 --> 03:21:32,880
Let me go check.

3464
03:21:32,880 --> 03:21:39,520
Display is the thing that X uses to display stuff.

3465
03:21:39,520 --> 03:21:40,480
Yeah, my display's empty.

3466
03:21:41,440 --> 03:21:44,160
If I turn on, so I'm not even using X.

3467
03:21:44,160 --> 03:21:48,160
So, this doesn't work unless you have like a window manager.

3468
03:21:48,160 --> 03:21:49,360
And I don't, I'm just a terminal.

3469
03:21:50,400 --> 03:21:51,440
So, you can't remap it.

3470
03:21:52,080 --> 03:21:53,120
You can't remap Caps Lock.

3471
03:21:53,120 --> 03:21:54,320
There's probably some other way.

3472
03:21:54,320 --> 03:21:57,440
But that's, I added that when I was doing

3473
03:21:58,640 --> 03:22:01,120
Papa Weston Min on the desktop when I stopped.

3474
03:22:01,120 --> 03:22:07,360
So, I mean, I'd be interested to see if this actually works

3475
03:22:07,360 --> 03:22:08,000
all by itself.

3476
03:22:08,000 --> 03:22:08,400
Let's try.

3477
03:22:09,280 --> 03:22:10,560
I can run this command from here.

3478
03:22:11,760 --> 03:22:13,120
No, we need to export that though.

3479
03:22:13,120 --> 03:22:14,320
Let's go grab it.

3480
03:22:14,320 --> 03:22:14,800
Oopsie.

3481
03:22:18,320 --> 03:22:20,160
I'm kind of curious to see if it'll even work.

3482
03:22:22,400 --> 03:22:24,400
X and RWX break things.

3483
03:22:27,440 --> 03:22:28,800
I don't think it's going to work.

3484
03:22:30,400 --> 03:22:31,360
Load keys could do it.

3485
03:22:31,360 --> 03:22:34,880
Yeah, there's, yeah, I could get something from windows

3486
03:22:34,880 --> 03:22:36,400
that they would take it over.

3487
03:22:37,680 --> 03:22:38,240
You know what I mean?

3488
03:22:41,840 --> 03:22:44,240
Yeah, I'm pretty sure I could do something.

3489
03:22:45,200 --> 03:22:50,880
Now, it doesn't work because it's a hardware thing, right?

3490
03:22:50,880 --> 03:22:51,760
It's a hardware interface.

3491
03:22:52,480 --> 03:22:53,440
It just messes me up.

3492
03:22:53,440 --> 03:22:55,440
I have mixed feelings about that anyway.

3493
03:22:55,440 --> 03:22:58,000
I've gone back, just so you know, I've gone back

3494
03:22:58,000 --> 03:22:59,600
to using control of bracket for everything

3495
03:22:59,600 --> 03:23:02,800
because every fucking, every keyboard works that has it.

3496
03:23:03,440 --> 03:23:05,520
So, I don't mess with this at all.

3497
03:23:05,520 --> 03:23:08,320
In fact, I should probably disable this.

3498
03:23:08,320 --> 03:23:16,400
There's something like only works if you have X

3499
03:23:16,400 --> 03:23:24,720
and are using graphics, graphic Linux terminal.

3500
03:23:27,440 --> 03:23:28,320
And I don't.

3501
03:23:28,320 --> 03:23:29,360
I use the terminal.

3502
03:23:29,360 --> 03:23:31,200
So, I'm not a fan.

3503
03:23:31,200 --> 03:23:34,960
Control left bracket is exactly the same as escape.

3504
03:23:34,960 --> 03:23:36,160
It's easier to hit than escape.

3505
03:23:36,720 --> 03:23:38,640
And it doesn't require any modifications

3506
03:23:38,640 --> 03:23:39,520
that are messing around.

3507
03:23:39,520 --> 03:23:41,200
When we get to the VI stuff, there's a lot of people

3508
03:23:41,200 --> 03:23:42,880
who remap VI keys.

3509
03:23:42,880 --> 03:23:43,760
I hate doing that.

3510
03:23:44,640 --> 03:23:45,600
I tried it for a while.

3511
03:23:45,600 --> 03:23:48,640
I tried to use FG as a thing.

3512
03:23:48,640 --> 03:23:49,920
I think I still have it mapped here.

3513
03:23:51,680 --> 03:23:52,560
No, I turned it off.

3514
03:23:53,840 --> 03:23:54,480
I turned it off.

3515
03:23:54,480 --> 03:23:56,960
If you type two letters really fast,

3516
03:23:58,080 --> 03:24:00,080
it'll operate the same as escape,

3517
03:24:00,080 --> 03:24:02,160
but it really messes your muscle memory up.

3518
03:24:03,200 --> 03:24:04,560
Control left bracket does not.

3519
03:24:04,560 --> 03:24:06,720
So, we'll talk about that when we get to VI later.

3520
03:24:06,720 --> 03:24:08,080
So, here's all my aliases.

3521
03:24:09,200 --> 03:24:11,520
We're about, we're almost done here, I promise.

3522
03:24:13,600 --> 03:24:15,600
We're not going to talk about any of the command line

3523
03:24:15,600 --> 03:24:19,440
search aliases until we start talking about links.

3524
03:24:19,440 --> 03:24:22,080
And we will cover that probably next week, it looks like.

3525
03:24:23,520 --> 03:24:25,440
But this is how I do all my command line searching.

3526
03:24:25,440 --> 03:24:26,960
I call program well duck.

3527
03:24:26,960 --> 03:24:30,000
And that opens up a text based web browser

3528
03:24:30,000 --> 03:24:33,440
that opens up a search over the web, et cetera.

3529
03:24:33,440 --> 03:24:36,320
The unalias dash A, that clears out any aliases

3530
03:24:36,320 --> 03:24:38,000
that may have been previously said.

3531
03:24:38,000 --> 03:24:39,440
And then I reset all my new ones.

3532
03:24:40,320 --> 03:24:44,640
As I said before, aliases are generally a bad idea

3533
03:24:45,840 --> 03:24:50,320
if you want the output of the thing that comes from the alias.

3534
03:24:51,040 --> 03:24:51,840
Because you can't use them.

3535
03:24:51,840 --> 03:24:53,840
So, see here, free dash H, right?

3536
03:24:54,400 --> 03:24:55,440
Let me give you an example.

3537
03:24:55,440 --> 03:24:58,720
So, free dash H, I'm going to put this in my thing here.

3538
03:24:59,680 --> 03:25:06,560
No, no one to use aliases and when to not.

3539
03:25:07,280 --> 03:25:12,720
All right, so, okay, so free dash H, right?

3540
03:25:12,720 --> 03:25:15,280
That's a thing that, yeah, I want to use that.

3541
03:25:15,280 --> 03:25:18,320
Free, it gives me human readable, right?

3542
03:25:18,320 --> 03:25:20,800
If I, the real free with the slash in front, right?

3543
03:25:20,800 --> 03:25:22,320
It gives me this thing I can't read.

3544
03:25:23,200 --> 03:25:25,040
And so that's nice, right?

3545
03:25:25,040 --> 03:25:25,520
I want that.

3546
03:25:26,080 --> 03:25:29,120
Now, if I go edit a file and I want the same thing.

3547
03:25:30,160 --> 03:25:33,520
So, I'm going to use my handy dandy, you know,

3548
03:25:33,520 --> 03:25:35,200
bang bang, which you now know, right?

3549
03:25:35,200 --> 03:25:36,880
And I type free, what am I going to get?

3550
03:25:38,400 --> 03:25:40,400
I get the non-aliased version.

3551
03:25:41,280 --> 03:25:47,120
And that, my friends, is why aliases are not the best option

3552
03:25:48,320 --> 03:25:49,920
for certain things.

3553
03:25:49,920 --> 03:25:53,040
Now, if I, so, you know, let's go back here.

3554
03:25:54,000 --> 03:25:58,240
I want to use aliases, functions, or scripts.

3555
03:26:00,000 --> 03:26:01,040
Oh, I already have that up here.

3556
03:26:03,520 --> 03:26:05,600
I want to use an alias function or a script.

3557
03:26:05,600 --> 03:26:07,440
I already have it up there, okay.

3558
03:26:07,440 --> 03:26:09,200
So, but I must be, I must like this.

3559
03:26:09,200 --> 03:26:11,440
So, let me show you another option here.

3560
03:26:11,440 --> 03:26:16,080
So, if I comment this guy out, or if I un-set that or whatever,

3561
03:26:16,960 --> 03:26:20,400
let's just for grins, let's make this into a function.

3562
03:26:20,400 --> 03:26:24,080
Okay, so we're going to say free, and we're going to take over,

3563
03:26:24,080 --> 03:26:28,960
you know, whatever it is, and export-f free, right?

3564
03:26:29,680 --> 03:26:34,480
And then we're going to say free-h, and we'll pass it any

3565
03:26:35,120 --> 03:26:37,760
potential arguments that are there, okay.

3566
03:26:37,760 --> 03:26:40,160
So, I now want to use that.

3567
03:26:41,120 --> 03:26:42,960
I can do that up here.

3568
03:26:42,960 --> 03:26:47,360
So, I can say that I want to use this.

3569
03:26:47,360 --> 03:26:52,480
I'm going to say exec bash-l to reload.

3570
03:26:53,360 --> 03:26:55,040
Let's see what my free is.

3571
03:26:55,040 --> 03:27:00,640
So, my free is a function now, and this is a recap of what's the difference, right?

3572
03:27:00,640 --> 03:27:04,240
So, if I go into temp foo now, so what do you think is going to happen?

3573
03:27:05,600 --> 03:27:08,080
Actually, I'm already in temp foo, I thought I was so myself.

3574
03:27:08,080 --> 03:27:10,960
What happens, what do you think is going to happen when I do bang bang free?

3575
03:27:12,240 --> 03:27:13,280
Is it going to print it or not?

3576
03:27:15,920 --> 03:27:16,480
Anybody?

3577
03:27:16,480 --> 03:27:18,880
Well, let's see if you can guess right now what you think is going to happen.

3578
03:27:22,080 --> 03:27:25,600
I don't use tilde for anything, because I just use cd.

3579
03:27:30,720 --> 03:27:35,840
Yeah, so, well, that was bad.

3580
03:27:39,440 --> 03:27:40,240
That was really bad.

3581
03:27:42,160 --> 03:27:43,040
Why isn't that working?

3582
03:27:44,000 --> 03:27:46,960
I must have my free waiting on input somehow.

3583
03:27:52,480 --> 03:27:53,200
Oh, you know why?

3584
03:27:55,440 --> 03:27:59,200
Yeah, free is a function.

3585
03:28:01,600 --> 03:28:08,080
Here, I think it's because I think it's calling itself, actually.

3586
03:28:08,080 --> 03:28:13,760
Yeah, let me, oh, right, right, right, right, right, right, right, never mind.

3587
03:28:15,440 --> 03:28:18,560
Dash free, dash eight, oh, I did it wrong.

3588
03:28:18,560 --> 03:28:19,680
Okay, here we go.

3589
03:28:19,680 --> 03:28:20,160
There we go.

3590
03:28:20,800 --> 03:28:22,240
I did it wrong, I'm sorry.

3591
03:28:25,440 --> 03:28:26,560
Isn't slash nice?

3592
03:28:28,240 --> 03:28:31,520
So, type free, free is make sure it works.

3593
03:28:31,520 --> 03:28:32,880
It's not working, god damn it.

3594
03:28:33,520 --> 03:28:41,200
I think, you know what, it's doing an infinite thing and my computer's going to crash here.

3595
03:28:45,920 --> 03:28:47,280
I'm so bad, I'm so stupid.

3596
03:28:47,280 --> 03:28:49,040
Okay, there's a couple of ways you can do this.

3597
03:28:49,040 --> 03:28:50,000
I thought slash worked.

3598
03:28:51,040 --> 03:28:52,640
I've used that before, I swear I have.

3599
03:28:52,640 --> 03:28:55,120
Anyway, so let's do this instead.

3600
03:28:55,120 --> 03:29:00,480
Let's do command dash v free, which I know will work.

3601
03:29:01,440 --> 03:29:03,120
Better, damn well, work.

3602
03:29:04,000 --> 03:29:05,200
You better damn well work.

3603
03:29:10,720 --> 03:29:12,480
All right, so let's try this one now.

3604
03:29:12,480 --> 03:29:13,760
So let's try that one free.

3605
03:29:16,720 --> 03:29:18,800
I might, you know what, I might have to do witch free, actually.

3606
03:29:19,840 --> 03:29:20,800
Yeah, I think I do have the witch.

3607
03:29:24,400 --> 03:29:28,720
Or I don't, maybe the problem is I'm trying to name it the same thing, which is dumb.

3608
03:29:31,440 --> 03:29:32,880
Vash, at least it's Vubar.

3609
03:29:34,400 --> 03:29:37,040
Yeah, I could do that, but I want to break things.

3610
03:29:39,280 --> 03:29:40,640
No, it's not doing it.

3611
03:29:40,640 --> 03:29:41,440
It has to be witch.

3612
03:29:42,880 --> 03:29:45,040
It has to be witch because that's the one that's in the path.

3613
03:29:46,320 --> 03:29:46,720
Yeah.

3614
03:29:50,160 --> 03:29:50,400
So,

3615
03:29:54,960 --> 03:29:58,960
do, do, do, do, do, do, I'll get it, I promise.

3616
03:30:01,440 --> 03:30:02,320
Time free.

3617
03:30:04,720 --> 03:30:05,920
That's because it's the same name.

3618
03:30:08,160 --> 03:30:08,720
There we go.

3619
03:30:08,720 --> 03:30:10,720
Okay, that's what I wanted to show you.

3620
03:30:11,840 --> 03:30:12,560
Well, you learned something.

3621
03:30:12,560 --> 03:30:13,840
You learned three ways not to do it.

3622
03:30:15,040 --> 03:30:18,720
Okay, so is that inside a script?

3623
03:30:18,720 --> 03:30:19,920
Possibly, yeah.

3624
03:30:20,720 --> 03:30:24,480
But I don't want, I wouldn't, I wouldn't want to do it that way.

3625
03:30:24,480 --> 03:30:26,000
That's like way too much hassle.

3626
03:30:26,800 --> 03:30:30,240
No, I mean, the whole point of this, of using bash command line stuff,

3627
03:30:30,320 --> 03:30:33,280
is I don't want to think about it, right?

3628
03:30:33,280 --> 03:30:37,440
I want to type bang bang free, and I want it to be what I want, and now it is.

3629
03:30:39,760 --> 03:30:42,080
Why did the function work, and why did the alias not work?

3630
03:30:42,080 --> 03:30:43,840
I want you to take a moment to think about that.

3631
03:30:46,320 --> 03:30:48,080
Why did the alias not work?

3632
03:30:50,960 --> 03:30:54,560
And I think, Mosse, I think you were the one who actually tracked this down for us,

3633
03:30:54,560 --> 03:30:58,640
and we figured out a way to export aliases so they actually work in sub-processes,

3634
03:30:58,640 --> 03:31:02,240
sub-shells specifically, not sub-processes, sub-shells.

3635
03:31:03,360 --> 03:31:05,920
And there is another reason for this too, okay?

3636
03:31:08,640 --> 03:31:13,120
So there is yet another situation that we're not going to hit until we use go.

3637
03:31:14,400 --> 03:31:21,440
But this method that I use will not work if the program that wants to run it

3638
03:31:22,400 --> 03:31:28,960
is going to use an exec syscall, because this only works with bash shells.

3639
03:31:30,320 --> 03:31:33,600
And I actually ran into that while I was like importing some code over to go.

3640
03:31:34,160 --> 03:31:40,640
So the moral of the story is, if you ever are going to use it in vi,

3641
03:31:41,600 --> 03:31:43,520
you're more likely to be able to use a function.

3642
03:31:44,480 --> 03:31:50,800
But in general, it might be better for you to make it as a bonsai subtree command or as a script.

3643
03:31:50,960 --> 03:31:55,760
And the reason for that is because you're going to want to use these things from other executables,

3644
03:31:55,760 --> 03:31:57,920
and sometimes they're not always going to be bash scripts.

3645
03:31:57,920 --> 03:31:59,120
Sometimes they're going to be other things.

3646
03:31:59,120 --> 03:32:00,320
You're going to just want to use that little thing,

3647
03:32:00,320 --> 03:32:03,840
and you're going to want to leverage the whole unix-ness of the whole thing.

3648
03:32:03,840 --> 03:32:09,920
And you can't do that with a bash function, because a bash function can only be executed from bash.

3649
03:32:12,080 --> 03:32:18,080
And if you're running from another executable, it has no idea about bash functions.

3650
03:32:18,960 --> 03:32:23,920
So this kind of thing is the kind of thing that's a small thing,

3651
03:32:23,920 --> 03:32:26,160
but it would actually end up in my bonsai command.

3652
03:32:26,800 --> 03:32:28,160
And I'll show you how I would do that.

3653
03:32:28,160 --> 03:32:33,760
I would go to my main here, and I would add myself another command in here,

3654
03:32:35,200 --> 03:32:38,560
some sort of simple command to do this kind of thing.

3655
03:32:39,600 --> 03:32:42,080
And I mean, I could just do a standard executable.

3656
03:32:43,040 --> 03:32:44,640
I don't know if you want to see that right now or not.

3657
03:32:44,640 --> 03:32:48,720
But I mean, here's the env one that I wrote.

3658
03:32:48,720 --> 03:32:54,240
So this is just a basic command, and it runs the same thing, right?

3659
03:32:54,240 --> 03:32:57,840
And then we could have it call-free and look up the free executable and run it that way.

3660
03:32:59,120 --> 03:33:05,040
And then when I compile that in, then I can just do zenv, path, or whatever,

3661
03:33:05,040 --> 03:33:08,160
and it'll go do this stuff, just like it was in a shell script already.

3662
03:33:09,120 --> 03:33:12,240
Expand aliases, aliases, alias free.

3663
03:33:13,360 --> 03:33:15,120
That doesn't work. I wish it did.

3664
03:33:15,120 --> 03:33:16,480
I wish it did. I've tried that before.

3665
03:33:17,680 --> 03:33:19,600
I have expanded aliases on right now.

3666
03:33:20,560 --> 03:33:24,240
Yeah, it doesn't work because I'm calling it from within a script,

3667
03:33:24,240 --> 03:33:28,080
and it doesn't expand it, unfortunately, at least not consistently.

3668
03:33:28,080 --> 03:33:30,080
And it certainly doesn't do it from an executable.

3669
03:33:30,720 --> 03:33:33,600
So it's not unixi to do this.

3670
03:33:34,160 --> 03:33:36,960
In fact, I have stopped using functions altogether.

3671
03:33:38,080 --> 03:33:40,560
The only time to use a function, I've covered this before,

3672
03:33:40,560 --> 03:33:42,320
but I'm going to cover it again. It's so important.

3673
03:33:42,880 --> 03:33:46,320
The only time I ever use a function, the only time,

3674
03:33:46,880 --> 03:33:51,840
is when I want to do something complex that modifies the existing environment.

3675
03:33:51,840 --> 03:33:56,080
And usually, that means changing the current directory,

3676
03:33:56,080 --> 03:33:58,560
which you cannot do from a sub-shell.

3677
03:33:59,600 --> 03:34:03,120
You can't do it because you need to modify the properties of the existing shell.

3678
03:34:04,240 --> 03:34:06,240
Everything else that is just saving me typing,

3679
03:34:07,120 --> 03:34:09,680
that I really don't care to use in Bash or anything like that,

3680
03:34:10,640 --> 03:34:15,280
turning colors on, changing view, these kind of things,

3681
03:34:15,280 --> 03:34:17,440
this faster versions of clear the screen.

3682
03:34:18,400 --> 03:34:25,440
These are all things that I prefer to do from aliases.

3683
03:34:25,440 --> 03:34:26,640
And that's not a very big list.

3684
03:34:27,280 --> 03:34:29,360
If you say, I'll re-grab Bash Top, whatever.

3685
03:34:30,240 --> 03:34:33,760
And I never, ever depend on an alias to be out of M

3686
03:34:33,760 --> 03:34:34,960
because my fingers remember it.

3687
03:34:36,080 --> 03:34:40,000
So here are some functions, turn less color off.

3688
03:34:41,760 --> 03:34:43,760
I haven't used ENVX in a long time.

3689
03:34:45,760 --> 03:34:47,600
ENVX is kind of nice.

3690
03:34:49,280 --> 03:34:51,760
What it does is it takes a file, parses it up,

3691
03:34:51,760 --> 03:34:54,640
and then sets it in the current environment.

3692
03:34:55,600 --> 03:35:00,880
So if you have a script, it's very dockery,

3693
03:35:00,880 --> 03:35:02,160
but if you have a script or something that

3694
03:35:02,800 --> 03:35:05,120
wants to do significant changes to the current environment

3695
03:35:06,000 --> 03:35:08,560
and then throw them all away, you can use this.

3696
03:35:11,920 --> 03:35:14,400
And I used to put a number of...

3697
03:35:14,400 --> 03:35:19,040
I would have a private .env file that had all my local environment variable sets.

3698
03:35:19,680 --> 03:35:20,320
How's it going?

3699
03:35:21,280 --> 03:35:26,960
And so new from another shell script, another function.

3700
03:35:27,520 --> 03:35:28,720
Again, why do I have it here?

3701
03:35:28,720 --> 03:35:31,120
Because it ends by changing the current directory.

3702
03:35:32,080 --> 03:35:33,120
So I have one like this.

3703
03:35:33,120 --> 03:35:42,080
I have a clone structs, and that what it does is it clones

3704
03:35:45,120 --> 03:35:48,400
my GitHub repo and changes into it.

3705
03:35:49,040 --> 03:35:50,800
So it takes care of a number of things at once.

3706
03:35:51,360 --> 03:35:53,600
That's the kind of thing new from.

3707
03:35:53,600 --> 03:35:59,040
This actually will make a new GitHub repo and change into it.

3708
03:35:59,680 --> 03:36:02,640
This will make me a new Bonsai command and change into it.

3709
03:36:04,000 --> 03:36:07,680
CDZ, this just changes my directory into my Zettlecast

3710
03:36:07,680 --> 03:36:09,840
and then it matches whatever I'm searching for.

3711
03:36:11,280 --> 03:36:13,280
And then I export all those functions kind of on their own.

3712
03:36:14,080 --> 03:36:15,520
Clone is the one I just showed you.

3713
03:36:16,320 --> 03:36:20,800
So clone will clone any GitHub repo by default.

3714
03:36:20,800 --> 03:36:23,360
It assumes you as the user.

3715
03:36:24,400 --> 03:36:29,040
Otherwise it will, if it doesn't have a slash in it,

3716
03:36:29,040 --> 03:36:31,600
it will just, it will take the user so I can clone.

3717
03:36:31,600 --> 03:36:34,000
I do this all the time to like look at stuff, right?

3718
03:36:34,000 --> 03:36:36,080
So who has a GitHub repo?

3719
03:36:36,080 --> 03:36:37,280
You want me to look at?

3720
03:36:37,280 --> 03:36:38,880
Someone give me a GitHub repo to look at.

3721
03:36:38,880 --> 03:36:40,720
And I'll give you a sense of how that works.

3722
03:36:40,720 --> 03:36:41,840
I really love this function.

3723
03:36:41,840 --> 03:36:43,920
This function saves me so much time.

3724
03:36:44,400 --> 03:36:46,160
Of all the functions I have,

3725
03:36:46,160 --> 03:36:48,960
I'd say this is probably my favorite besides the path append.

3726
03:36:50,560 --> 03:36:51,440
And this is original.

3727
03:36:51,440 --> 03:36:52,640
I wrote this one.

3728
03:36:52,640 --> 03:36:54,640
It also grabs all the recursive submodules,

3729
03:36:54,640 --> 03:36:56,080
which is super cool.

3730
03:36:56,080 --> 03:36:58,640
So let's say, and you'll see me use this all the time

3731
03:36:59,200 --> 03:37:00,560
while I'm doing streaming.

3732
03:37:00,560 --> 03:37:02,800
So I say, let's go evaluate that code, right?

3733
03:37:03,760 --> 03:37:04,960
So who wants their code evaluated?

3734
03:37:04,960 --> 03:37:05,280
No one?

3735
03:37:06,800 --> 03:37:09,040
No one brave enough to get their code evaluated right now.

3736
03:37:09,040 --> 03:37:11,520
Okay, so we'll go to GitHub.com.

3737
03:37:11,520 --> 03:37:13,280
Let's go find somebody's random code.

3738
03:37:13,280 --> 03:37:14,080
How about Neo?

3739
03:37:15,200 --> 03:37:16,320
I think we need to find Neo.

3740
03:37:17,200 --> 03:37:17,760
I do.

3741
03:37:17,760 --> 03:37:19,360
I don't even have Neo here right now.

3742
03:37:21,040 --> 03:37:23,440
A while ago, we're wrapping up a YouTube video here,

3743
03:37:23,440 --> 03:37:25,920
but you're welcome to hang tight.

3744
03:37:26,480 --> 03:37:29,200
So the Neo project, Neo smart economy,

3745
03:37:29,200 --> 03:37:30,640
command Neo, Neo Vim, no.

3746
03:37:32,160 --> 03:37:33,280
Neo for J, no.

3747
03:37:35,680 --> 03:37:36,320
Oh my God.

3748
03:37:37,440 --> 03:37:38,640
Neo matrix.

3749
03:37:38,800 --> 03:37:43,440
I think this is the one.

3750
03:37:44,320 --> 03:37:44,640
Yeah.

3751
03:37:44,640 --> 03:37:48,000
So is that the one?

3752
03:37:48,880 --> 03:37:49,680
No, this is it.

3753
03:37:49,680 --> 03:37:50,480
STW3.

3754
03:37:52,160 --> 03:37:55,040
Can the function take in a path to CDN2?

3755
03:37:56,080 --> 03:37:58,080
No, because I have the standard path for all that.

3756
03:37:58,960 --> 03:38:00,160
You could set that if you wanted to,

3757
03:38:00,160 --> 03:38:01,040
but I don't have that.

3758
03:38:01,680 --> 03:38:03,200
So let's say ST3W.

3759
03:38:03,200 --> 03:38:04,160
I want this, right?

3760
03:38:05,520 --> 03:38:06,240
So copy.

3761
03:38:06,240 --> 03:38:07,120
I'm going to go grab this.

3762
03:38:08,000 --> 03:38:09,840
So I'm going to go clone, paste,

3763
03:38:10,640 --> 03:38:12,640
and that downloaded it.

3764
03:38:12,640 --> 03:38:13,280
I already had it.

3765
03:38:13,280 --> 03:38:14,000
So let's delete it.

3766
03:38:17,120 --> 03:38:18,400
I already had it, I realized.

3767
03:38:18,400 --> 03:38:19,280
So now let's do it.

3768
03:38:19,280 --> 03:38:22,480
So clone, ST3W, it goes and grabs it,

3769
03:38:22,480 --> 03:38:23,680
grabs all the other crystal sub modules,

3770
03:38:23,680 --> 03:38:24,880
puts me right in there,

3771
03:38:24,880 --> 03:38:27,440
and I can get to work looking right at the code right away.

3772
03:38:27,440 --> 03:38:30,240
And I don't have to deal with the command line at all.

3773
03:38:30,240 --> 03:38:31,600
I don't have to go to the web.

3774
03:38:31,600 --> 03:38:32,400
I don't have to do anything.

3775
03:38:35,520 --> 03:38:36,000
Working Vim.

3776
03:38:37,840 --> 03:38:39,600
Well, because it's a sub shell.

3777
03:38:42,160 --> 03:38:44,160
The sub shell is the only run executable things.

3778
03:38:44,160 --> 03:38:46,480
You can get functions to work.

3779
03:38:46,480 --> 03:38:47,680
I showed that just now.

3780
03:38:49,760 --> 03:38:51,600
If you wanted to make it so that it took a path

3781
03:38:51,600 --> 03:38:52,480
into where to the thing,

3782
03:38:52,480 --> 03:38:53,600
yeah, you can modify that one.

3783
03:38:54,320 --> 03:38:54,960
I don't though.

3784
03:38:55,520 --> 03:38:58,720
So if repo equals whatever,

3785
03:39:01,200 --> 03:39:03,760
yeah, user repo equals the HTTPS.

3786
03:39:04,800 --> 03:39:06,080
Oh, look, it looks like,

3787
03:39:06,080 --> 03:39:07,200
oh yeah, takes a repo.

3788
03:39:09,040 --> 03:39:09,520
I don't know.

3789
03:39:09,520 --> 03:39:10,480
I don't think so.

3790
03:39:10,480 --> 03:39:11,760
I think you can actually cause it.

3791
03:39:12,480 --> 03:39:14,320
I think there is a way to make aliases

3792
03:39:14,320 --> 03:39:15,360
propagate to sub shells.

3793
03:39:15,360 --> 03:39:16,000
I know that.

3794
03:39:16,000 --> 03:39:17,680
I just, I don't think it's a good idea

3795
03:39:19,280 --> 03:39:20,960
because it's first of all, it's a bash shell.

3796
03:39:20,960 --> 03:39:22,960
As I said, the executables are always

3797
03:39:22,960 --> 03:39:23,680
going to be the way to go.

3798
03:39:23,680 --> 03:39:25,600
That's why I'm more, you know,

3799
03:39:25,600 --> 03:39:27,760
akin to using a bonsai thing.

3800
03:39:27,760 --> 03:39:30,960
Anyway, so there's that function.

3801
03:39:31,840 --> 03:39:34,320
Okay, so let's talk about completion.

3802
03:39:34,320 --> 03:39:35,520
We're going to go kind of longer tonight,

3803
03:39:35,520 --> 03:39:36,080
but that's okay.

3804
03:39:36,720 --> 03:39:38,880
So this is one of the most important

3805
03:39:38,880 --> 03:39:40,320
topics to cover today.

3806
03:39:40,960 --> 03:39:43,040
And tab completion, you know,

3807
03:39:43,040 --> 03:39:44,240
people laugh at me because,

3808
03:39:44,240 --> 03:39:46,000
because I'm not really a fan of

3809
03:39:46,000 --> 03:39:47,040
completion inside code.

3810
03:39:47,040 --> 03:39:48,240
I could be convinced to use it.

3811
03:39:50,400 --> 03:39:52,640
But, you know, when it comes to,

3812
03:39:56,240 --> 03:39:58,000
how was it, does not exist.

3813
03:39:58,960 --> 03:40:01,280
Did I, did I, mine, mine worked.

3814
03:40:04,000 --> 03:40:05,040
You might need to set some of your

3815
03:40:05,040 --> 03:40:06,480
other environment variables to get it to work.

3816
03:40:07,760 --> 03:40:09,600
Yeah, because it has some other dependencies.

3817
03:40:11,440 --> 03:40:13,360
You know, yeah, mine's there.

3818
03:40:14,640 --> 03:40:15,680
Yeah, you might have to go look at some

3819
03:40:15,680 --> 03:40:17,360
of the other stuff that it has in there.

3820
03:40:17,360 --> 03:40:18,560
So let's talk about completion.

3821
03:40:18,560 --> 03:40:20,000
So what is completion?

3822
03:40:20,000 --> 03:40:23,520
Completion is what allows you to work really fast.

3823
03:40:23,520 --> 03:40:26,800
So, so when I CD into questions,

3824
03:40:27,440 --> 03:40:29,200
I hit tab and I don't have to type all that.

3825
03:40:29,200 --> 03:40:30,800
Can you imagine if that's type that every time?

3826
03:40:31,760 --> 03:40:33,120
And in fact, completion is,

3827
03:40:33,200 --> 03:40:35,680
is to blame for so many like really long names

3828
03:40:35,680 --> 03:40:37,360
because they're just so easy to type, you know,

3829
03:40:38,400 --> 03:40:39,840
and you just hit tab and do whatever.

3830
03:40:39,840 --> 03:40:42,960
Completion is a popular thing in VS Code

3831
03:40:42,960 --> 03:40:44,320
and in other code editors

3832
03:40:44,320 --> 03:40:45,520
and it's been around for a long time.

3833
03:40:46,800 --> 03:40:49,200
But it's also going on the command line.

3834
03:40:49,200 --> 03:40:51,360
And if you have CD path set,

3835
03:40:51,360 --> 03:40:52,880
it will also work for that.

3836
03:40:54,000 --> 03:40:55,440
And so there's, there's a bunch of,

3837
03:40:55,440 --> 03:40:56,800
the way completion works is that the

3838
03:40:56,800 --> 03:40:58,320
bashell and any show really,

3839
03:40:59,680 --> 03:41:01,600
they have something called completion context.

3840
03:41:01,600 --> 03:41:03,280
And when you hit tab, it says,

3841
03:41:03,280 --> 03:41:05,120
okay, let's look at this line

3842
03:41:05,120 --> 03:41:08,800
and let's evaluate what, what the person thinks they want.

3843
03:41:08,800 --> 03:41:10,000
I happen to think completion

3844
03:41:10,000 --> 03:41:13,920
is one of the most effective ways of doing anything.

3845
03:41:13,920 --> 03:41:16,800
I mean, I'm more likely to go ZZ tab, tab

3846
03:41:16,800 --> 03:41:18,000
to see what I can use here

3847
03:41:18,000 --> 03:41:20,960
or go YouTube CTO tab, tab, right?

3848
03:41:22,080 --> 03:41:23,600
Tab, tab to see what,

3849
03:41:23,600 --> 03:41:24,800
ooh, look at all those commands.

3850
03:41:24,800 --> 03:41:26,560
I don't have to read them at all.

3851
03:41:26,560 --> 03:41:27,840
If I don't remember them,

3852
03:41:27,840 --> 03:41:29,440
I can just tab, tab, complete them.

3853
03:41:29,920 --> 03:41:32,240
And people who like tab completion for code,

3854
03:41:32,240 --> 03:41:35,040
coding, coding argue the same point.

3855
03:41:35,040 --> 03:41:37,120
And which is why I think I could be convinced,

3856
03:41:37,120 --> 03:41:38,560
eventually to use, you know,

3857
03:41:38,560 --> 03:41:41,280
COC or some sort of tab completion within my VIM

3858
03:41:42,000 --> 03:41:43,600
or my IDE or something like that.

3859
03:41:43,600 --> 03:41:45,680
In fact, you can type an entire web page

3860
03:41:45,680 --> 03:41:48,160
with like HTML tab in VS code

3861
03:41:48,160 --> 03:41:49,760
and pick from the one you want.

3862
03:41:49,760 --> 03:41:52,400
And this is where people are going with the whole,

3863
03:41:54,400 --> 03:41:56,640
what is this, you know, that AI

3864
03:41:56,640 --> 03:41:58,000
that's doing all the completion,

3865
03:41:58,000 --> 03:41:58,960
which is a different issue,

3866
03:41:58,960 --> 03:42:01,040
which we talked about in questions and conversations

3867
03:42:01,040 --> 03:42:03,680
the other night regarding legality,

3868
03:42:03,680 --> 03:42:06,320
because it's including code that's proprietary

3869
03:42:06,320 --> 03:42:08,240
and could be tainting your code.

3870
03:42:09,600 --> 03:42:12,320
But the concept of completion is a really strong one.

3871
03:42:12,320 --> 03:42:14,880
I think it's really solid, copilot, yeah.

3872
03:42:14,880 --> 03:42:16,800
And then people should learn to use it.

3873
03:42:18,160 --> 03:42:20,960
And unfortunately, a lot of people don't understand

3874
03:42:20,960 --> 03:42:22,720
that you don't have to write a separate script

3875
03:42:22,720 --> 03:42:23,440
to do completion.

3876
03:42:24,320 --> 03:42:27,600
You can actually just enable a program to do completion

3877
03:42:27,600 --> 03:42:32,640
by typing complete-c, you know, build, build or something.

3878
03:42:32,640 --> 03:42:35,920
And you can have the program do its own completion.

3879
03:42:35,920 --> 03:42:37,520
And if you want to get into that stuff

3880
03:42:37,520 --> 03:42:38,800
and you really want to see any of that,

3881
03:42:38,800 --> 03:42:40,480
I've prepared some examples for you.

3882
03:42:40,480 --> 03:42:43,200
You can go read that.

3883
03:42:43,200 --> 03:42:45,040
I don't really want to get into right now,

3884
03:42:45,040 --> 03:42:50,320
but if you go to ArtifactsRob.CMD, is this CMD?

3885
03:42:50,320 --> 03:42:52,240
I mean, it might be Bash example.

3886
03:42:52,240 --> 03:42:54,160
There it is. Bash command example.

3887
03:42:54,160 --> 03:42:57,120
So this has my example in here.

3888
03:42:58,080 --> 03:43:00,480
And it uses Bash completion,

3889
03:43:00,480 --> 03:43:05,440
and then Bonsai uses the same technique for completion using.

3890
03:43:05,440 --> 03:43:08,240
So this also includes documentation generation

3891
03:43:08,800 --> 03:43:12,400
and completion that automatically is detected

3892
03:43:12,400 --> 03:43:15,120
based on any function that begins with x dot.

3893
03:43:15,760 --> 03:43:17,280
If the function begins with x dot,

3894
03:43:17,280 --> 03:43:18,640
it gets completed automatically.

3895
03:43:19,760 --> 03:43:23,840
And a simple version of that is I did with the Ops API recently.

3896
03:43:24,480 --> 03:43:25,920
Oops, Ops API.

3897
03:43:26,800 --> 03:43:28,720
In our dev script here.

3898
03:43:29,840 --> 03:43:31,840
And I took out all the other doc stuff,

3899
03:43:31,840 --> 03:43:34,160
and I just put this here.

3900
03:43:34,160 --> 03:43:36,880
So this is, if you, we talked about this

3901
03:43:36,880 --> 03:43:38,400
in the Bash scripting the other day,

3902
03:43:38,400 --> 03:43:42,560
if you kind of decompile this and understand what it's doing,

3903
03:43:43,200 --> 03:43:44,480
you'll understand a lot about Bash.

3904
03:43:44,480 --> 03:43:48,160
But what it's doing is it's just making it so that this program,

3905
03:43:48,160 --> 03:43:52,720
anything that begins with x dot is automatically tab-tabable.

3906
03:43:52,720 --> 03:43:55,360
And you can type check, tab,

3907
03:43:55,360 --> 03:43:58,000
and get all the stuff that has check with the end, etc.

3908
03:43:58,000 --> 03:43:58,960
So that's completion.

3909
03:44:01,040 --> 03:44:02,400
But in order to enable completion,

3910
03:44:02,400 --> 03:44:03,840
you have to put that in your Bash receive file.

3911
03:44:04,400 --> 03:44:07,120
And up here I have own comp, and this is an array.

3912
03:44:07,120 --> 03:44:09,120
And it's like, these are all of the things

3913
03:44:09,680 --> 03:44:11,920
that provide their own completion.

3914
03:44:11,920 --> 03:44:14,080
So they would be evaluated,

3915
03:44:14,080 --> 03:44:16,480
they would be set up using complete dash capital C,

3916
03:44:17,280 --> 03:44:20,960
which is very minimally documented in the Bash thing.

3917
03:44:20,960 --> 03:44:23,280
So you have to look for programmable completion.

3918
03:44:23,280 --> 03:44:26,400
That's the secret word that will get you to the line

3919
03:44:26,400 --> 03:44:27,120
where you need to be.

3920
03:44:28,160 --> 03:44:31,680
And this will talk to you all about completion ad nauseam.

3921
03:44:31,680 --> 03:44:33,600
Most people check out when they talk about completion

3922
03:44:33,600 --> 03:44:36,800
because there's these, lots of these functions

3923
03:44:36,800 --> 03:44:38,560
that have been created to help you,

3924
03:44:38,560 --> 03:44:40,480
but they actually hinder you in a lot of ways.

3925
03:44:41,760 --> 03:44:46,880
But you see them used extensively in all of these other programs.

3926
03:44:46,880 --> 03:44:50,480
This is my single biggest complaint about Cobra,

3927
03:44:50,480 --> 03:44:55,200
which is a Go library that creates extensive completion

3928
03:44:55,200 --> 03:44:58,240
code scripts that need to be sourced and used.

3929
03:44:58,240 --> 03:45:03,360
And the reason to do this is because ZShell doesn't support

3930
03:45:04,000 --> 03:45:05,120
commands with their own completion,

3931
03:45:05,120 --> 03:45:06,560
which is really unfortunate.

3932
03:45:06,560 --> 03:45:10,240
That is a reason all by itself for me to never use KShell,

3933
03:45:11,200 --> 03:45:13,840
or ZShell or KShell or any variation on it.

3934
03:45:13,840 --> 03:45:18,560
They don't support basic internal completion.

3935
03:45:18,560 --> 03:45:20,320
What would you rather do completion with?

3936
03:45:20,320 --> 03:45:23,280
Some shell script that has to be created to reflect

3937
03:45:23,280 --> 03:45:25,520
the same logic that's already written in Go,

3938
03:45:25,520 --> 03:45:27,600
or something that already can use the Go code

3939
03:45:27,600 --> 03:45:28,720
that you already wrote.

3940
03:45:28,720 --> 03:45:33,840
So the entire reason raison d'être for Balzai,

3941
03:45:34,480 --> 03:45:36,080
I'm going to make a plug for it right now,

3942
03:45:36,080 --> 03:45:39,120
is because of completion and internal documentation

3943
03:45:39,680 --> 03:45:41,680
and all the things that come from that.

3944
03:45:42,960 --> 03:45:43,840
And so you can go look at that,

3945
03:45:43,840 --> 03:45:45,040
but let me give you a sense of this.

3946
03:45:45,040 --> 03:45:45,840
That's what this is doing.

3947
03:45:45,840 --> 03:45:49,040
So this is saying, for all the ones that I already have,

3948
03:45:49,120 --> 03:45:51,280
just do complete-c, because those are the easy ones.

3949
03:45:51,280 --> 03:45:52,080
Those are the cool ones.

3950
03:45:52,080 --> 03:45:53,200
Those are the good ones.

3951
03:45:53,200 --> 03:45:57,200
But the rest of them, we've got to go use its own clunky

3952
03:45:57,200 --> 03:45:58,880
completion type mechanism.

3953
03:45:58,880 --> 03:46:01,200
And most of them have something completion bash.

3954
03:46:01,200 --> 03:46:04,800
That's how you know you're using a Cobra piece of crap,

3955
03:46:04,800 --> 03:46:08,480
because it always has the same thing, at least it's consistent.

3956
03:46:09,520 --> 03:46:11,440
But let me tell you why I think this is crap,

3957
03:46:11,440 --> 03:46:16,400
because if you look at, let's do CubeCTL, right?

3958
03:46:17,360 --> 03:46:21,600
CubeCTL completion, okay?

3959
03:46:22,240 --> 03:46:25,120
Oops, we have to tell it what shell we want, bash.

3960
03:46:25,760 --> 03:46:28,320
All right, so that might not look like much of a big deal,

3961
03:46:28,320 --> 03:46:29,600
right, until you count it.

3962
03:46:31,120 --> 03:46:33,360
All right, so that's 302 lines.

3963
03:46:33,360 --> 03:46:34,640
It's gotten smaller, actually.

3964
03:46:35,600 --> 03:46:37,200
It has gotten smaller, thank God.

3965
03:46:38,000 --> 03:46:39,760
It was much bigger than that before.

3966
03:46:39,760 --> 03:46:43,200
It's 302 lines that have to be evaluated

3967
03:46:43,200 --> 03:46:44,960
every time you run an interactive shell.

3968
03:46:46,960 --> 03:46:49,440
Every time you run an interactive shell.

3969
03:46:50,080 --> 03:46:51,600
And if you want your completion to just be there,

3970
03:46:51,600 --> 03:46:52,400
let's do kind.

3971
03:46:53,840 --> 03:46:59,200
Kind, WC, dash L.

3972
03:47:00,240 --> 03:47:03,200
Oh, whoops, bash.

3973
03:47:06,560 --> 03:47:10,080
1,174 lines.

3974
03:47:12,320 --> 03:47:16,240
Yeah, I mean, they've taken it down a notch

3975
03:47:16,400 --> 03:47:18,800
CubeCTL used to be thousands of lines long.

3976
03:47:18,800 --> 03:47:20,400
It used to be 32,000 lines long.

3977
03:47:21,200 --> 03:47:24,400
32,000, I mean, 320, 321.

3978
03:47:24,400 --> 03:47:26,320
They've fixed it.

3979
03:47:26,320 --> 03:47:27,920
They've dabbed, they've taken it down a notch.

3980
03:47:27,920 --> 03:47:28,400
That's good.

3981
03:47:29,040 --> 03:47:31,120
Probably because everybody was complaining about it.

3982
03:47:31,120 --> 03:47:32,320
Seriously, last time I did this,

3983
03:47:32,320 --> 03:47:34,000
I actually wrote a big thing on Banzai about it.

3984
03:47:35,040 --> 03:47:35,680
I did.

3985
03:47:35,680 --> 03:47:37,920
I wrote a big thing, like reaming him for it.

3986
03:47:39,680 --> 03:47:41,440
And I think they might have fixed it.

3987
03:47:41,440 --> 03:47:42,480
That's actually really good news.

3988
03:47:43,360 --> 03:47:45,440
So here's Banzai.

3989
03:47:46,240 --> 03:47:46,720
There we go.

3990
03:47:48,080 --> 03:47:53,200
So CubeCTL was 12,637 lines last time I checked.

3991
03:47:53,200 --> 03:47:54,000
And now we just checked it.

3992
03:47:54,000 --> 03:47:55,040
It's only 302 now.

3993
03:47:56,080 --> 03:47:57,040
That's really good.

3994
03:47:57,040 --> 03:47:58,160
Pandoc's actually pretty good.

3995
03:47:59,040 --> 03:48:00,640
Yeah, Pandoc does a pretty good job.

3996
03:48:01,920 --> 03:48:03,200
Pandoc has its own thing though.

3997
03:48:03,200 --> 03:48:04,000
Let's check the other ones.

3998
03:48:04,000 --> 03:48:04,880
Let's check Minicube.

3999
03:48:05,760 --> 03:48:08,320
Minicube has, oops, Minitube.

4000
03:48:09,920 --> 03:48:11,120
I don't know how Minicube installed.

4001
03:48:12,080 --> 03:48:14,320
That's why I have the check it out if you haven't.

4002
03:48:15,040 --> 03:48:17,520
Spotify, Kind, Compose, Helm.

4003
03:48:17,520 --> 03:48:18,080
Let's do Helm.

4004
03:48:18,080 --> 03:48:19,120
Helm is trash.

4005
03:48:19,120 --> 03:48:21,680
So the source code is absolute trash.

4006
03:48:23,680 --> 03:48:25,280
I don't have that installed either.

4007
03:48:25,280 --> 03:48:25,680
Damn it.

4008
03:48:28,000 --> 03:48:29,920
Yeah, the rest of them I don't have any of these installed.

4009
03:48:30,880 --> 03:48:31,760
What's Docker like?

4010
03:48:31,760 --> 03:48:33,440
Oh, so Docker, okay.

4011
03:48:33,440 --> 03:48:35,440
So Docker and these other ones are kind of weird.

4012
03:48:36,080 --> 03:48:40,320
You have to actually use their independent completion file

4013
03:48:40,320 --> 03:48:45,120
and then source it if you want to create shortcuts.

4014
03:48:45,120 --> 03:48:46,080
And that's what this is doing.

4015
03:48:46,080 --> 03:48:47,200
This is creating a shortcut.

4016
03:48:49,200 --> 03:48:50,000
Let's do Pandoc.

4017
03:48:51,120 --> 03:48:53,520
So Pandoc is, what did they say?

4018
03:48:55,440 --> 03:48:59,120
Pandoc, I dash dash bash completion.

4019
03:49:00,560 --> 03:49:01,520
83, that's not bad.

4020
03:49:02,800 --> 03:49:05,840
I'm really happy to hear that the QPCTL has come down.

4021
03:49:06,400 --> 03:49:08,160
It was 12,000 lines.

4022
03:49:09,120 --> 03:49:12,320
Imagine forcing every single person who ever used your command

4023
03:49:12,880 --> 03:49:16,000
to get to source 12,000 lines of code.

4024
03:49:17,040 --> 03:49:21,760
I mean, my entire bash RC file is only 500 lines.

4025
03:49:22,720 --> 03:49:27,840
So in order for it to run completion for just QPCTL up until recently,

4026
03:49:28,400 --> 03:49:31,600
I had to, as I told you, it's sourcing it.

4027
03:49:31,600 --> 03:49:33,680
So it's essentially the same typing right there.

4028
03:49:33,680 --> 03:49:37,920
And that effectively increased the size of my bash RC file

4029
03:49:38,400 --> 03:49:41,600
to something on the order of like 15,000 lines

4030
03:49:42,320 --> 03:49:44,320
every time I run an interactive thing.

4031
03:49:44,320 --> 03:49:45,920
And if you want to hear people complain,

4032
03:49:47,520 --> 03:49:51,040
there was somebody who wandered into my Twitch year and a half back

4033
03:49:51,040 --> 03:49:53,200
and they were like, oh my God, I wish they would just stop

4034
03:49:53,200 --> 03:49:56,800
because all the cloud native people have been complaining about this

4035
03:49:56,800 --> 03:49:58,240
because they're all using the same thing.

4036
03:49:58,240 --> 03:49:59,920
So you combine, you put all those things in there

4037
03:49:59,920 --> 03:50:02,880
and they're all just blowing up everybody's bash RC files.

4038
03:50:02,880 --> 03:50:05,360
And so the startup on their interactive shells

4039
03:50:05,360 --> 03:50:06,880
is the slowest VS code.

4040
03:50:09,120 --> 03:50:10,480
There was no error in it at all.

4041
03:50:10,480 --> 03:50:10,960
I don't know.

4042
03:50:13,200 --> 03:50:14,960
So yeah, I don't know.

4043
03:50:14,960 --> 03:50:17,520
That seems interesting that it's like working out.

4044
03:50:18,640 --> 03:50:20,320
This is some stuff for swagger completion.

4045
03:50:20,320 --> 03:50:24,320
So this is kind of stupid because it actually had to,

4046
03:50:25,120 --> 03:50:26,800
the number one complaint I have,

4047
03:50:26,800 --> 03:50:30,640
and this is why I forever hate Anaconda.

4048
03:50:30,640 --> 03:50:35,840
Anaconda is kind of a, I don't know what it is.

4049
03:50:35,840 --> 03:50:37,120
What is Anaconda?

4050
03:50:37,120 --> 03:50:41,520
Anaconda is like a really bad CPAN for Python,

4051
03:50:41,520 --> 03:50:43,440
specifically for machine learning kind of things.

4052
03:50:44,080 --> 03:50:46,080
And it's absolutely horrible.

4053
03:50:46,640 --> 03:50:50,320
I mean, it's just so bad on so many levels.

4054
03:50:50,320 --> 03:50:52,880
And I don't have time to go through every one of those things.

4055
03:50:52,880 --> 03:50:55,200
I don't like just saying things are bad without telling you why,

4056
03:50:55,200 --> 03:50:57,120
but it is, it's just terrible.

4057
03:50:57,120 --> 03:50:59,760
And the first way, and the first reason I know it's horrible

4058
03:50:59,760 --> 03:51:02,640
is because it screwed with my bash RC file.

4059
03:51:03,920 --> 03:51:06,160
When I went to go install it, now it warned me,

4060
03:51:06,160 --> 03:51:07,680
it warned me it was doing it,

4061
03:51:07,680 --> 03:51:11,760
but then it proceeded to go in and screw up my bash RC file

4062
03:51:11,760 --> 03:51:14,160
and write whatever it wanted to to the end of it.

4063
03:51:14,160 --> 03:51:17,840
And if you write a program that willingly,

4064
03:51:17,840 --> 03:51:20,720
I don't care if you put markers around it or something,

4065
03:51:20,720 --> 03:51:23,600
if you're willingly screwing with somebody's bash RC file,

4066
03:51:23,600 --> 03:51:26,400
you're a bad person and you should be fired.

4067
03:51:30,960 --> 03:51:32,320
I'm only kind of kidding.

4068
03:51:32,720 --> 03:51:37,760
Seriously, there is nothing that makes me more angry

4069
03:51:37,760 --> 03:51:42,880
than some dome developer full of hubris

4070
03:51:42,880 --> 03:51:46,400
who thinks they have the right to screw with my dot files.

4071
03:51:49,840 --> 03:51:55,280
Who gave you permission to screw with my RC files?

4072
03:51:55,840 --> 03:51:58,480
In this case, it would be me because they asked me,

4073
03:51:58,480 --> 03:52:01,440
they said, do you want to say all this is required

4074
03:52:02,240 --> 03:52:03,840
stuff to your bash RC for you?

4075
03:52:03,840 --> 03:52:05,040
Well, we're helping you out here.

4076
03:52:05,040 --> 03:52:05,920
I'm like, okay, fine.

4077
03:52:06,880 --> 03:52:08,640
Somebody reminded me after that, after a rant,

4078
03:52:08,640 --> 03:52:10,480
I was ranting like, you know, you don't have to do that.

4079
03:52:10,480 --> 03:52:11,120
You could have said, no.

4080
03:52:11,120 --> 03:52:12,160
And I'm like, oh, okay.

4081
03:52:14,000 --> 03:52:17,200
But still, I mean, I can't tell you how many times

4082
03:52:17,840 --> 03:52:20,640
I have had stuff royally screw up.

4083
03:52:20,640 --> 03:52:22,640
And by the way, every time you do a new install

4084
03:52:22,640 --> 03:52:24,400
or something like that, it never remembers.

4085
03:52:24,400 --> 03:52:26,400
So it's just screwing up your,

4086
03:52:26,400 --> 03:52:28,560
and if you're storing your dot files and get repos,

4087
03:52:28,560 --> 03:52:30,000
which we will do at the end of all of this,

4088
03:52:30,960 --> 03:52:32,720
you know, you're even more screwed up

4089
03:52:32,720 --> 03:52:34,480
because now you're making changes

4090
03:52:34,480 --> 03:52:36,160
that you didn't have any control over.

4091
03:52:36,720 --> 03:52:38,640
And this is what swagger is.

4092
03:52:39,200 --> 03:52:43,360
So swagger is one of the hands down worst projects

4093
03:52:43,360 --> 03:52:44,400
I have ever seen.

4094
03:52:45,200 --> 03:52:47,680
It is so totally bad.

4095
03:52:48,320 --> 03:52:52,240
The open API YAML specification is the only good thing about it.

4096
03:52:53,440 --> 03:52:56,880
Everything else, all of the software, the crappy Java,

4097
03:52:56,880 --> 03:52:59,440
the horrendous, you know, necessity

4098
03:52:59,440 --> 03:53:01,520
to like change my bash rc file

4099
03:53:01,520 --> 03:53:06,080
and all of the other novice crap is just terrible.

4100
03:53:06,080 --> 03:53:07,280
In fact, I'm deleting this right now.

4101
03:53:08,240 --> 03:53:09,120
I'm deleting this right now.

4102
03:53:09,120 --> 03:53:11,760
I added that because swagger told me to add that

4103
03:53:11,760 --> 03:53:13,360
and swagger is not even a thing now.

4104
03:53:13,360 --> 03:53:15,520
The core people on the project left the project

4105
03:53:15,520 --> 03:53:18,480
and created open API, which is only minimally better now.

4106
03:53:18,480 --> 03:53:19,680
And we're going to rewrite all of that.

4107
03:53:19,680 --> 03:53:21,200
Don't get mad, get busy.

4108
03:53:21,200 --> 03:53:23,200
In the open source world, you can rewrite it and make your own.

4109
03:53:24,320 --> 03:53:26,080
And that's probably a good note to end on.

4110
03:53:26,960 --> 03:53:32,720
So this stuff down here is for all of that customization that you want.

4111
03:53:32,720 --> 03:53:35,600
So you may be saying, Mr. Rob,

4112
03:53:35,600 --> 03:53:38,640
I want to be able to show off my .files with the rest of the world

4113
03:53:38,640 --> 03:53:41,360
and how awesome my .files are.

4114
03:53:41,360 --> 03:53:43,360
And I want to help all those beginners out there.

4115
03:53:43,360 --> 03:53:45,440
And I want to show that I'm not a noob.

4116
03:53:45,440 --> 03:53:48,480
And I'm going to put snarky comments and fun jokes in there

4117
03:53:48,480 --> 03:53:51,200
and all the other things that people do in the .files world, right?

4118
03:53:52,960 --> 03:53:55,280
But I want to be able to have like sub tokens.

4119
03:53:55,280 --> 03:53:59,120
And I want to add a Twitch token so I can do a lot of the WeChat.

4120
03:53:59,120 --> 03:54:05,040
And I want to be able to add tokens that talk to Twitch with my scripts.

4121
03:54:05,040 --> 03:54:08,960
And I don't want to necessarily like even knowing where the files are.

4122
03:54:08,960 --> 03:54:10,160
I don't want to give up that information.

4123
03:54:10,160 --> 03:54:12,160
Plus I want them to be able to use my file,

4124
03:54:12,160 --> 03:54:17,120
my thing without forcing them to use my exact directory structure, blah, blah, blah, blah, blah.

4125
03:54:17,120 --> 03:54:20,640
Well, one of the things you can do is you can add a source if at the end

4126
03:54:20,640 --> 03:54:24,160
for the different files that you might want to maintain.

4127
03:54:24,160 --> 03:54:27,200
So I actually maintain a bash work.

4128
03:54:27,200 --> 03:54:30,160
As I said before, I maintain a bash work at work.

4129
03:54:30,160 --> 03:54:31,360
It's an enterprise GitHub.

4130
03:54:31,360 --> 03:54:33,120
Nobody sees it except for here.

4131
03:54:33,120 --> 03:54:36,240
And it overrides everything above here, right?

4132
03:54:36,240 --> 03:54:43,520
So it takes over my GitHub information and whether to go out to githubthis.com

4133
03:54:43,520 --> 03:54:45,120
or to go out to the internal one.

4134
03:54:46,240 --> 03:54:50,400
And then the private one is only loaded for my local machine when I have it connected.

4135
03:54:50,400 --> 03:54:55,520
And that's got GPG keys and stuff like that that I would never want to commit.

4136
03:54:55,520 --> 03:54:56,960
So that's what those are about.

4137
03:54:56,960 --> 03:54:58,880
We talked about them already, but I'll talk about them here.

4138
03:54:59,760 --> 03:55:02,560
The Terraform stuff is just left over from completion.

4139
03:55:02,560 --> 03:55:05,600
For some reason, the Terraform completion stuff does not work up here.

4140
03:55:05,600 --> 03:55:07,120
I couldn't figure that out for the life of me.

4141
03:55:09,840 --> 03:55:12,240
I don't remember why that was actually.

4142
03:55:12,960 --> 03:55:14,720
So I'll just leave that one there.

4143
03:55:16,000 --> 03:55:17,760
And that's the end of today.

4144
03:55:18,720 --> 03:55:23,440
I know it's been a long day and some of you probably had to take several breaks along the way.

4145
03:55:24,720 --> 03:55:25,360
No worries.

4146
03:55:26,080 --> 03:55:27,600
We made it through the BashRC file.

4147
03:55:29,120 --> 03:55:31,440
You're going to be spending the rest of your life,

4148
03:55:32,480 --> 03:55:37,440
Lennox life, playing around with your BashRC file for fun and profit.

4149
03:55:37,440 --> 03:55:43,680
And grab a beer and come mess with your .files and listen to good music with us.

4150
03:55:45,520 --> 03:55:46,800
It's a never-ending thing.

4151
03:55:46,800 --> 03:55:51,600
I'm constantly redoing my .files and my shell scripts.

4152
03:55:51,600 --> 03:55:56,080
By the way, just as kind of a summary here, and I'll zoom in for this story.

4153
03:55:57,200 --> 03:56:04,800
When I was first starting, I didn't know shell very well, but I knew Perl really, really well.

4154
03:56:05,440 --> 03:56:08,880
And so I wrote all of my scripts directories and everything in Perl.

4155
03:56:09,600 --> 03:56:14,480
And then in a 2000 someplace along there, I was like,

4156
03:56:14,480 --> 03:56:17,120
man, I should get up with speed with Python.

4157
03:56:17,120 --> 03:56:18,800
So I rewrote everything all in Python.

4158
03:56:20,320 --> 03:56:25,200
And then a lot of them are the same things, the same things that I rewritten over and over again.

4159
03:56:25,840 --> 03:56:29,120
And I've always had Bash as my shell.

4160
03:56:29,120 --> 03:56:35,200
So I did for an entire weekend, I tried to do ZShell with people on Twitch helping me

4161
03:56:35,200 --> 03:56:36,880
and just to do a fair comparison of the two.

4162
03:56:36,880 --> 03:56:41,440
And that's when I determined that in a friendly way, I don't want anything to do with it ever.

4163
03:56:42,320 --> 03:56:49,120
And then the latest incarnation of this is, you know, I'm tired of maintaining all of these

4164
03:56:49,120 --> 03:56:50,400
scripts in all of these different places.

4165
03:56:50,400 --> 03:56:51,520
I just want one executable.

4166
03:56:51,520 --> 03:56:53,040
And so that's where Banzai is coming from.

4167
03:56:53,760 --> 03:56:58,240
And we're kind of at permission to do that because everybody's doing that now.

4168
03:56:58,800 --> 03:57:00,640
I get GH, Twitch, Twirl.

4169
03:57:00,640 --> 03:57:04,480
I mean, they're all these like monolith UNIXE monoliths,

4170
03:57:04,480 --> 03:57:07,920
which means that it's a monolith that's got broken up into multiple subcommands.

4171
03:57:08,560 --> 03:57:11,600
And so that's been my current take on that.

4172
03:57:11,600 --> 03:57:13,600
I've been really enjoying it too much, actually.

4173
03:57:14,320 --> 03:57:16,480
There's actually a really interesting blog out there somewhere.

4174
03:57:16,480 --> 03:57:17,760
I wish I knew the name.

4175
03:57:18,320 --> 03:57:24,480
And it was written by a guy who was like, he's basically like, just stop configuring.

4176
03:57:25,600 --> 03:57:32,080
And he was basically capturing the dilemma of spending your entire...

4177
03:57:32,080 --> 03:57:35,920
I mean, the whole idea of optimizing your configuration for your workflow

4178
03:57:35,920 --> 03:57:37,520
is to make you more efficient.

4179
03:57:37,600 --> 03:57:42,240
But if you count the amount of time that I have total number of hours

4180
03:57:42,240 --> 03:57:48,000
that I've spent optimizing my workstation and my top files and everything,

4181
03:57:48,800 --> 03:57:52,240
there's probably not enough time ever for me to ever recoup that time

4182
03:57:52,240 --> 03:57:53,520
in terms of efficiency.

4183
03:57:54,480 --> 03:57:58,480
But every once in a while, you do add something that adds tremendous value

4184
03:57:58,480 --> 03:58:04,240
to your entire workflow, such as my clone command or the Banzai command

4185
03:58:04,240 --> 03:58:05,840
or that kind of thing.

4186
03:58:05,840 --> 03:58:09,120
And so I think it's worth it to do it.

4187
03:58:09,120 --> 03:58:10,080
Plus, it's fun.

4188
03:58:10,080 --> 03:58:13,200
And it keeps your skills fresh, keeps your shell scripting or go coding fresh.

4189
03:58:14,560 --> 03:58:17,280
So don't take it too much of that to heart.

4190
03:58:17,280 --> 03:58:18,080
It's fun.

4191
03:58:19,040 --> 03:58:21,680
And personally, I think it's very addicting.

4192
03:58:21,680 --> 03:58:24,880
And I think there's probably more than one person in this room right now

4193
03:58:24,880 --> 03:58:30,000
who is very addicted to configuring their stuff.

4194
03:58:30,800 --> 03:58:35,040
So it's time for me to end the stream and pick my socks up and stuff.

4195
03:58:35,040 --> 03:58:38,400
And be a good citizen.

4196
03:58:38,400 --> 03:58:39,200
It is Sunday, though.

4197
03:58:39,200 --> 03:58:39,760
Give me a break.

4198
03:58:40,480 --> 03:58:44,240
And we are going to call it at that point.

4199
03:58:44,240 --> 03:58:47,920
So if you want to hang around at ranting,

4200
03:58:47,920 --> 03:58:50,880
ranting time is greater than improving work full of time.

4201
03:58:51,920 --> 03:58:53,200
I don't know if it is.

4202
03:58:54,240 --> 03:58:55,440
I don't know about that.

4203
03:58:55,440 --> 03:58:57,440
I mean, it is fun to rant.

4204
03:58:57,440 --> 03:58:59,760
It's probably not good for my blood pressure, but it's really fun.

4205
03:59:02,000 --> 03:59:02,800
I thank you, everybody.

4206
03:59:03,520 --> 03:59:04,480
I'm just going to say it again.

4207
03:59:04,480 --> 03:59:05,760
I appreciate everybody being here.

4208
03:59:06,560 --> 03:59:07,120
Don't get angry.

4209
03:59:07,120 --> 03:59:07,600
Get busy.

4210
03:59:08,400 --> 03:59:08,800
Yes.

4211
03:59:09,840 --> 03:59:14,000
Reconfigure or write your own editor if you have to.

4212
03:59:15,360 --> 03:59:15,920
People have.

4213
03:59:17,120 --> 03:59:18,320
I mean, that's good.

4214
03:59:18,320 --> 03:59:20,800
I want to encourage people to do that.

4215
03:59:20,800 --> 03:59:23,600
Even if they get it wrong, at least, you know, they have the courage to do it.

4216
03:59:24,560 --> 03:59:26,640
So we're done here.

4217
03:59:28,240 --> 03:59:32,640
And the next thing you're going to see on this channel is probably me playing games

4218
03:59:32,640 --> 03:59:33,760
or eating or something.

4219
03:59:33,760 --> 03:59:37,840
So I'm going to go ahead and just stop the recording.

4220
03:59:37,840 --> 03:59:38,800
Again, thank you for being here.

4221
03:59:38,800 --> 03:59:40,720
We'll see you next Sunday at two.

4222
03:59:40,720 --> 03:59:42,320
We'll be two to six.

4223
03:59:42,320 --> 03:59:45,600
And it looks like we'll be covering the rest of the configuration.

4224
03:59:45,600 --> 03:59:48,560
So we only got to the bash configuration today.

4225
03:59:48,560 --> 03:59:49,600
I think all we got through that.

4226
03:59:50,480 --> 03:59:53,200
I have a feeling it's going to take us a whole day to get through VimConfig.

4227
03:59:54,480 --> 03:59:55,840
But I'm going to hope not.

4228
03:59:55,840 --> 03:59:59,760
So we're going to put that down here.

4229
03:59:59,760 --> 04:00:00,800
Wait, why does it keep doing that?

4230
04:00:01,760 --> 04:00:03,600
Wait, you can't see my screen here.

4231
04:00:03,600 --> 04:00:04,080
Here you go.

4232
04:00:04,880 --> 04:00:05,680
So I'm moving.

4233
04:00:05,680 --> 04:00:07,040
I'm moving these topics to the next time.

4234
04:00:07,040 --> 04:00:11,120
So we just did configure as a bash configuration day.

4235
04:00:13,440 --> 04:00:15,600
Let's say that bash configuration day.

4236
04:00:18,720 --> 04:00:28,480
I mean, but for no other reason, then, uh-oh, uh-oh, uh-oh, I screwed up somewhere.

4237
04:00:29,360 --> 04:00:30,080
What else is new?

4238
04:00:31,760 --> 04:00:32,880
I want to use what?

4239
04:00:38,000 --> 04:00:39,520
Oh my god, it got rid of it.

4240
04:00:39,520 --> 04:00:40,080
That's weird.

4241
04:00:42,240 --> 04:00:42,880
Yeah, it did.

4242
04:00:42,880 --> 04:00:43,520
It got rid of it.

4243
04:00:45,440 --> 04:00:46,160
Okie dokie.

4244
04:00:47,280 --> 04:00:48,080
All right.

4245
04:00:48,080 --> 04:00:48,880
All right, peoples.

4246
04:00:50,960 --> 04:00:52,880
Uh, bye-bye.

4247
04:00:52,880 --> 04:00:54,640
Thank you for the follows.

