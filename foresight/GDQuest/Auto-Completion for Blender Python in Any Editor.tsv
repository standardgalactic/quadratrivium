start	end	text
0	8000	In Blender, you can get auto-completion for whatever you type in the text editor on Python script
8000	14360	by pressing control space to complete the current entry you are writing or after a dot.
14360	20280	You can fire control space to get some suggestions, but by default they don't work so well.
20280	28480	And you can have that also in the Python console and in this case, it's a little more helpful
28560	35200	because you can really get a list of all the properties you will find at a given stage
35200	43200	in the auto-completion step. If you are working on an add-on with dozens of files, it's not enough
43200	50320	to use Blender because you don't have all the file navigations and suggestions or auto-completion
50320	56560	from other files you import from. So what if you want to work in an external text editor?
56560	62880	By default, you won't have auto-completion. Now, if I hover something, you will see that I do.
62880	71120	I do get documentation on elements I hover, can even get documentation for built-in operators
71120	78640	and values and modules. So I'm going to show you how to get that and how to get rich auto-completion
78640	86960	as well, auto-complete on the sequencer and get all the available operators. Normally,
86960	94800	you have to build Blender as a Python module to do that and place that module in your Python
94800	101200	installation folder. And building it, especially on Windows, can be a bit involved. On Linux,
101200	108320	it should be much easier. But you don't have to do that thanks to Nutty, who created a fake
108320	116800	BPI module as he calls it. So he created a script that from the Blender sources will generate
116800	124160	Python modules that have the functions, the classes you would find in Blender Python,
124160	131440	but it doesn't have any actual code. You only get the definitions. And that is all you need
131440	139120	to get auto-completion. Auto-completion tools like Jedi and all will read the function names and the
139120	145680	doc strings, but that is it. They don't know much about the implementation or the actual code in
145680	150400	these tools. If you don't even have to run the script, although you can run it on the Blender
150400	158000	sources to generate all these modules, you can just download this as a zip and you can find the link
158000	164560	in the description. And we're going to put all that in our Python folder. So here I am
164560	172960	with the fake BPI module downloaded as zip. I'm going to unfold it. And note that at the moment,
172960	183680	you will only find modules for the 278 and 279 versions of Blender because 2.8 is not available
183680	190480	yet. The Python API is not stable yet. So that's why you won't find auto-completion targets for it.
191600	197200	So once we've unzipped everything, we're going to head to the folder that corresponds to your
197200	206000	Blender version and grab everything, copy. Now we want to put it in our Python install folder.
206000	212880	On Windows to find it, you press Windows S to do a global search and search for your Python
212880	219360	executable. Right click on it, open the file location. And it's going to be a shortcut,
219360	228000	in which case you want to open the target folder. So this is where my 3.7 install of Python lives.
228560	235120	And we want to go to the lib folder where you will find lots of Python libraries. So I have
235680	245920	BPI somewhere in here, as you can see. I also have BGL, all the Blender libraries we just saw.
246560	254480	All you want to do is right click and paste everything in here. Once you copied all the files,
254480	261440	you are done. You should get auto-completion in all the text editors that you may use that have
261440	268640	support for a service like Autocomplete or the Python language server or that use GDI for
268640	274880	Autocompletion. And there you go. You can see everything's working as you'd expect. Enjoy
274880	280240	coding Blender Python scripts and add-ons in your favorite editors. And to get started with
280240	286000	Blender's Python operators, check the previous videos that we made, link on the screen in the
286000	292000	description. Thank you kindly for watching. Be creative, have fun, and see you in the next one.
