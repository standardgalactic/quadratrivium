1
00:00:00,000 --> 00:00:06,500
It's hard to believe that all your photos, videos, music, messages, and apps can be stored

2
00:00:06,500 --> 00:00:08,600
in the palm of your hand.

3
00:00:08,600 --> 00:00:15,080
And to most of us, it's a mystery how so much information can fit in such a small space.

4
00:00:15,080 --> 00:00:21,000
But it might not seem so surprising when you see the complexity inside your smartphone

5
00:00:21,000 --> 00:00:28,320
or the inside of this one terabyte solid-state drive commonly found in laptops or computers.

6
00:00:28,520 --> 00:00:35,320
However, as seeing the outside of this memory storage microchip tells us little about how

7
00:00:35,320 --> 00:00:42,160
these smartphones and solid-state drives can store tens of thousands of photos and files,

8
00:00:42,160 --> 00:00:47,840
let's explore deeper and zoom in until we get to a nanoscopic view.

9
00:00:47,840 --> 00:00:53,600
And it's here that we can see the structures called VINAND that hold all the data in your

10
00:00:53,600 --> 00:00:55,600
smartphone and computer.

11
00:00:55,600 --> 00:00:58,160
Here's where the real magic happens.

12
00:00:58,160 --> 00:01:05,360
Every picture, message, and bit of information gets saved as quantities of electrons inside

13
00:01:05,360 --> 00:01:10,400
these memory cells which are called charge-trapped flash.

14
00:01:10,400 --> 00:01:16,400
And in this episode, we'll learn how smartphone memory and solid-state drives work.

15
00:01:16,400 --> 00:01:18,440
Now, hold on.

16
00:01:18,440 --> 00:01:23,800
These insanely small and intricate structures seem very complex.

17
00:01:23,800 --> 00:01:25,360
And yeah, they are.

18
00:01:25,360 --> 00:01:29,240
I'm not going to say this marvel of engineering is simple.

19
00:01:29,240 --> 00:01:31,200
But you have to trust me.

20
00:01:31,200 --> 00:01:36,480
Stick around, watch closely, maybe watch this video twice.

21
00:01:36,480 --> 00:01:41,240
And by the end of it, this technology will amaze you.

22
00:01:41,240 --> 00:01:44,320
It'll blow your mind at least twice over.

23
00:01:44,320 --> 00:01:50,560
And yeah, you'll have a thorough understanding as to how such a small device can store weeks

24
00:01:50,560 --> 00:01:58,040
of high-quality video, tens of thousands of pictures, or hundreds of thousands of songs

25
00:01:58,040 --> 00:02:01,800
in such an itty-bitty little space.

26
00:02:01,800 --> 00:02:05,520
So let's get started.

27
00:02:05,520 --> 00:02:10,340
We're going to use a real-life example and explore how it works when you save a picture

28
00:02:10,340 --> 00:02:12,800
to your smartphone or computer.

29
00:02:12,800 --> 00:02:16,720
First, this picture is made up of pixels.

30
00:02:16,720 --> 00:02:18,960
And each pixel has a color.

31
00:02:18,960 --> 00:02:23,400
So let's zoom in so that we can see the individual pixels.

32
00:02:23,400 --> 00:02:31,840
The color of every pixel is defined by a combination of three numbers, ranging from 0 to 255,

33
00:02:31,840 --> 00:02:35,720
each representing red, green, or blue.

34
00:02:35,720 --> 00:02:44,800
For example, the numbers would be 55, 53, 55 for this pixel's color right here.

35
00:02:44,800 --> 00:02:53,200
And then 124, 121, and 119 for this pixel.

36
00:02:53,200 --> 00:03:02,520
Each of these three numbers, from 0 to 255, is represented by 8 bits in binary, or 8 ones

37
00:03:02,520 --> 00:03:06,960
and zeros, you know, because computers work in binary.

38
00:03:06,960 --> 00:03:16,800
So three colors, red, green, and blue, and 8 bits each, means each pixel takes 24 bits

39
00:03:16,800 --> 00:03:18,760
to define its color.

40
00:03:18,760 --> 00:03:21,740
This picture is a grid of colored pixels.

41
00:03:21,740 --> 00:03:28,400
So let's turn it into a grid of values, kind of like a spreadsheet in Excel, but called

42
00:03:28,400 --> 00:03:32,280
an array instead of a spreadsheet.

43
00:03:32,280 --> 00:03:39,000
This array of bits is what your computer cares about, and non-coincidentally, it's also the

44
00:03:39,000 --> 00:03:43,940
information that the camera on my smartphone recorded when I took the picture.

45
00:03:43,940 --> 00:03:49,880
One quick note, if you want to see the pixels in any picture, just open it in an image editing

46
00:03:49,880 --> 00:03:55,520
program like paint, or 3D paint in this case, and zoom in.

47
00:03:55,520 --> 00:04:02,840
And then if you want to see the red, green, and blue, or RGB values, just use the eyedropper,

48
00:04:02,840 --> 00:04:07,440
click on a pixel, and then click on the edit color option.

49
00:04:07,440 --> 00:04:13,640
Right here, you can see the three values for red, green, and blue, and the resulting color.

50
00:04:13,640 --> 00:04:17,640
Okay, with that covered, let's get back to the episode.

51
00:04:17,640 --> 00:04:24,920
First, we're going to zoom out to see the full picture, which is 3,024 pixels wide,

52
00:04:24,920 --> 00:04:34,680
and 4,032 pixels tall, which is a total of around 12 million pixels, or 12 megapixels,

53
00:04:34,680 --> 00:04:39,880
which relates to the resolution of the 12 megapixel camera on my smartphone.

54
00:04:39,880 --> 00:04:47,220
Next, by doing some multiplication, we calculate that an array of this size where each pixel

55
00:04:47,220 --> 00:04:58,020
is defined by 24 bits, or 24 zeros or ones, only requires 293 million bits, or a unique

56
00:04:58,020 --> 00:05:03,340
set of 293 million zeros or ones.

57
00:05:03,340 --> 00:05:05,460
That's a ton of bits.

58
00:05:05,460 --> 00:05:12,100
So let's figure out how your smartphone, or the solid state drive, seamlessly stores

59
00:05:12,100 --> 00:05:14,660
every single one of them.

60
00:05:15,380 --> 00:05:23,020
Okay, so let's open up that solid state drive again, and zoom into a simplified nanoscopic

61
00:05:23,020 --> 00:05:26,580
view, kind of like the one we had earlier.

62
00:05:26,580 --> 00:05:30,700
It's here that we can see the memory cells that are used in every single one of your

63
00:05:30,700 --> 00:05:37,460
smartphones or tablets, as well as inside the solid state drive in your computer.

64
00:05:37,460 --> 00:05:43,460
This is the basic unit of a computer's long-term memory storage, and it's called charge-trapped

65
00:05:43,460 --> 00:05:44,820
flash memory.

66
00:05:44,820 --> 00:05:46,980
So, how does it work?

67
00:05:46,980 --> 00:05:53,460
Well, in each cell, we can store information by placing different levels of electrons onto

68
00:05:53,460 --> 00:05:58,100
a charge trap, which is the key component inside the memory cell.

69
00:05:58,100 --> 00:06:04,460
Older technology could only store two different levels of electrons, a lot of electrons or

70
00:06:04,460 --> 00:06:10,900
very few electrons, which were used to store a single bit as a one or zero.

71
00:06:10,900 --> 00:06:16,340
However, engineers have been developing more finely tuned capabilities for trapping and

72
00:06:16,340 --> 00:06:21,780
measuring different amounts of electrons or charges onto the charge trap.

73
00:06:21,780 --> 00:06:28,540
Most memory cells in 2020 can hold eight different levels, but newer technology can have sixteen

74
00:06:28,540 --> 00:06:31,820
different levels of electrons.

75
00:06:31,820 --> 00:06:37,260
This means that a single cell, instead of holding only one bit as a lot of electrons

76
00:06:37,260 --> 00:06:41,540
or no electrons, can now hold three or more bits.

77
00:06:41,540 --> 00:06:44,660
For this example, we're going to stick with three bits.

78
00:06:44,660 --> 00:06:52,820
So in this cell, if we were to have very few electrons on it, it would be one, one, one.

79
00:06:52,820 --> 00:07:00,740
While some electrons get designated as one, zero, zero, and a lot of electrons are zero,

80
00:07:00,740 --> 00:07:02,500
zero, zero.

81
00:07:02,500 --> 00:07:07,900
There are eight different levels for all the various amounts of electron charges that our

82
00:07:07,900 --> 00:07:11,140
charge trap can be set or written to.

83
00:07:11,140 --> 00:07:16,940
The key to the charge trap is that it is specially designed so that after it gets charged with

84
00:07:16,940 --> 00:07:23,500
electrons, it can hold onto those electrons for decades, which is how information is saved

85
00:07:23,500 --> 00:07:26,180
or written to the solid state drive.

86
00:07:26,180 --> 00:07:29,260
I mean, it's called a charge trap for a reason.

87
00:07:29,260 --> 00:07:36,060
It traps electrons or charges for years on end, and in order to read the information,

88
00:07:36,060 --> 00:07:41,540
the electron charge level is measured, and the amount of charge on the charge trap is

89
00:07:41,540 --> 00:07:42,540
unchanged.

90
00:07:42,540 --> 00:07:48,300
However, in order to erase the contents of a memory cell, all the electron charges are

91
00:07:48,300 --> 00:07:54,740
forcibly removed from the charge trap, returning it to its lowest level, which is one, one,

92
00:07:54,740 --> 00:07:59,740
one, and leaving no excess electron charges behind.

93
00:07:59,740 --> 00:08:05,140
Let's move on and explore how these memory cells are organized so that we can store more

94
00:08:05,140 --> 00:08:07,820
than three bits of information.

95
00:08:07,820 --> 00:08:12,820
After we zoom out a little, you can see that the memory cells are stacked vertically.

96
00:08:12,820 --> 00:08:18,260
This is where the vertical part in vertical NAND or VNAND comes from.

97
00:08:18,260 --> 00:08:24,660
This stack of memory cells, which is technically called a string, is composed of ten charge

98
00:08:24,660 --> 00:08:28,300
trap flash cells layered one on top of another.

99
00:08:28,300 --> 00:08:34,340
When information is written to or read from a string, only one cell can be activated at

100
00:08:34,340 --> 00:08:40,940
any given time, and to do that, we use separate control gates attached to every layer in the

101
00:08:40,940 --> 00:08:41,940
string.

102
00:08:41,940 --> 00:08:43,140
It works like this.

103
00:08:43,140 --> 00:08:49,580
The bottom control gate first says, hey you, charge trap one, what's your electron charge

104
00:08:49,580 --> 00:08:50,940
level at?

105
00:08:50,940 --> 00:08:55,780
Then the bottom cell sends that information through the center of the string up to the

106
00:08:55,780 --> 00:09:00,680
information highway at the top, which is technically called a bit line.

107
00:09:00,680 --> 00:09:05,420
Then the next control gate for the second layer asks for the charge level in the second

108
00:09:05,420 --> 00:09:12,300
cell and so on up the string, each cell sending their information up to the highway or bit

109
00:09:12,300 --> 00:09:13,300
line.

110
00:09:13,300 --> 00:09:18,420
The same kind of sequence happens when charges are being added to a charge trap, which is

111
00:09:18,420 --> 00:09:21,260
how information is written to a memory cell.

112
00:09:21,260 --> 00:09:26,980
The main thing is that only one layer in the string is either written to or read from at

113
00:09:26,980 --> 00:09:28,780
any given time.

114
00:09:28,780 --> 00:09:30,860
Let's move on in complexity.

115
00:09:30,860 --> 00:09:38,580
Next, we duplicate this string 32 times, and this gets us a page of strings.

116
00:09:38,580 --> 00:09:40,820
Let's review some terminology.

117
00:09:40,820 --> 00:09:44,700
This is a memory cell, and this is a string.

118
00:09:44,700 --> 00:09:51,740
And now here we have a page, and we're going to call this entire page of strings a row.

119
00:09:51,740 --> 00:09:57,580
When we duplicate the string, we also duplicate the bit line 32 times.

120
00:09:57,580 --> 00:10:03,580
However, rather than duplicate the control gates, we're going to have every cell in

121
00:10:03,580 --> 00:10:06,900
the same page share a common control gate.

122
00:10:06,900 --> 00:10:13,580
This makes it so that when information is written to or read from a row, an entire page

123
00:10:13,580 --> 00:10:21,180
composed of 32 adjacent cells, all in the same layer, are activated at the same time.

124
00:10:21,180 --> 00:10:23,980
Let's step up in complexity again.

125
00:10:23,980 --> 00:10:30,860
Next, we duplicate these rows 6 times until we get a block, but we're going to do it

126
00:10:30,860 --> 00:10:33,820
12 times so we can see 2 blocks.

127
00:10:33,820 --> 00:10:40,660
Okay, so again, here we have a column, here is a row, and this is a layer.

128
00:10:40,660 --> 00:10:44,980
And now here's a cell, and here's a string.

129
00:10:44,980 --> 00:10:48,860
Next we have a page, and finally we have a block.

130
00:10:48,860 --> 00:10:54,100
We're going to connect the tops of each string in a column together, so they all share the

131
00:10:54,100 --> 00:10:59,140
same bit line, and our bit line is looking like a highway now.

132
00:10:59,140 --> 00:11:04,860
In addition, we have to add a control gate that selects between rows so that only one

133
00:11:04,860 --> 00:11:07,900
row is using the bit line at a time.

134
00:11:07,900 --> 00:11:10,660
These are called bit line selectors.

135
00:11:10,660 --> 00:11:16,940
As discussed, these bit lines are like highways, and the selectors at the top act as traffic

136
00:11:16,940 --> 00:11:22,860
lights that mediate the flow of information so that only a single row can use the highway

137
00:11:22,860 --> 00:11:25,100
or is active at a time.

138
00:11:25,100 --> 00:11:31,580
Similarly, the control gates attached to each layer act as traffic lights for the layers.

139
00:11:31,580 --> 00:11:36,620
With bit line selectors along the tops of each row and control gate selectors along

140
00:11:36,620 --> 00:11:43,100
each layer, the solid state drive can read from or write to a single page at any given

141
00:11:43,100 --> 00:11:44,100
time.

142
00:11:44,100 --> 00:11:49,540
Additionally, in order to connect to the bit line selectors and control gate selectors,

143
00:11:49,540 --> 00:11:55,780
there are wires that drop down from above and run perpendicular to the bit lines.

144
00:11:55,780 --> 00:11:58,300
So let's quickly recap.

145
00:11:58,300 --> 00:12:03,580
Eight different levels of electrons are placed on charge traps in order to store three bits

146
00:12:03,580 --> 00:12:05,100
of information.

147
00:12:05,100 --> 00:12:12,700
These charge trap flash memory cells are stacked into strings, ten cells tall, which are duplicated

148
00:12:12,700 --> 00:12:16,140
into pages of 32 strings in a row.

149
00:12:16,140 --> 00:12:22,980
Next, those pages of strings are duplicated until we have a block six rows deep.

150
00:12:22,980 --> 00:12:25,820
And here we're showing two blocks.

151
00:12:25,820 --> 00:12:33,420
Doing some quick multiplication, we find that there are 3,840 memory cells here capable

152
00:12:33,420 --> 00:12:38,620
of storing a total of 11,520 bits.

153
00:12:38,620 --> 00:12:45,580
With each pixel in our picture requiring 24 bits, that means that we can store 480

154
00:12:46,340 --> 00:12:49,460
pixels, or this much of our overall picture.

155
00:12:49,460 --> 00:12:56,380
That means you need about 25,000 times the size of this layout to store the contents

156
00:12:56,380 --> 00:12:58,540
of this single picture.

157
00:12:58,540 --> 00:13:02,660
And here's where we learn about the actual size of a memory chip.

158
00:13:02,660 --> 00:13:07,540
All the principles we've discussed remain the same, so keep those in mind.

159
00:13:07,540 --> 00:13:13,060
It's just that the size is much more extensive than we discussed in our example.

160
00:13:13,060 --> 00:13:18,500
It's hard to pin down exact numbers because manufacturers are continually improving their

161
00:13:18,500 --> 00:13:24,100
designs and they're very secretive regarding what their designs look like.

162
00:13:24,100 --> 00:13:25,940
But I'll tell you what I know.

163
00:13:25,940 --> 00:13:32,620
The latest designs utilize not ten layers as in the example, but rather somewhere around

164
00:13:32,620 --> 00:13:37,220
96 to 136 layers tall.

165
00:13:37,220 --> 00:13:41,620
Here's a single sheet of paper so you can get a sense of the approximate height of

166
00:13:41,620 --> 00:13:44,100
these stacks of memory cells.

167
00:13:44,100 --> 00:13:48,300
Now that we understand the height, let's think about the width.

168
00:13:48,300 --> 00:13:54,500
A page is around 30,000 to 60,000 adjacent memory cells wide.

169
00:13:54,500 --> 00:14:00,820
That means there are 30,000 to 60,000 bitlines in our information superhighway.

170
00:14:00,820 --> 00:14:07,380
Blocks are every 4 to 8 rows and there are around 4,000 to 6,000 blocks.

171
00:14:07,380 --> 00:14:13,580
Along the edges are the control gate selectors and the bitline selectors on the other side.

172
00:14:13,580 --> 00:14:17,740
Together they comprise what is called a row decoder.

173
00:14:17,740 --> 00:14:24,140
And by using both sets of selectors as traffic lights, we're able to access a single page.

174
00:14:24,140 --> 00:14:32,460
To repeat this, only one page, 45,000 or so cells wide, ever uses the bitline to read

175
00:14:32,460 --> 00:14:36,180
or write information at any given time.

176
00:14:36,180 --> 00:14:42,020
All tens of thousands of bitlines feed down here to the page buffer where the information

177
00:14:42,020 --> 00:14:45,940
of a single page is read to or written from.

178
00:14:45,940 --> 00:14:50,740
Let's transition to see what an overall chip might look like.

179
00:14:50,740 --> 00:14:56,900
Here we have the arrays of 3D memory cells, the row decoder and the page buffer at the

180
00:14:56,900 --> 00:14:57,900
bottom.

181
00:14:57,900 --> 00:15:02,860
Additional peripheral circuitry can be found here for supporting the chip.

182
00:15:02,860 --> 00:15:08,820
In order to fit more capacity, engineers copied this layout onto the other side.

183
00:15:08,820 --> 00:15:15,500
This chip can read or write at a rate of around 500 megabytes per second.

184
00:15:15,500 --> 00:15:23,940
That means that it can read from or write to around 63 blocks every single second.

185
00:15:23,940 --> 00:15:26,460
That's incredibly fast.

186
00:15:26,460 --> 00:15:31,220
Okay, let's add the last level of complexity.

187
00:15:31,220 --> 00:15:35,940
Engineers like to fit even more stuff in as small a space as possible.

188
00:15:35,940 --> 00:15:41,820
So on top of having a massive array of memory cells in this insanely complex layout, they

189
00:15:41,820 --> 00:15:48,380
decided to copy this chip eight times and stack it into a single microchip.

190
00:15:48,380 --> 00:15:54,060
At the bottom, an additional interface chip is used to coordinate between the eight different

191
00:15:54,060 --> 00:15:55,300
chips.

192
00:15:55,300 --> 00:15:56,580
And that's it.

193
00:15:56,580 --> 00:16:02,020
That's all there is in this one microchip that can be found at the center of every one

194
00:16:02,020 --> 00:16:07,660
of your smart phones, tablets or solid state drives.

195
00:16:07,660 --> 00:16:12,100
This video covered a lot and I hope you kept up.

196
00:16:12,100 --> 00:16:15,580
You can always watch this video a second time.

197
00:16:15,580 --> 00:16:20,620
And if you do watch it a second time, we added our notes and commentary into the English

198
00:16:20,620 --> 00:16:22,620
Canada subtitles.

199
00:16:22,620 --> 00:16:26,740
Turn them on by clicking the settings gear over here.

200
00:16:26,740 --> 00:16:32,660
On the contrary, the notes that are placed up here are caveats or footnotes.

201
00:16:32,660 --> 00:16:39,660
But the notes we placed in the English Canada subtitles include commentary, additional information

202
00:16:39,660 --> 00:16:41,420
and much more.

203
00:16:41,420 --> 00:16:43,980
Let us know what you think of them in the comments.

204
00:16:43,980 --> 00:16:49,580
Also, we'll be making a follow up set of episodes that will branch off and explain how each

205
00:16:49,580 --> 00:16:51,860
part works in detail.

206
00:16:51,860 --> 00:16:57,700
In separate episodes, we'll cover specifics as to how the charge trap flash works, how

207
00:16:57,700 --> 00:17:03,940
the bit line and control gate selectors work, and how these microchips are manufactured.

208
00:17:03,940 --> 00:17:09,460
Also, take a look at our channel page where we cover other topics such as how touch screens

209
00:17:09,460 --> 00:17:14,460
work, how PCBs work or how cameras in your smartphone work.

210
00:17:14,460 --> 00:17:19,740
If you have any questions or want us to add more branches relating to solid state drives,

211
00:17:19,740 --> 00:17:21,900
tell us in the comments below.

212
00:17:21,900 --> 00:17:24,020
But for now, thanks for watching.

213
00:17:24,020 --> 00:17:30,140
Subscribe and hit the bell to get notified when we post more branch episodes on how solid

214
00:17:30,140 --> 00:17:33,180
state drives work and other topics.

215
00:17:33,180 --> 00:17:38,620
If you learned something new, share this video with others, tweet it, post it to your favorite

216
00:17:38,620 --> 00:17:44,380
discussion board, or share it on social media so others can learn how this amazing technology

217
00:17:44,380 --> 00:17:45,380
works.

218
00:17:45,380 --> 00:17:53,140
Until next time, consider the conceptual simplicity, yet structural complexity in the world around

219
00:17:53,140 --> 00:17:53,380
you.

