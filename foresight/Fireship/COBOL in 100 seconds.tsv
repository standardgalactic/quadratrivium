start	end	text
0	4640	Common business-oriented language, or COBOL, is a weak, verbose, and flabby language used by
4640	9520	code grinders to do boring things on dinosaur mainframes. It was developed over 100 years ago
9520	14880	in 1959, but is still in demand today in 2020 because it's the language used on many mainframe
14880	19760	computer systems. You know, those things we call big iron, usually built by IBM to handle massive
19760	23600	amounts of throughput, to handle things like credit card transactions, airline ticketing,
23600	27360	and most recently, the massive spike in unemployment claims. So if you want to be a
27360	31600	programmer in 2020, COBOL might be your best bet. It's a high-level imperative language,
31600	35760	which means it's very easy to learn. The syntax is extremely verbose by design because it's
35760	40880	self-documenting, and it contains over 600 reserved words for you to memorize and take advantage of.
40880	45280	And every COBOL program is structured with an easy-to-follow hierarchy. Your program contains
45280	49120	many divisions, which contain many sections, which contain many paragraphs, which contain many
49120	53040	sentences that contain your statements, which of course contain many characters. When you start
53040	57120	writing some COBOL code, you'll notice these vertical lines in your IDE. The first six characters
57120	62880	are your line numbers. Start at 000100 and increment by 100 for each line. Column 7 is where you
62880	67360	identify comments or the continuation of a previous line. If we're identifying a new division,
67360	71840	section, or paragraph, we can use columns 8 through 11. And notice how every line ends with a period.
71840	76000	That's what's known as readable code. Now columns 12 through 72 are where you write your
76000	80640	actual statements. The reason you don't go beyond 72 columns is because your code needs to fit onto a
80640	85200	physical punch card, and it ensures your program is responsive on mobile devices. We can define
85200	89440	our variables in the data division. First we name the variable, then we define its data type with
89440	93360	the picture keyword, then assign a value to it. We can then work with this data in the procedure
93360	97440	division. We display the variable, then tell our program to stop. From there we can pile our program
97440	101840	to a binary, run it, and everything should work perfectly. And now you're qualified for a six
101840	106080	figure salary, maintaining the world's most critical legacy systems. This has been COBOL
106080	109920	in 100 seconds. Hit the like button if you want to see more short videos like this. Thanks for
109920	115120	watching, and I will see you in the next one. Oh hey there, thanks for sticking around. This is
115120	122640	the part of the video where we go beyond 100 seconds to learn some more advanced features of COBOL.
