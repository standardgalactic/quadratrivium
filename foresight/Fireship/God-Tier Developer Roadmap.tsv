start	end	text
0	3840	You've likely seen videos on YouTube telling you the number one programming language to learn
3840	8320	right now if you want to be rich. That's not what we're doing today. Instead, we're going to travel
8320	12480	to the deepest, darkest depths of the software engineering field to discover the programming
12480	18000	languages that are loved, hated, beautiful, ugly, compiled, interpreted, useful, weird, and everything
18000	21840	in between. If you make it to the end, you'll have a roadmap for everything you need to know
21840	26640	to land a job as a junior developer in 2023. Or it might just make you extremely depressed
26640	30320	because this iceberg is just the tip of the iceberg of what you actually need to learn.
30320	34400	Choose any language and you'll find another iceberg within this iceberg that goes on forever
34400	38720	like a Mandelbrot set, which ironically you can represent in code with any one of the languages
38720	43120	we're about to look at. Before we get started, there's quite a few programming icebergs out there,
43120	47120	but this one ranks languages based on where I think you might encounter them as a beginner
47120	51280	learning how to code from scratch. Each level has its own theme, so let's get right into it,
51280	55280	with languages that are designed to make programming as easy as possible. If you know
55280	59600	absolutely nothing about programming, the best place to start in my opinion is Scratch. It was
59600	64320	developed at MIT, like some other languages on this list, but instead of typing out code, you drag
64320	68960	and drop these blocks together like Lego bricks to represent things like variables, control flow,
68960	72960	and operators. It makes the thinking process behind programming much more accessible, and you
72960	79040	might be surprised at what you can actually build with it. Long before Scratch, though, we had basic,
79040	84320	or beginner's all-purpose symbolic instruction code, which came out of Dartmouth in 1964. At the
84320	89040	time, Fortran was all the rage, but it wasn't beginner-friendly. Basic provides a bunch of basic
89040	94000	commands like print, go-to, and for, and was included in most personal computers, which made it the
94000	98560	go-to option for people learning to code for the next 50 years. Now moving on to the next tier,
98560	102880	we have the extremely popular dynamic high-level languages. The language most people start with
102880	108560	today is Python, primarily because of its minimal syntax. It doesn't require curly braces, semicolons,
108560	113360	and stuff like that, and instead uses indentation to represent different blocks of code. The other
113360	118160	popular high-level language is JavaScript. Syntactically, it's pretty ugly, but it's a requirement
118160	121840	if you want to do web development, and almost every developer will have to touch it at some point in
121840	126320	their career. Any application that can be written in JavaScript will eventually be written in JavaScript.
126320	129760	Now, after learning one of these languages, you'll be able to build pretty much anything you can
129760	134000	imagine, and you could have an entire career as a software engineer without going any further down
134000	138000	the iceberg. But you don't want to be on your deathbed wondering if you should have tried out PHP.
138000	142320	On this next tier, we have languages that are extremely popular, but a little more specialized.
142320	145680	Programmers like to get things done from the terminal, and there are scripting languages,
145680	149920	like Bash and PowerShell, that allow you to interact with your computer programmatically,
149920	153840	instead of typing out the same commands over and over again, write a Bash script to make it
153840	158560	reproducible. Now, if you get into web development, you'll also need to learn HTML and CSS, which,
158560	162560	when combined together, arguably form a turing-complete programming language. They're not
162560	166560	used for programming in the traditional sense, but rather to define the structure and style of a
166560	170320	website. And if I were to say HTML is not a programming language, I would be immediately
170320	174160	canceled by the tech community. In addition, most apps need a database, and the most common
174160	179600	language for working with databases is structured query language. You can call it SQL, SQL, or
179600	183920	SQL. This turing-complete, although not used for regular programming, but rather to read and
183920	188560	write data in a relational database. Now, Python is great and all, but there are many other dynamic
188560	193600	languages that might be a better fit for certain projects, like PHP made it easy to build server
193600	198880	side web apps in the 90s, and is still very popular today. Lua is easier and faster than Python,
198880	203760	and is embedded into many engines like Roblox and World of Warcraft. Ruby is an easy-to-learn
203760	207760	object-oriented language, also commonly used to build web apps with the Rails framework. If you
207760	212960	work in data science, you'll come across R, which is used for statistics and data viz, or Julia,
212960	217280	a more modern option, also used for scientific computing. The one thing all these languages
217280	222560	have in common is a dynamic type system. However, as you build more complex software, you may realize
222560	227120	that you need a more rigid framework, and one way to accomplish that is with a static type system.
227120	231440	This tier makes up the bulk of production code out in the world. First up, we have Java, which
231440	236080	kind of revolutionized programming with the Java virtual machine. It compiles to bytecode that
236080	240880	runs on the JVM, and that allows developers to target any computer architecture from a single
240880	245520	codebase. Syntactically, it's an absolute dumpster fire for beginners. I made an entire video about
245520	250480	why people hate Java, but having explicit types in your code can make it much easier to understand
250480	255120	and refactor, and modern IDEs like IntelliJ will pretty much make the code write itself.
255120	259840	Java is legendary, but it was followed up by Microsoft with C-sharp. It's similar to Java in
259840	264000	many ways, but gets a lot more love from its users. It's used to build games with Unity,
264000	268640	as well as web and desktop apps with the .NET framework. Another well-loved tool from Microsoft
268640	273920	is TypeScript. It takes JavaScript and adds a type system on top of it, making it much easier to work
273920	278560	with on large complex projects. If you're building a mobile app today, you'll likely be working with
278560	283680	Kotlin for Android, Swift for iOS, or Dart with the Flutter framework. These languages are all
283680	288160	statically typed, but they go about it in a more modern, concise way, with features like type
288160	292960	inference that minimize boilerplate code. Next up, we have Go, which is a high-performance
292960	297920	language developed at Google, to build low-level systems. It was designed as a replacement for C,
297920	302400	and Ken Thompson, one of the original creators of C, helped design it. The syntax is nice and
302400	307440	concise, making it approachable to beginners, and it has a garbage collector, which means unlike C,
307440	311680	developers don't need to worry about manual memory management. Okay, so at this point,
311680	315680	we've reached the level of the iceberg, where most people are afraid to go any deeper. Things
315680	319840	are going to get weird. What happens is that many developers get jaded with these big, heavy,
319840	324640	object-oriented languages and go searching for a better way. At this level, we have functional
324640	329280	languages, the most famous of which is Haskell. Instead of classes and heritans and all kinds
329280	334160	of crazy design patterns, the only abstraction you really need is the function. It was inspired by
334160	338800	the Miranda language and is named after the mathematician Haskell Curry. Most importantly,
338800	343600	variables are immutable, and functions have no side effects. Surprisingly, you can build almost
343600	347280	anything with these limitations, although most production code out there is not functional.
347280	351040	Most of us run into problems when trying to figure out what a monad is, which in layman's
351040	356240	terms is just a monoid in the category of end functors. Haskell is great, but Microsoft developed
356240	361360	a functional sister language to C sharp called F sharp. Unlike Haskell, which is purely functional,
361360	366000	F sharp is also imperative and object-oriented, making it more approachable to developers
366000	370560	coming from higher up in the iceberg. Now, if you hate Java, a good alternative is Scala.
370560	374800	Like F sharp, it supports both object-oriented and functional programming, but it runs on the
374800	380400	JVM. It's statically typed, but there's another JVM language called Clojure that is both functional
380400	384560	and dynamic. This makes it more well suited for getting things done quickly with the trade-off
384560	389840	of type safety. Other popular functional languages include OCaml, which is used extensively at Facebook,
389840	395040	and Elixir, which has a very nice ruby-like syntax and is capable of building high-performance,
395040	399680	real-time web apps. There's also Elm, which is a purely functional language that compiles to
399680	404640	JavaScript, which can build front-end UIs with zero runtime errors, but now it's time to go one
404640	409440	level deeper to the heart of the iceberg. These languages are absolute chads. They're low-level
409440	413920	systems languages that can manually manage and optimize memory and are used to build things
413920	418800	like operating system kernels and compilers that make all the other soy-based languages possible,
418800	423680	the most legendary of which is C. It was used to build the Windows, Mac, and Linux operating system
423680	428240	kernels, and its curly brace syntax inspired many other languages on this list. Surprisingly,
428240	431920	it's not all that hard to learn and has a relatively small set of keywords to memorize.
431920	436720	However, being able to use it effectively requires extensive knowledge of algorithms and computer
436720	441120	architecture. For example, C doesn't have hash maps or dictionaries, so you'll have to learn how
441120	445040	to code up that data structure on your own. C was the perfect programming language when it came out
445040	451040	in 1969, but it only supported procedural programming and eventually developers wanted more. C++ was
451040	455840	originally a superset of C designed to extend it with object-oriented programming patterns,
455840	460640	like classes and inheritance. Unlike C, it's extremely hard to learn and provides many opportunities
460640	465440	to not only shoot yourself in the foot, but blow your entire leg off. This is a reference to manual
465440	469680	memory management with pointers, which got that name because they're just as dangerous as pointing
469680	474000	a gun at someone. Despite its learning curve, it's an extremely prolific language used to build
474000	479440	highly optimized software like game engines, compilers, and so on. C and C++ are still extremely
479440	484240	relevant today, but the modern Chad tends to prefer rust for low-level programming. It doesn't
484240	490080	have a garbage collector, but unlike C and C++, it uses a technique called borrow-checking instead
490080	494720	of pointers for memory management. This makes it much easier to write memory-safe programs and
494720	499040	consistently ranks as the most loved language in the world. The languages on this tier are
499040	503840	extremely popular, but now we descend further into the modern languages that you probably haven't
503840	508480	heard of. First up, we have V, which is a high-performance systems language that feels very
508560	514000	similar to Go, but unlike Go, it doesn't use a garbage collector, and unlike Rust, it doesn't do
514000	518960	borrow-checking, but it can still create memory-safe applications with its own auto-free innovation
518960	523440	where the compiler basically cleans everything up. I have no idea how it works, but it looks cool.
523440	528480	Another modern replacement for C is Zig. It's designed to simplify low-level programming by
528480	533120	eliminating features like macros and metaprogramming and is very explicit when it comes to memory
533600	538720	management, and it can cross-compile C and C++ just like Clang. Zig is not to be confused with NIM,
538720	543120	another high-performance language that's very expressive like Python, but is statically typed,
543120	547520	and interestingly, it has a tunable garbage collector that can be turned off altogether to
547520	552320	enable manual memory management. Recently, Google announced Carbon, designed to be a successor to
552320	558400	C++. What makes it special is that it can fully interop with a legacy C++ codebase. Another low-level
558480	563120	specialty language is Solidity. It's a statically typed object-oriented language, but is designed
563120	567840	for implementing smart contracts, especially on the Ethereum blockchain. Then we've got Hack from
567840	572320	Facebook, which is designed to interop with PHP. The original website was built with PHP,
572320	576880	but they needed a language with better performance and a type system to scale it up to the monstrosity
576880	581040	that it is today. There are many other good modern languages at this point in the iceberg,
581040	585840	like Crystal, Hacks, and Ferro, just to name a few, but now it's time to go down to the next level,
585840	589760	where we look at languages that are still either widely used or historically important,
589760	593600	but not something you would likely choose to program in. Fortran was the first high-level
593600	598000	programming language, and was by far the most popular language for many years until C came
598000	604080	around. Not long after Fortran, Lisp was invented in 1958. It pioneered many ideas we take for granted
604080	609200	in computer science today, like dynamic typing, higher-order functions, recursion, and repel.
609200	613600	It inspired many other languages like racket, scheme, closure, and to a certain extent,
613600	618640	JavaScript. Another highly influential language that came out this year was Algorithmic Language.
618640	623600	It's a big, complex language and never got as popular as Fortran, but its type system and use
623600	628240	of expressions had a major influence on the development of C and C++. The following year,
628240	634000	in 1959, Kobal was born. If you want to make money in the 2020s, learn Kobal, because over 40%
634000	639360	of banking systems still use it, with over 200 billion lines of code in production today. In 62,
639360	644800	APL first appeared, which stands for a programming language. It implements linear algebra directly
644800	649520	into the language with a multi-dimensional array or matrix being the central data type. This leads
649520	654480	to extremely terse code that resembles mathematical notation and makes heavy use of the Greek alphabet.
654480	659360	In 1970, Pascal was invented and took the programming world by storm. It's a procedural
659360	664400	language with a familiar syntax and also had very fast compile times. It eventually became the most
664400	669120	popular language in the early 1980s before the rise of C a few years later. There are many other
669120	673520	important languages from this time period, like Simula, the first object-oriented language that
673520	679120	went on to inspire Smalltalk, which itself inspired many other object-oriented languages like Python,
679120	683680	Java and Ruby. Then there's Erlang, a concurrent functional programming language that basically
683680	688080	powered the entire telecom industry and is still in use today. There's Ada, a general purpose
688080	692720	language named after Ada Lovelace, who's generally considered the world's first computer programmer.
692720	696960	It was extremely popular in the 1980s and is still used today by the Department of Defense
696960	700880	to blow people up. In addition, we should mention Prolog, the language that pioneered
700880	705200	logic programming, and MetaLanguage, which pioneered the polymorphic type system used by
705200	709520	other statically-typed functional languages like Haskell. There are many other historical languages
709520	714080	we could talk about, but now it's time to descend into the realm of the esoteric, where we find
714080	718560	rare and bizarre languages that feel more like works of art than engineering tools. The first
718560	724000	known esoteric language came out in 1972 and was called Intercal, which stands for compiler language
724000	728560	with no pronounceable acronym. It was designed as a parody to make fun of the languages of the day,
728560	733040	like Algol and Fortran. It has an entire paradoxical reference manual that makes no sense,
733040	737360	and has an interesting choice of keywords like please and mingle. Please doesn't actually do
737360	742080	anything, but it makes you a more polite programmer. Next up, we have brainf**k. Brainf**k is most
742080	746400	well-known for being extremely minimal. Urban Mueller created brainf**k in college, and it works
746400	751120	by initializing an array, then gives you a pointer and eight different characters to manipulate memory
751120	755680	in that array. This results in a codebase that will f**k your brain up. It inspired another language
755680	760640	called MaleBulge, or maybe it's Malbulgia, which is named after the Eighth Circle of Hell in the
760640	765280	Divine Comedy or Dante's Inferno. If you thought brainf**k was difficult, this language takes things
765280	769040	to a whole other level. It makes programming so difficult that I can't even summarize how it
769040	773600	works in a single sentence. If that's a little too dark, a far more fun language is Chef, which
773600	777840	is stack-based and is designed to make your code look like a cooking recipe. Instead of concise
777840	783200	keywords, it uses sentences like put ingredient into mixing bowl to push a value onto the stack.
783200	787680	Put these commands together to create a Hello World souffle, then specify how many it serves to
787680	791840	write it to the standard output. That's pretty cool, but it may seem kind of silly to an intellectual.
791840	796320	The Shakespeare programming language will make your code look like a Shakespearean play. It provides
796320	801040	the low-level control of assembly with the verbosity of 16th century poetry, but if words
801040	804960	aren't really your thing, then a good language choice would be Piat, which is named after Piat
805520	809760	Mondrian. It's also stack-based, but you write code utilizing patterns of 20 different colors
809760	814240	on a bitmap image. The end result is a code base that looks like abstract art. Now, if you're a
814240	819040	crazy cat lady, you're really going to love this next language, LOL code, which provides a developer
819040	824640	experience similar to an LOL cat meme. You open a program by saying hi, then end it by saying k
824640	829200	thanks bye. Loops can be performed with I'm in your or broken out of with I'm out of your. That's
829200	833840	nice and easy to understand, but it would be even better if it included emojis. Emoji code is a
833840	838480	language where the syntax is entirely based on emojis. Modern developers like to use so many
838480	842800	emojis in their documentation that this language would just streamline the entire process. It's
842800	847520	a fully featured object-oriented language where you can define code blocks with grapes and watermelons,
847520	851840	classes with rabbits, and generics with shells and eggplants. Another language that's not
851840	857040	necessarily esoteric is C minus minus. It's designed as a portable assembly language that
857040	861680	borrows heavily from C, but omits many of its features. The ultimate dialect of C, though,
861680	866880	is Holy C, which was created by Terry A. Davis and used to build TempleOS, an operating system
866880	871040	written under the direction of God. Holy C is actually really cool because it works like C,
871040	875280	but it's just in time compiled on the operating system, which means you can use it like a scripting
875280	879120	language that can interact directly with the operating system kernel. And that brings us to
879120	883680	the final tier, the absolute lowest level you can go with your learning as a software engineer.
883680	888400	Assembly is a language of which there are many variations that correspond directly to the
888400	894320	architecture on the CPU. Different CPU architectures like x86 and ARM require different machine
894320	898320	code instructions. Assembly allows you to represent this code with simple commands
898320	903280	that manipulate values on the CPU's registers. Now, if that looks too easy, the next level down
903280	908400	is machine code. At this point, we're looking at ones and zeros, or raw binary, usually represented
908400	912400	in hexadecimal format. To code at this level, you'll need to have intimate knowledge of the
912400	917200	computer's architecture and also be able to count in binary. But if we go beyond machine code,
917200	922720	now we're looking at billions of transistors on a CPU. A single transistor represents one bit,
922720	927200	like a one or zero, by controlling the amount of electricity that flows through a piece of
927200	932400	silicon. Now, in order to do anything useful, the transistors need to be organized into logic gates,
932400	938480	like not and or exclusive or and so on. Ultimately, it's these very simple chunks of logic that
938480	943120	perform the miracle of taking some electricity as an input that can produce some other electricity
943120	947120	as an output, and do it billions of times per second all over the world so you can play video
947120	951040	games with your friend in Vietnam. If that was too easy, then you may want to look into the field
951040	956080	of quantum electrodynamics. You fully understand how these particles behave in the electromagnetic
956080	961360	quantum vacuum. You can then use your skills to build a next-gen, blazingly fast quantum computer
961360	965440	and become the richest person in history. At this point in the iceberg, there's only one place left
965440	970240	to go, the scariest place of all, yourself. Once you know everything, the question becomes,
970320	974640	what is knowledge? Epistemology is the theory of knowledge, and philosophers still don't have a
974640	979200	good answer to this day. Reality only exists within my own mind. For all I know, the entire
979200	984320	external world and all the knowledge I've acquired are just illusions and projections from my own ego.
984320	988480	Maybe there's a godlike being that controls all the sensations and knowledge received by my mind,
988480	992880	or perhaps my real body isn't a vat of goo and I'm already living in Zuckerberg's Metaverse,
992880	997200	or maybe I never came out of that ayahuasca trip I took 10 years ago. The only thing I really know
997200	1001440	is that I know nothing. Thanks for watching, and I will see you in the next one.
