WEBVTT

00:00.000 --> 00:07.720
All right. Welcome to this week's Non-Pictive Geometry and Topology Seminar. It's our pleasure

00:07.720 --> 00:12.760
today to have Petr Zeeman from the Technical University of Denmark, who will tell us about

00:12.760 --> 00:16.280
quantum automorphism groups of graphs.

00:16.280 --> 00:25.080
Thank you for inviting me. So in this talk, I will talk about, as you said, quantum automorphism

00:25.080 --> 00:38.480
groups of graphs, and this work is based on those two quite recent papers with those

00:38.480 --> 00:41.280
people that are listed here.

00:41.280 --> 00:50.720
And so I'm currently a postdoc with David Robertson, and the project we are working

00:50.720 --> 00:56.960
on is in the intersection of graph theory and quantum information theory.

00:56.960 --> 01:04.240
So somehow, graph theory is used to study some concepts in quantum information theory.

01:04.240 --> 01:08.720
In particular, the area of graph theory is graphomorphisms, which I will talk about a

01:08.720 --> 01:22.320
little bit. And at some point in some works, quantum groups of graphs occur, and these

01:22.320 --> 01:35.480
two works are sort of like a bridge between those two areas in some sense, since probably

01:35.480 --> 01:45.280
from the quantum group side, there are two groups of people that work on quantum groups

01:45.280 --> 01:51.760
and that work on graph theory, and those groups usually don't know much about the things

01:51.760 --> 01:53.960
that the other ones work on.

01:53.960 --> 01:59.400
And basically, what I would like to a lot focus on in this talk is to show you some

01:59.400 --> 02:08.800
techniques from combinatorics that we used to obtain some, like in combinatorics, the

02:08.800 --> 02:14.240
combinatorial analog would be some simple results about automorphism groups of graphs,

02:14.240 --> 02:21.320
but for some reason, these results did not at all exist in the relatively recent but

02:21.320 --> 02:25.920
not that recent field of quantum automorphism groups of graphs.

02:25.920 --> 02:33.840
So let's start with just the notion of the graph isomorphism. So two graphs are isomorphic.

02:33.840 --> 02:39.600
Basically, if we can find a permutation or a bijective mapping between the vertices of

02:39.600 --> 02:46.640
one graph to the other graph, such that this mapping preserves adjacencies and non-agencies.

02:46.640 --> 02:53.880
So in other words, the graphs are exactly the same up to some relabeling of the vertices.

02:53.880 --> 03:01.560
We denote it like this. And so alternatively, this alternative two points of view will play

03:01.560 --> 03:09.240
a role here. So alternatively, one could view it if you take the adjacency matrices of the

03:09.240 --> 03:15.400
corresponding graphs and you would have a permutation matrix that has to commute with

03:15.400 --> 03:22.040
those adjacency matrices. So that's an equivalent definition of isomorphism of graphs.

03:22.040 --> 03:30.440
And another very impressive theorem was given by Lova's in a previous century in 1967, which

03:30.440 --> 03:37.040
basically characterizes this relation of being isomorphic by the following counting of homomorphism.

03:37.040 --> 03:44.920
So homomorphism of between two graphs is like isomorphism, but you relax the condition a

03:44.920 --> 03:51.800
little bit. It's a mapping that only has to preserve adjacencies. So for example, you

03:51.800 --> 04:01.880
can have a homomorphism from a bipartite graph to an edge. So and this notation means that we

04:01.880 --> 04:11.000
count the number of possible homomorphisms from some graph F to the graph G. So the isomorphism

04:11.000 --> 04:16.280
relation between two graphs is characterized by homomorphism counting. So the homomorphism counts

04:16.280 --> 04:21.160
the number of homomorphism from each possible graphs to those two graphs. If it's the same,

04:21.160 --> 04:29.560
then the graphs are isomorphic and also the other way. Now it's not necessary to just restrict

04:29.560 --> 04:38.440
ourselves to all graphs. We can use various families of graphs. So there is a similar

04:38.440 --> 04:45.960
notion of homomorphism indistinguishability, where we take some family of graphs and do these

04:45.960 --> 04:54.200
homomorphism counts within that family of graphs. And then we get a notion of homomorphism

04:55.160 --> 04:59.720
indistinguishability, which depends on that particular cross of graphs. So here we have

04:59.720 --> 05:07.640
a table of some results. And this is the Lovaas theorem, where we take the family of graphs

05:07.640 --> 05:13.240
to be all graphs. And when you take various other, let's say, natural families of graphs,

05:13.240 --> 05:18.840
you get other similarity relation between those classes of graphs, like for cycles. If you just

05:19.400 --> 05:24.760
take cycles, then this corresponds to the cospectrality of adjacency matrices, which means

05:24.760 --> 05:29.800
that the multisets of eigenvalues of the adjacency matrices of graphs is the same.

05:30.520 --> 05:37.560
Cycles and paths would be cospectral components. Trees, this is actually fractional isomorphism.

05:38.200 --> 05:47.240
So fractional isomorphism, you get by relaxing this equation here. So instead of a permutation

05:47.240 --> 05:54.440
matrix, you would use something called doubly stochastic matrix, which is basically that the

05:54.440 --> 06:04.920
rows have to sum to one. And then there is a class of bounded trivids, trivided most k.

06:05.720 --> 06:13.880
And this corresponds to indistinguishability by something called k-dimensional Weisfer-Lehmann

06:13.880 --> 06:22.280
algorithm, which I will talk about later. But it's just some procedure on graphs, but I will

06:22.280 --> 06:27.720
talk about it. But trivid k is some parameter of graphs, which tells you how much the graph is

06:27.720 --> 06:33.800
close to a tree. And then tree depth is something similar. So for various classes, we have notions,

06:33.800 --> 06:40.360
and then this is the important one here, that if you take planar graphs, this is a quite recent

06:40.360 --> 06:50.120
result that actually corresponds to a notion of quantum isomorphism. So homomorphism indistinguishability,

06:52.040 --> 06:57.880
homomorphism indistinguishability when you restrict yourself to planar graphs. So in other words,

06:57.880 --> 07:03.880
what we will see being quantum isomorphic, the result is that it's like having the same

07:03.880 --> 07:13.320
homomorphism counts from planar graphs. So, okay, so just a little bit about what is this

07:14.760 --> 07:18.200
quantum isomorphism. So this

07:18.920 --> 07:25.000
that this small home, this is just numbers, numbers, yeah, yeah.

07:29.160 --> 07:35.720
Number of homomorphism, yes. So this notion of quantum isomorphism comes from the notion of

07:35.720 --> 07:42.840
a non-local game, which is an important concept in quantum information theory. I will just briefly

07:42.840 --> 07:50.040
introduce it. So in the game, you have two players, Alice and Bob, and a verifier. And

07:50.040 --> 07:56.120
both of the players have some finite input sets, X, A, X, B corresponding to those players,

07:56.120 --> 08:01.160
and some finite output sets, Y, A, Y, B. And then you have a Boolean predicate, which is basically

08:01.160 --> 08:10.280
a function, zero one function from this Cartesian product. And so basically the players are asked

08:10.280 --> 08:18.200
a question from the input, and they have to answer, and the players win if this is evaluated to one.

08:19.240 --> 08:24.760
They cannot communicate after receiving questions, but they can decide on a strategy,

08:24.760 --> 08:31.400
what they will do. And there is only one round of the game, and one is concerned with perfect

08:31.400 --> 08:38.120
strategies in which players win the probability one. And now what kind of strategies can you have?

08:38.280 --> 08:47.720
You can have deterministic strategies, where you have just some functions, which deterministically

08:47.720 --> 08:54.440
say what will be the answers for Alice and Bob. Then you can have randomized strategies, which

08:56.680 --> 09:01.400
are not that much better, but where you can use some randomness potentially. And then you can

09:01.480 --> 09:08.840
have quantum strategies, where this Alice and Bob will share some entangled quantum state and

09:08.840 --> 09:19.560
use it to get answers. So let's immediately look at this GH isomorphism game. So we have two graphs,

09:19.560 --> 09:25.960
G and H. And the intuition is that Alice and Bob want to convince the referee that the graphs

09:26.760 --> 09:36.360
are isomorphic. So here is the setup basically similar that the Alice and Bob are asked some

09:36.360 --> 09:43.560
questions. Well, now the questions are the input sets are the vertices of the graph,

09:43.560 --> 09:50.120
also the output set. And what must be satisfied is that the relation between H and H prime is the

09:50.120 --> 09:58.680
same as a relation between G and G prime. So relation in the sense adjacency, not adjacency.

09:58.680 --> 10:03.000
So again, the players cannot communicate, there is only one round, and they must win with the

10:03.000 --> 10:09.640
probability one. And the theorem is that basically these classical players can win classical in the

10:09.640 --> 10:15.640
sense that they have like a deterministic strategy, if and only if the graphs are isomorphic. And now

10:15.640 --> 10:24.600
to define the quantum isomorphism is to basically turn this definition around and say that the graphs

10:24.600 --> 10:33.320
are quantum isomorphic if quantum players can win this game. So that's basically a definition that

10:33.320 --> 10:39.320
the graphs are quantum isomorphic if quantum players can win this GH isomorphism game.

10:40.040 --> 10:46.680
What does it mean just briefly is that here we have a shared entangled state between those

10:46.680 --> 10:54.760
players. And basically, so Alice and Bob share this quantum system in some states psi,

10:54.760 --> 11:02.120
which is basically a unit vector in some Hilbert space. And upon receiving this vertex G, Alice

11:02.120 --> 11:09.240
performs some measurement e g and this e g is basically some set of operators satisfying

11:09.240 --> 11:15.320
these conditions, which is based on the quantum formalism. And the same same is done by Bob,

11:16.040 --> 11:23.240
that he he does the same, these operators can commute. And there is some probability

11:24.040 --> 11:32.920
probability that the players respond H H prime, given G G prime.

11:36.680 --> 11:45.560
So one can reformulate this in using the notion of quantum permutation matrix. So here we have this

11:46.520 --> 11:55.880
that a matrix whose entries are p i j. And these are elements of some sister algebra is a quantum

11:56.520 --> 12:04.520
permutation matrix also called magic unitary. If we have this that each p i j is a projection,

12:04.520 --> 12:13.640
so it must satisfy these relations. And these these matrices in the sort of in the row and

12:13.640 --> 12:23.640
column must sum up to one. And the theorem by Lupini-Manchi-Sky-Robertson is that this

12:24.840 --> 12:33.160
graph quantum graph isomorphism is equivalent with commuting with a quantum permutation

12:34.040 --> 12:41.320
permutation matrix. So so it's it's can be expressed in a similar framework as the other

12:41.320 --> 12:46.520
similarity notions like isomorphism is just commuting or fractional isomorphism with

12:46.520 --> 12:53.160
with doubly stochastic matrix. And here we have commuting with this quantum permutation matrix.

12:54.200 --> 13:01.560
So formally formally this this is just written out what does it mean formally that these things

13:01.560 --> 13:10.040
commute. Yes, and it's important to say that quantum isomorphism is actually undecidable problem

13:11.000 --> 13:16.920
compared to the graph isomorphism problem which is clearly decidable where you just can

13:17.640 --> 13:28.360
can try all bijections between two graphs. And there I'm not stating not showing it here but

13:28.360 --> 13:35.880
there is an example of graphs that are not isomorphic but are quantum isomorphic.

13:40.200 --> 13:45.800
Right now I want to get to the somehow into the quantum isomorphism groups of graphs

13:47.000 --> 13:51.880
and let's just recall that the isomorphism groups of graphs basically express the symmetries of

13:51.880 --> 14:00.520
graphs and so so basically an isomorphism is just an isomorphism from a graph to itself.

14:01.240 --> 14:07.960
So it's a bijective mapping with which again preserves adjacencies and similarly

14:08.040 --> 14:18.200
automorphisms form a group under composition and it can be equivalently expressed using such equation

14:18.200 --> 14:24.200
that the adjacency matrix has to commute with a permutation matrix.

14:26.280 --> 14:34.920
Yeah so this in particular graph has a dihedral group d5 as an automorphism group we can do just

14:34.920 --> 14:45.560
reflections and rotations here. Okay so you probably know much more about these things but

14:45.560 --> 14:52.680
I'm just mentioning here that we have the notion of compact groups there is a correspondence between

14:52.680 --> 15:00.040
compact groups and commutative sister algebras then when we take the sister algebras to be

15:00.040 --> 15:09.560
non commutative then from there we go to compact quantum groups. So we now immediately

15:10.520 --> 15:18.680
say what is a quantum automorphism group of a graph. So this is definition according to

15:18.680 --> 15:26.680
Banica and basically so we say what is this sister algebra in this case so the

15:29.080 --> 15:34.760
c of qg that's how we'll denote the quantum automorphism group of graph is the universal

15:34.760 --> 15:41.320
sister algebra generated by the elements pij and satisfying basically these following

15:41.320 --> 15:48.680
relations which we had similar relations before and these first two relations correspond

15:48.680 --> 15:57.160
to the fact that sort of the p made up of this entries pij is a quantum permutation matrix

15:57.800 --> 16:05.240
and this last one corresponds sort of to this commuting equation.

16:05.400 --> 16:18.200
So if we require those pij to commute then then we get that the c of algae the algebra of functions

16:18.200 --> 16:25.640
on the automorphism group of graph and the pij would be a function taking an automorphism

16:25.640 --> 16:33.160
to the ij entry of the matrix representation and this matrix p is then called a fundamental

16:33.160 --> 16:46.520
representation of qg. Now let's connect it to quantum isomorphisms and so let p be the fundamental

16:46.520 --> 16:56.120
representation of qg and we can define the following relation that ij corresponding to some

16:56.120 --> 17:05.480
vertices let's say of the graph i is in relation with j if pij is not a zero.

17:06.920 --> 17:11.800
Now the theorem or lemma is that this is actually an equivalent relation

17:13.000 --> 17:20.920
and the orbits of the or quantum orbits are defined to be these equivalence classes

17:20.920 --> 17:30.440
of this of this relation and so the how we connected with the isomorphism quantum isomorphism is that

17:32.200 --> 17:40.920
if g and h are connected graphs then they are quantum isomorphic if and only if there exists g

17:41.960 --> 17:47.400
one vertex in the first graph and one vertex in the second graph which are in the same orbit

17:47.400 --> 17:53.400
of the union of the graphs which is sort of mimicking what is expected in classical

17:53.400 --> 17:58.440
automorphism groups of graphs i will mention it also later. It is a very important theorem

17:58.440 --> 18:05.160
which will actually provide us with the combinatorial tools that can be used to study

18:05.160 --> 18:12.200
quantum automorphism groups of graphs and this is exactly the following so let g be a graph and

18:13.000 --> 18:16.840
now i will define this two-dimensional Weissfer-Lehmann algorithm shortly

18:17.880 --> 18:23.240
but it's some kind of algorithm that creates a partition on the graph which is

18:23.880 --> 18:30.360
automorphism invariant in the classical automorphism group so we have this partition

18:31.320 --> 18:38.600
of the vertices and which is constructed let's say by this two-dimensional Weissfer-Lehmann algorithm

18:38.600 --> 18:43.160
and if two vertices belong in two different colors or partitions

18:45.160 --> 18:51.160
then this pij is equal to zero so in other words they are in different quantum orbits

18:52.440 --> 18:59.400
so so this is very important very very useful tool in general and it's actually

19:00.520 --> 19:08.200
this result is due to also these people and this is very powerful tool powerful combinatorial tool

19:08.280 --> 19:15.560
to use and it appears in many many different areas so it's actually i think quite fascinating result

19:16.600 --> 19:21.720
and there is also and i will talk about this there is also a better version of this two-dimensional

19:21.720 --> 19:27.000
Weissfer-Lehmann algorithm but it is no longer useful for quantum groups because as far as i

19:27.000 --> 19:34.360
understand it's not really possible to define quantum quantum orbitals

19:38.120 --> 19:44.040
like analogs of orbitals which are basically the orbits of the action of the group induced

19:44.040 --> 19:47.400
on the Cartesian product of the set on which is acting so

19:48.280 --> 19:56.760
yeah so if you remember in the beginning we had this slide where this notion of

19:56.760 --> 20:00.840
k-dimensional Weissfer-Lehmann indistinguishability is equivalent to

20:02.280 --> 20:10.360
homomorphism counts into graphs of this bounded trivite so then there was the result by

20:10.360 --> 20:17.000
robertson manjiska which says that quantum isomorphism is equivalent to counting homomorphisms

20:17.000 --> 20:24.280
from planar graphs so this is another reason why higher dimensional Weissfer-Lehmann doesn't work

20:24.280 --> 20:33.160
here is this because all planar like all trivite graphs at most two are planar but trivite graphs

20:33.160 --> 20:41.880
at most three are not all planar so that's another let's say reason why this Weissfer-Lehmann

20:41.880 --> 20:48.200
doesn't work anymore in higher dimension now let's finally talk about this okay Weissfer-Lehmann

20:48.200 --> 20:53.080
in a bit so now i want to a little bit talk about the graph isomorphism problem because that's

20:53.080 --> 20:58.440
actually the motivation for this Weissfer-Lehmann algorithm so the graph isomorphism problem is

20:58.440 --> 21:05.000
just the computational variant of this graph isomorphism so basically we'd get two graphs and

21:05.000 --> 21:11.560
we want to answer yes if and only if the the graphs are isomorphic and there is actually

21:11.560 --> 21:17.480
a polynomial time equivalent problem which is computing the generating set of the

21:17.480 --> 21:25.960
automorphism group of the graph so actually this is very similar to what we said before about

21:25.960 --> 21:34.440
quantum groups and quantum isomorphism that to to see this why why this is equivalent or at least

21:34.440 --> 21:39.800
one direction is to just consider two connected graphs and then take the disjoint union and

21:39.800 --> 21:47.480
basically if there is an automorphism taking one to the other then then we know that they

21:47.480 --> 21:52.280
must be isomorphic when there is a generator in the generating set of the automorphism group

21:52.520 --> 22:00.760
so the currently best known algorithm for graph isomorphism runs in this time which is called

22:00.760 --> 22:08.760
quasi polynomial and it is actually heavily based on group theory and just why this problem is

22:08.760 --> 22:17.000
actually interesting is that from the complexity theory point of view actually you can have basically

22:17.800 --> 22:24.200
things that can happen and each of them would be very interesting like if so the goal is usually

22:24.200 --> 22:30.280
to solve some problem in polynomial time and if you could solve it in polynomial time then it means

22:30.280 --> 22:37.560
that you probably have to invent some new mathematics if it was mp complete which is like the notion of

22:37.560 --> 22:45.880
algorithmic hardness then then something called polynomial time hierarchy collapses which is

22:45.880 --> 22:52.040
basically part of complexity theory and if this collapses then many people believe that this doesn't

22:52.040 --> 22:58.520
collapse so they believe there is evidence so that it should not be mp complete and when it's

22:58.520 --> 23:04.360
intermediate somewhere in between then it would resolve the famous p versus mp question so so this

23:04.360 --> 23:08.840
problem originated from some practical applications but actually for practical applications it's

23:08.840 --> 23:14.040
pretty much solved actually by these vise or lemma that I will mention it works very well

23:14.040 --> 23:23.960
in most of the practical cases but yeah so why is this problem actually difficult is that

23:25.320 --> 23:30.920
these algorithms are actually heavily based on group theory and

23:34.360 --> 23:40.920
one of the one of the main parts is to do some recursive algorithm and

23:41.320 --> 23:48.600
the problem the problem are are different complication complicated actions of some large group

23:48.600 --> 23:56.760
like if we have this simple graph then it has the automorphism group Sn and it has the so-called

23:56.760 --> 24:02.280
natural action on the set one to five which basically doing what you expect to just permeate

24:02.280 --> 24:09.160
the vertices but if you care to guess okay I'm missing an edge here oh no what is the

24:09.240 --> 24:12.600
automorphism group of this graph which is the well-known peterson graph

24:18.360 --> 24:26.040
yeah it's also s5 sorry s5 yes it was s5 yeah it's s5 but now it's acting like on 10 points

24:27.000 --> 24:37.720
and actually you cannot find like partition into into non-trivial blocks

24:40.120 --> 24:48.760
so like partition that is preserved by the action you can only partition it trivially

24:49.320 --> 24:55.480
and this means that action is primitive and you cannot do recursion so the problem is in

24:55.480 --> 25:02.600
this isomorphism testing with large large groups which have not quasi-polynomial order

25:02.600 --> 25:11.880
but it is a large order and complicated action that you cannot decompose okay so let's get to this

25:12.600 --> 25:18.520
vise-for-lemon so first the simpler version of the vise-for-lemon is just a color refinement

25:18.520 --> 25:23.480
algorithm which is something that probably if you were given as a homework to solve the

25:23.560 --> 25:29.560
isomorphism problem then probably this would be the first thing that would occur to you is that you

25:29.560 --> 25:39.880
just take two graphs and you first color all the vertices uniformly and now you look at each vertex

25:39.880 --> 25:46.360
and see how many what is the degree of that vertex and if you know that the degree is different then

25:46.360 --> 25:53.400
you surely cannot map it to some other vertex with a different degree so then you can recall

25:54.040 --> 25:59.240
the graph based on this you see that the blue vertices have the same degrees

25:59.240 --> 26:09.320
and the red vertices have the same degrees now you iterate this process until you get something

26:09.320 --> 26:17.560
stable that no longer can be refined and then basically if you end up with a different colorings

26:17.640 --> 26:25.560
then you can say that these these things are definitely not isomorphic but if you end up

26:25.560 --> 26:32.440
with somehow the same colorings then you really do not know now the vise-for-lemon algorithm

26:32.440 --> 26:40.280
does something better so instead of just coloring the vertices it's coloring the pairs of vertices

26:40.920 --> 26:46.360
right so how does it how does it work so here we have just this very simple

26:46.920 --> 26:54.120
graph and if you want to depict the pairs of vertices we can just depict them by some arrows

26:55.720 --> 27:02.600
so here is the the pairs of vertices that occur in this graph and we give it some

27:02.600 --> 27:08.760
initial coloring or initial partition so this green color corresponds that there to the fact

27:08.760 --> 27:15.720
that there is no edge here and this red color corresponds to the to the pairs of the form

27:16.520 --> 27:26.120
uu let's say and this blue corresponds to the edges now we count we construct a new partition in the

27:26.120 --> 27:39.160
next step yes in the initial coloring we and actually it will be recolored as you will see

27:39.160 --> 27:46.760
so the in the initial coloring all pairs that correspond to the edges to the actual edges

27:46.760 --> 27:52.120
will be colored the same and all pairs that correspond to the non-edges and the diagonal of the

27:56.520 --> 28:14.440
yeah and in the next iteration we do the following counting so for each pair uv of some color k

28:15.800 --> 28:22.600
and every ij we count the number of vertices such that there is such a triangle in the graph

28:23.160 --> 28:32.440
so the base of the triangle is the uv with color k and we count the number of vertices w such that

28:32.440 --> 28:39.560
there is the first step in color i and the second step in color j of course this k ij can be possibly

28:40.520 --> 28:47.320
the same they don't have to be all distinct and then for each pair we do this count and then in the

28:47.320 --> 28:56.840
next step we recolor the pairs based on these counts so the next step here would look something

28:56.840 --> 29:08.600
like this so actually you will get some some new colors on on here and the color and the new colors

29:08.600 --> 29:15.560
here and this actually makes sense because it should be approximating the orbits of the automorphism

29:15.560 --> 29:21.880
group and this that this vertex got orange these two vertices got orange color and this

29:21.880 --> 29:27.080
remained red actually makes sense because these two vertices here should be in a different orbit

29:27.080 --> 29:34.120
and these vertex and of course it doesn't work perfectly but it works very well and of course

29:34.120 --> 29:40.680
you can construct some examples where it doesn't work but it's a very as i said the connection

29:40.680 --> 29:46.200
with the quantum groups is actually also approximates the quantum orbit so basically whatever

29:46.200 --> 29:52.440
is distinguished by the vise for lemma you can also use it when studying the quantum group

29:53.720 --> 29:59.800
okay so what we actually did we colored the aj-sense matrix and now the idea of this vise

29:59.800 --> 30:04.120
for lemma you can think of it as basically constructing invariants in mathematics we

30:04.120 --> 30:12.040
distinguished objects by constructing invariants like the dimension of a vector space of or more

30:12.040 --> 30:18.600
complicated like in algebraic topology some homology groups so this is something similar

30:18.600 --> 30:26.200
basically because we colored the aj-sense matrix and we actually constructed some coherent algebra

30:26.200 --> 30:33.080
which is generated by the following matrices so to each color you can actually assign a zero

30:33.080 --> 30:42.200
zero one matrix so like this uh so here you have uh some these these are basically zero one matrices

30:42.200 --> 30:48.760
where the ones are exactly at those places which are of the same color and so in this case this

30:48.760 --> 30:55.000
coordinate algebra would be generated by these five matrices and it is like a matrix algebra

30:55.000 --> 31:01.880
satisfying the following condition so the first condition is that all of the matrices so this

31:01.880 --> 31:09.240
generating matrices might sum up to all ones matrix so which is here clear that if you sum it all up

31:09.240 --> 31:19.560
you get the all ones matrix so then there has to be has to be some some subset of the matrices

31:19.560 --> 31:25.400
that sum up to identity so in this case it would be this orange matrix and this red matrix they

31:25.400 --> 31:32.360
sum up to the identity so this basically tells you that is actually also approximating not only the

31:32.360 --> 31:38.040
two orbits of the graph but also the orbits so it should be more powerful than just the degree

31:38.040 --> 31:47.720
refinement and then if you take any pair of matrices if you use the bad student product the

31:47.720 --> 31:55.240
component wise product or true product then then you get the zero matrix and then you have the

31:55.240 --> 32:03.560
transpose matrix there it's like for example here we have a pair of transpose matrices and

32:04.200 --> 32:11.560
then the last condition is that the product of the matrix can be expressed in such a in such a sum

32:11.560 --> 32:19.400
and this number c i j actually are some constants that corresponds to this counting of triangles

32:19.400 --> 32:27.080
when it's finally stable so we have this kind of matrix algebra on top of the graph and if these

32:27.080 --> 32:32.920
algebras are isomorphic then or non-isomorphic then we can distinguish the graphs by this

32:32.920 --> 32:41.800
Weisfer Lehmann and if they are the same then we cannot make a conclusion now you can go even

32:53.480 --> 33:02.040
yes yes it's like basically it's the Weisfer Lehmann actually doesn't only have to be applied

33:02.120 --> 33:09.640
for graphs you can start with any because each each each of these matrices zero matrices can be

33:09.640 --> 33:15.880
also interpreted as just some binary relation right so you are basically starting with a bunch of

33:15.880 --> 33:21.720
relations and the Weisfer Lehmann algorithm will find what is called a coherent closure

33:23.080 --> 33:28.600
so the smallest coordinate algebra satisfying these conditions that contains those relations so

33:28.600 --> 33:33.560
but when you want to apply it for graphs you start with the specific three relations that

33:33.560 --> 33:35.800
I depicted but it's not necessary to do that

33:46.600 --> 33:53.000
yeah yes in this case it's just the adjacency matrix but in general you can get you can start

33:53.000 --> 33:59.640
with any bunch of relations yeah and you can go further you can do k-dimensional Weisfer Lehmann

33:59.640 --> 34:07.560
so here instead of coloring k tuples sorry two tuples you will be coloring k tuples but I don't

34:07.560 --> 34:13.800
want to get too much in today's because as I said it's not anymore relevant for quantum groups but

34:15.080 --> 34:21.400
but there are some very interesting connections like for example the k-dimensional Weisfer Lehmann

34:21.400 --> 34:28.120
distinguishes two graphs if and only if these graphs are distinguishable by k plus one

34:28.840 --> 34:37.800
variable sentence with counting quantifiers so for example here you have two graphs that

34:39.640 --> 34:47.960
this cycle and these two triangles so these are all regular graphs so one-dimensional Weisfer

34:47.960 --> 34:52.680
which was the color refinement is actually also called one-dimensional Weisfer Lehmann algorithm

34:54.520 --> 34:59.080
this doesn't distinguish these two graphs because all the vertices are the same degree

34:59.080 --> 35:04.040
so it doesn't do anything basically but you can distinguish them with two-dimensional Weisfer Lehmann

35:05.480 --> 35:11.480
and this would correspond to some formula in three variables

35:11.800 --> 35:19.240
you can implement this distance formula between the two vertices with one extra variable so this

35:19.240 --> 35:26.600
would be like a three variable formula that also distinguishes those two graphs so that's a

35:26.600 --> 35:31.800
connection to logic and then there are many more very interesting connections like integer linear

35:31.800 --> 35:36.360
programming as I said in the beginning the homomorphism counting that this homomorphism

35:36.360 --> 35:46.360
in distinguishability for bounded three-width graphs is equivalent to to being distinguishable

35:46.360 --> 35:55.720
by k-dimensional Weisfer Lehmann okay let's go somehow back to the quantum groups and

35:56.600 --> 36:03.400
um so I uh what what we did in our work we basically

36:06.120 --> 36:13.720
did a quantum group quantum underwater group of graph version of two classical results

36:14.760 --> 36:21.240
and I will mention them now so first of all like uh Frux theorem is quite old and it says that for

36:21.320 --> 36:28.360
every graph there or sorry for every group there you can construct a graph with the isomorphic

36:28.360 --> 36:34.280
automorphism group and actually the quantum analog of this Frux theorem does not hold

36:34.920 --> 36:41.080
even for quantum permutation groups and so but we are still interested in some quantum

36:41.080 --> 36:49.480
automorphism groups of restricted classes of graphs because a lot of the results about quantum

36:49.480 --> 37:00.120
automorphism groups of graphs were were in the spirit of analyzing whether a given graph has

37:00.120 --> 37:13.960
or does not have quantum symmetry or maybe some calculations for for some for some specific

37:13.960 --> 37:21.080
graphs let's say but uh it's it's kind of interesting that uh the the quantum

37:21.080 --> 37:30.360
automorphism groups of trees which we looked at uh was was not so much now and so to do that I want

37:30.360 --> 37:36.920
to recall a first product of groups so first product of groups and we will need the quantum

37:36.920 --> 37:42.280
analog of that first product of groups uh is like when we want to determine the automorphism

37:42.280 --> 37:47.480
group of two graphs if they are not isomorphic we can just use a direct product to construct the

37:47.480 --> 37:55.640
automorphism group but if they are isomorphic no longer works with uh the uh direct product

37:55.640 --> 38:03.000
because if you look at the structure of the automorphism group uh it's actually uh not a

38:03.000 --> 38:08.440
direct product if it was a direct product then this uh front square and the back square is the

38:08.440 --> 38:15.400
Cayley graph would be different so sorry the same if it was a direct product so it's just a

38:15.400 --> 38:20.760
depiction nice depiction of the structure of the group uh but this uh is described by the

38:20.760 --> 38:30.360
rest product and by that I just mean the following so uh if I have two groups and uh a set omega on

38:30.360 --> 38:38.040
on which q is acting then I can take the direct product like for each for each element of the

38:38.040 --> 38:48.680
set omega I take a group a copy of the group D and take the direct product of this and um

38:50.920 --> 38:57.320
and then the rest product is actually naturally defined as a semi-direct product uh and the

38:58.120 --> 39:06.600
the semi-direct product is defined by this action of of of q on the coordinates of this

39:07.160 --> 39:14.680
let's say vectors or uh omega tuples in in in this direct product in a natural way

39:15.400 --> 39:22.440
so just by action on the coordinates so that's the rest product and what we can do with this

39:22.440 --> 39:27.080
red product is for example to determine the automorphism group of a disconnected graph

39:27.720 --> 39:34.200
by the following formula so if we have like a bunch of copies of some graph then this

39:34.200 --> 39:41.320
automorphism group will be just the automorphism group of the component uh rest producted with

39:41.320 --> 39:51.160
the symmetric group and so in general if we have a bunch of connected components xi then we can use

39:51.160 --> 39:57.240
the following formula to compute the whole automorphism group uh based on the automorphism

39:57.240 --> 40:04.520
groups of the individual graphs and this actually can already give us a proof of a very neat theorem

40:04.520 --> 40:14.040
and this is one of the result that we will have a quantum analog for so this maybe is a very

40:14.040 --> 40:20.360
interesting theorem that could probably be even in some undergraduate course which basically gives

40:20.360 --> 40:28.200
a description of all the automorphism groups of trees and it's and it's quite quite simple so

40:28.200 --> 40:36.520
it's basically just an inductive description so there is a trivial group in the class and if

40:36.520 --> 40:40.280
there are two groups then there is a direct product and if there is a group then there is

40:40.280 --> 40:48.840
it's worth product with a symmetric group no so how to see this so if if we have uh if we have a

40:48.920 --> 40:54.680
group g and h then we can construct a tree with the direct product just by putting those trees

40:54.680 --> 41:02.040
onto a common root and maybe if g and h is the same so g equals h we can just add one vertex to

41:02.040 --> 41:07.720
prevent swapping so that we have the direct product and if you want to construct the rest

41:07.720 --> 41:14.680
product it's also easy we just take a copy of one tree uh or n copies of the tree then attach it to

41:14.680 --> 41:23.400
the common root and we get the rest product with the symmetric group on the other hand if you want

41:23.400 --> 41:29.800
to prove that these are all the groups then we can just take any tree delete delete the root

41:30.600 --> 41:35.880
it's okay enough to consider root trees delete the root apply the formula from the previous

41:35.880 --> 41:42.600
slides for disconnected graphs and notice that only only rest products and direct products

41:42.600 --> 41:48.040
occur there so so so the group must be in this in this class

41:50.200 --> 41:57.080
so now we have um let so the class qt is the class of all quantum automorphism groups of trees

41:57.640 --> 42:03.320
that can be described as follows so here instead of the direct product we will have a free product

42:03.320 --> 42:09.480
of the of the quantum groups and instead of the rest product we'll just have uh the so-called

42:09.480 --> 42:16.920
free rest product with a quantum symmetry group s and plus there is which which contains the

42:18.760 --> 42:27.160
contains the classical symmetry group and here um yeah it's just mentioned what I already said

42:27.160 --> 42:33.640
and there was a result by Fulton in 2006 who actually showed that the automorphism that the

42:33.640 --> 42:41.880
trees which have classical automorphism group s2 to the k have quantum symmetry but uh yeah this is

42:42.520 --> 42:51.880
of course contained in our result as well and um only recently only recently uh there has been

42:51.880 --> 42:56.200
almost at the same time publish a paper by some other person who I forgot the name

42:56.200 --> 43:02.840
but he actually also arrived to this result that we have and also for maybe some other classes of

43:02.840 --> 43:12.040
graphs uh by using completely different methods so doesn't use vice for lemma or so on so here I

43:12.040 --> 43:19.480
have again the definition of the quantum automorphism group of a graph but I can just go quickly

43:19.480 --> 43:27.880
because here um we have um just what we need something more is to add some condition so

43:27.880 --> 43:33.240
because we want to work with colored graphs right so we want to have uh some colors on the

43:33.240 --> 43:40.120
vertices and we want to preserve these colors so we just there is just some extra condition for that

43:40.760 --> 43:46.680
here is mentioned again quantum isomorphism let's just go further and uh so with quantum

43:46.680 --> 43:53.080
automorphism groups something that is uh very easy in the classical automorphism groups has to be

43:53.080 --> 43:59.640
checked very carefully so we have some bunch of operations that we use and for each we have to

43:59.640 --> 44:05.480
prove that this actually preserves the quantum automorphism group uh but this may be very obvious

44:05.480 --> 44:10.920
in the classical way but still we need it so one of the operation is for example that if you have

44:10.920 --> 44:17.640
just an independent set which is a union of colors then we can add edges between all the pairs of

44:17.640 --> 44:24.520
vertices in s so just something like this right so you have two color classes and you just add

44:24.520 --> 44:30.040
all the edges between that uh I mean it's a very simple thing but it has to be checked carefully

44:30.040 --> 44:36.200
with quantum groups um or adding a complete bipartite graph between two disjoint sets that

44:36.200 --> 44:43.880
are also union of color classes so something like this you have some color classes and you add like

44:43.880 --> 44:49.080
a complete bipartite graph between these so this also preserves quantum automorphism group

44:49.880 --> 44:56.440
or changing this is like very very seems very trivial that changing the color of some monochromatic

44:56.440 --> 45:02.840
vertex set to a different color or adding an isolated vertex of a color that no longer existed

45:03.560 --> 45:08.360
so because what do what we want to do we want to with quantum groups we also want to use some

45:08.360 --> 45:17.960
similar kind of induction as is used for regular trees but um we need to transfer from regular

45:17.960 --> 45:25.000
trees um sorry regular automorphism groups of trees we need to transfer from under unrooted

45:25.000 --> 45:31.480
trees to rooted trees so that we have some option for an induction and we we basically use this

45:31.480 --> 45:38.040
simple operation that we proved that preserve quantum automorphism groups to to replace undirected

45:38.040 --> 45:46.040
trees with rooted trees so how is it done like using this operation is very simple so you just

45:46.040 --> 45:52.440
color the vertices then you remove an edge so you can also reverse the operation then you add a

45:52.440 --> 45:58.840
vertex of a different color then you add like the complete bipartite graph between two color

45:58.840 --> 46:04.840
classes and then you uncolor and so it seems very trivial but somehow with quantum groups one has

46:04.840 --> 46:10.520
to check everything carefully that it works so it's like the process of rotification you can just

46:11.400 --> 46:18.520
basically introduce a root to to an unrooted tree oh i forgot to mention that every tree has a center

46:19.320 --> 46:25.000
which is either a vertex and edge which is like a vertex and edge which is like a subset of vertices

46:25.000 --> 46:33.960
that is equally distant from the leaves of the tree and we do this this process that was depicted

46:33.960 --> 46:40.760
here with the center and that is also de-rotification so so really that the class of rooted trees is

46:40.760 --> 46:46.360
exactly the same as an unrooted tree so rooted trees are basically just like trees with one

46:46.360 --> 46:53.240
distinguished vertex with one colored vertex which has to be preserved so here we if we have a rooted

46:53.240 --> 46:59.320
tree what we can do is basically attach a very long path to it and then basically we force

46:59.800 --> 47:04.200
force the center to be somewhere on the path because it will be very very long

47:05.560 --> 47:10.440
longer than any path in the tree and then we then then we can

47:12.280 --> 47:18.120
unrooted and basically we we will get that the automorphism or quantum automorphism group is the same

47:20.120 --> 47:28.680
so then i will maybe not define everything just go over this probably you're familiar with

47:29.320 --> 47:36.120
free products of quantum groups and then there is a free breast product of a quantum group so

47:37.240 --> 47:45.720
it's basically this analog of the the direct product and and

47:47.640 --> 47:58.360
breast product of groups and we have two important lemmas that are also analog of what is what we

47:58.360 --> 48:05.800
proved for this or what is known for these classical automorphism groups that if we if we

48:05.800 --> 48:12.120
basically have a bunch of color color graphs that are all connected we have some components

48:13.000 --> 48:18.680
and these components are not quantum isomorphic in this case then actually the quantum automorphism

48:18.680 --> 48:23.960
group of this de-joint union of graphs can be just expressed as a free pre-product of this

48:23.960 --> 48:33.880
quantum automorphism groups and similarly if we have like a connected vertex color graph and if

48:33.880 --> 48:41.800
we take n copies of this graph then the quantum automorphism group of this digital union is

48:41.800 --> 48:47.240
expressed as a free breast product with the quantum symmetry group and i didn't actually

48:47.240 --> 48:52.440
mentioned how we are actually using the vice for lemma here but the vice for lemma here is used

48:52.440 --> 49:03.640
in such a way that basically vice for lemma can distinguish all trees so since it can distinguish

49:03.640 --> 49:13.320
all trees then it's enough to decide isomorphism for them so it's also enough to decide quantum

49:13.320 --> 49:21.640
automorphisms for them so in other words thanks to these trees are isomorphic if and only if there

49:21.640 --> 49:29.640
are quantum isomorph so that's why we can apply these things for trees and putting these things

49:29.640 --> 49:36.760
together we get this equivalent or equivalent the quantum version characterization of the

49:36.760 --> 49:46.920
quantum automorphism groups of trees another result that i will mention is the sabidusis theorem

49:47.640 --> 49:56.520
so this theorem says about lexicographic products of graphs so here is like some

49:57.240 --> 50:01.960
technical definition but it's very easy what is a lexicographic product of

50:01.960 --> 50:08.760
product of graphs so basically this is a lexicographic product of a cycle with k2 which is an edge

50:09.560 --> 50:16.920
so basically we take for each vertex of the outer graph we take a copy of the inner graph so

50:16.920 --> 50:26.760
like here we have four red edges and put all possible edges between the copies if there was

50:26.760 --> 50:33.480
an edge in the c4 so basically we just take a bunch of for each vertex of the outer graph

50:33.480 --> 50:41.400
we take a copy of the inner graph and and put complete bipartite graphs between those copies

50:41.400 --> 50:49.640
if there was an edge in the outer graph x and the sabidusis theorem says that the automorphism group

50:49.640 --> 50:59.160
of of this lexicographic product of two graphs is described as a breath product of the corresponding

50:59.160 --> 51:07.560
automorphism groups if and only if some condition holds what is the condition so this is actually

51:07.560 --> 51:16.440
two conditions written in one so if this inner graph is disconnected then the outer graphs should

51:16.440 --> 51:24.440
have no twins twins are vertices that have see exactly the same neighborhoods so you can imagine

51:24.520 --> 51:31.160
if this inner graph was disconnected and there were twins in the outer graph you can think of

51:31.160 --> 51:37.000
how you could create extra automorphisms that are actually not in this breath product so this

51:37.000 --> 51:43.080
breath product will be a subgroup always but the equality happens if this kind of condition is

51:43.080 --> 51:53.160
satisfied for for the graphs right so in this case this is like s2 breath product with d4

51:53.160 --> 52:02.360
the dihedral group and the quantum version is just that we replace we replace automorphism groups

52:02.360 --> 52:13.880
with quantum automorphism groups and we get a free breath product in there and just in all proved

52:13.880 --> 52:23.880
the result by completely different methods some years ago just for regular graphs so just for

52:23.880 --> 52:30.280
graphs which have the same degree at every vertex so we obtained basically probably a much more

52:30.280 --> 52:38.680
elementary proof for this and we prove it for all graphs so we we make a quantum version of the

52:38.680 --> 52:47.400
sabidu CTRM and here we actually use the Weisner-Lehmann algorithm more deeply

52:49.560 --> 52:54.360
so I'm not going to now go into these counts let's just ignore that for now

52:55.640 --> 53:00.520
so but basically what we have to do we have to just follow the Weisner-Lehmann algorithm

53:00.520 --> 53:06.520
and see that the inner and outer edges so what we want to basically prove

53:06.520 --> 53:13.640
because what are these what are these automorphisms in a classical case what what should they do

53:14.760 --> 53:20.520
you should have if this is just an equality you should have just two types of automorphisms those

53:21.080 --> 53:29.080
that follow the structure of the outer graph and those that act inside the inner graphs

53:30.040 --> 53:36.680
this is just two types of automorphisms that should be there in case there is an equality

53:37.960 --> 53:45.960
and what we use the Weisner-Lehmann to do is that we prove that the Weisner-Lehmann actually

53:45.960 --> 53:51.400
distinguishes all the inner edges and all the outer edges so this is just a purely

53:51.400 --> 53:58.200
combinatorial result but thanks to the connection of Weisner-Lehmann and the quantum groups we can

53:59.400 --> 54:06.840
it actually helps to also analyze the quantum groups so it's not clear how actually Sabidouci

54:06.840 --> 54:14.760
proved it in his original paper because this is something from the 50s and it was there were

54:14.760 --> 54:21.000
several iterations for the papers there were several mistakes in it like it was at least

54:21.000 --> 54:27.240
three times corrected or two times and but he must have done something similar he must

54:27.960 --> 54:31.160
somehow distinguish the inner edges and outer edges but

54:33.080 --> 54:38.760
but the Weisner-Lehmann algorithm is much more elegant way to do it and we also

54:39.880 --> 54:45.800
not only update the quantum version of Sabidouci but I think we prove the Sabidouci theorem in an

54:45.800 --> 54:53.640
elegant way and maybe I'm coming to it to the end and

54:57.000 --> 55:05.640
okay let's just quickly go over this thing here so we could we could then actually also prove this

55:08.200 --> 55:13.880
yeah so we actually do the then do the same we could prove it by ourselves but it's easier to

55:13.880 --> 55:21.240
use this existing result by Banika and Bishon where they actually define yet another kind of

55:21.240 --> 55:29.240
product of graphs which is the free they call it free product of graphs but and they I'm not going

55:29.240 --> 55:36.280
to define it because it's not that important now and they prove that this quantum automorphism group

55:36.280 --> 55:43.000
of this free product of graphs is also the rest product so and for us to use the free product

55:43.080 --> 55:49.880
is actually exactly what we need from the Weisner-Lehmann is this partition of this inner

55:50.520 --> 55:57.240
and outer edges and non-edges and then we can just very simplifying it now then we can plug in

55:57.240 --> 56:02.600
to this Banika and Bishon and this is exactly what is doing just in all who proved this only

56:02.600 --> 56:11.160
for regular graphs he's also using this result by Banika and Bishon and yeah and just just

56:14.760 --> 56:19.400
yeah so we prove that under the sabidusi condition the quantum automorphism group

56:20.120 --> 56:26.840
of this lexicographic product of graphs what we what we want is exactly equal to the quantum

56:26.840 --> 56:34.600
automorphism group of this free product of these graphs where they are colored based on these colors

56:34.600 --> 56:41.960
that we obtained from Weisner-Lehmann and with this color because this free product of graphs by

56:41.960 --> 56:49.160
Banika and Bishon is by is using some colors and we use exactly these colors from Weisner-Lehmann

56:49.160 --> 56:59.880
to plug into their product basically and yeah so maybe I almost ran out of time here is just

57:01.240 --> 57:09.240
a very small cherry on top is that you can also you you can prove a version of this sabidusi

57:09.240 --> 57:16.360
TORM for vertex transitive graphs this means that the two the graphs have just one orbit

57:16.360 --> 57:25.720
in their automorphism group and yeah let's just not go over this anymore but the theorem is basically

57:25.720 --> 57:34.840
that if it's not the case that the equality occurs in the sabidusi theorem then for vertex

57:34.840 --> 57:41.720
transitive graphs you can still find a formula for the automorphism group and the quantum version

57:41.800 --> 57:51.160
happens to be exactly the same okay so let's just mention some problems at the end so something

57:51.160 --> 57:58.680
that we already have in progress is to and there we have to do much more quantum groups

57:59.320 --> 58:06.680
is to define inhomogeneous free rest product so you have this rest product of groups

58:07.560 --> 58:15.720
where you have a group acting on some set and now to each element of this set you assign a group

58:15.720 --> 58:23.160
now you can consider the orbits in this action and for each orbit you could pick a different group

58:23.160 --> 58:29.000
so in this way you get an inhomogeneous rest product of groups which somehow generalizes

58:29.000 --> 58:35.080
the rest product and it would be interesting to have a quantum group analog of that and see

58:35.800 --> 58:42.040
what it what can be done with it so maybe apply it for some further graph classes

58:43.160 --> 58:47.880
like planar graphs for example and planar graphs this there are some problems even in planar

58:47.880 --> 58:53.400
graphs that are not clear and it might be very interesting for people working in geometry because

58:55.080 --> 59:00.520
if you wanted to determine the automorphism groups of planar graphs there is a key case

59:00.520 --> 59:07.720
of so-called three connected planar graphs if you don't want to so three connected planar graphs

59:08.760 --> 59:17.800
basically corresponds to the graphs of polytopes and Mani's theorem says that they can be uniquely

59:17.800 --> 59:22.600
embedded into the sphere in such a way that the automorphisms of the three connected planar

59:22.600 --> 59:28.200
graphs exactly correspond to isometries of the sphere so the automorphism groups of three

59:28.200 --> 59:35.880
connected planar graphs are exactly the finite subgroups of O3 and so these are some infinite

59:35.880 --> 59:46.040
families of groups and the symmetric groups of platonic solids and so quantum Mani's theorem or

59:46.360 --> 59:57.960
or yeah or and maybe because there is a quantum group O plus three so there might be something

59:57.960 --> 01:00:04.760
there so look at maybe quantum automorphism groups of three connected planar graphs even that would

01:00:04.760 --> 01:00:08.440
be very interesting I think so that's it

01:00:17.560 --> 01:00:23.320
answer very much for that very interesting talk do we have any questions either in person or perhaps

01:00:23.320 --> 01:00:28.920
we have something

01:00:39.720 --> 01:00:44.920
yes

01:00:44.920 --> 01:00:49.920
How do they respond to this?

01:00:49.920 --> 01:01:10.920
Quantum on the resume group of a complete graph should be the SM plus, the quantum permutation group.

01:01:10.920 --> 01:01:30.920
Actually, I don't know much about the result, I just heard a talk which claimed this, but yeah, I think it should be definitely true that there is no quantum analog for proof theorem, but I don't know exactly the statement from the top of my head, what is exactly the statement that they proved in that.

01:01:30.920 --> 01:01:40.920
It was proven by, I think, Bishop McCarthy.

01:01:40.920 --> 01:01:55.920
And when you mentioned the flux sum and the failure in the quantum sense, what I was wondering is there, so if it fails for graphs, I mean, is there some other structure for which there is a version, a quantum version of.

01:01:55.920 --> 01:02:04.920
Yeah, I don't know, but yeah, it's an interesting question, but I don't know.

01:02:05.920 --> 01:02:14.920
Well, classically, the point is that every group is a permutation group.

01:02:14.920 --> 01:02:28.920
So every group acts on itself, but if you have a quantum group, then one group is not a classical space, and quantum permutation groups in this sense are symmetries of classical spaces.

01:02:28.920 --> 01:02:52.920
So if you want it, a quantum proof theorem, you actually should not consider classical graphs, but quantum graphs, some graph structure on quantum, on some algebra, non-quimitorial algebra.

01:02:53.920 --> 01:03:11.920
I wanted to ask, again, for the difference between the Weisfeller-Lehmann and the quantum isomorphism, so is the difference quantified somehow more precisely, how much is different?

01:03:11.920 --> 01:03:38.920
So in terms of computability, there's a huge difference, but for how many graphs, the orbits are different by Weisfeller-Lehmann or quantum automorphism, or do we know some examples of pairs of graphs that cannot be distinguished by Weisfeller-Lehmann,

01:03:38.920 --> 01:03:42.920
but they are not quantum isomorphic or something in this sense.

01:03:42.920 --> 01:03:55.920
Like, if I understand it correctly, like if you, so if they are not distinguished by two-dimensional Weisfeller-Lehmann, or because...

01:03:55.920 --> 01:03:59.920
I don't think it tries strongly regular graphs.

01:03:59.920 --> 01:04:00.920
Yeah, I...

01:04:00.920 --> 01:04:07.920
Because Weisfeller-Lehmann says classically, it tries strongly regular graphs, it stops in the beginning.

01:04:07.920 --> 01:04:13.920
That's like, yeah, maybe.

01:04:13.920 --> 01:04:23.920
Then maybe you want the other extreme where Weisfeller-Lehmann works fine, but the quantum algorithm or whatever...

01:04:23.920 --> 01:04:24.920
Isomorphism.

01:04:24.920 --> 01:04:25.920
Isomorphism.

01:04:25.920 --> 01:04:40.920
It is basically the same, but classically, more complex than these, but far from strongly regular graphs.

01:04:40.920 --> 01:04:41.920
Yeah, yeah, right.

01:04:41.920 --> 01:04:49.920
That would also be interesting to have some larger class of graphs where we know that Weisfeller-Lehmann would answer the question.

01:04:49.920 --> 01:04:51.920
Well, power graphs.

01:04:51.920 --> 01:04:53.920
Well, power graphs is not clear.

01:04:53.920 --> 01:05:02.920
For power graphs, it's not clear whether two-dimensional Weisfeller-Lehmann will answer the question.

01:05:02.920 --> 01:05:15.920
So power graphs is actually the open problem, whether two-dimensional Weisfeller-Lehmann will distinguish them, but currently it's known that three-dimensional Weisfeller-Lehmann distinguishes power graphs.

01:05:15.920 --> 01:05:19.920
And the open question is whether also two-dimensional distinguish them.

01:05:19.920 --> 01:05:21.920
And yeah, maybe.

01:05:21.920 --> 01:05:30.920
But people believe it's going to be true.

01:05:30.920 --> 01:05:37.920
Like you mean it's conjectured that it works even for the classical automobiles.

01:05:37.920 --> 01:05:38.920
Yes.

01:05:38.920 --> 01:05:39.920
Yeah, right.

01:05:39.920 --> 01:05:52.920
But for the classical, it is not clear whether two-dimensional, two-dimensional, three-dimensional, five-dimensional, about one-thousand.

01:05:52.920 --> 01:06:00.920
Yeah, well, if the classical conjecture was true, then it's not that interesting for the quantum place.

01:06:00.920 --> 01:06:03.920
But if it was not true, then maybe it is.

01:06:03.920 --> 01:06:04.920
Yeah.

01:06:04.920 --> 01:06:08.920
Yeah, that's a good question.

01:06:08.920 --> 01:06:19.920
Not any other.

01:06:19.920 --> 01:06:25.920
So can you explain where this undiscibility comes from?

01:06:25.920 --> 01:06:27.920
Why it is not decidable?

01:06:27.920 --> 01:06:31.920
Because in the classical case, you just check all the bijections.

01:06:31.920 --> 01:06:37.920
But why here there is problem that there is no algorithm?

01:06:37.920 --> 01:06:42.920
Yeah, I don't know the problem.

01:06:42.920 --> 01:06:50.920
But you must check, I mean, it should be the problem that you have to check infinitely many possibilities.

01:06:50.920 --> 01:06:54.920
Otherwise stupid algorithms would exist.

01:06:54.920 --> 01:07:00.920
Yep.

01:07:00.920 --> 01:07:01.920
What?

01:07:01.920 --> 01:07:10.920
So if there's nothing further, then maybe let's thank our speaker again.

01:07:10.920 --> 01:07:16.920
And next week, we will have somebody.

01:07:16.920 --> 01:07:18.920
I hope you will join us.

