start	end	text
0	4960	My father was a chip designer. I remember barging into his office as a kid and seeing
4960	9400	the tables and walls covered in intricate diagrams and drawings. I watched him work
9400	15620	in fascination as he painstakingly drew lines I did not understand. These days nobody draws
15620	20160	circuits anymore by hand. In this video we are going to dive into a critical software
20160	26320	tool for chip designers. Electronic Design Automation or EDA. Without this unheralded
26320	31040	software, many of today's most advanced chips cannot be made.
31040	35560	But first, I want to ask you to subscribe to the Asianometry newsletter. The newsletter
35560	39880	is a good companion to the videos. I know that there's a lot of videos, so that's
39880	43840	why I'll write the newsletters. Check them out for the full scripts as well as additional
43840	48480	commentary after the fact. I might also have some additional newsletters in the future
48480	53080	with thoughts and ideas on things in the wider tech world. You can find the link to the newsletter
53080	58280	in the video description below or you can just go to Asianometry.com. As of right now,
58280	65440	you can expect a new newsletter every Thursday at 1am Taiwan time. Much thanks.
65440	69360	Before we can understand how EDA software helps the chip designer, we need to know the
69360	74760	chip design process flow. How does a company like Apple or NVIDIA design their custom
74760	80320	chips? The process and the names might differ from company to company, but a generic flow
80440	85480	might look something like this. First, the product designers and system engineers at
85480	90080	a high level envision a product. They might not know too much about circuit design, but
90080	94560	they do know what their customers want, and so they come up with a set of integrated circuit
94560	100840	requirements based on the customer's needs. Next, the chip's requirements enter logic
100840	105760	design, also called circuit design. These people translate abstract requirements into
105800	110400	circuits with the logic capable of meeting those requirements. Think of it like a UX
110400	115000	designer who crafts how a software feature might look, act, and feel together with a
115000	119920	product manager. A chip has many circuits on it and those circuits do different things.
119920	126000	I'll briefly touch on two such circuits. Logic circuits or gates act sort of like a
126000	131280	decision box. It receives inputs, puts them together, and comes out with an output. Is A
131360	137600	equal to B? D is true only if E and F are also true. Stuff like that. Just one logic
137600	142880	circuit by itself can seem pretty simple, but in groups they can do amazing things, like zombies.
144080	148560	The second type circuit is called a memory circuit. It is capable of remembering whether a
148560	154720	value was true or false, kind of like a light switch that is on or off. Once the logic designer
154720	159280	has completed their work, they end up with groupings of logic and memory circuits connected
159280	165600	together with wires. This grouping is referred to as a net list. After the logic design process,
165600	170560	the design gets handed over to the physical designers. The work they do involves the literal
170560	175600	physical layout of the logic circuits, memory circuits, and the wiring between them on the chip.
176160	179840	When you have thousands or even millions of such circuits, this can get difficult.
181040	185520	Once it goes through all of that, the chip design is verified and tested for errors before being
185600	192560	sent to a foundry like TSMC or Samsung Foundry. EDA software is heavily involved in every one
192560	199040	of these stages. Even a company like TSMC or Samsung uses EDA software to check a newly
199040	205120	arrived design to make sure it is compatible with all of their design rules. Such testing or design
205120	211120	rule checking is an especially big deal. An error here can cost millions of dollars if it slips
211120	217520	into the fabrication stage. At the early stages of chip design, basically into the 1970s,
217520	223040	chip designs were done by hand. The designer would draw a design on paper. This paper design would
223040	228720	then be transferred to a photo mask made of a material called rubylyth. The photo mask can then
228720	234240	be used to produce the chip design's patterns on the substrate. This is done by projecting light
234240	239840	through the mask onto the material, and so on. But as chips got increasingly more complex with
239840	245120	more transistors and connections, simple software tools were developed in-house by the big companies
245120	250640	to aid in the design process. These tools would become the EDA software tools used today.
251760	256640	The first software programs automated the placement of a very small number of blocks and wires on a
256640	262000	circuit board. Not a chip, but a circuit board. Routing makes sense for these early programs
262000	267360	because the task gets tedious. It also needed to be constantly done over and over again as
267360	272880	board components moved around. At the beginning, these big mainframe programs ran simple breath
272880	278880	first search algorithms across the grid. Breath first meaning that they explore all the possibilities
278880	285200	at a single level first before diving deeper to the next level. This was rather slow, so these
285200	291600	programs quickly moved on to other algorithms in later versions of the software. As a number of
291600	297200	components within an integrated circuit started to exceed that on a circuit board, EDA software usage
297200	303840	moved to the silicon realm. Bringing EDA to silicon helped solve daunting challenges in chip making.
303840	309600	A chip is built in layers. Now you have to wire connections in 3D, taking into consideration
309600	315200	layer-to-layer connections called vias. It adds astounding amounts of complexity and presents
315200	322000	huge opportunities for errors, and would lead to a chip design problem. Moore's Law, an observation
322000	327280	not a real law, set the pace for the semiconductor industry to produce chips with ever increasing
327280	333200	numbers of transistors. Assuming the industry follows Moore, that translates to roughly a
333200	338880	historical 58% annual rise in the number of transistors that fabs are capable of fabbing.
339920	344800	Being capable of fabbing that many transistors is one thing, but designing the actual transistors to
344800	350560	be fabbed is another matter. Design can only go along so fast because human knowledge and skills
350640	356640	cannot scale up as fast as tools in capital. And if you disagree with that statement, then I recommend
356640	360960	you check out the Mythical Man Month or other works on project and software management.
362160	366320	At the same time, consumers want that next hot chip in their hands right now.
367520	372640	What results is a gap in productivity between design and manufacturing capabilities.
372640	378800	A company like AMD might need a few years to come out with a 5nm chip, even if TSMC had the
378800	384560	capacity for them to use. Imagine if mega customers Apple and Huawei weren't around,
384560	388720	would TSMC even bother to put out a 5nm process node so quickly?
389600	395120	Better EDA tools are the only practical way that chip design teams can keep up and close the
395120	402720	productivity gap. Commercial automatic physical design systems began emerging in the 1980s.
403360	408240	They came as a result of not just improved computing power, but also powerful new display
408240	414480	technologies. The first EDA software literally just drew things on paper like a printer. The advent
414480	420480	of reasonably priced storage tube class CRT screens made the industry much more accessible to industry
420480	426880	designers. The industry also pioneered and adopted new approaches to chip design that unlocked more
426880	432640	of the EDA industry's automation powers. Engineers and universities advocated for a more
432640	437760	space efficient design style on pencil and paper called Programmable Logic Arrays.
438480	443120	But EDA software for this style did not scale very well. You had to do a lottery drawing
443120	449040	whenever components changed. And conceptually, people had to handle the design at both a high
449040	454800	and low level of abstraction. This made design difficult. It is kind of like having to architect
454800	460720	a house while crafting the bricks at the same time. The semiconductor industry on the other hand
460720	466080	developed a standard cell style. Here, designers choose from a library of standardized groups of
466080	472400	gates called cells and decide how they are wired together. This allowed the design process to
472400	477360	split into the separate logical and layout functions I mentioned earlier. It abstracted
477360	482640	away the bottom level stuff and let people focus on their own areas. And because the cells are
482640	488480	standardized, EDA software can consistently create electrically and physically correct designs all
488480	494480	the time. Several people criticized the style for being less area efficient. Some early standard
494480	500160	cells had half of their area being taken up by routing. But because its EDA works so much better
500160	506080	for designers workflow, it became the industry standard. Think of it like with programming.
506080	510640	You can write, test, and debug a program much faster if you did not have to sit and wait several
510640	515840	minutes for your code to compile every time you made a change to it. Such a programming language
515840	522400	is likely to gain traction even if it isn't as efficient as other alternatives. An EDA industry
522400	527440	sprouted to service various parts of the chip design process. Over time, those software firms
527440	532960	consolidated has task got harder and required integration across various stages of the design
532960	538400	cycle. Their proprietary libraries would end up being the de facto standard across the entire
538400	544720	industry. The two leading companies in this space are Cadence and Synopsys. Both are based in the
544720	550960	United States and are publicly traded. Cadence has a 34 billion dollar market capitalization
550960	557520	and Synopsys 36 billion. The two companies are the creation of a long series of acquisitions.
557520	561600	They have been involved in the industry for a long time and have struck alliances with large
561600	567360	players like TSMC and Samsung Foundry to help solve problems in transitioning a chip from the
567360	573920	design to the real world. They just make things so much easier. For fabulous entrants looking to
573920	579200	enter into the semiconductor world, they likely have to go through these EDA vendors and get their
579200	584400	software to get started. Your company might have to pay millions of dollars to acquire a whole bundle
584400	590560	of software tools, a common trick in the SAS world. Beyond just the EDA tools, the companies own a
590560	596720	lot of IP as well. They make money licensing out useful IP blocks for standard functions in a chip
596720	602800	like IO. Kind of like how in Canva, the online graphics design tool that I use to make my videos,
602800	607920	you have to pay one dollar for this little emoji or flower of clip art that you want to use in your
607920	613200	design. Sure, I can go find something else or even make my own, but why bother? This works the best
613200	618320	and is the most convenient. As a result, both companies have very good gross margins and strong
618320	623760	cash flows. Software subscriptions and IP license businesses are like that. And so they can spend
623760	628320	a whole lot on R&D to further extend their current advantages. So I would say that their
628320	633680	positions are pretty rock solid. Their stock valuations already reflect all of this in case
633680	638240	you're wondering, this stuff ain't cheap. I would not go out and start buying these company
638240	643520	stocks anytime soon. There are a few companies out there challenging the two major incumbents.
643520	647840	Google apparently made their own EDA tool to design a recent YouTube chip. That's really
647840	652880	interesting. There are a few Chinese alternatives like Empyrion and Sellecksoft that recently
652880	658880	have gotten increased attention due to the US-China trade war and not to mention open source EDA
658880	665520	tools for things like risk five. Such efforts as of now remain undeveloped and lag the market leaders.
666960	671280	For EDA enabled chip design, exciting new developments remain on the horizon.
671280	676000	Programmers are applying machine learning to EDA software and that is showing some promising new
676000	681920	results. For example, machine learning can help EDA tools find an optimal route for the wires
681920	687280	between the chip circuits. It can help simulate what sorts of patterns a photo mask design will
687280	692080	project during the lithography phase. And outside of the machine learning, vendors are still
692080	697760	experimenting with new techniques to best adapt to this new industry trend of systems on chip or
697760	704480	SOC designs. Without EDA software, the cost of creating new chip designs would soar even faster
704480	709200	than they already are. They are a critical part in the industry and today's amazing chips would
709200	714640	not exist without them. Alright everyone, thanks for watching, that's it for tonight. If you want
714640	718000	more content you can like and subscribe to the channel, I would appreciate it if you did.
718640	721120	And remember to hit up the email newsletter and sign up.
721760	726720	Want to send me an email? Drop me a line at john at asianometry.com. I love getting letters from
726720	730240	viewers. Until next time, I'll see you guys later.
