{"text": " Welcome. This is the tutorial for a conch. If you're not here for a tutorial on conch, you're really in the wrong room. But we hope you're in the right room. Yeah, we think this room is the best actually. You made a good choice. You can introduce yourself. Hi, I'm Anthony Scopatz. I work for Quonsite and according to the slide I am both a madman and a poet, so I hope that this inspires you in some way today. I'm Gil Forsythe, not Gorsythe. I am also a madman and a poet according to the slide. I currently work for Capital One. Yeah, that's why I got it. Yeah, and thanks for being here with us 8 a.m. on a Monday morning. Not everybody wants to learn about new show languages at 8 a.m. on Monday morning, but so we have a few bits of bookkeeping and just want to get everyone kind of set up and ready to go. If you've been to a lot of, or any slide part tutorials before, sort of the the usual mode of presentation interaction is Jupyter Notebooks, and those are great. It works really badly if what you're teaching is like a show language and prompt. So we actually just do need you to install the stuff, and then we will be sort of live coding and have slides at the same time, and we're, you know, we'll be running around and help and stuff. But so if all of you can just take a few moments and we'll run around to troubleshoot and install Conch, we highly recommend using Conva for this, but there's other options. Yeah, and there's a new release as of last night at 10 p.m. So if you haven't updated since then, please there's a bug fix. Sorry, the code has bugs. Like all code. So yeah, please grab the 0.9.8 release, and we'll go from there. So who has Conch installed right now already? Okay, most of you, and if you don't, like just grab it, it should take two seconds because it is pure Python, thankfully. So you don't have to deal with like weird Fortran rust extension interactions and stuff or read line read line. Oh, yeah, we don't have to deal with read line Everyone's favorite library Three three chairs for read line No, no, no chairs. Okay. Wow. We got one tough crowd one one one one chair. Wow Nice input RC. There you go Thank you. I'll be here What? Alright, so oh, and we we should send out the link to the slides as well. So Slides should be at Conduct SH this is what's that repo called is it like conch? While people are installing conch and for people just coming into the room, please install conch I just want to sort of do a quick poll the room get a sense of who y'all are and why you're here So who here uses bash on a regular basis? Okay, any Z shell users? Okay, fish One, okay. Yeah, one cheer for fish one cheer for real on to you. Okay, fish got two chairs. All right. Has anybody used conch already? All right Okay, who here really likes bash? That's okay. No, no, there's nothing to be ashamed about. There's an open question We're not we're not here to know who here remembers the syntax for a for loop and bash that looking at stack overflow Okay, no, no, some people can do that. That's totally cool Who here remembers how to tokenize a non-whitespace string and bash without looking at stack overflow? Both so I'll believe you. I'm not gonna I'm not gonna you know, call you out there. That's good. Okay So while we get the slides everybody, I mean one of the things conscious for many things Partially, it's the to suit our mad desires But also it was a lot of these things which seem like they should be simple and easy to remember aren't and a lot of us are dealing on our daily workflows with Language decisions from the 70s which made a lot of sense But maybe we don't like want there to be a difference between single and double quotes all the time or like maybe we don't want to have that many square brackets in a row And so this is an effort to remove that pain because this should be a relatively Seamless and sort of fun interaction and you should just be able to do the things you want to do without struggling through it I think we probably can I don't have the slide link okay Are people and mostly installed and ready to go have contra running Cool, is anybody not have contra and that would be I guess the question to ask okay We're still going to be talking for just a bit so and we can we can catch up as we go Okay Also just a quick tante check if you can run Every time we say like the sound like co or something it's always gonna start with an X just a fair warning So if you can run config, it's x o n f i g in your conch shell That should probably not say what it says here Maybe should say zero point nine point eight at the top just so we were sure we're on roughly speaking the right versions I do have the link, but I don't know a good way to get it to you guys other than I'll just put it here So if you want to follow along with the tutorial You Can go to this link so it's conch.github.io sci-pi-2019-tutorial Slash remote HTML. We're sorry about the URL. Yeah Only a little sorry But yeah, you can click along and follow so you can skip ahead in the slides or go back There's some exercises and things like that and so Bring that up now Okay, I'll let you guys do that and then we'll Do Okay, that seems good. Yeah, great Okay, so Quickly just like an overview of just some things that you'll see us doing a lot And you should also feel free to do while you're interacting with the shell We don't have explicit slides about this because they're just sort of general overall Like things you can do in a shell or in conch anyway But if you see us do something like we obviously hit one key and something happens and you want to know what just happened Please just ask us if it if it seemed like it came out of nowhere or we're not trying to make this opaque So generally speaking there's tab completion. Oh, yes Oh from the there's an there's an L right at the end. Yeah, so it wrapped a little Yeah, I was getting well the directory doesn't have an index.html I can fix that in a moment, but Yeah Generally speaking this tab completion for almost everything so it'll save you time when you're typing Beware of that Does anyone not know what tab completion is? No, no shame All right great This will mean less for you at the beginning of the tutorial There's a lot of history search functionality You probably don't have much of a conch history at the moment So that won't mean that much but there are several ways to search up We'll kind of touch on those a little bit later control R as your friend that will kind of give you an anywhere Line search back in your history if you start typing a command You can press up and it will do a prefix search match So like anything that's any line that started with that initial bit will show up in the results as you arrow up And you'll see this sort of ghost text showing up if you're typing the same command this sort of a History match autocomplete thing and you can just hit right arrow or I think control E to sort of expand out to that if you want Don't worry about like taking all that in at once, but we'll come back to it Yes for all the Pythonic bits in conch and we'll find out what those are a little bit later You can always append a question mark to a command and it will bring up a little help screen in the pager Or you can do a double question mark for super help for even more if you've used ipython Fair bit. This will maybe be a familiar pattern. Yes I don't think there is one it's a UT guess and should just be an open wide open network Yeah, is there another question over here? I think we did discover that yeah Okay Yeah, okay, not gonna do that live we are gonna ask everyone about questions about that during the break so we can fix something That wasn't working and that would be but that's good news awesome Okay, are there any questions? Okay All right So yeah, there's was that a question. No, all right So everyone has conch working that can if you ran the sorry the config Let me just go into the Okay, so you should have been able to run the config command and see some output like this So if is everyone kind of at that stage? The cut oh, yeah, it's it's config with an X You're gonna love that X key in the next four hours. All right Okay, so we've got our agenda here We'll be taking some breaks in between these things and we're gonna be building up to sort of greater and greater capability Over the time. These are links. So if you have the slides up you can jump around if you want to And there are exercises at the end of each little section. So That's a gonna do the shuffle here So Conch is a superset of Python 3 so what that means is that all of the syntax that's in Python is also valid conch, right? So there's no so if you know Python Pretty well or really well or extremely well everything should be familiar to you And so you can do a bunch like basically everything that you would be able to do in Python, right? Like to find classes functions modules etc So we can go ahead and you know do these along with us like you know when they come up So let's try some in the mount. Oh, these are our first exercises actually. So the the first one is to compute the product of two three and seven the second one is to Import numpy or import sys if you don't have happened to have numpy installed And then also define a function you can do this all this right at the command line You don't need to go anywhere else. You don't need to do this in a file. So Try these out you can click on the details to get the answer And we'll give you guys a couple of minutes to try this stuff out And also be solving it very slowly in real time I Think you can go wow 42 what a what an auspicious number there Can we import a module Gil yes wow that's that's pretty impressive Oh We're in real life we should be like yeah, yeah, sorry No, I'll still in relay Yeah Sorry, I was in developer mode right there there we go So you're saying yeah, you should see there's a lot of tab completions available So if you import or I'll do sys actually too because that's one You can just hit tab after the dot and those will be all of the attributes and modules that are available in sys. Yep I forgot the last one the function Does anyone have any problems or questions these It's pretty simple right so this is just to prove to you that contrary is Python Yes, yes you can well we will get to that question later So Dhar Haas's question for those of you who are listening at home was can you define a function? That's all a command on your system and the answer is yes And we'll get to how all that resolves and works later so Great question. Okay, and we'll get to it pretty soon. I think actually So conscious of shell so conscious also a shell language or more more precisely, it's really a scripting language that is Mostly shlang compatible, which if you go back to like the 60s and 70s, you know, sh Was this old or is a shell language that we all have inherited a la bash and and z shell and another and other languages like that But unfortunately, it's actually impossible the syntax is Collide and it's impossible to be both a Python and shlang compatible language And so you have to kind of choose and in conch we have chosen that Python will always win There's a couple reasons for this but mostly it's that Python is the same language and sh is not really sane in some ways like the splitting Strings on non-whitespace characters and the machinery for how all that stuff works is kind of crazy if you dig into how the shlangs work But Python always wins. So if you found a place where Python syntax isn't working That is a bug Please report that Yeah, yes, sure. Just as an example of this this issues where so this is a command that you may be familiar with But this is also a valid Python syntax if Alice and L are you know defined so So So the rule is is that if one of those things isn't defined it'll still function, right? You can just delete the variables, but it is possible to overwrite those Built-in names, and there's a way to escape that which will this is just a convenience, but that we'll get to in a bit here So the purpose of the shell is to run commands obviously And so we've got some commands here, right? So we just saw ls-l Simple one. Yeah, please type you know type this out if you if you want just prove it to yourself But this works you can do echo You can make directories And cd into those directories touch files Do all the kinds of normal things that you You would you would want to do so and I think I actually have all that test code here still but And the other thing that you can do is you can pipe, right? So if you're Familiar with piping from other shell languages you can take the output From one command and and make that the input to another and so that all works normally like you would expect in conscious well So and basically under under the covers. This is a horrible abuse of the sub-process module As you would expect with a lot of fancy features added to it. So Okay, so the next bit of kind of basic syntax in the language is our environment variables So these function a little differently than other sh lengths, but similarly So you can refer to any environment variable by prefixing a name with the dollar sign character So if you want to look up right if you want to look up a variable in the environment You can say dollar sign that variable name and then you'll get back the result So right so then the environment is this like special namespace that processes use to communicate with each other and Conch gives you access to that And you can set and delete environment variables More like you would do in Python then you would do in other Shell languages, right? So these are just normal variables that happen to live in a special dictionary mapping somewhere and so because of that you Would set them with an equal sign and then you would delete them with the Dell operator. So Shouldn't be anything To out of the ordinary there anyone have any questions about that Is there any difference between this an OS environment OS dot environment and the answer is yes There's a lot. We'll get to that in a section coming up No export is not a feature of Conch or so exporting So, okay, this is a little this is getting into the weeds a bit But I think export is a is a bad idea. You shouldn't need to explicitly export things, right? You're already doing that with the dollar sign, right? So shlings when when you export or when you define an exported variable actually don't put the dollar sign So we've collapsed those seven characters export plus space into just the dollar sign They're well, they're not they're they're process-wide. Yeah, they go into the environment for the process Oh, so dollar zero for those so the question is what about dollar zero Dollar zero is how you refer to arguments or you get your the command that you run We use dollar args for that when you're running a script. It's an environment variable It's in the docs, which we'll have a link for very shortly. So Okay, I just realized this screen. We're standing in front of it. Yeah. Yeah, okay, but we'll maybe fix that during the break Okay, yeah, these pretty normal The other thing that you can do is you can do environment very or environment look up with Python expressions using dollar sign curly brace So if you want to Compute an environment variable Arbitrarily you can you can use dollar sign curly brace. So this is a little different than how other languages do it But for example say you have an x variable that equals a string in your namespace or your user You can do dollar sign curly brace x and then that'll look up the user environment variable. So that looks up the name oops Sorry, I skipped ahead bit and or if you want to compute it with some other some other expression You can just stick that right in there in Most SH links. These are actually dollar sign and dollar sign curly brace are the same have effectively the same meaning But they have distinct meanings here effectively. They're they're subtle differences. I know But they're very different here Okay The source command so is everyone is everyone familiar with source and other languages like bash and things Okay, yeah, so so if you're not what source does is source takes of File that's written in that language. So if you're in bash And you sort you can source a bash file and it will run the commands as if you had typed them into that Session, so it's just a shortcut for executing everything in a file in in your current Interpreter session So conch the source command does roughly this does basically the same thing It reads in the contents of a file And then it executes them and it brings all the variable all the global variables and everything in the environment, etc Into the current execution context But of course this doesn't work on bash this works on conch code So if you have a very simple example file Yeah, sorry. This is Yeah, you can do that So here what we have is we're setting an environment but variable in this file We are setting a password which is a terrible thing to do And then we're defining a function. Oh You can install VAM right now if you want go for it See if I care go just Can't do that to your laptop, but it seems me. How do I do this? Oh, well, I mean we're talking about sharing passwords I'll just say my my root password out right now. Yeah, okay Yeah, so you can You can then use this function and it's it's good So basically what you do to use source is you just say source and then the file name So here source example dot xsh and then You'll see that that those variables that we had like Dollar sign email are available as well as the combined function has been brought into your local exit or your current Sessions execution context and you can you can run it You can also import at dot xsh files as well so if you want to write python modules as As conch files, you're totally welcome to do that and you can import them even in other normal python projects Not going to show that here, but if you're interested that's something you can do Okay, any questions on source? Pretty simple alright The thing that you can't do in a lot of other languages that you can do in conch is that we have a notion of sourcing Files from other shell languages that we call source foreign so imagine you have Some bash script somewhere and you want to bring that in and execute that in conch and bring all the things into your local Execution context you're able to do that just by saying source bash and then the bash script So if you've got a you know a hundred thousand lines of Z shell well one. I'm sorry and two You can still use that so this is a way to integrate to slowly integrate with other languages Which is pretty cool actually so It's pretty nice any and and by default sorry We have a so source foreign is a generic infrastructure for doing this But we have shortcuts for doing source bash source Z shell and also source command or cmd So if you're on Windows using the Windows batch processing language you can source that stuff too which is madness, but I Mean we've got a core Windows developer for the past four years who's like it works pretty well I mean there's I imagine there's folks here using it on Windows right so are there any Windows users in the room Okay, let it I mean who are on Windows right now I Think the biggest problems are usually just that our examples are very like Unixy And so we say like run this command and it's like what command is that that's that's often the problem Okay Well, so we found with that like if you're on a base Windows install and you just install get bash Then you get all the Unix commands and everything works normally and supposedly works really well on Windows subsystem for Linux But I have not tested that I Mean you can we would be very happy for you to do We may not be able to help if it goes wrong, but we'll try I Saw another question over here. All right. Okay, so source foreign Really nice capability really helpful, especially if you're just getting started The other thing like most like most shell languages. We've got a configuration file that lives in home.contra rc And this is just a particular Special xsh file and that's loaded before basically everything else is loaded. So this is where you can stick all of your Customizations Mostly a lot of people just stick environment variables in there If you're a condi user conda as Activate or whatever and it will throw some stuff in there as well and yeah, so But basically if you want to read about all of the customizations, they're on there in the doc So every every environment variable that we touch has documentation associated with it And there's a lot of like tweaks that you can do a few if you need to all right So here's some more exercises So let's go ahead and take a few minutes to do these So the first one is to just set a random integer to the environment variable dollar sign secret The next is to print the secret value and then The third is to put a Generating just some generating code for that secret value into your contrast see When conch starts up if a dollar sign safe variable does not exist So we'll give you guys a couple. We'll give you all a couple moments to to try this out And if anyone's having problems just raise your hands right now and and Gil and I will will walk around and help The next thing that are for problem for part two. There's actually a couple different ways to do this The first is that you could either echo that So if you're thinking more in a shell language, you could echo that You know my secret value is dollar sign secret as a string and that will all All push out normally or if you're in more of a Python mode, you can just print it like you would print anything else Okay Both of those are totally valid and then the last one is If you wanted to this is getting cut off I guess but This is why you have it on your own machines, too You can say In your contrast see you because it's Python you can import random because it's conch you can set the environment variable To whatever random value and then oh we actually didn't cover this in text in this exercise, but Because we've moved around some slides, but We'll get back to that last one soon enough. So, okay, so very briefly So remember how we said dollar sign? Curly brace is an expression You can you do look up by expression so this This dot dot dot in Python is the special is the syntax for the ellipsis object So we use that numpy uses it, too So we use that to be a reference to the environment itself So if you do dollar sign curly brace dot dot dot you get back the environment object Because dot dot dot is obviously not or an ellipsis is obviously not any environment variable And it's a big mess Which is why we didn't want to cover it this soon, but there it is and Well, we will get back to it in a bit Okay So, yeah, the goal here is like because it's just a mapping you can test if if things are in the environment Through through this self-lookup. Okay Wow a break already that can't be right. No, probably not. Okay, so we're not gonna break. Yeah, because it's too early. I Built up your hopes and then I'm just crushing them right now crushing it. Yeah Okay, so Gil's gonna take over for this next part And maybe I'm not gonna move this one. Yeah. Yeah, it's impossible Okay, so We've sort of looked at you can still run Sort of a sub process command like a regular term a regular terminal command shell command and you can also run Python, you know models and functions and you can sort of you know set them to environment variables and then use that but Where this really starts to come into play is when you want to be able to start mixing those two things together to sort of get the best of both worlds So the idea here is that in a lot of ways conscious makes up using sub process really really simple Instead of trying to remember like we do set this like sub process type thing somewhere And how are you gonna like parse the output and all that we just all that's being handled for you in sort of a more intuitive way And we have a number of operators we've added to sort of help with this interaction between sort of sub process mode and Python mode so the first of these is dollar curly brace Parentheses. Yes. Sorry. I do remember what keys are sort of And what it does actually similar to bash is it captures the output of a command, but then it returns as it returns it as a string And it really does return the whole string, right? So, you know the output of LS has a bunch of line breaks in it So there are a bunch of line breaks in the output what that means that if you print it you actually get what the output of that was similarly it is a It's a string right like a Python string so if you type you know x dot and then hit tab or something or just Like you have all of the Python string methods available to you So if you wanted to split that say on new lines, which might be a useful thing to do with LS Or you really like uppercase letters and you want to do that or however you want to Mutate and parse and change that captured output all of Python's built-in Helpers are already there for you. You don't need to sit there and like try to write these things yourself Okay, so the second is bang parenz and This does the same thing and then also other stuff So what it actually is returning if you run a command with this is a command pipeline object Which is a sort of a conch thing And it includes the output of the command as well But also a bunch of information about like like the PID of the process what the return code was What the actual argument you ran was if it was an alias, what did it expand out to what are the starting stopping time stamps of that command? and also This object itself is truthy. So if the return code is a success then you can actually say like you know if Bang this command, you know like print this command and if it if it's successful then that you can use that for control flow So there's sort of a way to easily Figure out like I tried to do this thing was successful. Yes, or no What was the output if it was successful? How long did it take like all of this is just available to you and sort of the the the command pipeline object that's returned I? Think this is what I just said. Yeah, I Didn't do it command, but that's okay. That's all right. Does anybody have any questions about those? Yes, and some although in Python. It's a Tilde yeah, yeah, yeah, that's right So in in Python if you wanted to negate something you use not or tilde or till does it the invert operator, but yeah Yeah Okay Okay, also so you can iterate over the output of these commands line by line in bang exclamation point. Yes I In enumerate LS and then print what does it have string? And then just I and look Probably should have stripped look, but that's that's okay. That's okay. We can do it next time. Yeah For example, right, so the new lines are still in that look in that object that look object that ends up there And this is streaming by the way So that if you wanted to stream through your command, right if you've got output that's larger than memory This is how you you'd use Bang parentheses for for that. So Also in the list of things that we may have not mentioned There is this Multi-line prompt thing that keeps happening that we've just sort of been using without mentioning But yeah, so it's like in the same way that I Python functions. This is a Full you can just keep you know as long as your you can either shift return to maintain like to force a new line But you as long as the command isn't complete It'll just keep adding a new line for you to type on two entries at the end will run the thing and then when you arrow up through Your history it will load up the full command like the full command block for you You don't need to like go and hit arrow up for each of those individual lines. You were doing right So I just hit arrow up there once and I returned the whole input So we just went over those are captured sub processes and then there are uncaptured sub processes so here again, we're using a dollar sign and bang but this time using square braces and They function the same way as the captured ones except they they don't capture and so the output of the command Still goes through to the screen to standard out or standard error depending, but you can still capture that metadata along with it So in the case of dollar sign square braces It always returns none actually and so this is More for Forcing sub process mode where the context may be a little ambiguous You want to say like don't try to interpret this as python just run this as a command instead The bang Bracket there So the output gets streamed to standard out still so you see it and it would run as if you just ran the command regularly But at the same time Similar to the information from the capture sub process about the you know Starting and stopping times the arguments that were passed in if it was successful or not all of that is returned As a result of that Operator so you can have the output still kind of like showing in front of you But still be operating on sort of you know, what were the conditions of that command did it execute successfully? Should I stop should I continue? Right, so you get this rich command pipeline object back out that you can manipulate and this particular bit of syntax is The thing that really underlies a lot of conch So the what's actually happening. So if you just run LS here What conch is doing is it's secretly adding in a bang square bracket around that LS? That's it Okay, right column type good. Oh, yeah So now that we there I would suggest we just take a few moments and just to play with each of these a little bit to get a Handle on them This is basically the end of like new syntax that we're gonna introduce largely wait except for one big one coming up But just to kind of get a sense like of how they work make sure that they match your expectations like you know Which what should be captured what shouldn't be captured? How do you interact with the attributes of these returned command pipeline objects? What is in there? Is there something you would like to be in there? That's not we can talk You can definitely work on that and just as a general Mnemonic for this because it's you know bunch of stuff I've sort of come up with like curly captures and square streams And it's a bit misleading because it's all sort of streaming in one sense But like if you want output to not show up use the curly things if you do want it to show up use the square things Does does anyone have any questions about this stuff, you know, we just threw a lot at you yeah back there The last one Almost so bang square bracket prints it but Does save it to the variable and then bang Kurt bang parentheses Prince it, but then doesn't save it to the variable. I Know yeah, so Basically what what's going on here is that? Dollar sign parentheses Returns a string right it doesn't print it, but if we wanted to stream that so we use bang. What should that return? Sorry, yeah, so what should that return? None right because No, it's not Did I do something wrong? Yeah, what did I do? No, not all it's not No, it's still maybe it's that it's like when you do a sign No, that's still the thing so oh no, sorry, haha I did this wrong Yeah So if you do dollar sign if you change these two square brackets because you want to stream the square brackets kind of look like pipes That should return none rather than a string because there's no there's nothing to return You're already This this the coat the output that's coming in has already already been consumed and printed And so it's been streamed and there's nothing left to return the Which is why you see like because we did this is none we actually got this we got this true printed behind us Even because the the command actually printed right we didn't capture it if you wanted to capture it Or if you wanted to do you know bang Parentheses the bang is what gives you the object back And whether it's streaming or not is determined based on whether it's square brackets or not Yeah, so so the way to think about this is dollar sign return strings and bang will return Something else and then square brackets or in parentheses will capture and square brackets will stream 90 yeah There is there is functionally no difference between bang with square brackets and bang with And and just typing the LS command Except in ambiguous cases so in cases where you have both a Python function and a System command with the same name or a Python variable and a system command with the same name like say I just said echo equals Wow or something right if I now went to run like echo Hello world Well that'll work because the syntax is not ambiguous, but like let's say I went to write like echo like dash What's another echo minus echo for example Which would be torque totally? Normal well, okay that but we would want to print minus echo right in a normal in a normal shell But both of these are variables, and so if you need to you can always explicitly put it in bang square brackets And then it'll run Yeah, so there's two things going on here, so or there's one thing going on here one or two so there's If you're observing it there are two and then yeah, it's it's complicated Basically, what's happening is there's a formal conch language that always uses bang square bracket Okay, and then we have What we call? So there's a context free grammar that we use that always uses the square brackets Then we do this context aware Grammar munging so we know because we know what's on your what commands are available and what your Execution context is we can shoot we actually go back and rewrite the AST of your code In such a way that we think it will execute Before we try to execute it And that's what's going on And so if you need to you can always go to the formal grammar and you can even turn that off In the in the exact we're definitely not doing that in this tutorial, but you can turn that off and make sure it's always formal That's a terrible way to live because you always have to type this bang exclamation point The whole idea behind conscious to make the things as easy as possible and match what your brain thinks it should be doing Like your brain thinks, you know ls-l should be a command and it just because that's not a python variable Doesn't mean it shouldn't be a it shouldn't be something that works And so we have a lot of like heuristics that are relatively simple that get get you incredibly far And but if those heuristics fail for some reason which they are they it's very very infrequent You can always go back to the formal grammar so But Yeah, I should maybe say curves cat mnemonics are hard So so the curly braces are for like with the dollar curly braces for like an environment lookup or for accessing the environment Whereas these are more just generally capturing a command that you're running and capturing the output of it Right so this looks up a variable in the environment Yeah, rather than yeah rather than Running a command so yeah Okay, so so the question so the question is what what's going on here, so you're saying ls equals So if you say ls equals one here, okay, and then you say ls Mot you then you were saying ls Uh-huh Right, so why does this happen well this happens because l is not a variable in your python context If you just do ls, and then we dot it right this is a LS itself is just the integer one Right the the the the bang square brackets are capturing the whole thing So yeah, so if I set l equal to one and I do ls minus l you'll get zero because they're both variables Python always wins right so the Python invite the Python context always wins Yeah, your system is whatever Okay Having thoroughly confused everyone I think now we can just take a few minutes for people just to play around with these a Little more get a sense of what's capturing and what's not what comes back from these commands of what's returned and what's printed Just to build up a little familiarity with it And then we'll continue on and feel free to raise hands and we can either circulate and just answer from the podium And we could fix this curly captures thing from yeah mnemonics Is anyone having issues with their system still or installing or anything? Yeah, or do you want me to come over? Just really quickly we had a question about for people who have used vi mode in terminals or in shelves before and want to do that You can do that. You just need to set vi mode equals true Yeah, and then you can bounce around your current line using you know zero g whatever Yep, and then we'll just load it by default Yeah All right, so I think gil you want to take it away. I will take it away. Are there any lingering questions from our our personal explorations? Great you can also ask us later. That's fine. Yeah, that's totally yeah So the I think this is really the last bit of new syntax we're going to introduce but I could be wrong I'm wrong, but for a while it'll be fine So this is the the Python mode operator So we've been talking for the last bit about how you Kind of capture Subprocess output and then you know turned into you like a Python string of this command pipeline object And then how you can play around with it and inspect it and do things with it but The The at-paran operator lets you go the other way it lets you insert things from your Python sort of scope or environment into a sub-process command So what we mean is generally Conscious like parsing is pretty clever at this stuff So if you give it for instance this command like for Something in range to and then just run echo high underneath that it will do the right thing right you can put your Like echo or LS or whatever Subprocess command you want in the body of a for loop and it will just execute as many times you tell it to do and you don't need To do anything special that actually just works right What does not just work is? If you do this So you want to instead you know iterate over the value in the for loop and have it be printed You just get I twice right so because it runs that command twice And so what the at parentheses operator does it lets you Capture that Python variable and insert it into that command So what it does it what's actually doing is it's it's evaluating an arbitrary Python expression and then returning that value as a string And that can be fed into the sub-process command in this case echo And if the output is not a string in case of like lists or sets it just gets joined and returned as a string So that's what that well, so it's a little different than that actually Sorry to want want want each Element of the string is actually getting passed in as its own argument to the command So each of these are their own command arguments So and it's just that echo happens to join them together So Yeah, thanks for closing the door we're gonna close not a good idea I Any questions about this syntax or what it's doing Yeah Yeah, so like if we did LS LS would try to search for all of these Files individually. Yeah, it's running it for for each. Yeah, cuz LS takes a big argument list like that If it's iterable and not a string Right, yeah the normal way Yes Right That's what LS does yeah, yeah It's just passing each Python thing in as its own each element of the putt list is its own argument or tuple or whatever Yes, exactly, it's a it's essentially echo zero one two or echo, you know or LS zero one two Yeah Okay, yeah, so if the result of the operator two is in the first position it gets treated as an alias So you can actually have this execute commands Probably like not something don't do this mine. I guess it's a really bad pattern, but it does that Right, but this is the this is different because if you I've got a my My trace back printing on but you can see If you try to just print this Or if you try to run it without splitting that is treated as the command the name of the command spaces included And so then it can't find the command cuz hello Commit hello there echo. Hello. There is not a valid command Okay Okay Your promise for more syntax is already broken. You should just stop. I'm gonna stop saying it now So with apologies So you can wrap a regular expression in back ticks And what it will do is return a list of every file or you know thing in that in a directory that matches that regular expression as a list And it's a Python list which means you can iterate over it you can you know like stick it in List comprehension and you know like mutate all the names And you can actually do even more stuff with these things as you kind of go along If you're about yes It's the Python rejects. Yeah, yeah, it's just the re module Yeah, just a handy way to get into re.compile Yeah No, no, these are not globs Dot dot star is a rejects a Glob would just be star Yeah, anything and so we could maybe a better example would be what's a Okay, so we've got some pings in here right so like what if we wanted to if we wanted to like grab I Guess we don't have a lot with anything With I want I want png's that have the letter zero letter o and them. Yeah, so like that's right. Yeah, so do dot star oh Dot star dot slash dot png But also regular expressions are hard so if you if you wanted to use globs, let's just say somebody had mentioned that Then you can prefix the back ticks the G And then it is glob matching so you don't need to do the dot thing that's just you know like star dot md star dot png Star whatever and as an extra special bonus in Python, I think three six and above this supports recursive globing the way that Then the glob lever it does so if you do like a star star slash star dot md That will recursively glob through the entire directory structure from where you are and find every single markdown file in that whole chunk This can take a long time like beat like use this You know like if you don't find it your route and it takes forever like same thing But it's really really handy for finding all the sort of files or patterns matching something in a in a large area Any questions on Yeah, so um we can't we can't oh so the question is like What are the use cases that led us to create all these things and just as a as a as a general like contra creation story? Almost everything in here is something we were like, you know what we really need to do thing We need to do today is this thing and then we did that so they they were all created from actual and us and other Contributors people who are like I really need this to do thing X And then what we discovered along the ways that a lot of it tied in together really well without it without us having to do anything extra We'll come up on some of that stuff around the way some of the string matching and string literals work So like one thing I just showed for the globs in particular right like being able to loop through a globb list is With this syntax is a lot nicer. Yeah, right. Yeah Yeah Between So yeah, so the the question is about trading off between Python module CLI and writing something in conch for me It's a really about how much your hammering sub process. So if you're interacting with sub process a lot Like do not write it in a Python CLA right write it in conch If you want some of these extra fancy features Like you really just want to be able to glob Tick things like very quickly or you want to like search through whatever then like do you know do it in conch as well? That that's my kind of We'll see some other syntax later where there's conch specific things But at this point it's kind of like if you're doing a ton of like basically scripting You know Like then you should be using conch because it's actually meant as a scripting language unlike Python Oh, yeah, yeah, yeah, well we can talk about those afterwards Yeah, yeah, for sure first for people who work at a certain institution. They can also use all my internal ones just saying Sorry, everyone else. I'll show you other things, but um, yeah Tom I think you're next Some Yes, yep, so the question is can you import conch code and use some of this stuff in Python? So we don't have an Yes, if we haven't we have we don't have that particular use case lined out so much but I would say there are two things there. So one we have a Quote-unquote standard library where we have sort of Extensions and updates to standard library things to make it easier so you can do like import conch.lib.os And you get some like like you get a remove tree that actually works on all platforms and You get like if you do like some process you get a version of run that uses our thing and returns the command pipeline object And you can also just get an executor back And then you can like like you would run conch code and you're like you would run Python code through a normal like Exact thing and you can do that that might not be what you want exactly But I like the way your brain is thinking so maybe we should talk more about that afterwards, yeah, so And there was another question back there. I think yeah Yeah, in regex if right, so it's just a normal You just have to do Right, like say let me just go back to my home directory. So the question is about How do you get your dot files with a regex? Well, you just use backslash dot, which is the regex The regex escape character for the dot character. So the oops, let me go back up and show you Apparently I've got a lot of configuration So you would do Don't tell anyone Yeah, I'm secretly a bash user The so you do backslash dot and then dot star To match anything right so the the backslash dot is a literal period So I would argue that it's more sane than a lot so the question is about history How does conch deal with multi-terminal history so conch sort of cribs from the Jupiter playbook a bit so By default all of your history is stored per session in a JSON file in the standard like Configuration location so you can go back and get each sessions history and then the terminal application itself Will present that to you in whatever nice way it needs to you can also switch to a sequel light history back end if you want to store a sequel light there is Tons of there's basically as much metadata as you want in the in the history and that's very configurable through environment variables Not going to go through that right now But I was like that was the thing that that sold me unconsciously was like I was trying to figure out how I'd compile the certain version of Petsy and I couldn't remember which environment variables I had set when I ran the thing and like you can't figure it out you look at your back history like well It was one of these seven because it and then you know you do this in contra like oh it was this term It was this session when I ran this thing in the tests past those are all the environment variables I need because they're just in one self-contained file Did you have a question over here? Yes, if you run source bash you'll get the aliases from that with one caveat You might have actually seen this pop up on the screen Which is that if there are there are collisions in certain aliases and also there are things the z-shell Especially does is they have like their own built-ins and if the alias refers to those built-ins We don't pull them in because it'll just break when you try to run it because it's gonna look for a command that doesn't exist There's I think there's some experimental some yeah, some people have done that But yeah, I don't use it. So but yeah, there are people who do that. We're happy to help try to figure that out though Well, I am anyway Okay, move on but So Next up this is not new syntax for contrary way, but it's Python. So Formatted string literals are great And they're part of Python, which means if you are running punch on Python three six or higher, which you should be Then they just work And they're really fantastic if you haven't played with these I think they're like they're my favorites like simple thing that should have always been there. I think I really enjoy them And yeah, the way they work if you have a Variable defined then instead of doing a dot format or doing like the you know parentheses, you know argument You can just have a string pre-pended with an F You wrap curly braces around the variable and it just gets evaluated at you know at that time and then prints the results So it's very handy There We also have a thing that is not in play on which is called a path string literal and this If you prepend a string with a P and then you have a quote what it returns is a path lib path object of The string that's there. So for instance, if you were I went the wrong way if you do like path equals Thing You got a you know on on Linux you got a posix path on Windows you got something else But it's just using path live under the hood so it'll work If you save that to a thing you can also then use tab completion on this object Like check does that folder exist or not? You could then create that folder or I mean path. This is just using path. The path is great But we have this sort of shortcut syntax to get into it Oh, and I'll get there just a little great thing about path lib is that you can do path joining using the they out overloaded the division operator for this so you just do like Path of object divided by thing and it does the join correctly depending on the underlying operating system So it takes like all of that deep pain out of like trying to get stuff to work on windows and Linux at the same time Yeah So there are f strings from python we've added p strings the the natural question is what what does a pf string look like? And it looks like awesome is what it looks like so you can define variables um and then you can Say pf And then a string and then you can treat it like an f string in the sense that you can put curly braces And it will fill in the value of those variables in the string But it's also saying this should be a path lib path so it returns you a path lib path of the result of the f string If you have ever done a lot of painful dev ops this just might seem appealing in some way um And the other really handy thing here is uh that the environment variables They are also python objects So you can evaluate those in f strings, which means you can evaluate those in pf strings Which means you can start chaining together environment variables and other values and other things to sort of construct Paths and folders and file locations Programmatically and then once you have the path lib thing you can start saying does this exist great if not touch it like now add It over here and now move it over here. No do this thing and all of these things will be Cross-platform because uh, it's just using path lib under the hood So it doesn't you know, you don't have to worry about which slash you're using or what's being escaped appropriately Yeah, hopefully um any questions on this stuff Not too bad, okay okay So, uh, we have a couple of exercises here the first one is to look up the absolute file path of every markdown file and the tutorial repo Just you know, you can use whatever you want. You can use bash if you want to too. That's fine. Um But pf strings and glob ticks are probably your friends here um, and then um A phone here is uh to load up a dictionary of every conda package you have installed in your current environment If you're not using conda you can just skip this one. That's okay If you have a questions, of course, just ask us and we'll come around Yeah, so load it up as a python dictionary Well The hint is important. Yeah, I run that conda list json command and then I would go from there. Yeah All right Okay, well then I think we'll go on to the next section, which is the environment Um, so we um, we touched on this earlier just for a moment But this will be a little more of what's going on and what you can do with it um, so the uh environment actually lives in Dunder conch dot env that's the everything in in conch is living in this dunder conch thing Like that's where all of the the various bits and pieces are if you want to explore and play around. It's all in there. Um, but uh The um The dollar curly brace ellipsis is the is a shortcut to that that object So you don't have to always just type dunder conch dot em to get there um As we mentioned earlier just ready you can check for membership in the environment just using, you know string in environment And you can also ask for help for environment variables. So there are a lot of environment a lot of different modes and Kind of extras are enabled via environment variable So if you know the name of the environment variable you see it they all have default values So if you see something that is in your environment, you're like, what is auto cd and why is it false? You can ask for help and it will tell you That if you turn it on then you can just type the name of directory and if it exists It'll just cd into it without you having to type cd Um Huh Yeah, the help is a method. Yeah, help is method Yeah, and also they the docs will tell you if something's configured a month. There are a few environment variables that you are not allowed to configure So we don't let you um, so Also something that's very different from uh bashland here Is that um Contra environment variables are python objects. Um, and that also means that they're typed You can begin of arguments about typing in python, but not now, please But they do all have types and um, sometimes those types are actually imposed based on a variable name Particularly and the important ones or anything that ends with path Is going to automatically be converted into what's called an end path And if you've ever had the scenario, let's just we can we can do a show of hands or not But where you've like sourced your bash rc twice And now your path is your entire path and then your entire path and then something else again Wow, we've got four. Wow. Wow. That's just not even the That was that that was a raised hand. Yeah, so we've we've all Many of us have been have been in this pain place before that's terrible So in conch that is not this is not a colon delimited string and which comes back to how do you split a non white space delimited string? Anyway, um, you don't because that's terrible But so path is an end path Which just means that it's a it's a list of the items on your path But this acts like a list which means you can do things like pop individual elements at arbitrary positions out of the path Or you can insert directories into arbitrary positions in the path Which is great Really really great Yeah No, it's just so just in this if you're if you're mutating your path in your session here It it will last for that session until you exit out It won't like also it will not like translate like a separate terminal into you have open Those are going to be totally separate if you want the question is if you start conch When you play the path and then exit it you're backing the root bash show Yes, yeah, yeah, but if you so if you wanted to do path manipulation for all of conch you would put that in your conch RC No, because why are you launching conch from bash just that is your I mean that that's the real answer, but the the reason you can't do that is Uh, it has to do with how processes communicate. And so if you want to push Environment variables into a parent process The parent process has to source Something coming from the child And so you have to be able to source Like you would have to get conch to dump out the environment in a way that like bash or something could source Again So so we do that. Yeah, yeah, so you okay, so Maybe there's a solution for you. It'll be ugly, but it'll work. Maybe you find out Yeah, yeah all this all sub processes get this path Well, sorry the question is is how are you the question is how are you supposed to start conch? So there's there's basically two ways to do it maybe three I'm going to say two one is you open a terminal It's running some like 1970s piece of software doesn't work really well And then you type conch and then you're in something better and newer The other thing is depending on your on your operating system of choice You can just have it start as your default shell on linux This means adding it to etsy shells and then setting it on if using i-term You can actually just have a profile that launch that you can say like I want you to launch this executable when I open a terminal or this profile Yeah, basically any terminal emulator in the unix land will let you set the the launch program So you just set that to conch Or you change your etsy shadow or you change your etsy shadow if you want it to be a true login shell, which conch can be So yeah, it's in conch back there's docs there also there are docs on that on the website So if you really there's platform specific doc, so if you want to go look up that you can see that It's right in the at the very top So the paths are n paths are back environment stuff other variables are booleans other ints Whatever they are like when you grab that environment variable in conch it will be its true type, you know, it'll tell you that That said if you need to like some some subprosk man's require You know these things to be fed to them as strings and so conch does that for you And by de typing it and you can also explicitly request these de typed things So you're asking like how do you manipulate your path and then do it you could I mean Like de type it overwrite your bash rc exit out and then source again that would be Moderately terrible, but it would work as long as it was an absolute path and you weren't like recursively sourcing it would probably work. Yeah Yeah, you can also do de type get back Yeah, and so that will depending on what it should look like In the base environment will do you know give back zeros or ones not trues and Paths get get turned into colon delimited strings Yeah There's a couple of other handy methods on the environment itself In particular one that's very handy is swap And so what swap does is what swap does with In general actually, but so you can swap in a new value It basically overwrite something and it's a context manager So only for that block of the context manager You can mutate certain elements of your environment and then they will get undone as soon as you are out of the context manager Like That Then If we try to access this down here It doesn't work because some of our has been removed from the environment So this is really useful for like Temporarily modifying your path or temporarily entering like a new in A new context that you need to run something in like say you want to switch between a million versions of CUDA for some reason Like this is a way to no one would ever do that. No one would ever do that Come see my tutorial tomorrow Okay, yes So The answer is both yes and no so we don't have a particular syntax for doing that yet because that Turns out to be pretty complicated in some edge cases that we'd like to work in conch that don't work in bash But that's a whole separate thing, but you can always run commands through nv. So if you wanted to do nv sum var You know Equals 10 echo Sum var Uh, well actually that so that doesn't work in bash either. I think is the thing Yeah, that's one of those that this is one of the things that doesn't work in bash that we would like to Have work in conch and so this is why this uh This is why this like we really want that to work and and that the fact that that doesn't work is why we have Swap and other things, but if you wanted to set other environment variables and things like that you can Uh In bash, I mean well, yeah, so that's a different line Right, so export will export it to everyone and then you have to unset it Which is annoying Uh, if you want to remove it afterwards, right? Yeah, so that's what swap gets you. Yeah, but Uh, yeah Yeah, yeah, you could you could star star keyword arcs into that. Oh, definitely That's there Okay, so we have a few more exercises here using this stuff Um, these are things that I'll say like I I both do on a regular basis like these are these are true life examples um, so one is um use get pass to Temporarily set your password and environment variable So this is actually so far as I can tell the only way to securely type your password into a terminal session without it ever being Saved anywhere like including in your terminal history um and uh the second exercise is this also happens to me a lot which is like if you're um native like package manager Uh, it doesn't like uh like con to curl and keeps like yelling at you because like there's some sham is match um You just want to run an install command and just for that one install command pop Like the front element of your path off, but you don't want to mutate your path forever You just want to do that this one thing. So just you know temporarily mutate your path run some command and then return it I'll give you guys a few minutes. We can circle around answer questions All right, so Before we move on any questions on the previous stuff now that breaks over Uh anything all right, so the next section we're going to be talking about what we call callable aliases so um Callable aliases are basically a way for python functions or python callables and sub processes to exchange code um In a more integrated way than what we've seen through sort of the at operator and some of these other uh Curvy brace or curvy. I forget the mnemonic. This is curvy curvy captures. That's right. Um So we're going to be building up sort of data pipelines in a more uh in a more integrated fashion um And basically what callable aliases allow us to do is run any python function as a sub process command um It's not any python function really uh because it requires a certain set of known signatures But assuming you adhere to that And we're going to be going through what those are uh, then you'll you'll be able to run them. So Uh, they're callables right so that part makes sense They're aliases because they get stuck in what's called the aliases dictionary or the alias is mapping So this is something that gets shoved into built-ins as well Um, and it's just a mapping between all the possible different aliases that exist If you're familiar with other shells, you sort of know what an aliases, right? So and if you're not, uh, you'll see it's just another way to look up commands It's another dictionary to look up commands in uh, does this need to be plugged in? No, okay. All right um so The first function signature is just an empty function signature So and it can return either a string Or in an integer return code where you know zero means success and everything else means various degrees of failure So you can do this with a lambda if you want So go ahead and type this out. So if you say aliases, you know set item banana Equals lambda with no arguments and then banana for scale new line You can then run the banana command That is it. That's the essence of callable aliases And that that should just work Yes, so as tom caswell, i'm going to say his name out loud tom caswell says this is Lambda for your shell server server server lists for yourself shell I'm going to misquote him shamelessly as as well so Okay, matplotlib matplotlib. That's right. Yeah, as long as we're mispronouncing things. I think Okay, so you can pipe this into any other command. So the wc command counts characters and lines and words So if you pass the dash w flag that means to count the words Um based on white space So you can say banana pipe wc dash w and that'll tell you that the output of the banana command has three Three, uh, three words in it, right? and if if you think about what what it would take to do this in in using sub process with streaming data in and out this is Doing a lot behind the cover under the covers to make all of this work for you But it feels pretty natural Right, because it's just a command just a python function. You're running as a command in sub process mode Um, and of course if you want to get rid of that aliases alias because you don't like bananas Um, you can delete that alias in the same way that you would delete any other item out of the dictionary Any questions? Yes? So Swap is for environments and aliases is a totally different mapping. Yeah, uh, having a swap is not a bad idea though Please open an issue There's a banana command on the boondoo. I did not know that there was a banana command on boss. I don't know What are you doing? Where do they live? Where do where do what? Yeah, so aliases live in their own dictionary that gets shoved or Unfortunately aliased uh into built-ins So we're not really in this tutorial talking about how conch does all these tying of things together under the covers But in built-ins, there's an aliases dictionary that you can access at any time Yeah, and that allows it to persist so you can modify aliases or add these commands in your conch RC, and then they all live indefinitely okay Uh, the next is that you can take a single argument which is Uh, the command line arguments So like sys.rdv if you're familiar with that Um, and it's it comes in as a list of strings. So if you provide one argument That's called it. It's typically called args. Then you can take command line parameters. So here's an apple function which takes Takes an args it'll look at it and it'll say Is my args list of length one? And do one thing and if and succeed return zero right because you can return the return code from these functions And if not, um, it'll uh, and otherwise it'll return one so um, yep, and then uh And just showing off another bit of syntax if you use this with the at Python mode operator you can you don't even need to stick this in aliases You can just call it directly because it's a python object. So if you put the command the function at parentheses function as the first argument And then pass in a some command line arguments after that it'll read it in Any questions on how this works Any callable will work Callable classes are are yes Yes, go callable classes. Yeah, this is not limited to functions and and uh, and lambdas and things okay Yeah, and of course there's a formatting bug, but that's whatever Yeah Sure Yeah, so the question is would would you just want this to live in your Your conch execution context the python execution context or would you want this to live in aliases specifically like you might do in bash? um Oftentimes you just you stick them into the aliases dictionary like you do in bash because it's easier to call them It's simpler to call them It's kind of that's kind of the where what that's there for and where it lives If for some reason you don't want to have it There and you just want it to have it have it in your execution context. That's fine. That's fine, too Yeah All right Okay, so let's uh move on so The in the next case you can provide In sequential order Any of standard in standard Out and standard error And these are keyword arguments and they default to none right you may not have one of those streams although usually you have standard in So those come Immediately following the arguments parameter. So here we've got a grape function Or an underscore grape function. This is actually the most common pattern is you have pattern. Sorry. So you have the function Name preceded by an underscore And then you put that into The aliases dictionary without the underscore And basically what these do is these give you file like handles For standard in standard out and standard error. So if these are present you can access them and do whatever you would do normally with those those handles so We do some contact switching under the covers too. So like if you just write to sys.standard in or sys.standard error, etc. That that works as well, but it's usually better and and To write directly to those file handles. So here If you wanted to implement something that's streaming but not asynchronous You would do four line in standard in you'd be reading lines from standard in and then we'd be writing them out Write back out to standard out lowering them as we go Okay Yep The underscore pattern is there because When you source You don't get under you don't get the underscore variables in your execution context Those don't get brought in automatically. So It's a way of hiding things from your execution context if you don't want to pollute the namespace that you're just working in all the time Yeah Okay, so usage here we go. So this takes a standard in and kind of needs it because we didn't check if it was none here so if we spell echo wrath with And then pipe that to our grape command It will lowercase that and write it back out This makes sense to everybody right so the the standard The output of echo wrath becomes the standard in of the grape function Which then operates and then writes back out to what is our our terminals standard out Because that the grape is being called last in the pipeline Okay, um, you can use any of these but if if if you want to use standard error, you have to use standard in and standard out Yeah, that's about it Okay, whoops. Yeah, so Next up is you can also get a handle or a reference to The command specification. So this is a specific object that the command pipeline also has access to it's it's basically how conch Thinks you should be running the command. It's how the command pipeline got set up for that particular sub command Um, so this is a rich python object You can go look at the api if you want to but it it effectively contains all the metadata about how you should be running that command Um, including what goes in what goes out. So that'll come in after the standard in standard out and standard error um And you can do kind of like funny things here. So one of the things you can do is you can you can use this for is you can check whether the Command is meant to be in a captured sub process so that we talked about that before so you can check to see like Am I running this in a captured sub process or not? So this is particularly useful if you want to know if you're connected to a live terminal or not Or if you want to like this is actually used in the witch command pretty frequently Where you don't want to append a new line if you're capturing it If you're just printing it out to the screen, you want the new line to be there because you want everything to look nice but otherwise You don't want the new line to be there. So Um, and you can import part of conch to to do this check for you if it uh, if that makes it easier And Here's just our kiwi and this will have output that looks sort of like this. So if we just run the kiwi command Yep And then end equals end, but you didn't close the code. Yeah And then Yeah, so if you just run the kiwi command on its own in an uncaptured way It will produce the new line in the extra text and if you Capture the kiwi command then it doesn't actually have the new line in it Okay Any any questions on this or use cases? Yeah All right, so let's uh, let's move on um, so the last form of these functions is uh You can get back the stack frame of the call site of the alias So if you need to know the locals and global variables Where the sub process command was being called from You get back the the stack for that if you don't understand what this means Like don't worry about it. You definitely don't need it, but if you do this is like a ridiculous tool um, so please stack responsibly But uh, it it is something that's like You know, we don't need to necessarily dive into this But it is occasionally useful to know what you're what the variables are Around where you're being where the the sub process is being called Um and conch does that tying in for you automatically Any questions on this I know this is this one in particular is a little wacky Okay, so we've got some more exercises. Um, they're all related Uh, which is nice So the first exercise is to write a callable alias which just pulls down the contents of frankenstein And uh writes them out to the screen. So if you look at that link, it's basically the project Gutenberg link Um, and so you can just copy that and and provide an alias that prints out frankenstein to the screen grabbed from the internet Or you can grab it and then print it out however you want um The next is to write an alias that calls upper on the standard input and returns that as output Uh, the next one is to write an alias that returns all of the unique Sorted words coming from standard in um The next one after that is to write an alias that counts the number of white space separated tokens read from standard in And then finally the combine all of those into to a single command pipeline that executes And we will definitely walk around and help or you can look at the the details um Each of these is can't is basically a one liner. So don't overthink it But it's okay to overthink it if it gets the job done. I think that's fully qualified Okay, so um So for the first one if you Uh, you don't need to use python necessarily To to do this so much you can just set set an alias to frankenstein that is a lambda That calls curl or w getter whatever on that url and that will grab That url that we listed just straight away. So if you're using requests or something you you can definitely do that That's totally fine, but you don't need to so you can use a command here um Yeah So if you're getting stuck on that that's that's there And then yep, I'm sorry. All right, I'll come over so or but we should uh, should we do the second one too? Yeah So for the second one If you want an upper All you have to do is take both args and standard in Just read everything from standard in And then call which is a string and then return The upper of that string you could also do it in this streaming version Where you have lines that you're reading from and then writing them back out to standard out It's a little more complicated. You don't really need to do that So for the third example um, or the third exercise here, we do something pretty similar where um to the other where we want to count of words um, so the way that you do this is you read from standard in um, and then you Split those split based on the white space, right? We're all pretty familiar with that Um, if you want the unique, right? So that'll give you this big word list in order If you want to unique that you call set around it to get the unique words And then if you want them sorted you call sort it around that and then you join based on new lines So that you output a string again, and that's the uh, that's the thing that you return It's kind of a lot of parentheses, but it gets the job done in one line You could do it in more lines if you wanted to clean it up like we did in some of the other examples But there's no need here Do we have the we don't have these loaded in or you do okay. Oh, yeah Oh, nope. Okay That's probably in that. Yeah So for example, if you ran thus it's not perfect, right? Because this is text processing, but um There it is Um, then for the fourth example or fourth exercise If you wanted to count the length of that thing coming in you'd have to basically do the same thing, right? So here you'd you'd read it in you'd split based on white space again And then instead of calling set or something else you call length Uh, which returns an integer you don't want that integer to be the return code So you have to convert it to a string add a new line And uh, and then you go from there So that's how you do or you can do wc dot dash out because reasons You could also do that that'd be a better example here You could do that in the alias. Yeah, you could run Yeah, that's the simplest form of the alias really And Then pull down frankenstein Oh, I think we just did We really love this frankenstein How did you do Maybe Thank you mic mccarty All right, um, let's do it though. Yeah, do it the right way. Um, what was it upper? I'll let you do this and then We'll uh, we'll debug that later Oops, sorry you want the yeah, it's just words and then count The real count and then the point here is that you can Merge all of these together in a single command pipeline, uh that executes so Okay, any uh, any questions on this All right, so that's uh Let's if there's no questions on how this works or what it uses we'll move on not a break because we're doing breaks differently Um, and our next topic will be events which uh, so switch with y'all Okay, so um Uh an event is um, it's hard to actually describe An event I discovered this um, but um, it's it's uh, it's a trigger that you can fire and then um, if You have something that's set up to listen to that firing which we would call a handler It will then execute that thing That is a horrible vague description But is uh, I think we'll be a little clearer when we actually go through an example I'll just say the events a system in cons was written by one of our Contributors jimmy bliss and is just an incredible piece of work and I can say that because I had nothing to do with it It's really incredibly powerful um, and lets you do a lot of really interesting things if you want to Like introspect your code or have all sorts of things happen in response to all kinds of events. You can really start to um Do some very uh interesting clever and powerful things here Right, so I said this um A handler is just a function that is called when an event is fired So something says event this kind of event fires any handler that is attached to that event will then be run And you can have as many handlers as you want on a given event So several functions can be executed in response to something just happening somewhere Okay, so one of the events um all of these live in just the events uh, kind of built in at the base So you can say events um one of the common ones there's several that are built in to conch later We can look at like defining your own, but there are many that are built in the first is um on Changed here Which fires if you can imagine whenever you change directory So this event already exists So what we want to do is just create a handler that will execute in response to that event being fired So the way that you do that is with this decorator syntax. So you just say at events and the name of the event And in particular this event Hands off two Variables to whatever function is being called as handler. We'll show you how to sort of inspect that later They're called older and new dur Or old deer and new deer depending on your preferred pronunciation of words that aren't words And then in this case just for a kind of a simple example I'm just printing out a message that says hey, we just changed from this directory to that directory Um So now you can just move around in your terminal like do a cd dot dot And it'll tell you this thing and you can go back into the like directory. We're just in Um, of course now, uh Your terminal is is probably a little overly verbose and you don't want this to happen all the time. Um So, um, you can always remove handlers too because maybe you've made a mistake And it's saying way more than you meant it to say and you would just like to have your terminal back Um, so the simplest way is just there's a set of handlers on each event and you can just pop them off So in this case events on change deer um dot pop And then you should see the thing come up and then you can just test to make sure that your terminal has recovered by You know going somewhere else and confirming that in fact there is uh, no longer something being printed every time Um, so that was just a quick example to show you sort of what an event will do We can now we'll sort of just dive in a little deeper Um into what's happening and like what all you can do and how you can hook into things Um, so as we showed you register a handler by just using the name of the event as a decorator um those um input arguments uh, the keyword arguments that are there are being um supplied by the event itself um There are two ways to kind of figure out what an event provides. Um You can just um do help and then event dot name event. Um Currently in cons that has the unfortunate side effect of also printing out a bunch of like metaclass stuff that you maybe don't care about at the moment If you just want the simple succinct definition The better thing is just to look at the dunder dock Of the event you want. So in this case you can see that It is uh specifying the types of the two arguments that will be provided Right there. Yeah, um, and it's returning none So you sort of have this like type hint signature that uh describes what arguments will be provided their types And then what will come out of the event if anything Yes, there is a there there are two ways to get a list of events that are available Um, currently the tab completion on that events shortcut is a little bit borked Which we're going to fix like in a couple of days, but if you go to a dunder conch dot built-ins Built-ins dot events And then hit dot tab All of those And the other way is if you go to the docs, there's like, you know x o n dot s h slash events I think it is the html, but on the website. There's a list of all of them what they do when they fire Yeah Also, I should say if you want to register a handler for an event But you don't actually I mean it's going to provide those arguments no matter what you do Like it's that's what the event does to the handler You can choose not to use them But you do need to say like you need to give it like a star star quarks or something to at least capture them Or it will throw an error because you're going to pass Arguments to a function that doesn't know how to accept them. So it's just you know You can make these future basically future proof just so long as you always pass at star star quarks And then you don't have to worry about something firing Or like passing unknown arguments to your handler Um So events get fired when we tell them to fire or when you tell them to fire Is is effectively the short answer to how these things get set off Um But so we'll walk through an example of setting up our own event and telling it to fire just to give you a notion Of a kind of what this all looks like and how you would put all of this together Okay, so first um, we need to create an event Um, and uh The way you create an event is actually by writing a doc string for it It's sort of like the ultimate self-documenting code like it's impossible to create an event in contra without it having documentation because that's the only way to create it Um, it's kind of amazing Um So we're going to create an event that just raises an alarm if it's called that just you know that it's unhappy Um, so the the way you do this is you say events dot doc All right, and then the first Argument you give it is the title is the name of the event Uh, which in this case is never run this Um, and then you give it a doc string, but which should be um Uh The uh the signatures in this case this event takes no arguments and returns none. So it's just a it's a simpler Um Thing so it would just be events not never run this uh parens arrow none and then you can um on the next line You can kind of provide a description of what you know, you're expecting it to do That's more for other users or other people So if you were writing a plugin and you wanted to have some events You would kind of try to put your explanations in here so people understand how they can use the events you provided Um to full effect Okay Okay, so now what we're going to do is um the way you would use this event is you would um It's an event that you basically want to never be fired So you you would put it in a function that for some reason you have like really should never be run But you're you know you you want to recognize that it may exist And so you put this event in there to kind of alert you that this thing is happening So, uh, if you wrote a function that deleted everything on your computer I don't know why but let's just say you did Then what you would do in let's say the first line of that function or somewhere along is that you would just say events dot and then Never run this which we've defined in that Previous doc string thing and then dot fire And then what happens is that whenever that function is called and it gets to that line the event Management system will basically fire that event So we can go ahead actually and run delete my computer And nothing happens So in fact actually um Something does happen right the event fired, but we have nothing listening to the event So you don't get anything out of it, right? So then the final step is to set up a handler to add it so we create the event We tell the event to fire and then we have something that listens for the event firing that then reacts to it Right, so there's these three separate these these three separate components And given the fact that this is a uh Like an event that's supposed to fire when somebody has done something horrible to you You can make it a suitably chastening message Um and as always um Like you have access to the full You know uh Conspectrum here, so if you want like in this case it means like the who am I is a nice thing You can figure out exactly which user is responsible for doing this horrible thing to you That's a good tip. Yeah, perfect. Um, so then if you run delete my computer again Then the event fires and now you have you know, you know that it was scope at the delete of your computer. I'm sorry Can't take him anywhere Okay, so, um, are there any initial questions otherwise there's some exercises here that should help kind of like cement the general Pattern in place, but we're happy to take questions first Okay, great Um, so these sort of build on one another so I'll like reveal them as we go Um, but the first is just to create a handler for the event that is called on n var change Um, this is a built-in, uh event. You don't need to create the event. You just want a handler for the event and you want to have it print out the Um old value and then the new value and of course the name of the environment of the var umbrella is just changed Um, so you should probably check on the dock the dunder dock of the event to figure out what those variables are called Otherwise, it's going to be hard to refer to them And Anthony and I can sort of wander and help So as gill showed up here, um If you just write a simple if condition to check if the name which comes in as a string is Like the dock string says is in Is either In uh is either pwd or old pwd and then only print if it's not We can um We can check to make sure that it works normally for most environment variables, but if we change directory it um It it no longer gets called And then think we're I mean a little low on time. So maybe we'll skip this, uh, this particular Uh exercise, but you can go feel free to do it at home and and email us too Uh, do you want to just show it or Okay So one of the really um handy ones for doing some control flow We don't we don't have to take time to actually, you know, uh do it right now But there's on post command which has a bunch of um of those items that you get in the Command pipeline object Including like timestamps the name of the command that was run and other stuff So in this case, this is all it takes basically to set up like a power line style Like the timestamps of the previous command and just throw it onto your right prompt over on the side It's really just like this three line event handler thing that you can use and then you kind of set up this interactive thing to track You can also get like return codes and start coloring things differently I mean it gets really easy to build stuff up there, you know to get sort of the responsive prompt that you want That's all I wanted to say Okay, so now we're going to talk about macros so macros are syntax that replace a small amount of code with some with one of the few things So either another expression or a syntax tree or just a string rather than being evaluated normally So basically what happens in conch is That the the parser gets paused And then we skip the normal parsing We gather up whatever macro inputs are going to be Are handed off we'll get to what those are in a moment We evaluate the macro with however we're told to evaluate it And then we resume normal parsing and execution So conch's macro system is more like rusts than Other macro systems you might be familiar with so who here like knows rust even a little a little so This gets used all the time in rest. So if you're from if you know that it'll look familiar. If not, hopefully it won't be too much of a learning curve here But basically the point of this is that You're already familiar with macros Normally jupiter magics are just a macro system effectively. They they pause normal execution and do something else So in like in rust the conch macros use the special exclamation point syntax And there are three types of macros that we have So one are sub process macros, which we'll go over first the next are function macros Which we'll follow after and then third is context macros So we'll see what all of these look like in in a moment here So let's start with sub process macros So basically if you put an exclamation point anywhere a loan exclamation point anywhere in your command pipeline Anything after that will just be interpreted as a single string argument to the rest of the command Um, so if you say echo exclamation point, I'm mr. Meeseeks for example, then that entire thing is just a single string Uh after the exclamation point it's stripped we'll get but To show some counter examples if you just echo xyz right echo doesn't really care about the white space Um, so normally you'd have to pass this in as a string Which is two characters But if you use a macro you only have to use one it's echo exclamation point xyz in that whole thing It's equivalent to having put that everything in the string Okay, now this is sort of a contrived example Oh, but before we get into that And it's important to remember that macros pause all syntax right? Uh before until you escape the sub process command. So environment variables Uh will just be listed as there as the string you typed in not anything else Um, because we're not parsing that as an environment lookup anymore Um, so if you can if you want a more like extended example, you can say you're gonna have An environment lookup on both sides and you'll see the first one is uh is the value and the second one is actually just the string that you typed in um Okay So this is really useful when you want to pass in a lot of String like a very large string to a command Um, so for example time it time. It's like a classic case for this right? So if you do time it and then some python code Time it is a built-in alias in conch. So you don't need to worry about implementing it. Um, it's there Um All of that is up is a python The string that follows or a conch string that follows Um Or similarly if you wanted to do some bash code right normally you'd have to put that bash code in a string And then execute it but with the sub process macro you can just uh Type in the exclamation point and it's uh, it's done Um, or you can do this with python basically any of the things that you want to pass into dash c2 Um, it'll work Okay I think uh, what did you Oh, yeah, there you go. Okay Um Any questions on the sub process macros? They're pretty simple That's why we did them first uh The Okay, so let's move on to the function macro. So these get a little more fun um So Macros don't require a special function definition. They only require a special function call. They modify how the function is called um And uh, it's just normal python callables What you do to call something as a macro is you stick an exclamation point between the name and the first the open parentheses um And macro arguments are split on commas like normal functions. So here's a few simple examples Uh, so if we had an f function if we wanted to call it as a macro with no arguments We would say f exclamation point parentheses Your use dross this should look pretty familiar um Uh, if you want to call it with a single argument, uh You would say you would do sort of the normal python single argument Uh methods or you can call it with multiple arguments splitting on those top-level commas Okay um How the function is defined uh determines what happens Or specifically how the function annotations what the function annotations look like Determine what actually happens in the macro when you do a macro call Um, and that's matched up with each individual parameter Uh, so here's an example. So say you have an identity Function that has its annotation for its x parameter set to string That x that comes in When it's a macro call will always be a string Even if what's what's normally put into that is not a string So here's a here's a comparison between the the two different versions So in the top we have the identity function. We call it with a string. We get a string back On the bottom when we call it with um, the identity With a string, but as a macro call we get a This the repper string effectively right returned um Similarly for ints in a normal python call you'd get an int back In the identity you always get Uh, the or in the macro call you always get the string and same thing with the the others, right? You you get the string form of the argument rather than the Rather than the the actual object itself Each argument is stripped This is basically done for consistency So that things like 42 and 42 don't end up being different. They're not really meant to be different. So In this string one, they end up being the same You feel free to like raise any questions or deep concerns or anything as we're going. Yeah, tom. Why? Well, we're getting to why? in In context macros, which will see some cool things um But it's the same it's it's the same underlying infrastructure for functions Okay Yeah, wow so consistent Okay, so here's some like funny examples, uh that are really pretty bad Um, so if you macro call like import os obviously this is not valid python syntax But in any way shape or form, but you can get that code back You could embed some c++ Because I don't know why I forget c++ Wow, if only I could forget c++ You don't have to type No, you don't have to quote that it's not it's a way of like circumventing that quoting. Yeah In this particular example, but there's more things that you can do than just strings. We just showed the strings here So if you said You wanted this to be an ast there's there's kind of flag codes for this if you want to annotate it in different ways You can get back the ast of what you put in if it's python or conch code So you can get that tree object back out, which is pretty pretty nice and useful if you're doing a lot of like a tree rewriting You can get a code object out if you want to want to put in Exec or val or something or if you put in the c flag or sorry if you put in compile There's six of these so here the first three The others are a val so that would just eval the argument as normal so that means that you basically could only put in python expressions If you wanted to put in exec you could put in Basically anything that you wanted Or you could say t and get the type back um So and in theory this could be extended if there are other things out there that people would want to see done But this is kind of this is what's available right now Any questions on this stuff? Okay Okay, so here's an example of some annotations Uh a simple function. So we're annotating with This the first argument by default since it's got no annotation We'll just come back as a string The second one will be an ast object And the third one will be a code object because we're passing in compile the built-in compile function um If we do a macro call Yep See a lot of pensive people head's exploding Okay Uh of this one. Yeah, so just call it with anything. Um, or any python anything excellent point Yep, uh, I don't know like three plus five I guess I don't Oh, yeah, uh, I think you have to do a new line after the three plus five right or after the os I Think it's after the os because you did a statement No, no, no like a literal new line I'll do it. It's too, uh No, I guess not string Interesting, uh I thought there was an example here. All right. Well, this is not working right Now, I don't know what the this should Know for their code Okay, well, it's not it's failing to Compile one of these things so um Let's maybe just do this Uh No Yeah, I don't know. It's uh, what the problem is I'm sorry. We'll have to figure it out afterwards. So, um We have a parser error. All right Um Okay, sorry about that uh, so the Next the the last bit of macros that we'll get to are context macros. So these use The exclamation point right after the with uh word so you can use with exclamation point um, and then everything after the colon will be captured, uh Like it was in a normal uh with semen. So this provides both Named blocks and anonymous blocks um, so if you say This isn't going to work because there's no x to enter but you say with x equals 10 print y this would come Uh come back as us as a string Um, and what this can be thought of really is is doing the follow. So you can think of this as saying Uh, whatever your context is x dot macro block equals the string of the code in the block de-indented And then assigning the locals and globals to to vary up to attributes of that as well and then passing for the actual block Um, so it's a bit of code rewriting macro block is de-indented And uh these attributes are set before the enter method is called But they're not cleaned up on the exit method. So you can do that if you want to uh, but they live around They stay around and live if you if you need them um Like with functions by default the contents of the block are returned as a string Um, however, they don't need to be they could be any of the other special annotations that we saw before um And that's just lives is the this conch block Attribute on the context manager. So that's how it knows what to look up what type to convert it to um So here's an example And and this is gets to the use case a bit. So we can write a simple xml block So if we say we're just going to be pretty explicit. You don't need the comments, obviously um So we say it's going to come back as a string We write an enter method that takes the contents of the block as a string And we'll parse them into an element tree an xml element tree and return that um as the uh as the object in the context manager Um, then when it exits, we're just going to clean up those things the things that we we had before Yeah, I think you need this star whatever Macro locals. Yeah Okay, and then you can use this. Oh, it's cutting it off a bit, but um Uh by saying with exclamation point xml block a new object as tree colon and then everything Um, you can just do a short one. So just do like you could even just do yeah you Uh And then just close out the note I think um And now if we we can inspect the tree object tree is an instance of So I think what is it if you do tree tag? Um, that gets the note so it parses That x xml. So this lets you write documents and other languages right in conch and then do whatever you want with them Which is somewhat insane, but actually kind of useful occasionally And you saw like writing that context macro macro object that class was actually pretty simple It didn't take a lot of lines of code to do that So yeah, that's kind of the Scenario there And hopefully that answers at least partially the use case question. Okay. So we have a few exercises Um The first is to use a sub process macro. So just run time it Um on the string and formatting a string The second is to Call the import module as a macro So you don't have to use quotes and the third is to run, uh, uh write a json block context manager Oh, yeah, we're not gonna Then we need to get into our example And then we need to get into our like Any questions on any of these or if there are questions, um Format was 42 And you see like what this really prevents once time it completes Is you having to run it with a extra set of quotes, right? Because time it expects just a single argument that takes Um, so this is the same This is fundamentally the same, but you just you don't have to type that extra set of quotes. So Okay All right, you want to move on to the next And then yeah for the standard library import lib Um, this is just showing you can you actually you can just use existing functions, but call them using the macro syntax And so in this case you get back the Import lib sorry. Yeah dot import module So if we do sys Uh, right because the first argument is a string you can just get that so It'll it'll take it'll turn whatever you type that into a string Okay And then Uh, the third one is this json block. So this should be very familiar to the xml one where um Now we just have Or now we have uh json. We don't need the the macro block part because that's optional. Um, but we Uh, oops on enter um We'll assume that the code that comes in is Uh part of is valid json. So we'll return uh json dot loads of self dot macro block Um And then on exit Uh, we'll do this we'll do the same delete portion just to clean up after ourselves as well um, and so a use case for this is just with uh json block as Let's call it x. Um, and we can write like Hello, just some random json mom And now x is a dictionary that was parsed from that json pretty Pretty simple silly example because json and python are so similar here, but uh, you know, it's it's a one way to do things so Any questions on these exercises? Yeah So Where does this json block object end up in this case? What do you mean? So x ended up as the return value of enter Yes, so where did the json block instance It's gone. Okay, so like the so the cleanup is a little I guess you can show in the cleanup Implying these things are leaking Well, so the macro block and macro globals and macro locals. Yeah, so so this would leak I get in the case where you instead returned self from the From the from the enter method Right No, no, it's not it's not keeping a cache it would only leak if you so like So the the place where it would leak potentially where you wouldn't want it to necessarily is like if you wanted to Have the same Instance of json block be reentrant like that's what this makes us so you could like have one instance of json block And then just reenter it every time And always get the tree back Uh, or if you return self and we're doing something else with it later Right, so yeah That that's where the references get added Yeah Does that make sense Sort of um close enough. Yeah, I guess the the thing is like if you returned Uh, so if you said like self dot Like maybe you wanted like Like maybe you wanted to keep the j object around so you did like json dot Or you wanted to keep the tree um, so you do json.loads of self dot macro block And then And then you return self You know, you might not want to keep the globals You might want to keep the macro block itself around, but you might not want to keep the other locals and and globals here and so Just using this So now x is the json block and then x dot Tree Is the uh, is the actual Version, but you still have access to the string of what the macro block was Yeah They are the uh, they they're the the name they're the local and global Uh dictionaries like as if you had called locals and globals the python built-ins Where the where the macro block was called or the context macro was was written Yeah Yeah, okay. Yeah, any other questions on this? What are the use cases Yeah, so the most common use case is really something like time that right, it's really those Um, there's a couple of cases where that i've that we've used these things where like if you wanted to write some bash And you really needed it to be bash in a local context Then you would then you write like a little bash thing um There's been some other use cases where we take input or configuration files in as these macro blocks Um, uh, but otherwise, yeah, it's that's kind of the use cases Import sorry saying Oh, yeah, yeah That that was that's just a toy. Uh, that's kind of a toy example to show Um, right this comes from the standard library and the standard library didn't Uh, doesn't know anything about conscious Macro system So it didn't annotate these functions in any particular way and this is just showing that you that you can use You can use the macros on those functions if you if those functions happen to take string arguments Okay, so it's more just demonstrating it's it's demonstrating. Yeah, but the function macro stuff just ended up having to It kind of had to be there for the context macro stuff um That infrastructure all had to be the same. So it's there and available in the language if you want it, but Um, I wouldn't say there's like a killer feature for it unless you're coming From rust or you or you really like doing a lot of ast syntax ast tree like rewriting and stuff In which case this makes it easy for you to provide those rewriters or pattern matchers Um inside of conch, but there aren't that that intersection is basically me. So Yeah, so Okay, cool Good question Uh, let's we should maybe skip this well except we don't know if we can yeah, well I can try to Um, so this is going to be interesting as we discover if this is even possible anymore Um, but there, uh, there is an example here Which is that we were working in a lab that had a bunch of MRIs of mouse lemurs That's a mouse lemur So we had all these MRI datas, um, but uh, it was set up on our web server by a postdoc who disappeared last week Um, and we have some other bad news Uh, which is that he used bash to handle all the data collection He didn't know how to make sure that different datasets were saved to separate directories So he just added a random four-digit number to the end of all of these Um, NII MRI image data files Um, and he also neglected to do this with the json metadata that was included with it. So that's all been overwritten and lost Um And then he ran remove with an overly permissive glob I deleted all of them And uh, the files are kind of big in the postdoc's web servers at his house We don't want to have to download all of them um That being said, uh, the web server at the house, which is on my laptop is completely inaccessible to everyone on this network It turns out which makes this a little trickier um The data is now on uh github At uh in this repo called MRI data, sorry And uh This may not be possible. So we'll find that it's going to be a learning adventure for all of us Um, we do know a couple of things about the data. So this is sort of our exploratory thing They all do follow this naming convention Uh, so you just have like sub dash two-digit number underscore four-digit number dot NII Um The files are large, but the first 348 bytes of each file is a header So you can nominally just pull down the header Um, we're pretty sure there are 19 mouse lemur scans Um And the circle spine study going on the lab next door, which is mixed in with all this data only has six subjects Um And nominally this is how you would use curl to only pull down the first 348 bytes of a file if there were a functioning web server available Um, we're going to discover together if you can do this from like the raw link on a github repo But we're not sure Um So having said that if you would like to even try this and we welcome your support and efforts You can install, uh, n i babel, uh, n i b a b e l on kind of forage, which is a nice package for loading in this MRI data It's on pip, right? I don't know. Oh, you don't know. Okay. Yeah, I don't even look on pip anymore. Yeah And then um We are all gonna try together to see if we can Just download the headers of each of these files to sort of determine which of them are the ones we want So we don't just download everything which is never usually the right answer to these sorts of questions Maybe we should see if we can curl one of them right now. Yeah, let's try it. Okay um All right, so what it's curl dash R and then What I should have kept that and then what's the github URL? Well, the github api should be This feels way too much like real science right now So it would be uh github.com g4 site MRI data sorry blob master rifles true That didn't work No I Thought there was like a real Okay, you know like a raw user data kind of thing. Where does that live at? I think usually it's there unless the file is too big Oh Okay, this is why you don't store, you know big data on github this way. It's a really bad pattern Let's try this one Received No such key or maybe that one's not up yet It's another one of these file names that's definitely up Uh Okay, time to rewrite the slides Which you'll be able to reload and copy from yeah, what's that digital ocean droplet? Uh, they're all all Put it in this chat Sorry about this overall By Yes, yeah, no the network's all kinds of fun today Don't help me google. I don't want your help your help is terrible and poison. It's not help. It's spying. Just stop spying on everything we do They're watching us right now That's true, but we we ask them to Can you curl down a file list from there? Is that work? No, I don't well, I don't know how to what was the command for doing All right, I think It should just be this Okay, does it work Yeah, that's yeah that that the information's in there. Okay, so Yes So you've got an xml block all right We are happy to answer questions along the way this should actually work though, which is kind of amazing so we have The post doc is better than we thought he was and has uploaded the files to this digital ocean droplet That I've just added to this slide If you reload the slide deck you should be oh, I haven't I haven't pushed it up. Okay. I'm sorry I can't I can't push anything right now because I haven't set up the ssh thing and it wasn't working. I'm sorry um But if you curl that url you will get This looking kind of blob Which does have all of the file names in it So you can see there's one I lost it there sub 187785.nii And you should be able to pull out from this a list of all all of the names that match that pattern and then you can Pull down only the first 348 bytes of each of them load them into Ni babel and then inspect sort of the dimensions of the thing to figure out which are sort of the correct images Yes, I can You probably need to well actually yeah, it should just work. Yeah. Yeah, it works. Yeah, I do that all the time All right, kind of install something and then import it immediately Yeah, so Uh, yeah, and if you're having a problem or if you're running to issues like come just raise your hand let let us know And thanks for uh dealing with our debugging So for a quick update on our progress here is there anyone anyone doing on this if at all Sorry to hear that so, um One thing you can do for some of this is you first want to get Uh the raw kind of page So that would be you could just curl down that base. You are all there. I actually got encoded. This is a yeah Can you make the font? I sure can You want to show the other command? Oh, yeah base. You're all right. Yeah, so then if you have this Really long painful string like this, but you know That the files look like Somewhere there You can try to use xml, but xml is horrible so um You could also use a regular expression to scrape over that and pull out anything that matches a certain pattern So then that's sort of the list of files that match that So now you might want to try just like downloading one of those Which would be to grab the first 348 bytes Save it to the same output file it concatenate or just you know put together the base url And then the path of a single file just to kind of test it out Seems to work you import knee babble You can load that file And then if you explore Some of the different options here you might see this header thing Yeah back there Yeah, so the question is about uh, why why shouldn't you use a path string here? Well, yeah So the answer is basically that it's a url So it's not really a path in a normal way And the second is that you're you're just passing it back down to a command a sub process command And so it's going to get turned back into a string anyways, so you don't really need the path object Yeah, having said that what um You know as you go along on this you might you would maybe curl it down using just you know Just a string because you want to pass that to curl But then in terms of loading the file after you have it there you could first make it a a path lib path Load it from that and then depending on the results of like how you're inspecting it Then use path lib of that file to move it or change it or mark it or delete it or You know so you can work that into the The process I'm going to keep working on this like at lunch so people want to On this contrived example to be created But you want things to work So that um, thank you everyone for coming. Uh, I know it's like a lot of information just to dump into people's heads But we appreciate you guys kind of toughing it out with us. Um, we also um, there's a bunch of stuff we haven't covered There's even some more new syntax probably that I've forgotten about Um, but we're here all week and we're happy to help you answer questions If you have a certain thing you like to do and you just want it to you think it could work a little better You want to try see what it would look like on conch? Please like stop us anytime We have stickers on our badges and you probably would recognize at this point. Um, we also have stickers up front So feel free to take as many as you want of those and uh, yeah, thanks for coming and trying out conch and hopefully You know, it improves your life in some meaningful way. So uh, and then Yeah, we'll be around and open bug reports find us on getter Uh, open issues contribute. We're Friendly community. So thank you so much everybody", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.84, "text": " Welcome. This is the tutorial for a conch. If you're not here for a tutorial on conch, you're really in the wrong room.", "tokens": [50364, 4027, 13, 639, 307, 264, 7073, 337, 257, 416, 339, 13, 759, 291, 434, 406, 510, 337, 257, 7073, 322, 416, 339, 11, 291, 434, 534, 294, 264, 2085, 1808, 13, 50656], "temperature": 0.0, "avg_logprob": -0.26448299573815387, "compression_ratio": 1.6245059288537549, "no_speech_prob": 0.030124448239803314}, {"id": 1, "seek": 0, "start": 8.16, "end": 13.08, "text": " But we hope you're in the right room. Yeah, we think this room is the best actually. You made a good choice.", "tokens": [50772, 583, 321, 1454, 291, 434, 294, 264, 558, 1808, 13, 865, 11, 321, 519, 341, 1808, 307, 264, 1151, 767, 13, 509, 1027, 257, 665, 3922, 13, 51018], "temperature": 0.0, "avg_logprob": -0.26448299573815387, "compression_ratio": 1.6245059288537549, "no_speech_prob": 0.030124448239803314}, {"id": 2, "seek": 0, "start": 16.76, "end": 22.12, "text": " You can introduce yourself. Hi, I'm Anthony Scopatz. I work for Quonsite and according to the slide", "tokens": [51202, 509, 393, 5366, 1803, 13, 2421, 11, 286, 478, 15853, 2747, 404, 10300, 13, 286, 589, 337, 2326, 892, 642, 293, 4650, 281, 264, 4137, 51470], "temperature": 0.0, "avg_logprob": -0.26448299573815387, "compression_ratio": 1.6245059288537549, "no_speech_prob": 0.030124448239803314}, {"id": 3, "seek": 0, "start": 22.12, "end": 28.28, "text": " I am both a madman and a poet, so I hope that this inspires you in some way today.", "tokens": [51470, 286, 669, 1293, 257, 5244, 1601, 293, 257, 20874, 11, 370, 286, 1454, 300, 341, 32566, 291, 294, 512, 636, 965, 13, 51778], "temperature": 0.0, "avg_logprob": -0.26448299573815387, "compression_ratio": 1.6245059288537549, "no_speech_prob": 0.030124448239803314}, {"id": 4, "seek": 2828, "start": 29.240000000000002, "end": 31.8, "text": " I'm Gil Forsythe, not Gorsythe.", "tokens": [50412, 286, 478, 17654, 48202, 88, 3322, 11, 406, 460, 830, 88, 3322, 13, 50540], "temperature": 0.0, "avg_logprob": -0.28881186305886447, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.002886844566091895}, {"id": 5, "seek": 2828, "start": 33.44, "end": 37.84, "text": " I am also a madman and a poet according to the slide. I currently work for Capital One.", "tokens": [50622, 286, 669, 611, 257, 5244, 1601, 293, 257, 20874, 4650, 281, 264, 4137, 13, 286, 4362, 589, 337, 21502, 1485, 13, 50842], "temperature": 0.0, "avg_logprob": -0.28881186305886447, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.002886844566091895}, {"id": 6, "seek": 2828, "start": 39.480000000000004, "end": 44.36, "text": " Yeah, that's why I got it. Yeah, and thanks for being here with us 8 a.m. on a Monday morning.", "tokens": [50924, 865, 11, 300, 311, 983, 286, 658, 309, 13, 865, 11, 293, 3231, 337, 885, 510, 365, 505, 1649, 257, 13, 76, 13, 322, 257, 8138, 2446, 13, 51168], "temperature": 0.0, "avg_logprob": -0.28881186305886447, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.002886844566091895}, {"id": 7, "seek": 2828, "start": 45.08, "end": 48.88, "text": " Not everybody wants to learn about new show languages at 8 a.m. on Monday morning, but", "tokens": [51204, 1726, 2201, 2738, 281, 1466, 466, 777, 855, 8650, 412, 1649, 257, 13, 76, 13, 322, 8138, 2446, 11, 457, 51394], "temperature": 0.0, "avg_logprob": -0.28881186305886447, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.002886844566091895}, {"id": 8, "seek": 2828, "start": 50.400000000000006, "end": 52.400000000000006, "text": " so we have a few bits of", "tokens": [51470, 370, 321, 362, 257, 1326, 9239, 295, 51570], "temperature": 0.0, "avg_logprob": -0.28881186305886447, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.002886844566091895}, {"id": 9, "seek": 5240, "start": 53.36, "end": 59.12, "text": " bookkeeping and just want to get everyone kind of set up and ready to go. If you've been to a lot of, or any slide", "tokens": [50412, 1446, 25769, 293, 445, 528, 281, 483, 1518, 733, 295, 992, 493, 293, 1919, 281, 352, 13, 759, 291, 600, 668, 281, 257, 688, 295, 11, 420, 604, 4137, 50700], "temperature": 0.0, "avg_logprob": -0.2292051551755795, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.019978893920779228}, {"id": 10, "seek": 5240, "start": 59.12, "end": 61.12, "text": " part tutorials before, sort of the", "tokens": [50700, 644, 17616, 949, 11, 1333, 295, 264, 50800], "temperature": 0.0, "avg_logprob": -0.2292051551755795, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.019978893920779228}, {"id": 11, "seek": 5240, "start": 62.12, "end": 68.08, "text": " the usual mode of presentation interaction is Jupyter Notebooks, and those are great. It works really badly", "tokens": [50850, 264, 7713, 4391, 295, 5860, 9285, 307, 22125, 88, 391, 11633, 15170, 11, 293, 729, 366, 869, 13, 467, 1985, 534, 13425, 51148], "temperature": 0.0, "avg_logprob": -0.2292051551755795, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.019978893920779228}, {"id": 12, "seek": 5240, "start": 68.44, "end": 71.96, "text": " if what you're teaching is like a show language and prompt.", "tokens": [51166, 498, 437, 291, 434, 4571, 307, 411, 257, 855, 2856, 293, 12391, 13, 51342], "temperature": 0.0, "avg_logprob": -0.2292051551755795, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.019978893920779228}, {"id": 13, "seek": 5240, "start": 72.75999999999999, "end": 76.12, "text": " So we actually just do need you to install the stuff, and then we will", "tokens": [51382, 407, 321, 767, 445, 360, 643, 291, 281, 3625, 264, 1507, 11, 293, 550, 321, 486, 51550], "temperature": 0.0, "avg_logprob": -0.2292051551755795, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.019978893920779228}, {"id": 14, "seek": 5240, "start": 77.4, "end": 81.28, "text": " be sort of live coding and have slides at the same time, and we're, you know,", "tokens": [51614, 312, 1333, 295, 1621, 17720, 293, 362, 9788, 412, 264, 912, 565, 11, 293, 321, 434, 11, 291, 458, 11, 51808], "temperature": 0.0, "avg_logprob": -0.2292051551755795, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.019978893920779228}, {"id": 15, "seek": 8128, "start": 81.28, "end": 85.56, "text": " we'll be running around and help and stuff. But so if all of you can just take a few moments and we'll run around", "tokens": [50364, 321, 603, 312, 2614, 926, 293, 854, 293, 1507, 13, 583, 370, 498, 439, 295, 291, 393, 445, 747, 257, 1326, 6065, 293, 321, 603, 1190, 926, 50578], "temperature": 0.0, "avg_logprob": -0.23528436086710217, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0011501968838274479}, {"id": 16, "seek": 8128, "start": 86.56, "end": 91.76, "text": " to troubleshoot and install Conch, we highly recommend using Conva for this, but", "tokens": [50628, 281, 15379, 24467, 293, 3625, 2656, 339, 11, 321, 5405, 2748, 1228, 2656, 2757, 337, 341, 11, 457, 50888], "temperature": 0.0, "avg_logprob": -0.23528436086710217, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0011501968838274479}, {"id": 17, "seek": 8128, "start": 92.08, "end": 96.96000000000001, "text": " there's other options. Yeah, and there's a new release as of last night at 10 p.m.", "tokens": [50904, 456, 311, 661, 3956, 13, 865, 11, 293, 456, 311, 257, 777, 4374, 382, 295, 1036, 1818, 412, 1266, 280, 13, 76, 13, 51148], "temperature": 0.0, "avg_logprob": -0.23528436086710217, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0011501968838274479}, {"id": 18, "seek": 8128, "start": 96.96000000000001, "end": 100.2, "text": " So if you haven't updated since then, please", "tokens": [51148, 407, 498, 291, 2378, 380, 10588, 1670, 550, 11, 1767, 51310], "temperature": 0.0, "avg_logprob": -0.23528436086710217, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0011501968838274479}, {"id": 19, "seek": 8128, "start": 101.2, "end": 104.2, "text": " there's a bug fix. Sorry, the code has bugs.", "tokens": [51360, 456, 311, 257, 7426, 3191, 13, 4919, 11, 264, 3089, 575, 15120, 13, 51510], "temperature": 0.0, "avg_logprob": -0.23528436086710217, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0011501968838274479}, {"id": 20, "seek": 10420, "start": 104.28, "end": 114.72, "text": " Like all code. So yeah, please grab the 0.9.8 release, and we'll go from there. So who has", "tokens": [50368, 1743, 439, 3089, 13, 407, 1338, 11, 1767, 4444, 264, 1958, 13, 24, 13, 23, 4374, 11, 293, 321, 603, 352, 490, 456, 13, 407, 567, 575, 50890], "temperature": 0.0, "avg_logprob": -0.28624060040428523, "compression_ratio": 1.4378109452736318, "no_speech_prob": 0.03619670122861862}, {"id": 21, "seek": 10420, "start": 115.12, "end": 117.12, "text": " Conch installed right now already?", "tokens": [50910, 2656, 339, 8899, 558, 586, 1217, 30, 51010], "temperature": 0.0, "avg_logprob": -0.28624060040428523, "compression_ratio": 1.4378109452736318, "no_speech_prob": 0.03619670122861862}, {"id": 22, "seek": 10420, "start": 118.16, "end": 125.72, "text": " Okay, most of you, and if you don't, like just grab it, it should take two seconds because it is pure Python, thankfully.", "tokens": [51062, 1033, 11, 881, 295, 291, 11, 293, 498, 291, 500, 380, 11, 411, 445, 4444, 309, 11, 309, 820, 747, 732, 3949, 570, 309, 307, 6075, 15329, 11, 27352, 13, 51440], "temperature": 0.0, "avg_logprob": -0.28624060040428523, "compression_ratio": 1.4378109452736318, "no_speech_prob": 0.03619670122861862}, {"id": 23, "seek": 10420, "start": 127.04, "end": 129.12, "text": " So you don't have to deal with like weird", "tokens": [51506, 407, 291, 500, 380, 362, 281, 2028, 365, 411, 3657, 51610], "temperature": 0.0, "avg_logprob": -0.28624060040428523, "compression_ratio": 1.4378109452736318, "no_speech_prob": 0.03619670122861862}, {"id": 24, "seek": 12912, "start": 130.04, "end": 136.16, "text": " Fortran rust extension interactions and stuff or read line read line. Oh, yeah, we don't have to deal with read line", "tokens": [50410, 11002, 4257, 15259, 10320, 13280, 293, 1507, 420, 1401, 1622, 1401, 1622, 13, 876, 11, 1338, 11, 321, 500, 380, 362, 281, 2028, 365, 1401, 1622, 50716], "temperature": 0.0, "avg_logprob": -0.36007982889811196, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.022959047928452492}, {"id": 25, "seek": 12912, "start": 136.56, "end": 138.56, "text": " Everyone's favorite library", "tokens": [50736, 5198, 311, 2954, 6405, 50836], "temperature": 0.0, "avg_logprob": -0.36007982889811196, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.022959047928452492}, {"id": 26, "seek": 12912, "start": 139.12, "end": 141.12, "text": " Three three chairs for read line", "tokens": [50864, 6244, 1045, 18299, 337, 1401, 1622, 50964], "temperature": 0.0, "avg_logprob": -0.36007982889811196, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.022959047928452492}, {"id": 27, "seek": 12912, "start": 141.52, "end": 147.36, "text": " No, no, no chairs. Okay. Wow. We got one tough crowd one one one one chair. Wow", "tokens": [50984, 883, 11, 572, 11, 572, 18299, 13, 1033, 13, 3153, 13, 492, 658, 472, 4930, 6919, 472, 472, 472, 472, 6090, 13, 3153, 51276], "temperature": 0.0, "avg_logprob": -0.36007982889811196, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.022959047928452492}, {"id": 28, "seek": 12912, "start": 148.44, "end": 150.44, "text": " Nice input RC. There you go", "tokens": [51330, 5490, 4846, 28987, 13, 821, 291, 352, 51430], "temperature": 0.0, "avg_logprob": -0.36007982889811196, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.022959047928452492}, {"id": 29, "seek": 12912, "start": 151.68, "end": 153.68, "text": " Thank you. I'll be here", "tokens": [51492, 1044, 291, 13, 286, 603, 312, 510, 51592], "temperature": 0.0, "avg_logprob": -0.36007982889811196, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.022959047928452492}, {"id": 30, "seek": 12912, "start": 153.68, "end": 155.68, "text": " What?", "tokens": [51592, 708, 30, 51692], "temperature": 0.0, "avg_logprob": -0.36007982889811196, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.022959047928452492}, {"id": 31, "seek": 15912, "start": 159.12, "end": 164.76, "text": " Alright, so oh, and we we should send out the link to the slides as well. So", "tokens": [50364, 2798, 11, 370, 1954, 11, 293, 321, 321, 820, 2845, 484, 264, 2113, 281, 264, 9788, 382, 731, 13, 407, 50646], "temperature": 0.0, "avg_logprob": -0.3567881376846977, "compression_ratio": 1.5301204819277108, "no_speech_prob": 0.0011506183072924614}, {"id": 32, "seek": 15912, "start": 167.04, "end": 169.04, "text": " Slides should be at", "tokens": [50760, 6187, 1875, 820, 312, 412, 50860], "temperature": 0.0, "avg_logprob": -0.3567881376846977, "compression_ratio": 1.5301204819277108, "no_speech_prob": 0.0011506183072924614}, {"id": 33, "seek": 15912, "start": 172.44, "end": 177.4, "text": " Conduct SH this is what's that repo called is it like conch?", "tokens": [51030, 21793, 11130, 7405, 341, 307, 437, 311, 300, 49040, 1219, 307, 309, 411, 416, 339, 30, 51278], "temperature": 0.0, "avg_logprob": -0.3567881376846977, "compression_ratio": 1.5301204819277108, "no_speech_prob": 0.0011506183072924614}, {"id": 34, "seek": 15912, "start": 182.44, "end": 187.16, "text": " While people are installing conch and for people just coming into the room, please install conch", "tokens": [51530, 3987, 561, 366, 20762, 416, 339, 293, 337, 561, 445, 1348, 666, 264, 1808, 11, 1767, 3625, 416, 339, 51766], "temperature": 0.0, "avg_logprob": -0.3567881376846977, "compression_ratio": 1.5301204819277108, "no_speech_prob": 0.0011506183072924614}, {"id": 35, "seek": 18912, "start": 189.16, "end": 193.88, "text": " I just want to sort of do a quick poll the room get a sense of who y'all are and why you're here", "tokens": [50366, 286, 445, 528, 281, 1333, 295, 360, 257, 1702, 6418, 264, 1808, 483, 257, 2020, 295, 567, 288, 6, 336, 366, 293, 983, 291, 434, 510, 50602], "temperature": 0.0, "avg_logprob": -0.3573342449260208, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.0013454544823616743}, {"id": 36, "seek": 18912, "start": 194.68, "end": 198.28, "text": " So who here uses bash on a regular basis?", "tokens": [50642, 407, 567, 510, 4960, 46183, 322, 257, 3890, 5143, 30, 50822], "temperature": 0.0, "avg_logprob": -0.3573342449260208, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.0013454544823616743}, {"id": 37, "seek": 18912, "start": 198.96, "end": 200.96, "text": " Okay, any Z shell users?", "tokens": [50856, 1033, 11, 604, 1176, 8720, 5022, 30, 50956], "temperature": 0.0, "avg_logprob": -0.3573342449260208, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.0013454544823616743}, {"id": 38, "seek": 18912, "start": 201.44, "end": 203.44, "text": " Okay, fish", "tokens": [50980, 1033, 11, 3506, 51080], "temperature": 0.0, "avg_logprob": -0.3573342449260208, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.0013454544823616743}, {"id": 39, "seek": 18912, "start": 203.56, "end": 209.36, "text": " One, okay. Yeah, one cheer for fish one cheer for real on to you. Okay, fish got two chairs. All right. Has anybody used conch already?", "tokens": [51086, 1485, 11, 1392, 13, 865, 11, 472, 12581, 337, 3506, 472, 12581, 337, 957, 322, 281, 291, 13, 1033, 11, 3506, 658, 732, 18299, 13, 1057, 558, 13, 8646, 4472, 1143, 416, 339, 1217, 30, 51376], "temperature": 0.0, "avg_logprob": -0.3573342449260208, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.0013454544823616743}, {"id": 40, "seek": 18912, "start": 210.32, "end": 212.32, "text": " All right", "tokens": [51424, 1057, 558, 51524], "temperature": 0.0, "avg_logprob": -0.3573342449260208, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.0013454544823616743}, {"id": 41, "seek": 18912, "start": 215.4, "end": 218.16, "text": " Okay, who here really likes bash?", "tokens": [51678, 1033, 11, 567, 510, 534, 5902, 46183, 30, 51816], "temperature": 0.0, "avg_logprob": -0.3573342449260208, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.0013454544823616743}, {"id": 42, "seek": 21912, "start": 220.12, "end": 223.12, "text": " That's okay. No, no, there's nothing to be ashamed about. There's an open question", "tokens": [50414, 663, 311, 1392, 13, 883, 11, 572, 11, 456, 311, 1825, 281, 312, 19489, 466, 13, 821, 311, 364, 1269, 1168, 50564], "temperature": 0.0, "avg_logprob": -0.26783344480726456, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.00020658709399867803}, {"id": 43, "seek": 21912, "start": 223.12, "end": 227.84, "text": " We're not we're not here to know who here remembers the syntax for a for loop and bash that looking at stack overflow", "tokens": [50564, 492, 434, 406, 321, 434, 406, 510, 281, 458, 567, 510, 26228, 264, 28431, 337, 257, 337, 6367, 293, 46183, 300, 1237, 412, 8630, 37772, 50800], "temperature": 0.0, "avg_logprob": -0.26783344480726456, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.00020658709399867803}, {"id": 44, "seek": 21912, "start": 228.56, "end": 231.08, "text": " Okay, no, no, some people can do that. That's totally cool", "tokens": [50836, 1033, 11, 572, 11, 572, 11, 512, 561, 393, 360, 300, 13, 663, 311, 3879, 1627, 50962], "temperature": 0.0, "avg_logprob": -0.26783344480726456, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.00020658709399867803}, {"id": 45, "seek": 21912, "start": 231.24, "end": 236.32, "text": " Who here remembers how to tokenize a non-whitespace string and bash without looking at stack overflow?", "tokens": [50970, 2102, 510, 26228, 577, 281, 14862, 1125, 257, 2107, 12, 1363, 3324, 17940, 6798, 293, 46183, 1553, 1237, 412, 8630, 37772, 30, 51224], "temperature": 0.0, "avg_logprob": -0.26783344480726456, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.00020658709399867803}, {"id": 46, "seek": 21912, "start": 237.20000000000002, "end": 241.0, "text": " Both so I'll believe you. I'm not gonna I'm not gonna you know, call you out there. That's good. Okay", "tokens": [51268, 6767, 370, 286, 603, 1697, 291, 13, 286, 478, 406, 799, 286, 478, 406, 799, 291, 458, 11, 818, 291, 484, 456, 13, 663, 311, 665, 13, 1033, 51458], "temperature": 0.0, "avg_logprob": -0.26783344480726456, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.00020658709399867803}, {"id": 47, "seek": 21912, "start": 242.88, "end": 248.20000000000002, "text": " So while we get the slides everybody, I mean one of the things conscious for many things", "tokens": [51552, 407, 1339, 321, 483, 264, 9788, 2201, 11, 286, 914, 472, 295, 264, 721, 6648, 337, 867, 721, 51818], "temperature": 0.0, "avg_logprob": -0.26783344480726456, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.00020658709399867803}, {"id": 48, "seek": 24820, "start": 248.95999999999998, "end": 252.6, "text": " Partially, it's the to suit our mad desires", "tokens": [50402, 4100, 2270, 11, 309, 311, 264, 281, 5722, 527, 5244, 18005, 50584], "temperature": 0.0, "avg_logprob": -0.20869805472237724, "compression_ratio": 1.6875, "no_speech_prob": 0.0015964120393618941}, {"id": 49, "seek": 24820, "start": 253.0, "end": 257.96, "text": " But also it was a lot of these things which seem like they should be simple and easy to remember aren't", "tokens": [50604, 583, 611, 309, 390, 257, 688, 295, 613, 721, 597, 1643, 411, 436, 820, 312, 2199, 293, 1858, 281, 1604, 3212, 380, 50852], "temperature": 0.0, "avg_logprob": -0.20869805472237724, "compression_ratio": 1.6875, "no_speech_prob": 0.0015964120393618941}, {"id": 50, "seek": 24820, "start": 258.4, "end": 262.0, "text": " and a lot of us are dealing on our daily workflows with", "tokens": [50874, 293, 257, 688, 295, 505, 366, 6260, 322, 527, 5212, 43461, 365, 51054], "temperature": 0.0, "avg_logprob": -0.20869805472237724, "compression_ratio": 1.6875, "no_speech_prob": 0.0015964120393618941}, {"id": 51, "seek": 24820, "start": 263.4, "end": 265.8, "text": " Language decisions from the 70s which made a lot of sense", "tokens": [51124, 24445, 5327, 490, 264, 5285, 82, 597, 1027, 257, 688, 295, 2020, 51244], "temperature": 0.0, "avg_logprob": -0.20869805472237724, "compression_ratio": 1.6875, "no_speech_prob": 0.0015964120393618941}, {"id": 52, "seek": 24820, "start": 265.8, "end": 272.76, "text": " But maybe we don't like want there to be a difference between single and double quotes all the time or like maybe we don't want to have that many square brackets in a row", "tokens": [51244, 583, 1310, 321, 500, 380, 411, 528, 456, 281, 312, 257, 2649, 1296, 2167, 293, 3834, 19963, 439, 264, 565, 420, 411, 1310, 321, 500, 380, 528, 281, 362, 300, 867, 3732, 26179, 294, 257, 5386, 51592], "temperature": 0.0, "avg_logprob": -0.20869805472237724, "compression_ratio": 1.6875, "no_speech_prob": 0.0015964120393618941}, {"id": 53, "seek": 27276, "start": 273.56, "end": 278.96, "text": " And so this is an effort to remove that pain because this should be a relatively", "tokens": [50404, 400, 370, 341, 307, 364, 4630, 281, 4159, 300, 1822, 570, 341, 820, 312, 257, 7226, 50674], "temperature": 0.0, "avg_logprob": -0.2568835425622684, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.0017540054395794868}, {"id": 54, "seek": 27276, "start": 279.56, "end": 284.76, "text": " Seamless and sort of fun interaction and you should just be able to do the things you want to do without struggling through it", "tokens": [50704, 1100, 335, 1832, 293, 1333, 295, 1019, 9285, 293, 291, 820, 445, 312, 1075, 281, 360, 264, 721, 291, 528, 281, 360, 1553, 9314, 807, 309, 50964], "temperature": 0.0, "avg_logprob": -0.2568835425622684, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.0017540054395794868}, {"id": 55, "seek": 27276, "start": 286.56, "end": 290.59999999999997, "text": " I think we probably can I don't have the slide link okay", "tokens": [51054, 286, 519, 321, 1391, 393, 286, 500, 380, 362, 264, 4137, 2113, 1392, 51256], "temperature": 0.0, "avg_logprob": -0.2568835425622684, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.0017540054395794868}, {"id": 56, "seek": 27276, "start": 291.59999999999997, "end": 295.52, "text": " Are people and mostly installed and ready to go have contra running", "tokens": [51306, 2014, 561, 293, 5240, 8899, 293, 1919, 281, 352, 362, 10742, 2614, 51502], "temperature": 0.0, "avg_logprob": -0.2568835425622684, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.0017540054395794868}, {"id": 57, "seek": 27276, "start": 296.88, "end": 300.76, "text": " Cool, is anybody not have contra and that would be I guess the question to ask okay", "tokens": [51570, 8561, 11, 307, 4472, 406, 362, 10742, 293, 300, 576, 312, 286, 2041, 264, 1168, 281, 1029, 1392, 51764], "temperature": 0.0, "avg_logprob": -0.2568835425622684, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.0017540054395794868}, {"id": 58, "seek": 30076, "start": 301.24, "end": 306.0, "text": " We're still going to be talking for just a bit so and we can we can catch up as we go", "tokens": [50388, 492, 434, 920, 516, 281, 312, 1417, 337, 445, 257, 857, 370, 293, 321, 393, 321, 393, 3745, 493, 382, 321, 352, 50626], "temperature": 0.0, "avg_logprob": -0.2687059466758471, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.0009395098313689232}, {"id": 59, "seek": 30076, "start": 308.76, "end": 310.76, "text": " Okay", "tokens": [50764, 1033, 50864], "temperature": 0.0, "avg_logprob": -0.2687059466758471, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.0009395098313689232}, {"id": 60, "seek": 30076, "start": 311.52, "end": 313.52, "text": " Also just a quick tante check if you can run", "tokens": [50902, 2743, 445, 257, 1702, 256, 2879, 1520, 498, 291, 393, 1190, 51002], "temperature": 0.0, "avg_logprob": -0.2687059466758471, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.0009395098313689232}, {"id": 61, "seek": 30076, "start": 315.15999999999997, "end": 319.96, "text": " Every time we say like the sound like co or something it's always gonna start with an X just a fair warning", "tokens": [51084, 2048, 565, 321, 584, 411, 264, 1626, 411, 598, 420, 746, 309, 311, 1009, 799, 722, 365, 364, 1783, 445, 257, 3143, 9164, 51324], "temperature": 0.0, "avg_logprob": -0.2687059466758471, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.0009395098313689232}, {"id": 62, "seek": 30076, "start": 320.36, "end": 325.92, "text": " So if you can run config, it's x o n f i g in your conch shell", "tokens": [51344, 407, 498, 291, 393, 1190, 6662, 11, 309, 311, 2031, 277, 297, 283, 741, 290, 294, 428, 416, 339, 8720, 51622], "temperature": 0.0, "avg_logprob": -0.2687059466758471, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.0009395098313689232}, {"id": 63, "seek": 32592, "start": 326.12, "end": 329.36, "text": " That should probably not say what it says here", "tokens": [50374, 663, 820, 1391, 406, 584, 437, 309, 1619, 510, 50536], "temperature": 0.0, "avg_logprob": -0.22484496787742334, "compression_ratio": 1.592039800995025, "no_speech_prob": 0.0037062738556414843}, {"id": 64, "seek": 32592, "start": 329.36, "end": 334.12, "text": " Maybe should say zero point nine point eight at the top just so we were sure we're on roughly speaking the right versions", "tokens": [50536, 2704, 820, 584, 4018, 935, 4949, 935, 3180, 412, 264, 1192, 445, 370, 321, 645, 988, 321, 434, 322, 9810, 4124, 264, 558, 9606, 50774], "temperature": 0.0, "avg_logprob": -0.22484496787742334, "compression_ratio": 1.592039800995025, "no_speech_prob": 0.0037062738556414843}, {"id": 65, "seek": 32592, "start": 335.96000000000004, "end": 341.84000000000003, "text": " I do have the link, but I don't know a good way to get it to you guys other than I'll just put it here", "tokens": [50866, 286, 360, 362, 264, 2113, 11, 457, 286, 500, 380, 458, 257, 665, 636, 281, 483, 309, 281, 291, 1074, 661, 813, 286, 603, 445, 829, 309, 510, 51160], "temperature": 0.0, "avg_logprob": -0.22484496787742334, "compression_ratio": 1.592039800995025, "no_speech_prob": 0.0037062738556414843}, {"id": 66, "seek": 32592, "start": 341.84000000000003, "end": 345.16, "text": " So if you want to follow along with the tutorial", "tokens": [51160, 407, 498, 291, 528, 281, 1524, 2051, 365, 264, 7073, 51326], "temperature": 0.0, "avg_logprob": -0.22484496787742334, "compression_ratio": 1.592039800995025, "no_speech_prob": 0.0037062738556414843}, {"id": 67, "seek": 34516, "start": 346.04, "end": 348.04, "text": " You", "tokens": [50408, 509, 50508], "temperature": 0.0, "avg_logprob": -0.3062752498669571, "compression_ratio": 1.3694581280788178, "no_speech_prob": 0.024779804050922394}, {"id": 68, "seek": 34516, "start": 349.92, "end": 353.64000000000004, "text": " Can go to this link so it's conch.github.io", "tokens": [50602, 1664, 352, 281, 341, 2113, 370, 309, 311, 416, 339, 13, 70, 355, 836, 13, 1004, 50788], "temperature": 0.0, "avg_logprob": -0.3062752498669571, "compression_ratio": 1.3694581280788178, "no_speech_prob": 0.024779804050922394}, {"id": 69, "seek": 34516, "start": 354.44, "end": 356.44, "text": " sci-pi-2019-tutorial", "tokens": [50828, 2180, 12, 22630, 12, 30620, 12, 83, 325, 5181, 50928], "temperature": 0.0, "avg_logprob": -0.3062752498669571, "compression_ratio": 1.3694581280788178, "no_speech_prob": 0.024779804050922394}, {"id": 70, "seek": 34516, "start": 357.16, "end": 360.8, "text": " Slash remote HTML. We're sorry about the URL. Yeah", "tokens": [50964, 6187, 1299, 8607, 17995, 13, 492, 434, 2597, 466, 264, 12905, 13, 865, 51146], "temperature": 0.0, "avg_logprob": -0.3062752498669571, "compression_ratio": 1.3694581280788178, "no_speech_prob": 0.024779804050922394}, {"id": 71, "seek": 34516, "start": 362.56, "end": 364.56, "text": " Only a little sorry", "tokens": [51234, 5686, 257, 707, 2597, 51334], "temperature": 0.0, "avg_logprob": -0.3062752498669571, "compression_ratio": 1.3694581280788178, "no_speech_prob": 0.024779804050922394}, {"id": 72, "seek": 34516, "start": 366.24, "end": 371.04, "text": " But yeah, you can click along and follow so you can skip ahead in the slides or go back", "tokens": [51418, 583, 1338, 11, 291, 393, 2052, 2051, 293, 1524, 370, 291, 393, 10023, 2286, 294, 264, 9788, 420, 352, 646, 51658], "temperature": 0.0, "avg_logprob": -0.3062752498669571, "compression_ratio": 1.3694581280788178, "no_speech_prob": 0.024779804050922394}, {"id": 73, "seek": 34516, "start": 371.04, "end": 373.52000000000004, "text": " There's some exercises and things like that and so", "tokens": [51658, 821, 311, 512, 11900, 293, 721, 411, 300, 293, 370, 51782], "temperature": 0.0, "avg_logprob": -0.3062752498669571, "compression_ratio": 1.3694581280788178, "no_speech_prob": 0.024779804050922394}, {"id": 74, "seek": 37352, "start": 374.28, "end": 376.28, "text": " Bring that up now", "tokens": [50402, 12842, 300, 493, 586, 50502], "temperature": 0.0, "avg_logprob": -0.3004116804703422, "compression_ratio": 0.9846153846153847, "no_speech_prob": 0.018782667815685272}, {"id": 75, "seek": 37352, "start": 378.64, "end": 382.0, "text": " Okay, I'll let you guys do that and then we'll", "tokens": [50620, 1033, 11, 286, 603, 718, 291, 1074, 360, 300, 293, 550, 321, 603, 50788], "temperature": 0.0, "avg_logprob": -0.3004116804703422, "compression_ratio": 0.9846153846153847, "no_speech_prob": 0.018782667815685272}, {"id": 76, "seek": 38200, "start": 382.0, "end": 384.0, "text": " Do", "tokens": [50364, 1144, 50464], "temperature": 0.0, "avg_logprob": -0.6227369762602306, "compression_ratio": 0.9387755102040817, "no_speech_prob": 0.03455115854740143}, {"id": 77, "seek": 38200, "start": 402.0, "end": 404.52, "text": " Okay, that seems good. Yeah, great", "tokens": [51364, 1033, 11, 300, 2544, 665, 13, 865, 11, 869, 51490], "temperature": 0.0, "avg_logprob": -0.6227369762602306, "compression_ratio": 0.9387755102040817, "no_speech_prob": 0.03455115854740143}, {"id": 78, "seek": 38200, "start": 405.8, "end": 407.2, "text": " Okay, so", "tokens": [51554, 1033, 11, 370, 51624], "temperature": 0.0, "avg_logprob": -0.6227369762602306, "compression_ratio": 0.9387755102040817, "no_speech_prob": 0.03455115854740143}, {"id": 79, "seek": 40720, "start": 407.2, "end": 410.44, "text": " Quickly just like an overview of just some things that you'll see us doing a lot", "tokens": [50364, 31800, 445, 411, 364, 12492, 295, 445, 512, 721, 300, 291, 603, 536, 505, 884, 257, 688, 50526], "temperature": 0.0, "avg_logprob": -0.14904027868200231, "compression_ratio": 1.7202380952380953, "no_speech_prob": 0.015890156850218773}, {"id": 80, "seek": 40720, "start": 410.44, "end": 413.52, "text": " And you should also feel free to do while you're interacting with the shell", "tokens": [50526, 400, 291, 820, 611, 841, 1737, 281, 360, 1339, 291, 434, 18017, 365, 264, 8720, 50680], "temperature": 0.0, "avg_logprob": -0.14904027868200231, "compression_ratio": 1.7202380952380953, "no_speech_prob": 0.015890156850218773}, {"id": 81, "seek": 40720, "start": 413.92, "end": 417.8, "text": " We don't have explicit slides about this because they're just sort of general overall", "tokens": [50700, 492, 500, 380, 362, 13691, 9788, 466, 341, 570, 436, 434, 445, 1333, 295, 2674, 4787, 50894], "temperature": 0.0, "avg_logprob": -0.14904027868200231, "compression_ratio": 1.7202380952380953, "no_speech_prob": 0.015890156850218773}, {"id": 82, "seek": 40720, "start": 418.03999999999996, "end": 420.59999999999997, "text": " Like things you can do in a shell or in conch anyway", "tokens": [50906, 1743, 721, 291, 393, 360, 294, 257, 8720, 420, 294, 416, 339, 4033, 51034], "temperature": 0.0, "avg_logprob": -0.14904027868200231, "compression_ratio": 1.7202380952380953, "no_speech_prob": 0.015890156850218773}, {"id": 83, "seek": 40720, "start": 420.96, "end": 426.24, "text": " But if you see us do something like we obviously hit one key and something happens and you want to know what just happened", "tokens": [51052, 583, 498, 291, 536, 505, 360, 746, 411, 321, 2745, 2045, 472, 2141, 293, 746, 2314, 293, 291, 528, 281, 458, 437, 445, 2011, 51316], "temperature": 0.0, "avg_logprob": -0.14904027868200231, "compression_ratio": 1.7202380952380953, "no_speech_prob": 0.015890156850218773}, {"id": 84, "seek": 40720, "start": 426.24, "end": 431.03999999999996, "text": " Please just ask us if it if it seemed like it came out of nowhere or we're not trying to make this opaque", "tokens": [51316, 2555, 445, 1029, 505, 498, 309, 498, 309, 6576, 411, 309, 1361, 484, 295, 11159, 420, 321, 434, 406, 1382, 281, 652, 341, 42687, 51556], "temperature": 0.0, "avg_logprob": -0.14904027868200231, "compression_ratio": 1.7202380952380953, "no_speech_prob": 0.015890156850218773}, {"id": 85, "seek": 40720, "start": 432.68, "end": 435.48, "text": " So generally speaking there's tab completion. Oh, yes", "tokens": [51638, 407, 5101, 4124, 456, 311, 4421, 19372, 13, 876, 11, 2086, 51778], "temperature": 0.0, "avg_logprob": -0.14904027868200231, "compression_ratio": 1.7202380952380953, "no_speech_prob": 0.015890156850218773}, {"id": 86, "seek": 43720, "start": 438.2, "end": 443.52, "text": " Oh from the there's an there's an L right at the end. Yeah, so it wrapped a little", "tokens": [50414, 876, 490, 264, 456, 311, 364, 456, 311, 364, 441, 558, 412, 264, 917, 13, 865, 11, 370, 309, 14226, 257, 707, 50680], "temperature": 0.0, "avg_logprob": -0.29223516798510996, "compression_ratio": 1.5427350427350428, "no_speech_prob": 0.00041079067159444094}, {"id": 87, "seek": 43720, "start": 445.68, "end": 450.8, "text": " Yeah, I was getting well the directory doesn't have an index.html I can fix that in a moment, but", "tokens": [50788, 865, 11, 286, 390, 1242, 731, 264, 21120, 1177, 380, 362, 364, 8186, 13, 357, 15480, 286, 393, 3191, 300, 294, 257, 1623, 11, 457, 51044], "temperature": 0.0, "avg_logprob": -0.29223516798510996, "compression_ratio": 1.5427350427350428, "no_speech_prob": 0.00041079067159444094}, {"id": 88, "seek": 43720, "start": 452.59999999999997, "end": 454.59999999999997, "text": " Yeah", "tokens": [51134, 865, 51234], "temperature": 0.0, "avg_logprob": -0.29223516798510996, "compression_ratio": 1.5427350427350428, "no_speech_prob": 0.00041079067159444094}, {"id": 89, "seek": 43720, "start": 455.2, "end": 459.59999999999997, "text": " Generally speaking this tab completion for almost everything so it'll save you time when you're typing", "tokens": [51264, 21082, 4124, 341, 4421, 19372, 337, 1920, 1203, 370, 309, 603, 3155, 291, 565, 562, 291, 434, 18444, 51484], "temperature": 0.0, "avg_logprob": -0.29223516798510996, "compression_ratio": 1.5427350427350428, "no_speech_prob": 0.00041079067159444094}, {"id": 90, "seek": 43720, "start": 460.71999999999997, "end": 462.24, "text": " Beware of that", "tokens": [51540, 879, 3039, 295, 300, 51616], "temperature": 0.0, "avg_logprob": -0.29223516798510996, "compression_ratio": 1.5427350427350428, "no_speech_prob": 0.00041079067159444094}, {"id": 91, "seek": 43720, "start": 462.24, "end": 465.28, "text": " Does anyone not know what tab completion is? No, no shame", "tokens": [51616, 4402, 2878, 406, 458, 437, 4421, 19372, 307, 30, 883, 11, 572, 10069, 51768], "temperature": 0.0, "avg_logprob": -0.29223516798510996, "compression_ratio": 1.5427350427350428, "no_speech_prob": 0.00041079067159444094}, {"id": 92, "seek": 46528, "start": 466.2, "end": 468.2, "text": " All right great", "tokens": [50410, 1057, 558, 869, 50510], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 93, "seek": 46528, "start": 468.79999999999995, "end": 470.96, "text": " This will mean less for you at the beginning of the tutorial", "tokens": [50540, 639, 486, 914, 1570, 337, 291, 412, 264, 2863, 295, 264, 7073, 50648], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 94, "seek": 46528, "start": 470.96, "end": 472.64, "text": " There's a lot of history search functionality", "tokens": [50648, 821, 311, 257, 688, 295, 2503, 3164, 14980, 50732], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 95, "seek": 46528, "start": 472.64, "end": 475.03999999999996, "text": " You probably don't have much of a conch history at the moment", "tokens": [50732, 509, 1391, 500, 380, 362, 709, 295, 257, 416, 339, 2503, 412, 264, 1623, 50852], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 96, "seek": 46528, "start": 475.03999999999996, "end": 478.23999999999995, "text": " So that won't mean that much but there are several ways to search up", "tokens": [50852, 407, 300, 1582, 380, 914, 300, 709, 457, 456, 366, 2940, 2098, 281, 3164, 493, 51012], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 97, "seek": 46528, "start": 478.67999999999995, "end": 483.84, "text": " We'll kind of touch on those a little bit later control R as your friend that will kind of give you an anywhere", "tokens": [51034, 492, 603, 733, 295, 2557, 322, 729, 257, 707, 857, 1780, 1969, 497, 382, 428, 1277, 300, 486, 733, 295, 976, 291, 364, 4992, 51292], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 98, "seek": 46528, "start": 484.2, "end": 487.47999999999996, "text": " Line search back in your history if you start typing a command", "tokens": [51310, 14670, 3164, 646, 294, 428, 2503, 498, 291, 722, 18444, 257, 5622, 51474], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 99, "seek": 46528, "start": 487.47999999999996, "end": 490.35999999999996, "text": " You can press up and it will do a prefix search match", "tokens": [51474, 509, 393, 1886, 493, 293, 309, 486, 360, 257, 46969, 3164, 2995, 51618], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 100, "seek": 46528, "start": 490.35999999999996, "end": 494.94, "text": " So like anything that's any line that started with that initial bit will show up in the results as you arrow up", "tokens": [51618, 407, 411, 1340, 300, 311, 604, 1622, 300, 1409, 365, 300, 5883, 857, 486, 855, 493, 294, 264, 3542, 382, 291, 11610, 493, 51847], "temperature": 0.0, "avg_logprob": -0.1569348993435712, "compression_ratio": 1.8276923076923077, "no_speech_prob": 0.00037394854007288814}, {"id": 101, "seek": 49528, "start": 495.47999999999996, "end": 500.59999999999997, "text": " And you'll see this sort of ghost text showing up if you're typing the same command this sort of a", "tokens": [50374, 400, 291, 603, 536, 341, 1333, 295, 8359, 2487, 4099, 493, 498, 291, 434, 18444, 264, 912, 5622, 341, 1333, 295, 257, 50630], "temperature": 0.0, "avg_logprob": -0.2423882082284215, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.0001608666789252311}, {"id": 102, "seek": 49528, "start": 501.2, "end": 507.88, "text": " History match autocomplete thing and you can just hit right arrow or I think control E to sort of expand out to that if you want", "tokens": [50660, 12486, 2995, 45833, 298, 17220, 551, 293, 291, 393, 445, 2045, 558, 11610, 420, 286, 519, 1969, 462, 281, 1333, 295, 5268, 484, 281, 300, 498, 291, 528, 50994], "temperature": 0.0, "avg_logprob": -0.2423882082284215, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.0001608666789252311}, {"id": 103, "seek": 49528, "start": 508.32, "end": 512.12, "text": " Don't worry about like taking all that in at once, but we'll come back to it", "tokens": [51016, 1468, 380, 3292, 466, 411, 1940, 439, 300, 294, 412, 1564, 11, 457, 321, 603, 808, 646, 281, 309, 51206], "temperature": 0.0, "avg_logprob": -0.2423882082284215, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.0001608666789252311}, {"id": 104, "seek": 49528, "start": 517.3199999999999, "end": 519.88, "text": " Yes for all the", "tokens": [51466, 1079, 337, 439, 264, 51594], "temperature": 0.0, "avg_logprob": -0.2423882082284215, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.0001608666789252311}, {"id": 105, "seek": 51988, "start": 520.72, "end": 523.4399999999999, "text": " Pythonic bits in conch and we'll find out what those are a little bit later", "tokens": [50406, 9953, 392, 11630, 9239, 294, 416, 339, 293, 321, 603, 915, 484, 437, 729, 366, 257, 707, 857, 1780, 50542], "temperature": 0.0, "avg_logprob": -0.2567278190895363, "compression_ratio": 1.60546875, "no_speech_prob": 0.022948872298002243}, {"id": 106, "seek": 51988, "start": 523.68, "end": 529.24, "text": " You can always append a question mark to a command and it will bring up a little help screen in the pager", "tokens": [50554, 509, 393, 1009, 34116, 257, 1168, 1491, 281, 257, 5622, 293, 309, 486, 1565, 493, 257, 707, 854, 2568, 294, 264, 280, 3557, 50832], "temperature": 0.0, "avg_logprob": -0.2567278190895363, "compression_ratio": 1.60546875, "no_speech_prob": 0.022948872298002243}, {"id": 107, "seek": 51988, "start": 529.24, "end": 533.92, "text": " Or you can do a double question mark for super help for even more if you've used ipython", "tokens": [50832, 1610, 291, 393, 360, 257, 3834, 1168, 1491, 337, 1687, 854, 337, 754, 544, 498, 291, 600, 1143, 28501, 88, 11943, 51066], "temperature": 0.0, "avg_logprob": -0.2567278190895363, "compression_ratio": 1.60546875, "no_speech_prob": 0.022948872298002243}, {"id": 108, "seek": 51988, "start": 534.56, "end": 537.84, "text": " Fair bit. This will maybe be a familiar pattern. Yes", "tokens": [51098, 12157, 857, 13, 639, 486, 1310, 312, 257, 4963, 5102, 13, 1079, 51262], "temperature": 0.0, "avg_logprob": -0.2567278190895363, "compression_ratio": 1.60546875, "no_speech_prob": 0.022948872298002243}, {"id": 109, "seek": 51988, "start": 541.52, "end": 547.8, "text": " I don't think there is one it's a UT guess and should just be an open wide open network", "tokens": [51446, 286, 500, 380, 519, 456, 307, 472, 309, 311, 257, 35514, 2041, 293, 820, 445, 312, 364, 1269, 4874, 1269, 3209, 51760], "temperature": 0.0, "avg_logprob": -0.2567278190895363, "compression_ratio": 1.60546875, "no_speech_prob": 0.022948872298002243}, {"id": 110, "seek": 54780, "start": 548.4, "end": 550.68, "text": " Yeah, is there another question over here?", "tokens": [50394, 865, 11, 307, 456, 1071, 1168, 670, 510, 30, 50508], "temperature": 0.0, "avg_logprob": -0.5849156951904297, "compression_ratio": 1.051948051948052, "no_speech_prob": 0.008056032471358776}, {"id": 111, "seek": 54780, "start": 555.7199999999999, "end": 558.24, "text": " I think we did discover that yeah", "tokens": [50760, 286, 519, 321, 630, 4411, 300, 1338, 50886], "temperature": 0.0, "avg_logprob": -0.5849156951904297, "compression_ratio": 1.051948051948052, "no_speech_prob": 0.008056032471358776}, {"id": 112, "seek": 54780, "start": 572.16, "end": 574.16, "text": " Okay", "tokens": [51582, 1033, 51682], "temperature": 0.0, "avg_logprob": -0.5849156951904297, "compression_ratio": 1.051948051948052, "no_speech_prob": 0.008056032471358776}, {"id": 113, "seek": 57416, "start": 574.8, "end": 580.92, "text": " Yeah, okay, not gonna do that live we are gonna ask everyone about questions about that during the break so we can fix something", "tokens": [50396, 865, 11, 1392, 11, 406, 799, 360, 300, 1621, 321, 366, 799, 1029, 1518, 466, 1651, 466, 300, 1830, 264, 1821, 370, 321, 393, 3191, 746, 50702], "temperature": 0.0, "avg_logprob": -0.31015625978127503, "compression_ratio": 1.6010928961748634, "no_speech_prob": 0.0008038025116547942}, {"id": 114, "seek": 57416, "start": 580.92, "end": 583.64, "text": " That wasn't working and that would be but that's good news awesome", "tokens": [50702, 663, 2067, 380, 1364, 293, 300, 576, 312, 457, 300, 311, 665, 2583, 3476, 50838], "temperature": 0.0, "avg_logprob": -0.31015625978127503, "compression_ratio": 1.6010928961748634, "no_speech_prob": 0.0008038025116547942}, {"id": 115, "seek": 57416, "start": 585.0799999999999, "end": 588.0, "text": " Okay, are there any questions?", "tokens": [50910, 1033, 11, 366, 456, 604, 1651, 30, 51056], "temperature": 0.0, "avg_logprob": -0.31015625978127503, "compression_ratio": 1.6010928961748634, "no_speech_prob": 0.0008038025116547942}, {"id": 116, "seek": 57416, "start": 590.0799999999999, "end": 592.0799999999999, "text": " Okay", "tokens": [51160, 1033, 51260], "temperature": 0.0, "avg_logprob": -0.31015625978127503, "compression_ratio": 1.6010928961748634, "no_speech_prob": 0.0008038025116547942}, {"id": 117, "seek": 57416, "start": 593.48, "end": 594.8399999999999, "text": " All right", "tokens": [51330, 1057, 558, 51398], "temperature": 0.0, "avg_logprob": -0.31015625978127503, "compression_ratio": 1.6010928961748634, "no_speech_prob": 0.0008038025116547942}, {"id": 118, "seek": 57416, "start": 594.8399999999999, "end": 598.24, "text": " So yeah, there's was that a question. No, all right", "tokens": [51398, 407, 1338, 11, 456, 311, 390, 300, 257, 1168, 13, 883, 11, 439, 558, 51568], "temperature": 0.0, "avg_logprob": -0.31015625978127503, "compression_ratio": 1.6010928961748634, "no_speech_prob": 0.0008038025116547942}, {"id": 119, "seek": 59824, "start": 598.24, "end": 603.76, "text": " So everyone has conch working that can if you ran the sorry the config", "tokens": [50364, 407, 1518, 575, 416, 339, 1364, 300, 393, 498, 291, 5872, 264, 2597, 264, 6662, 50640], "temperature": 0.0, "avg_logprob": -0.2705790456136068, "compression_ratio": 1.5139664804469273, "no_speech_prob": 0.0007094700122252107}, {"id": 120, "seek": 59824, "start": 604.6800000000001, "end": 606.6800000000001, "text": " Let me just go into the", "tokens": [50686, 961, 385, 445, 352, 666, 264, 50786], "temperature": 0.0, "avg_logprob": -0.2705790456136068, "compression_ratio": 1.5139664804469273, "no_speech_prob": 0.0007094700122252107}, {"id": 121, "seek": 59824, "start": 612.08, "end": 616.44, "text": " Okay, so you should have been able to run the config command and see some output like this", "tokens": [51056, 1033, 11, 370, 291, 820, 362, 668, 1075, 281, 1190, 264, 6662, 5622, 293, 536, 512, 5598, 411, 341, 51274], "temperature": 0.0, "avg_logprob": -0.2705790456136068, "compression_ratio": 1.5139664804469273, "no_speech_prob": 0.0007094700122252107}, {"id": 122, "seek": 59824, "start": 616.48, "end": 619.8, "text": " So if is everyone kind of at that stage?", "tokens": [51276, 407, 498, 307, 1518, 733, 295, 412, 300, 3233, 30, 51442], "temperature": 0.0, "avg_logprob": -0.2705790456136068, "compression_ratio": 1.5139664804469273, "no_speech_prob": 0.0007094700122252107}, {"id": 123, "seek": 59824, "start": 622.6, "end": 625.44, "text": " The cut oh, yeah, it's it's config with an X", "tokens": [51582, 440, 1723, 1954, 11, 1338, 11, 309, 311, 309, 311, 6662, 365, 364, 1783, 51724], "temperature": 0.0, "avg_logprob": -0.2705790456136068, "compression_ratio": 1.5139664804469273, "no_speech_prob": 0.0007094700122252107}, {"id": 124, "seek": 62824, "start": 628.76, "end": 632.08, "text": " You're gonna love that X key in the next four hours. All right", "tokens": [50390, 509, 434, 799, 959, 300, 1783, 2141, 294, 264, 958, 1451, 2496, 13, 1057, 558, 50556], "temperature": 0.0, "avg_logprob": -0.256087932946547, "compression_ratio": 1.6023166023166022, "no_speech_prob": 0.0005974993691779673}, {"id": 125, "seek": 62824, "start": 632.92, "end": 635.12, "text": " Okay, so we've got our agenda here", "tokens": [50598, 1033, 11, 370, 321, 600, 658, 527, 9829, 510, 50708], "temperature": 0.0, "avg_logprob": -0.256087932946547, "compression_ratio": 1.6023166023166022, "no_speech_prob": 0.0005974993691779673}, {"id": 126, "seek": 62824, "start": 635.12, "end": 640.2, "text": " We'll be taking some breaks in between these things and we're gonna be building up to sort of greater and greater capability", "tokens": [50708, 492, 603, 312, 1940, 512, 9857, 294, 1296, 613, 721, 293, 321, 434, 799, 312, 2390, 493, 281, 1333, 295, 5044, 293, 5044, 13759, 50962], "temperature": 0.0, "avg_logprob": -0.256087932946547, "compression_ratio": 1.6023166023166022, "no_speech_prob": 0.0005974993691779673}, {"id": 127, "seek": 62824, "start": 640.88, "end": 646.0, "text": " Over the time. These are links. So if you have the slides up you can jump around if you want to", "tokens": [50996, 4886, 264, 565, 13, 1981, 366, 6123, 13, 407, 498, 291, 362, 264, 9788, 493, 291, 393, 3012, 926, 498, 291, 528, 281, 51252], "temperature": 0.0, "avg_logprob": -0.256087932946547, "compression_ratio": 1.6023166023166022, "no_speech_prob": 0.0005974993691779673}, {"id": 128, "seek": 62824, "start": 646.96, "end": 650.32, "text": " And there are exercises at the end of each little section. So", "tokens": [51300, 400, 456, 366, 11900, 412, 264, 917, 295, 1184, 707, 3541, 13, 407, 51468], "temperature": 0.0, "avg_logprob": -0.256087932946547, "compression_ratio": 1.6023166023166022, "no_speech_prob": 0.0005974993691779673}, {"id": 129, "seek": 62824, "start": 651.88, "end": 654.76, "text": " That's a gonna do the shuffle here", "tokens": [51546, 663, 311, 257, 799, 360, 264, 39426, 510, 51690], "temperature": 0.0, "avg_logprob": -0.256087932946547, "compression_ratio": 1.6023166023166022, "no_speech_prob": 0.0005974993691779673}, {"id": 130, "seek": 65476, "start": 654.88, "end": 656.88, "text": " So", "tokens": [50370, 407, 50470], "temperature": 0.0, "avg_logprob": -0.23868722182053786, "compression_ratio": 1.6798029556650247, "no_speech_prob": 0.0013881823979318142}, {"id": 131, "seek": 65476, "start": 659.16, "end": 666.52, "text": " Conch is a superset of Python 3 so what that means is that all of the syntax that's in", "tokens": [50584, 2656, 339, 307, 257, 37906, 302, 295, 15329, 805, 370, 437, 300, 1355, 307, 300, 439, 295, 264, 28431, 300, 311, 294, 50952], "temperature": 0.0, "avg_logprob": -0.23868722182053786, "compression_ratio": 1.6798029556650247, "no_speech_prob": 0.0013881823979318142}, {"id": 132, "seek": 65476, "start": 666.68, "end": 669.3199999999999, "text": " Python is also valid conch, right?", "tokens": [50960, 15329, 307, 611, 7363, 416, 339, 11, 558, 30, 51092], "temperature": 0.0, "avg_logprob": -0.23868722182053786, "compression_ratio": 1.6798029556650247, "no_speech_prob": 0.0013881823979318142}, {"id": 133, "seek": 65476, "start": 669.3199999999999, "end": 671.3199999999999, "text": " So there's no so if you know Python", "tokens": [51092, 407, 456, 311, 572, 370, 498, 291, 458, 15329, 51192], "temperature": 0.0, "avg_logprob": -0.23868722182053786, "compression_ratio": 1.6798029556650247, "no_speech_prob": 0.0013881823979318142}, {"id": 134, "seek": 65476, "start": 672.0, "end": 676.3199999999999, "text": " Pretty well or really well or extremely well everything should be familiar to you", "tokens": [51226, 10693, 731, 420, 534, 731, 420, 4664, 731, 1203, 820, 312, 4963, 281, 291, 51442], "temperature": 0.0, "avg_logprob": -0.23868722182053786, "compression_ratio": 1.6798029556650247, "no_speech_prob": 0.0013881823979318142}, {"id": 135, "seek": 65476, "start": 677.56, "end": 681.4399999999999, "text": " And so you can do a bunch like basically everything that you would be able to do in Python, right?", "tokens": [51504, 400, 370, 291, 393, 360, 257, 3840, 411, 1936, 1203, 300, 291, 576, 312, 1075, 281, 360, 294, 15329, 11, 558, 30, 51698], "temperature": 0.0, "avg_logprob": -0.23868722182053786, "compression_ratio": 1.6798029556650247, "no_speech_prob": 0.0013881823979318142}, {"id": 136, "seek": 68144, "start": 681.48, "end": 685.0400000000001, "text": " Like to find classes functions modules etc", "tokens": [50366, 1743, 281, 915, 5359, 6828, 16679, 5183, 50544], "temperature": 0.0, "avg_logprob": -0.24262258741590711, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009107724763453007}, {"id": 137, "seek": 68144, "start": 686.2, "end": 692.1600000000001, "text": " So we can go ahead and you know do these along with us like you know when they come up", "tokens": [50602, 407, 321, 393, 352, 2286, 293, 291, 458, 360, 613, 2051, 365, 505, 411, 291, 458, 562, 436, 808, 493, 50900], "temperature": 0.0, "avg_logprob": -0.24262258741590711, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009107724763453007}, {"id": 138, "seek": 68144, "start": 692.1600000000001, "end": 698.32, "text": " So let's try some in the mount. Oh, these are our first exercises actually. So the the first one is to", "tokens": [50900, 407, 718, 311, 853, 512, 294, 264, 3746, 13, 876, 11, 613, 366, 527, 700, 11900, 767, 13, 407, 264, 264, 700, 472, 307, 281, 51208], "temperature": 0.0, "avg_logprob": -0.24262258741590711, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009107724763453007}, {"id": 139, "seek": 68144, "start": 698.72, "end": 700.72, "text": " compute the product of", "tokens": [51228, 14722, 264, 1674, 295, 51328], "temperature": 0.0, "avg_logprob": -0.24262258741590711, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009107724763453007}, {"id": 140, "seek": 68144, "start": 700.8800000000001, "end": 702.6400000000001, "text": " two three and seven", "tokens": [51336, 732, 1045, 293, 3407, 51424], "temperature": 0.0, "avg_logprob": -0.24262258741590711, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009107724763453007}, {"id": 141, "seek": 68144, "start": 702.6400000000001, "end": 704.6400000000001, "text": " the second one is to", "tokens": [51424, 264, 1150, 472, 307, 281, 51524], "temperature": 0.0, "avg_logprob": -0.24262258741590711, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009107724763453007}, {"id": 142, "seek": 68144, "start": 704.6400000000001, "end": 708.32, "text": " Import numpy or import sys if you don't have happened to have numpy installed", "tokens": [51524, 26391, 1031, 8200, 420, 974, 262, 749, 498, 291, 500, 380, 362, 2011, 281, 362, 1031, 8200, 8899, 51708], "temperature": 0.0, "avg_logprob": -0.24262258741590711, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009107724763453007}, {"id": 143, "seek": 70832, "start": 709.0400000000001, "end": 712.8000000000001, "text": " And then also define a function you can do this all this right at the command line", "tokens": [50400, 400, 550, 611, 6964, 257, 2445, 291, 393, 360, 341, 439, 341, 558, 412, 264, 5622, 1622, 50588], "temperature": 0.0, "avg_logprob": -0.19684679754849138, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.001699813874438405}, {"id": 144, "seek": 70832, "start": 712.8000000000001, "end": 716.7600000000001, "text": " You don't need to go anywhere else. You don't need to do this in a file. So", "tokens": [50588, 509, 500, 380, 643, 281, 352, 4992, 1646, 13, 509, 500, 380, 643, 281, 360, 341, 294, 257, 3991, 13, 407, 50786], "temperature": 0.0, "avg_logprob": -0.19684679754849138, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.001699813874438405}, {"id": 145, "seek": 70832, "start": 718.2800000000001, "end": 721.1600000000001, "text": " Try these out you can click on the details to get the answer", "tokens": [50862, 6526, 613, 484, 291, 393, 2052, 322, 264, 4365, 281, 483, 264, 1867, 51006], "temperature": 0.0, "avg_logprob": -0.19684679754849138, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.001699813874438405}, {"id": 146, "seek": 70832, "start": 721.5600000000001, "end": 725.9200000000001, "text": " And we'll give you guys a couple of minutes to try this stuff out", "tokens": [51026, 400, 321, 603, 976, 291, 1074, 257, 1916, 295, 2077, 281, 853, 341, 1507, 484, 51244], "temperature": 0.0, "avg_logprob": -0.19684679754849138, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.001699813874438405}, {"id": 147, "seek": 70832, "start": 726.8000000000001, "end": 729.6400000000001, "text": " And also be solving it very slowly in real time", "tokens": [51288, 400, 611, 312, 12606, 309, 588, 5692, 294, 957, 565, 51430], "temperature": 0.0, "avg_logprob": -0.19684679754849138, "compression_ratio": 1.6323529411764706, "no_speech_prob": 0.001699813874438405}, {"id": 148, "seek": 73832, "start": 739.2, "end": 741.2, "text": " I", "tokens": [50408, 286, 50508], "temperature": 0.0, "avg_logprob": -0.391897545920478, "compression_ratio": 1.212962962962963, "no_speech_prob": 0.001926407334394753}, {"id": 149, "seek": 73832, "start": 742.9200000000001, "end": 748.24, "text": " Think you can go wow 42 what a what an auspicious number there", "tokens": [50594, 6557, 291, 393, 352, 6076, 14034, 437, 257, 437, 364, 3437, 47067, 1230, 456, 50860], "temperature": 0.0, "avg_logprob": -0.391897545920478, "compression_ratio": 1.212962962962963, "no_speech_prob": 0.001926407334394753}, {"id": 150, "seek": 73832, "start": 752.1600000000001, "end": 760.6400000000001, "text": " Can we import a module Gil yes wow that's that's pretty impressive", "tokens": [51056, 1664, 321, 974, 257, 10088, 17654, 2086, 6076, 300, 311, 300, 311, 1238, 8992, 51480], "temperature": 0.0, "avg_logprob": -0.391897545920478, "compression_ratio": 1.212962962962963, "no_speech_prob": 0.001926407334394753}, {"id": 151, "seek": 76832, "start": 768.32, "end": 770.32, "text": " Oh", "tokens": [50364, 876, 50464], "temperature": 0.0, "avg_logprob": -0.6330660115117612, "compression_ratio": 1.2589285714285714, "no_speech_prob": 0.012814263813197613}, {"id": 152, "seek": 76832, "start": 775.24, "end": 777.94, "text": " We're in real life we should be like yeah, yeah, sorry", "tokens": [50710, 492, 434, 294, 957, 993, 321, 820, 312, 411, 1338, 11, 1338, 11, 2597, 50845], "temperature": 0.0, "avg_logprob": -0.6330660115117612, "compression_ratio": 1.2589285714285714, "no_speech_prob": 0.012814263813197613}, {"id": 153, "seek": 76832, "start": 785.08, "end": 787.08, "text": " No, I'll still in relay", "tokens": [51202, 883, 11, 286, 603, 920, 294, 24214, 51302], "temperature": 0.0, "avg_logprob": -0.6330660115117612, "compression_ratio": 1.2589285714285714, "no_speech_prob": 0.012814263813197613}, {"id": 154, "seek": 76832, "start": 788.5200000000001, "end": 790.5200000000001, "text": " Yeah", "tokens": [51374, 865, 51474], "temperature": 0.0, "avg_logprob": -0.6330660115117612, "compression_ratio": 1.2589285714285714, "no_speech_prob": 0.012814263813197613}, {"id": 155, "seek": 76832, "start": 793.36, "end": 797.6400000000001, "text": " Sorry, I was in developer mode right there there we go", "tokens": [51616, 4919, 11, 286, 390, 294, 10754, 4391, 558, 456, 456, 321, 352, 51830], "temperature": 0.0, "avg_logprob": -0.6330660115117612, "compression_ratio": 1.2589285714285714, "no_speech_prob": 0.012814263813197613}, {"id": 156, "seek": 79832, "start": 798.96, "end": 802.12, "text": " So you're saying yeah, you should see there's a lot of tab completions available", "tokens": [50396, 407, 291, 434, 1566, 1338, 11, 291, 820, 536, 456, 311, 257, 688, 295, 4421, 1557, 626, 2435, 50554], "temperature": 0.0, "avg_logprob": -0.23873118696541623, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.00043719541281461716}, {"id": 157, "seek": 79832, "start": 802.12, "end": 805.1600000000001, "text": " So if you import or I'll do sys actually too because that's one", "tokens": [50554, 407, 498, 291, 974, 420, 286, 603, 360, 262, 749, 767, 886, 570, 300, 311, 472, 50706], "temperature": 0.0, "avg_logprob": -0.23873118696541623, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.00043719541281461716}, {"id": 158, "seek": 79832, "start": 805.9200000000001, "end": 812.7600000000001, "text": " You can just hit tab after the dot and those will be all of the attributes and modules that are available in sys. Yep", "tokens": [50744, 509, 393, 445, 2045, 4421, 934, 264, 5893, 293, 729, 486, 312, 439, 295, 264, 17212, 293, 16679, 300, 366, 2435, 294, 262, 749, 13, 7010, 51086], "temperature": 0.0, "avg_logprob": -0.23873118696541623, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.00043719541281461716}, {"id": 159, "seek": 79832, "start": 814.7600000000001, "end": 816.9200000000001, "text": " I forgot the last one the function", "tokens": [51186, 286, 5298, 264, 1036, 472, 264, 2445, 51294], "temperature": 0.0, "avg_logprob": -0.23873118696541623, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.00043719541281461716}, {"id": 160, "seek": 79832, "start": 819.7600000000001, "end": 822.36, "text": " Does anyone have any problems or questions these", "tokens": [51436, 4402, 2878, 362, 604, 2740, 420, 1651, 613, 51566], "temperature": 0.0, "avg_logprob": -0.23873118696541623, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.00043719541281461716}, {"id": 161, "seek": 82236, "start": 823.36, "end": 828.84, "text": " It's pretty simple right so this is just to prove to you that contrary is Python", "tokens": [50414, 467, 311, 1238, 2199, 558, 370, 341, 307, 445, 281, 7081, 281, 291, 300, 19506, 307, 15329, 50688], "temperature": 0.0, "avg_logprob": -0.3160614716379266, "compression_ratio": 1.4948979591836735, "no_speech_prob": 0.004903461784124374}, {"id": 162, "seek": 82236, "start": 834.16, "end": 837.88, "text": " Yes, yes you can well we will get to that question later", "tokens": [50954, 1079, 11, 2086, 291, 393, 731, 321, 486, 483, 281, 300, 1168, 1780, 51140], "temperature": 0.0, "avg_logprob": -0.3160614716379266, "compression_ratio": 1.4948979591836735, "no_speech_prob": 0.004903461784124374}, {"id": 163, "seek": 82236, "start": 840.28, "end": 845.48, "text": " So Dhar Haas's question for those of you who are listening at home was can you define a function?", "tokens": [51260, 407, 413, 5854, 4064, 296, 311, 1168, 337, 729, 295, 291, 567, 366, 4764, 412, 1280, 390, 393, 291, 6964, 257, 2445, 30, 51520], "temperature": 0.0, "avg_logprob": -0.3160614716379266, "compression_ratio": 1.4948979591836735, "no_speech_prob": 0.004903461784124374}, {"id": 164, "seek": 82236, "start": 845.48, "end": 848.76, "text": " That's all a command on your system and the answer is yes", "tokens": [51520, 663, 311, 439, 257, 5622, 322, 428, 1185, 293, 264, 1867, 307, 2086, 51684], "temperature": 0.0, "avg_logprob": -0.3160614716379266, "compression_ratio": 1.4948979591836735, "no_speech_prob": 0.004903461784124374}, {"id": 165, "seek": 84876, "start": 848.8, "end": 852.4, "text": " And we'll get to how all that resolves and works later so", "tokens": [50366, 400, 321, 603, 483, 281, 577, 439, 300, 7923, 977, 293, 1985, 1780, 370, 50546], "temperature": 0.0, "avg_logprob": -0.30366077423095705, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0013878282625228167}, {"id": 166, "seek": 84876, "start": 853.8, "end": 857.96, "text": " Great question. Okay, and we'll get to it pretty soon. I think actually", "tokens": [50616, 3769, 1168, 13, 1033, 11, 293, 321, 603, 483, 281, 309, 1238, 2321, 13, 286, 519, 767, 50824], "temperature": 0.0, "avg_logprob": -0.30366077423095705, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0013878282625228167}, {"id": 167, "seek": 84876, "start": 858.72, "end": 861.4399999999999, "text": " So conscious of shell so conscious also a shell language", "tokens": [50862, 407, 6648, 295, 8720, 370, 6648, 611, 257, 8720, 2856, 50998], "temperature": 0.0, "avg_logprob": -0.30366077423095705, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0013878282625228167}, {"id": 168, "seek": 84876, "start": 862.24, "end": 865.96, "text": " or more more precisely, it's really a scripting language that is", "tokens": [51038, 420, 544, 544, 13402, 11, 309, 311, 534, 257, 5755, 278, 2856, 300, 307, 51224], "temperature": 0.0, "avg_logprob": -0.30366077423095705, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0013878282625228167}, {"id": 169, "seek": 84876, "start": 866.88, "end": 874.2, "text": " Mostly shlang compatible, which if you go back to like the 60s and 70s, you know, sh", "tokens": [51270, 29035, 402, 25241, 18218, 11, 597, 498, 291, 352, 646, 281, 411, 264, 4060, 82, 293, 5285, 82, 11, 291, 458, 11, 402, 51636], "temperature": 0.0, "avg_logprob": -0.30366077423095705, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0013878282625228167}, {"id": 170, "seek": 87420, "start": 874.72, "end": 882.88, "text": " Was this old or is a shell language that we all have inherited a la bash and and z shell and another and other languages like that", "tokens": [50390, 3027, 341, 1331, 420, 307, 257, 8720, 2856, 300, 321, 439, 362, 27091, 257, 635, 46183, 293, 293, 710, 8720, 293, 1071, 293, 661, 8650, 411, 300, 50798], "temperature": 0.0, "avg_logprob": -0.24890605263088061, "compression_ratio": 1.722466960352423, "no_speech_prob": 0.002549643162637949}, {"id": 171, "seek": 87420, "start": 884.0, "end": 888.22, "text": " But unfortunately, it's actually impossible the syntax is", "tokens": [50854, 583, 7015, 11, 309, 311, 767, 6243, 264, 28431, 307, 51065], "temperature": 0.0, "avg_logprob": -0.24890605263088061, "compression_ratio": 1.722466960352423, "no_speech_prob": 0.002549643162637949}, {"id": 172, "seek": 87420, "start": 888.6400000000001, "end": 893.6, "text": " Collide and it's impossible to be both a Python and shlang compatible language", "tokens": [51086, 4586, 482, 293, 309, 311, 6243, 281, 312, 1293, 257, 15329, 293, 402, 25241, 18218, 2856, 51334], "temperature": 0.0, "avg_logprob": -0.24890605263088061, "compression_ratio": 1.722466960352423, "no_speech_prob": 0.002549643162637949}, {"id": 173, "seek": 87420, "start": 894.36, "end": 899.9200000000001, "text": " And so you have to kind of choose and in conch we have chosen that Python will always win", "tokens": [51372, 400, 370, 291, 362, 281, 733, 295, 2826, 293, 294, 416, 339, 321, 362, 8614, 300, 15329, 486, 1009, 1942, 51650], "temperature": 0.0, "avg_logprob": -0.24890605263088061, "compression_ratio": 1.722466960352423, "no_speech_prob": 0.002549643162637949}, {"id": 174, "seek": 87420, "start": 900.5200000000001, "end": 902.5200000000001, "text": " There's a couple reasons for this", "tokens": [51680, 821, 311, 257, 1916, 4112, 337, 341, 51780], "temperature": 0.0, "avg_logprob": -0.24890605263088061, "compression_ratio": 1.722466960352423, "no_speech_prob": 0.002549643162637949}, {"id": 175, "seek": 90252, "start": 902.64, "end": 905.4399999999999, "text": " but mostly it's that Python is the same language and", "tokens": [50370, 457, 5240, 309, 311, 300, 15329, 307, 264, 912, 2856, 293, 50510], "temperature": 0.0, "avg_logprob": -0.2501904653466266, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.0008964282460510731}, {"id": 176, "seek": 90252, "start": 906.56, "end": 910.4, "text": " sh is not really sane in some ways like the splitting", "tokens": [50566, 402, 307, 406, 534, 45610, 294, 512, 2098, 411, 264, 30348, 50758], "temperature": 0.0, "avg_logprob": -0.2501904653466266, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.0008964282460510731}, {"id": 177, "seek": 90252, "start": 911.04, "end": 918.52, "text": " Strings on non-whitespace characters and the machinery for how all that stuff works is kind of crazy if you dig into how the shlangs work", "tokens": [50790, 8251, 1109, 322, 2107, 12, 1363, 3324, 17940, 4342, 293, 264, 27302, 337, 577, 439, 300, 1507, 1985, 307, 733, 295, 3219, 498, 291, 2528, 666, 577, 264, 402, 25241, 82, 589, 51164], "temperature": 0.0, "avg_logprob": -0.2501904653466266, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.0008964282460510731}, {"id": 178, "seek": 90252, "start": 919.56, "end": 924.56, "text": " But Python always wins. So if you found a place where Python syntax isn't working", "tokens": [51216, 583, 15329, 1009, 10641, 13, 407, 498, 291, 1352, 257, 1081, 689, 15329, 28431, 1943, 380, 1364, 51466], "temperature": 0.0, "avg_logprob": -0.2501904653466266, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.0008964282460510731}, {"id": 179, "seek": 90252, "start": 925.0, "end": 927.0, "text": " That is a bug", "tokens": [51488, 663, 307, 257, 7426, 51588], "temperature": 0.0, "avg_logprob": -0.2501904653466266, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.0008964282460510731}, {"id": 180, "seek": 90252, "start": 927.64, "end": 929.64, "text": " Please report that", "tokens": [51620, 2555, 2275, 300, 51720], "temperature": 0.0, "avg_logprob": -0.2501904653466266, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.0008964282460510731}, {"id": 181, "seek": 92964, "start": 929.88, "end": 937.4399999999999, "text": " Yeah, yes, sure. Just as an example of this this issues where so this is a command that you may be familiar with", "tokens": [50376, 865, 11, 2086, 11, 988, 13, 1449, 382, 364, 1365, 295, 341, 341, 2663, 689, 370, 341, 307, 257, 5622, 300, 291, 815, 312, 4963, 365, 50754], "temperature": 0.0, "avg_logprob": -0.3632349286760603, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.0061853122897446156}, {"id": 182, "seek": 92964, "start": 942.24, "end": 946.84, "text": " But this is also a valid Python syntax if Alice and L are you know defined so", "tokens": [50994, 583, 341, 307, 611, 257, 7363, 15329, 28431, 498, 16004, 293, 441, 366, 291, 458, 7642, 370, 51224], "temperature": 0.0, "avg_logprob": -0.3632349286760603, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.0061853122897446156}, {"id": 183, "seek": 94684, "start": 946.96, "end": 948.96, "text": " So", "tokens": [50370, 407, 50470], "temperature": 0.0, "avg_logprob": -0.23203779856363932, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.0010647217277437449}, {"id": 184, "seek": 94684, "start": 956.4, "end": 960.9200000000001, "text": " So the rule is is that if one of those things isn't defined it'll still function, right?", "tokens": [50842, 407, 264, 4978, 307, 307, 300, 498, 472, 295, 729, 721, 1943, 380, 7642, 309, 603, 920, 2445, 11, 558, 30, 51068], "temperature": 0.0, "avg_logprob": -0.23203779856363932, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.0010647217277437449}, {"id": 185, "seek": 94684, "start": 960.9200000000001, "end": 964.2, "text": " You can just delete the variables, but it is possible to overwrite those", "tokens": [51068, 509, 393, 445, 12097, 264, 9102, 11, 457, 309, 307, 1944, 281, 670, 21561, 729, 51232], "temperature": 0.0, "avg_logprob": -0.23203779856363932, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.0010647217277437449}, {"id": 186, "seek": 94684, "start": 964.6, "end": 971.6800000000001, "text": " Built-in names, and there's a way to escape that which will this is just a convenience, but that we'll get to in a bit here", "tokens": [51252, 49822, 12, 259, 5288, 11, 293, 456, 311, 257, 636, 281, 7615, 300, 597, 486, 341, 307, 445, 257, 19283, 11, 457, 300, 321, 603, 483, 281, 294, 257, 857, 510, 51606], "temperature": 0.0, "avg_logprob": -0.23203779856363932, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.0010647217277437449}, {"id": 187, "seek": 94684, "start": 973.2800000000001, "end": 976.44, "text": " So the purpose of the shell is to run commands obviously", "tokens": [51686, 407, 264, 4334, 295, 264, 8720, 307, 281, 1190, 16901, 2745, 51844], "temperature": 0.0, "avg_logprob": -0.23203779856363932, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.0010647217277437449}, {"id": 188, "seek": 97684, "start": 977.36, "end": 981.88, "text": " And so we've got some commands here, right? So we just saw ls-l", "tokens": [50390, 400, 370, 321, 600, 658, 512, 16901, 510, 11, 558, 30, 407, 321, 445, 1866, 287, 82, 12, 75, 50616], "temperature": 0.0, "avg_logprob": -0.2666215013574671, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.000368028471712023}, {"id": 189, "seek": 97684, "start": 982.6, "end": 987.36, "text": " Simple one. Yeah, please type you know type this out if you if you want just prove it to yourself", "tokens": [50652, 21532, 472, 13, 865, 11, 1767, 2010, 291, 458, 2010, 341, 484, 498, 291, 498, 291, 528, 445, 7081, 309, 281, 1803, 50890], "temperature": 0.0, "avg_logprob": -0.2666215013574671, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.000368028471712023}, {"id": 190, "seek": 97684, "start": 988.4, "end": 991.2800000000001, "text": " But this works you can do echo", "tokens": [50942, 583, 341, 1985, 291, 393, 360, 14300, 51086], "temperature": 0.0, "avg_logprob": -0.2666215013574671, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.000368028471712023}, {"id": 191, "seek": 97684, "start": 991.88, "end": 993.88, "text": " You can make directories", "tokens": [51116, 509, 393, 652, 5391, 530, 51216], "temperature": 0.0, "avg_logprob": -0.2666215013574671, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.000368028471712023}, {"id": 192, "seek": 97684, "start": 994.12, "end": 997.1600000000001, "text": " And cd into those directories touch files", "tokens": [51228, 400, 269, 67, 666, 729, 5391, 530, 2557, 7098, 51380], "temperature": 0.0, "avg_logprob": -0.2666215013574671, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.000368028471712023}, {"id": 193, "seek": 97684, "start": 998.0400000000001, "end": 1000.0400000000001, "text": " Do all the kinds of normal things that you", "tokens": [51424, 1144, 439, 264, 3685, 295, 2710, 721, 300, 291, 51524], "temperature": 0.0, "avg_logprob": -0.2666215013574671, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.000368028471712023}, {"id": 194, "seek": 97684, "start": 1000.6800000000001, "end": 1005.52, "text": " You would you would want to do so and I think I actually have all that test code here still but", "tokens": [51556, 509, 576, 291, 576, 528, 281, 360, 370, 293, 286, 519, 286, 767, 362, 439, 300, 1500, 3089, 510, 920, 457, 51798], "temperature": 0.0, "avg_logprob": -0.2666215013574671, "compression_ratio": 1.6311475409836065, "no_speech_prob": 0.000368028471712023}, {"id": 195, "seek": 100552, "start": 1006.0799999999999, "end": 1009.64, "text": " And the other thing that you can do is you can pipe, right? So if you're", "tokens": [50392, 400, 264, 661, 551, 300, 291, 393, 360, 307, 291, 393, 11240, 11, 558, 30, 407, 498, 291, 434, 50570], "temperature": 0.0, "avg_logprob": -0.21250413195921644, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.00048015217180363834}, {"id": 196, "seek": 100552, "start": 1010.68, "end": 1014.16, "text": " Familiar with piping from other shell languages you can take the output", "tokens": [50622, 7342, 4600, 365, 35204, 490, 661, 8720, 8650, 291, 393, 747, 264, 5598, 50796], "temperature": 0.0, "avg_logprob": -0.21250413195921644, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.00048015217180363834}, {"id": 197, "seek": 100552, "start": 1015.3199999999999, "end": 1022.36, "text": " From one command and and make that the input to another and so that all works normally like you would expect in conscious well", "tokens": [50854, 3358, 472, 5622, 293, 293, 652, 300, 264, 4846, 281, 1071, 293, 370, 300, 439, 1985, 5646, 411, 291, 576, 2066, 294, 6648, 731, 51206], "temperature": 0.0, "avg_logprob": -0.21250413195921644, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.00048015217180363834}, {"id": 198, "seek": 100552, "start": 1023.12, "end": 1028.56, "text": " So and basically under under the covers. This is a horrible abuse of the sub-process module", "tokens": [51244, 407, 293, 1936, 833, 833, 264, 10538, 13, 639, 307, 257, 9263, 9852, 295, 264, 1422, 12, 41075, 10088, 51516], "temperature": 0.0, "avg_logprob": -0.21250413195921644, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.00048015217180363834}, {"id": 199, "seek": 100552, "start": 1028.8799999999999, "end": 1034.16, "text": " As you would expect with a lot of fancy features added to it. So", "tokens": [51532, 1018, 291, 576, 2066, 365, 257, 688, 295, 10247, 4122, 3869, 281, 309, 13, 407, 51796], "temperature": 0.0, "avg_logprob": -0.21250413195921644, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.00048015217180363834}, {"id": 200, "seek": 103552, "start": 1036.52, "end": 1041.76, "text": " Okay, so the next bit of kind of basic syntax in the language is our environment variables", "tokens": [50414, 1033, 11, 370, 264, 958, 857, 295, 733, 295, 3875, 28431, 294, 264, 2856, 307, 527, 2823, 9102, 50676], "temperature": 0.0, "avg_logprob": -0.17728056366910638, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00036825286224484444}, {"id": 201, "seek": 103552, "start": 1041.76, "end": 1046.08, "text": " So these function a little differently than other sh lengths, but similarly", "tokens": [50676, 407, 613, 2445, 257, 707, 7614, 813, 661, 402, 26329, 11, 457, 14138, 50892], "temperature": 0.0, "avg_logprob": -0.17728056366910638, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00036825286224484444}, {"id": 202, "seek": 103552, "start": 1046.28, "end": 1052.12, "text": " So you can refer to any environment variable by prefixing a name with the dollar sign character", "tokens": [50902, 407, 291, 393, 2864, 281, 604, 2823, 7006, 538, 18417, 970, 278, 257, 1315, 365, 264, 7241, 1465, 2517, 51194], "temperature": 0.0, "avg_logprob": -0.17728056366910638, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00036825286224484444}, {"id": 203, "seek": 103552, "start": 1052.12, "end": 1056.68, "text": " So if you want to look up right if you want to look up a variable in the environment", "tokens": [51194, 407, 498, 291, 528, 281, 574, 493, 558, 498, 291, 528, 281, 574, 493, 257, 7006, 294, 264, 2823, 51422], "temperature": 0.0, "avg_logprob": -0.17728056366910638, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00036825286224484444}, {"id": 204, "seek": 103552, "start": 1056.68, "end": 1060.44, "text": " You can say dollar sign that variable name and then you'll get back the result", "tokens": [51422, 509, 393, 584, 7241, 1465, 300, 7006, 1315, 293, 550, 291, 603, 483, 646, 264, 1874, 51610], "temperature": 0.0, "avg_logprob": -0.17728056366910638, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.00036825286224484444}, {"id": 205, "seek": 106044, "start": 1060.68, "end": 1067.56, "text": " So right so then the environment is this like special namespace that processes use to communicate with each other and", "tokens": [50376, 407, 558, 370, 550, 264, 2823, 307, 341, 411, 2121, 5288, 17940, 300, 7555, 764, 281, 7890, 365, 1184, 661, 293, 50720], "temperature": 0.0, "avg_logprob": -0.24702042140317768, "compression_ratio": 1.7088607594936709, "no_speech_prob": 0.0012841281713917851}, {"id": 206, "seek": 106044, "start": 1068.8400000000001, "end": 1070.8400000000001, "text": " Conch gives you access to that", "tokens": [50784, 2656, 339, 2709, 291, 2105, 281, 300, 50884], "temperature": 0.0, "avg_logprob": -0.24702042140317768, "compression_ratio": 1.7088607594936709, "no_speech_prob": 0.0012841281713917851}, {"id": 207, "seek": 106044, "start": 1072.76, "end": 1075.64, "text": " And you can set and delete environment variables", "tokens": [50980, 400, 291, 393, 992, 293, 12097, 2823, 9102, 51124], "temperature": 0.0, "avg_logprob": -0.24702042140317768, "compression_ratio": 1.7088607594936709, "no_speech_prob": 0.0012841281713917851}, {"id": 208, "seek": 106044, "start": 1076.4, "end": 1079.8, "text": " More like you would do in Python then you would do in other", "tokens": [51162, 5048, 411, 291, 576, 360, 294, 15329, 550, 291, 576, 360, 294, 661, 51332], "temperature": 0.0, "avg_logprob": -0.24702042140317768, "compression_ratio": 1.7088607594936709, "no_speech_prob": 0.0012841281713917851}, {"id": 209, "seek": 106044, "start": 1080.3200000000002, "end": 1086.48, "text": " Shell languages, right? So these are just normal variables that happen to live in a special dictionary mapping somewhere", "tokens": [51358, 22863, 8650, 11, 558, 30, 407, 613, 366, 445, 2710, 9102, 300, 1051, 281, 1621, 294, 257, 2121, 25890, 18350, 4079, 51666], "temperature": 0.0, "avg_logprob": -0.24702042140317768, "compression_ratio": 1.7088607594936709, "no_speech_prob": 0.0012841281713917851}, {"id": 210, "seek": 106044, "start": 1087.1200000000001, "end": 1089.76, "text": " and so because of that you", "tokens": [51698, 293, 370, 570, 295, 300, 291, 51830], "temperature": 0.0, "avg_logprob": -0.24702042140317768, "compression_ratio": 1.7088607594936709, "no_speech_prob": 0.0012841281713917851}, {"id": 211, "seek": 109044, "start": 1090.48, "end": 1095.68, "text": " Would set them with an equal sign and then you would delete them with the Dell operator. So", "tokens": [50366, 6068, 992, 552, 365, 364, 2681, 1465, 293, 550, 291, 576, 12097, 552, 365, 264, 33319, 12973, 13, 407, 50626], "temperature": 0.0, "avg_logprob": -0.251370112101237, "compression_ratio": 1.6067961165048543, "no_speech_prob": 0.0003513179544825107}, {"id": 212, "seek": 109044, "start": 1096.24, "end": 1098.24, "text": " Shouldn't be anything", "tokens": [50654, 34170, 380, 312, 1340, 50754], "temperature": 0.0, "avg_logprob": -0.251370112101237, "compression_ratio": 1.6067961165048543, "no_speech_prob": 0.0003513179544825107}, {"id": 213, "seek": 109044, "start": 1098.3200000000002, "end": 1102.24, "text": " To out of the ordinary there anyone have any questions about that", "tokens": [50758, 1407, 484, 295, 264, 10547, 456, 2878, 362, 604, 1651, 466, 300, 50954], "temperature": 0.0, "avg_logprob": -0.251370112101237, "compression_ratio": 1.6067961165048543, "no_speech_prob": 0.0003513179544825107}, {"id": 214, "seek": 109044, "start": 1105.8, "end": 1111.0, "text": " Is there any difference between this an OS environment OS dot environment and the answer is yes", "tokens": [51132, 1119, 456, 604, 2649, 1296, 341, 364, 12731, 2823, 12731, 5893, 2823, 293, 264, 1867, 307, 2086, 51392], "temperature": 0.0, "avg_logprob": -0.251370112101237, "compression_ratio": 1.6067961165048543, "no_speech_prob": 0.0003513179544825107}, {"id": 215, "seek": 109044, "start": 1111.0, "end": 1114.16, "text": " There's a lot. We'll get to that in a section coming up", "tokens": [51392, 821, 311, 257, 688, 13, 492, 603, 483, 281, 300, 294, 257, 3541, 1348, 493, 51550], "temperature": 0.0, "avg_logprob": -0.251370112101237, "compression_ratio": 1.6067961165048543, "no_speech_prob": 0.0003513179544825107}, {"id": 216, "seek": 112044, "start": 1120.44, "end": 1122.8400000000001, "text": " No export is not a feature of", "tokens": [50364, 883, 10725, 307, 406, 257, 4111, 295, 50484], "temperature": 0.0, "avg_logprob": -0.19179811730849006, "compression_ratio": 1.7713178294573644, "no_speech_prob": 0.0023964245337992907}, {"id": 217, "seek": 112044, "start": 1123.6000000000001, "end": 1126.0800000000002, "text": " Conch or so exporting", "tokens": [50522, 2656, 339, 420, 370, 44686, 50646], "temperature": 0.0, "avg_logprob": -0.19179811730849006, "compression_ratio": 1.7713178294573644, "no_speech_prob": 0.0023964245337992907}, {"id": 218, "seek": 112044, "start": 1126.44, "end": 1129.76, "text": " So, okay, this is a little this is getting into the weeds a bit", "tokens": [50664, 407, 11, 1392, 11, 341, 307, 257, 707, 341, 307, 1242, 666, 264, 26370, 257, 857, 50830], "temperature": 0.0, "avg_logprob": -0.19179811730849006, "compression_ratio": 1.7713178294573644, "no_speech_prob": 0.0023964245337992907}, {"id": 219, "seek": 112044, "start": 1129.76, "end": 1134.8, "text": " But I think export is a is a bad idea. You shouldn't need to explicitly export things, right?", "tokens": [50830, 583, 286, 519, 10725, 307, 257, 307, 257, 1578, 1558, 13, 509, 4659, 380, 643, 281, 20803, 10725, 721, 11, 558, 30, 51082], "temperature": 0.0, "avg_logprob": -0.19179811730849006, "compression_ratio": 1.7713178294573644, "no_speech_prob": 0.0023964245337992907}, {"id": 220, "seek": 112044, "start": 1134.8, "end": 1137.24, "text": " You're already doing that with the dollar sign, right?", "tokens": [51082, 509, 434, 1217, 884, 300, 365, 264, 7241, 1465, 11, 558, 30, 51204], "temperature": 0.0, "avg_logprob": -0.19179811730849006, "compression_ratio": 1.7713178294573644, "no_speech_prob": 0.0023964245337992907}, {"id": 221, "seek": 112044, "start": 1137.24, "end": 1143.0800000000002, "text": " So shlings when when you export or when you define an exported variable actually don't put the dollar sign", "tokens": [51204, 407, 402, 20823, 562, 562, 291, 10725, 420, 562, 291, 6964, 364, 42055, 7006, 767, 500, 380, 829, 264, 7241, 1465, 51496], "temperature": 0.0, "avg_logprob": -0.19179811730849006, "compression_ratio": 1.7713178294573644, "no_speech_prob": 0.0023964245337992907}, {"id": 222, "seek": 112044, "start": 1143.0800000000002, "end": 1149.4, "text": " So we've collapsed those seven characters export plus space into just the dollar sign", "tokens": [51496, 407, 321, 600, 24578, 729, 3407, 4342, 10725, 1804, 1901, 666, 445, 264, 7241, 1465, 51812], "temperature": 0.0, "avg_logprob": -0.19179811730849006, "compression_ratio": 1.7713178294573644, "no_speech_prob": 0.0023964245337992907}, {"id": 223, "seek": 115044, "start": 1150.88, "end": 1157.88, "text": " They're well, they're not they're they're process-wide. Yeah, they go into the environment for the process", "tokens": [50386, 814, 434, 731, 11, 436, 434, 406, 436, 434, 436, 434, 1399, 12, 7990, 13, 865, 11, 436, 352, 666, 264, 2823, 337, 264, 1399, 50736], "temperature": 0.0, "avg_logprob": -0.2692312196243641, "compression_ratio": 1.7178217821782178, "no_speech_prob": 0.0004172466869931668}, {"id": 224, "seek": 115044, "start": 1162.28, "end": 1166.3200000000002, "text": " Oh, so dollar zero for those so the question is what about dollar zero", "tokens": [50956, 876, 11, 370, 7241, 4018, 337, 729, 370, 264, 1168, 307, 437, 466, 7241, 4018, 51158], "temperature": 0.0, "avg_logprob": -0.2692312196243641, "compression_ratio": 1.7178217821782178, "no_speech_prob": 0.0004172466869931668}, {"id": 225, "seek": 115044, "start": 1166.96, "end": 1171.68, "text": " Dollar zero is how you refer to arguments or you get your the command that you run", "tokens": [51190, 32370, 4018, 307, 577, 291, 2864, 281, 12869, 420, 291, 483, 428, 264, 5622, 300, 291, 1190, 51426], "temperature": 0.0, "avg_logprob": -0.2692312196243641, "compression_ratio": 1.7178217821782178, "no_speech_prob": 0.0004172466869931668}, {"id": 226, "seek": 115044, "start": 1172.4, "end": 1177.76, "text": " We use dollar args for that when you're running a script. It's an environment variable", "tokens": [51462, 492, 764, 7241, 3882, 82, 337, 300, 562, 291, 434, 2614, 257, 5755, 13, 467, 311, 364, 2823, 7006, 51730], "temperature": 0.0, "avg_logprob": -0.2692312196243641, "compression_ratio": 1.7178217821782178, "no_speech_prob": 0.0004172466869931668}, {"id": 227, "seek": 117776, "start": 1177.76, "end": 1180.52, "text": " It's in the docs, which we'll have a link for very shortly. So", "tokens": [50364, 467, 311, 294, 264, 45623, 11, 597, 321, 603, 362, 257, 2113, 337, 588, 13392, 13, 407, 50502], "temperature": 0.0, "avg_logprob": -0.22652578353881836, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.00031008123187348247}, {"id": 228, "seek": 117776, "start": 1181.56, "end": 1189.16, "text": " Okay, I just realized this screen. We're standing in front of it. Yeah. Yeah, okay, but we'll maybe fix that during the break", "tokens": [50554, 1033, 11, 286, 445, 5334, 341, 2568, 13, 492, 434, 4877, 294, 1868, 295, 309, 13, 865, 13, 865, 11, 1392, 11, 457, 321, 603, 1310, 3191, 300, 1830, 264, 1821, 50934], "temperature": 0.0, "avg_logprob": -0.22652578353881836, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.00031008123187348247}, {"id": 229, "seek": 117776, "start": 1191.64, "end": 1193.64, "text": " Okay, yeah, these pretty normal", "tokens": [51058, 1033, 11, 1338, 11, 613, 1238, 2710, 51158], "temperature": 0.0, "avg_logprob": -0.22652578353881836, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.00031008123187348247}, {"id": 230, "seek": 117776, "start": 1195.24, "end": 1200.84, "text": " The other thing that you can do is you can do environment very or environment look up with Python expressions", "tokens": [51238, 440, 661, 551, 300, 291, 393, 360, 307, 291, 393, 360, 2823, 588, 420, 2823, 574, 493, 365, 15329, 15277, 51518], "temperature": 0.0, "avg_logprob": -0.22652578353881836, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.00031008123187348247}, {"id": 231, "seek": 117776, "start": 1201.28, "end": 1203.16, "text": " using dollar sign curly brace", "tokens": [51540, 1228, 7241, 1465, 32066, 38458, 51634], "temperature": 0.0, "avg_logprob": -0.22652578353881836, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.00031008123187348247}, {"id": 232, "seek": 120316, "start": 1203.3600000000001, "end": 1205.16, "text": " So if you want to", "tokens": [50374, 407, 498, 291, 528, 281, 50464], "temperature": 0.0, "avg_logprob": -0.20910479625066122, "compression_ratio": 1.7387387387387387, "no_speech_prob": 0.0008039406384341419}, {"id": 233, "seek": 120316, "start": 1205.16, "end": 1207.76, "text": " Compute an environment variable", "tokens": [50464, 6620, 1169, 364, 2823, 7006, 50594], "temperature": 0.0, "avg_logprob": -0.20910479625066122, "compression_ratio": 1.7387387387387387, "no_speech_prob": 0.0008039406384341419}, {"id": 234, "seek": 120316, "start": 1208.92, "end": 1215.2, "text": " Arbitrarily you can you can use dollar sign curly brace. So this is a little different than how other languages do it", "tokens": [50652, 1587, 5260, 81, 3289, 291, 393, 291, 393, 764, 7241, 1465, 32066, 38458, 13, 407, 341, 307, 257, 707, 819, 813, 577, 661, 8650, 360, 309, 50966], "temperature": 0.0, "avg_logprob": -0.20910479625066122, "compression_ratio": 1.7387387387387387, "no_speech_prob": 0.0008039406384341419}, {"id": 235, "seek": 120316, "start": 1215.6000000000001, "end": 1221.3200000000002, "text": " But for example say you have an x variable that equals a string in your namespace or your user", "tokens": [50986, 583, 337, 1365, 584, 291, 362, 364, 2031, 7006, 300, 6915, 257, 6798, 294, 428, 5288, 17940, 420, 428, 4195, 51272], "temperature": 0.0, "avg_logprob": -0.20910479625066122, "compression_ratio": 1.7387387387387387, "no_speech_prob": 0.0008039406384341419}, {"id": 236, "seek": 120316, "start": 1222.3600000000001, "end": 1228.96, "text": " You can do dollar sign curly brace x and then that'll look up the user environment variable. So that looks up the name", "tokens": [51324, 509, 393, 360, 7241, 1465, 32066, 38458, 2031, 293, 550, 300, 603, 574, 493, 264, 4195, 2823, 7006, 13, 407, 300, 1542, 493, 264, 1315, 51654], "temperature": 0.0, "avg_logprob": -0.20910479625066122, "compression_ratio": 1.7387387387387387, "no_speech_prob": 0.0008039406384341419}, {"id": 237, "seek": 120316, "start": 1229.96, "end": 1231.6000000000001, "text": " oops", "tokens": [51704, 34166, 51786], "temperature": 0.0, "avg_logprob": -0.20910479625066122, "compression_ratio": 1.7387387387387387, "no_speech_prob": 0.0008039406384341419}, {"id": 238, "seek": 123160, "start": 1231.6, "end": 1233.1599999999999, "text": " Sorry, I skipped ahead", "tokens": [50364, 4919, 11, 286, 30193, 2286, 50442], "temperature": 0.0, "avg_logprob": -0.24910494076308384, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0001971505698747933}, {"id": 239, "seek": 123160, "start": 1233.1599999999999, "end": 1238.28, "text": " bit and or if you want to compute it with some other some other expression", "tokens": [50442, 857, 293, 420, 498, 291, 528, 281, 14722, 309, 365, 512, 661, 512, 661, 6114, 50698], "temperature": 0.0, "avg_logprob": -0.24910494076308384, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0001971505698747933}, {"id": 240, "seek": 123160, "start": 1238.84, "end": 1240.84, "text": " You can just stick that right in there", "tokens": [50726, 509, 393, 445, 2897, 300, 558, 294, 456, 50826], "temperature": 0.0, "avg_logprob": -0.24910494076308384, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0001971505698747933}, {"id": 241, "seek": 123160, "start": 1241.1999999999998, "end": 1242.6399999999999, "text": " in", "tokens": [50844, 294, 50916], "temperature": 0.0, "avg_logprob": -0.24910494076308384, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0001971505698747933}, {"id": 242, "seek": 123160, "start": 1242.6399999999999, "end": 1249.6, "text": " Most SH links. These are actually dollar sign and dollar sign curly brace are the same have effectively the same meaning", "tokens": [50916, 4534, 7405, 6123, 13, 1981, 366, 767, 7241, 1465, 293, 7241, 1465, 32066, 38458, 366, 264, 912, 362, 8659, 264, 912, 3620, 51264], "temperature": 0.0, "avg_logprob": -0.24910494076308384, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0001971505698747933}, {"id": 243, "seek": 123160, "start": 1250.32, "end": 1255.32, "text": " But they have distinct meanings here effectively. They're they're subtle differences. I know", "tokens": [51300, 583, 436, 362, 10644, 28138, 510, 8659, 13, 814, 434, 436, 434, 13743, 7300, 13, 286, 458, 51550], "temperature": 0.0, "avg_logprob": -0.24910494076308384, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0001971505698747933}, {"id": 244, "seek": 123160, "start": 1256.1599999999999, "end": 1258.1599999999999, "text": " But they're very different here", "tokens": [51592, 583, 436, 434, 588, 819, 510, 51692], "temperature": 0.0, "avg_logprob": -0.24910494076308384, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0001971505698747933}, {"id": 245, "seek": 123160, "start": 1258.24, "end": 1259.48, "text": " Okay", "tokens": [51696, 1033, 51758], "temperature": 0.0, "avg_logprob": -0.24910494076308384, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0001971505698747933}, {"id": 246, "seek": 125948, "start": 1259.48, "end": 1265.84, "text": " The source command so is everyone is everyone familiar with source and other languages like bash and things", "tokens": [50364, 440, 4009, 5622, 370, 307, 1518, 307, 1518, 4963, 365, 4009, 293, 661, 8650, 411, 46183, 293, 721, 50682], "temperature": 0.0, "avg_logprob": -0.19053311023897337, "compression_ratio": 1.7782426778242677, "no_speech_prob": 0.0018669625278562307}, {"id": 247, "seek": 125948, "start": 1266.56, "end": 1270.84, "text": " Okay, yeah, so so if you're not what source does is source takes of", "tokens": [50718, 1033, 11, 1338, 11, 370, 370, 498, 291, 434, 406, 437, 4009, 775, 307, 4009, 2516, 295, 50932], "temperature": 0.0, "avg_logprob": -0.19053311023897337, "compression_ratio": 1.7782426778242677, "no_speech_prob": 0.0018669625278562307}, {"id": 248, "seek": 125948, "start": 1271.48, "end": 1275.0, "text": " File that's written in that language. So if you're in bash", "tokens": [50964, 26196, 300, 311, 3720, 294, 300, 2856, 13, 407, 498, 291, 434, 294, 46183, 51140], "temperature": 0.0, "avg_logprob": -0.19053311023897337, "compression_ratio": 1.7782426778242677, "no_speech_prob": 0.0018669625278562307}, {"id": 249, "seek": 125948, "start": 1275.4, "end": 1281.8, "text": " And you sort you can source a bash file and it will run the commands as if you had typed them into that", "tokens": [51160, 400, 291, 1333, 291, 393, 4009, 257, 46183, 3991, 293, 309, 486, 1190, 264, 16901, 382, 498, 291, 632, 33941, 552, 666, 300, 51480], "temperature": 0.0, "avg_logprob": -0.19053311023897337, "compression_ratio": 1.7782426778242677, "no_speech_prob": 0.0018669625278562307}, {"id": 250, "seek": 125948, "start": 1282.16, "end": 1288.16, "text": " Session, so it's just a shortcut for executing everything in a file in in your current", "tokens": [51498, 318, 4311, 11, 370, 309, 311, 445, 257, 24822, 337, 32368, 1203, 294, 257, 3991, 294, 294, 428, 2190, 51798], "temperature": 0.0, "avg_logprob": -0.19053311023897337, "compression_ratio": 1.7782426778242677, "no_speech_prob": 0.0018669625278562307}, {"id": 251, "seek": 128816, "start": 1289.0800000000002, "end": 1290.92, "text": " Interpreter session", "tokens": [50410, 5751, 3712, 391, 5481, 50502], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 252, "seek": 128816, "start": 1290.92, "end": 1294.8400000000001, "text": " So conch the source command does roughly this does basically the same thing", "tokens": [50502, 407, 416, 339, 264, 4009, 5622, 775, 9810, 341, 775, 1936, 264, 912, 551, 50698], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 253, "seek": 128816, "start": 1294.96, "end": 1296.96, "text": " It reads in the contents of a file", "tokens": [50704, 467, 15700, 294, 264, 15768, 295, 257, 3991, 50804], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 254, "seek": 128816, "start": 1296.96, "end": 1303.3600000000001, "text": " And then it executes them and it brings all the variable all the global variables and everything in the environment, etc", "tokens": [50804, 400, 550, 309, 4454, 1819, 552, 293, 309, 5607, 439, 264, 7006, 439, 264, 4338, 9102, 293, 1203, 294, 264, 2823, 11, 5183, 51124], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 255, "seek": 128816, "start": 1303.52, "end": 1305.52, "text": " Into the current execution context", "tokens": [51132, 23373, 264, 2190, 15058, 4319, 51232], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 256, "seek": 128816, "start": 1306.76, "end": 1310.4, "text": " But of course this doesn't work on bash this works on conch code", "tokens": [51294, 583, 295, 1164, 341, 1177, 380, 589, 322, 46183, 341, 1985, 322, 416, 339, 3089, 51476], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 257, "seek": 128816, "start": 1311.5600000000002, "end": 1313.5600000000002, "text": " So if you have a very simple", "tokens": [51534, 407, 498, 291, 362, 257, 588, 2199, 51634], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 258, "seek": 128816, "start": 1314.2, "end": 1315.8000000000002, "text": " example file", "tokens": [51666, 1365, 3991, 51746], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 259, "seek": 128816, "start": 1315.8000000000002, "end": 1317.8000000000002, "text": " Yeah, sorry. This is", "tokens": [51746, 865, 11, 2597, 13, 639, 307, 51846], "temperature": 0.0, "avg_logprob": -0.22505439832372573, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.0004371727700345218}, {"id": 260, "seek": 131816, "start": 1318.16, "end": 1320.16, "text": " Yeah, you can do that", "tokens": [50364, 865, 11, 291, 393, 360, 300, 50464], "temperature": 0.0, "avg_logprob": -0.24625205993652344, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0002415193011984229}, {"id": 261, "seek": 131816, "start": 1321.28, "end": 1326.6000000000001, "text": " So here what we have is we're setting an environment but variable in this file", "tokens": [50520, 407, 510, 437, 321, 362, 307, 321, 434, 3287, 364, 2823, 457, 7006, 294, 341, 3991, 50786], "temperature": 0.0, "avg_logprob": -0.24625205993652344, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0002415193011984229}, {"id": 262, "seek": 131816, "start": 1327.8000000000002, "end": 1330.64, "text": " We are setting a password which is a terrible thing to do", "tokens": [50846, 492, 366, 3287, 257, 11524, 597, 307, 257, 6237, 551, 281, 360, 50988], "temperature": 0.0, "avg_logprob": -0.24625205993652344, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0002415193011984229}, {"id": 263, "seek": 131816, "start": 1331.2, "end": 1333.64, "text": " And then we're defining a function. Oh", "tokens": [51016, 400, 550, 321, 434, 17827, 257, 2445, 13, 876, 51138], "temperature": 0.0, "avg_logprob": -0.24625205993652344, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0002415193011984229}, {"id": 264, "seek": 131816, "start": 1334.88, "end": 1338.3200000000002, "text": " You can install VAM right now if you want go for it", "tokens": [51200, 509, 393, 3625, 691, 2865, 558, 586, 498, 291, 528, 352, 337, 309, 51372], "temperature": 0.0, "avg_logprob": -0.24625205993652344, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0002415193011984229}, {"id": 265, "seek": 131816, "start": 1340.0400000000002, "end": 1342.0400000000002, "text": " See if I care go just", "tokens": [51458, 3008, 498, 286, 1127, 352, 445, 51558], "temperature": 0.0, "avg_logprob": -0.24625205993652344, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0002415193011984229}, {"id": 266, "seek": 134204, "start": 1342.04, "end": 1347.56, "text": " Can't do that to your laptop, but it seems me. How do I do this? Oh, well, I mean we're talking about sharing passwords", "tokens": [50364, 1664, 380, 360, 300, 281, 428, 10732, 11, 457, 309, 2544, 385, 13, 1012, 360, 286, 360, 341, 30, 876, 11, 731, 11, 286, 914, 321, 434, 1417, 466, 5414, 33149, 50640], "temperature": 0.0, "avg_logprob": -0.24905276554887013, "compression_ratio": 1.5687203791469195, "no_speech_prob": 0.001098358421586454}, {"id": 267, "seek": 134204, "start": 1347.56, "end": 1350.58, "text": " I'll just say my my root password out right now. Yeah, okay", "tokens": [50640, 286, 603, 445, 584, 452, 452, 5593, 11524, 484, 558, 586, 13, 865, 11, 1392, 50791], "temperature": 0.0, "avg_logprob": -0.24905276554887013, "compression_ratio": 1.5687203791469195, "no_speech_prob": 0.001098358421586454}, {"id": 268, "seek": 134204, "start": 1353.84, "end": 1355.84, "text": " Yeah, so you can", "tokens": [50954, 865, 11, 370, 291, 393, 51054], "temperature": 0.0, "avg_logprob": -0.24905276554887013, "compression_ratio": 1.5687203791469195, "no_speech_prob": 0.001098358421586454}, {"id": 269, "seek": 134204, "start": 1356.8799999999999, "end": 1359.68, "text": " You can then use this function and it's it's good", "tokens": [51106, 509, 393, 550, 764, 341, 2445, 293, 309, 311, 309, 311, 665, 51246], "temperature": 0.0, "avg_logprob": -0.24905276554887013, "compression_ratio": 1.5687203791469195, "no_speech_prob": 0.001098358421586454}, {"id": 270, "seek": 134204, "start": 1359.68, "end": 1365.44, "text": " So basically what you do to use source is you just say source and then the file name", "tokens": [51246, 407, 1936, 437, 291, 360, 281, 764, 4009, 307, 291, 445, 584, 4009, 293, 550, 264, 3991, 1315, 51534], "temperature": 0.0, "avg_logprob": -0.24905276554887013, "compression_ratio": 1.5687203791469195, "no_speech_prob": 0.001098358421586454}, {"id": 271, "seek": 136544, "start": 1365.48, "end": 1368.6000000000001, "text": " So here source example dot xsh and then", "tokens": [50366, 407, 510, 4009, 1365, 5893, 2031, 2716, 293, 550, 50522], "temperature": 0.0, "avg_logprob": -0.29954435659009354, "compression_ratio": 1.6572769953051643, "no_speech_prob": 0.018537042662501335}, {"id": 272, "seek": 136544, "start": 1369.24, "end": 1372.28, "text": " You'll see that that those variables that we had like", "tokens": [50554, 509, 603, 536, 300, 300, 729, 9102, 300, 321, 632, 411, 50706], "temperature": 0.0, "avg_logprob": -0.29954435659009354, "compression_ratio": 1.6572769953051643, "no_speech_prob": 0.018537042662501335}, {"id": 273, "seek": 136544, "start": 1373.0800000000002, "end": 1380.48, "text": " Dollar sign email are available as well as the combined function has been brought into your local exit or your current", "tokens": [50746, 32370, 1465, 3796, 366, 2435, 382, 731, 382, 264, 9354, 2445, 575, 668, 3038, 666, 428, 2654, 11043, 420, 428, 2190, 51116], "temperature": 0.0, "avg_logprob": -0.29954435659009354, "compression_ratio": 1.6572769953051643, "no_speech_prob": 0.018537042662501335}, {"id": 274, "seek": 136544, "start": 1380.68, "end": 1383.24, "text": " Sessions execution context and you can you can run it", "tokens": [51126, 318, 9069, 15058, 4319, 293, 291, 393, 291, 393, 1190, 309, 51254], "temperature": 0.0, "avg_logprob": -0.29954435659009354, "compression_ratio": 1.6572769953051643, "no_speech_prob": 0.018537042662501335}, {"id": 275, "seek": 136544, "start": 1385.16, "end": 1389.72, "text": " You can also import at dot xsh files as well", "tokens": [51350, 509, 393, 611, 974, 412, 5893, 2031, 2716, 7098, 382, 731, 51578], "temperature": 0.0, "avg_logprob": -0.29954435659009354, "compression_ratio": 1.6572769953051643, "no_speech_prob": 0.018537042662501335}, {"id": 276, "seek": 136544, "start": 1389.8, "end": 1392.64, "text": " so if you want to write python modules as", "tokens": [51582, 370, 498, 291, 528, 281, 2464, 38797, 16679, 382, 51724], "temperature": 0.0, "avg_logprob": -0.29954435659009354, "compression_ratio": 1.6572769953051643, "no_speech_prob": 0.018537042662501335}, {"id": 277, "seek": 139264, "start": 1393.5200000000002, "end": 1400.0, "text": " As conch files, you're totally welcome to do that and you can import them even in other normal python projects", "tokens": [50408, 1018, 416, 339, 7098, 11, 291, 434, 3879, 2928, 281, 360, 300, 293, 291, 393, 974, 552, 754, 294, 661, 2710, 38797, 4455, 50732], "temperature": 0.0, "avg_logprob": -0.20106827694436777, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.00032494604238308966}, {"id": 278, "seek": 139264, "start": 1400.2, "end": 1404.48, "text": " Not going to show that here, but if you're interested that's something you can do", "tokens": [50742, 1726, 516, 281, 855, 300, 510, 11, 457, 498, 291, 434, 3102, 300, 311, 746, 291, 393, 360, 50956], "temperature": 0.0, "avg_logprob": -0.20106827694436777, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.00032494604238308966}, {"id": 279, "seek": 139264, "start": 1405.0400000000002, "end": 1408.1200000000001, "text": " Okay, any questions on source?", "tokens": [50984, 1033, 11, 604, 1651, 322, 4009, 30, 51138], "temperature": 0.0, "avg_logprob": -0.20106827694436777, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.00032494604238308966}, {"id": 280, "seek": 139264, "start": 1410.0800000000002, "end": 1412.0800000000002, "text": " Pretty simple alright", "tokens": [51236, 10693, 2199, 5845, 51336], "temperature": 0.0, "avg_logprob": -0.20106827694436777, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.00032494604238308966}, {"id": 281, "seek": 139264, "start": 1413.5600000000002, "end": 1419.48, "text": " The thing that you can't do in a lot of other languages that you can do in conch is that we have a notion of sourcing", "tokens": [51410, 440, 551, 300, 291, 393, 380, 360, 294, 257, 688, 295, 661, 8650, 300, 291, 393, 360, 294, 416, 339, 307, 300, 321, 362, 257, 10710, 295, 11006, 2175, 51706], "temperature": 0.0, "avg_logprob": -0.20106827694436777, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.00032494604238308966}, {"id": 282, "seek": 141948, "start": 1420.32, "end": 1424.56, "text": " Files from other shell languages that we call source foreign", "tokens": [50406, 479, 4680, 490, 661, 8720, 8650, 300, 321, 818, 4009, 5329, 50618], "temperature": 0.0, "avg_logprob": -0.1960599980455764, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.0012250294676050544}, {"id": 283, "seek": 141948, "start": 1425.4, "end": 1427.4, "text": " so imagine you have", "tokens": [50660, 370, 3811, 291, 362, 50760], "temperature": 0.0, "avg_logprob": -0.1960599980455764, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.0012250294676050544}, {"id": 284, "seek": 141948, "start": 1427.56, "end": 1434.16, "text": " Some bash script somewhere and you want to bring that in and execute that in conch and bring all the things into your local", "tokens": [50768, 2188, 46183, 5755, 4079, 293, 291, 528, 281, 1565, 300, 294, 293, 14483, 300, 294, 416, 339, 293, 1565, 439, 264, 721, 666, 428, 2654, 51098], "temperature": 0.0, "avg_logprob": -0.1960599980455764, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.0012250294676050544}, {"id": 285, "seek": 141948, "start": 1434.76, "end": 1441.04, "text": " Execution context you're able to do that just by saying source bash and then the bash script", "tokens": [51128, 17662, 1448, 4319, 291, 434, 1075, 281, 360, 300, 445, 538, 1566, 4009, 46183, 293, 550, 264, 46183, 5755, 51442], "temperature": 0.0, "avg_logprob": -0.1960599980455764, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.0012250294676050544}, {"id": 286, "seek": 141948, "start": 1441.2, "end": 1446.08, "text": " So if you've got a you know a hundred thousand lines of Z shell well one. I'm sorry and two", "tokens": [51450, 407, 498, 291, 600, 658, 257, 291, 458, 257, 3262, 4714, 3876, 295, 1176, 8720, 731, 472, 13, 286, 478, 2597, 293, 732, 51694], "temperature": 0.0, "avg_logprob": -0.1960599980455764, "compression_ratio": 1.683982683982684, "no_speech_prob": 0.0012250294676050544}, {"id": 287, "seek": 144608, "start": 1446.28, "end": 1452.76, "text": " You can still use that so this is a way to integrate to slowly integrate", "tokens": [50374, 509, 393, 920, 764, 300, 370, 341, 307, 257, 636, 281, 13365, 281, 5692, 13365, 50698], "temperature": 0.0, "avg_logprob": -0.23961448669433594, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.000709349405951798}, {"id": 288, "seek": 144608, "start": 1453.28, "end": 1455.28, "text": " with other languages", "tokens": [50724, 365, 661, 8650, 50824], "temperature": 0.0, "avg_logprob": -0.23961448669433594, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.000709349405951798}, {"id": 289, "seek": 144608, "start": 1455.36, "end": 1458.52, "text": " Which is pretty cool actually so", "tokens": [50828, 3013, 307, 1238, 1627, 767, 370, 50986], "temperature": 0.0, "avg_logprob": -0.23961448669433594, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.000709349405951798}, {"id": 290, "seek": 144608, "start": 1459.12, "end": 1462.84, "text": " It's pretty nice any and and by default sorry", "tokens": [51016, 467, 311, 1238, 1481, 604, 293, 293, 538, 7576, 2597, 51202], "temperature": 0.0, "avg_logprob": -0.23961448669433594, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.000709349405951798}, {"id": 291, "seek": 144608, "start": 1463.6399999999999, "end": 1467.8, "text": " We have a so source foreign is a generic infrastructure for doing this", "tokens": [51242, 492, 362, 257, 370, 4009, 5329, 307, 257, 19577, 6896, 337, 884, 341, 51450], "temperature": 0.0, "avg_logprob": -0.23961448669433594, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.000709349405951798}, {"id": 292, "seek": 144608, "start": 1468.4399999999998, "end": 1474.8, "text": " But we have shortcuts for doing source bash source Z shell and also source command or cmd", "tokens": [51482, 583, 321, 362, 34620, 337, 884, 4009, 46183, 4009, 1176, 8720, 293, 611, 4009, 5622, 420, 14668, 67, 51800], "temperature": 0.0, "avg_logprob": -0.23961448669433594, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.000709349405951798}, {"id": 293, "seek": 147480, "start": 1474.8, "end": 1480.1599999999999, "text": " So if you're on Windows using the Windows batch processing language you can source that stuff too", "tokens": [50364, 407, 498, 291, 434, 322, 8591, 1228, 264, 8591, 15245, 9007, 2856, 291, 393, 4009, 300, 1507, 886, 50632], "temperature": 0.0, "avg_logprob": -0.21410857990223875, "compression_ratio": 1.7227272727272727, "no_speech_prob": 0.0005438787047751248}, {"id": 294, "seek": 147480, "start": 1481.04, "end": 1483.04, "text": " which is", "tokens": [50676, 597, 307, 50776], "temperature": 0.0, "avg_logprob": -0.21410857990223875, "compression_ratio": 1.7227272727272727, "no_speech_prob": 0.0005438787047751248}, {"id": 295, "seek": 147480, "start": 1483.1599999999999, "end": 1485.1599999999999, "text": " madness, but I", "tokens": [50782, 28736, 11, 457, 286, 50882], "temperature": 0.0, "avg_logprob": -0.21410857990223875, "compression_ratio": 1.7227272727272727, "no_speech_prob": 0.0005438787047751248}, {"id": 296, "seek": 147480, "start": 1488.84, "end": 1494.6, "text": " Mean we've got a core Windows developer for the past four years who's like it works pretty well", "tokens": [51066, 12302, 321, 600, 658, 257, 4965, 8591, 10754, 337, 264, 1791, 1451, 924, 567, 311, 411, 309, 1985, 1238, 731, 51354], "temperature": 0.0, "avg_logprob": -0.21410857990223875, "compression_ratio": 1.7227272727272727, "no_speech_prob": 0.0005438787047751248}, {"id": 297, "seek": 147480, "start": 1494.6, "end": 1499.44, "text": " I mean there's I imagine there's folks here using it on Windows right so are there any Windows users in the room", "tokens": [51354, 286, 914, 456, 311, 286, 3811, 456, 311, 4024, 510, 1228, 309, 322, 8591, 558, 370, 366, 456, 604, 8591, 5022, 294, 264, 1808, 51596], "temperature": 0.0, "avg_logprob": -0.21410857990223875, "compression_ratio": 1.7227272727272727, "no_speech_prob": 0.0005438787047751248}, {"id": 298, "seek": 147480, "start": 1500.32, "end": 1503.0, "text": " Okay, let it I mean who are on Windows right now", "tokens": [51640, 1033, 11, 718, 309, 286, 914, 567, 366, 322, 8591, 558, 586, 51774], "temperature": 0.0, "avg_logprob": -0.21410857990223875, "compression_ratio": 1.7227272727272727, "no_speech_prob": 0.0005438787047751248}, {"id": 299, "seek": 150480, "start": 1505.44, "end": 1507.44, "text": " I", "tokens": [50396, 286, 50496], "temperature": 0.0, "avg_logprob": -0.2289468283965209, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.0015484084142372012}, {"id": 300, "seek": 150480, "start": 1508.6, "end": 1512.76, "text": " Think the biggest problems are usually just that our examples are very like Unixy", "tokens": [50554, 6557, 264, 3880, 2740, 366, 2673, 445, 300, 527, 5110, 366, 588, 411, 1156, 970, 88, 50762], "temperature": 0.0, "avg_logprob": -0.2289468283965209, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.0015484084142372012}, {"id": 301, "seek": 150480, "start": 1512.76, "end": 1517.6, "text": " And so we say like run this command and it's like what command is that that's that's often the problem", "tokens": [50762, 400, 370, 321, 584, 411, 1190, 341, 5622, 293, 309, 311, 411, 437, 5622, 307, 300, 300, 311, 300, 311, 2049, 264, 1154, 51004], "temperature": 0.0, "avg_logprob": -0.2289468283965209, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.0015484084142372012}, {"id": 302, "seek": 150480, "start": 1519.36, "end": 1521.0, "text": " Okay", "tokens": [51092, 1033, 51174], "temperature": 0.0, "avg_logprob": -0.2289468283965209, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.0015484084142372012}, {"id": 303, "seek": 150480, "start": 1521.0, "end": 1526.36, "text": " Well, so we found with that like if you're on a base Windows install and you just install get bash", "tokens": [51174, 1042, 11, 370, 321, 1352, 365, 300, 411, 498, 291, 434, 322, 257, 3096, 8591, 3625, 293, 291, 445, 3625, 483, 46183, 51442], "temperature": 0.0, "avg_logprob": -0.2289468283965209, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.0015484084142372012}, {"id": 304, "seek": 150480, "start": 1526.36, "end": 1531.8799999999999, "text": " Then you get all the Unix commands and everything works normally and supposedly works really well on Windows subsystem for Linux", "tokens": [51442, 1396, 291, 483, 439, 264, 1156, 970, 16901, 293, 1203, 1985, 5646, 293, 20581, 1985, 534, 731, 322, 8591, 2090, 9321, 337, 18734, 51718], "temperature": 0.0, "avg_logprob": -0.2289468283965209, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.0015484084142372012}, {"id": 305, "seek": 150480, "start": 1531.8799999999999, "end": 1533.8799999999999, "text": " But I have not tested that", "tokens": [51718, 583, 286, 362, 406, 8246, 300, 51818], "temperature": 0.0, "avg_logprob": -0.2289468283965209, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.0015484084142372012}, {"id": 306, "seek": 153480, "start": 1534.8, "end": 1536.8, "text": " I", "tokens": [50364, 286, 50464], "temperature": 0.0, "avg_logprob": -0.26771246868631116, "compression_ratio": 1.3829787234042554, "no_speech_prob": 0.0006068672519177198}, {"id": 307, "seek": 153480, "start": 1543.76, "end": 1546.24, "text": " Mean you can we would be very happy for you to do", "tokens": [50812, 12302, 291, 393, 321, 576, 312, 588, 2055, 337, 291, 281, 360, 50936], "temperature": 0.0, "avg_logprob": -0.26771246868631116, "compression_ratio": 1.3829787234042554, "no_speech_prob": 0.0006068672519177198}, {"id": 308, "seek": 153480, "start": 1546.8, "end": 1549.28, "text": " We may not be able to help if it goes wrong, but we'll try I", "tokens": [50964, 492, 815, 406, 312, 1075, 281, 854, 498, 309, 1709, 2085, 11, 457, 321, 603, 853, 286, 51088], "temperature": 0.0, "avg_logprob": -0.26771246868631116, "compression_ratio": 1.3829787234042554, "no_speech_prob": 0.0006068672519177198}, {"id": 309, "seek": 153480, "start": 1551.52, "end": 1555.3999999999999, "text": " Saw another question over here. All right. Okay, so source foreign", "tokens": [51200, 27307, 1071, 1168, 670, 510, 13, 1057, 558, 13, 1033, 11, 370, 4009, 5329, 51394], "temperature": 0.0, "avg_logprob": -0.26771246868631116, "compression_ratio": 1.3829787234042554, "no_speech_prob": 0.0006068672519177198}, {"id": 310, "seek": 153480, "start": 1556.8799999999999, "end": 1560.56, "text": " Really nice capability really helpful, especially if you're just getting started", "tokens": [51468, 4083, 1481, 13759, 534, 4961, 11, 2318, 498, 291, 434, 445, 1242, 1409, 51652], "temperature": 0.0, "avg_logprob": -0.26771246868631116, "compression_ratio": 1.3829787234042554, "no_speech_prob": 0.0006068672519177198}, {"id": 311, "seek": 156056, "start": 1561.56, "end": 1568.84, "text": " The other thing like most like most shell languages. We've got a configuration file that lives in home.contra rc", "tokens": [50414, 440, 661, 551, 411, 881, 411, 881, 8720, 8650, 13, 492, 600, 658, 257, 11694, 3991, 300, 2909, 294, 1280, 13, 9000, 424, 367, 66, 50778], "temperature": 0.0, "avg_logprob": -0.28617997420461555, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.0017002270324155688}, {"id": 312, "seek": 156056, "start": 1569.56, "end": 1571.56, "text": " And this is just a particular", "tokens": [50814, 400, 341, 307, 445, 257, 1729, 50914], "temperature": 0.0, "avg_logprob": -0.28617997420461555, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.0017002270324155688}, {"id": 313, "seek": 156056, "start": 1572.12, "end": 1578.72, "text": " Special xsh file and that's loaded before basically everything else is loaded. So this is where you can stick all of your", "tokens": [50942, 11863, 2031, 2716, 3991, 293, 300, 311, 13210, 949, 1936, 1203, 1646, 307, 13210, 13, 407, 341, 307, 689, 291, 393, 2897, 439, 295, 428, 51272], "temperature": 0.0, "avg_logprob": -0.28617997420461555, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.0017002270324155688}, {"id": 314, "seek": 156056, "start": 1579.12, "end": 1580.72, "text": " Customizations", "tokens": [51292, 16649, 14455, 51372], "temperature": 0.0, "avg_logprob": -0.28617997420461555, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.0017002270324155688}, {"id": 315, "seek": 156056, "start": 1580.72, "end": 1582.72, "text": " Mostly a lot of people just stick", "tokens": [51372, 29035, 257, 688, 295, 561, 445, 2897, 51472], "temperature": 0.0, "avg_logprob": -0.28617997420461555, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.0017002270324155688}, {"id": 316, "seek": 156056, "start": 1583.0, "end": 1585.0, "text": " environment variables in there", "tokens": [51486, 2823, 9102, 294, 456, 51586], "temperature": 0.0, "avg_logprob": -0.28617997420461555, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.0017002270324155688}, {"id": 317, "seek": 156056, "start": 1586.04, "end": 1588.24, "text": " If you're a condi user conda as", "tokens": [51638, 759, 291, 434, 257, 2224, 72, 4195, 2224, 64, 382, 51748], "temperature": 0.0, "avg_logprob": -0.28617997420461555, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.0017002270324155688}, {"id": 318, "seek": 158824, "start": 1589.24, "end": 1593.0, "text": " Activate or whatever and it will throw some stuff in there as well", "tokens": [50414, 28550, 473, 420, 2035, 293, 309, 486, 3507, 512, 1507, 294, 456, 382, 731, 50602], "temperature": 0.0, "avg_logprob": -0.25554323196411133, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0009108230005949736}, {"id": 319, "seek": 158824, "start": 1593.76, "end": 1594.96, "text": " and", "tokens": [50640, 293, 50700], "temperature": 0.0, "avg_logprob": -0.25554323196411133, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0009108230005949736}, {"id": 320, "seek": 158824, "start": 1594.96, "end": 1596.96, "text": " yeah, so", "tokens": [50700, 1338, 11, 370, 50800], "temperature": 0.0, "avg_logprob": -0.25554323196411133, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0009108230005949736}, {"id": 321, "seek": 158824, "start": 1597.04, "end": 1601.84, "text": " But basically if you want to read about all of the customizations, they're on there in the doc", "tokens": [50804, 583, 1936, 498, 291, 528, 281, 1401, 466, 439, 295, 264, 2375, 14455, 11, 436, 434, 322, 456, 294, 264, 3211, 51044], "temperature": 0.0, "avg_logprob": -0.25554323196411133, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0009108230005949736}, {"id": 322, "seek": 158824, "start": 1601.84, "end": 1606.72, "text": " So every every environment variable that we touch has documentation associated with it", "tokens": [51044, 407, 633, 633, 2823, 7006, 300, 321, 2557, 575, 14333, 6615, 365, 309, 51288], "temperature": 0.0, "avg_logprob": -0.25554323196411133, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0009108230005949736}, {"id": 323, "seek": 158824, "start": 1606.72, "end": 1609.76, "text": " And there's a lot of like tweaks that you can do a few if you need to", "tokens": [51288, 400, 456, 311, 257, 688, 295, 411, 46664, 300, 291, 393, 360, 257, 1326, 498, 291, 643, 281, 51440], "temperature": 0.0, "avg_logprob": -0.25554323196411133, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0009108230005949736}, {"id": 324, "seek": 158824, "start": 1610.52, "end": 1612.28, "text": " all right", "tokens": [51478, 439, 558, 51566], "temperature": 0.0, "avg_logprob": -0.25554323196411133, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0009108230005949736}, {"id": 325, "seek": 158824, "start": 1612.28, "end": 1614.28, "text": " So here's some more exercises", "tokens": [51566, 407, 510, 311, 512, 544, 11900, 51666], "temperature": 0.0, "avg_logprob": -0.25554323196411133, "compression_ratio": 1.6271929824561404, "no_speech_prob": 0.0009108230005949736}, {"id": 326, "seek": 161428, "start": 1614.48, "end": 1617.12, "text": " So let's go ahead and take a few minutes to do these", "tokens": [50374, 407, 718, 311, 352, 2286, 293, 747, 257, 1326, 2077, 281, 360, 613, 50506], "temperature": 0.0, "avg_logprob": -0.2275697236420006, "compression_ratio": 1.7681159420289856, "no_speech_prob": 0.0004954622127115726}, {"id": 327, "seek": 161428, "start": 1617.48, "end": 1622.84, "text": " So the first one is to just set a random integer to the environment variable dollar sign secret", "tokens": [50524, 407, 264, 700, 472, 307, 281, 445, 992, 257, 4974, 24922, 281, 264, 2823, 7006, 7241, 1465, 4054, 50792], "temperature": 0.0, "avg_logprob": -0.2275697236420006, "compression_ratio": 1.7681159420289856, "no_speech_prob": 0.0004954622127115726}, {"id": 328, "seek": 161428, "start": 1623.8799999999999, "end": 1627.04, "text": " The next is to print the secret value", "tokens": [50844, 440, 958, 307, 281, 4482, 264, 4054, 2158, 51002], "temperature": 0.0, "avg_logprob": -0.2275697236420006, "compression_ratio": 1.7681159420289856, "no_speech_prob": 0.0004954622127115726}, {"id": 329, "seek": 161428, "start": 1627.72, "end": 1628.96, "text": " and", "tokens": [51036, 293, 51098], "temperature": 0.0, "avg_logprob": -0.2275697236420006, "compression_ratio": 1.7681159420289856, "no_speech_prob": 0.0004954622127115726}, {"id": 330, "seek": 161428, "start": 1628.96, "end": 1630.48, "text": " then", "tokens": [51098, 550, 51174], "temperature": 0.0, "avg_logprob": -0.2275697236420006, "compression_ratio": 1.7681159420289856, "no_speech_prob": 0.0004954622127115726}, {"id": 331, "seek": 161428, "start": 1630.48, "end": 1632.48, "text": " The third is to put a", "tokens": [51174, 440, 2636, 307, 281, 829, 257, 51274], "temperature": 0.0, "avg_logprob": -0.2275697236420006, "compression_ratio": 1.7681159420289856, "no_speech_prob": 0.0004954622127115726}, {"id": 332, "seek": 161428, "start": 1633.12, "end": 1637.72, "text": " Generating just some generating code for that secret value into your contrast see", "tokens": [51306, 15409, 990, 445, 512, 17746, 3089, 337, 300, 4054, 2158, 666, 428, 8712, 536, 51536], "temperature": 0.0, "avg_logprob": -0.2275697236420006, "compression_ratio": 1.7681159420289856, "no_speech_prob": 0.0004954622127115726}, {"id": 333, "seek": 161428, "start": 1638.36, "end": 1642.6399999999999, "text": " When conch starts up if a dollar sign safe variable does not exist", "tokens": [51568, 1133, 416, 339, 3719, 493, 498, 257, 7241, 1465, 3273, 7006, 775, 406, 2514, 51782], "temperature": 0.0, "avg_logprob": -0.2275697236420006, "compression_ratio": 1.7681159420289856, "no_speech_prob": 0.0004954622127115726}, {"id": 334, "seek": 164264, "start": 1643.1200000000001, "end": 1646.0800000000002, "text": " So we'll give you guys a couple. We'll give you all a couple moments to", "tokens": [50388, 407, 321, 603, 976, 291, 1074, 257, 1916, 13, 492, 603, 976, 291, 439, 257, 1916, 6065, 281, 50536], "temperature": 0.0, "avg_logprob": -0.21788406372070312, "compression_ratio": 1.6445497630331753, "no_speech_prob": 0.0004954905598424375}, {"id": 335, "seek": 164264, "start": 1646.88, "end": 1648.88, "text": " to try this out", "tokens": [50576, 281, 853, 341, 484, 50676], "temperature": 0.0, "avg_logprob": -0.21788406372070312, "compression_ratio": 1.6445497630331753, "no_speech_prob": 0.0004954905598424375}, {"id": 336, "seek": 164264, "start": 1651.64, "end": 1656.72, "text": " And if anyone's having problems just raise your hands right now and and Gil and I will will walk around and help", "tokens": [50814, 400, 498, 2878, 311, 1419, 2740, 445, 5300, 428, 2377, 558, 586, 293, 293, 17654, 293, 286, 486, 486, 1792, 926, 293, 854, 51068], "temperature": 0.0, "avg_logprob": -0.21788406372070312, "compression_ratio": 1.6445497630331753, "no_speech_prob": 0.0004954905598424375}, {"id": 337, "seek": 164264, "start": 1659.3200000000002, "end": 1664.64, "text": " The next thing that are for problem for part two. There's actually a couple different ways to do this", "tokens": [51198, 440, 958, 551, 300, 366, 337, 1154, 337, 644, 732, 13, 821, 311, 767, 257, 1916, 819, 2098, 281, 360, 341, 51464], "temperature": 0.0, "avg_logprob": -0.21788406372070312, "compression_ratio": 1.6445497630331753, "no_speech_prob": 0.0004954905598424375}, {"id": 338, "seek": 164264, "start": 1665.3600000000001, "end": 1669.64, "text": " The first is that you could either echo that", "tokens": [51500, 440, 700, 307, 300, 291, 727, 2139, 14300, 300, 51714], "temperature": 0.0, "avg_logprob": -0.21788406372070312, "compression_ratio": 1.6445497630331753, "no_speech_prob": 0.0004954905598424375}, {"id": 339, "seek": 166964, "start": 1669.64, "end": 1673.16, "text": " So if you're thinking more in a shell language, you could echo that", "tokens": [50364, 407, 498, 291, 434, 1953, 544, 294, 257, 8720, 2856, 11, 291, 727, 14300, 300, 50540], "temperature": 0.0, "avg_logprob": -0.24769572822415098, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0014101644046604633}, {"id": 340, "seek": 166964, "start": 1673.64, "end": 1678.2, "text": " You know my secret value is dollar sign secret as a string and that will all", "tokens": [50564, 509, 458, 452, 4054, 2158, 307, 7241, 1465, 4054, 382, 257, 6798, 293, 300, 486, 439, 50792], "temperature": 0.0, "avg_logprob": -0.24769572822415098, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0014101644046604633}, {"id": 341, "seek": 166964, "start": 1679.0400000000002, "end": 1685.0400000000002, "text": " All push out normally or if you're in more of a Python mode, you can just print it like you would print anything else", "tokens": [50834, 1057, 2944, 484, 5646, 420, 498, 291, 434, 294, 544, 295, 257, 15329, 4391, 11, 291, 393, 445, 4482, 309, 411, 291, 576, 4482, 1340, 1646, 51134], "temperature": 0.0, "avg_logprob": -0.24769572822415098, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0014101644046604633}, {"id": 342, "seek": 166964, "start": 1685.44, "end": 1687.0400000000002, "text": " Okay", "tokens": [51154, 1033, 51234], "temperature": 0.0, "avg_logprob": -0.24769572822415098, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0014101644046604633}, {"id": 343, "seek": 166964, "start": 1687.0400000000002, "end": 1689.0400000000002, "text": " Both of those are totally valid", "tokens": [51234, 6767, 295, 729, 366, 3879, 7363, 51334], "temperature": 0.0, "avg_logprob": -0.24769572822415098, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0014101644046604633}, {"id": 344, "seek": 166964, "start": 1689.5600000000002, "end": 1691.96, "text": " and then the last one is", "tokens": [51360, 293, 550, 264, 1036, 472, 307, 51480], "temperature": 0.0, "avg_logprob": -0.24769572822415098, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0014101644046604633}, {"id": 345, "seek": 166964, "start": 1693.24, "end": 1697.76, "text": " If you wanted to this is getting cut off I guess but", "tokens": [51544, 759, 291, 1415, 281, 341, 307, 1242, 1723, 766, 286, 2041, 457, 51770], "temperature": 0.0, "avg_logprob": -0.24769572822415098, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0014101644046604633}, {"id": 346, "seek": 169776, "start": 1698.76, "end": 1702.48, "text": " This is why you have it on your own machines, too", "tokens": [50414, 639, 307, 983, 291, 362, 309, 322, 428, 1065, 8379, 11, 886, 50600], "temperature": 0.0, "avg_logprob": -0.2476060152053833, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.00028678972739726305}, {"id": 347, "seek": 169776, "start": 1704.28, "end": 1706.12, "text": " You can say", "tokens": [50690, 509, 393, 584, 50782], "temperature": 0.0, "avg_logprob": -0.2476060152053833, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.00028678972739726305}, {"id": 348, "seek": 169776, "start": 1706.12, "end": 1713.76, "text": " In your contrast see you because it's Python you can import random because it's conch you can set the environment variable", "tokens": [50782, 682, 428, 8712, 536, 291, 570, 309, 311, 15329, 291, 393, 974, 4974, 570, 309, 311, 416, 339, 291, 393, 992, 264, 2823, 7006, 51164], "temperature": 0.0, "avg_logprob": -0.2476060152053833, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.00028678972739726305}, {"id": 349, "seek": 169776, "start": 1714.6, "end": 1721.68, "text": " To whatever random value and then oh we actually didn't cover this in text in this exercise, but", "tokens": [51206, 1407, 2035, 4974, 2158, 293, 550, 1954, 321, 767, 994, 380, 2060, 341, 294, 2487, 294, 341, 5380, 11, 457, 51560], "temperature": 0.0, "avg_logprob": -0.2476060152053833, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.00028678972739726305}, {"id": 350, "seek": 169776, "start": 1723.72, "end": 1725.8799999999999, "text": " Because we've moved around some slides, but", "tokens": [51662, 1436, 321, 600, 4259, 926, 512, 9788, 11, 457, 51770], "temperature": 0.0, "avg_logprob": -0.2476060152053833, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.00028678972739726305}, {"id": 351, "seek": 172588, "start": 1726.8000000000002, "end": 1733.1200000000001, "text": " We'll get back to that last one soon enough. So, okay, so very briefly", "tokens": [50410, 492, 603, 483, 646, 281, 300, 1036, 472, 2321, 1547, 13, 407, 11, 1392, 11, 370, 588, 10515, 50726], "temperature": 0.0, "avg_logprob": -0.2903904528231234, "compression_ratio": 1.4662921348314606, "no_speech_prob": 0.0011691482504829764}, {"id": 352, "seek": 172588, "start": 1734.64, "end": 1736.64, "text": " So remember how we said dollar sign?", "tokens": [50802, 407, 1604, 577, 321, 848, 7241, 1465, 30, 50902], "temperature": 0.0, "avg_logprob": -0.2903904528231234, "compression_ratio": 1.4662921348314606, "no_speech_prob": 0.0011691482504829764}, {"id": 353, "seek": 172588, "start": 1737.3200000000002, "end": 1740.2800000000002, "text": " Curly brace is an expression", "tokens": [50936, 7907, 356, 38458, 307, 364, 6114, 51084], "temperature": 0.0, "avg_logprob": -0.2903904528231234, "compression_ratio": 1.4662921348314606, "no_speech_prob": 0.0011691482504829764}, {"id": 354, "seek": 172588, "start": 1741.2800000000002, "end": 1744.0800000000002, "text": " You can you do look up by expression so", "tokens": [51134, 509, 393, 291, 360, 574, 493, 538, 6114, 370, 51274], "temperature": 0.0, "avg_logprob": -0.2903904528231234, "compression_ratio": 1.4662921348314606, "no_speech_prob": 0.0011691482504829764}, {"id": 355, "seek": 172588, "start": 1744.72, "end": 1746.0400000000002, "text": " this", "tokens": [51306, 341, 51372], "temperature": 0.0, "avg_logprob": -0.2903904528231234, "compression_ratio": 1.4662921348314606, "no_speech_prob": 0.0011691482504829764}, {"id": 356, "seek": 172588, "start": 1746.0400000000002, "end": 1752.0800000000002, "text": " This dot dot dot in Python is the special is the syntax for the ellipsis object", "tokens": [51372, 639, 5893, 5893, 5893, 294, 15329, 307, 264, 2121, 307, 264, 28431, 337, 264, 8284, 2600, 271, 2657, 51674], "temperature": 0.0, "avg_logprob": -0.2903904528231234, "compression_ratio": 1.4662921348314606, "no_speech_prob": 0.0011691482504829764}, {"id": 357, "seek": 175208, "start": 1752.8799999999999, "end": 1755.28, "text": " So we use that numpy uses it, too", "tokens": [50404, 407, 321, 764, 300, 1031, 8200, 4960, 309, 11, 886, 50524], "temperature": 0.0, "avg_logprob": -0.1867505322705518, "compression_ratio": 1.7685589519650655, "no_speech_prob": 0.0006067989161238074}, {"id": 358, "seek": 175208, "start": 1756.1599999999999, "end": 1760.32, "text": " So we use that to be a reference to the environment itself", "tokens": [50568, 407, 321, 764, 300, 281, 312, 257, 6408, 281, 264, 2823, 2564, 50776], "temperature": 0.0, "avg_logprob": -0.1867505322705518, "compression_ratio": 1.7685589519650655, "no_speech_prob": 0.0006067989161238074}, {"id": 359, "seek": 175208, "start": 1760.32, "end": 1765.32, "text": " So if you do dollar sign curly brace dot dot dot you get back the environment object", "tokens": [50776, 407, 498, 291, 360, 7241, 1465, 32066, 38458, 5893, 5893, 5893, 291, 483, 646, 264, 2823, 2657, 51026], "temperature": 0.0, "avg_logprob": -0.1867505322705518, "compression_ratio": 1.7685589519650655, "no_speech_prob": 0.0006067989161238074}, {"id": 360, "seek": 175208, "start": 1766.1599999999999, "end": 1771.12, "text": " Because dot dot dot is obviously not or an ellipsis is obviously not any environment variable", "tokens": [51068, 1436, 5893, 5893, 5893, 307, 2745, 406, 420, 364, 8284, 2600, 271, 307, 2745, 406, 604, 2823, 7006, 51316], "temperature": 0.0, "avg_logprob": -0.1867505322705518, "compression_ratio": 1.7685589519650655, "no_speech_prob": 0.0006067989161238074}, {"id": 361, "seek": 175208, "start": 1771.72, "end": 1773.28, "text": " And it's a big mess", "tokens": [51346, 400, 309, 311, 257, 955, 2082, 51424], "temperature": 0.0, "avg_logprob": -0.1867505322705518, "compression_ratio": 1.7685589519650655, "no_speech_prob": 0.0006067989161238074}, {"id": 362, "seek": 175208, "start": 1773.28, "end": 1775.96, "text": " Which is why we didn't want to cover it this soon, but there it is and", "tokens": [51424, 3013, 307, 983, 321, 994, 380, 528, 281, 2060, 309, 341, 2321, 11, 457, 456, 309, 307, 293, 51558], "temperature": 0.0, "avg_logprob": -0.1867505322705518, "compression_ratio": 1.7685589519650655, "no_speech_prob": 0.0006067989161238074}, {"id": 363, "seek": 175208, "start": 1776.6799999999998, "end": 1778.78, "text": " Well, we will get back to it in a bit", "tokens": [51594, 1042, 11, 321, 486, 483, 646, 281, 309, 294, 257, 857, 51699], "temperature": 0.0, "avg_logprob": -0.1867505322705518, "compression_ratio": 1.7685589519650655, "no_speech_prob": 0.0006067989161238074}, {"id": 364, "seek": 175208, "start": 1779.8, "end": 1781.8, "text": " Okay", "tokens": [51750, 1033, 51850], "temperature": 0.0, "avg_logprob": -0.1867505322705518, "compression_ratio": 1.7685589519650655, "no_speech_prob": 0.0006067989161238074}, {"id": 365, "seek": 178180, "start": 1781.8, "end": 1787.8, "text": " So, yeah, the goal here is like because it's just a mapping you can test if if things are in the environment", "tokens": [50364, 407, 11, 1338, 11, 264, 3387, 510, 307, 411, 570, 309, 311, 445, 257, 18350, 291, 393, 1500, 498, 498, 721, 366, 294, 264, 2823, 50664], "temperature": 0.0, "avg_logprob": -0.26800169638537485, "compression_ratio": 1.6, "no_speech_prob": 0.0002912941272370517}, {"id": 366, "seek": 178180, "start": 1788.24, "end": 1791.0, "text": " Through through this self-lookup. Okay", "tokens": [50686, 8927, 807, 341, 2698, 12, 12747, 1010, 13, 1033, 50824], "temperature": 0.0, "avg_logprob": -0.26800169638537485, "compression_ratio": 1.6, "no_speech_prob": 0.0002912941272370517}, {"id": 367, "seek": 178180, "start": 1792.48, "end": 1799.2, "text": " Wow a break already that can't be right. No, probably not. Okay, so we're not gonna break. Yeah, because it's too early. I", "tokens": [50898, 3153, 257, 1821, 1217, 300, 393, 380, 312, 558, 13, 883, 11, 1391, 406, 13, 1033, 11, 370, 321, 434, 406, 799, 1821, 13, 865, 11, 570, 309, 311, 886, 2440, 13, 286, 51234], "temperature": 0.0, "avg_logprob": -0.26800169638537485, "compression_ratio": 1.6, "no_speech_prob": 0.0002912941272370517}, {"id": 368, "seek": 178180, "start": 1801.28, "end": 1805.72, "text": " Built up your hopes and then I'm just crushing them right now", "tokens": [51338, 49822, 493, 428, 13681, 293, 550, 286, 478, 445, 31317, 552, 558, 586, 51560], "temperature": 0.0, "avg_logprob": -0.26800169638537485, "compression_ratio": 1.6, "no_speech_prob": 0.0002912941272370517}, {"id": 369, "seek": 178180, "start": 1806.68, "end": 1808.2, "text": " crushing it. Yeah", "tokens": [51608, 31317, 309, 13, 865, 51684], "temperature": 0.0, "avg_logprob": -0.26800169638537485, "compression_ratio": 1.6, "no_speech_prob": 0.0002912941272370517}, {"id": 370, "seek": 178180, "start": 1808.2, "end": 1810.76, "text": " Okay, so Gil's gonna take over for this next part", "tokens": [51684, 1033, 11, 370, 17654, 311, 799, 747, 670, 337, 341, 958, 644, 51812], "temperature": 0.0, "avg_logprob": -0.26800169638537485, "compression_ratio": 1.6, "no_speech_prob": 0.0002912941272370517}, {"id": 371, "seek": 181180, "start": 1811.8, "end": 1813.8, "text": " And maybe", "tokens": [50364, 400, 1310, 50464], "temperature": 0.0, "avg_logprob": -0.27842768994006484, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0003740262473002076}, {"id": 372, "seek": 181180, "start": 1814.84, "end": 1817.2, "text": " I'm not gonna move this one. Yeah. Yeah, it's impossible", "tokens": [50516, 286, 478, 406, 799, 1286, 341, 472, 13, 865, 13, 865, 11, 309, 311, 6243, 50634], "temperature": 0.0, "avg_logprob": -0.27842768994006484, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0003740262473002076}, {"id": 373, "seek": 181180, "start": 1820.48, "end": 1822.48, "text": " Okay, so", "tokens": [50798, 1033, 11, 370, 50898], "temperature": 0.0, "avg_logprob": -0.27842768994006484, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0003740262473002076}, {"id": 374, "seek": 181180, "start": 1822.6, "end": 1824.6, "text": " We've sort of looked at you can still run", "tokens": [50904, 492, 600, 1333, 295, 2956, 412, 291, 393, 920, 1190, 51004], "temperature": 0.0, "avg_logprob": -0.27842768994006484, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0003740262473002076}, {"id": 375, "seek": 181180, "start": 1825.8, "end": 1831.18, "text": " Sort of a sub process command like a regular term a regular terminal command shell command and you can also run", "tokens": [51064, 26149, 295, 257, 1422, 1399, 5622, 411, 257, 3890, 1433, 257, 3890, 14709, 5622, 8720, 5622, 293, 291, 393, 611, 1190, 51333], "temperature": 0.0, "avg_logprob": -0.27842768994006484, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0003740262473002076}, {"id": 376, "seek": 181180, "start": 1832.8, "end": 1836.08, "text": " Python, you know models and functions and you can sort of you know", "tokens": [51414, 15329, 11, 291, 458, 5245, 293, 6828, 293, 291, 393, 1333, 295, 291, 458, 51578], "temperature": 0.0, "avg_logprob": -0.27842768994006484, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0003740262473002076}, {"id": 377, "seek": 181180, "start": 1836.6, "end": 1838.96, "text": " set them to environment variables and then use that but", "tokens": [51604, 992, 552, 281, 2823, 9102, 293, 550, 764, 300, 457, 51722], "temperature": 0.0, "avg_logprob": -0.27842768994006484, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0003740262473002076}, {"id": 378, "seek": 183896, "start": 1839.52, "end": 1844.68, "text": " Where this really starts to come into play is when you want to be able to start mixing those two things together to sort of get", "tokens": [50392, 2305, 341, 534, 3719, 281, 808, 666, 862, 307, 562, 291, 528, 281, 312, 1075, 281, 722, 11983, 729, 732, 721, 1214, 281, 1333, 295, 483, 50650], "temperature": 0.0, "avg_logprob": -0.19305924388849846, "compression_ratio": 1.75, "no_speech_prob": 0.00045814228360541165}, {"id": 379, "seek": 183896, "start": 1844.68, "end": 1846.68, "text": " the best of both worlds", "tokens": [50650, 264, 1151, 295, 1293, 13401, 50750], "temperature": 0.0, "avg_logprob": -0.19305924388849846, "compression_ratio": 1.75, "no_speech_prob": 0.00045814228360541165}, {"id": 380, "seek": 183896, "start": 1848.56, "end": 1853.32, "text": " So the idea here is that in a lot of ways conscious makes up using sub process really really simple", "tokens": [50844, 407, 264, 1558, 510, 307, 300, 294, 257, 688, 295, 2098, 6648, 1669, 493, 1228, 1422, 1399, 534, 534, 2199, 51082], "temperature": 0.0, "avg_logprob": -0.19305924388849846, "compression_ratio": 1.75, "no_speech_prob": 0.00045814228360541165}, {"id": 381, "seek": 183896, "start": 1853.6000000000001, "end": 1858.44, "text": " Instead of trying to remember like we do set this like sub process type thing somewhere", "tokens": [51096, 7156, 295, 1382, 281, 1604, 411, 321, 360, 992, 341, 411, 1422, 1399, 2010, 551, 4079, 51338], "temperature": 0.0, "avg_logprob": -0.19305924388849846, "compression_ratio": 1.75, "no_speech_prob": 0.00045814228360541165}, {"id": 382, "seek": 183896, "start": 1858.44, "end": 1863.92, "text": " And how are you gonna like parse the output and all that we just all that's being handled for you in sort of a more intuitive way", "tokens": [51338, 400, 577, 366, 291, 799, 411, 48377, 264, 5598, 293, 439, 300, 321, 445, 439, 300, 311, 885, 18033, 337, 291, 294, 1333, 295, 257, 544, 21769, 636, 51612], "temperature": 0.0, "avg_logprob": -0.19305924388849846, "compression_ratio": 1.75, "no_speech_prob": 0.00045814228360541165}, {"id": 383, "seek": 186392, "start": 1864.92, "end": 1873.52, "text": " And we have a number of operators we've added to sort of help with this interaction between sort of sub process mode and Python mode", "tokens": [50414, 400, 321, 362, 257, 1230, 295, 19077, 321, 600, 3869, 281, 1333, 295, 854, 365, 341, 9285, 1296, 1333, 295, 1422, 1399, 4391, 293, 15329, 4391, 50844], "temperature": 0.0, "avg_logprob": -0.24707781613528074, "compression_ratio": 1.6211453744493391, "no_speech_prob": 0.0007093759486451745}, {"id": 384, "seek": 186392, "start": 1874.3200000000002, "end": 1876.3200000000002, "text": " so the first of these is", "tokens": [50884, 370, 264, 700, 295, 613, 307, 50984], "temperature": 0.0, "avg_logprob": -0.24707781613528074, "compression_ratio": 1.6211453744493391, "no_speech_prob": 0.0007093759486451745}, {"id": 385, "seek": 186392, "start": 1876.64, "end": 1878.64, "text": " dollar curly brace", "tokens": [51000, 7241, 32066, 38458, 51100], "temperature": 0.0, "avg_logprob": -0.24707781613528074, "compression_ratio": 1.6211453744493391, "no_speech_prob": 0.0007093759486451745}, {"id": 386, "seek": 186392, "start": 1879.3600000000001, "end": 1883.2, "text": " Parentheses. Yes. Sorry. I do remember what keys are sort of", "tokens": [51136, 430, 20616, 23639, 13, 1079, 13, 4919, 13, 286, 360, 1604, 437, 9317, 366, 1333, 295, 51328], "temperature": 0.0, "avg_logprob": -0.24707781613528074, "compression_ratio": 1.6211453744493391, "no_speech_prob": 0.0007093759486451745}, {"id": 387, "seek": 186392, "start": 1883.8400000000001, "end": 1891.64, "text": " And what it does actually similar to bash is it captures the output of a command, but then it returns as it returns it as a string", "tokens": [51360, 400, 437, 309, 775, 767, 2531, 281, 46183, 307, 309, 27986, 264, 5598, 295, 257, 5622, 11, 457, 550, 309, 11247, 382, 309, 11247, 309, 382, 257, 6798, 51750], "temperature": 0.0, "avg_logprob": -0.24707781613528074, "compression_ratio": 1.6211453744493391, "no_speech_prob": 0.0007093759486451745}, {"id": 388, "seek": 189164, "start": 1892.64, "end": 1895.48, "text": " And it really does return the whole string, right?", "tokens": [50414, 400, 309, 534, 775, 2736, 264, 1379, 6798, 11, 558, 30, 50556], "temperature": 0.0, "avg_logprob": -0.22139401338538345, "compression_ratio": 1.7464788732394365, "no_speech_prob": 0.0007205575820989907}, {"id": 389, "seek": 189164, "start": 1895.48, "end": 1899.48, "text": " So, you know the output of LS has a bunch of line breaks in it", "tokens": [50556, 407, 11, 291, 458, 264, 5598, 295, 36657, 575, 257, 3840, 295, 1622, 9857, 294, 309, 50756], "temperature": 0.0, "avg_logprob": -0.22139401338538345, "compression_ratio": 1.7464788732394365, "no_speech_prob": 0.0007205575820989907}, {"id": 390, "seek": 189164, "start": 1899.48, "end": 1905.6000000000001, "text": " So there are a bunch of line breaks in the output what that means that if you print it you actually get what the output of that was", "tokens": [50756, 407, 456, 366, 257, 3840, 295, 1622, 9857, 294, 264, 5598, 437, 300, 1355, 300, 498, 291, 4482, 309, 291, 767, 483, 437, 264, 5598, 295, 300, 390, 51062], "temperature": 0.0, "avg_logprob": -0.22139401338538345, "compression_ratio": 1.7464788732394365, "no_speech_prob": 0.0007205575820989907}, {"id": 391, "seek": 189164, "start": 1906.64, "end": 1908.64, "text": " similarly it is a", "tokens": [51114, 14138, 309, 307, 257, 51214], "temperature": 0.0, "avg_logprob": -0.22139401338538345, "compression_ratio": 1.7464788732394365, "no_speech_prob": 0.0007205575820989907}, {"id": 392, "seek": 189164, "start": 1909.8400000000001, "end": 1911.8400000000001, "text": " It's a string right like a Python string", "tokens": [51274, 467, 311, 257, 6798, 558, 411, 257, 15329, 6798, 51374], "temperature": 0.0, "avg_logprob": -0.22139401338538345, "compression_ratio": 1.7464788732394365, "no_speech_prob": 0.0007205575820989907}, {"id": 393, "seek": 189164, "start": 1912.0400000000002, "end": 1916.0400000000002, "text": " so if you type you know x dot and then hit tab or something or just", "tokens": [51384, 370, 498, 291, 2010, 291, 458, 2031, 5893, 293, 550, 2045, 4421, 420, 746, 420, 445, 51584], "temperature": 0.0, "avg_logprob": -0.22139401338538345, "compression_ratio": 1.7464788732394365, "no_speech_prob": 0.0007205575820989907}, {"id": 394, "seek": 191604, "start": 1916.84, "end": 1920.68, "text": " Like you have all of the Python string methods available to you", "tokens": [50404, 1743, 291, 362, 439, 295, 264, 15329, 6798, 7150, 2435, 281, 291, 50596], "temperature": 0.0, "avg_logprob": -0.1658605666387649, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.0022160192020237446}, {"id": 395, "seek": 191604, "start": 1920.68, "end": 1924.6399999999999, "text": " So if you wanted to split that say on new lines, which might be a useful thing to do with LS", "tokens": [50596, 407, 498, 291, 1415, 281, 7472, 300, 584, 322, 777, 3876, 11, 597, 1062, 312, 257, 4420, 551, 281, 360, 365, 36657, 50794], "temperature": 0.0, "avg_logprob": -0.1658605666387649, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.0022160192020237446}, {"id": 396, "seek": 191604, "start": 1924.6399999999999, "end": 1929.44, "text": " Or you really like uppercase letters and you want to do that or however you want to", "tokens": [50794, 1610, 291, 534, 411, 11775, 2869, 651, 7825, 293, 291, 528, 281, 360, 300, 420, 4461, 291, 528, 281, 51034], "temperature": 0.0, "avg_logprob": -0.1658605666387649, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.0022160192020237446}, {"id": 397, "seek": 191604, "start": 1930.56, "end": 1934.6, "text": " Mutate and parse and change that captured output all of", "tokens": [51090, 18517, 473, 293, 48377, 293, 1319, 300, 11828, 5598, 439, 295, 51292], "temperature": 0.0, "avg_logprob": -0.1658605666387649, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.0022160192020237446}, {"id": 398, "seek": 191604, "start": 1935.1599999999999, "end": 1936.56, "text": " Python's built-in", "tokens": [51320, 15329, 311, 3094, 12, 259, 51390], "temperature": 0.0, "avg_logprob": -0.1658605666387649, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.0022160192020237446}, {"id": 399, "seek": 191604, "start": 1936.56, "end": 1941.2, "text": " Helpers are already there for you. You don't need to sit there and like try to write these things yourself", "tokens": [51390, 10773, 433, 366, 1217, 456, 337, 291, 13, 509, 500, 380, 643, 281, 1394, 456, 293, 411, 853, 281, 2464, 613, 721, 1803, 51622], "temperature": 0.0, "avg_logprob": -0.1658605666387649, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.0022160192020237446}, {"id": 400, "seek": 194604, "start": 1946.44, "end": 1951.52, "text": " Okay, so the second is bang parenz", "tokens": [50384, 1033, 11, 370, 264, 1150, 307, 8550, 280, 4484, 89, 50638], "temperature": 0.0, "avg_logprob": -0.2737374204270383, "compression_ratio": 1.6334841628959276, "no_speech_prob": 0.00021984439808875322}, {"id": 401, "seek": 194604, "start": 1952.92, "end": 1954.12, "text": " and", "tokens": [50708, 293, 50768], "temperature": 0.0, "avg_logprob": -0.2737374204270383, "compression_ratio": 1.6334841628959276, "no_speech_prob": 0.00021984439808875322}, {"id": 402, "seek": 194604, "start": 1954.12, "end": 1957.04, "text": " This does the same thing and then also other stuff", "tokens": [50768, 639, 775, 264, 912, 551, 293, 550, 611, 661, 1507, 50914], "temperature": 0.0, "avg_logprob": -0.2737374204270383, "compression_ratio": 1.6334841628959276, "no_speech_prob": 0.00021984439808875322}, {"id": 403, "seek": 194604, "start": 1957.3999999999999, "end": 1962.44, "text": " So what it actually is returning if you run a command with this is a command pipeline object", "tokens": [50932, 407, 437, 309, 767, 307, 12678, 498, 291, 1190, 257, 5622, 365, 341, 307, 257, 5622, 15517, 2657, 51184], "temperature": 0.0, "avg_logprob": -0.2737374204270383, "compression_ratio": 1.6334841628959276, "no_speech_prob": 0.00021984439808875322}, {"id": 404, "seek": 194604, "start": 1962.44, "end": 1964.52, "text": " Which is a sort of a conch thing", "tokens": [51184, 3013, 307, 257, 1333, 295, 257, 416, 339, 551, 51288], "temperature": 0.0, "avg_logprob": -0.2737374204270383, "compression_ratio": 1.6334841628959276, "no_speech_prob": 0.00021984439808875322}, {"id": 405, "seek": 194604, "start": 1965.12, "end": 1969.28, "text": " And it includes the output of the command as well", "tokens": [51318, 400, 309, 5974, 264, 5598, 295, 264, 5622, 382, 731, 51526], "temperature": 0.0, "avg_logprob": -0.2737374204270383, "compression_ratio": 1.6334841628959276, "no_speech_prob": 0.00021984439808875322}, {"id": 406, "seek": 194604, "start": 1969.28, "end": 1974.36, "text": " But also a bunch of information about like like the PID of the process what the return code was", "tokens": [51526, 583, 611, 257, 3840, 295, 1589, 466, 411, 411, 264, 430, 2777, 295, 264, 1399, 437, 264, 2736, 3089, 390, 51780], "temperature": 0.0, "avg_logprob": -0.2737374204270383, "compression_ratio": 1.6334841628959276, "no_speech_prob": 0.00021984439808875322}, {"id": 407, "seek": 197436, "start": 1974.6799999999998, "end": 1982.36, "text": " What the actual argument you ran was if it was an alias, what did it expand out to what are the starting stopping time stamps of that command?", "tokens": [50380, 708, 264, 3539, 6770, 291, 5872, 390, 498, 309, 390, 364, 419, 4609, 11, 437, 630, 309, 5268, 484, 281, 437, 366, 264, 2891, 12767, 565, 30800, 295, 300, 5622, 30, 50764], "temperature": 0.0, "avg_logprob": -0.21680329396174505, "compression_ratio": 1.7385892116182573, "no_speech_prob": 0.0007093759486451745}, {"id": 408, "seek": 197436, "start": 1982.9199999999998, "end": 1984.9199999999998, "text": " and also", "tokens": [50792, 293, 611, 50892], "temperature": 0.0, "avg_logprob": -0.21680329396174505, "compression_ratio": 1.7385892116182573, "no_speech_prob": 0.0007093759486451745}, {"id": 409, "seek": 197436, "start": 1985.1999999999998, "end": 1992.24, "text": " This object itself is truthy. So if the return code is a success then you can actually say like you know if", "tokens": [50906, 639, 2657, 2564, 307, 3494, 88, 13, 407, 498, 264, 2736, 3089, 307, 257, 2245, 550, 291, 393, 767, 584, 411, 291, 458, 498, 51258], "temperature": 0.0, "avg_logprob": -0.21680329396174505, "compression_ratio": 1.7385892116182573, "no_speech_prob": 0.0007093759486451745}, {"id": 410, "seek": 197436, "start": 1992.9599999999998, "end": 1999.1999999999998, "text": " Bang this command, you know like print this command and if it if it's successful then that you can use that for control flow", "tokens": [51294, 11538, 341, 5622, 11, 291, 458, 411, 4482, 341, 5622, 293, 498, 309, 498, 309, 311, 4406, 550, 300, 291, 393, 764, 300, 337, 1969, 3095, 51606], "temperature": 0.0, "avg_logprob": -0.21680329396174505, "compression_ratio": 1.7385892116182573, "no_speech_prob": 0.0007093759486451745}, {"id": 411, "seek": 197436, "start": 1999.36, "end": 2001.36, "text": " So there's sort of a way to easily", "tokens": [51614, 407, 456, 311, 1333, 295, 257, 636, 281, 3612, 51714], "temperature": 0.0, "avg_logprob": -0.21680329396174505, "compression_ratio": 1.7385892116182573, "no_speech_prob": 0.0007093759486451745}, {"id": 412, "seek": 200136, "start": 2002.08, "end": 2004.8799999999999, "text": " Figure out like I tried to do this thing was successful. Yes, or no", "tokens": [50400, 43225, 484, 411, 286, 3031, 281, 360, 341, 551, 390, 4406, 13, 1079, 11, 420, 572, 50540], "temperature": 0.0, "avg_logprob": -0.25062447364884194, "compression_ratio": 1.6008403361344539, "no_speech_prob": 0.0015728127909824252}, {"id": 413, "seek": 200136, "start": 2004.8799999999999, "end": 2006.76, "text": " What was the output if it was successful?", "tokens": [50540, 708, 390, 264, 5598, 498, 309, 390, 4406, 30, 50634], "temperature": 0.0, "avg_logprob": -0.25062447364884194, "compression_ratio": 1.6008403361344539, "no_speech_prob": 0.0015728127909824252}, {"id": 414, "seek": 200136, "start": 2006.76, "end": 2013.56, "text": " How long did it take like all of this is just available to you and sort of the the the command pipeline object that's returned I?", "tokens": [50634, 1012, 938, 630, 309, 747, 411, 439, 295, 341, 307, 445, 2435, 281, 291, 293, 1333, 295, 264, 264, 264, 5622, 15517, 2657, 300, 311, 8752, 286, 30, 50974], "temperature": 0.0, "avg_logprob": -0.25062447364884194, "compression_ratio": 1.6008403361344539, "no_speech_prob": 0.0015728127909824252}, {"id": 415, "seek": 200136, "start": 2014.6, "end": 2016.6, "text": " Think this is what I just said. Yeah, I", "tokens": [51026, 6557, 341, 307, 437, 286, 445, 848, 13, 865, 11, 286, 51126], "temperature": 0.0, "avg_logprob": -0.25062447364884194, "compression_ratio": 1.6008403361344539, "no_speech_prob": 0.0015728127909824252}, {"id": 416, "seek": 200136, "start": 2020.08, "end": 2024.8, "text": " Didn't do it command, but that's okay. That's all right. Does anybody have any questions about those?", "tokens": [51300, 11151, 380, 360, 309, 5622, 11, 457, 300, 311, 1392, 13, 663, 311, 439, 558, 13, 4402, 4472, 362, 604, 1651, 466, 729, 30, 51536], "temperature": 0.0, "avg_logprob": -0.25062447364884194, "compression_ratio": 1.6008403361344539, "no_speech_prob": 0.0015728127909824252}, {"id": 417, "seek": 203136, "start": 2031.36, "end": 2033.36, "text": " Yes, and some although in Python. It's a", "tokens": [50364, 1079, 11, 293, 512, 4878, 294, 15329, 13, 467, 311, 257, 50464], "temperature": 0.0, "avg_logprob": -0.3417938587277435, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.004399160388857126}, {"id": 418, "seek": 203136, "start": 2034.24, "end": 2036.3999999999999, "text": " Tilde yeah, yeah, yeah, that's right", "tokens": [50508, 314, 15956, 1338, 11, 1338, 11, 1338, 11, 300, 311, 558, 50616], "temperature": 0.0, "avg_logprob": -0.3417938587277435, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.004399160388857126}, {"id": 419, "seek": 203136, "start": 2036.3999999999999, "end": 2044.2199999999998, "text": " So in in Python if you wanted to negate something you use not or tilde or till does it the invert operator, but yeah", "tokens": [50616, 407, 294, 294, 15329, 498, 291, 1415, 281, 2485, 473, 746, 291, 764, 406, 420, 45046, 420, 4288, 775, 309, 264, 33966, 12973, 11, 457, 1338, 51007], "temperature": 0.0, "avg_logprob": -0.3417938587277435, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.004399160388857126}, {"id": 420, "seek": 203136, "start": 2044.76, "end": 2046.76, "text": " Yeah", "tokens": [51034, 865, 51134], "temperature": 0.0, "avg_logprob": -0.3417938587277435, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.004399160388857126}, {"id": 421, "seek": 203136, "start": 2047.8799999999999, "end": 2049.88, "text": " Okay", "tokens": [51190, 1033, 51290], "temperature": 0.0, "avg_logprob": -0.3417938587277435, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.004399160388857126}, {"id": 422, "seek": 203136, "start": 2051.56, "end": 2058.56, "text": " Okay, also so you can iterate over the output of these commands line by line in bang exclamation point. Yes", "tokens": [51374, 1033, 11, 611, 370, 291, 393, 44497, 670, 264, 5598, 295, 613, 16901, 1622, 538, 1622, 294, 8550, 1624, 43233, 935, 13, 1079, 51724], "temperature": 0.0, "avg_logprob": -0.3417938587277435, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.004399160388857126}, {"id": 423, "seek": 206136, "start": 2061.36, "end": 2063.36, "text": " I", "tokens": [50364, 286, 50464], "temperature": 0.0, "avg_logprob": -0.6563410077776227, "compression_ratio": 1.064102564102564, "no_speech_prob": 0.005218155682086945}, {"id": 424, "seek": 206136, "start": 2071.6400000000003, "end": 2077.6400000000003, "text": " In enumerate LS and then print what does it have string?", "tokens": [50878, 682, 465, 15583, 473, 36657, 293, 550, 4482, 437, 775, 309, 362, 6798, 30, 51178], "temperature": 0.0, "avg_logprob": -0.6563410077776227, "compression_ratio": 1.064102564102564, "no_speech_prob": 0.005218155682086945}, {"id": 425, "seek": 206136, "start": 2082.4, "end": 2085.26, "text": " And then just I and look", "tokens": [51416, 400, 550, 445, 286, 293, 574, 51559], "temperature": 0.0, "avg_logprob": -0.6563410077776227, "compression_ratio": 1.064102564102564, "no_speech_prob": 0.005218155682086945}, {"id": 426, "seek": 209136, "start": 2091.36, "end": 2096.56, "text": " Probably should have stripped look, but that's that's okay. That's okay. We can do it next time. Yeah", "tokens": [50364, 9210, 820, 362, 33221, 574, 11, 457, 300, 311, 300, 311, 1392, 13, 663, 311, 1392, 13, 492, 393, 360, 309, 958, 565, 13, 865, 50624], "temperature": 0.0, "avg_logprob": -0.2968509516765162, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.0008967910544015467}, {"id": 427, "seek": 209136, "start": 2101.6800000000003, "end": 2108.3, "text": " For example, right, so the new lines are still in that look in that object that look object that ends up there", "tokens": [50880, 1171, 1365, 11, 558, 11, 370, 264, 777, 3876, 366, 920, 294, 300, 574, 294, 300, 2657, 300, 574, 2657, 300, 5314, 493, 456, 51211], "temperature": 0.0, "avg_logprob": -0.2968509516765162, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.0008967910544015467}, {"id": 428, "seek": 209136, "start": 2108.96, "end": 2110.96, "text": " And this is streaming by the way", "tokens": [51244, 400, 341, 307, 11791, 538, 264, 636, 51344], "temperature": 0.0, "avg_logprob": -0.2968509516765162, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.0008967910544015467}, {"id": 429, "seek": 209136, "start": 2111.4, "end": 2116.6, "text": " So that if you wanted to stream through your command, right if you've got output that's larger than memory", "tokens": [51366, 407, 300, 498, 291, 1415, 281, 4309, 807, 428, 5622, 11, 558, 498, 291, 600, 658, 5598, 300, 311, 4833, 813, 4675, 51626], "temperature": 0.0, "avg_logprob": -0.2968509516765162, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.0008967910544015467}, {"id": 430, "seek": 209136, "start": 2116.6, "end": 2118.6, "text": " This is how you you'd use", "tokens": [51626, 639, 307, 577, 291, 291, 1116, 764, 51726], "temperature": 0.0, "avg_logprob": -0.2968509516765162, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.0008967910544015467}, {"id": 431, "seek": 211860, "start": 2118.8399999999997, "end": 2121.36, "text": " Bang parentheses for for that. So", "tokens": [50376, 11538, 34153, 337, 337, 300, 13, 407, 50502], "temperature": 0.0, "avg_logprob": -0.28031170696293545, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.0003352815692778677}, {"id": 432, "seek": 211860, "start": 2122.2799999999997, "end": 2124.7999999999997, "text": " Also in the list of things that we may have not mentioned", "tokens": [50548, 2743, 294, 264, 1329, 295, 721, 300, 321, 815, 362, 406, 2835, 50674], "temperature": 0.0, "avg_logprob": -0.28031170696293545, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.0003352815692778677}, {"id": 433, "seek": 211860, "start": 2125.2, "end": 2126.8399999999997, "text": " There is this", "tokens": [50694, 821, 307, 341, 50776], "temperature": 0.0, "avg_logprob": -0.28031170696293545, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.0003352815692778677}, {"id": 434, "seek": 211860, "start": 2126.8399999999997, "end": 2130.68, "text": " Multi-line prompt thing that keeps happening that we've just sort of been using without mentioning", "tokens": [50776, 29238, 12, 1889, 12391, 551, 300, 5965, 2737, 300, 321, 600, 445, 1333, 295, 668, 1228, 1553, 18315, 50968], "temperature": 0.0, "avg_logprob": -0.28031170696293545, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.0003352815692778677}, {"id": 435, "seek": 211860, "start": 2131.36, "end": 2134.92, "text": " But yeah, so it's like in the same way that I Python functions. This is a", "tokens": [51002, 583, 1338, 11, 370, 309, 311, 411, 294, 264, 912, 636, 300, 286, 15329, 6828, 13, 639, 307, 257, 51180], "temperature": 0.0, "avg_logprob": -0.28031170696293545, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.0003352815692778677}, {"id": 436, "seek": 211860, "start": 2135.64, "end": 2141.52, "text": " Full you can just keep you know as long as your you can either shift return to maintain like to force a new line", "tokens": [51216, 13841, 291, 393, 445, 1066, 291, 458, 382, 938, 382, 428, 291, 393, 2139, 5513, 2736, 281, 6909, 411, 281, 3464, 257, 777, 1622, 51510], "temperature": 0.0, "avg_logprob": -0.28031170696293545, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.0003352815692778677}, {"id": 437, "seek": 211860, "start": 2141.6, "end": 2144.1, "text": " But you as long as the command isn't complete", "tokens": [51514, 583, 291, 382, 938, 382, 264, 5622, 1943, 380, 3566, 51639], "temperature": 0.0, "avg_logprob": -0.28031170696293545, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.0003352815692778677}, {"id": 438, "seek": 214410, "start": 2144.1, "end": 2149.3399999999997, "text": " It'll just keep adding a new line for you to type on two entries at the end will run the thing and then when you arrow up through", "tokens": [50364, 467, 603, 445, 1066, 5127, 257, 777, 1622, 337, 291, 281, 2010, 322, 732, 23041, 412, 264, 917, 486, 1190, 264, 551, 293, 550, 562, 291, 11610, 493, 807, 50626], "temperature": 0.0, "avg_logprob": -0.18649005045933006, "compression_ratio": 1.8661417322834646, "no_speech_prob": 0.0006069416995160282}, {"id": 439, "seek": 214410, "start": 2149.3399999999997, "end": 2153.2599999999998, "text": " Your history it will load up the full command like the full command block for you", "tokens": [50626, 2260, 2503, 309, 486, 3677, 493, 264, 1577, 5622, 411, 264, 1577, 5622, 3461, 337, 291, 50822], "temperature": 0.0, "avg_logprob": -0.18649005045933006, "compression_ratio": 1.8661417322834646, "no_speech_prob": 0.0006069416995160282}, {"id": 440, "seek": 214410, "start": 2153.2599999999998, "end": 2157.2999999999997, "text": " You don't need to like go and hit arrow up for each of those individual lines. You were doing right", "tokens": [50822, 509, 500, 380, 643, 281, 411, 352, 293, 2045, 11610, 493, 337, 1184, 295, 729, 2609, 3876, 13, 509, 645, 884, 558, 51024], "temperature": 0.0, "avg_logprob": -0.18649005045933006, "compression_ratio": 1.8661417322834646, "no_speech_prob": 0.0006069416995160282}, {"id": 441, "seek": 214410, "start": 2157.2999999999997, "end": 2160.86, "text": " So I just hit arrow up there once and I returned the whole input", "tokens": [51024, 407, 286, 445, 2045, 11610, 493, 456, 1564, 293, 286, 8752, 264, 1379, 4846, 51202], "temperature": 0.0, "avg_logprob": -0.18649005045933006, "compression_ratio": 1.8661417322834646, "no_speech_prob": 0.0006069416995160282}, {"id": 442, "seek": 214410, "start": 2166.54, "end": 2171.2999999999997, "text": " So we just went over those are captured sub processes and then there are uncaptured sub processes", "tokens": [51486, 407, 321, 445, 1437, 670, 729, 366, 11828, 1422, 7555, 293, 550, 456, 366, 517, 496, 662, 3831, 1422, 7555, 51724], "temperature": 0.0, "avg_logprob": -0.18649005045933006, "compression_ratio": 1.8661417322834646, "no_speech_prob": 0.0006069416995160282}, {"id": 443, "seek": 217130, "start": 2171.3, "end": 2178.42, "text": " so here again, we're using a dollar sign and bang but this time using square braces and", "tokens": [50364, 370, 510, 797, 11, 321, 434, 1228, 257, 7241, 1465, 293, 8550, 457, 341, 565, 1228, 3732, 41537, 293, 50720], "temperature": 0.0, "avg_logprob": -0.22092017260464755, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.000511003308929503}, {"id": 444, "seek": 217130, "start": 2178.98, "end": 2185.38, "text": " They function the same way as the captured ones except they they don't capture and so the output of the command", "tokens": [50748, 814, 2445, 264, 912, 636, 382, 264, 11828, 2306, 3993, 436, 436, 500, 380, 7983, 293, 370, 264, 5598, 295, 264, 5622, 51068], "temperature": 0.0, "avg_logprob": -0.22092017260464755, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.000511003308929503}, {"id": 445, "seek": 217130, "start": 2185.86, "end": 2191.38, "text": " Still goes through to the screen to standard out or standard error depending, but you can still capture that", "tokens": [51092, 8291, 1709, 807, 281, 264, 2568, 281, 3832, 484, 420, 3832, 6713, 5413, 11, 457, 291, 393, 920, 7983, 300, 51368], "temperature": 0.0, "avg_logprob": -0.22092017260464755, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.000511003308929503}, {"id": 446, "seek": 217130, "start": 2192.1800000000003, "end": 2194.1800000000003, "text": " metadata along with it", "tokens": [51408, 26603, 2051, 365, 309, 51508], "temperature": 0.0, "avg_logprob": -0.22092017260464755, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.000511003308929503}, {"id": 447, "seek": 217130, "start": 2194.7000000000003, "end": 2196.7000000000003, "text": " So in the case of", "tokens": [51534, 407, 294, 264, 1389, 295, 51634], "temperature": 0.0, "avg_logprob": -0.22092017260464755, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.000511003308929503}, {"id": 448, "seek": 217130, "start": 2196.9, "end": 2198.9, "text": " dollar sign square braces", "tokens": [51644, 7241, 1465, 3732, 41537, 51744], "temperature": 0.0, "avg_logprob": -0.22092017260464755, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.000511003308929503}, {"id": 449, "seek": 219890, "start": 2199.5, "end": 2203.58, "text": " It always returns none actually and so this is", "tokens": [50394, 467, 1009, 11247, 6022, 767, 293, 370, 341, 307, 50598], "temperature": 0.0, "avg_logprob": -0.2454628737076469, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007791568641550839}, {"id": 450, "seek": 219890, "start": 2205.06, "end": 2206.54, "text": " More for", "tokens": [50672, 5048, 337, 50746], "temperature": 0.0, "avg_logprob": -0.2454628737076469, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007791568641550839}, {"id": 451, "seek": 219890, "start": 2206.54, "end": 2209.6600000000003, "text": " Forcing sub process mode where the context may be a little ambiguous", "tokens": [50746, 1171, 2175, 1422, 1399, 4391, 689, 264, 4319, 815, 312, 257, 707, 39465, 50902], "temperature": 0.0, "avg_logprob": -0.2454628737076469, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007791568641550839}, {"id": 452, "seek": 219890, "start": 2209.6600000000003, "end": 2213.98, "text": " You want to say like don't try to interpret this as python just run this as a command instead", "tokens": [50902, 509, 528, 281, 584, 411, 500, 380, 853, 281, 7302, 341, 382, 38797, 445, 1190, 341, 382, 257, 5622, 2602, 51118], "temperature": 0.0, "avg_logprob": -0.2454628737076469, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007791568641550839}, {"id": 453, "seek": 219890, "start": 2217.02, "end": 2219.02, "text": " The bang", "tokens": [51270, 440, 8550, 51370], "temperature": 0.0, "avg_logprob": -0.2454628737076469, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007791568641550839}, {"id": 454, "seek": 219890, "start": 2219.86, "end": 2221.86, "text": " Bracket there", "tokens": [51412, 1603, 501, 302, 456, 51512], "temperature": 0.0, "avg_logprob": -0.2454628737076469, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007791568641550839}, {"id": 455, "seek": 219890, "start": 2221.86, "end": 2227.38, "text": " So the output gets streamed to standard out still so you see it and it would run as if you just ran the command regularly", "tokens": [51512, 407, 264, 5598, 2170, 4309, 292, 281, 3832, 484, 920, 370, 291, 536, 309, 293, 309, 576, 1190, 382, 498, 291, 445, 5872, 264, 5622, 11672, 51788], "temperature": 0.0, "avg_logprob": -0.2454628737076469, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007791568641550839}, {"id": 456, "seek": 222738, "start": 2227.46, "end": 2229.46, "text": " But at the same time", "tokens": [50368, 583, 412, 264, 912, 565, 50468], "temperature": 0.0, "avg_logprob": -0.1820073757531508, "compression_ratio": 1.7432950191570882, "no_speech_prob": 0.0013872107956558466}, {"id": 457, "seek": 222738, "start": 2230.46, "end": 2234.42, "text": " Similar to the information from the capture sub process about the you know", "tokens": [50518, 10905, 281, 264, 1589, 490, 264, 7983, 1422, 1399, 466, 264, 291, 458, 50716], "temperature": 0.0, "avg_logprob": -0.1820073757531508, "compression_ratio": 1.7432950191570882, "no_speech_prob": 0.0013872107956558466}, {"id": 458, "seek": 222738, "start": 2234.42, "end": 2240.6600000000003, "text": " Starting and stopping times the arguments that were passed in if it was successful or not all of that is returned", "tokens": [50716, 16217, 293, 12767, 1413, 264, 12869, 300, 645, 4678, 294, 498, 309, 390, 4406, 420, 406, 439, 295, 300, 307, 8752, 51028], "temperature": 0.0, "avg_logprob": -0.1820073757531508, "compression_ratio": 1.7432950191570882, "no_speech_prob": 0.0013872107956558466}, {"id": 459, "seek": 222738, "start": 2241.1400000000003, "end": 2243.1400000000003, "text": " As a result of that", "tokens": [51052, 1018, 257, 1874, 295, 300, 51152], "temperature": 0.0, "avg_logprob": -0.1820073757531508, "compression_ratio": 1.7432950191570882, "no_speech_prob": 0.0013872107956558466}, {"id": 460, "seek": 222738, "start": 2243.26, "end": 2247.5, "text": " Operator so you can have the output still kind of like showing in front of you", "tokens": [51158, 12480, 1639, 370, 291, 393, 362, 264, 5598, 920, 733, 295, 411, 4099, 294, 1868, 295, 291, 51370], "temperature": 0.0, "avg_logprob": -0.1820073757531508, "compression_ratio": 1.7432950191570882, "no_speech_prob": 0.0013872107956558466}, {"id": 461, "seek": 222738, "start": 2247.5, "end": 2252.78, "text": " But still be operating on sort of you know, what were the conditions of that command did it execute successfully?", "tokens": [51370, 583, 920, 312, 7447, 322, 1333, 295, 291, 458, 11, 437, 645, 264, 4487, 295, 300, 5622, 630, 309, 14483, 10727, 30, 51634], "temperature": 0.0, "avg_logprob": -0.1820073757531508, "compression_ratio": 1.7432950191570882, "no_speech_prob": 0.0013872107956558466}, {"id": 462, "seek": 222738, "start": 2252.78, "end": 2254.78, "text": " Should I stop should I continue?", "tokens": [51634, 6454, 286, 1590, 820, 286, 2354, 30, 51734], "temperature": 0.0, "avg_logprob": -0.1820073757531508, "compression_ratio": 1.7432950191570882, "no_speech_prob": 0.0013872107956558466}, {"id": 463, "seek": 225478, "start": 2254.94, "end": 2262.1400000000003, "text": " Right, so you get this rich command pipeline object back out that you can manipulate and this particular bit of syntax is", "tokens": [50372, 1779, 11, 370, 291, 483, 341, 4593, 5622, 15517, 2657, 646, 484, 300, 291, 393, 20459, 293, 341, 1729, 857, 295, 28431, 307, 50732], "temperature": 0.0, "avg_logprob": -0.23352444636357295, "compression_ratio": 1.5169082125603865, "no_speech_prob": 0.0003569356049410999}, {"id": 464, "seek": 225478, "start": 2262.2200000000003, "end": 2264.5400000000004, "text": " The thing that really underlies a lot of conch", "tokens": [50736, 440, 551, 300, 534, 833, 24119, 257, 688, 295, 416, 339, 50852], "temperature": 0.0, "avg_logprob": -0.23352444636357295, "compression_ratio": 1.5169082125603865, "no_speech_prob": 0.0003569356049410999}, {"id": 465, "seek": 225478, "start": 2265.5800000000004, "end": 2270.7000000000003, "text": " So the what's actually happening. So if you just run LS here", "tokens": [50904, 407, 264, 437, 311, 767, 2737, 13, 407, 498, 291, 445, 1190, 36657, 510, 51160], "temperature": 0.0, "avg_logprob": -0.23352444636357295, "compression_ratio": 1.5169082125603865, "no_speech_prob": 0.0003569356049410999}, {"id": 466, "seek": 225478, "start": 2271.1000000000004, "end": 2278.34, "text": " What conch is doing is it's secretly adding in a bang square bracket around that LS?", "tokens": [51180, 708, 416, 339, 307, 884, 307, 309, 311, 22611, 5127, 294, 257, 8550, 3732, 16904, 926, 300, 36657, 30, 51542], "temperature": 0.0, "avg_logprob": -0.23352444636357295, "compression_ratio": 1.5169082125603865, "no_speech_prob": 0.0003569356049410999}, {"id": 467, "seek": 227834, "start": 2278.5, "end": 2281.5, "text": " That's it", "tokens": [50372, 663, 311, 309, 50522], "temperature": 0.0, "avg_logprob": -0.25532433986663816, "compression_ratio": 1.4852941176470589, "no_speech_prob": 0.004329133313149214}, {"id": 468, "seek": 227834, "start": 2285.42, "end": 2287.82, "text": " Okay, right column type good. Oh, yeah", "tokens": [50718, 1033, 11, 558, 7738, 2010, 665, 13, 876, 11, 1338, 50838], "temperature": 0.0, "avg_logprob": -0.25532433986663816, "compression_ratio": 1.4852941176470589, "no_speech_prob": 0.004329133313149214}, {"id": 469, "seek": 227834, "start": 2289.5, "end": 2295.6600000000003, "text": " So now that we there I would suggest we just take a few moments and just to play with each of these a little bit to get a", "tokens": [50922, 407, 586, 300, 321, 456, 286, 576, 3402, 321, 445, 747, 257, 1326, 6065, 293, 445, 281, 862, 365, 1184, 295, 613, 257, 707, 857, 281, 483, 257, 51230], "temperature": 0.0, "avg_logprob": -0.25532433986663816, "compression_ratio": 1.4852941176470589, "no_speech_prob": 0.004329133313149214}, {"id": 470, "seek": 227834, "start": 2295.6600000000003, "end": 2297.1000000000004, "text": " Handle on them", "tokens": [51230, 8854, 306, 322, 552, 51302], "temperature": 0.0, "avg_logprob": -0.25532433986663816, "compression_ratio": 1.4852941176470589, "no_speech_prob": 0.004329133313149214}, {"id": 471, "seek": 227834, "start": 2297.1000000000004, "end": 2302.1800000000003, "text": " This is basically the end of like new syntax that we're gonna introduce largely wait except for one big one coming up", "tokens": [51302, 639, 307, 1936, 264, 917, 295, 411, 777, 28431, 300, 321, 434, 799, 5366, 11611, 1699, 3993, 337, 472, 955, 472, 1348, 493, 51556], "temperature": 0.0, "avg_logprob": -0.25532433986663816, "compression_ratio": 1.4852941176470589, "no_speech_prob": 0.004329133313149214}, {"id": 472, "seek": 230218, "start": 2303.02, "end": 2308.62, "text": " But just to kind of get a sense like of how they work make sure that they match your expectations like you know", "tokens": [50406, 583, 445, 281, 733, 295, 483, 257, 2020, 411, 295, 577, 436, 589, 652, 988, 300, 436, 2995, 428, 9843, 411, 291, 458, 50686], "temperature": 0.0, "avg_logprob": -0.1937193211501207, "compression_ratio": 1.7324414715719063, "no_speech_prob": 0.0018671429716050625}, {"id": 473, "seek": 230218, "start": 2308.62, "end": 2310.8199999999997, "text": " Which what should be captured what shouldn't be captured?", "tokens": [50686, 3013, 437, 820, 312, 11828, 437, 4659, 380, 312, 11828, 30, 50796], "temperature": 0.0, "avg_logprob": -0.1937193211501207, "compression_ratio": 1.7324414715719063, "no_speech_prob": 0.0018671429716050625}, {"id": 474, "seek": 230218, "start": 2311.06, "end": 2316.4199999999996, "text": " How do you interact with the attributes of these returned command pipeline objects? What is in there?", "tokens": [50808, 1012, 360, 291, 4648, 365, 264, 17212, 295, 613, 8752, 5622, 15517, 6565, 30, 708, 307, 294, 456, 30, 51076], "temperature": 0.0, "avg_logprob": -0.1937193211501207, "compression_ratio": 1.7324414715719063, "no_speech_prob": 0.0018671429716050625}, {"id": 475, "seek": 230218, "start": 2316.94, "end": 2319.2599999999998, "text": " Is there something you would like to be in there? That's not we can talk", "tokens": [51102, 1119, 456, 746, 291, 576, 411, 281, 312, 294, 456, 30, 663, 311, 406, 321, 393, 751, 51218], "temperature": 0.0, "avg_logprob": -0.1937193211501207, "compression_ratio": 1.7324414715719063, "no_speech_prob": 0.0018671429716050625}, {"id": 476, "seek": 230218, "start": 2319.94, "end": 2322.7799999999997, "text": " You can definitely work on that and just as a general", "tokens": [51252, 509, 393, 2138, 589, 322, 300, 293, 445, 382, 257, 2674, 51394], "temperature": 0.0, "avg_logprob": -0.1937193211501207, "compression_ratio": 1.7324414715719063, "no_speech_prob": 0.0018671429716050625}, {"id": 477, "seek": 230218, "start": 2323.2999999999997, "end": 2325.54, "text": " Mnemonic for this because it's you know bunch of stuff", "tokens": [51420, 376, 25989, 11630, 337, 341, 570, 309, 311, 291, 458, 3840, 295, 1507, 51532], "temperature": 0.0, "avg_logprob": -0.1937193211501207, "compression_ratio": 1.7324414715719063, "no_speech_prob": 0.0018671429716050625}, {"id": 478, "seek": 230218, "start": 2325.54, "end": 2328.66, "text": " I've sort of come up with like curly captures and square streams", "tokens": [51532, 286, 600, 1333, 295, 808, 493, 365, 411, 32066, 27986, 293, 3732, 15842, 51688], "temperature": 0.0, "avg_logprob": -0.1937193211501207, "compression_ratio": 1.7324414715719063, "no_speech_prob": 0.0018671429716050625}, {"id": 479, "seek": 232866, "start": 2328.8599999999997, "end": 2331.58, "text": " And it's a bit misleading because it's all sort of streaming in one sense", "tokens": [50374, 400, 309, 311, 257, 857, 36429, 570, 309, 311, 439, 1333, 295, 11791, 294, 472, 2020, 50510], "temperature": 0.0, "avg_logprob": -0.17053962080446008, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.0003353155334480107}, {"id": 480, "seek": 232866, "start": 2331.58, "end": 2336.7, "text": " But like if you want output to not show up use the curly things if you do want it to show up use the square things", "tokens": [50510, 583, 411, 498, 291, 528, 5598, 281, 406, 855, 493, 764, 264, 32066, 721, 498, 291, 360, 528, 309, 281, 855, 493, 764, 264, 3732, 721, 50766], "temperature": 0.0, "avg_logprob": -0.17053962080446008, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.0003353155334480107}, {"id": 481, "seek": 232866, "start": 2339.18, "end": 2344.2999999999997, "text": " Does does anyone have any questions about this stuff, you know, we just threw a lot at you yeah back there", "tokens": [50890, 4402, 775, 2878, 362, 604, 1651, 466, 341, 1507, 11, 291, 458, 11, 321, 445, 11918, 257, 688, 412, 291, 1338, 646, 456, 51146], "temperature": 0.0, "avg_logprob": -0.17053962080446008, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.0003353155334480107}, {"id": 482, "seek": 234430, "start": 2344.7400000000002, "end": 2346.7400000000002, "text": " The last one", "tokens": [50386, 440, 1036, 472, 50486], "temperature": 0.0, "avg_logprob": -0.41208663076724644, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.020324116572737694}, {"id": 483, "seek": 234430, "start": 2353.54, "end": 2357.1400000000003, "text": " Almost so bang square bracket prints it but", "tokens": [50826, 12627, 370, 8550, 3732, 16904, 22305, 309, 457, 51006], "temperature": 0.0, "avg_logprob": -0.41208663076724644, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.020324116572737694}, {"id": 484, "seek": 234430, "start": 2357.7000000000003, "end": 2362.5, "text": " Does save it to the variable and then bang Kurt bang parentheses", "tokens": [51034, 4402, 3155, 309, 281, 264, 7006, 293, 550, 8550, 26168, 8550, 34153, 51274], "temperature": 0.0, "avg_logprob": -0.41208663076724644, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.020324116572737694}, {"id": 485, "seek": 234430, "start": 2363.26, "end": 2366.42, "text": " Prince it, but then doesn't save it to the variable. I", "tokens": [51312, 9821, 309, 11, 457, 550, 1177, 380, 3155, 309, 281, 264, 7006, 13, 286, 51470], "temperature": 0.0, "avg_logprob": -0.41208663076724644, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.020324116572737694}, {"id": 486, "seek": 234430, "start": 2368.42, "end": 2370.42, "text": " Know yeah, so", "tokens": [51570, 10265, 1338, 11, 370, 51670], "temperature": 0.0, "avg_logprob": -0.41208663076724644, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.020324116572737694}, {"id": 487, "seek": 237042, "start": 2371.42, "end": 2374.46, "text": " Basically what what's going on here is that?", "tokens": [50414, 8537, 437, 437, 311, 516, 322, 510, 307, 300, 30, 50566], "temperature": 0.0, "avg_logprob": -0.3178379612584268, "compression_ratio": 1.516778523489933, "no_speech_prob": 0.0006666284170933068}, {"id": 488, "seek": 237042, "start": 2376.66, "end": 2378.66, "text": " Dollar sign", "tokens": [50676, 32370, 1465, 50776], "temperature": 0.0, "avg_logprob": -0.3178379612584268, "compression_ratio": 1.516778523489933, "no_speech_prob": 0.0006666284170933068}, {"id": 489, "seek": 237042, "start": 2379.3, "end": 2380.7000000000003, "text": " parentheses", "tokens": [50808, 34153, 50878], "temperature": 0.0, "avg_logprob": -0.3178379612584268, "compression_ratio": 1.516778523489933, "no_speech_prob": 0.0006666284170933068}, {"id": 490, "seek": 237042, "start": 2380.7000000000003, "end": 2388.42, "text": " Returns a string right it doesn't print it, but if we wanted to stream that so we use bang. What should that return?", "tokens": [50878, 24350, 82, 257, 6798, 558, 309, 1177, 380, 4482, 309, 11, 457, 498, 321, 1415, 281, 4309, 300, 370, 321, 764, 8550, 13, 708, 820, 300, 2736, 30, 51264], "temperature": 0.0, "avg_logprob": -0.3178379612584268, "compression_ratio": 1.516778523489933, "no_speech_prob": 0.0006666284170933068}, {"id": 491, "seek": 237042, "start": 2393.46, "end": 2398.5, "text": " Sorry, yeah, so what should that return?", "tokens": [51516, 4919, 11, 1338, 11, 370, 437, 820, 300, 2736, 30, 51768], "temperature": 0.0, "avg_logprob": -0.3178379612584268, "compression_ratio": 1.516778523489933, "no_speech_prob": 0.0006666284170933068}, {"id": 492, "seek": 240042, "start": 2400.42, "end": 2402.42, "text": " None right because", "tokens": [50364, 14492, 558, 570, 50464], "temperature": 0.0, "avg_logprob": -0.34342696449973364, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.004753703251481056}, {"id": 493, "seek": 240042, "start": 2403.62, "end": 2405.62, "text": " No, it's not", "tokens": [50524, 883, 11, 309, 311, 406, 50624], "temperature": 0.0, "avg_logprob": -0.34342696449973364, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.004753703251481056}, {"id": 494, "seek": 240042, "start": 2405.86, "end": 2407.94, "text": " Did I do something wrong? Yeah, what did I do?", "tokens": [50636, 2589, 286, 360, 746, 2085, 30, 865, 11, 437, 630, 286, 360, 30, 50740], "temperature": 0.0, "avg_logprob": -0.34342696449973364, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.004753703251481056}, {"id": 495, "seek": 240042, "start": 2410.82, "end": 2412.82, "text": " No, not all it's not", "tokens": [50884, 883, 11, 406, 439, 309, 311, 406, 50984], "temperature": 0.0, "avg_logprob": -0.34342696449973364, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.004753703251481056}, {"id": 496, "seek": 240042, "start": 2414.3, "end": 2418.58, "text": " No, it's still maybe it's that it's like when you do a sign", "tokens": [51058, 883, 11, 309, 311, 920, 1310, 309, 311, 300, 309, 311, 411, 562, 291, 360, 257, 1465, 51272], "temperature": 0.0, "avg_logprob": -0.34342696449973364, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.004753703251481056}, {"id": 497, "seek": 240042, "start": 2421.94, "end": 2426.3, "text": " No, that's still the thing so oh no, sorry, haha I did this wrong", "tokens": [51440, 883, 11, 300, 311, 920, 264, 551, 370, 1954, 572, 11, 2597, 11, 17236, 286, 630, 341, 2085, 51658], "temperature": 0.0, "avg_logprob": -0.34342696449973364, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.004753703251481056}, {"id": 498, "seek": 242630, "start": 2427.3, "end": 2429.38, "text": " Yeah", "tokens": [50414, 865, 50518], "temperature": 0.0, "avg_logprob": -0.22713026793106741, "compression_ratio": 1.8136363636363637, "no_speech_prob": 0.000487773708300665}, {"id": 499, "seek": 242630, "start": 2429.38, "end": 2437.1400000000003, "text": " So if you do dollar sign if you change these two square brackets because you want to stream the square brackets kind of look like pipes", "tokens": [50518, 407, 498, 291, 360, 7241, 1465, 498, 291, 1319, 613, 732, 3732, 26179, 570, 291, 528, 281, 4309, 264, 3732, 26179, 733, 295, 574, 411, 21882, 50906], "temperature": 0.0, "avg_logprob": -0.22713026793106741, "compression_ratio": 1.8136363636363637, "no_speech_prob": 0.000487773708300665}, {"id": 500, "seek": 242630, "start": 2439.1800000000003, "end": 2443.34, "text": " That should return none rather than a string because there's no there's nothing to return", "tokens": [51008, 663, 820, 2736, 6022, 2831, 813, 257, 6798, 570, 456, 311, 572, 456, 311, 1825, 281, 2736, 51216], "temperature": 0.0, "avg_logprob": -0.22713026793106741, "compression_ratio": 1.8136363636363637, "no_speech_prob": 0.000487773708300665}, {"id": 501, "seek": 242630, "start": 2444.46, "end": 2446.0600000000004, "text": " You're already", "tokens": [51272, 509, 434, 1217, 51352], "temperature": 0.0, "avg_logprob": -0.22713026793106741, "compression_ratio": 1.8136363636363637, "no_speech_prob": 0.000487773708300665}, {"id": 502, "seek": 242630, "start": 2446.0600000000004, "end": 2452.1800000000003, "text": " This this the coat the output that's coming in has already already been consumed and printed", "tokens": [51352, 639, 341, 264, 10690, 264, 5598, 300, 311, 1348, 294, 575, 1217, 1217, 668, 21226, 293, 13567, 51658], "temperature": 0.0, "avg_logprob": -0.22713026793106741, "compression_ratio": 1.8136363636363637, "no_speech_prob": 0.000487773708300665}, {"id": 503, "seek": 242630, "start": 2452.1800000000003, "end": 2455.38, "text": " And so it's been streamed and there's nothing left to return", "tokens": [51658, 400, 370, 309, 311, 668, 4309, 292, 293, 456, 311, 1825, 1411, 281, 2736, 51818], "temperature": 0.0, "avg_logprob": -0.22713026793106741, "compression_ratio": 1.8136363636363637, "no_speech_prob": 0.000487773708300665}, {"id": 504, "seek": 245538, "start": 2455.7400000000002, "end": 2457.7400000000002, "text": " the", "tokens": [50382, 264, 50482], "temperature": 0.0, "avg_logprob": -0.2698372927579013, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.0013248100876808167}, {"id": 505, "seek": 245538, "start": 2459.6600000000003, "end": 2466.82, "text": " Which is why you see like because we did this is none we actually got this we got this true printed behind us", "tokens": [50578, 3013, 307, 983, 291, 536, 411, 570, 321, 630, 341, 307, 6022, 321, 767, 658, 341, 321, 658, 341, 2074, 13567, 2261, 505, 50936], "temperature": 0.0, "avg_logprob": -0.2698372927579013, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.0013248100876808167}, {"id": 506, "seek": 245538, "start": 2467.38, "end": 2471.78, "text": " Even because the the command actually printed right we didn't capture it", "tokens": [50964, 2754, 570, 264, 264, 5622, 767, 13567, 558, 321, 994, 380, 7983, 309, 51184], "temperature": 0.0, "avg_logprob": -0.2698372927579013, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.0013248100876808167}, {"id": 507, "seek": 245538, "start": 2472.86, "end": 2474.86, "text": " if you wanted to", "tokens": [51238, 498, 291, 1415, 281, 51338], "temperature": 0.0, "avg_logprob": -0.2698372927579013, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.0013248100876808167}, {"id": 508, "seek": 245538, "start": 2475.3, "end": 2477.3, "text": " capture it", "tokens": [51360, 7983, 309, 51460], "temperature": 0.0, "avg_logprob": -0.2698372927579013, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.0013248100876808167}, {"id": 509, "seek": 245538, "start": 2478.02, "end": 2480.02, "text": " Or if you wanted to do you know bang", "tokens": [51496, 1610, 498, 291, 1415, 281, 360, 291, 458, 8550, 51596], "temperature": 0.0, "avg_logprob": -0.2698372927579013, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.0013248100876808167}, {"id": 510, "seek": 248002, "start": 2480.9, "end": 2485.1, "text": " Parentheses the bang is what gives you the object back", "tokens": [50408, 430, 20616, 23639, 264, 8550, 307, 437, 2709, 291, 264, 2657, 646, 50618], "temperature": 0.0, "avg_logprob": -0.24306320753253874, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0038834773004055023}, {"id": 511, "seek": 248002, "start": 2486.02, "end": 2491.18, "text": " And whether it's streaming or not is determined based on whether it's square brackets or not", "tokens": [50664, 400, 1968, 309, 311, 11791, 420, 406, 307, 9540, 2361, 322, 1968, 309, 311, 3732, 26179, 420, 406, 50922], "temperature": 0.0, "avg_logprob": -0.24306320753253874, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0038834773004055023}, {"id": 512, "seek": 248002, "start": 2495.3, "end": 2500.42, "text": " Yeah, so so the way to think about this is dollar sign return strings", "tokens": [51128, 865, 11, 370, 370, 264, 636, 281, 519, 466, 341, 307, 7241, 1465, 2736, 13985, 51384], "temperature": 0.0, "avg_logprob": -0.24306320753253874, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0038834773004055023}, {"id": 513, "seek": 248002, "start": 2501.78, "end": 2503.78, "text": " and", "tokens": [51452, 293, 51552], "temperature": 0.0, "avg_logprob": -0.24306320753253874, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0038834773004055023}, {"id": 514, "seek": 248002, "start": 2503.98, "end": 2505.98, "text": " bang will return", "tokens": [51562, 8550, 486, 2736, 51662], "temperature": 0.0, "avg_logprob": -0.24306320753253874, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0038834773004055023}, {"id": 515, "seek": 250598, "start": 2506.02, "end": 2514.34, "text": " Something else and then square brackets or in parentheses will capture and square brackets will stream", "tokens": [50366, 6595, 1646, 293, 550, 3732, 26179, 420, 294, 34153, 486, 7983, 293, 3732, 26179, 486, 4309, 50782], "temperature": 0.0, "avg_logprob": -0.3131720599006204, "compression_ratio": 1.576158940397351, "no_speech_prob": 0.0028441420290619135}, {"id": 516, "seek": 250598, "start": 2517.86, "end": 2519.86, "text": " 90 yeah", "tokens": [50958, 4289, 1338, 51058], "temperature": 0.0, "avg_logprob": -0.3131720599006204, "compression_ratio": 1.576158940397351, "no_speech_prob": 0.0028441420290619135}, {"id": 517, "seek": 250598, "start": 2526.1, "end": 2531.34, "text": " There is there is functionally no difference between bang with square brackets and bang with", "tokens": [51370, 821, 307, 456, 307, 2445, 379, 572, 2649, 1296, 8550, 365, 3732, 26179, 293, 8550, 365, 51632], "temperature": 0.0, "avg_logprob": -0.3131720599006204, "compression_ratio": 1.576158940397351, "no_speech_prob": 0.0028441420290619135}, {"id": 518, "seek": 250598, "start": 2532.58, "end": 2534.9, "text": " And and just typing the LS command", "tokens": [51694, 400, 293, 445, 18444, 264, 36657, 5622, 51810], "temperature": 0.0, "avg_logprob": -0.3131720599006204, "compression_ratio": 1.576158940397351, "no_speech_prob": 0.0028441420290619135}, {"id": 519, "seek": 253490, "start": 2535.5, "end": 2537.5, "text": " Except in ambiguous cases", "tokens": [50394, 16192, 294, 39465, 3331, 50494], "temperature": 0.0, "avg_logprob": -0.27529286626559585, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.001987483585253358}, {"id": 520, "seek": 253490, "start": 2537.9, "end": 2542.42, "text": " so in cases where you have both a Python function and a", "tokens": [50514, 370, 294, 3331, 689, 291, 362, 1293, 257, 15329, 2445, 293, 257, 50740], "temperature": 0.0, "avg_logprob": -0.27529286626559585, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.001987483585253358}, {"id": 521, "seek": 253490, "start": 2543.3, "end": 2550.7400000000002, "text": " System command with the same name or a Python variable and a system command with the same name like say I just said", "tokens": [50784, 8910, 5622, 365, 264, 912, 1315, 420, 257, 15329, 7006, 293, 257, 1185, 5622, 365, 264, 912, 1315, 411, 584, 286, 445, 848, 51156], "temperature": 0.0, "avg_logprob": -0.27529286626559585, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.001987483585253358}, {"id": 522, "seek": 253490, "start": 2551.26, "end": 2556.82, "text": " echo equals Wow or something right if I now went to run like echo", "tokens": [51182, 14300, 6915, 3153, 420, 746, 558, 498, 286, 586, 1437, 281, 1190, 411, 14300, 51460], "temperature": 0.0, "avg_logprob": -0.27529286626559585, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.001987483585253358}, {"id": 523, "seek": 253490, "start": 2559.06, "end": 2561.06, "text": " Hello world", "tokens": [51572, 2425, 1002, 51672], "temperature": 0.0, "avg_logprob": -0.27529286626559585, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.001987483585253358}, {"id": 524, "seek": 256106, "start": 2562.06, "end": 2567.74, "text": " Well that'll work because the syntax is not ambiguous, but like let's say I went to write like", "tokens": [50414, 1042, 300, 603, 589, 570, 264, 28431, 307, 406, 39465, 11, 457, 411, 718, 311, 584, 286, 1437, 281, 2464, 411, 50698], "temperature": 0.0, "avg_logprob": -0.2699483489990234, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.0003459481813479215}, {"id": 525, "seek": 256106, "start": 2568.86, "end": 2570.22, "text": " echo", "tokens": [50754, 14300, 50822], "temperature": 0.0, "avg_logprob": -0.2699483489990234, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.0003459481813479215}, {"id": 526, "seek": 256106, "start": 2570.22, "end": 2571.2999999999997, "text": " like", "tokens": [50822, 411, 50876], "temperature": 0.0, "avg_logprob": -0.2699483489990234, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.0003459481813479215}, {"id": 527, "seek": 256106, "start": 2571.2999999999997, "end": 2573.2999999999997, "text": " dash", "tokens": [50876, 8240, 50976], "temperature": 0.0, "avg_logprob": -0.2699483489990234, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.0003459481813479215}, {"id": 528, "seek": 256106, "start": 2574.82, "end": 2578.02, "text": " What's another echo minus echo for example", "tokens": [51052, 708, 311, 1071, 14300, 3175, 14300, 337, 1365, 51212], "temperature": 0.0, "avg_logprob": -0.2699483489990234, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.0003459481813479215}, {"id": 529, "seek": 256106, "start": 2578.62, "end": 2580.62, "text": " Which would be torque totally?", "tokens": [51242, 3013, 576, 312, 16437, 3879, 30, 51342], "temperature": 0.0, "avg_logprob": -0.2699483489990234, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.0003459481813479215}, {"id": 530, "seek": 256106, "start": 2580.9, "end": 2588.2999999999997, "text": " Normal well, okay that but we would want to print minus echo right in a normal in a normal shell", "tokens": [51356, 21277, 731, 11, 1392, 300, 457, 321, 576, 528, 281, 4482, 3175, 14300, 558, 294, 257, 2710, 294, 257, 2710, 8720, 51726], "temperature": 0.0, "avg_logprob": -0.2699483489990234, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.0003459481813479215}, {"id": 531, "seek": 258830, "start": 2588.38, "end": 2595.78, "text": " But both of these are variables, and so if you need to you can always explicitly put it in bang square brackets", "tokens": [50368, 583, 1293, 295, 613, 366, 9102, 11, 293, 370, 498, 291, 643, 281, 291, 393, 1009, 20803, 829, 309, 294, 8550, 3732, 26179, 50738], "temperature": 0.0, "avg_logprob": -0.18642139434814453, "compression_ratio": 1.6505376344086022, "no_speech_prob": 0.0018094846745952964}, {"id": 532, "seek": 258830, "start": 2595.78, "end": 2597.78, "text": " And then it'll run", "tokens": [50738, 400, 550, 309, 603, 1190, 50838], "temperature": 0.0, "avg_logprob": -0.18642139434814453, "compression_ratio": 1.6505376344086022, "no_speech_prob": 0.0018094846745952964}, {"id": 533, "seek": 258830, "start": 2599.3, "end": 2605.48, "text": " Yeah, so there's two things going on here, so or there's one thing going on here one or two so there's", "tokens": [50914, 865, 11, 370, 456, 311, 732, 721, 516, 322, 510, 11, 370, 420, 456, 311, 472, 551, 516, 322, 510, 472, 420, 732, 370, 456, 311, 51223], "temperature": 0.0, "avg_logprob": -0.18642139434814453, "compression_ratio": 1.6505376344086022, "no_speech_prob": 0.0018094846745952964}, {"id": 534, "seek": 258830, "start": 2609.1800000000003, "end": 2612.94, "text": " If you're observing it there are two and then yeah, it's it's complicated", "tokens": [51408, 759, 291, 434, 22107, 309, 456, 366, 732, 293, 550, 1338, 11, 309, 311, 309, 311, 6179, 51596], "temperature": 0.0, "avg_logprob": -0.18642139434814453, "compression_ratio": 1.6505376344086022, "no_speech_prob": 0.0018094846745952964}, {"id": 535, "seek": 261294, "start": 2613.94, "end": 2621.14, "text": " Basically, what's happening is there's a formal conch language that always uses bang square bracket", "tokens": [50414, 8537, 11, 437, 311, 2737, 307, 456, 311, 257, 9860, 416, 339, 2856, 300, 1009, 4960, 8550, 3732, 16904, 50774], "temperature": 0.0, "avg_logprob": -0.3019137004065135, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.0007435005973093212}, {"id": 536, "seek": 261294, "start": 2621.98, "end": 2624.7400000000002, "text": " Okay, and then we have", "tokens": [50816, 1033, 11, 293, 550, 321, 362, 50954], "temperature": 0.0, "avg_logprob": -0.3019137004065135, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.0007435005973093212}, {"id": 537, "seek": 261294, "start": 2625.58, "end": 2627.02, "text": " What we call?", "tokens": [50996, 708, 321, 818, 30, 51068], "temperature": 0.0, "avg_logprob": -0.3019137004065135, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.0007435005973093212}, {"id": 538, "seek": 261294, "start": 2627.02, "end": 2633.3, "text": " So there's a context free grammar that we use that always uses the square brackets", "tokens": [51068, 407, 456, 311, 257, 4319, 1737, 22317, 300, 321, 764, 300, 1009, 4960, 264, 3732, 26179, 51382], "temperature": 0.0, "avg_logprob": -0.3019137004065135, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.0007435005973093212}, {"id": 539, "seek": 261294, "start": 2633.7400000000002, "end": 2637.38, "text": " Then we do this context aware", "tokens": [51404, 1396, 321, 360, 341, 4319, 3650, 51586], "temperature": 0.0, "avg_logprob": -0.3019137004065135, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.0007435005973093212}, {"id": 540, "seek": 263738, "start": 2638.2200000000003, "end": 2645.5, "text": " Grammar munging so we know because we know what's on your what commands are available and what your", "tokens": [50406, 22130, 6209, 275, 1063, 278, 370, 321, 458, 570, 321, 458, 437, 311, 322, 428, 437, 16901, 366, 2435, 293, 437, 428, 50770], "temperature": 0.0, "avg_logprob": -0.2526889349284925, "compression_ratio": 1.565934065934066, "no_speech_prob": 0.004680192098021507}, {"id": 541, "seek": 263738, "start": 2645.94, "end": 2653.06, "text": " Execution context is we can shoot we actually go back and rewrite the AST of your code", "tokens": [50792, 17662, 1448, 4319, 307, 321, 393, 3076, 321, 767, 352, 646, 293, 28132, 264, 316, 6840, 295, 428, 3089, 51148], "temperature": 0.0, "avg_logprob": -0.2526889349284925, "compression_ratio": 1.565934065934066, "no_speech_prob": 0.004680192098021507}, {"id": 542, "seek": 263738, "start": 2653.54, "end": 2655.54, "text": " In such a way that we think it will execute", "tokens": [51172, 682, 1270, 257, 636, 300, 321, 519, 309, 486, 14483, 51272], "temperature": 0.0, "avg_logprob": -0.2526889349284925, "compression_ratio": 1.565934065934066, "no_speech_prob": 0.004680192098021507}, {"id": 543, "seek": 263738, "start": 2656.94, "end": 2658.94, "text": " Before we try to execute it", "tokens": [51342, 4546, 321, 853, 281, 14483, 309, 51442], "temperature": 0.0, "avg_logprob": -0.2526889349284925, "compression_ratio": 1.565934065934066, "no_speech_prob": 0.004680192098021507}, {"id": 544, "seek": 263738, "start": 2659.5, "end": 2661.5, "text": " And that's what's going on", "tokens": [51470, 400, 300, 311, 437, 311, 516, 322, 51570], "temperature": 0.0, "avg_logprob": -0.2526889349284925, "compression_ratio": 1.565934065934066, "no_speech_prob": 0.004680192098021507}, {"id": 545, "seek": 266150, "start": 2661.5, "end": 2667.22, "text": " And so if you need to you can always go to the formal grammar and you can even turn that off", "tokens": [50364, 400, 370, 498, 291, 643, 281, 291, 393, 1009, 352, 281, 264, 9860, 22317, 293, 291, 393, 754, 1261, 300, 766, 50650], "temperature": 0.0, "avg_logprob": -0.1528322982788086, "compression_ratio": 1.736, "no_speech_prob": 0.0014548709150403738}, {"id": 546, "seek": 266150, "start": 2667.9, "end": 2674.22, "text": " In the in the exact we're definitely not doing that in this tutorial, but you can turn that off and make sure it's always formal", "tokens": [50684, 682, 264, 294, 264, 1900, 321, 434, 2138, 406, 884, 300, 294, 341, 7073, 11, 457, 291, 393, 1261, 300, 766, 293, 652, 988, 309, 311, 1009, 9860, 51000], "temperature": 0.0, "avg_logprob": -0.1528322982788086, "compression_ratio": 1.736, "no_speech_prob": 0.0014548709150403738}, {"id": 547, "seek": 266150, "start": 2675.1, "end": 2679.54, "text": " That's a terrible way to live because you always have to type this bang exclamation point", "tokens": [51044, 663, 311, 257, 6237, 636, 281, 1621, 570, 291, 1009, 362, 281, 2010, 341, 8550, 1624, 43233, 935, 51266], "temperature": 0.0, "avg_logprob": -0.1528322982788086, "compression_ratio": 1.736, "no_speech_prob": 0.0014548709150403738}, {"id": 548, "seek": 266150, "start": 2679.54, "end": 2686.06, "text": " The whole idea behind conscious to make the things as easy as possible and match what your brain thinks it should be doing", "tokens": [51266, 440, 1379, 1558, 2261, 6648, 281, 652, 264, 721, 382, 1858, 382, 1944, 293, 2995, 437, 428, 3567, 7309, 309, 820, 312, 884, 51592], "temperature": 0.0, "avg_logprob": -0.1528322982788086, "compression_ratio": 1.736, "no_speech_prob": 0.0014548709150403738}, {"id": 549, "seek": 268606, "start": 2686.14, "end": 2692.86, "text": " Like your brain thinks, you know ls-l should be a command and it just because that's not a python variable", "tokens": [50368, 1743, 428, 3567, 7309, 11, 291, 458, 287, 82, 12, 75, 820, 312, 257, 5622, 293, 309, 445, 570, 300, 311, 406, 257, 38797, 7006, 50704], "temperature": 0.0, "avg_logprob": -0.18034904408005048, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.04080866277217865}, {"id": 550, "seek": 268606, "start": 2692.86, "end": 2695.42, "text": " Doesn't mean it shouldn't be a it shouldn't be something that works", "tokens": [50704, 12955, 380, 914, 309, 4659, 380, 312, 257, 309, 4659, 380, 312, 746, 300, 1985, 50832], "temperature": 0.0, "avg_logprob": -0.18034904408005048, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.04080866277217865}, {"id": 551, "seek": 268606, "start": 2695.42, "end": 2702.7799999999997, "text": " And so we have a lot of like heuristics that are relatively simple that get get you incredibly far", "tokens": [50832, 400, 370, 321, 362, 257, 688, 295, 411, 415, 374, 6006, 300, 366, 7226, 2199, 300, 483, 483, 291, 6252, 1400, 51200], "temperature": 0.0, "avg_logprob": -0.18034904408005048, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.04080866277217865}, {"id": 552, "seek": 268606, "start": 2703.74, "end": 2710.2999999999997, "text": " And but if those heuristics fail for some reason which they are they it's very very infrequent", "tokens": [51248, 400, 457, 498, 729, 415, 374, 6006, 3061, 337, 512, 1778, 597, 436, 366, 436, 309, 311, 588, 588, 1536, 265, 28842, 51576], "temperature": 0.0, "avg_logprob": -0.18034904408005048, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.04080866277217865}, {"id": 553, "seek": 268606, "start": 2710.2999999999997, "end": 2712.2999999999997, "text": " You can always go back to the formal grammar", "tokens": [51576, 509, 393, 1009, 352, 646, 281, 264, 9860, 22317, 51676], "temperature": 0.0, "avg_logprob": -0.18034904408005048, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.04080866277217865}, {"id": 554, "seek": 268606, "start": 2712.54, "end": 2714.54, "text": " so", "tokens": [51688, 370, 51788], "temperature": 0.0, "avg_logprob": -0.18034904408005048, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.04080866277217865}, {"id": 555, "seek": 271606, "start": 2717.02, "end": 2719.02, "text": " But", "tokens": [50412, 583, 50512], "temperature": 0.0, "avg_logprob": -0.3419067707467586, "compression_ratio": 1.4841269841269842, "no_speech_prob": 0.0017509488388895988}, {"id": 556, "seek": 271606, "start": 2722.02, "end": 2725.22, "text": " Yeah, I should maybe say curves cat mnemonics are hard", "tokens": [50662, 865, 11, 286, 820, 1310, 584, 19490, 3857, 275, 25989, 266, 1167, 366, 1152, 50822], "temperature": 0.0, "avg_logprob": -0.3419067707467586, "compression_ratio": 1.4841269841269842, "no_speech_prob": 0.0017509488388895988}, {"id": 557, "seek": 271606, "start": 2734.2599999999998, "end": 2740.94, "text": " So so the curly braces are for like with the dollar curly braces for like an environment lookup or for accessing the environment", "tokens": [51274, 407, 370, 264, 32066, 41537, 366, 337, 411, 365, 264, 7241, 32066, 41537, 337, 411, 364, 2823, 574, 1010, 420, 337, 26440, 264, 2823, 51608], "temperature": 0.0, "avg_logprob": -0.3419067707467586, "compression_ratio": 1.4841269841269842, "no_speech_prob": 0.0017509488388895988}, {"id": 558, "seek": 274094, "start": 2741.94, "end": 2747.02, "text": " Whereas these are more just generally capturing a command that you're running and capturing the output of it", "tokens": [50414, 13813, 613, 366, 544, 445, 5101, 23384, 257, 5622, 300, 291, 434, 2614, 293, 23384, 264, 5598, 295, 309, 50668], "temperature": 0.0, "avg_logprob": -0.23042810440063477, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0025099727790802717}, {"id": 559, "seek": 274094, "start": 2749.46, "end": 2753.1, "text": " Right so this looks up a variable in the environment", "tokens": [50790, 1779, 370, 341, 1542, 493, 257, 7006, 294, 264, 2823, 50972], "temperature": 0.0, "avg_logprob": -0.23042810440063477, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0025099727790802717}, {"id": 560, "seek": 274094, "start": 2755.62, "end": 2760.1, "text": " Yeah, rather than yeah rather than", "tokens": [51098, 865, 11, 2831, 813, 1338, 2831, 813, 51322], "temperature": 0.0, "avg_logprob": -0.23042810440063477, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0025099727790802717}, {"id": 561, "seek": 274094, "start": 2761.86, "end": 2763.86, "text": " Running a command so yeah", "tokens": [51410, 28136, 257, 5622, 370, 1338, 51510], "temperature": 0.0, "avg_logprob": -0.23042810440063477, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0025099727790802717}, {"id": 562, "seek": 277094, "start": 2770.94, "end": 2787.18, "text": " Okay, so so the question so the question is what what's going on here, so you're saying ls equals", "tokens": [50364, 1033, 11, 370, 370, 264, 1168, 370, 264, 1168, 307, 437, 437, 311, 516, 322, 510, 11, 370, 291, 434, 1566, 287, 82, 6915, 51176], "temperature": 0.0, "avg_logprob": -0.33071952953673245, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.004828100558370352}, {"id": 563, "seek": 277094, "start": 2791.34, "end": 2796.46, "text": " So if you say ls equals one here, okay, and then you say ls", "tokens": [51384, 407, 498, 291, 584, 287, 82, 6915, 472, 510, 11, 1392, 11, 293, 550, 291, 584, 287, 82, 51640], "temperature": 0.0, "avg_logprob": -0.33071952953673245, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.004828100558370352}, {"id": 564, "seek": 277094, "start": 2797.7000000000003, "end": 2799.7000000000003, "text": " Mot you then you were saying ls", "tokens": [51702, 8956, 291, 550, 291, 645, 1566, 287, 82, 51802], "temperature": 0.0, "avg_logprob": -0.33071952953673245, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.004828100558370352}, {"id": 565, "seek": 280094, "start": 2801.38, "end": 2803.38, "text": " Uh-huh", "tokens": [50386, 4019, 12, 18710, 50486], "temperature": 0.0, "avg_logprob": -0.31066679618727994, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.0010985282715409994}, {"id": 566, "seek": 280094, "start": 2803.7400000000002, "end": 2810.26, "text": " Right, so why does this happen well this happens because l is not a variable in your python context", "tokens": [50504, 1779, 11, 370, 983, 775, 341, 1051, 731, 341, 2314, 570, 287, 307, 406, 257, 7006, 294, 428, 38797, 4319, 50830], "temperature": 0.0, "avg_logprob": -0.31066679618727994, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.0010985282715409994}, {"id": 567, "seek": 280094, "start": 2811.18, "end": 2815.1, "text": " If you just do ls, and then we dot it right this is a", "tokens": [50876, 759, 291, 445, 360, 287, 82, 11, 293, 550, 321, 5893, 309, 558, 341, 307, 257, 51072], "temperature": 0.0, "avg_logprob": -0.31066679618727994, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.0010985282715409994}, {"id": 568, "seek": 280094, "start": 2815.94, "end": 2819.02, "text": " LS itself is just the integer one", "tokens": [51114, 36657, 2564, 307, 445, 264, 24922, 472, 51268], "temperature": 0.0, "avg_logprob": -0.31066679618727994, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.0010985282715409994}, {"id": 569, "seek": 280094, "start": 2820.1, "end": 2826.82, "text": " Right the the the the bang square brackets are capturing the whole thing", "tokens": [51322, 1779, 264, 264, 264, 264, 8550, 3732, 26179, 366, 23384, 264, 1379, 551, 51658], "temperature": 0.0, "avg_logprob": -0.31066679618727994, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.0010985282715409994}, {"id": 570, "seek": 282682, "start": 2827.46, "end": 2839.5, "text": " So yeah, so if I set l equal to one and I do ls minus l you'll get zero because they're both variables", "tokens": [50396, 407, 1338, 11, 370, 498, 286, 992, 287, 2681, 281, 472, 293, 286, 360, 287, 82, 3175, 287, 291, 603, 483, 4018, 570, 436, 434, 1293, 9102, 50998], "temperature": 0.0, "avg_logprob": -0.3394092983669705, "compression_ratio": 1.4513888888888888, "no_speech_prob": 0.006902043242007494}, {"id": 571, "seek": 282682, "start": 2842.06, "end": 2847.2200000000003, "text": " Python always wins right so the Python invite the Python context always wins", "tokens": [51126, 15329, 1009, 10641, 558, 370, 264, 15329, 7980, 264, 15329, 4319, 1009, 10641, 51384], "temperature": 0.0, "avg_logprob": -0.3394092983669705, "compression_ratio": 1.4513888888888888, "no_speech_prob": 0.006902043242007494}, {"id": 572, "seek": 282682, "start": 2848.94, "end": 2852.6600000000003, "text": " Yeah, your system is whatever", "tokens": [51470, 865, 11, 428, 1185, 307, 2035, 51656], "temperature": 0.0, "avg_logprob": -0.3394092983669705, "compression_ratio": 1.4513888888888888, "no_speech_prob": 0.006902043242007494}, {"id": 573, "seek": 285266, "start": 2853.06, "end": 2855.06, "text": " Okay", "tokens": [50384, 1033, 50484], "temperature": 0.0, "avg_logprob": -0.198347270488739, "compression_ratio": 1.688, "no_speech_prob": 0.0037633744068443775}, {"id": 574, "seek": 285266, "start": 2858.54, "end": 2863.94, "text": " Having thoroughly confused everyone I think now we can just take a few minutes for people just to play around with these a", "tokens": [50658, 10222, 17987, 9019, 1518, 286, 519, 586, 321, 393, 445, 747, 257, 1326, 2077, 337, 561, 445, 281, 862, 926, 365, 613, 257, 50928], "temperature": 0.0, "avg_logprob": -0.198347270488739, "compression_ratio": 1.688, "no_speech_prob": 0.0037633744068443775}, {"id": 575, "seek": 285266, "start": 2863.94, "end": 2869.7799999999997, "text": " Little more get a sense of what's capturing and what's not what comes back from these commands of what's returned and what's printed", "tokens": [50928, 8022, 544, 483, 257, 2020, 295, 437, 311, 23384, 293, 437, 311, 406, 437, 1487, 646, 490, 613, 16901, 295, 437, 311, 8752, 293, 437, 311, 13567, 51220], "temperature": 0.0, "avg_logprob": -0.198347270488739, "compression_ratio": 1.688, "no_speech_prob": 0.0037633744068443775}, {"id": 576, "seek": 285266, "start": 2870.5, "end": 2872.2999999999997, "text": " Just to build up a little familiarity with it", "tokens": [51256, 1449, 281, 1322, 493, 257, 707, 49828, 365, 309, 51346], "temperature": 0.0, "avg_logprob": -0.198347270488739, "compression_ratio": 1.688, "no_speech_prob": 0.0037633744068443775}, {"id": 577, "seek": 285266, "start": 2872.2999999999997, "end": 2877.22, "text": " And then we'll continue on and feel free to raise hands and we can either circulate and just answer from the podium", "tokens": [51346, 400, 550, 321, 603, 2354, 322, 293, 841, 1737, 281, 5300, 2377, 293, 321, 393, 2139, 12515, 473, 293, 445, 1867, 490, 264, 26827, 51592], "temperature": 0.0, "avg_logprob": -0.198347270488739, "compression_ratio": 1.688, "no_speech_prob": 0.0037633744068443775}, {"id": 578, "seek": 287722, "start": 2878.22, "end": 2884.18, "text": " And we could fix this curly captures thing from yeah mnemonics", "tokens": [50414, 400, 321, 727, 3191, 341, 32066, 27986, 551, 490, 1338, 275, 25989, 266, 1167, 50712], "temperature": 0.0, "avg_logprob": -0.2903676836678151, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.004902719520032406}, {"id": 579, "seek": 287722, "start": 2884.8599999999997, "end": 2888.52, "text": " Is anyone having issues with their system still or installing or anything?", "tokens": [50746, 1119, 2878, 1419, 2663, 365, 641, 1185, 920, 420, 20762, 420, 1340, 30, 50929], "temperature": 0.0, "avg_logprob": -0.2903676836678151, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.004902719520032406}, {"id": 580, "seek": 287722, "start": 2889.98, "end": 2891.98, "text": " Yeah, or do you want me to come over?", "tokens": [51002, 865, 11, 420, 360, 291, 528, 385, 281, 808, 670, 30, 51102], "temperature": 0.0, "avg_logprob": -0.2903676836678151, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.004902719520032406}, {"id": 581, "seek": 287722, "start": 2893.8999999999996, "end": 2900.8599999999997, "text": " Just really quickly we had a question about for people who have used vi mode in terminals or in shelves before and want to do that", "tokens": [51198, 1449, 534, 2661, 321, 632, 257, 1168, 466, 337, 561, 567, 362, 1143, 1932, 4391, 294, 38579, 420, 294, 24349, 949, 293, 528, 281, 360, 300, 51546], "temperature": 0.0, "avg_logprob": -0.2903676836678151, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.004902719520032406}, {"id": 582, "seek": 287722, "start": 2900.8599999999997, "end": 2904.48, "text": " You can do that. You just need to set vi mode equals true", "tokens": [51546, 509, 393, 360, 300, 13, 509, 445, 643, 281, 992, 1932, 4391, 6915, 2074, 51727], "temperature": 0.0, "avg_logprob": -0.2903676836678151, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.004902719520032406}, {"id": 583, "seek": 290722, "start": 2907.22, "end": 2913.3599999999997, "text": " Yeah, and then you can bounce around your current line using you know zero g whatever", "tokens": [50364, 865, 11, 293, 550, 291, 393, 15894, 926, 428, 2190, 1622, 1228, 291, 458, 4018, 290, 2035, 50671], "temperature": 0.0, "avg_logprob": -0.27718338759049127, "compression_ratio": 1.5580357142857142, "no_speech_prob": 0.0011157700791954994}, {"id": 584, "seek": 290722, "start": 2915.3999999999996, "end": 2917.3999999999996, "text": " Yep, and then we'll just load it by default", "tokens": [50773, 7010, 11, 293, 550, 321, 603, 445, 3677, 309, 538, 7576, 50873], "temperature": 0.0, "avg_logprob": -0.27718338759049127, "compression_ratio": 1.5580357142857142, "no_speech_prob": 0.0011157700791954994}, {"id": 585, "seek": 290722, "start": 2917.8199999999997, "end": 2919.8199999999997, "text": " Yeah", "tokens": [50894, 865, 50994], "temperature": 0.0, "avg_logprob": -0.27718338759049127, "compression_ratio": 1.5580357142857142, "no_speech_prob": 0.0011157700791954994}, {"id": 586, "seek": 290722, "start": 2920.2599999999998, "end": 2928.7, "text": " All right, so I think gil you want to take it away. I will take it away. Are there any lingering questions from our our personal explorations?", "tokens": [51016, 1057, 558, 11, 370, 286, 519, 290, 388, 291, 528, 281, 747, 309, 1314, 13, 286, 486, 747, 309, 1314, 13, 2014, 456, 604, 49542, 1651, 490, 527, 527, 2973, 24765, 763, 30, 51438], "temperature": 0.0, "avg_logprob": -0.27718338759049127, "compression_ratio": 1.5580357142857142, "no_speech_prob": 0.0011157700791954994}, {"id": 587, "seek": 290722, "start": 2931.3399999999997, "end": 2935.4599999999996, "text": " Great you can also ask us later. That's fine. Yeah, that's totally yeah", "tokens": [51570, 3769, 291, 393, 611, 1029, 505, 1780, 13, 663, 311, 2489, 13, 865, 11, 300, 311, 3879, 1338, 51776], "temperature": 0.0, "avg_logprob": -0.27718338759049127, "compression_ratio": 1.5580357142857142, "no_speech_prob": 0.0011157700791954994}, {"id": 588, "seek": 293546, "start": 2935.7, "end": 2942.02, "text": " So the I think this is really the last bit of new syntax we're going to introduce but I could be wrong", "tokens": [50376, 407, 264, 286, 519, 341, 307, 534, 264, 1036, 857, 295, 777, 28431, 321, 434, 516, 281, 5366, 457, 286, 727, 312, 2085, 50692], "temperature": 0.0, "avg_logprob": -0.23513422879305754, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.0004799553717020899}, {"id": 589, "seek": 293546, "start": 2942.02, "end": 2944.34, "text": " I'm wrong, but for a while it'll be fine", "tokens": [50692, 286, 478, 2085, 11, 457, 337, 257, 1339, 309, 603, 312, 2489, 50808], "temperature": 0.0, "avg_logprob": -0.23513422879305754, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.0004799553717020899}, {"id": 590, "seek": 293546, "start": 2945.2200000000003, "end": 2947.58, "text": " So this is the the Python mode operator", "tokens": [50852, 407, 341, 307, 264, 264, 15329, 4391, 12973, 50970], "temperature": 0.0, "avg_logprob": -0.23513422879305754, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.0004799553717020899}, {"id": 591, "seek": 293546, "start": 2948.66, "end": 2951.82, "text": " So we've been talking for the last bit about how you", "tokens": [51024, 407, 321, 600, 668, 1417, 337, 264, 1036, 857, 466, 577, 291, 51182], "temperature": 0.0, "avg_logprob": -0.23513422879305754, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.0004799553717020899}, {"id": 592, "seek": 293546, "start": 2953.78, "end": 2955.58, "text": " Kind of capture", "tokens": [51280, 9242, 295, 7983, 51370], "temperature": 0.0, "avg_logprob": -0.23513422879305754, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.0004799553717020899}, {"id": 593, "seek": 293546, "start": 2955.58, "end": 2960.1, "text": " Subprocess output and then you know turned into you like a Python string of this command pipeline object", "tokens": [51370, 8511, 41075, 5598, 293, 550, 291, 458, 3574, 666, 291, 411, 257, 15329, 6798, 295, 341, 5622, 15517, 2657, 51596], "temperature": 0.0, "avg_logprob": -0.23513422879305754, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.0004799553717020899}, {"id": 594, "seek": 293546, "start": 2960.1, "end": 2964.02, "text": " And then how you can play around with it and inspect it and do things with it", "tokens": [51596, 400, 550, 577, 291, 393, 862, 926, 365, 309, 293, 15018, 309, 293, 360, 721, 365, 309, 51792], "temperature": 0.0, "avg_logprob": -0.23513422879305754, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.0004799553717020899}, {"id": 595, "seek": 296402, "start": 2964.02, "end": 2966.02, "text": " but", "tokens": [50364, 457, 50464], "temperature": 0.0, "avg_logprob": -0.30184121565385297, "compression_ratio": 1.5343915343915344, "no_speech_prob": 0.0003052385291084647}, {"id": 596, "seek": 296402, "start": 2968.34, "end": 2969.58, "text": " The", "tokens": [50580, 440, 50642], "temperature": 0.0, "avg_logprob": -0.30184121565385297, "compression_ratio": 1.5343915343915344, "no_speech_prob": 0.0003052385291084647}, {"id": 597, "seek": 296402, "start": 2969.58, "end": 2977.58, "text": " The at-paran operator lets you go the other way it lets you insert things from your Python sort of scope or environment into a", "tokens": [50642, 440, 412, 12, 2181, 282, 12973, 6653, 291, 352, 264, 661, 636, 309, 6653, 291, 8969, 721, 490, 428, 15329, 1333, 295, 11923, 420, 2823, 666, 257, 51042], "temperature": 0.0, "avg_logprob": -0.30184121565385297, "compression_ratio": 1.5343915343915344, "no_speech_prob": 0.0003052385291084647}, {"id": 598, "seek": 296402, "start": 2978.2599999999998, "end": 2980.2599999999998, "text": " sub-process command", "tokens": [51076, 1422, 12, 41075, 5622, 51176], "temperature": 0.0, "avg_logprob": -0.30184121565385297, "compression_ratio": 1.5343915343915344, "no_speech_prob": 0.0003052385291084647}, {"id": 599, "seek": 296402, "start": 2980.46, "end": 2982.7, "text": " So what we mean is generally", "tokens": [51186, 407, 437, 321, 914, 307, 5101, 51298], "temperature": 0.0, "avg_logprob": -0.30184121565385297, "compression_ratio": 1.5343915343915344, "no_speech_prob": 0.0003052385291084647}, {"id": 600, "seek": 296402, "start": 2983.54, "end": 2986.54, "text": " Conscious like parsing is pretty clever at this stuff", "tokens": [51340, 6923, 4139, 411, 21156, 278, 307, 1238, 13494, 412, 341, 1507, 51490], "temperature": 0.0, "avg_logprob": -0.30184121565385297, "compression_ratio": 1.5343915343915344, "no_speech_prob": 0.0003052385291084647}, {"id": 601, "seek": 296402, "start": 2986.54, "end": 2989.1, "text": " So if you give it for instance this command like for", "tokens": [51490, 407, 498, 291, 976, 309, 337, 5197, 341, 5622, 411, 337, 51618], "temperature": 0.0, "avg_logprob": -0.30184121565385297, "compression_ratio": 1.5343915343915344, "no_speech_prob": 0.0003052385291084647}, {"id": 602, "seek": 298910, "start": 2989.7, "end": 2996.86, "text": " Something in range to and then just run echo high underneath that it will do the right thing right you can put your", "tokens": [50394, 6595, 294, 3613, 281, 293, 550, 445, 1190, 14300, 1090, 7223, 300, 309, 486, 360, 264, 558, 551, 558, 291, 393, 829, 428, 50752], "temperature": 0.0, "avg_logprob": -0.253264698229338, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.0016226933803409338}, {"id": 603, "seek": 298910, "start": 2997.42, "end": 2999.62, "text": " Like echo or LS or whatever", "tokens": [50780, 1743, 14300, 420, 36657, 420, 2035, 50890], "temperature": 0.0, "avg_logprob": -0.253264698229338, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.0016226933803409338}, {"id": 604, "seek": 298910, "start": 3000.1, "end": 3005.18, "text": " Subprocess command you want in the body of a for loop and it will just execute as many times you tell it to do and you don't need", "tokens": [50914, 8511, 41075, 5622, 291, 528, 294, 264, 1772, 295, 257, 337, 6367, 293, 309, 486, 445, 14483, 382, 867, 1413, 291, 980, 309, 281, 360, 293, 291, 500, 380, 643, 51168], "temperature": 0.0, "avg_logprob": -0.253264698229338, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.0016226933803409338}, {"id": 605, "seek": 298910, "start": 3005.18, "end": 3007.18, "text": " To do anything special that actually just works", "tokens": [51168, 1407, 360, 1340, 2121, 300, 767, 445, 1985, 51268], "temperature": 0.0, "avg_logprob": -0.253264698229338, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.0016226933803409338}, {"id": 606, "seek": 298910, "start": 3007.7799999999997, "end": 3009.38, "text": " right", "tokens": [51298, 558, 51378], "temperature": 0.0, "avg_logprob": -0.253264698229338, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.0016226933803409338}, {"id": 607, "seek": 298910, "start": 3009.38, "end": 3011.38, "text": " What does not just work is?", "tokens": [51378, 708, 775, 406, 445, 589, 307, 30, 51478], "temperature": 0.0, "avg_logprob": -0.253264698229338, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.0016226933803409338}, {"id": 608, "seek": 298910, "start": 3012.22, "end": 3014.22, "text": " If you do this", "tokens": [51520, 759, 291, 360, 341, 51620], "temperature": 0.0, "avg_logprob": -0.253264698229338, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.0016226933803409338}, {"id": 609, "seek": 301422, "start": 3015.06, "end": 3020.2999999999997, "text": " So you want to instead you know iterate over the value in the for loop and have it be printed", "tokens": [50406, 407, 291, 528, 281, 2602, 291, 458, 44497, 670, 264, 2158, 294, 264, 337, 6367, 293, 362, 309, 312, 13567, 50668], "temperature": 0.0, "avg_logprob": -0.19474771939791166, "compression_ratio": 1.5593220338983051, "no_speech_prob": 0.0001334089320152998}, {"id": 610, "seek": 301422, "start": 3024.14, "end": 3028.18, "text": " You just get I twice right so because it runs that command twice", "tokens": [50860, 509, 445, 483, 286, 6091, 558, 370, 570, 309, 6676, 300, 5622, 6091, 51062], "temperature": 0.0, "avg_logprob": -0.19474771939791166, "compression_ratio": 1.5593220338983051, "no_speech_prob": 0.0001334089320152998}, {"id": 611, "seek": 301422, "start": 3029.4599999999996, "end": 3033.74, "text": " And so what the at parentheses operator does it lets you", "tokens": [51126, 400, 370, 437, 264, 412, 34153, 12973, 775, 309, 6653, 291, 51340], "temperature": 0.0, "avg_logprob": -0.19474771939791166, "compression_ratio": 1.5593220338983051, "no_speech_prob": 0.0001334089320152998}, {"id": 612, "seek": 301422, "start": 3034.66, "end": 3038.4199999999996, "text": " Capture that Python variable and insert it into that command", "tokens": [51386, 9480, 540, 300, 15329, 7006, 293, 8969, 309, 666, 300, 5622, 51574], "temperature": 0.0, "avg_logprob": -0.19474771939791166, "compression_ratio": 1.5593220338983051, "no_speech_prob": 0.0001334089320152998}, {"id": 613, "seek": 303842, "start": 3039.42, "end": 3046.54, "text": " So what it does it what's actually doing is it's it's evaluating an arbitrary Python expression and then returning that value as a string", "tokens": [50414, 407, 437, 309, 775, 309, 437, 311, 767, 884, 307, 309, 311, 309, 311, 27479, 364, 23211, 15329, 6114, 293, 550, 12678, 300, 2158, 382, 257, 6798, 50770], "temperature": 0.0, "avg_logprob": -0.20684122777247166, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.0015726980054751039}, {"id": 614, "seek": 303842, "start": 3046.54, "end": 3050.46, "text": " And that can be fed into the sub-process command in this case echo", "tokens": [50770, 400, 300, 393, 312, 4636, 666, 264, 1422, 12, 41075, 5622, 294, 341, 1389, 14300, 50966], "temperature": 0.0, "avg_logprob": -0.20684122777247166, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.0015726980054751039}, {"id": 615, "seek": 303842, "start": 3054.78, "end": 3062.3, "text": " And if the output is not a string in case of like lists or sets it just gets joined and returned as a string", "tokens": [51182, 400, 498, 264, 5598, 307, 406, 257, 6798, 294, 1389, 295, 411, 14511, 420, 6352, 309, 445, 2170, 6869, 293, 8752, 382, 257, 6798, 51558], "temperature": 0.0, "avg_logprob": -0.20684122777247166, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.0015726980054751039}, {"id": 616, "seek": 303842, "start": 3065.2200000000003, "end": 3068.1800000000003, "text": " So that's what that well, so it's a little different than that actually", "tokens": [51704, 407, 300, 311, 437, 300, 731, 11, 370, 309, 311, 257, 707, 819, 813, 300, 767, 51852], "temperature": 0.0, "avg_logprob": -0.20684122777247166, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.0015726980054751039}, {"id": 617, "seek": 306842, "start": 3068.86, "end": 3071.54, "text": " Sorry to want want want", "tokens": [50386, 4919, 281, 528, 528, 528, 50520], "temperature": 0.0, "avg_logprob": -0.31870058420542124, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.0006164005608297884}, {"id": 618, "seek": 306842, "start": 3072.5, "end": 3073.86, "text": " each", "tokens": [50568, 1184, 50636], "temperature": 0.0, "avg_logprob": -0.31870058420542124, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.0006164005608297884}, {"id": 619, "seek": 306842, "start": 3073.86, "end": 3078.58, "text": " Element of the string is actually getting passed in as its own argument to the command", "tokens": [50636, 20900, 295, 264, 6798, 307, 767, 1242, 4678, 294, 382, 1080, 1065, 6770, 281, 264, 5622, 50872], "temperature": 0.0, "avg_logprob": -0.31870058420542124, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.0006164005608297884}, {"id": 620, "seek": 306842, "start": 3079.86, "end": 3083.1, "text": " So each of these are their own command arguments", "tokens": [50936, 407, 1184, 295, 613, 366, 641, 1065, 5622, 12869, 51098], "temperature": 0.0, "avg_logprob": -0.31870058420542124, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.0006164005608297884}, {"id": 621, "seek": 306842, "start": 3084.82, "end": 3088.3, "text": " So and it's just that echo happens to join them together", "tokens": [51184, 407, 293, 309, 311, 445, 300, 14300, 2314, 281, 3917, 552, 1214, 51358], "temperature": 0.0, "avg_logprob": -0.31870058420542124, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.0006164005608297884}, {"id": 622, "seek": 306842, "start": 3089.62, "end": 3091.62, "text": " So", "tokens": [51424, 407, 51524], "temperature": 0.0, "avg_logprob": -0.31870058420542124, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.0006164005608297884}, {"id": 623, "seek": 306842, "start": 3093.38, "end": 3097.3, "text": " Yeah, thanks for closing the door we're gonna close not a good idea", "tokens": [51612, 865, 11, 3231, 337, 10377, 264, 2853, 321, 434, 799, 1998, 406, 257, 665, 1558, 51808], "temperature": 0.0, "avg_logprob": -0.31870058420542124, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.0006164005608297884}, {"id": 624, "seek": 309842, "start": 3099.3, "end": 3101.3, "text": " I", "tokens": [50408, 286, 50508], "temperature": 0.0, "avg_logprob": -0.32602577209472655, "compression_ratio": 1.3673469387755102, "no_speech_prob": 0.0007095481851138175}, {"id": 625, "seek": 309842, "start": 3104.34, "end": 3108.38, "text": " Any questions about this syntax or what it's doing", "tokens": [50660, 2639, 1651, 466, 341, 28431, 420, 437, 309, 311, 884, 50862], "temperature": 0.0, "avg_logprob": -0.32602577209472655, "compression_ratio": 1.3673469387755102, "no_speech_prob": 0.0007095481851138175}, {"id": 626, "seek": 309842, "start": 3109.98, "end": 3111.98, "text": " Yeah", "tokens": [50942, 865, 51042], "temperature": 0.0, "avg_logprob": -0.32602577209472655, "compression_ratio": 1.3673469387755102, "no_speech_prob": 0.0007095481851138175}, {"id": 627, "seek": 309842, "start": 3115.1, "end": 3120.82, "text": " Yeah, so like if we did LS LS would try to search for all of these", "tokens": [51198, 865, 11, 370, 411, 498, 321, 630, 36657, 36657, 576, 853, 281, 3164, 337, 439, 295, 613, 51484], "temperature": 0.0, "avg_logprob": -0.32602577209472655, "compression_ratio": 1.3673469387755102, "no_speech_prob": 0.0007095481851138175}, {"id": 628, "seek": 309842, "start": 3121.5, "end": 3128.14, "text": " Files individually. Yeah, it's running it for for each. Yeah, cuz LS takes a", "tokens": [51518, 479, 4680, 16652, 13, 865, 11, 309, 311, 2614, 309, 337, 337, 1184, 13, 865, 11, 11910, 36657, 2516, 257, 51850], "temperature": 0.0, "avg_logprob": -0.32602577209472655, "compression_ratio": 1.3673469387755102, "no_speech_prob": 0.0007095481851138175}, {"id": 629, "seek": 312842, "start": 3128.46, "end": 3130.46, "text": " big argument list like that", "tokens": [50366, 955, 6770, 1329, 411, 300, 50466], "temperature": 0.0, "avg_logprob": -0.3382008460260207, "compression_ratio": 1.0823529411764705, "no_speech_prob": 0.00208238884806633}, {"id": 630, "seek": 312842, "start": 3134.26, "end": 3137.1, "text": " If it's iterable and not a string", "tokens": [50656, 759, 309, 311, 17138, 712, 293, 406, 257, 6798, 50798], "temperature": 0.0, "avg_logprob": -0.3382008460260207, "compression_ratio": 1.0823529411764705, "no_speech_prob": 0.00208238884806633}, {"id": 631, "seek": 312842, "start": 3138.66, "end": 3141.06, "text": " Right, yeah the normal way", "tokens": [50876, 1779, 11, 1338, 264, 2710, 636, 50996], "temperature": 0.0, "avg_logprob": -0.3382008460260207, "compression_ratio": 1.0823529411764705, "no_speech_prob": 0.00208238884806633}, {"id": 632, "seek": 312842, "start": 3148.7400000000002, "end": 3150.7400000000002, "text": " Yes", "tokens": [51380, 1079, 51480], "temperature": 0.0, "avg_logprob": -0.3382008460260207, "compression_ratio": 1.0823529411764705, "no_speech_prob": 0.00208238884806633}, {"id": 633, "seek": 315074, "start": 3151.2599999999998, "end": 3153.2599999999998, "text": " Right", "tokens": [50390, 1779, 50490], "temperature": 0.0, "avg_logprob": -0.2982545382734658, "compression_ratio": 1.524390243902439, "no_speech_prob": 0.0017270464450120926}, {"id": 634, "seek": 315074, "start": 3157.4199999999996, "end": 3160.1, "text": " That's what LS does yeah, yeah", "tokens": [50698, 663, 311, 437, 36657, 775, 1338, 11, 1338, 50832], "temperature": 0.0, "avg_logprob": -0.2982545382734658, "compression_ratio": 1.524390243902439, "no_speech_prob": 0.0017270464450120926}, {"id": 635, "seek": 315074, "start": 3160.1, "end": 3167.8199999999997, "text": " It's just passing each Python thing in as its own each element of the putt list is its own argument or tuple or whatever", "tokens": [50832, 467, 311, 445, 8437, 1184, 15329, 551, 294, 382, 1080, 1065, 1184, 4478, 295, 264, 829, 83, 1329, 307, 1080, 1065, 6770, 420, 2604, 781, 420, 2035, 51218], "temperature": 0.0, "avg_logprob": -0.2982545382734658, "compression_ratio": 1.524390243902439, "no_speech_prob": 0.0017270464450120926}, {"id": 636, "seek": 315074, "start": 3171.8999999999996, "end": 3179.2599999999998, "text": " Yes, exactly, it's a it's essentially echo zero one two or echo, you know or LS zero one two", "tokens": [51422, 1079, 11, 2293, 11, 309, 311, 257, 309, 311, 4476, 14300, 4018, 472, 732, 420, 14300, 11, 291, 458, 420, 36657, 4018, 472, 732, 51790], "temperature": 0.0, "avg_logprob": -0.2982545382734658, "compression_ratio": 1.524390243902439, "no_speech_prob": 0.0017270464450120926}, {"id": 637, "seek": 318074, "start": 3181.54, "end": 3183.54, "text": " Yeah", "tokens": [50404, 865, 50504], "temperature": 0.0, "avg_logprob": -0.3102777654474432, "compression_ratio": 1.4213483146067416, "no_speech_prob": 0.0004441748606041074}, {"id": 638, "seek": 318074, "start": 3185.22, "end": 3193.14, "text": " Okay, yeah, so if the result of the operator two is in the first position it gets treated as an alias", "tokens": [50588, 1033, 11, 1338, 11, 370, 498, 264, 1874, 295, 264, 12973, 732, 307, 294, 264, 700, 2535, 309, 2170, 8668, 382, 364, 419, 4609, 50984], "temperature": 0.0, "avg_logprob": -0.3102777654474432, "compression_ratio": 1.4213483146067416, "no_speech_prob": 0.0004441748606041074}, {"id": 639, "seek": 318074, "start": 3193.66, "end": 3195.9799999999996, "text": " So you can actually have this execute commands", "tokens": [51010, 407, 291, 393, 767, 362, 341, 14483, 16901, 51126], "temperature": 0.0, "avg_logprob": -0.3102777654474432, "compression_ratio": 1.4213483146067416, "no_speech_prob": 0.0004441748606041074}, {"id": 640, "seek": 318074, "start": 3202.7799999999997, "end": 3208.62, "text": " Probably like not something don't do this mine. I guess it's a really bad pattern, but it does that", "tokens": [51466, 9210, 411, 406, 746, 500, 380, 360, 341, 3892, 13, 286, 2041, 309, 311, 257, 534, 1578, 5102, 11, 457, 309, 775, 300, 51758], "temperature": 0.0, "avg_logprob": -0.3102777654474432, "compression_ratio": 1.4213483146067416, "no_speech_prob": 0.0004441748606041074}, {"id": 641, "seek": 320862, "start": 3209.62, "end": 3215.5, "text": " Right, but this is the this is different because if you I've got a my", "tokens": [50414, 1779, 11, 457, 341, 307, 264, 341, 307, 819, 570, 498, 291, 286, 600, 658, 257, 452, 50708], "temperature": 0.0, "avg_logprob": -0.2689429047287151, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0005975260864943266}, {"id": 642, "seek": 320862, "start": 3216.2599999999998, "end": 3219.02, "text": " My trace back printing on but you can see", "tokens": [50746, 1222, 13508, 646, 14699, 322, 457, 291, 393, 536, 50884], "temperature": 0.0, "avg_logprob": -0.2689429047287151, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0005975260864943266}, {"id": 643, "seek": 320862, "start": 3220.66, "end": 3223.58, "text": " If you try to just print this", "tokens": [50966, 759, 291, 853, 281, 445, 4482, 341, 51112], "temperature": 0.0, "avg_logprob": -0.2689429047287151, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0005975260864943266}, {"id": 644, "seek": 320862, "start": 3224.2599999999998, "end": 3230.58, "text": " Or if you try to run it without splitting that is treated as the command the name of the command spaces included", "tokens": [51146, 1610, 498, 291, 853, 281, 1190, 309, 1553, 30348, 300, 307, 8668, 382, 264, 5622, 264, 1315, 295, 264, 5622, 7673, 5556, 51462], "temperature": 0.0, "avg_logprob": -0.2689429047287151, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0005975260864943266}, {"id": 645, "seek": 320862, "start": 3230.58, "end": 3232.74, "text": " And so then it can't find the command cuz hello", "tokens": [51462, 400, 370, 550, 309, 393, 380, 915, 264, 5622, 11910, 7751, 51570], "temperature": 0.0, "avg_logprob": -0.2689429047287151, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0005975260864943266}, {"id": 646, "seek": 320862, "start": 3233.7799999999997, "end": 3236.7799999999997, "text": " Commit hello there echo. Hello. There is not a valid command", "tokens": [51622, 3046, 270, 7751, 456, 14300, 13, 2425, 13, 821, 307, 406, 257, 7363, 5622, 51772], "temperature": 0.0, "avg_logprob": -0.2689429047287151, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0005975260864943266}, {"id": 647, "seek": 323862, "start": 3239.3399999999997, "end": 3241.3399999999997, "text": " Okay", "tokens": [50400, 1033, 50500], "temperature": 0.0, "avg_logprob": -0.3000617225964864, "compression_ratio": 1.3014705882352942, "no_speech_prob": 0.0008294626022689044}, {"id": 648, "seek": 323862, "start": 3244.18, "end": 3246.18, "text": " Okay", "tokens": [50642, 1033, 50742], "temperature": 0.0, "avg_logprob": -0.3000617225964864, "compression_ratio": 1.3014705882352942, "no_speech_prob": 0.0008294626022689044}, {"id": 649, "seek": 323862, "start": 3246.9, "end": 3251.9, "text": " Your promise for more syntax is already broken. You should just stop. I'm gonna stop saying it now", "tokens": [50778, 2260, 6228, 337, 544, 28431, 307, 1217, 5463, 13, 509, 820, 445, 1590, 13, 286, 478, 799, 1590, 1566, 309, 586, 51028], "temperature": 0.0, "avg_logprob": -0.3000617225964864, "compression_ratio": 1.3014705882352942, "no_speech_prob": 0.0008294626022689044}, {"id": 650, "seek": 323862, "start": 3254.94, "end": 3257.2999999999997, "text": " So with apologies", "tokens": [51180, 407, 365, 34929, 51298], "temperature": 0.0, "avg_logprob": -0.3000617225964864, "compression_ratio": 1.3014705882352942, "no_speech_prob": 0.0008294626022689044}, {"id": 651, "seek": 323862, "start": 3260.7, "end": 3263.7799999999997, "text": " So you can wrap a regular expression in back ticks", "tokens": [51468, 407, 291, 393, 7019, 257, 3890, 6114, 294, 646, 42475, 51622], "temperature": 0.0, "avg_logprob": -0.3000617225964864, "compression_ratio": 1.3014705882352942, "no_speech_prob": 0.0008294626022689044}, {"id": 652, "seek": 326378, "start": 3264.5400000000004, "end": 3272.1000000000004, "text": " And what it will do is return a list of every file or you know thing in that in a directory that matches that regular expression as a list", "tokens": [50402, 400, 437, 309, 486, 360, 307, 2736, 257, 1329, 295, 633, 3991, 420, 291, 458, 551, 294, 300, 294, 257, 21120, 300, 10676, 300, 3890, 6114, 382, 257, 1329, 50780], "temperature": 0.0, "avg_logprob": -0.21423348416103405, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.0016225215513259172}, {"id": 653, "seek": 326378, "start": 3276.38, "end": 3278.84, "text": " And it's a Python list which means you can", "tokens": [50994, 400, 309, 311, 257, 15329, 1329, 597, 1355, 291, 393, 51117], "temperature": 0.0, "avg_logprob": -0.21423348416103405, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.0016225215513259172}, {"id": 654, "seek": 326378, "start": 3280.26, "end": 3283.94, "text": " iterate over it you can you know like stick it in", "tokens": [51188, 44497, 670, 309, 291, 393, 291, 458, 411, 2897, 309, 294, 51372], "temperature": 0.0, "avg_logprob": -0.21423348416103405, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.0016225215513259172}, {"id": 655, "seek": 326378, "start": 3284.9, "end": 3288.1000000000004, "text": " List comprehension and you know like mutate all the names", "tokens": [51420, 17668, 44991, 293, 291, 458, 411, 5839, 473, 439, 264, 5288, 51580], "temperature": 0.0, "avg_logprob": -0.21423348416103405, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.0016225215513259172}, {"id": 656, "seek": 326378, "start": 3289.34, "end": 3292.6600000000003, "text": " And you can actually do even more stuff with these things as you kind of go along", "tokens": [51642, 400, 291, 393, 767, 360, 754, 544, 1507, 365, 613, 721, 382, 291, 733, 295, 352, 2051, 51808], "temperature": 0.0, "avg_logprob": -0.21423348416103405, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.0016225215513259172}, {"id": 657, "seek": 329378, "start": 3294.78, "end": 3296.78, "text": " If you're about yes", "tokens": [50414, 759, 291, 434, 466, 2086, 50514], "temperature": 0.0, "avg_logprob": -0.40204537804447005, "compression_ratio": 1.375, "no_speech_prob": 0.0014544581063091755}, {"id": 658, "seek": 329378, "start": 3301.6600000000003, "end": 3305.0600000000004, "text": " It's the Python rejects. Yeah, yeah, it's just the re module", "tokens": [50758, 467, 311, 264, 15329, 8248, 82, 13, 865, 11, 1338, 11, 309, 311, 445, 264, 319, 10088, 50928], "temperature": 0.0, "avg_logprob": -0.40204537804447005, "compression_ratio": 1.375, "no_speech_prob": 0.0014544581063091755}, {"id": 659, "seek": 329378, "start": 3305.6200000000003, "end": 3309.5, "text": " Yeah, just a handy way to get into re.compile", "tokens": [50956, 865, 11, 445, 257, 13239, 636, 281, 483, 666, 319, 13, 21541, 794, 51150], "temperature": 0.0, "avg_logprob": -0.40204537804447005, "compression_ratio": 1.375, "no_speech_prob": 0.0014544581063091755}, {"id": 660, "seek": 329378, "start": 3311.38, "end": 3313.38, "text": " Yeah", "tokens": [51244, 865, 51344], "temperature": 0.0, "avg_logprob": -0.40204537804447005, "compression_ratio": 1.375, "no_speech_prob": 0.0014544581063091755}, {"id": 661, "seek": 329378, "start": 3315.78, "end": 3317.78, "text": " No, no, these are not globs", "tokens": [51464, 883, 11, 572, 11, 613, 366, 406, 3114, 929, 51564], "temperature": 0.0, "avg_logprob": -0.40204537804447005, "compression_ratio": 1.375, "no_speech_prob": 0.0014544581063091755}, {"id": 662, "seek": 329378, "start": 3318.5, "end": 3321.34, "text": " Dot dot star is a rejects a", "tokens": [51600, 38753, 5893, 3543, 307, 257, 8248, 82, 257, 51742], "temperature": 0.0, "avg_logprob": -0.40204537804447005, "compression_ratio": 1.375, "no_speech_prob": 0.0014544581063091755}, {"id": 663, "seek": 332134, "start": 3322.1800000000003, "end": 3324.1800000000003, "text": " Glob would just be star", "tokens": [50406, 10786, 65, 576, 445, 312, 3543, 50506], "temperature": 0.0, "avg_logprob": -0.21007447583334787, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.0015478335553780198}, {"id": 664, "seek": 332134, "start": 3327.86, "end": 3332.2200000000003, "text": " Yeah, anything and so we could maybe a better example would be what's a", "tokens": [50690, 865, 11, 1340, 293, 370, 321, 727, 1310, 257, 1101, 1365, 576, 312, 437, 311, 257, 50908], "temperature": 0.0, "avg_logprob": -0.21007447583334787, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.0015478335553780198}, {"id": 665, "seek": 332134, "start": 3342.3, "end": 3349.1800000000003, "text": " Okay, so we've got some pings in here right so like what if we wanted to if we wanted to like grab I", "tokens": [51412, 1033, 11, 370, 321, 600, 658, 512, 280, 1109, 294, 510, 558, 370, 411, 437, 498, 321, 1415, 281, 498, 321, 1415, 281, 411, 4444, 286, 51756], "temperature": 0.0, "avg_logprob": -0.21007447583334787, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.0015478335553780198}, {"id": 666, "seek": 334918, "start": 3350.02, "end": 3352.4199999999996, "text": " Guess we don't have a lot with anything", "tokens": [50406, 17795, 321, 500, 380, 362, 257, 688, 365, 1340, 50526], "temperature": 0.0, "avg_logprob": -0.3405727127851066, "compression_ratio": 1.492063492063492, "no_speech_prob": 0.0010318693239241838}, {"id": 667, "seek": 334918, "start": 3353.5, "end": 3360.18, "text": " With I want I want png's that have the letter zero letter o and them. Yeah, so like that's right. Yeah, so do", "tokens": [50580, 2022, 286, 528, 286, 528, 280, 872, 311, 300, 362, 264, 5063, 4018, 5063, 277, 293, 552, 13, 865, 11, 370, 411, 300, 311, 558, 13, 865, 11, 370, 360, 50914], "temperature": 0.0, "avg_logprob": -0.3405727127851066, "compression_ratio": 1.492063492063492, "no_speech_prob": 0.0010318693239241838}, {"id": 668, "seek": 334918, "start": 3361.18, "end": 3363.18, "text": " dot star oh", "tokens": [50964, 5893, 3543, 1954, 51064], "temperature": 0.0, "avg_logprob": -0.3405727127851066, "compression_ratio": 1.492063492063492, "no_speech_prob": 0.0010318693239241838}, {"id": 669, "seek": 334918, "start": 3364.5, "end": 3370.94, "text": " Dot star dot slash dot png", "tokens": [51130, 38753, 3543, 5893, 17330, 5893, 280, 872, 51452], "temperature": 0.0, "avg_logprob": -0.3405727127851066, "compression_ratio": 1.492063492063492, "no_speech_prob": 0.0010318693239241838}, {"id": 670, "seek": 337094, "start": 3371.42, "end": 3382.62, "text": " But also regular expressions are hard so if you if you wanted to use globs, let's just say somebody had mentioned that", "tokens": [50388, 583, 611, 3890, 15277, 366, 1152, 370, 498, 291, 498, 291, 1415, 281, 764, 3114, 929, 11, 718, 311, 445, 584, 2618, 632, 2835, 300, 50948], "temperature": 0.0, "avg_logprob": -0.2658530434409341, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.001387748634442687}, {"id": 671, "seek": 337094, "start": 3384.14, "end": 3387.2200000000003, "text": " Then you can prefix the back ticks the G", "tokens": [51024, 1396, 291, 393, 46969, 264, 646, 42475, 264, 460, 51178], "temperature": 0.0, "avg_logprob": -0.2658530434409341, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.001387748634442687}, {"id": 672, "seek": 337094, "start": 3388.2200000000003, "end": 3394.5, "text": " And then it is glob matching so you don't need to do the dot thing that's just you know like star dot md star dot png", "tokens": [51228, 400, 550, 309, 307, 16125, 14324, 370, 291, 500, 380, 643, 281, 360, 264, 5893, 551, 300, 311, 445, 291, 458, 411, 3543, 5893, 275, 67, 3543, 5893, 280, 872, 51542], "temperature": 0.0, "avg_logprob": -0.2658530434409341, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.001387748634442687}, {"id": 673, "seek": 337094, "start": 3394.5, "end": 3399.34, "text": " Star whatever and as an extra special bonus in Python, I think three six and above", "tokens": [51542, 5705, 2035, 293, 382, 364, 2857, 2121, 10882, 294, 15329, 11, 286, 519, 1045, 2309, 293, 3673, 51784], "temperature": 0.0, "avg_logprob": -0.2658530434409341, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.001387748634442687}, {"id": 674, "seek": 339934, "start": 3399.78, "end": 3402.6200000000003, "text": " this supports recursive globing the way that", "tokens": [50386, 341, 9346, 20560, 488, 3114, 4324, 264, 636, 300, 50528], "temperature": 0.0, "avg_logprob": -0.2603256144422166, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.0010635245125740767}, {"id": 675, "seek": 339934, "start": 3403.94, "end": 3409.58, "text": " Then the glob lever it does so if you do like a star star slash star dot md", "tokens": [50594, 1396, 264, 16125, 12451, 309, 775, 370, 498, 291, 360, 411, 257, 3543, 3543, 17330, 3543, 5893, 275, 67, 50876], "temperature": 0.0, "avg_logprob": -0.2603256144422166, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.0010635245125740767}, {"id": 676, "seek": 339934, "start": 3409.6200000000003, "end": 3416.7400000000002, "text": " That will recursively glob through the entire directory structure from where you are and find every single markdown file in that whole chunk", "tokens": [50878, 663, 486, 20560, 3413, 16125, 807, 264, 2302, 21120, 3877, 490, 689, 291, 366, 293, 915, 633, 2167, 1491, 5093, 3991, 294, 300, 1379, 16635, 51234], "temperature": 0.0, "avg_logprob": -0.2603256144422166, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.0010635245125740767}, {"id": 677, "seek": 339934, "start": 3416.78, "end": 3419.7000000000003, "text": " This can take a long time like beat like use this", "tokens": [51236, 639, 393, 747, 257, 938, 565, 411, 4224, 411, 764, 341, 51382], "temperature": 0.0, "avg_logprob": -0.2603256144422166, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.0010635245125740767}, {"id": 678, "seek": 339934, "start": 3419.7000000000003, "end": 3423.2400000000002, "text": " You know like if you don't find it your route and it takes forever like same thing", "tokens": [51382, 509, 458, 411, 498, 291, 500, 380, 915, 309, 428, 7955, 293, 309, 2516, 5680, 411, 912, 551, 51559], "temperature": 0.0, "avg_logprob": -0.2603256144422166, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.0010635245125740767}, {"id": 679, "seek": 342324, "start": 3423.8399999999997, "end": 3429.3999999999996, "text": " But it's really really handy for finding all the sort of files or patterns matching something in a in a large area", "tokens": [50394, 583, 309, 311, 534, 534, 13239, 337, 5006, 439, 264, 1333, 295, 7098, 420, 8294, 14324, 746, 294, 257, 294, 257, 2416, 1859, 50672], "temperature": 0.0, "avg_logprob": -0.3470205307006836, "compression_ratio": 1.4461538461538461, "no_speech_prob": 0.0035364478826522827}, {"id": 680, "seek": 342324, "start": 3431.9199999999996, "end": 3433.9199999999996, "text": " Any questions on", "tokens": [50798, 2639, 1651, 322, 50898], "temperature": 0.0, "avg_logprob": -0.3470205307006836, "compression_ratio": 1.4461538461538461, "no_speech_prob": 0.0035364478826522827}, {"id": 681, "seek": 342324, "start": 3445.0, "end": 3449.3599999999997, "text": " Yeah, so um we can't we can't oh so the question is like", "tokens": [51452, 865, 11, 370, 1105, 321, 393, 380, 321, 393, 380, 1954, 370, 264, 1168, 307, 411, 51670], "temperature": 0.0, "avg_logprob": -0.3470205307006836, "compression_ratio": 1.4461538461538461, "no_speech_prob": 0.0035364478826522827}, {"id": 682, "seek": 344936, "start": 3449.36, "end": 3455.76, "text": " What are the use cases that led us to create all these things and just as a as a as a general like contra creation story?", "tokens": [50364, 708, 366, 264, 764, 3331, 300, 4684, 505, 281, 1884, 439, 613, 721, 293, 445, 382, 257, 382, 257, 382, 257, 2674, 411, 10742, 8016, 1657, 30, 50684], "temperature": 0.0, "avg_logprob": -0.2308345917732485, "compression_ratio": 1.8736842105263158, "no_speech_prob": 0.004678857978433371}, {"id": 683, "seek": 344936, "start": 3457.0, "end": 3460.6400000000003, "text": " Almost everything in here is something we were like, you know what we really need to do thing", "tokens": [50746, 12627, 1203, 294, 510, 307, 746, 321, 645, 411, 11, 291, 458, 437, 321, 534, 643, 281, 360, 551, 50928], "temperature": 0.0, "avg_logprob": -0.2308345917732485, "compression_ratio": 1.8736842105263158, "no_speech_prob": 0.004678857978433371}, {"id": 684, "seek": 344936, "start": 3460.6400000000003, "end": 3468.32, "text": " We need to do today is this thing and then we did that so they they were all created from actual and us and other", "tokens": [50928, 492, 643, 281, 360, 965, 307, 341, 551, 293, 550, 321, 630, 300, 370, 436, 436, 645, 439, 2942, 490, 3539, 293, 505, 293, 661, 51312], "temperature": 0.0, "avg_logprob": -0.2308345917732485, "compression_ratio": 1.8736842105263158, "no_speech_prob": 0.004678857978433371}, {"id": 685, "seek": 344936, "start": 3468.44, "end": 3471.6800000000003, "text": " Contributors people who are like I really need this to do thing X", "tokens": [51318, 4839, 2024, 30751, 561, 567, 366, 411, 286, 534, 643, 341, 281, 360, 551, 1783, 51480], "temperature": 0.0, "avg_logprob": -0.2308345917732485, "compression_ratio": 1.8736842105263158, "no_speech_prob": 0.004678857978433371}, {"id": 686, "seek": 344936, "start": 3472.6800000000003, "end": 3478.6800000000003, "text": " And then what we discovered along the ways that a lot of it tied in together really well without it without us having to do anything extra", "tokens": [51530, 400, 550, 437, 321, 6941, 2051, 264, 2098, 300, 257, 688, 295, 309, 9601, 294, 1214, 534, 731, 1553, 309, 1553, 505, 1419, 281, 360, 1340, 2857, 51830], "temperature": 0.0, "avg_logprob": -0.2308345917732485, "compression_ratio": 1.8736842105263158, "no_speech_prob": 0.004678857978433371}, {"id": 687, "seek": 347936, "start": 3479.36, "end": 3483.6400000000003, "text": " We'll come up on some of that stuff around the way some of the string matching and string literals work", "tokens": [50364, 492, 603, 808, 493, 322, 512, 295, 300, 1507, 926, 264, 636, 512, 295, 264, 6798, 14324, 293, 6798, 2733, 1124, 589, 50578], "temperature": 0.0, "avg_logprob": -0.2766301329706756, "compression_ratio": 1.5423728813559323, "no_speech_prob": 0.0018379850080236793}, {"id": 688, "seek": 347936, "start": 3484.1200000000003, "end": 3490.44, "text": " So like one thing I just showed for the globs in particular right like being able to loop through a globb list is", "tokens": [50602, 407, 411, 472, 551, 286, 445, 4712, 337, 264, 3114, 929, 294, 1729, 558, 411, 885, 1075, 281, 6367, 807, 257, 3114, 6692, 1329, 307, 50918], "temperature": 0.0, "avg_logprob": -0.2766301329706756, "compression_ratio": 1.5423728813559323, "no_speech_prob": 0.0018379850080236793}, {"id": 689, "seek": 347936, "start": 3490.92, "end": 3494.88, "text": " With this syntax is a lot nicer. Yeah, right. Yeah", "tokens": [50942, 2022, 341, 28431, 307, 257, 688, 22842, 13, 865, 11, 558, 13, 865, 51140], "temperature": 0.0, "avg_logprob": -0.2766301329706756, "compression_ratio": 1.5423728813559323, "no_speech_prob": 0.0018379850080236793}, {"id": 690, "seek": 347936, "start": 3496.0, "end": 3498.0, "text": " Yeah", "tokens": [51196, 865, 51296], "temperature": 0.0, "avg_logprob": -0.2766301329706756, "compression_ratio": 1.5423728813559323, "no_speech_prob": 0.0018379850080236793}, {"id": 691, "seek": 349800, "start": 3498.2, "end": 3500.2, "text": " Between", "tokens": [50374, 18967, 50474], "temperature": 0.0, "avg_logprob": -0.31170566661937815, "compression_ratio": 1.559782608695652, "no_speech_prob": 0.007934506051242352}, {"id": 692, "seek": 349800, "start": 3506.88, "end": 3514.72, "text": " So yeah, so the the question is about trading off between Python module CLI and writing something in conch for me", "tokens": [50808, 407, 1338, 11, 370, 264, 264, 1168, 307, 466, 9529, 766, 1296, 15329, 10088, 12855, 40, 293, 3579, 746, 294, 416, 339, 337, 385, 51200], "temperature": 0.0, "avg_logprob": -0.31170566661937815, "compression_ratio": 1.559782608695652, "no_speech_prob": 0.007934506051242352}, {"id": 693, "seek": 349800, "start": 3514.76, "end": 3521.68, "text": " It's a really about how much your hammering sub process. So if you're interacting with sub process a lot", "tokens": [51202, 467, 311, 257, 534, 466, 577, 709, 428, 13017, 278, 1422, 1399, 13, 407, 498, 291, 434, 18017, 365, 1422, 1399, 257, 688, 51548], "temperature": 0.0, "avg_logprob": -0.31170566661937815, "compression_ratio": 1.559782608695652, "no_speech_prob": 0.007934506051242352}, {"id": 694, "seek": 349800, "start": 3522.72, "end": 3526.88, "text": " Like do not write it in a Python CLA right write it in conch", "tokens": [51600, 1743, 360, 406, 2464, 309, 294, 257, 15329, 383, 11435, 558, 2464, 309, 294, 416, 339, 51808], "temperature": 0.0, "avg_logprob": -0.31170566661937815, "compression_ratio": 1.559782608695652, "no_speech_prob": 0.007934506051242352}, {"id": 695, "seek": 352688, "start": 3527.12, "end": 3530.88, "text": " If you want some of these extra fancy features", "tokens": [50376, 759, 291, 528, 512, 295, 613, 2857, 10247, 4122, 50564], "temperature": 0.0, "avg_logprob": -0.2118825912475586, "compression_ratio": 1.6694560669456067, "no_speech_prob": 0.003271781839430332}, {"id": 696, "seek": 352688, "start": 3531.6400000000003, "end": 3533.6400000000003, "text": " Like you really just want to be able to glob", "tokens": [50602, 1743, 291, 534, 445, 528, 281, 312, 1075, 281, 16125, 50702], "temperature": 0.0, "avg_logprob": -0.2118825912475586, "compression_ratio": 1.6694560669456067, "no_speech_prob": 0.003271781839430332}, {"id": 697, "seek": 352688, "start": 3534.0, "end": 3540.32, "text": " Tick things like very quickly or you want to like search through whatever then like do you know do it in conch as well?", "tokens": [50720, 314, 618, 721, 411, 588, 2661, 420, 291, 528, 281, 411, 3164, 807, 2035, 550, 411, 360, 291, 458, 360, 309, 294, 416, 339, 382, 731, 30, 51036], "temperature": 0.0, "avg_logprob": -0.2118825912475586, "compression_ratio": 1.6694560669456067, "no_speech_prob": 0.003271781839430332}, {"id": 698, "seek": 352688, "start": 3540.32, "end": 3542.32, "text": " That that's my kind of", "tokens": [51036, 663, 300, 311, 452, 733, 295, 51136], "temperature": 0.0, "avg_logprob": -0.2118825912475586, "compression_ratio": 1.6694560669456067, "no_speech_prob": 0.003271781839430332}, {"id": 699, "seek": 352688, "start": 3542.36, "end": 3546.32, "text": " We'll see some other syntax later where there's conch specific things", "tokens": [51138, 492, 603, 536, 512, 661, 28431, 1780, 689, 456, 311, 416, 339, 2685, 721, 51336], "temperature": 0.0, "avg_logprob": -0.2118825912475586, "compression_ratio": 1.6694560669456067, "no_speech_prob": 0.003271781839430332}, {"id": 700, "seek": 352688, "start": 3546.48, "end": 3550.0, "text": " But at this point it's kind of like if you're doing a ton of like", "tokens": [51344, 583, 412, 341, 935, 309, 311, 733, 295, 411, 498, 291, 434, 884, 257, 2952, 295, 411, 51520], "temperature": 0.0, "avg_logprob": -0.2118825912475586, "compression_ratio": 1.6694560669456067, "no_speech_prob": 0.003271781839430332}, {"id": 701, "seek": 352688, "start": 3550.76, "end": 3552.32, "text": " basically scripting", "tokens": [51558, 1936, 5755, 278, 51636], "temperature": 0.0, "avg_logprob": -0.2118825912475586, "compression_ratio": 1.6694560669456067, "no_speech_prob": 0.003271781839430332}, {"id": 702, "seek": 352688, "start": 3552.32, "end": 3553.6, "text": " You know", "tokens": [51636, 509, 458, 51700], "temperature": 0.0, "avg_logprob": -0.2118825912475586, "compression_ratio": 1.6694560669456067, "no_speech_prob": 0.003271781839430332}, {"id": 703, "seek": 355360, "start": 3553.6, "end": 3558.48, "text": " Like then you should be using conch because it's actually meant as a scripting language unlike Python", "tokens": [50364, 1743, 550, 291, 820, 312, 1228, 416, 339, 570, 309, 311, 767, 4140, 382, 257, 5755, 278, 2856, 8343, 15329, 50608], "temperature": 0.0, "avg_logprob": -0.2797581722861842, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0015239480417221785}, {"id": 704, "seek": 355360, "start": 3562.24, "end": 3565.16, "text": " Oh, yeah, yeah, yeah, well we can talk about those afterwards", "tokens": [50796, 876, 11, 1338, 11, 1338, 11, 1338, 11, 731, 321, 393, 751, 466, 729, 10543, 50942], "temperature": 0.0, "avg_logprob": -0.2797581722861842, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0015239480417221785}, {"id": 705, "seek": 355360, "start": 3565.52, "end": 3570.08, "text": " Yeah, yeah, for sure first for people who work at a certain institution. They can also use all my internal ones just saying", "tokens": [50960, 865, 11, 1338, 11, 337, 988, 700, 337, 561, 567, 589, 412, 257, 1629, 7818, 13, 814, 393, 611, 764, 439, 452, 6920, 2306, 445, 1566, 51188], "temperature": 0.0, "avg_logprob": -0.2797581722861842, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0015239480417221785}, {"id": 706, "seek": 355360, "start": 3570.8399999999997, "end": 3573.56, "text": " Sorry, everyone else. I'll show you other things, but um, yeah", "tokens": [51226, 4919, 11, 1518, 1646, 13, 286, 603, 855, 291, 661, 721, 11, 457, 1105, 11, 1338, 51362], "temperature": 0.0, "avg_logprob": -0.2797581722861842, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0015239480417221785}, {"id": 707, "seek": 355360, "start": 3575.08, "end": 3577.08, "text": " Tom I think you're next", "tokens": [51438, 5041, 286, 519, 291, 434, 958, 51538], "temperature": 0.0, "avg_logprob": -0.2797581722861842, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0015239480417221785}, {"id": 708, "seek": 357708, "start": 3578.08, "end": 3580.08, "text": " Some", "tokens": [50414, 2188, 50514], "temperature": 0.0, "avg_logprob": -0.2517546653747559, "compression_ratio": 1.443661971830986, "no_speech_prob": 0.01589970663189888}, {"id": 709, "seek": 357708, "start": 3580.44, "end": 3586.0, "text": " Yes, yep, so the question is can you import conch code and use some of this stuff in Python?", "tokens": [50532, 1079, 11, 18633, 11, 370, 264, 1168, 307, 393, 291, 974, 416, 339, 3089, 293, 764, 512, 295, 341, 1507, 294, 15329, 30, 50810], "temperature": 0.0, "avg_logprob": -0.2517546653747559, "compression_ratio": 1.443661971830986, "no_speech_prob": 0.01589970663189888}, {"id": 710, "seek": 357708, "start": 3597.24, "end": 3599.24, "text": " So we don't have an", "tokens": [51372, 407, 321, 500, 380, 362, 364, 51472], "temperature": 0.0, "avg_logprob": -0.2517546653747559, "compression_ratio": 1.443661971830986, "no_speech_prob": 0.01589970663189888}, {"id": 711, "seek": 357708, "start": 3599.7999999999997, "end": 3605.88, "text": " Yes, if we haven't we have we don't have that particular use case lined out so much but", "tokens": [51500, 1079, 11, 498, 321, 2378, 380, 321, 362, 321, 500, 380, 362, 300, 1729, 764, 1389, 17189, 484, 370, 709, 457, 51804], "temperature": 0.0, "avg_logprob": -0.2517546653747559, "compression_ratio": 1.443661971830986, "no_speech_prob": 0.01589970663189888}, {"id": 712, "seek": 360708, "start": 3607.08, "end": 3611.0, "text": " I would say there are two things there. So one we have a", "tokens": [50364, 286, 576, 584, 456, 366, 732, 721, 456, 13, 407, 472, 321, 362, 257, 50560], "temperature": 0.0, "avg_logprob": -0.23825131370907737, "compression_ratio": 1.7489878542510122, "no_speech_prob": 0.002251408528536558}, {"id": 713, "seek": 360708, "start": 3612.0, "end": 3614.6, "text": " Quote-unquote standard library where we have sort of", "tokens": [50610, 2326, 1370, 12, 409, 25016, 3832, 6405, 689, 321, 362, 1333, 295, 50740], "temperature": 0.0, "avg_logprob": -0.23825131370907737, "compression_ratio": 1.7489878542510122, "no_speech_prob": 0.002251408528536558}, {"id": 714, "seek": 360708, "start": 3615.0, "end": 3620.2, "text": " Extensions and updates to standard library things to make it easier so you can do like import conch.lib.os", "tokens": [50760, 9881, 8302, 293, 9205, 281, 3832, 6405, 721, 281, 652, 309, 3571, 370, 291, 393, 360, 411, 974, 416, 339, 13, 38270, 13, 329, 51020], "temperature": 0.0, "avg_logprob": -0.23825131370907737, "compression_ratio": 1.7489878542510122, "no_speech_prob": 0.002251408528536558}, {"id": 715, "seek": 360708, "start": 3621.3199999999997, "end": 3625.68, "text": " And you get some like like you get a remove tree that actually works on all platforms and", "tokens": [51076, 400, 291, 483, 512, 411, 411, 291, 483, 257, 4159, 4230, 300, 767, 1985, 322, 439, 9473, 293, 51294], "temperature": 0.0, "avg_logprob": -0.23825131370907737, "compression_ratio": 1.7489878542510122, "no_speech_prob": 0.002251408528536558}, {"id": 716, "seek": 360708, "start": 3626.2, "end": 3633.0, "text": " You get like if you do like some process you get a version of run that uses our thing and returns the command pipeline object", "tokens": [51320, 509, 483, 411, 498, 291, 360, 411, 512, 1399, 291, 483, 257, 3037, 295, 1190, 300, 4960, 527, 551, 293, 11247, 264, 5622, 15517, 2657, 51660], "temperature": 0.0, "avg_logprob": -0.23825131370907737, "compression_ratio": 1.7489878542510122, "no_speech_prob": 0.002251408528536558}, {"id": 717, "seek": 363300, "start": 3634.0, "end": 3637.2, "text": " And you can also just get an executor back", "tokens": [50414, 400, 291, 393, 611, 445, 483, 364, 7568, 284, 646, 50574], "temperature": 0.0, "avg_logprob": -0.23435928424199423, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.003537125186994672}, {"id": 718, "seek": 363300, "start": 3637.2, "end": 3642.76, "text": " And then you can like like you would run conch code and you're like you would run Python code through a normal like", "tokens": [50574, 400, 550, 291, 393, 411, 411, 291, 576, 1190, 416, 339, 3089, 293, 291, 434, 411, 291, 576, 1190, 15329, 3089, 807, 257, 2710, 411, 50852], "temperature": 0.0, "avg_logprob": -0.23435928424199423, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.003537125186994672}, {"id": 719, "seek": 363300, "start": 3643.08, "end": 3647.2, "text": " Exact thing and you can do that that might not be what you want exactly", "tokens": [50868, 7199, 551, 293, 291, 393, 360, 300, 300, 1062, 406, 312, 437, 291, 528, 2293, 51074], "temperature": 0.0, "avg_logprob": -0.23435928424199423, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.003537125186994672}, {"id": 720, "seek": 363300, "start": 3648.32, "end": 3652.04, "text": " But I like the way your brain is thinking so maybe we should talk more about that", "tokens": [51130, 583, 286, 411, 264, 636, 428, 3567, 307, 1953, 370, 1310, 321, 820, 751, 544, 466, 300, 51316], "temperature": 0.0, "avg_logprob": -0.23435928424199423, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.003537125186994672}, {"id": 721, "seek": 363300, "start": 3652.72, "end": 3654.72, "text": " afterwards, yeah, so", "tokens": [51350, 10543, 11, 1338, 11, 370, 51450], "temperature": 0.0, "avg_logprob": -0.23435928424199423, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.003537125186994672}, {"id": 722, "seek": 363300, "start": 3654.72, "end": 3656.88, "text": " And there was another question back there. I think yeah", "tokens": [51450, 400, 456, 390, 1071, 1168, 646, 456, 13, 286, 519, 1338, 51558], "temperature": 0.0, "avg_logprob": -0.23435928424199423, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.003537125186994672}, {"id": 723, "seek": 366300, "start": 3663.0, "end": 3674.0, "text": " Yeah, in regex if right, so it's just a normal", "tokens": [50364, 865, 11, 294, 319, 432, 87, 498, 558, 11, 370, 309, 311, 445, 257, 2710, 50914], "temperature": 0.0, "avg_logprob": -0.2686751439021184, "compression_ratio": 1.4642857142857142, "no_speech_prob": 0.0042629907839000225}, {"id": 724, "seek": 366300, "start": 3675.4, "end": 3677.36, "text": " You just have to do", "tokens": [50984, 509, 445, 362, 281, 360, 51082], "temperature": 0.0, "avg_logprob": -0.2686751439021184, "compression_ratio": 1.4642857142857142, "no_speech_prob": 0.0042629907839000225}, {"id": 725, "seek": 366300, "start": 3677.36, "end": 3681.2, "text": " Right, like say let me just go back to my home directory. So the question is about", "tokens": [51082, 1779, 11, 411, 584, 718, 385, 445, 352, 646, 281, 452, 1280, 21120, 13, 407, 264, 1168, 307, 466, 51274], "temperature": 0.0, "avg_logprob": -0.2686751439021184, "compression_ratio": 1.4642857142857142, "no_speech_prob": 0.0042629907839000225}, {"id": 726, "seek": 366300, "start": 3681.96, "end": 3689.76, "text": " How do you get your dot files with a regex? Well, you just use backslash dot, which is the regex", "tokens": [51312, 1012, 360, 291, 483, 428, 5893, 7098, 365, 257, 319, 432, 87, 30, 1042, 11, 291, 445, 764, 646, 10418, 1299, 5893, 11, 597, 307, 264, 319, 432, 87, 51702], "temperature": 0.0, "avg_logprob": -0.2686751439021184, "compression_ratio": 1.4642857142857142, "no_speech_prob": 0.0042629907839000225}, {"id": 727, "seek": 368976, "start": 3690.76, "end": 3698.8, "text": " The regex escape character for the dot character. So the oops, let me go back up and show you", "tokens": [50414, 440, 319, 432, 87, 7615, 2517, 337, 264, 5893, 2517, 13, 407, 264, 34166, 11, 718, 385, 352, 646, 493, 293, 855, 291, 50816], "temperature": 0.0, "avg_logprob": -0.2861560450659858, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0025102454237639904}, {"id": 728, "seek": 368976, "start": 3699.32, "end": 3701.32, "text": " Apparently I've got a lot of configuration", "tokens": [50842, 16755, 286, 600, 658, 257, 688, 295, 11694, 50942], "temperature": 0.0, "avg_logprob": -0.2861560450659858, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0025102454237639904}, {"id": 729, "seek": 368976, "start": 3704.5600000000004, "end": 3706.5600000000004, "text": " So you would do", "tokens": [51104, 407, 291, 576, 360, 51204], "temperature": 0.0, "avg_logprob": -0.2861560450659858, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0025102454237639904}, {"id": 730, "seek": 368976, "start": 3707.6000000000004, "end": 3709.6000000000004, "text": " Don't tell anyone", "tokens": [51256, 1468, 380, 980, 2878, 51356], "temperature": 0.0, "avg_logprob": -0.2861560450659858, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0025102454237639904}, {"id": 731, "seek": 368976, "start": 3711.32, "end": 3713.32, "text": " Yeah, I'm secretly a bash user", "tokens": [51442, 865, 11, 286, 478, 22611, 257, 46183, 4195, 51542], "temperature": 0.0, "avg_logprob": -0.2861560450659858, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0025102454237639904}, {"id": 732, "seek": 368976, "start": 3715.0400000000004, "end": 3719.1600000000003, "text": " The so you do backslash dot and then dot star", "tokens": [51628, 440, 370, 291, 360, 646, 10418, 1299, 5893, 293, 550, 5893, 3543, 51834], "temperature": 0.0, "avg_logprob": -0.2861560450659858, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0025102454237639904}, {"id": 733, "seek": 371976, "start": 3720.76, "end": 3725.36, "text": " To match anything right so the the backslash dot is a literal period", "tokens": [50414, 1407, 2995, 1340, 558, 370, 264, 264, 646, 10418, 1299, 5893, 307, 257, 20411, 2896, 50644], "temperature": 0.0, "avg_logprob": -0.22082956513362145, "compression_ratio": 1.4825581395348837, "no_speech_prob": 0.0005701151094399393}, {"id": 734, "seek": 371976, "start": 3733.4, "end": 3739.0400000000004, "text": " So I would argue that it's more sane than a lot so the question is about history", "tokens": [51046, 407, 286, 576, 9695, 300, 309, 311, 544, 45610, 813, 257, 688, 370, 264, 1168, 307, 466, 2503, 51328], "temperature": 0.0, "avg_logprob": -0.22082956513362145, "compression_ratio": 1.4825581395348837, "no_speech_prob": 0.0005701151094399393}, {"id": 735, "seek": 371976, "start": 3739.0400000000004, "end": 3745.6000000000004, "text": " How does conch deal with multi-terminal history so conch sort of cribs from the Jupiter playbook a bit so", "tokens": [51328, 1012, 775, 416, 339, 2028, 365, 4825, 12, 7039, 2071, 2503, 370, 416, 339, 1333, 295, 12815, 929, 490, 264, 24567, 862, 2939, 257, 857, 370, 51656], "temperature": 0.0, "avg_logprob": -0.22082956513362145, "compression_ratio": 1.4825581395348837, "no_speech_prob": 0.0005701151094399393}, {"id": 736, "seek": 374560, "start": 3746.16, "end": 3752.88, "text": " By default all of your history is stored per session in a JSON file in", "tokens": [50392, 3146, 7576, 439, 295, 428, 2503, 307, 12187, 680, 5481, 294, 257, 31828, 3991, 294, 50728], "temperature": 0.0, "avg_logprob": -0.21140066782633463, "compression_ratio": 1.6933962264150944, "no_speech_prob": 0.001016057562083006}, {"id": 737, "seek": 374560, "start": 3753.3199999999997, "end": 3755.3199999999997, "text": " the standard like", "tokens": [50750, 264, 3832, 411, 50850], "temperature": 0.0, "avg_logprob": -0.21140066782633463, "compression_ratio": 1.6933962264150944, "no_speech_prob": 0.001016057562083006}, {"id": 738, "seek": 374560, "start": 3755.72, "end": 3762.3199999999997, "text": " Configuration location so you can go back and get each sessions history and then the terminal application itself", "tokens": [50870, 44151, 8167, 4914, 370, 291, 393, 352, 646, 293, 483, 1184, 11081, 2503, 293, 550, 264, 14709, 3861, 2564, 51200], "temperature": 0.0, "avg_logprob": -0.21140066782633463, "compression_ratio": 1.6933962264150944, "no_speech_prob": 0.001016057562083006}, {"id": 739, "seek": 374560, "start": 3762.4, "end": 3768.36, "text": " Will present that to you in whatever nice way it needs to you can also switch to a sequel light history back end", "tokens": [51204, 3099, 1974, 300, 281, 291, 294, 2035, 1481, 636, 309, 2203, 281, 291, 393, 611, 3679, 281, 257, 20622, 1442, 2503, 646, 917, 51502], "temperature": 0.0, "avg_logprob": -0.21140066782633463, "compression_ratio": 1.6933962264150944, "no_speech_prob": 0.001016057562083006}, {"id": 740, "seek": 374560, "start": 3768.36, "end": 3770.36, "text": " if you want to store a sequel light", "tokens": [51502, 498, 291, 528, 281, 3531, 257, 20622, 1442, 51602], "temperature": 0.0, "avg_logprob": -0.21140066782633463, "compression_ratio": 1.6933962264150944, "no_speech_prob": 0.001016057562083006}, {"id": 741, "seek": 374560, "start": 3770.36, "end": 3772.12, "text": " there is", "tokens": [51602, 456, 307, 51690], "temperature": 0.0, "avg_logprob": -0.21140066782633463, "compression_ratio": 1.6933962264150944, "no_speech_prob": 0.001016057562083006}, {"id": 742, "seek": 377212, "start": 3772.16, "end": 3780.24, "text": " Tons of there's basically as much metadata as you want in the in the history and that's very configurable through environment variables", "tokens": [50366, 314, 892, 295, 456, 311, 1936, 382, 709, 26603, 382, 291, 528, 294, 264, 294, 264, 2503, 293, 300, 311, 588, 22192, 712, 807, 2823, 9102, 50770], "temperature": 0.0, "avg_logprob": -0.1976804032045252, "compression_ratio": 1.8617363344051447, "no_speech_prob": 0.004263436421751976}, {"id": 743, "seek": 377212, "start": 3780.7999999999997, "end": 3782.64, "text": " Not going to go through that right now", "tokens": [50798, 1726, 516, 281, 352, 807, 300, 558, 586, 50890], "temperature": 0.0, "avg_logprob": -0.1976804032045252, "compression_ratio": 1.8617363344051447, "no_speech_prob": 0.004263436421751976}, {"id": 744, "seek": 377212, "start": 3782.64, "end": 3788.0, "text": " But I was like that was the thing that that sold me unconsciously was like I was trying to figure out how I'd compile the certain version of", "tokens": [50890, 583, 286, 390, 411, 300, 390, 264, 551, 300, 300, 3718, 385, 18900, 356, 390, 411, 286, 390, 1382, 281, 2573, 484, 577, 286, 1116, 31413, 264, 1629, 3037, 295, 51158], "temperature": 0.0, "avg_logprob": -0.1976804032045252, "compression_ratio": 1.8617363344051447, "no_speech_prob": 0.004263436421751976}, {"id": 745, "seek": 377212, "start": 3788.0, "end": 3790.2, "text": " Petsy and I couldn't remember which environment variables", "tokens": [51158, 430, 1385, 88, 293, 286, 2809, 380, 1604, 597, 2823, 9102, 51268], "temperature": 0.0, "avg_logprob": -0.1976804032045252, "compression_ratio": 1.8617363344051447, "no_speech_prob": 0.004263436421751976}, {"id": 746, "seek": 377212, "start": 3790.2, "end": 3794.18, "text": " I had set when I ran the thing and like you can't figure it out you look at your back history like well", "tokens": [51268, 286, 632, 992, 562, 286, 5872, 264, 551, 293, 411, 291, 393, 380, 2573, 309, 484, 291, 574, 412, 428, 646, 2503, 411, 731, 51467], "temperature": 0.0, "avg_logprob": -0.1976804032045252, "compression_ratio": 1.8617363344051447, "no_speech_prob": 0.004263436421751976}, {"id": 747, "seek": 377212, "start": 3794.18, "end": 3798.7599999999998, "text": " It was one of these seven because it and then you know you do this in contra like oh it was this term", "tokens": [51467, 467, 390, 472, 295, 613, 3407, 570, 309, 293, 550, 291, 458, 291, 360, 341, 294, 10742, 411, 1954, 309, 390, 341, 1433, 51696], "temperature": 0.0, "avg_logprob": -0.1976804032045252, "compression_ratio": 1.8617363344051447, "no_speech_prob": 0.004263436421751976}, {"id": 748, "seek": 379876, "start": 3798.76, "end": 3802.6800000000003, "text": " It was this session when I ran this thing in the tests past those are all the environment variables", "tokens": [50364, 467, 390, 341, 5481, 562, 286, 5872, 341, 551, 294, 264, 6921, 1791, 729, 366, 439, 264, 2823, 9102, 50560], "temperature": 0.0, "avg_logprob": -0.19441557830234743, "compression_ratio": 1.6575875486381324, "no_speech_prob": 0.005467264913022518}, {"id": 749, "seek": 379876, "start": 3802.6800000000003, "end": 3804.6800000000003, "text": " I need because they're just in one self-contained file", "tokens": [50560, 286, 643, 570, 436, 434, 445, 294, 472, 2698, 12, 9000, 3563, 3991, 50660], "temperature": 0.0, "avg_logprob": -0.19441557830234743, "compression_ratio": 1.6575875486381324, "no_speech_prob": 0.005467264913022518}, {"id": 750, "seek": 379876, "start": 3807.36, "end": 3809.36, "text": " Did you have a question over here?", "tokens": [50794, 2589, 291, 362, 257, 1168, 670, 510, 30, 50894], "temperature": 0.0, "avg_logprob": -0.19441557830234743, "compression_ratio": 1.6575875486381324, "no_speech_prob": 0.005467264913022518}, {"id": 751, "seek": 379876, "start": 3813.0, "end": 3818.84, "text": " Yes, if you run source bash you'll get the aliases from that with one caveat", "tokens": [51076, 1079, 11, 498, 291, 1190, 4009, 46183, 291, 603, 483, 264, 10198, 1957, 490, 300, 365, 472, 43012, 51368], "temperature": 0.0, "avg_logprob": -0.19441557830234743, "compression_ratio": 1.6575875486381324, "no_speech_prob": 0.005467264913022518}, {"id": 752, "seek": 379876, "start": 3818.84, "end": 3820.44, "text": " You might have actually seen this pop up on the screen", "tokens": [51368, 509, 1062, 362, 767, 1612, 341, 1665, 493, 322, 264, 2568, 51448], "temperature": 0.0, "avg_logprob": -0.19441557830234743, "compression_ratio": 1.6575875486381324, "no_speech_prob": 0.005467264913022518}, {"id": 753, "seek": 379876, "start": 3820.44, "end": 3824.6800000000003, "text": " Which is that if there are there are collisions in certain aliases and also there are things the z-shell", "tokens": [51448, 3013, 307, 300, 498, 456, 366, 456, 366, 46537, 294, 1629, 10198, 1957, 293, 611, 456, 366, 721, 264, 710, 12, 9611, 285, 51660], "temperature": 0.0, "avg_logprob": -0.19441557830234743, "compression_ratio": 1.6575875486381324, "no_speech_prob": 0.005467264913022518}, {"id": 754, "seek": 382468, "start": 3824.68, "end": 3828.8799999999997, "text": " Especially does is they have like their own built-ins and if the alias refers to those built-ins", "tokens": [50364, 8545, 775, 307, 436, 362, 411, 641, 1065, 3094, 12, 1292, 293, 498, 264, 419, 4609, 14942, 281, 729, 3094, 12, 1292, 50574], "temperature": 0.0, "avg_logprob": -0.18344811924168322, "compression_ratio": 1.6962962962962962, "no_speech_prob": 0.0015972454566508532}, {"id": 755, "seek": 382468, "start": 3828.8799999999997, "end": 3833.24, "text": " We don't pull them in because it'll just break when you try to run it because it's gonna look for a command that doesn't exist", "tokens": [50574, 492, 500, 380, 2235, 552, 294, 570, 309, 603, 445, 1821, 562, 291, 853, 281, 1190, 309, 570, 309, 311, 799, 574, 337, 257, 5622, 300, 1177, 380, 2514, 50792], "temperature": 0.0, "avg_logprob": -0.18344811924168322, "compression_ratio": 1.6962962962962962, "no_speech_prob": 0.0015972454566508532}, {"id": 756, "seek": 382468, "start": 3837.04, "end": 3840.44, "text": " There's I think there's some experimental some yeah, some people have done that", "tokens": [50982, 821, 311, 286, 519, 456, 311, 512, 17069, 512, 1338, 11, 512, 561, 362, 1096, 300, 51152], "temperature": 0.0, "avg_logprob": -0.18344811924168322, "compression_ratio": 1.6962962962962962, "no_speech_prob": 0.0015972454566508532}, {"id": 757, "seek": 382468, "start": 3840.8799999999997, "end": 3846.8799999999997, "text": " But yeah, I don't use it. So but yeah, there are people who do that. We're happy to help try to figure that out though", "tokens": [51174, 583, 1338, 11, 286, 500, 380, 764, 309, 13, 407, 457, 1338, 11, 456, 366, 561, 567, 360, 300, 13, 492, 434, 2055, 281, 854, 853, 281, 2573, 300, 484, 1673, 51474], "temperature": 0.0, "avg_logprob": -0.18344811924168322, "compression_ratio": 1.6962962962962962, "no_speech_prob": 0.0015972454566508532}, {"id": 758, "seek": 382468, "start": 3847.68, "end": 3849.68, "text": " Well, I am anyway", "tokens": [51514, 1042, 11, 286, 669, 4033, 51614], "temperature": 0.0, "avg_logprob": -0.18344811924168322, "compression_ratio": 1.6962962962962962, "no_speech_prob": 0.0015972454566508532}, {"id": 759, "seek": 382468, "start": 3850.04, "end": 3852.04, "text": " Okay, move on but", "tokens": [51632, 1033, 11, 1286, 322, 457, 51732], "temperature": 0.0, "avg_logprob": -0.18344811924168322, "compression_ratio": 1.6962962962962962, "no_speech_prob": 0.0015972454566508532}, {"id": 760, "seek": 385204, "start": 3853.0, "end": 3854.4, "text": " So", "tokens": [50412, 407, 50482], "temperature": 0.0, "avg_logprob": -0.28045072555541994, "compression_ratio": 1.7127272727272727, "no_speech_prob": 0.0006262010429054499}, {"id": 761, "seek": 385204, "start": 3854.4, "end": 3857.6, "text": " Next up this is not new syntax for contrary way, but it's Python. So", "tokens": [50482, 3087, 493, 341, 307, 406, 777, 28431, 337, 19506, 636, 11, 457, 309, 311, 15329, 13, 407, 50642], "temperature": 0.0, "avg_logprob": -0.28045072555541994, "compression_ratio": 1.7127272727272727, "no_speech_prob": 0.0006262010429054499}, {"id": 762, "seek": 385204, "start": 3858.2, "end": 3860.2, "text": " Formatted string literals are great", "tokens": [50672, 10126, 32509, 6798, 2733, 1124, 366, 869, 50772], "temperature": 0.0, "avg_logprob": -0.28045072555541994, "compression_ratio": 1.7127272727272727, "no_speech_prob": 0.0006262010429054499}, {"id": 763, "seek": 385204, "start": 3860.32, "end": 3866.0, "text": " And they're part of Python, which means if you are running punch on Python three six or higher, which you should be", "tokens": [50778, 400, 436, 434, 644, 295, 15329, 11, 597, 1355, 498, 291, 366, 2614, 8135, 322, 15329, 1045, 2309, 420, 2946, 11, 597, 291, 820, 312, 51062], "temperature": 0.0, "avg_logprob": -0.28045072555541994, "compression_ratio": 1.7127272727272727, "no_speech_prob": 0.0006262010429054499}, {"id": 764, "seek": 385204, "start": 3866.92, "end": 3868.92, "text": " Then they just work", "tokens": [51108, 1396, 436, 445, 589, 51208], "temperature": 0.0, "avg_logprob": -0.28045072555541994, "compression_ratio": 1.7127272727272727, "no_speech_prob": 0.0006262010429054499}, {"id": 765, "seek": 385204, "start": 3869.44, "end": 3871.48, "text": " And they're really fantastic if you haven't played with these", "tokens": [51234, 400, 436, 434, 534, 5456, 498, 291, 2378, 380, 3737, 365, 613, 51336], "temperature": 0.0, "avg_logprob": -0.28045072555541994, "compression_ratio": 1.7127272727272727, "no_speech_prob": 0.0006262010429054499}, {"id": 766, "seek": 385204, "start": 3871.48, "end": 3876.4, "text": " I think they're like they're my favorites like simple thing that should have always been there. I think I really enjoy them", "tokens": [51336, 286, 519, 436, 434, 411, 436, 434, 452, 16907, 411, 2199, 551, 300, 820, 362, 1009, 668, 456, 13, 286, 519, 286, 534, 2103, 552, 51582], "temperature": 0.0, "avg_logprob": -0.28045072555541994, "compression_ratio": 1.7127272727272727, "no_speech_prob": 0.0006262010429054499}, {"id": 767, "seek": 385204, "start": 3877.52, "end": 3879.52, "text": " And yeah, the way they work if you have a", "tokens": [51638, 400, 1338, 11, 264, 636, 436, 589, 498, 291, 362, 257, 51738], "temperature": 0.0, "avg_logprob": -0.28045072555541994, "compression_ratio": 1.7127272727272727, "no_speech_prob": 0.0006262010429054499}, {"id": 768, "seek": 387952, "start": 3880.4, "end": 3886.32, "text": " Variable defined then instead of doing a dot format or doing like the you know parentheses, you know argument", "tokens": [50408, 32511, 712, 7642, 550, 2602, 295, 884, 257, 5893, 7877, 420, 884, 411, 264, 291, 458, 34153, 11, 291, 458, 6770, 50704], "temperature": 0.0, "avg_logprob": -0.19773620066016612, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.00041074445471167564}, {"id": 769, "seek": 387952, "start": 3886.32, "end": 3889.4, "text": " You can just have a string pre-pended with an F", "tokens": [50704, 509, 393, 445, 362, 257, 6798, 659, 12, 79, 3502, 365, 364, 479, 50858], "temperature": 0.0, "avg_logprob": -0.19773620066016612, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.00041074445471167564}, {"id": 770, "seek": 387952, "start": 3889.44, "end": 3895.7599999999998, "text": " You wrap curly braces around the variable and it just gets evaluated at you know at that time and then prints the results", "tokens": [50860, 509, 7019, 32066, 41537, 926, 264, 7006, 293, 309, 445, 2170, 25509, 412, 291, 458, 412, 300, 565, 293, 550, 22305, 264, 3542, 51176], "temperature": 0.0, "avg_logprob": -0.19773620066016612, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.00041074445471167564}, {"id": 771, "seek": 387952, "start": 3895.7599999999998, "end": 3897.7599999999998, "text": " So it's very handy", "tokens": [51176, 407, 309, 311, 588, 13239, 51276], "temperature": 0.0, "avg_logprob": -0.19773620066016612, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.00041074445471167564}, {"id": 772, "seek": 387952, "start": 3898.52, "end": 3900.52, "text": " There", "tokens": [51314, 821, 51414], "temperature": 0.0, "avg_logprob": -0.19773620066016612, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.00041074445471167564}, {"id": 773, "seek": 387952, "start": 3900.68, "end": 3904.04, "text": " We also have a thing that is not in play on which is called a path string literal", "tokens": [51422, 492, 611, 362, 257, 551, 300, 307, 406, 294, 862, 322, 597, 307, 1219, 257, 3100, 6798, 20411, 51590], "temperature": 0.0, "avg_logprob": -0.19773620066016612, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.00041074445471167564}, {"id": 774, "seek": 387952, "start": 3904.8, "end": 3906.8, "text": " and this", "tokens": [51628, 293, 341, 51728], "temperature": 0.0, "avg_logprob": -0.19773620066016612, "compression_ratio": 1.6596638655462186, "no_speech_prob": 0.00041074445471167564}, {"id": 775, "seek": 390680, "start": 3906.96, "end": 3914.0, "text": " If you prepend a string with a P and then you have a quote what it returns is a path lib path object of", "tokens": [50372, 759, 291, 2666, 521, 257, 6798, 365, 257, 430, 293, 550, 291, 362, 257, 6513, 437, 309, 11247, 307, 257, 3100, 22854, 3100, 2657, 295, 50724], "temperature": 0.0, "avg_logprob": -0.246393620967865, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.00018521746096666902}, {"id": 776, "seek": 390680, "start": 3914.2400000000002, "end": 3921.0, "text": " The string that's there. So for instance, if you were I went the wrong way if you do like path equals", "tokens": [50736, 440, 6798, 300, 311, 456, 13, 407, 337, 5197, 11, 498, 291, 645, 286, 1437, 264, 2085, 636, 498, 291, 360, 411, 3100, 6915, 51074], "temperature": 0.0, "avg_logprob": -0.246393620967865, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.00018521746096666902}, {"id": 777, "seek": 390680, "start": 3923.36, "end": 3925.36, "text": " Thing", "tokens": [51192, 30902, 51292], "temperature": 0.0, "avg_logprob": -0.246393620967865, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.00018521746096666902}, {"id": 778, "seek": 390680, "start": 3927.84, "end": 3931.6000000000004, "text": " You got a you know on on Linux you got a posix path on Windows you got something else", "tokens": [51416, 509, 658, 257, 291, 458, 322, 322, 18734, 291, 658, 257, 1366, 970, 3100, 322, 8591, 291, 658, 746, 1646, 51604], "temperature": 0.0, "avg_logprob": -0.246393620967865, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.00018521746096666902}, {"id": 779, "seek": 390680, "start": 3931.6000000000004, "end": 3933.6800000000003, "text": " But it's just using path live under the hood so it'll work", "tokens": [51604, 583, 309, 311, 445, 1228, 3100, 1621, 833, 264, 13376, 370, 309, 603, 589, 51708], "temperature": 0.0, "avg_logprob": -0.246393620967865, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.00018521746096666902}, {"id": 780, "seek": 393368, "start": 3934.48, "end": 3938.64, "text": " If you save that to a thing you can also then use tab completion on this object", "tokens": [50404, 759, 291, 3155, 300, 281, 257, 551, 291, 393, 611, 550, 764, 4421, 19372, 322, 341, 2657, 50612], "temperature": 0.0, "avg_logprob": -0.2746093681266716, "compression_ratio": 1.7192307692307693, "no_speech_prob": 0.0008828667923808098}, {"id": 781, "seek": 393368, "start": 3939.2799999999997, "end": 3941.2, "text": " Like check does that folder exist or not?", "tokens": [50644, 1743, 1520, 775, 300, 10820, 2514, 420, 406, 30, 50740], "temperature": 0.0, "avg_logprob": -0.2746093681266716, "compression_ratio": 1.7192307692307693, "no_speech_prob": 0.0008828667923808098}, {"id": 782, "seek": 393368, "start": 3941.2, "end": 3945.44, "text": " You could then create that folder or I mean path. This is just using path. The path is great", "tokens": [50740, 509, 727, 550, 1884, 300, 10820, 420, 286, 914, 3100, 13, 639, 307, 445, 1228, 3100, 13, 440, 3100, 307, 869, 50952], "temperature": 0.0, "avg_logprob": -0.2746093681266716, "compression_ratio": 1.7192307692307693, "no_speech_prob": 0.0008828667923808098}, {"id": 783, "seek": 393368, "start": 3945.44, "end": 3948.3999999999996, "text": " But we have this sort of shortcut syntax to get into it", "tokens": [50952, 583, 321, 362, 341, 1333, 295, 24822, 28431, 281, 483, 666, 309, 51100], "temperature": 0.0, "avg_logprob": -0.2746093681266716, "compression_ratio": 1.7192307692307693, "no_speech_prob": 0.0008828667923808098}, {"id": 784, "seek": 393368, "start": 3953.04, "end": 3956.7999999999997, "text": " Oh, and I'll get there just a little great thing about path lib is that you can do", "tokens": [51332, 876, 11, 293, 286, 603, 483, 456, 445, 257, 707, 869, 551, 466, 3100, 22854, 307, 300, 291, 393, 360, 51520], "temperature": 0.0, "avg_logprob": -0.2746093681266716, "compression_ratio": 1.7192307692307693, "no_speech_prob": 0.0008828667923808098}, {"id": 785, "seek": 393368, "start": 3957.56, "end": 3962.3599999999997, "text": " path joining using the they out overloaded the division operator for this so you just do like", "tokens": [51558, 3100, 5549, 1228, 264, 436, 484, 28777, 292, 264, 10044, 12973, 337, 341, 370, 291, 445, 360, 411, 51798], "temperature": 0.0, "avg_logprob": -0.2746093681266716, "compression_ratio": 1.7192307692307693, "no_speech_prob": 0.0008828667923808098}, {"id": 786, "seek": 396236, "start": 3963.08, "end": 3968.52, "text": " Path of object divided by thing and it does the join correctly depending on the underlying operating system", "tokens": [50400, 21914, 295, 2657, 6666, 538, 551, 293, 309, 775, 264, 3917, 8944, 5413, 322, 264, 14217, 7447, 1185, 50672], "temperature": 0.0, "avg_logprob": -0.16792536754997409, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.000148736362461932}, {"id": 787, "seek": 396236, "start": 3968.52, "end": 3973.2400000000002, "text": " So it takes like all of that deep pain out of like trying to get stuff to work on windows and Linux at the same time", "tokens": [50672, 407, 309, 2516, 411, 439, 295, 300, 2452, 1822, 484, 295, 411, 1382, 281, 483, 1507, 281, 589, 322, 9309, 293, 18734, 412, 264, 912, 565, 50908], "temperature": 0.0, "avg_logprob": -0.16792536754997409, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.000148736362461932}, {"id": 788, "seek": 396236, "start": 3975.96, "end": 3977.4, "text": " Yeah", "tokens": [51044, 865, 51116], "temperature": 0.0, "avg_logprob": -0.16792536754997409, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.000148736362461932}, {"id": 789, "seek": 396236, "start": 3977.4, "end": 3984.28, "text": " So there are f strings from python we've added p strings the the natural question is what what does a pf string look like?", "tokens": [51116, 407, 456, 366, 283, 13985, 490, 38797, 321, 600, 3869, 280, 13985, 264, 264, 3303, 1168, 307, 437, 437, 775, 257, 280, 69, 6798, 574, 411, 30, 51460], "temperature": 0.0, "avg_logprob": -0.16792536754997409, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.000148736362461932}, {"id": 790, "seek": 396236, "start": 3986.44, "end": 3991.7200000000003, "text": " And it looks like awesome is what it looks like so you can define variables", "tokens": [51568, 400, 309, 1542, 411, 3476, 307, 437, 309, 1542, 411, 370, 291, 393, 6964, 9102, 51832], "temperature": 0.0, "avg_logprob": -0.16792536754997409, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.000148736362461932}, {"id": 791, "seek": 399236, "start": 3993.0, "end": 3994.1200000000003, "text": " um", "tokens": [50396, 1105, 50452], "temperature": 0.0, "avg_logprob": -0.13377153431927716, "compression_ratio": 1.821917808219178, "no_speech_prob": 0.00011059316602768376}, {"id": 792, "seek": 399236, "start": 3994.1200000000003, "end": 3995.7200000000003, "text": " and then", "tokens": [50452, 293, 550, 50532], "temperature": 0.0, "avg_logprob": -0.13377153431927716, "compression_ratio": 1.821917808219178, "no_speech_prob": 0.00011059316602768376}, {"id": 793, "seek": 399236, "start": 3995.7200000000003, "end": 3997.1600000000003, "text": " you can", "tokens": [50532, 291, 393, 50604], "temperature": 0.0, "avg_logprob": -0.13377153431927716, "compression_ratio": 1.821917808219178, "no_speech_prob": 0.00011059316602768376}, {"id": 794, "seek": 399236, "start": 3997.1600000000003, "end": 3998.84, "text": " Say pf", "tokens": [50604, 6463, 280, 69, 50688], "temperature": 0.0, "avg_logprob": -0.13377153431927716, "compression_ratio": 1.821917808219178, "no_speech_prob": 0.00011059316602768376}, {"id": 795, "seek": 399236, "start": 3998.84, "end": 4003.2400000000002, "text": " And then a string and then you can treat it like an f string in the sense that you can put curly braces", "tokens": [50688, 400, 550, 257, 6798, 293, 550, 291, 393, 2387, 309, 411, 364, 283, 6798, 294, 264, 2020, 300, 291, 393, 829, 32066, 41537, 50908], "temperature": 0.0, "avg_logprob": -0.13377153431927716, "compression_ratio": 1.821917808219178, "no_speech_prob": 0.00011059316602768376}, {"id": 796, "seek": 399236, "start": 4003.2400000000002, "end": 4005.88, "text": " And it will fill in the value of those variables in the string", "tokens": [50908, 400, 309, 486, 2836, 294, 264, 2158, 295, 729, 9102, 294, 264, 6798, 51040], "temperature": 0.0, "avg_logprob": -0.13377153431927716, "compression_ratio": 1.821917808219178, "no_speech_prob": 0.00011059316602768376}, {"id": 797, "seek": 399236, "start": 4006.2000000000003, "end": 4013.1600000000003, "text": " But it's also saying this should be a path lib path so it returns you a path lib path of the result of the f string", "tokens": [51056, 583, 309, 311, 611, 1566, 341, 820, 312, 257, 3100, 22854, 3100, 370, 309, 11247, 291, 257, 3100, 22854, 3100, 295, 264, 1874, 295, 264, 283, 6798, 51404], "temperature": 0.0, "avg_logprob": -0.13377153431927716, "compression_ratio": 1.821917808219178, "no_speech_prob": 0.00011059316602768376}, {"id": 798, "seek": 399236, "start": 4016.1200000000003, "end": 4019.7200000000003, "text": " If you have ever done a lot of painful dev ops this just might seem appealing in some way", "tokens": [51552, 759, 291, 362, 1562, 1096, 257, 688, 295, 11697, 1905, 44663, 341, 445, 1062, 1643, 23842, 294, 512, 636, 51732], "temperature": 0.0, "avg_logprob": -0.13377153431927716, "compression_ratio": 1.821917808219178, "no_speech_prob": 0.00011059316602768376}, {"id": 799, "seek": 401972, "start": 4020.2799999999997, "end": 4021.16, "text": " um", "tokens": [50392, 1105, 50436], "temperature": 0.0, "avg_logprob": -0.17291236806798865, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.0002530505007598549}, {"id": 800, "seek": 401972, "start": 4021.16, "end": 4025.9599999999996, "text": " And the other really handy thing here is uh that the environment variables", "tokens": [50436, 400, 264, 661, 534, 13239, 551, 510, 307, 2232, 300, 264, 2823, 9102, 50676], "temperature": 0.0, "avg_logprob": -0.17291236806798865, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.0002530505007598549}, {"id": 801, "seek": 401972, "start": 4026.3599999999997, "end": 4028.3599999999997, "text": " They are also python objects", "tokens": [50696, 814, 366, 611, 38797, 6565, 50796], "temperature": 0.0, "avg_logprob": -0.17291236806798865, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.0002530505007598549}, {"id": 802, "seek": 401972, "start": 4028.68, "end": 4032.7599999999998, "text": " So you can evaluate those in f strings, which means you can evaluate those in pf strings", "tokens": [50812, 407, 291, 393, 13059, 729, 294, 283, 13985, 11, 597, 1355, 291, 393, 13059, 729, 294, 280, 69, 13985, 51016], "temperature": 0.0, "avg_logprob": -0.17291236806798865, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.0002530505007598549}, {"id": 803, "seek": 401972, "start": 4032.7599999999998, "end": 4038.68, "text": " Which means you can start chaining together environment variables and other values and other things to sort of construct", "tokens": [51016, 3013, 1355, 291, 393, 722, 417, 3686, 1214, 2823, 9102, 293, 661, 4190, 293, 661, 721, 281, 1333, 295, 7690, 51312], "temperature": 0.0, "avg_logprob": -0.17291236806798865, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.0002530505007598549}, {"id": 804, "seek": 401972, "start": 4039.3199999999997, "end": 4041.72, "text": " Paths and folders and file locations", "tokens": [51344, 21914, 82, 293, 31082, 293, 3991, 9253, 51464], "temperature": 0.0, "avg_logprob": -0.17291236806798865, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.0002530505007598549}, {"id": 805, "seek": 401972, "start": 4042.2799999999997, "end": 4047.8799999999997, "text": " Programmatically and then once you have the path lib thing you can start saying does this exist great if not touch it like now add", "tokens": [51492, 8338, 76, 5030, 293, 550, 1564, 291, 362, 264, 3100, 22854, 551, 291, 393, 722, 1566, 775, 341, 2514, 869, 498, 406, 2557, 309, 411, 586, 909, 51772], "temperature": 0.0, "avg_logprob": -0.17291236806798865, "compression_ratio": 1.8832684824902723, "no_speech_prob": 0.0002530505007598549}, {"id": 806, "seek": 404788, "start": 4047.88, "end": 4051.2400000000002, "text": " It over here and now move it over here. No do this thing and all of these things will be", "tokens": [50364, 467, 670, 510, 293, 586, 1286, 309, 670, 510, 13, 883, 360, 341, 551, 293, 439, 295, 613, 721, 486, 312, 50532], "temperature": 0.0, "avg_logprob": -0.19313504145695612, "compression_ratio": 1.5405405405405406, "no_speech_prob": 0.0026716904249042273}, {"id": 807, "seek": 404788, "start": 4053.08, "end": 4056.44, "text": " Cross-platform because uh, it's just using path lib under the hood", "tokens": [50624, 11623, 12, 39975, 837, 570, 2232, 11, 309, 311, 445, 1228, 3100, 22854, 833, 264, 13376, 50792], "temperature": 0.0, "avg_logprob": -0.19313504145695612, "compression_ratio": 1.5405405405405406, "no_speech_prob": 0.0026716904249042273}, {"id": 808, "seek": 404788, "start": 4056.52, "end": 4060.52, "text": " So it doesn't you know, you don't have to worry about which slash you're using or what's being escaped appropriately", "tokens": [50796, 407, 309, 1177, 380, 291, 458, 11, 291, 500, 380, 362, 281, 3292, 466, 597, 17330, 291, 434, 1228, 420, 437, 311, 885, 20397, 23505, 50996], "temperature": 0.0, "avg_logprob": -0.19313504145695612, "compression_ratio": 1.5405405405405406, "no_speech_prob": 0.0026716904249042273}, {"id": 809, "seek": 404788, "start": 4063.88, "end": 4067.1600000000003, "text": " Yeah, hopefully um any questions on this stuff", "tokens": [51164, 865, 11, 4696, 1105, 604, 1651, 322, 341, 1507, 51328], "temperature": 0.0, "avg_logprob": -0.19313504145695612, "compression_ratio": 1.5405405405405406, "no_speech_prob": 0.0026716904249042273}, {"id": 810, "seek": 404788, "start": 4069.6400000000003, "end": 4071.6400000000003, "text": " Not too bad, okay", "tokens": [51452, 1726, 886, 1578, 11, 1392, 51552], "temperature": 0.0, "avg_logprob": -0.19313504145695612, "compression_ratio": 1.5405405405405406, "no_speech_prob": 0.0026716904249042273}, {"id": 811, "seek": 404788, "start": 4071.6400000000003, "end": 4073.0, "text": " okay", "tokens": [51552, 1392, 51620], "temperature": 0.0, "avg_logprob": -0.19313504145695612, "compression_ratio": 1.5405405405405406, "no_speech_prob": 0.0026716904249042273}, {"id": 812, "seek": 407300, "start": 4073.0, "end": 4079.64, "text": " So, uh, we have a couple of exercises here the first one is to look up the absolute file path of every markdown file and the tutorial repo", "tokens": [50364, 407, 11, 2232, 11, 321, 362, 257, 1916, 295, 11900, 510, 264, 700, 472, 307, 281, 574, 493, 264, 8236, 3991, 3100, 295, 633, 1491, 5093, 3991, 293, 264, 7073, 49040, 50696], "temperature": 0.0, "avg_logprob": -0.1695097825658603, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.000578967563342303}, {"id": 813, "seek": 407300, "start": 4080.04, "end": 4083.32, "text": " Just you know, you can use whatever you want. You can use bash if you want to too. That's fine. Um", "tokens": [50716, 1449, 291, 458, 11, 291, 393, 764, 2035, 291, 528, 13, 509, 393, 764, 46183, 498, 291, 528, 281, 886, 13, 663, 311, 2489, 13, 3301, 50880], "temperature": 0.0, "avg_logprob": -0.1695097825658603, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.000578967563342303}, {"id": 814, "seek": 407300, "start": 4085.0, "end": 4087.4, "text": " But pf strings and glob ticks are probably your friends here", "tokens": [50964, 583, 280, 69, 13985, 293, 16125, 42475, 366, 1391, 428, 1855, 510, 51084], "temperature": 0.0, "avg_logprob": -0.1695097825658603, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.000578967563342303}, {"id": 815, "seek": 407300, "start": 4088.6, "end": 4091.0, "text": " um, and then um", "tokens": [51144, 1105, 11, 293, 550, 1105, 51264], "temperature": 0.0, "avg_logprob": -0.1695097825658603, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.000578967563342303}, {"id": 816, "seek": 407300, "start": 4091.4, "end": 4096.12, "text": " A phone here is uh to load up a dictionary of every conda package you have installed in your current environment", "tokens": [51284, 316, 2593, 510, 307, 2232, 281, 3677, 493, 257, 25890, 295, 633, 2224, 64, 7372, 291, 362, 8899, 294, 428, 2190, 2823, 51520], "temperature": 0.0, "avg_logprob": -0.1695097825658603, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.000578967563342303}, {"id": 817, "seek": 407300, "start": 4096.6, "end": 4099.0, "text": " If you're not using conda you can just skip this one. That's okay", "tokens": [51544, 759, 291, 434, 406, 1228, 2224, 64, 291, 393, 445, 10023, 341, 472, 13, 663, 311, 1392, 51664], "temperature": 0.0, "avg_logprob": -0.1695097825658603, "compression_ratio": 1.6883561643835616, "no_speech_prob": 0.000578967563342303}, {"id": 818, "seek": 409900, "start": 4099.16, "end": 4105.72, "text": " If you have a questions, of course, just ask us and we'll come around", "tokens": [50372, 759, 291, 362, 257, 1651, 11, 295, 1164, 11, 445, 1029, 505, 293, 321, 603, 808, 926, 50700], "temperature": 0.0, "avg_logprob": -0.2475838968830724, "compression_ratio": 1.3885350318471337, "no_speech_prob": 0.00019716101814992726}, {"id": 819, "seek": 409900, "start": 4110.92, "end": 4113.24, "text": " Yeah, so load it up as a python dictionary", "tokens": [50960, 865, 11, 370, 3677, 309, 493, 382, 257, 38797, 25890, 51076], "temperature": 0.0, "avg_logprob": -0.2475838968830724, "compression_ratio": 1.3885350318471337, "no_speech_prob": 0.00019716101814992726}, {"id": 820, "seek": 409900, "start": 4120.2, "end": 4121.4, "text": " Well", "tokens": [51424, 1042, 51484], "temperature": 0.0, "avg_logprob": -0.2475838968830724, "compression_ratio": 1.3885350318471337, "no_speech_prob": 0.00019716101814992726}, {"id": 821, "seek": 409900, "start": 4121.4, "end": 4126.84, "text": " The hint is important. Yeah, I run that conda list json command and then I would go from there. Yeah", "tokens": [51484, 440, 12075, 307, 1021, 13, 865, 11, 286, 1190, 300, 2224, 64, 1329, 361, 3015, 5622, 293, 550, 286, 576, 352, 490, 456, 13, 865, 51756], "temperature": 0.0, "avg_logprob": -0.2475838968830724, "compression_ratio": 1.3885350318471337, "no_speech_prob": 0.00019716101814992726}, {"id": 822, "seek": 412900, "start": 4129.4, "end": 4131.4, "text": " All right", "tokens": [50384, 1057, 558, 50484], "temperature": 0.0, "avg_logprob": -0.1728461237237005, "compression_ratio": 1.6621004566210045, "no_speech_prob": 0.00031496991869062185}, {"id": 823, "seek": 412900, "start": 4132.28, "end": 4137.64, "text": " Okay, well then I think we'll go on to the next section, which is the environment", "tokens": [50528, 1033, 11, 731, 550, 286, 519, 321, 603, 352, 322, 281, 264, 958, 3541, 11, 597, 307, 264, 2823, 50796], "temperature": 0.0, "avg_logprob": -0.1728461237237005, "compression_ratio": 1.6621004566210045, "no_speech_prob": 0.00031496991869062185}, {"id": 824, "seek": 412900, "start": 4139.88, "end": 4143.64, "text": " Um, so we um, we touched on this earlier just for a moment", "tokens": [50908, 3301, 11, 370, 321, 1105, 11, 321, 9828, 322, 341, 3071, 445, 337, 257, 1623, 51096], "temperature": 0.0, "avg_logprob": -0.1728461237237005, "compression_ratio": 1.6621004566210045, "no_speech_prob": 0.00031496991869062185}, {"id": 825, "seek": 412900, "start": 4143.64, "end": 4146.44, "text": " But this will be a little more of what's going on and what you can do with it", "tokens": [51096, 583, 341, 486, 312, 257, 707, 544, 295, 437, 311, 516, 322, 293, 437, 291, 393, 360, 365, 309, 51236], "temperature": 0.0, "avg_logprob": -0.1728461237237005, "compression_ratio": 1.6621004566210045, "no_speech_prob": 0.00031496991869062185}, {"id": 826, "seek": 412900, "start": 4147.0, "end": 4150.2, "text": " um, so the uh environment actually lives in", "tokens": [51264, 1105, 11, 370, 264, 2232, 2823, 767, 2909, 294, 51424], "temperature": 0.0, "avg_logprob": -0.1728461237237005, "compression_ratio": 1.6621004566210045, "no_speech_prob": 0.00031496991869062185}, {"id": 827, "seek": 412900, "start": 4150.92, "end": 4155.48, "text": " Dunder conch dot env that's the everything in in conch is living in this dunder conch thing", "tokens": [51460, 413, 6617, 416, 339, 5893, 2267, 300, 311, 264, 1203, 294, 294, 416, 339, 307, 2647, 294, 341, 274, 6617, 416, 339, 551, 51688], "temperature": 0.0, "avg_logprob": -0.1728461237237005, "compression_ratio": 1.6621004566210045, "no_speech_prob": 0.00031496991869062185}, {"id": 828, "seek": 415548, "start": 4155.48, "end": 4160.44, "text": " Like that's where all of the the various bits and pieces are if you want to explore and play around. It's all in there. Um,", "tokens": [50364, 1743, 300, 311, 689, 439, 295, 264, 264, 3683, 9239, 293, 3755, 366, 498, 291, 528, 281, 6839, 293, 862, 926, 13, 467, 311, 439, 294, 456, 13, 3301, 11, 50612], "temperature": 0.0, "avg_logprob": -0.1862935582432178, "compression_ratio": 1.607843137254902, "no_speech_prob": 0.0007204108405858278}, {"id": 829, "seek": 415548, "start": 4161.16, "end": 4163.0, "text": " but uh", "tokens": [50648, 457, 2232, 50740], "temperature": 0.0, "avg_logprob": -0.1862935582432178, "compression_ratio": 1.607843137254902, "no_speech_prob": 0.0007204108405858278}, {"id": 830, "seek": 415548, "start": 4163.0, "end": 4164.12, "text": " The um", "tokens": [50740, 440, 1105, 50796], "temperature": 0.0, "avg_logprob": -0.1862935582432178, "compression_ratio": 1.607843137254902, "no_speech_prob": 0.0007204108405858278}, {"id": 831, "seek": 415548, "start": 4164.12, "end": 4168.5199999999995, "text": " The dollar curly brace ellipsis is the is a shortcut to that that object", "tokens": [50796, 440, 7241, 32066, 38458, 8284, 2600, 271, 307, 264, 307, 257, 24822, 281, 300, 300, 2657, 51016], "temperature": 0.0, "avg_logprob": -0.1862935582432178, "compression_ratio": 1.607843137254902, "no_speech_prob": 0.0007204108405858278}, {"id": 832, "seek": 415548, "start": 4168.5199999999995, "end": 4171.4, "text": " So you don't have to always just type dunder conch dot em to get there", "tokens": [51016, 407, 291, 500, 380, 362, 281, 1009, 445, 2010, 274, 6617, 416, 339, 5893, 846, 281, 483, 456, 51160], "temperature": 0.0, "avg_logprob": -0.1862935582432178, "compression_ratio": 1.607843137254902, "no_speech_prob": 0.0007204108405858278}, {"id": 833, "seek": 415548, "start": 4172.36, "end": 4173.24, "text": " um", "tokens": [51208, 1105, 51252], "temperature": 0.0, "avg_logprob": -0.1862935582432178, "compression_ratio": 1.607843137254902, "no_speech_prob": 0.0007204108405858278}, {"id": 834, "seek": 415548, "start": 4173.24, "end": 4179.5599999999995, "text": " As we mentioned earlier just ready you can check for membership in the environment just using, you know string in", "tokens": [51252, 1018, 321, 2835, 3071, 445, 1919, 291, 393, 1520, 337, 16560, 294, 264, 2823, 445, 1228, 11, 291, 458, 6798, 294, 51568], "temperature": 0.0, "avg_logprob": -0.1862935582432178, "compression_ratio": 1.607843137254902, "no_speech_prob": 0.0007204108405858278}, {"id": 835, "seek": 415548, "start": 4180.36, "end": 4182.36, "text": " environment", "tokens": [51608, 2823, 51708], "temperature": 0.0, "avg_logprob": -0.1862935582432178, "compression_ratio": 1.607843137254902, "no_speech_prob": 0.0007204108405858278}, {"id": 836, "seek": 418236, "start": 4183.16, "end": 4190.36, "text": " And you can also ask for help for environment variables. So there are a lot of environment a lot of different modes and", "tokens": [50404, 400, 291, 393, 611, 1029, 337, 854, 337, 2823, 9102, 13, 407, 456, 366, 257, 688, 295, 2823, 257, 688, 295, 819, 14068, 293, 50764], "temperature": 0.0, "avg_logprob": -0.11624230911482626, "compression_ratio": 1.9534050179211468, "no_speech_prob": 7.719466520939022e-05}, {"id": 837, "seek": 418236, "start": 4191.639999999999, "end": 4194.12, "text": " Kind of extras are enabled via environment variable", "tokens": [50828, 9242, 295, 40961, 366, 15172, 5766, 2823, 7006, 50952], "temperature": 0.0, "avg_logprob": -0.11624230911482626, "compression_ratio": 1.9534050179211468, "no_speech_prob": 7.719466520939022e-05}, {"id": 838, "seek": 418236, "start": 4194.92, "end": 4199.24, "text": " So if you know the name of the environment variable you see it they all have default values", "tokens": [50992, 407, 498, 291, 458, 264, 1315, 295, 264, 2823, 7006, 291, 536, 309, 436, 439, 362, 7576, 4190, 51208], "temperature": 0.0, "avg_logprob": -0.11624230911482626, "compression_ratio": 1.9534050179211468, "no_speech_prob": 7.719466520939022e-05}, {"id": 839, "seek": 418236, "start": 4199.24, "end": 4203.0, "text": " So if you see something that is in your environment, you're like, what is auto cd and why is it false?", "tokens": [51208, 407, 498, 291, 536, 746, 300, 307, 294, 428, 2823, 11, 291, 434, 411, 11, 437, 307, 8399, 269, 67, 293, 983, 307, 309, 7908, 30, 51396], "temperature": 0.0, "avg_logprob": -0.11624230911482626, "compression_ratio": 1.9534050179211468, "no_speech_prob": 7.719466520939022e-05}, {"id": 840, "seek": 418236, "start": 4203.48, "end": 4206.04, "text": " You can ask for help and it will tell you", "tokens": [51420, 509, 393, 1029, 337, 854, 293, 309, 486, 980, 291, 51548], "temperature": 0.0, "avg_logprob": -0.11624230911482626, "compression_ratio": 1.9534050179211468, "no_speech_prob": 7.719466520939022e-05}, {"id": 841, "seek": 418236, "start": 4206.759999999999, "end": 4209.799999999999, "text": " That if you turn it on then you can just type the name of directory and if it exists", "tokens": [51584, 663, 498, 291, 1261, 309, 322, 550, 291, 393, 445, 2010, 264, 1315, 295, 21120, 293, 498, 309, 8198, 51736], "temperature": 0.0, "avg_logprob": -0.11624230911482626, "compression_ratio": 1.9534050179211468, "no_speech_prob": 7.719466520939022e-05}, {"id": 842, "seek": 418236, "start": 4209.88, "end": 4212.04, "text": " It'll just cd into it without you having to type cd", "tokens": [51740, 467, 603, 445, 269, 67, 666, 309, 1553, 291, 1419, 281, 2010, 269, 67, 51848], "temperature": 0.0, "avg_logprob": -0.11624230911482626, "compression_ratio": 1.9534050179211468, "no_speech_prob": 7.719466520939022e-05}, {"id": 843, "seek": 421236, "start": 4213.24, "end": 4214.44, "text": " Um", "tokens": [50408, 3301, 50468], "temperature": 0.0, "avg_logprob": -0.2548419153967569, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.00024141976609826088}, {"id": 844, "seek": 421236, "start": 4214.44, "end": 4215.96, "text": " Huh", "tokens": [50468, 8063, 50544], "temperature": 0.0, "avg_logprob": -0.2548419153967569, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.00024141976609826088}, {"id": 845, "seek": 421236, "start": 4215.96, "end": 4218.28, "text": " Yeah, the help is a method. Yeah, help is method", "tokens": [50544, 865, 11, 264, 854, 307, 257, 3170, 13, 865, 11, 854, 307, 3170, 50660], "temperature": 0.0, "avg_logprob": -0.2548419153967569, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.00024141976609826088}, {"id": 846, "seek": 421236, "start": 4222.04, "end": 4226.759999999999, "text": " Yeah, and also they the docs will tell you if something's configured a month. There are a few environment variables that you are not allowed to configure", "tokens": [50848, 865, 11, 293, 611, 436, 264, 45623, 486, 980, 291, 498, 746, 311, 30538, 257, 1618, 13, 821, 366, 257, 1326, 2823, 9102, 300, 291, 366, 406, 4350, 281, 22162, 51084], "temperature": 0.0, "avg_logprob": -0.2548419153967569, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.00024141976609826088}, {"id": 847, "seek": 421236, "start": 4228.599999999999, "end": 4230.36, "text": " So we don't let you", "tokens": [51176, 407, 321, 500, 380, 718, 291, 51264], "temperature": 0.0, "avg_logprob": -0.2548419153967569, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.00024141976609826088}, {"id": 848, "seek": 421236, "start": 4230.36, "end": 4232.36, "text": " um, so", "tokens": [51264, 1105, 11, 370, 51364], "temperature": 0.0, "avg_logprob": -0.2548419153967569, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.00024141976609826088}, {"id": 849, "seek": 421236, "start": 4232.679999999999, "end": 4235.96, "text": " Also something that's very different from uh bashland here", "tokens": [51380, 2743, 746, 300, 311, 588, 819, 490, 2232, 46183, 1661, 510, 51544], "temperature": 0.0, "avg_logprob": -0.2548419153967569, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.00024141976609826088}, {"id": 850, "seek": 421236, "start": 4237.799999999999, "end": 4239.799999999999, "text": " Is that um", "tokens": [51636, 1119, 300, 1105, 51736], "temperature": 0.0, "avg_logprob": -0.2548419153967569, "compression_ratio": 1.577319587628866, "no_speech_prob": 0.00024141976609826088}, {"id": 851, "seek": 423980, "start": 4240.12, "end": 4245.08, "text": " Contra environment variables are python objects. Um, and that also means that they're typed", "tokens": [50380, 4839, 424, 2823, 9102, 366, 38797, 6565, 13, 3301, 11, 293, 300, 611, 1355, 300, 436, 434, 33941, 50628], "temperature": 0.0, "avg_logprob": -0.17123195562469826, "compression_ratio": 1.6382113821138211, "no_speech_prob": 0.0004371690738480538}, {"id": 852, "seek": 423980, "start": 4246.4400000000005, "end": 4249.08, "text": " You can begin of arguments about typing in python, but not now, please", "tokens": [50696, 509, 393, 1841, 295, 12869, 466, 18444, 294, 38797, 11, 457, 406, 586, 11, 1767, 50828], "temperature": 0.0, "avg_logprob": -0.17123195562469826, "compression_ratio": 1.6382113821138211, "no_speech_prob": 0.0004371690738480538}, {"id": 853, "seek": 423980, "start": 4250.04, "end": 4256.2, "text": " But they do all have types and um, sometimes those types are actually imposed based on a variable name", "tokens": [50876, 583, 436, 360, 439, 362, 3467, 293, 1105, 11, 2171, 729, 3467, 366, 767, 26491, 2361, 322, 257, 7006, 1315, 51184], "temperature": 0.0, "avg_logprob": -0.17123195562469826, "compression_ratio": 1.6382113821138211, "no_speech_prob": 0.0004371690738480538}, {"id": 854, "seek": 423980, "start": 4256.92, "end": 4259.96, "text": " Particularly and the important ones or anything that ends with path", "tokens": [51220, 32281, 293, 264, 1021, 2306, 420, 1340, 300, 5314, 365, 3100, 51372], "temperature": 0.0, "avg_logprob": -0.17123195562469826, "compression_ratio": 1.6382113821138211, "no_speech_prob": 0.0004371690738480538}, {"id": 855, "seek": 423980, "start": 4260.84, "end": 4264.84, "text": " Is going to automatically be converted into what's called an end path", "tokens": [51416, 1119, 516, 281, 6772, 312, 16424, 666, 437, 311, 1219, 364, 917, 3100, 51616], "temperature": 0.0, "avg_logprob": -0.17123195562469826, "compression_ratio": 1.6382113821138211, "no_speech_prob": 0.0004371690738480538}, {"id": 856, "seek": 426484, "start": 4265.8, "end": 4269.56, "text": " And if you've ever had the scenario, let's just we can we can do a show of hands or not", "tokens": [50412, 400, 498, 291, 600, 1562, 632, 264, 9005, 11, 718, 311, 445, 321, 393, 321, 393, 360, 257, 855, 295, 2377, 420, 406, 50600], "temperature": 0.0, "avg_logprob": -0.19573261863306948, "compression_ratio": 1.8300653594771241, "no_speech_prob": 0.021588891744613647}, {"id": 857, "seek": 426484, "start": 4269.56, "end": 4272.12, "text": " But where you've like sourced your bash rc twice", "tokens": [50600, 583, 689, 291, 600, 411, 11006, 1232, 428, 46183, 367, 66, 6091, 50728], "temperature": 0.0, "avg_logprob": -0.19573261863306948, "compression_ratio": 1.8300653594771241, "no_speech_prob": 0.021588891744613647}, {"id": 858, "seek": 426484, "start": 4272.6, "end": 4276.68, "text": " And now your path is your entire path and then your entire path and then something else again", "tokens": [50752, 400, 586, 428, 3100, 307, 428, 2302, 3100, 293, 550, 428, 2302, 3100, 293, 550, 746, 1646, 797, 50956], "temperature": 0.0, "avg_logprob": -0.19573261863306948, "compression_ratio": 1.8300653594771241, "no_speech_prob": 0.021588891744613647}, {"id": 859, "seek": 426484, "start": 4277.64, "end": 4280.12, "text": " Wow, we've got four. Wow. Wow. That's just not even the", "tokens": [51004, 3153, 11, 321, 600, 658, 1451, 13, 3153, 13, 3153, 13, 663, 311, 445, 406, 754, 264, 51128], "temperature": 0.0, "avg_logprob": -0.19573261863306948, "compression_ratio": 1.8300653594771241, "no_speech_prob": 0.021588891744613647}, {"id": 860, "seek": 426484, "start": 4280.68, "end": 4282.52, "text": " That was that that was a raised hand. Yeah, so we've we've all", "tokens": [51156, 663, 390, 300, 300, 390, 257, 6005, 1011, 13, 865, 11, 370, 321, 600, 321, 600, 439, 51248], "temperature": 0.0, "avg_logprob": -0.19573261863306948, "compression_ratio": 1.8300653594771241, "no_speech_prob": 0.021588891744613647}, {"id": 861, "seek": 426484, "start": 4282.76, "end": 4286.04, "text": " Many of us have been have been in this pain place before that's terrible", "tokens": [51260, 5126, 295, 505, 362, 668, 362, 668, 294, 341, 1822, 1081, 949, 300, 311, 6237, 51424], "temperature": 0.0, "avg_logprob": -0.19573261863306948, "compression_ratio": 1.8300653594771241, "no_speech_prob": 0.021588891744613647}, {"id": 862, "seek": 426484, "start": 4287.08, "end": 4293.400000000001, "text": " So in conch that is not this is not a colon delimited string and which comes back to how do you split a non white space delimited string?", "tokens": [51476, 407, 294, 416, 339, 300, 307, 406, 341, 307, 406, 257, 8255, 1103, 332, 1226, 6798, 293, 597, 1487, 646, 281, 577, 360, 291, 7472, 257, 2107, 2418, 1901, 1103, 332, 1226, 6798, 30, 51792], "temperature": 0.0, "avg_logprob": -0.19573261863306948, "compression_ratio": 1.8300653594771241, "no_speech_prob": 0.021588891744613647}, {"id": 863, "seek": 429340, "start": 4293.799999999999, "end": 4296.36, "text": " Anyway, um, you don't because that's terrible", "tokens": [50384, 5684, 11, 1105, 11, 291, 500, 380, 570, 300, 311, 6237, 50512], "temperature": 0.0, "avg_logprob": -0.14091593286265497, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.0003512858529575169}, {"id": 864, "seek": 429340, "start": 4297.0, "end": 4299.0, "text": " But so path is an end path", "tokens": [50544, 583, 370, 3100, 307, 364, 917, 3100, 50644], "temperature": 0.0, "avg_logprob": -0.14091593286265497, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.0003512858529575169}, {"id": 865, "seek": 429340, "start": 4299.08, "end": 4302.679999999999, "text": " Which just means that it's a it's a list of the items on your path", "tokens": [50648, 3013, 445, 1355, 300, 309, 311, 257, 309, 311, 257, 1329, 295, 264, 4754, 322, 428, 3100, 50828], "temperature": 0.0, "avg_logprob": -0.14091593286265497, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.0003512858529575169}, {"id": 866, "seek": 429340, "start": 4302.759999999999, "end": 4309.799999999999, "text": " But this acts like a list which means you can do things like pop individual elements at arbitrary positions out of the path", "tokens": [50832, 583, 341, 10672, 411, 257, 1329, 597, 1355, 291, 393, 360, 721, 411, 1665, 2609, 4959, 412, 23211, 8432, 484, 295, 264, 3100, 51184], "temperature": 0.0, "avg_logprob": -0.14091593286265497, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.0003512858529575169}, {"id": 867, "seek": 429340, "start": 4310.2, "end": 4314.04, "text": " Or you can insert directories into arbitrary positions in the path", "tokens": [51204, 1610, 291, 393, 8969, 5391, 530, 666, 23211, 8432, 294, 264, 3100, 51396], "temperature": 0.0, "avg_logprob": -0.14091593286265497, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.0003512858529575169}, {"id": 868, "seek": 429340, "start": 4315.719999999999, "end": 4317.719999999999, "text": " Which is great", "tokens": [51480, 3013, 307, 869, 51580], "temperature": 0.0, "avg_logprob": -0.14091593286265497, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.0003512858529575169}, {"id": 869, "seek": 429340, "start": 4319.0, "end": 4321.0, "text": " Really really great", "tokens": [51644, 4083, 534, 869, 51744], "temperature": 0.0, "avg_logprob": -0.14091593286265497, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.0003512858529575169}, {"id": 870, "seek": 432100, "start": 4321.56, "end": 4323.56, "text": " Yeah", "tokens": [50392, 865, 50492], "temperature": 0.0, "avg_logprob": -0.23172002735704478, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.005378590431064367}, {"id": 871, "seek": 432100, "start": 4329.08, "end": 4332.44, "text": " No, it's just so just in this if you're if you're mutating your path in your session here", "tokens": [50768, 883, 11, 309, 311, 445, 370, 445, 294, 341, 498, 291, 434, 498, 291, 434, 5839, 990, 428, 3100, 294, 428, 5481, 510, 50936], "temperature": 0.0, "avg_logprob": -0.23172002735704478, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.005378590431064367}, {"id": 872, "seek": 432100, "start": 4332.84, "end": 4335.16, "text": " It it will last for that session until you exit out", "tokens": [50956, 467, 309, 486, 1036, 337, 300, 5481, 1826, 291, 11043, 484, 51072], "temperature": 0.0, "avg_logprob": -0.23172002735704478, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.005378590431064367}, {"id": 873, "seek": 432100, "start": 4335.24, "end": 4339.56, "text": " It won't like also it will not like translate like a separate terminal into you have open", "tokens": [51076, 467, 1582, 380, 411, 611, 309, 486, 406, 411, 13799, 411, 257, 4994, 14709, 666, 291, 362, 1269, 51292], "temperature": 0.0, "avg_logprob": -0.23172002735704478, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.005378590431064367}, {"id": 874, "seek": 432100, "start": 4339.8, "end": 4343.64, "text": " Those are going to be totally separate if you want the question is if you start conch", "tokens": [51304, 3950, 366, 516, 281, 312, 3879, 4994, 498, 291, 528, 264, 1168, 307, 498, 291, 722, 416, 339, 51496], "temperature": 0.0, "avg_logprob": -0.23172002735704478, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.005378590431064367}, {"id": 875, "seek": 432100, "start": 4344.12, "end": 4347.4, "text": " When you play the path and then exit it you're backing the root bash show", "tokens": [51520, 1133, 291, 862, 264, 3100, 293, 550, 11043, 309, 291, 434, 19373, 264, 5593, 46183, 855, 51684], "temperature": 0.0, "avg_logprob": -0.23172002735704478, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.005378590431064367}, {"id": 876, "seek": 434740, "start": 4348.36, "end": 4355.16, "text": " Yes, yeah, yeah, but if you so if you wanted to do path manipulation for all of conch you would put that in your conch RC", "tokens": [50412, 1079, 11, 1338, 11, 1338, 11, 457, 498, 291, 370, 498, 291, 1415, 281, 360, 3100, 26475, 337, 439, 295, 416, 339, 291, 576, 829, 300, 294, 428, 416, 339, 28987, 50752], "temperature": 0.0, "avg_logprob": -0.21001608999151933, "compression_ratio": 1.6634146341463414, "no_speech_prob": 0.0015975839924067259}, {"id": 877, "seek": 434740, "start": 4358.36, "end": 4361.4, "text": " No, because why are you launching conch from bash just that is your", "tokens": [50912, 883, 11, 570, 983, 366, 291, 18354, 416, 339, 490, 46183, 445, 300, 307, 428, 51064], "temperature": 0.0, "avg_logprob": -0.21001608999151933, "compression_ratio": 1.6634146341463414, "no_speech_prob": 0.0015975839924067259}, {"id": 878, "seek": 434740, "start": 4362.759999999999, "end": 4365.24, "text": " I mean that that's the real answer, but the", "tokens": [51132, 286, 914, 300, 300, 311, 264, 957, 1867, 11, 457, 264, 51256], "temperature": 0.0, "avg_logprob": -0.21001608999151933, "compression_ratio": 1.6634146341463414, "no_speech_prob": 0.0015975839924067259}, {"id": 879, "seek": 434740, "start": 4366.2, "end": 4368.2, "text": " the reason you can't do that is", "tokens": [51304, 264, 1778, 291, 393, 380, 360, 300, 307, 51404], "temperature": 0.0, "avg_logprob": -0.21001608999151933, "compression_ratio": 1.6634146341463414, "no_speech_prob": 0.0015975839924067259}, {"id": 880, "seek": 434740, "start": 4368.5199999999995, "end": 4373.639999999999, "text": " Uh, it has to do with how processes communicate. And so if you want to push", "tokens": [51420, 4019, 11, 309, 575, 281, 360, 365, 577, 7555, 7890, 13, 400, 370, 498, 291, 528, 281, 2944, 51676], "temperature": 0.0, "avg_logprob": -0.21001608999151933, "compression_ratio": 1.6634146341463414, "no_speech_prob": 0.0015975839924067259}, {"id": 881, "seek": 437364, "start": 4374.4400000000005, "end": 4377.0, "text": " Environment variables into a parent process", "tokens": [50404, 35354, 9102, 666, 257, 2596, 1399, 50532], "temperature": 0.0, "avg_logprob": -0.10014163653055827, "compression_ratio": 1.6305732484076434, "no_speech_prob": 0.01614256203174591}, {"id": 882, "seek": 437364, "start": 4377.64, "end": 4379.64, "text": " The parent process has to source", "tokens": [50564, 440, 2596, 1399, 575, 281, 4009, 50664], "temperature": 0.0, "avg_logprob": -0.10014163653055827, "compression_ratio": 1.6305732484076434, "no_speech_prob": 0.01614256203174591}, {"id": 883, "seek": 437364, "start": 4380.4400000000005, "end": 4382.4400000000005, "text": " Something coming from the child", "tokens": [50704, 6595, 1348, 490, 264, 1440, 50804], "temperature": 0.0, "avg_logprob": -0.10014163653055827, "compression_ratio": 1.6305732484076434, "no_speech_prob": 0.01614256203174591}, {"id": 884, "seek": 437364, "start": 4383.160000000001, "end": 4385.56, "text": " And so you have to be able to source", "tokens": [50840, 400, 370, 291, 362, 281, 312, 1075, 281, 4009, 50960], "temperature": 0.0, "avg_logprob": -0.10014163653055827, "compression_ratio": 1.6305732484076434, "no_speech_prob": 0.01614256203174591}, {"id": 885, "seek": 437364, "start": 4386.12, "end": 4391.400000000001, "text": " Like you would have to get conch to dump out the environment in a way that like bash or something could source", "tokens": [50988, 1743, 291, 576, 362, 281, 483, 416, 339, 281, 11430, 484, 264, 2823, 294, 257, 636, 300, 411, 46183, 420, 746, 727, 4009, 51252], "temperature": 0.0, "avg_logprob": -0.10014163653055827, "compression_ratio": 1.6305732484076434, "no_speech_prob": 0.01614256203174591}, {"id": 886, "seek": 440364, "start": 4403.64, "end": 4405.64, "text": " Again", "tokens": [50364, 3764, 50464], "temperature": 0.0, "avg_logprob": -0.22229116790148676, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.012235671281814575}, {"id": 887, "seek": 440364, "start": 4411.0, "end": 4413.4800000000005, "text": " So so we do that. Yeah, yeah, so you okay, so", "tokens": [50732, 407, 370, 321, 360, 300, 13, 865, 11, 1338, 11, 370, 291, 1392, 11, 370, 50856], "temperature": 0.0, "avg_logprob": -0.22229116790148676, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.012235671281814575}, {"id": 888, "seek": 440364, "start": 4414.280000000001, "end": 4417.72, "text": " Maybe there's a solution for you. It'll be ugly, but it'll work. Maybe you find out", "tokens": [50896, 2704, 456, 311, 257, 3827, 337, 291, 13, 467, 603, 312, 12246, 11, 457, 309, 603, 589, 13, 2704, 291, 915, 484, 51068], "temperature": 0.0, "avg_logprob": -0.22229116790148676, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.012235671281814575}, {"id": 889, "seek": 440364, "start": 4418.76, "end": 4421.56, "text": " Yeah, yeah all this all sub processes get this path", "tokens": [51120, 865, 11, 1338, 439, 341, 439, 1422, 7555, 483, 341, 3100, 51260], "temperature": 0.0, "avg_logprob": -0.22229116790148676, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.012235671281814575}, {"id": 890, "seek": 440364, "start": 4424.12, "end": 4428.04, "text": " Well, sorry the question is is how are you the question is how are you supposed to start conch?", "tokens": [51388, 1042, 11, 2597, 264, 1168, 307, 307, 577, 366, 291, 264, 1168, 307, 577, 366, 291, 3442, 281, 722, 416, 339, 30, 51584], "temperature": 0.0, "avg_logprob": -0.22229116790148676, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.012235671281814575}, {"id": 891, "seek": 440364, "start": 4428.360000000001, "end": 4431.400000000001, "text": " So there's there's basically two ways to do it maybe three", "tokens": [51600, 407, 456, 311, 456, 311, 1936, 732, 2098, 281, 360, 309, 1310, 1045, 51752], "temperature": 0.0, "avg_logprob": -0.22229116790148676, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.012235671281814575}, {"id": 892, "seek": 443140, "start": 4431.4, "end": 4434.28, "text": " I'm going to say two one is you open a terminal", "tokens": [50364, 286, 478, 516, 281, 584, 732, 472, 307, 291, 1269, 257, 14709, 50508], "temperature": 0.0, "avg_logprob": -0.12140609968954058, "compression_ratio": 1.8033333333333332, "no_speech_prob": 0.008058215491473675}, {"id": 893, "seek": 443140, "start": 4434.5199999999995, "end": 4437.96, "text": " It's running some like 1970s piece of software doesn't work really well", "tokens": [50520, 467, 311, 2614, 512, 411, 14577, 82, 2522, 295, 4722, 1177, 380, 589, 534, 731, 50692], "temperature": 0.0, "avg_logprob": -0.12140609968954058, "compression_ratio": 1.8033333333333332, "no_speech_prob": 0.008058215491473675}, {"id": 894, "seek": 443140, "start": 4438.2, "end": 4440.5199999999995, "text": " And then you type conch and then you're in something better and newer", "tokens": [50704, 400, 550, 291, 2010, 416, 339, 293, 550, 291, 434, 294, 746, 1101, 293, 17628, 50820], "temperature": 0.0, "avg_logprob": -0.12140609968954058, "compression_ratio": 1.8033333333333332, "no_speech_prob": 0.008058215491473675}, {"id": 895, "seek": 443140, "start": 4441.24, "end": 4445.24, "text": " The other thing is depending on your on your operating system of choice", "tokens": [50856, 440, 661, 551, 307, 5413, 322, 428, 322, 428, 7447, 1185, 295, 3922, 51056], "temperature": 0.0, "avg_logprob": -0.12140609968954058, "compression_ratio": 1.8033333333333332, "no_speech_prob": 0.008058215491473675}, {"id": 896, "seek": 443140, "start": 4445.4, "end": 4448.04, "text": " You can just have it start as your default shell on linux", "tokens": [51064, 509, 393, 445, 362, 309, 722, 382, 428, 7576, 8720, 322, 22896, 2449, 51196], "temperature": 0.0, "avg_logprob": -0.12140609968954058, "compression_ratio": 1.8033333333333332, "no_speech_prob": 0.008058215491473675}, {"id": 897, "seek": 443140, "start": 4448.04, "end": 4452.44, "text": " This means adding it to etsy shells and then setting it on if using i-term", "tokens": [51196, 639, 1355, 5127, 309, 281, 1030, 3187, 22523, 293, 550, 3287, 309, 322, 498, 1228, 741, 12, 7039, 51416], "temperature": 0.0, "avg_logprob": -0.12140609968954058, "compression_ratio": 1.8033333333333332, "no_speech_prob": 0.008058215491473675}, {"id": 898, "seek": 443140, "start": 4452.44, "end": 4455.16, "text": " You can actually just have a profile that launch that you can say like", "tokens": [51416, 509, 393, 767, 445, 362, 257, 7964, 300, 4025, 300, 291, 393, 584, 411, 51552], "temperature": 0.0, "avg_logprob": -0.12140609968954058, "compression_ratio": 1.8033333333333332, "no_speech_prob": 0.008058215491473675}, {"id": 899, "seek": 443140, "start": 4455.16, "end": 4458.28, "text": " I want you to launch this executable when I open a terminal or this profile", "tokens": [51552, 286, 528, 291, 281, 4025, 341, 7568, 712, 562, 286, 1269, 257, 14709, 420, 341, 7964, 51708], "temperature": 0.0, "avg_logprob": -0.12140609968954058, "compression_ratio": 1.8033333333333332, "no_speech_prob": 0.008058215491473675}, {"id": 900, "seek": 445828, "start": 4458.36, "end": 4464.04, "text": " Yeah, basically any terminal emulator in the unix land will let you set the the launch program", "tokens": [50368, 865, 11, 1936, 604, 14709, 846, 16381, 294, 264, 517, 970, 2117, 486, 718, 291, 992, 264, 264, 4025, 1461, 50652], "temperature": 0.0, "avg_logprob": -0.19741285705566405, "compression_ratio": 1.8611111111111112, "no_speech_prob": 0.0006261084345169365}, {"id": 901, "seek": 445828, "start": 4464.04, "end": 4466.04, "text": " So you just set that to conch", "tokens": [50652, 407, 291, 445, 992, 300, 281, 416, 339, 50752], "temperature": 0.0, "avg_logprob": -0.19741285705566405, "compression_ratio": 1.8611111111111112, "no_speech_prob": 0.0006261084345169365}, {"id": 902, "seek": 445828, "start": 4466.04, "end": 4471.96, "text": " Or you change your etsy shadow or you change your etsy shadow if you want it to be a true login shell, which conch can be", "tokens": [50752, 1610, 291, 1319, 428, 1030, 3187, 8576, 420, 291, 1319, 428, 1030, 3187, 8576, 498, 291, 528, 309, 281, 312, 257, 2074, 24276, 8720, 11, 597, 416, 339, 393, 312, 51048], "temperature": 0.0, "avg_logprob": -0.19741285705566405, "compression_ratio": 1.8611111111111112, "no_speech_prob": 0.0006261084345169365}, {"id": 903, "seek": 445828, "start": 4477.08, "end": 4480.759999999999, "text": " So yeah, it's in conch back there's docs there also there are docs on that on the website", "tokens": [51304, 407, 1338, 11, 309, 311, 294, 416, 339, 646, 456, 311, 45623, 456, 611, 456, 366, 45623, 322, 300, 322, 264, 3144, 51488], "temperature": 0.0, "avg_logprob": -0.19741285705566405, "compression_ratio": 1.8611111111111112, "no_speech_prob": 0.0006261084345169365}, {"id": 904, "seek": 445828, "start": 4480.759999999999, "end": 4484.84, "text": " So if you really there's platform specific doc, so if you want to go look up that you can see that", "tokens": [51488, 407, 498, 291, 534, 456, 311, 3663, 2685, 3211, 11, 370, 498, 291, 528, 281, 352, 574, 493, 300, 291, 393, 536, 300, 51692], "temperature": 0.0, "avg_logprob": -0.19741285705566405, "compression_ratio": 1.8611111111111112, "no_speech_prob": 0.0006261084345169365}, {"id": 905, "seek": 445828, "start": 4484.92, "end": 4486.92, "text": " It's right in the at the very top", "tokens": [51696, 467, 311, 558, 294, 264, 412, 264, 588, 1192, 51796], "temperature": 0.0, "avg_logprob": -0.19741285705566405, "compression_ratio": 1.8611111111111112, "no_speech_prob": 0.0006261084345169365}, {"id": 906, "seek": 448828, "start": 4488.679999999999, "end": 4493.0, "text": " So the paths are n paths are back environment stuff other variables are booleans other ints", "tokens": [50384, 407, 264, 14518, 366, 297, 14518, 366, 646, 2823, 1507, 661, 9102, 366, 748, 4812, 599, 661, 560, 82, 50600], "temperature": 0.0, "avg_logprob": -0.17458259402297613, "compression_ratio": 1.8153310104529616, "no_speech_prob": 0.00021981913596391678}, {"id": 907, "seek": 448828, "start": 4493.96, "end": 4499.5599999999995, "text": " Whatever they are like when you grab that environment variable in conch it will be its true type, you know, it'll tell you that", "tokens": [50648, 8541, 436, 366, 411, 562, 291, 4444, 300, 2823, 7006, 294, 416, 339, 309, 486, 312, 1080, 2074, 2010, 11, 291, 458, 11, 309, 603, 980, 291, 300, 50928], "temperature": 0.0, "avg_logprob": -0.17458259402297613, "compression_ratio": 1.8153310104529616, "no_speech_prob": 0.00021981913596391678}, {"id": 908, "seek": 448828, "start": 4500.599999999999, "end": 4504.599999999999, "text": " That said if you need to like some some subprosk man's require", "tokens": [50980, 663, 848, 498, 291, 643, 281, 411, 512, 512, 1422, 1424, 329, 74, 587, 311, 3651, 51180], "temperature": 0.0, "avg_logprob": -0.17458259402297613, "compression_ratio": 1.8153310104529616, "no_speech_prob": 0.00021981913596391678}, {"id": 909, "seek": 448828, "start": 4505.0, "end": 4508.599999999999, "text": " You know these things to be fed to them as strings and so conch does that for you", "tokens": [51200, 509, 458, 613, 721, 281, 312, 4636, 281, 552, 382, 13985, 293, 370, 416, 339, 775, 300, 337, 291, 51380], "temperature": 0.0, "avg_logprob": -0.17458259402297613, "compression_ratio": 1.8153310104529616, "no_speech_prob": 0.00021981913596391678}, {"id": 910, "seek": 448828, "start": 4509.24, "end": 4513.48, "text": " And by de typing it and you can also explicitly request these de typed things", "tokens": [51412, 400, 538, 368, 18444, 309, 293, 291, 393, 611, 20803, 5308, 613, 368, 33941, 721, 51624], "temperature": 0.0, "avg_logprob": -0.17458259402297613, "compression_ratio": 1.8153310104529616, "no_speech_prob": 0.00021981913596391678}, {"id": 911, "seek": 448828, "start": 4514.5199999999995, "end": 4517.5599999999995, "text": " So you're asking like how do you manipulate your path and then do it you could", "tokens": [51676, 407, 291, 434, 3365, 411, 577, 360, 291, 20459, 428, 3100, 293, 550, 360, 309, 291, 727, 51828], "temperature": 0.0, "avg_logprob": -0.17458259402297613, "compression_ratio": 1.8153310104529616, "no_speech_prob": 0.00021981913596391678}, {"id": 912, "seek": 451828, "start": 4518.36, "end": 4519.5599999999995, "text": " I mean", "tokens": [50368, 286, 914, 50428], "temperature": 0.0, "avg_logprob": -0.175786500448709, "compression_ratio": 1.6183574879227054, "no_speech_prob": 0.00017946746083907783}, {"id": 913, "seek": 451828, "start": 4519.5599999999995, "end": 4521.4, "text": " Like de type it", "tokens": [50428, 1743, 368, 2010, 309, 50520], "temperature": 0.0, "avg_logprob": -0.175786500448709, "compression_ratio": 1.6183574879227054, "no_speech_prob": 0.00017946746083907783}, {"id": 914, "seek": 451828, "start": 4521.4, "end": 4524.36, "text": " overwrite your bash rc exit out and then source again", "tokens": [50520, 670, 21561, 428, 46183, 367, 66, 11043, 484, 293, 550, 4009, 797, 50668], "temperature": 0.0, "avg_logprob": -0.175786500448709, "compression_ratio": 1.6183574879227054, "no_speech_prob": 0.00017946746083907783}, {"id": 915, "seek": 451828, "start": 4525.4, "end": 4526.92, "text": " that would be", "tokens": [50720, 300, 576, 312, 50796], "temperature": 0.0, "avg_logprob": -0.175786500448709, "compression_ratio": 1.6183574879227054, "no_speech_prob": 0.00017946746083907783}, {"id": 916, "seek": 451828, "start": 4526.92, "end": 4532.599999999999, "text": " Moderately terrible, but it would work as long as it was an absolute path and you weren't like recursively sourcing it would probably work. Yeah", "tokens": [50796, 42067, 1592, 6237, 11, 457, 309, 576, 589, 382, 938, 382, 309, 390, 364, 8236, 3100, 293, 291, 4999, 380, 411, 20560, 3413, 11006, 2175, 309, 576, 1391, 589, 13, 865, 51080], "temperature": 0.0, "avg_logprob": -0.175786500448709, "compression_ratio": 1.6183574879227054, "no_speech_prob": 0.00017946746083907783}, {"id": 917, "seek": 451828, "start": 4537.32, "end": 4539.32, "text": " Yeah, you can also do de type get back", "tokens": [51316, 865, 11, 291, 393, 611, 360, 368, 2010, 483, 646, 51416], "temperature": 0.0, "avg_logprob": -0.175786500448709, "compression_ratio": 1.6183574879227054, "no_speech_prob": 0.00017946746083907783}, {"id": 918, "seek": 451828, "start": 4540.599999999999, "end": 4543.48, "text": " Yeah, and so that will depending on what it should look like", "tokens": [51480, 865, 11, 293, 370, 300, 486, 5413, 322, 437, 309, 820, 574, 411, 51624], "temperature": 0.0, "avg_logprob": -0.175786500448709, "compression_ratio": 1.6183574879227054, "no_speech_prob": 0.00017946746083907783}, {"id": 919, "seek": 454348, "start": 4544.2, "end": 4548.2, "text": " In the base environment will do you know give back zeros or ones not trues and", "tokens": [50400, 682, 264, 3096, 2823, 486, 360, 291, 458, 976, 646, 35193, 420, 2306, 406, 504, 1247, 293, 50600], "temperature": 0.0, "avg_logprob": -0.20768606340562976, "compression_ratio": 1.5483870967741935, "no_speech_prob": 0.0012617389438673854}, {"id": 920, "seek": 454348, "start": 4550.759999999999, "end": 4553.5599999999995, "text": " Paths get get turned into colon delimited strings", "tokens": [50728, 21914, 82, 483, 483, 3574, 666, 8255, 1103, 332, 1226, 13985, 50868], "temperature": 0.0, "avg_logprob": -0.20768606340562976, "compression_ratio": 1.5483870967741935, "no_speech_prob": 0.0012617389438673854}, {"id": 921, "seek": 454348, "start": 4556.2, "end": 4558.2, "text": " Yeah", "tokens": [51000, 865, 51100], "temperature": 0.0, "avg_logprob": -0.20768606340562976, "compression_ratio": 1.5483870967741935, "no_speech_prob": 0.0012617389438673854}, {"id": 922, "seek": 454348, "start": 4559.5599999999995, "end": 4564.36, "text": " There's a couple of other handy methods on the environment itself", "tokens": [51168, 821, 311, 257, 1916, 295, 661, 13239, 7150, 322, 264, 2823, 2564, 51408], "temperature": 0.0, "avg_logprob": -0.20768606340562976, "compression_ratio": 1.5483870967741935, "no_speech_prob": 0.0012617389438673854}, {"id": 923, "seek": 454348, "start": 4565.32, "end": 4567.639999999999, "text": " In particular one that's very handy is swap", "tokens": [51456, 682, 1729, 472, 300, 311, 588, 13239, 307, 18135, 51572], "temperature": 0.0, "avg_logprob": -0.20768606340562976, "compression_ratio": 1.5483870967741935, "no_speech_prob": 0.0012617389438673854}, {"id": 924, "seek": 454348, "start": 4568.599999999999, "end": 4570.679999999999, "text": " And so what swap does is what swap does with", "tokens": [51620, 400, 370, 437, 18135, 775, 307, 437, 18135, 775, 365, 51724], "temperature": 0.0, "avg_logprob": -0.20768606340562976, "compression_ratio": 1.5483870967741935, "no_speech_prob": 0.0012617389438673854}, {"id": 925, "seek": 457068, "start": 4571.4800000000005, "end": 4577.8, "text": " In general actually, but so you can swap in a new value", "tokens": [50404, 682, 2674, 767, 11, 457, 370, 291, 393, 18135, 294, 257, 777, 2158, 50720], "temperature": 0.0, "avg_logprob": -0.1524432102839152, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.0015238628257066011}, {"id": 926, "seek": 457068, "start": 4578.200000000001, "end": 4581.16, "text": " It basically overwrite something and it's a context manager", "tokens": [50740, 467, 1936, 670, 21561, 746, 293, 309, 311, 257, 4319, 6598, 50888], "temperature": 0.0, "avg_logprob": -0.1524432102839152, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.0015238628257066011}, {"id": 927, "seek": 457068, "start": 4581.400000000001, "end": 4584.6, "text": " So only for that block of the context manager", "tokens": [50900, 407, 787, 337, 300, 3461, 295, 264, 4319, 6598, 51060], "temperature": 0.0, "avg_logprob": -0.1524432102839152, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.0015238628257066011}, {"id": 928, "seek": 457068, "start": 4584.68, "end": 4590.6, "text": " You can mutate certain elements of your environment and then they will get undone as soon as you are out of the context manager", "tokens": [51064, 509, 393, 5839, 473, 1629, 4959, 295, 428, 2823, 293, 550, 436, 486, 483, 674, 546, 382, 2321, 382, 291, 366, 484, 295, 264, 4319, 6598, 51360], "temperature": 0.0, "avg_logprob": -0.1524432102839152, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.0015238628257066011}, {"id": 929, "seek": 457068, "start": 4597.56, "end": 4599.56, "text": " Like", "tokens": [51708, 1743, 51808], "temperature": 0.0, "avg_logprob": -0.1524432102839152, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.0015238628257066011}, {"id": 930, "seek": 459956, "start": 4599.56, "end": 4601.56, "text": " That", "tokens": [50364, 663, 50464], "temperature": 0.0, "avg_logprob": -0.18092585055627555, "compression_ratio": 1.65625, "no_speech_prob": 0.0015234141610562801}, {"id": 931, "seek": 459956, "start": 4602.68, "end": 4604.04, "text": " Then", "tokens": [50520, 1396, 50588], "temperature": 0.0, "avg_logprob": -0.18092585055627555, "compression_ratio": 1.65625, "no_speech_prob": 0.0015234141610562801}, {"id": 932, "seek": 459956, "start": 4604.04, "end": 4606.200000000001, "text": " If we try to access this down here", "tokens": [50588, 759, 321, 853, 281, 2105, 341, 760, 510, 50696], "temperature": 0.0, "avg_logprob": -0.18092585055627555, "compression_ratio": 1.65625, "no_speech_prob": 0.0015234141610562801}, {"id": 933, "seek": 459956, "start": 4607.160000000001, "end": 4610.68, "text": " It doesn't work because some of our has been removed from the environment", "tokens": [50744, 467, 1177, 380, 589, 570, 512, 295, 527, 575, 668, 7261, 490, 264, 2823, 50920], "temperature": 0.0, "avg_logprob": -0.18092585055627555, "compression_ratio": 1.65625, "no_speech_prob": 0.0015234141610562801}, {"id": 934, "seek": 459956, "start": 4611.88, "end": 4613.88, "text": " So this is really useful for like", "tokens": [50980, 407, 341, 307, 534, 4420, 337, 411, 51080], "temperature": 0.0, "avg_logprob": -0.18092585055627555, "compression_ratio": 1.65625, "no_speech_prob": 0.0015234141610562801}, {"id": 935, "seek": 459956, "start": 4614.360000000001, "end": 4618.68, "text": " Temporarily modifying your path or temporarily entering like a new in", "tokens": [51104, 8095, 2816, 3289, 42626, 428, 3100, 420, 23750, 11104, 411, 257, 777, 294, 51320], "temperature": 0.0, "avg_logprob": -0.18092585055627555, "compression_ratio": 1.65625, "no_speech_prob": 0.0015234141610562801}, {"id": 936, "seek": 459956, "start": 4619.400000000001, "end": 4624.6, "text": " A new context that you need to run something in like say you want to switch between a million versions of CUDA for some reason", "tokens": [51356, 316, 777, 4319, 300, 291, 643, 281, 1190, 746, 294, 411, 584, 291, 528, 281, 3679, 1296, 257, 2459, 9606, 295, 29777, 7509, 337, 512, 1778, 51616], "temperature": 0.0, "avg_logprob": -0.18092585055627555, "compression_ratio": 1.65625, "no_speech_prob": 0.0015234141610562801}, {"id": 937, "seek": 459956, "start": 4624.92, "end": 4627.56, "text": " Like this is a way to no one would ever do that. No one would ever do that", "tokens": [51632, 1743, 341, 307, 257, 636, 281, 572, 472, 576, 1562, 360, 300, 13, 883, 472, 576, 1562, 360, 300, 51764], "temperature": 0.0, "avg_logprob": -0.18092585055627555, "compression_ratio": 1.65625, "no_speech_prob": 0.0015234141610562801}, {"id": 938, "seek": 462756, "start": 4628.280000000001, "end": 4630.280000000001, "text": " Come see my tutorial tomorrow", "tokens": [50400, 2492, 536, 452, 7073, 4153, 50500], "temperature": 0.0, "avg_logprob": -0.3001439992119284, "compression_ratio": 0.84, "no_speech_prob": 0.0012438180856406689}, {"id": 939, "seek": 462756, "start": 4632.92, "end": 4634.92, "text": " Okay, yes", "tokens": [50632, 1033, 11, 2086, 50732], "temperature": 0.0, "avg_logprob": -0.3001439992119284, "compression_ratio": 0.84, "no_speech_prob": 0.0012438180856406689}, {"id": 940, "seek": 462756, "start": 4650.92, "end": 4652.04, "text": " So", "tokens": [51532, 407, 51588], "temperature": 0.0, "avg_logprob": -0.3001439992119284, "compression_ratio": 0.84, "no_speech_prob": 0.0012438180856406689}, {"id": 941, "seek": 465204, "start": 4652.04, "end": 4657.56, "text": " The answer is both yes and no so we don't have a particular syntax for doing that yet because that", "tokens": [50364, 440, 1867, 307, 1293, 2086, 293, 572, 370, 321, 500, 380, 362, 257, 1729, 28431, 337, 884, 300, 1939, 570, 300, 50640], "temperature": 0.0, "avg_logprob": -0.1781367099646366, "compression_ratio": 1.5281385281385282, "no_speech_prob": 0.01320682279765606}, {"id": 942, "seek": 465204, "start": 4657.88, "end": 4663.56, "text": " Turns out to be pretty complicated in some edge cases that we'd like to work in conch that don't work in bash", "tokens": [50656, 29524, 484, 281, 312, 1238, 6179, 294, 512, 4691, 3331, 300, 321, 1116, 411, 281, 589, 294, 416, 339, 300, 500, 380, 589, 294, 46183, 50940], "temperature": 0.0, "avg_logprob": -0.1781367099646366, "compression_ratio": 1.5281385281385282, "no_speech_prob": 0.01320682279765606}, {"id": 943, "seek": 465204, "start": 4663.64, "end": 4669.24, "text": " But that's a whole separate thing, but you can always run commands through nv. So if you wanted to do", "tokens": [50944, 583, 300, 311, 257, 1379, 4994, 551, 11, 457, 291, 393, 1009, 1190, 16901, 807, 297, 85, 13, 407, 498, 291, 1415, 281, 360, 51224], "temperature": 0.0, "avg_logprob": -0.1781367099646366, "compression_ratio": 1.5281385281385282, "no_speech_prob": 0.01320682279765606}, {"id": 944, "seek": 465204, "start": 4670.28, "end": 4672.28, "text": " nv sum var", "tokens": [51276, 297, 85, 2408, 1374, 51376], "temperature": 0.0, "avg_logprob": -0.1781367099646366, "compression_ratio": 1.5281385281385282, "no_speech_prob": 0.01320682279765606}, {"id": 945, "seek": 465204, "start": 4672.68, "end": 4674.28, "text": " You know", "tokens": [51396, 509, 458, 51476], "temperature": 0.0, "avg_logprob": -0.1781367099646366, "compression_ratio": 1.5281385281385282, "no_speech_prob": 0.01320682279765606}, {"id": 946, "seek": 465204, "start": 4674.28, "end": 4676.28, "text": " Equals 10", "tokens": [51476, 15624, 1124, 1266, 51576], "temperature": 0.0, "avg_logprob": -0.1781367099646366, "compression_ratio": 1.5281385281385282, "no_speech_prob": 0.01320682279765606}, {"id": 947, "seek": 465204, "start": 4676.76, "end": 4678.76, "text": " echo", "tokens": [51600, 14300, 51700], "temperature": 0.0, "avg_logprob": -0.1781367099646366, "compression_ratio": 1.5281385281385282, "no_speech_prob": 0.01320682279765606}, {"id": 948, "seek": 465204, "start": 4679.8, "end": 4681.8, "text": " Sum var", "tokens": [51752, 8626, 1374, 51852], "temperature": 0.0, "avg_logprob": -0.1781367099646366, "compression_ratio": 1.5281385281385282, "no_speech_prob": 0.01320682279765606}, {"id": 949, "seek": 468204, "start": 4682.68, "end": 4686.92, "text": " Uh, well actually that so that doesn't work in bash either. I think is the thing", "tokens": [50396, 4019, 11, 731, 767, 300, 370, 300, 1177, 380, 589, 294, 46183, 2139, 13, 286, 519, 307, 264, 551, 50608], "temperature": 0.0, "avg_logprob": -0.11251160950787299, "compression_ratio": 2.0, "no_speech_prob": 0.0006876928964629769}, {"id": 950, "seek": 468204, "start": 4687.0, "end": 4691.56, "text": " Yeah, that's one of those that this is one of the things that doesn't work in bash that we would like to", "tokens": [50612, 865, 11, 300, 311, 472, 295, 729, 300, 341, 307, 472, 295, 264, 721, 300, 1177, 380, 589, 294, 46183, 300, 321, 576, 411, 281, 50840], "temperature": 0.0, "avg_logprob": -0.11251160950787299, "compression_ratio": 2.0, "no_speech_prob": 0.0006876928964629769}, {"id": 951, "seek": 468204, "start": 4692.28, "end": 4695.96, "text": " Have work in conch and so this is why this uh", "tokens": [50876, 3560, 589, 294, 416, 339, 293, 370, 341, 307, 983, 341, 2232, 51060], "temperature": 0.0, "avg_logprob": -0.11251160950787299, "compression_ratio": 2.0, "no_speech_prob": 0.0006876928964629769}, {"id": 952, "seek": 468204, "start": 4699.16, "end": 4705.24, "text": " This is why this like we really want that to work and and that the fact that that doesn't work is why we have", "tokens": [51220, 639, 307, 983, 341, 411, 321, 534, 528, 300, 281, 589, 293, 293, 300, 264, 1186, 300, 300, 1177, 380, 589, 307, 983, 321, 362, 51524], "temperature": 0.0, "avg_logprob": -0.11251160950787299, "compression_ratio": 2.0, "no_speech_prob": 0.0006876928964629769}, {"id": 953, "seek": 468204, "start": 4706.04, "end": 4709.96, "text": " Swap and other things, but if you wanted to set other environment variables and things like that you can", "tokens": [51564, 3926, 569, 293, 661, 721, 11, 457, 498, 291, 1415, 281, 992, 661, 2823, 9102, 293, 721, 411, 300, 291, 393, 51760], "temperature": 0.0, "avg_logprob": -0.11251160950787299, "compression_ratio": 2.0, "no_speech_prob": 0.0006876928964629769}, {"id": 954, "seek": 471204, "start": 4713.0, "end": 4715.0, "text": " Uh", "tokens": [50412, 4019, 50512], "temperature": 0.0, "avg_logprob": -0.2194194552264636, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0012446589535102248}, {"id": 955, "seek": 471204, "start": 4715.72, "end": 4718.6, "text": " In bash, I mean well, yeah, so that's a different line", "tokens": [50548, 682, 46183, 11, 286, 914, 731, 11, 1338, 11, 370, 300, 311, 257, 819, 1622, 50692], "temperature": 0.0, "avg_logprob": -0.2194194552264636, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0012446589535102248}, {"id": 956, "seek": 471204, "start": 4719.48, "end": 4723.16, "text": " Right, so export will export it to everyone and then you have to unset it", "tokens": [50736, 1779, 11, 370, 10725, 486, 10725, 309, 281, 1518, 293, 550, 291, 362, 281, 2693, 302, 309, 50920], "temperature": 0.0, "avg_logprob": -0.2194194552264636, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0012446589535102248}, {"id": 957, "seek": 471204, "start": 4723.96, "end": 4725.48, "text": " Which is annoying", "tokens": [50960, 3013, 307, 11304, 51036], "temperature": 0.0, "avg_logprob": -0.2194194552264636, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0012446589535102248}, {"id": 958, "seek": 471204, "start": 4725.48, "end": 4728.12, "text": " Uh, if you want to remove it afterwards, right?", "tokens": [51036, 4019, 11, 498, 291, 528, 281, 4159, 309, 10543, 11, 558, 30, 51168], "temperature": 0.0, "avg_logprob": -0.2194194552264636, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0012446589535102248}, {"id": 959, "seek": 471204, "start": 4729.32, "end": 4732.6, "text": " Yeah, so that's what swap gets you. Yeah, but", "tokens": [51228, 865, 11, 370, 300, 311, 437, 18135, 2170, 291, 13, 865, 11, 457, 51392], "temperature": 0.0, "avg_logprob": -0.2194194552264636, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0012446589535102248}, {"id": 960, "seek": 471204, "start": 4735.4, "end": 4737.4, "text": " Uh, yeah", "tokens": [51532, 4019, 11, 1338, 51632], "temperature": 0.0, "avg_logprob": -0.2194194552264636, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0012446589535102248}, {"id": 961, "seek": 474204, "start": 4742.28, "end": 4745.72, "text": " Yeah, yeah, you could you could star star keyword arcs into that. Oh, definitely", "tokens": [50376, 865, 11, 1338, 11, 291, 727, 291, 727, 3543, 3543, 20428, 10346, 82, 666, 300, 13, 876, 11, 2138, 50548], "temperature": 0.0, "avg_logprob": -0.1866867592994203, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.0010813268600031734}, {"id": 962, "seek": 474204, "start": 4749.24, "end": 4750.76, "text": " That's there", "tokens": [50724, 663, 311, 456, 50800], "temperature": 0.0, "avg_logprob": -0.1866867592994203, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.0010813268600031734}, {"id": 963, "seek": 474204, "start": 4750.76, "end": 4753.48, "text": " Okay, so we have a few more exercises here using this stuff", "tokens": [50800, 1033, 11, 370, 321, 362, 257, 1326, 544, 11900, 510, 1228, 341, 1507, 50936], "temperature": 0.0, "avg_logprob": -0.1866867592994203, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.0010813268600031734}, {"id": 964, "seek": 474204, "start": 4754.44, "end": 4760.84, "text": " Um, these are things that I'll say like I I both do on a regular basis like these are these are true life examples", "tokens": [50984, 3301, 11, 613, 366, 721, 300, 286, 603, 584, 411, 286, 286, 1293, 360, 322, 257, 3890, 5143, 411, 613, 366, 613, 366, 2074, 993, 5110, 51304], "temperature": 0.0, "avg_logprob": -0.1866867592994203, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.0010813268600031734}, {"id": 965, "seek": 474204, "start": 4761.24, "end": 4765.4, "text": " um, so one is um use get pass to", "tokens": [51324, 1105, 11, 370, 472, 307, 1105, 764, 483, 1320, 281, 51532], "temperature": 0.0, "avg_logprob": -0.1866867592994203, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.0010813268600031734}, {"id": 966, "seek": 474204, "start": 4765.96, "end": 4767.96, "text": " Temporarily set your password and environment variable", "tokens": [51560, 8095, 2816, 3289, 992, 428, 11524, 293, 2823, 7006, 51660], "temperature": 0.0, "avg_logprob": -0.1866867592994203, "compression_ratio": 1.5964125560538116, "no_speech_prob": 0.0010813268600031734}, {"id": 967, "seek": 476796, "start": 4768.12, "end": 4774.12, "text": " So this is actually so far as I can tell the only way to securely type your password into a terminal session without it ever being", "tokens": [50372, 407, 341, 307, 767, 370, 1400, 382, 286, 393, 980, 264, 787, 636, 281, 38348, 2010, 428, 11524, 666, 257, 14709, 5481, 1553, 309, 1562, 885, 50672], "temperature": 0.0, "avg_logprob": -0.15636895066600734, "compression_ratio": 1.711340206185567, "no_speech_prob": 0.0007792389951646328}, {"id": 968, "seek": 476796, "start": 4774.2, "end": 4776.28, "text": " Saved anywhere like including in your terminal history", "tokens": [50676, 12346, 292, 4992, 411, 3009, 294, 428, 14709, 2503, 50780], "temperature": 0.0, "avg_logprob": -0.15636895066600734, "compression_ratio": 1.711340206185567, "no_speech_prob": 0.0007792389951646328}, {"id": 969, "seek": 476796, "start": 4776.76, "end": 4778.04, "text": " um", "tokens": [50804, 1105, 50868], "temperature": 0.0, "avg_logprob": -0.15636895066600734, "compression_ratio": 1.711340206185567, "no_speech_prob": 0.0007792389951646328}, {"id": 970, "seek": 476796, "start": 4778.04, "end": 4785.0, "text": " and uh the second exercise is this also happens to me a lot which is like if you're um native like package manager", "tokens": [50868, 293, 2232, 264, 1150, 5380, 307, 341, 611, 2314, 281, 385, 257, 688, 597, 307, 411, 498, 291, 434, 1105, 8470, 411, 7372, 6598, 51216], "temperature": 0.0, "avg_logprob": -0.15636895066600734, "compression_ratio": 1.711340206185567, "no_speech_prob": 0.0007792389951646328}, {"id": 971, "seek": 476796, "start": 4785.4, "end": 4790.76, "text": " Uh, it doesn't like uh like con to curl and keeps like yelling at you because like there's some sham is match", "tokens": [51236, 4019, 11, 309, 1177, 380, 411, 2232, 411, 416, 281, 22591, 293, 5965, 411, 18381, 412, 291, 570, 411, 456, 311, 512, 29758, 307, 2995, 51504], "temperature": 0.0, "avg_logprob": -0.15636895066600734, "compression_ratio": 1.711340206185567, "no_speech_prob": 0.0007792389951646328}, {"id": 972, "seek": 476796, "start": 4791.24, "end": 4791.88, "text": " um", "tokens": [51528, 1105, 51560], "temperature": 0.0, "avg_logprob": -0.15636895066600734, "compression_ratio": 1.711340206185567, "no_speech_prob": 0.0007792389951646328}, {"id": 973, "seek": 476796, "start": 4791.88, "end": 4795.56, "text": " You just want to run an install command and just for that one install command pop", "tokens": [51560, 509, 445, 528, 281, 1190, 364, 3625, 5622, 293, 445, 337, 300, 472, 3625, 5622, 1665, 51744], "temperature": 0.0, "avg_logprob": -0.15636895066600734, "compression_ratio": 1.711340206185567, "no_speech_prob": 0.0007792389951646328}, {"id": 974, "seek": 479556, "start": 4796.280000000001, "end": 4799.4800000000005, "text": " Like the front element of your path off, but you don't want to mutate your path forever", "tokens": [50400, 1743, 264, 1868, 4478, 295, 428, 3100, 766, 11, 457, 291, 500, 380, 528, 281, 5839, 473, 428, 3100, 5680, 50560], "temperature": 0.0, "avg_logprob": -0.1560874980884594, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.0021820312831550837}, {"id": 975, "seek": 479556, "start": 4799.4800000000005, "end": 4806.84, "text": " You just want to do that this one thing. So just you know temporarily mutate your path run some command and then return it", "tokens": [50560, 509, 445, 528, 281, 360, 300, 341, 472, 551, 13, 407, 445, 291, 458, 23750, 5839, 473, 428, 3100, 1190, 512, 5622, 293, 550, 2736, 309, 50928], "temperature": 0.0, "avg_logprob": -0.1560874980884594, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.0021820312831550837}, {"id": 976, "seek": 479556, "start": 4807.88, "end": 4810.200000000001, "text": " I'll give you guys a few minutes. We can circle around answer questions", "tokens": [50980, 286, 603, 976, 291, 1074, 257, 1326, 2077, 13, 492, 393, 6329, 926, 1867, 1651, 51096], "temperature": 0.0, "avg_logprob": -0.1560874980884594, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.0021820312831550837}, {"id": 977, "seek": 479556, "start": 4812.04, "end": 4814.04, "text": " All right, so", "tokens": [51188, 1057, 558, 11, 370, 51288], "temperature": 0.0, "avg_logprob": -0.1560874980884594, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.0021820312831550837}, {"id": 978, "seek": 479556, "start": 4814.360000000001, "end": 4818.92, "text": " Before we move on any questions on the previous stuff now that breaks over", "tokens": [51304, 4546, 321, 1286, 322, 604, 1651, 322, 264, 3894, 1507, 586, 300, 9857, 670, 51532], "temperature": 0.0, "avg_logprob": -0.1560874980884594, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.0021820312831550837}, {"id": 979, "seek": 481892, "start": 4819.64, "end": 4826.12, "text": " Uh anything all right, so the next section we're going to be talking about what we call callable aliases", "tokens": [50400, 4019, 1340, 439, 558, 11, 370, 264, 958, 3541, 321, 434, 516, 281, 312, 1417, 466, 437, 321, 818, 818, 712, 10198, 1957, 50724], "temperature": 0.0, "avg_logprob": -0.20247432484346278, "compression_ratio": 1.6386138613861385, "no_speech_prob": 0.03257744759321213}, {"id": 980, "seek": 481892, "start": 4826.76, "end": 4827.88, "text": " so", "tokens": [50756, 370, 50812], "temperature": 0.0, "avg_logprob": -0.20247432484346278, "compression_ratio": 1.6386138613861385, "no_speech_prob": 0.03257744759321213}, {"id": 981, "seek": 481892, "start": 4827.88, "end": 4828.68, "text": " um", "tokens": [50812, 1105, 50852], "temperature": 0.0, "avg_logprob": -0.20247432484346278, "compression_ratio": 1.6386138613861385, "no_speech_prob": 0.03257744759321213}, {"id": 982, "seek": 481892, "start": 4828.68, "end": 4837.32, "text": " Callable aliases are basically a way for python functions or python callables and sub processes to exchange code", "tokens": [50852, 7807, 712, 10198, 1957, 366, 1936, 257, 636, 337, 38797, 6828, 420, 38797, 818, 2965, 293, 1422, 7555, 281, 7742, 3089, 51284], "temperature": 0.0, "avg_logprob": -0.20247432484346278, "compression_ratio": 1.6386138613861385, "no_speech_prob": 0.03257744759321213}, {"id": 983, "seek": 481892, "start": 4838.04, "end": 4839.56, "text": " um", "tokens": [51320, 1105, 51396], "temperature": 0.0, "avg_logprob": -0.20247432484346278, "compression_ratio": 1.6386138613861385, "no_speech_prob": 0.03257744759321213}, {"id": 984, "seek": 481892, "start": 4839.56, "end": 4844.4400000000005, "text": " In a more integrated way than what we've seen through sort of the at operator and some of these other", "tokens": [51396, 682, 257, 544, 10919, 636, 813, 437, 321, 600, 1612, 807, 1333, 295, 264, 412, 12973, 293, 512, 295, 613, 661, 51640], "temperature": 0.0, "avg_logprob": -0.20247432484346278, "compression_ratio": 1.6386138613861385, "no_speech_prob": 0.03257744759321213}, {"id": 985, "seek": 481892, "start": 4845.08, "end": 4845.8, "text": " uh", "tokens": [51672, 2232, 51708], "temperature": 0.0, "avg_logprob": -0.20247432484346278, "compression_ratio": 1.6386138613861385, "no_speech_prob": 0.03257744759321213}, {"id": 986, "seek": 484580, "start": 4845.88, "end": 4852.84, "text": " Curvy brace or curvy. I forget the mnemonic. This is curvy curvy captures. That's right. Um", "tokens": [50368, 7907, 11869, 38458, 420, 1262, 11869, 13, 286, 2870, 264, 275, 25989, 11630, 13, 639, 307, 1262, 11869, 1262, 11869, 27986, 13, 663, 311, 558, 13, 3301, 50716], "temperature": 0.0, "avg_logprob": -0.17316511869430543, "compression_ratio": 1.4898989898989898, "no_speech_prob": 0.0014775312738493085}, {"id": 987, "seek": 484580, "start": 4854.12, "end": 4861.64, "text": " So we're going to be building up sort of data pipelines in a more uh in a more integrated fashion", "tokens": [50780, 407, 321, 434, 516, 281, 312, 2390, 493, 1333, 295, 1412, 40168, 294, 257, 544, 2232, 294, 257, 544, 10919, 6700, 51156], "temperature": 0.0, "avg_logprob": -0.17316511869430543, "compression_ratio": 1.4898989898989898, "no_speech_prob": 0.0014775312738493085}, {"id": 988, "seek": 484580, "start": 4862.360000000001, "end": 4863.24, "text": " um", "tokens": [51192, 1105, 51236], "temperature": 0.0, "avg_logprob": -0.17316511869430543, "compression_ratio": 1.4898989898989898, "no_speech_prob": 0.0014775312738493085}, {"id": 989, "seek": 484580, "start": 4863.24, "end": 4869.400000000001, "text": " And basically what callable aliases allow us to do is run any python function as a sub process command", "tokens": [51236, 400, 1936, 437, 818, 712, 10198, 1957, 2089, 505, 281, 360, 307, 1190, 604, 38797, 2445, 382, 257, 1422, 1399, 5622, 51544], "temperature": 0.0, "avg_logprob": -0.17316511869430543, "compression_ratio": 1.4898989898989898, "no_speech_prob": 0.0014775312738493085}, {"id": 990, "seek": 486940, "start": 4869.96, "end": 4871.16, "text": " um", "tokens": [50392, 1105, 50452], "temperature": 0.0, "avg_logprob": -0.157798619614434, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.009265935979783535}, {"id": 991, "seek": 486940, "start": 4871.16, "end": 4876.679999999999, "text": " It's not any python function really uh because it requires a certain set of known signatures", "tokens": [50452, 467, 311, 406, 604, 38797, 2445, 534, 2232, 570, 309, 7029, 257, 1629, 992, 295, 2570, 32322, 50728], "temperature": 0.0, "avg_logprob": -0.157798619614434, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.009265935979783535}, {"id": 992, "seek": 486940, "start": 4877.16, "end": 4879.4, "text": " But assuming you adhere to that", "tokens": [50752, 583, 11926, 291, 33584, 281, 300, 50864], "temperature": 0.0, "avg_logprob": -0.157798619614434, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.009265935979783535}, {"id": 993, "seek": 486940, "start": 4880.839999999999, "end": 4886.44, "text": " And we're going to be going through what those are uh, then you'll you'll be able to run them. So", "tokens": [50936, 400, 321, 434, 516, 281, 312, 516, 807, 437, 729, 366, 2232, 11, 550, 291, 603, 291, 603, 312, 1075, 281, 1190, 552, 13, 407, 51216], "temperature": 0.0, "avg_logprob": -0.157798619614434, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.009265935979783535}, {"id": 994, "seek": 486940, "start": 4887.96, "end": 4890.36, "text": " Uh, they're callables right so that part makes sense", "tokens": [51292, 4019, 11, 436, 434, 818, 2965, 558, 370, 300, 644, 1669, 2020, 51412], "temperature": 0.0, "avg_logprob": -0.157798619614434, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.009265935979783535}, {"id": 995, "seek": 486940, "start": 4890.92, "end": 4896.36, "text": " They're aliases because they get stuck in what's called the aliases dictionary or the alias is mapping", "tokens": [51440, 814, 434, 10198, 1957, 570, 436, 483, 5541, 294, 437, 311, 1219, 264, 10198, 1957, 25890, 420, 264, 419, 4609, 307, 18350, 51712], "temperature": 0.0, "avg_logprob": -0.157798619614434, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.009265935979783535}, {"id": 996, "seek": 489636, "start": 4896.599999999999, "end": 4899.48, "text": " So this is something that gets shoved into built-ins as well", "tokens": [50376, 407, 341, 307, 746, 300, 2170, 2223, 937, 666, 3094, 12, 1292, 382, 731, 50520], "temperature": 0.0, "avg_logprob": -0.15609999360709353, "compression_ratio": 1.64, "no_speech_prob": 0.0016735898097977042}, {"id": 997, "seek": 489636, "start": 4899.96, "end": 4902.839999999999, "text": " Um, and it's just a mapping between all the possible different", "tokens": [50544, 3301, 11, 293, 309, 311, 445, 257, 18350, 1296, 439, 264, 1944, 819, 50688], "temperature": 0.0, "avg_logprob": -0.15609999360709353, "compression_ratio": 1.64, "no_speech_prob": 0.0016735898097977042}, {"id": 998, "seek": 489636, "start": 4903.48, "end": 4905.4, "text": " aliases that exist", "tokens": [50720, 10198, 1957, 300, 2514, 50816], "temperature": 0.0, "avg_logprob": -0.15609999360709353, "compression_ratio": 1.64, "no_speech_prob": 0.0016735898097977042}, {"id": 999, "seek": 489636, "start": 4905.4, "end": 4908.679999999999, "text": " If you're familiar with other shells, you sort of know what an aliases, right?", "tokens": [50816, 759, 291, 434, 4963, 365, 661, 22523, 11, 291, 1333, 295, 458, 437, 364, 10198, 1957, 11, 558, 30, 50980], "temperature": 0.0, "avg_logprob": -0.15609999360709353, "compression_ratio": 1.64, "no_speech_prob": 0.0016735898097977042}, {"id": 1000, "seek": 489636, "start": 4909.16, "end": 4913.16, "text": " So and if you're not, uh, you'll see it's just another way to look up commands", "tokens": [51004, 407, 293, 498, 291, 434, 406, 11, 2232, 11, 291, 603, 536, 309, 311, 445, 1071, 636, 281, 574, 493, 16901, 51204], "temperature": 0.0, "avg_logprob": -0.15609999360709353, "compression_ratio": 1.64, "no_speech_prob": 0.0016735898097977042}, {"id": 1001, "seek": 489636, "start": 4913.16, "end": 4918.5199999999995, "text": " It's another dictionary to look up commands in uh, does this need to be plugged in? No, okay. All right", "tokens": [51204, 467, 311, 1071, 25890, 281, 574, 493, 16901, 294, 2232, 11, 775, 341, 643, 281, 312, 25679, 294, 30, 883, 11, 1392, 13, 1057, 558, 51472], "temperature": 0.0, "avg_logprob": -0.15609999360709353, "compression_ratio": 1.64, "no_speech_prob": 0.0016735898097977042}, {"id": 1002, "seek": 489636, "start": 4919.08, "end": 4921.08, "text": " um", "tokens": [51500, 1105, 51600], "temperature": 0.0, "avg_logprob": -0.15609999360709353, "compression_ratio": 1.64, "no_speech_prob": 0.0016735898097977042}, {"id": 1003, "seek": 489636, "start": 4921.08, "end": 4922.5199999999995, "text": " so", "tokens": [51600, 370, 51672], "temperature": 0.0, "avg_logprob": -0.15609999360709353, "compression_ratio": 1.64, "no_speech_prob": 0.0016735898097977042}, {"id": 1004, "seek": 492252, "start": 4922.6, "end": 4925.96, "text": " The first function signature is just an empty function signature", "tokens": [50368, 440, 700, 2445, 13397, 307, 445, 364, 6707, 2445, 13397, 50536], "temperature": 0.0, "avg_logprob": -0.10955333709716797, "compression_ratio": 1.6715686274509804, "no_speech_prob": 0.0004877596511505544}, {"id": 1005, "seek": 492252, "start": 4926.52, "end": 4929.88, "text": " So and it can return either a string", "tokens": [50564, 407, 293, 309, 393, 2736, 2139, 257, 6798, 50732], "temperature": 0.0, "avg_logprob": -0.10955333709716797, "compression_ratio": 1.6715686274509804, "no_speech_prob": 0.0004877596511505544}, {"id": 1006, "seek": 492252, "start": 4930.68, "end": 4937.64, "text": " Or in an integer return code where you know zero means success and everything else means various degrees of failure", "tokens": [50772, 1610, 294, 364, 24922, 2736, 3089, 689, 291, 458, 4018, 1355, 2245, 293, 1203, 1646, 1355, 3683, 5310, 295, 7763, 51120], "temperature": 0.0, "avg_logprob": -0.10955333709716797, "compression_ratio": 1.6715686274509804, "no_speech_prob": 0.0004877596511505544}, {"id": 1007, "seek": 492252, "start": 4938.040000000001, "end": 4940.040000000001, "text": " So you can do this with a lambda if you want", "tokens": [51140, 407, 291, 393, 360, 341, 365, 257, 13607, 498, 291, 528, 51240], "temperature": 0.0, "avg_logprob": -0.10955333709716797, "compression_ratio": 1.6715686274509804, "no_speech_prob": 0.0004877596511505544}, {"id": 1008, "seek": 492252, "start": 4940.6, "end": 4944.68, "text": " So go ahead and type this out. So if you say aliases, you know", "tokens": [51268, 407, 352, 2286, 293, 2010, 341, 484, 13, 407, 498, 291, 584, 10198, 1957, 11, 291, 458, 51472], "temperature": 0.0, "avg_logprob": -0.10955333709716797, "compression_ratio": 1.6715686274509804, "no_speech_prob": 0.0004877596511505544}, {"id": 1009, "seek": 492252, "start": 4945.400000000001, "end": 4947.400000000001, "text": " set item banana", "tokens": [51508, 992, 3174, 14194, 51608], "temperature": 0.0, "avg_logprob": -0.10955333709716797, "compression_ratio": 1.6715686274509804, "no_speech_prob": 0.0004877596511505544}, {"id": 1010, "seek": 494740, "start": 4947.48, "end": 4952.599999999999, "text": " Equals lambda with no arguments and then banana for scale new line", "tokens": [50368, 15624, 1124, 13607, 365, 572, 12869, 293, 550, 14194, 337, 4373, 777, 1622, 50624], "temperature": 0.0, "avg_logprob": -0.15930746914295668, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.002251547295600176}, {"id": 1011, "seek": 494740, "start": 4953.16, "end": 4955.16, "text": " You can then run the banana command", "tokens": [50652, 509, 393, 550, 1190, 264, 14194, 5622, 50752], "temperature": 0.0, "avg_logprob": -0.15930746914295668, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.002251547295600176}, {"id": 1012, "seek": 494740, "start": 4955.879999999999, "end": 4959.5599999999995, "text": " That is it. That's the essence of callable aliases", "tokens": [50788, 663, 307, 309, 13, 663, 311, 264, 12801, 295, 818, 712, 10198, 1957, 50972], "temperature": 0.0, "avg_logprob": -0.15930746914295668, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.002251547295600176}, {"id": 1013, "seek": 494740, "start": 4960.2, "end": 4962.2, "text": " And that that should just work", "tokens": [51004, 400, 300, 300, 820, 445, 589, 51104], "temperature": 0.0, "avg_logprob": -0.15930746914295668, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.002251547295600176}, {"id": 1014, "seek": 494740, "start": 4964.2, "end": 4968.04, "text": " Yes, so as tom caswell, i'm going to say his name out loud", "tokens": [51204, 1079, 11, 370, 382, 2916, 3058, 6326, 11, 741, 478, 516, 281, 584, 702, 1315, 484, 6588, 51396], "temperature": 0.0, "avg_logprob": -0.15930746914295668, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.002251547295600176}, {"id": 1015, "seek": 494740, "start": 4968.92, "end": 4970.92, "text": " tom caswell says this is", "tokens": [51440, 2916, 3058, 6326, 1619, 341, 307, 51540], "temperature": 0.0, "avg_logprob": -0.15930746914295668, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.002251547295600176}, {"id": 1016, "seek": 494740, "start": 4972.04, "end": 4975.4, "text": " Lambda for your shell server server server lists for yourself shell", "tokens": [51596, 45691, 337, 428, 8720, 7154, 7154, 7154, 14511, 337, 1803, 8720, 51764], "temperature": 0.0, "avg_logprob": -0.15930746914295668, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.002251547295600176}, {"id": 1017, "seek": 497540, "start": 4975.48, "end": 4977.48, "text": " I'm going to misquote him shamelessly", "tokens": [50368, 286, 478, 516, 281, 3346, 25016, 796, 40164, 356, 50468], "temperature": 0.0, "avg_logprob": -0.14900457730857275, "compression_ratio": 1.5566502463054188, "no_speech_prob": 0.0006068560760468245}, {"id": 1018, "seek": 497540, "start": 4978.679999999999, "end": 4980.679999999999, "text": " as as well so", "tokens": [50528, 382, 382, 731, 370, 50628], "temperature": 0.0, "avg_logprob": -0.14900457730857275, "compression_ratio": 1.5566502463054188, "no_speech_prob": 0.0006068560760468245}, {"id": 1019, "seek": 497540, "start": 4981.32, "end": 4986.599999999999, "text": " Okay, matplotlib matplotlib. That's right. Yeah, as long as we're mispronouncing things. I think", "tokens": [50660, 1033, 11, 3803, 564, 310, 38270, 3803, 564, 310, 38270, 13, 663, 311, 558, 13, 865, 11, 382, 938, 382, 321, 434, 3346, 1424, 266, 1733, 2175, 721, 13, 286, 519, 50924], "temperature": 0.0, "avg_logprob": -0.14900457730857275, "compression_ratio": 1.5566502463054188, "no_speech_prob": 0.0006068560760468245}, {"id": 1020, "seek": 497540, "start": 4987.879999999999, "end": 4995.0, "text": " Okay, so you can pipe this into any other command. So the wc command counts characters and lines and words", "tokens": [50988, 1033, 11, 370, 291, 393, 11240, 341, 666, 604, 661, 5622, 13, 407, 264, 261, 66, 5622, 14893, 4342, 293, 3876, 293, 2283, 51344], "temperature": 0.0, "avg_logprob": -0.14900457730857275, "compression_ratio": 1.5566502463054188, "no_speech_prob": 0.0006068560760468245}, {"id": 1021, "seek": 497540, "start": 4995.879999999999, "end": 5000.2, "text": " So if you pass the dash w flag that means to count the words", "tokens": [51388, 407, 498, 291, 1320, 264, 8240, 261, 7166, 300, 1355, 281, 1207, 264, 2283, 51604], "temperature": 0.0, "avg_logprob": -0.14900457730857275, "compression_ratio": 1.5566502463054188, "no_speech_prob": 0.0006068560760468245}, {"id": 1022, "seek": 500020, "start": 5000.92, "end": 5002.92, "text": " Um based on white space", "tokens": [50400, 3301, 2361, 322, 2418, 1901, 50500], "temperature": 0.0, "avg_logprob": -0.17074180603027345, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03256255388259888}, {"id": 1023, "seek": 500020, "start": 5003.0, "end": 5010.5199999999995, "text": " So you can say banana pipe wc dash w and that'll tell you that the output of the banana command has three", "tokens": [50504, 407, 291, 393, 584, 14194, 11240, 261, 66, 8240, 261, 293, 300, 603, 980, 291, 300, 264, 5598, 295, 264, 14194, 5622, 575, 1045, 50880], "temperature": 0.0, "avg_logprob": -0.17074180603027345, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03256255388259888}, {"id": 1024, "seek": 500020, "start": 5011.48, "end": 5014.12, "text": " Three, uh, three words in it, right?", "tokens": [50928, 6244, 11, 2232, 11, 1045, 2283, 294, 309, 11, 558, 30, 51060], "temperature": 0.0, "avg_logprob": -0.17074180603027345, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03256255388259888}, {"id": 1025, "seek": 500020, "start": 5014.28, "end": 5017.48, "text": " and if if you think about what what it would take to do this in", "tokens": [51068, 293, 498, 498, 291, 519, 466, 437, 437, 309, 576, 747, 281, 360, 341, 294, 51228], "temperature": 0.0, "avg_logprob": -0.17074180603027345, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03256255388259888}, {"id": 1026, "seek": 500020, "start": 5018.36, "end": 5020.5199999999995, "text": " in using sub process with", "tokens": [51272, 294, 1228, 1422, 1399, 365, 51380], "temperature": 0.0, "avg_logprob": -0.17074180603027345, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03256255388259888}, {"id": 1027, "seek": 500020, "start": 5021.32, "end": 5023.32, "text": " streaming data in and out this is", "tokens": [51420, 11791, 1412, 294, 293, 484, 341, 307, 51520], "temperature": 0.0, "avg_logprob": -0.17074180603027345, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03256255388259888}, {"id": 1028, "seek": 500020, "start": 5023.88, "end": 5027.96, "text": " Doing a lot behind the cover under the covers to make all of this work for you", "tokens": [51548, 18496, 257, 688, 2261, 264, 2060, 833, 264, 10538, 281, 652, 439, 295, 341, 589, 337, 291, 51752], "temperature": 0.0, "avg_logprob": -0.17074180603027345, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03256255388259888}, {"id": 1029, "seek": 502796, "start": 5028.44, "end": 5030.44, "text": " But it feels pretty natural", "tokens": [50388, 583, 309, 3417, 1238, 3303, 50488], "temperature": 0.0, "avg_logprob": -0.13353218875088535, "compression_ratio": 1.6192660550458715, "no_speech_prob": 0.0010812762193381786}, {"id": 1030, "seek": 502796, "start": 5030.84, "end": 5035.72, "text": " Right, because it's just a command just a python function. You're running as a command in sub process mode", "tokens": [50508, 1779, 11, 570, 309, 311, 445, 257, 5622, 445, 257, 38797, 2445, 13, 509, 434, 2614, 382, 257, 5622, 294, 1422, 1399, 4391, 50752], "temperature": 0.0, "avg_logprob": -0.13353218875088535, "compression_ratio": 1.6192660550458715, "no_speech_prob": 0.0010812762193381786}, {"id": 1031, "seek": 502796, "start": 5037.08, "end": 5042.2, "text": " Um, and of course if you want to get rid of that aliases alias because you don't like bananas", "tokens": [50820, 3301, 11, 293, 295, 1164, 498, 291, 528, 281, 483, 3973, 295, 300, 10198, 1957, 419, 4609, 570, 291, 500, 380, 411, 22742, 51076], "temperature": 0.0, "avg_logprob": -0.13353218875088535, "compression_ratio": 1.6192660550458715, "no_speech_prob": 0.0010812762193381786}, {"id": 1032, "seek": 502796, "start": 5042.68, "end": 5048.2, "text": " Um, you can delete that alias in the same way that you would delete any other item out of the dictionary", "tokens": [51100, 3301, 11, 291, 393, 12097, 300, 419, 4609, 294, 264, 912, 636, 300, 291, 576, 12097, 604, 661, 3174, 484, 295, 264, 25890, 51376], "temperature": 0.0, "avg_logprob": -0.13353218875088535, "compression_ratio": 1.6192660550458715, "no_speech_prob": 0.0010812762193381786}, {"id": 1033, "seek": 502796, "start": 5048.92, "end": 5050.92, "text": " Any questions? Yes?", "tokens": [51412, 2639, 1651, 30, 1079, 30, 51512], "temperature": 0.0, "avg_logprob": -0.13353218875088535, "compression_ratio": 1.6192660550458715, "no_speech_prob": 0.0010812762193381786}, {"id": 1034, "seek": 505092, "start": 5051.64, "end": 5053.64, "text": " So", "tokens": [50400, 407, 50500], "temperature": 0.0, "avg_logprob": -0.22294314495928877, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.0028446402866393328}, {"id": 1035, "seek": 505092, "start": 5055.56, "end": 5064.4400000000005, "text": " Swap is for environments and aliases is a totally different mapping. Yeah, uh, having a swap is not a bad idea though", "tokens": [50596, 3926, 569, 307, 337, 12388, 293, 10198, 1957, 307, 257, 3879, 819, 18350, 13, 865, 11, 2232, 11, 1419, 257, 18135, 307, 406, 257, 1578, 1558, 1673, 51040], "temperature": 0.0, "avg_logprob": -0.22294314495928877, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.0028446402866393328}, {"id": 1036, "seek": 505092, "start": 5064.6, "end": 5066.6, "text": " Please open an issue", "tokens": [51048, 2555, 1269, 364, 2734, 51148], "temperature": 0.0, "avg_logprob": -0.22294314495928877, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.0028446402866393328}, {"id": 1037, "seek": 505092, "start": 5068.36, "end": 5073.8, "text": " There's a banana command on the boondoo. I did not know that there was a banana command on boss. I don't know", "tokens": [51236, 821, 311, 257, 14194, 5622, 322, 264, 748, 684, 1986, 13, 286, 630, 406, 458, 300, 456, 390, 257, 14194, 5622, 322, 5741, 13, 286, 500, 380, 458, 51508], "temperature": 0.0, "avg_logprob": -0.22294314495928877, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.0028446402866393328}, {"id": 1038, "seek": 505092, "start": 5075.08, "end": 5077.08, "text": " What are you doing?", "tokens": [51572, 708, 366, 291, 884, 30, 51672], "temperature": 0.0, "avg_logprob": -0.22294314495928877, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.0028446402866393328}, {"id": 1039, "seek": 507708, "start": 5077.64, "end": 5079.64, "text": " Where do they live?", "tokens": [50392, 2305, 360, 436, 1621, 30, 50492], "temperature": 0.0, "avg_logprob": -0.19424078199598524, "compression_ratio": 1.6523809523809523, "no_speech_prob": 0.0005441895336844027}, {"id": 1040, "seek": 507708, "start": 5080.04, "end": 5082.04, "text": " Where do where do what?", "tokens": [50512, 2305, 360, 689, 360, 437, 30, 50612], "temperature": 0.0, "avg_logprob": -0.19424078199598524, "compression_ratio": 1.6523809523809523, "no_speech_prob": 0.0005441895336844027}, {"id": 1041, "seek": 507708, "start": 5083.4, "end": 5087.48, "text": " Yeah, so aliases live in their own dictionary that gets shoved or", "tokens": [50680, 865, 11, 370, 10198, 1957, 1621, 294, 641, 1065, 25890, 300, 2170, 2223, 937, 420, 50884], "temperature": 0.0, "avg_logprob": -0.19424078199598524, "compression_ratio": 1.6523809523809523, "no_speech_prob": 0.0005441895336844027}, {"id": 1042, "seek": 507708, "start": 5088.04, "end": 5090.92, "text": " Unfortunately aliased uh into built-ins", "tokens": [50912, 8590, 10198, 1937, 2232, 666, 3094, 12, 1292, 51056], "temperature": 0.0, "avg_logprob": -0.19424078199598524, "compression_ratio": 1.6523809523809523, "no_speech_prob": 0.0005441895336844027}, {"id": 1043, "seek": 507708, "start": 5091.48, "end": 5097.32, "text": " So we're not really in this tutorial talking about how conch does all these tying of things together under the covers", "tokens": [51084, 407, 321, 434, 406, 534, 294, 341, 7073, 1417, 466, 577, 416, 339, 775, 439, 613, 32405, 295, 721, 1214, 833, 264, 10538, 51376], "temperature": 0.0, "avg_logprob": -0.19424078199598524, "compression_ratio": 1.6523809523809523, "no_speech_prob": 0.0005441895336844027}, {"id": 1044, "seek": 507708, "start": 5097.64, "end": 5101.72, "text": " But in built-ins, there's an aliases dictionary that you can access at any time", "tokens": [51392, 583, 294, 3094, 12, 1292, 11, 456, 311, 364, 10198, 1957, 25890, 300, 291, 393, 2105, 412, 604, 565, 51596], "temperature": 0.0, "avg_logprob": -0.19424078199598524, "compression_ratio": 1.6523809523809523, "no_speech_prob": 0.0005441895336844027}, {"id": 1045, "seek": 510172, "start": 5102.68, "end": 5110.2, "text": " Yeah, and that allows it to persist so you can modify aliases or add these commands in your conch RC, and then they all live", "tokens": [50412, 865, 11, 293, 300, 4045, 309, 281, 13233, 370, 291, 393, 16927, 10198, 1957, 420, 909, 613, 16901, 294, 428, 416, 339, 28987, 11, 293, 550, 436, 439, 1621, 50788], "temperature": 0.0, "avg_logprob": -0.21778374488907631, "compression_ratio": 1.6074766355140186, "no_speech_prob": 0.006588611751794815}, {"id": 1046, "seek": 510172, "start": 5110.84, "end": 5112.68, "text": " indefinitely", "tokens": [50820, 24162, 10925, 50912], "temperature": 0.0, "avg_logprob": -0.21778374488907631, "compression_ratio": 1.6074766355140186, "no_speech_prob": 0.006588611751794815}, {"id": 1047, "seek": 510172, "start": 5112.68, "end": 5114.68, "text": " okay", "tokens": [50912, 1392, 51012], "temperature": 0.0, "avg_logprob": -0.21778374488907631, "compression_ratio": 1.6074766355140186, "no_speech_prob": 0.006588611751794815}, {"id": 1048, "seek": 510172, "start": 5115.400000000001, "end": 5119.320000000001, "text": " Uh, the next is that you can take a single argument which is", "tokens": [51048, 4019, 11, 264, 958, 307, 300, 291, 393, 747, 257, 2167, 6770, 597, 307, 51244], "temperature": 0.0, "avg_logprob": -0.21778374488907631, "compression_ratio": 1.6074766355140186, "no_speech_prob": 0.006588611751794815}, {"id": 1049, "seek": 510172, "start": 5119.96, "end": 5121.96, "text": " Uh, the command line arguments", "tokens": [51276, 4019, 11, 264, 5622, 1622, 12869, 51376], "temperature": 0.0, "avg_logprob": -0.21778374488907631, "compression_ratio": 1.6074766355140186, "no_speech_prob": 0.006588611751794815}, {"id": 1050, "seek": 510172, "start": 5122.360000000001, "end": 5125.400000000001, "text": " So like sys.rdv if you're familiar with that", "tokens": [51396, 407, 411, 262, 749, 13, 7800, 85, 498, 291, 434, 4963, 365, 300, 51548], "temperature": 0.0, "avg_logprob": -0.21778374488907631, "compression_ratio": 1.6074766355140186, "no_speech_prob": 0.006588611751794815}, {"id": 1051, "seek": 510172, "start": 5125.96, "end": 5130.04, "text": " Um, and it's it comes in as a list of strings. So if you provide", "tokens": [51576, 3301, 11, 293, 309, 311, 309, 1487, 294, 382, 257, 1329, 295, 13985, 13, 407, 498, 291, 2893, 51780], "temperature": 0.0, "avg_logprob": -0.21778374488907631, "compression_ratio": 1.6074766355140186, "no_speech_prob": 0.006588611751794815}, {"id": 1052, "seek": 513004, "start": 5130.84, "end": 5132.84, "text": " one argument", "tokens": [50404, 472, 6770, 50504], "temperature": 0.0, "avg_logprob": -0.16332041940023734, "compression_ratio": 1.6146341463414635, "no_speech_prob": 0.0022510860580950975}, {"id": 1053, "seek": 513004, "start": 5133.0, "end": 5140.86, "text": " That's called it. It's typically called args. Then you can take command line parameters. So here's an apple function", "tokens": [50512, 663, 311, 1219, 309, 13, 467, 311, 5850, 1219, 3882, 82, 13, 1396, 291, 393, 747, 5622, 1622, 9834, 13, 407, 510, 311, 364, 10606, 2445, 50905], "temperature": 0.0, "avg_logprob": -0.16332041940023734, "compression_ratio": 1.6146341463414635, "no_speech_prob": 0.0022510860580950975}, {"id": 1054, "seek": 513004, "start": 5141.48, "end": 5143.48, "text": " which takes", "tokens": [50936, 597, 2516, 51036], "temperature": 0.0, "avg_logprob": -0.16332041940023734, "compression_ratio": 1.6146341463414635, "no_speech_prob": 0.0022510860580950975}, {"id": 1055, "seek": 513004, "start": 5144.2, "end": 5146.6, "text": " Takes an args it'll look at it and it'll say", "tokens": [51072, 44347, 364, 3882, 82, 309, 603, 574, 412, 309, 293, 309, 603, 584, 51192], "temperature": 0.0, "avg_logprob": -0.16332041940023734, "compression_ratio": 1.6146341463414635, "no_speech_prob": 0.0022510860580950975}, {"id": 1056, "seek": 513004, "start": 5147.56, "end": 5149.56, "text": " Is my args list of length one?", "tokens": [51240, 1119, 452, 3882, 82, 1329, 295, 4641, 472, 30, 51340], "temperature": 0.0, "avg_logprob": -0.16332041940023734, "compression_ratio": 1.6146341463414635, "no_speech_prob": 0.0022510860580950975}, {"id": 1057, "seek": 513004, "start": 5151.64, "end": 5159.64, "text": " And do one thing and if and succeed return zero right because you can return the return code from these functions", "tokens": [51444, 400, 360, 472, 551, 293, 498, 293, 7754, 2736, 4018, 558, 570, 291, 393, 2736, 264, 2736, 3089, 490, 613, 6828, 51844], "temperature": 0.0, "avg_logprob": -0.16332041940023734, "compression_ratio": 1.6146341463414635, "no_speech_prob": 0.0022510860580950975}, {"id": 1058, "seek": 516004, "start": 5160.04, "end": 5164.2, "text": " And if not, um, it'll uh, and otherwise it'll return one", "tokens": [50364, 400, 498, 406, 11, 1105, 11, 309, 603, 2232, 11, 293, 5911, 309, 603, 2736, 472, 50572], "temperature": 0.0, "avg_logprob": -0.16322456964171758, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.00045112374937161803}, {"id": 1059, "seek": 516004, "start": 5164.92, "end": 5166.04, "text": " so", "tokens": [50608, 370, 50664], "temperature": 0.0, "avg_logprob": -0.16322456964171758, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.00045112374937161803}, {"id": 1060, "seek": 516004, "start": 5166.04, "end": 5168.04, "text": " um, yep, and then", "tokens": [50664, 1105, 11, 18633, 11, 293, 550, 50764], "temperature": 0.0, "avg_logprob": -0.16322456964171758, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.00045112374937161803}, {"id": 1061, "seek": 516004, "start": 5168.04, "end": 5169.56, "text": " uh", "tokens": [50764, 2232, 50840], "temperature": 0.0, "avg_logprob": -0.16322456964171758, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.00045112374937161803}, {"id": 1062, "seek": 516004, "start": 5169.56, "end": 5173.56, "text": " And just showing off another bit of syntax if you use this with the at", "tokens": [50840, 400, 445, 4099, 766, 1071, 857, 295, 28431, 498, 291, 764, 341, 365, 264, 412, 51040], "temperature": 0.0, "avg_logprob": -0.16322456964171758, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.00045112374937161803}, {"id": 1063, "seek": 516004, "start": 5174.04, "end": 5178.28, "text": " Python mode operator you can you don't even need to stick this in aliases", "tokens": [51064, 15329, 4391, 12973, 291, 393, 291, 500, 380, 754, 643, 281, 2897, 341, 294, 10198, 1957, 51276], "temperature": 0.0, "avg_logprob": -0.16322456964171758, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.00045112374937161803}, {"id": 1064, "seek": 516004, "start": 5178.36, "end": 5183.8, "text": " You can just call it directly because it's a python object. So if you put the command the function", "tokens": [51280, 509, 393, 445, 818, 309, 3838, 570, 309, 311, 257, 38797, 2657, 13, 407, 498, 291, 829, 264, 5622, 264, 2445, 51552], "temperature": 0.0, "avg_logprob": -0.16322456964171758, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.00045112374937161803}, {"id": 1065, "seek": 516004, "start": 5184.68, "end": 5187.32, "text": " at parentheses function as the first argument", "tokens": [51596, 412, 34153, 2445, 382, 264, 700, 6770, 51728], "temperature": 0.0, "avg_logprob": -0.16322456964171758, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.00045112374937161803}, {"id": 1066, "seek": 518732, "start": 5188.28, "end": 5192.28, "text": " And then pass in a some command line arguments after that it'll read it in", "tokens": [50412, 400, 550, 1320, 294, 257, 512, 5622, 1622, 12869, 934, 300, 309, 603, 1401, 309, 294, 50612], "temperature": 0.0, "avg_logprob": -0.19509100269626928, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.0006360848201438785}, {"id": 1067, "seek": 518732, "start": 5195.799999999999, "end": 5197.96, "text": " Any questions on how this works", "tokens": [50788, 2639, 1651, 322, 577, 341, 1985, 50896], "temperature": 0.0, "avg_logprob": -0.19509100269626928, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.0006360848201438785}, {"id": 1068, "seek": 518732, "start": 5200.04, "end": 5202.04, "text": " Any callable will work", "tokens": [51000, 2639, 818, 712, 486, 589, 51100], "temperature": 0.0, "avg_logprob": -0.19509100269626928, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.0006360848201438785}, {"id": 1069, "seek": 518732, "start": 5202.84, "end": 5204.84, "text": " Callable classes are are yes", "tokens": [51140, 7807, 712, 5359, 366, 366, 2086, 51240], "temperature": 0.0, "avg_logprob": -0.19509100269626928, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.0006360848201438785}, {"id": 1070, "seek": 518732, "start": 5205.719999999999, "end": 5209.08, "text": " Yes, go callable classes. Yeah, this is not limited to", "tokens": [51284, 1079, 11, 352, 818, 712, 5359, 13, 865, 11, 341, 307, 406, 5567, 281, 51452], "temperature": 0.0, "avg_logprob": -0.19509100269626928, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.0006360848201438785}, {"id": 1071, "seek": 518732, "start": 5210.2, "end": 5212.679999999999, "text": " functions and and uh, and lambdas and things", "tokens": [51508, 6828, 293, 293, 2232, 11, 293, 10097, 27476, 293, 721, 51632], "temperature": 0.0, "avg_logprob": -0.19509100269626928, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.0006360848201438785}, {"id": 1072, "seek": 518732, "start": 5213.5599999999995, "end": 5215.5599999999995, "text": " okay", "tokens": [51676, 1392, 51776], "temperature": 0.0, "avg_logprob": -0.19509100269626928, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.0006360848201438785}, {"id": 1073, "seek": 521556, "start": 5216.04, "end": 5219.320000000001, "text": " Yeah, and of course there's a formatting bug, but that's whatever", "tokens": [50388, 865, 11, 293, 295, 1164, 456, 311, 257, 39366, 7426, 11, 457, 300, 311, 2035, 50552], "temperature": 0.0, "avg_logprob": -0.2747465697201816, "compression_ratio": 1.0, "no_speech_prob": 0.000552706653252244}, {"id": 1074, "seek": 521556, "start": 5220.360000000001, "end": 5222.360000000001, "text": " Yeah", "tokens": [50604, 865, 50704], "temperature": 0.0, "avg_logprob": -0.2747465697201816, "compression_ratio": 1.0, "no_speech_prob": 0.000552706653252244}, {"id": 1075, "seek": 522236, "start": 5222.36, "end": 5224.36, "text": " Sure", "tokens": [50364, 4894, 50464], "temperature": 0.0, "avg_logprob": -0.20780539512634277, "compression_ratio": 1.6119402985074627, "no_speech_prob": 0.018538406118750572}, {"id": 1076, "seek": 522236, "start": 5239.799999999999, "end": 5243.0, "text": " Yeah, so the question is would would you just want this to live in your", "tokens": [51236, 865, 11, 370, 264, 1168, 307, 576, 576, 291, 445, 528, 341, 281, 1621, 294, 428, 51396], "temperature": 0.0, "avg_logprob": -0.20780539512634277, "compression_ratio": 1.6119402985074627, "no_speech_prob": 0.018538406118750572}, {"id": 1077, "seek": 522236, "start": 5243.4, "end": 5250.679999999999, "text": " Your conch execution context the python execution context or would you want this to live in aliases specifically like you might do in bash?", "tokens": [51416, 2260, 416, 339, 15058, 4319, 264, 38797, 15058, 4319, 420, 576, 291, 528, 341, 281, 1621, 294, 10198, 1957, 4682, 411, 291, 1062, 360, 294, 46183, 30, 51780], "temperature": 0.0, "avg_logprob": -0.20780539512634277, "compression_ratio": 1.6119402985074627, "no_speech_prob": 0.018538406118750572}, {"id": 1078, "seek": 525068, "start": 5251.0, "end": 5252.12, "text": " um", "tokens": [50380, 1105, 50436], "temperature": 0.0, "avg_logprob": -0.1435061310822109, "compression_ratio": 1.820754716981132, "no_speech_prob": 0.0007552264723926783}, {"id": 1079, "seek": 525068, "start": 5252.12, "end": 5258.92, "text": " Oftentimes you just you stick them into the aliases dictionary like you do in bash because it's easier to call them", "tokens": [50436, 46636, 291, 445, 291, 2897, 552, 666, 264, 10198, 1957, 25890, 411, 291, 360, 294, 46183, 570, 309, 311, 3571, 281, 818, 552, 50776], "temperature": 0.0, "avg_logprob": -0.1435061310822109, "compression_ratio": 1.820754716981132, "no_speech_prob": 0.0007552264723926783}, {"id": 1080, "seek": 525068, "start": 5258.92, "end": 5260.68, "text": " It's simpler to call them", "tokens": [50776, 467, 311, 18587, 281, 818, 552, 50864], "temperature": 0.0, "avg_logprob": -0.1435061310822109, "compression_ratio": 1.820754716981132, "no_speech_prob": 0.0007552264723926783}, {"id": 1081, "seek": 525068, "start": 5260.68, "end": 5263.96, "text": " It's kind of that's kind of the where what that's there for and where it lives", "tokens": [50864, 467, 311, 733, 295, 300, 311, 733, 295, 264, 689, 437, 300, 311, 456, 337, 293, 689, 309, 2909, 51028], "temperature": 0.0, "avg_logprob": -0.1435061310822109, "compression_ratio": 1.820754716981132, "no_speech_prob": 0.0007552264723926783}, {"id": 1082, "seek": 525068, "start": 5264.6, "end": 5266.6, "text": " If for some reason you don't want to have it", "tokens": [51060, 759, 337, 512, 1778, 291, 500, 380, 528, 281, 362, 309, 51160], "temperature": 0.0, "avg_logprob": -0.1435061310822109, "compression_ratio": 1.820754716981132, "no_speech_prob": 0.0007552264723926783}, {"id": 1083, "seek": 525068, "start": 5267.320000000001, "end": 5272.04, "text": " There and you just want it to have it have it in your execution context. That's fine. That's fine, too", "tokens": [51196, 821, 293, 291, 445, 528, 309, 281, 362, 309, 362, 309, 294, 428, 15058, 4319, 13, 663, 311, 2489, 13, 663, 311, 2489, 11, 886, 51432], "temperature": 0.0, "avg_logprob": -0.1435061310822109, "compression_ratio": 1.820754716981132, "no_speech_prob": 0.0007552264723926783}, {"id": 1084, "seek": 525068, "start": 5273.0, "end": 5275.0, "text": " Yeah", "tokens": [51480, 865, 51580], "temperature": 0.0, "avg_logprob": -0.1435061310822109, "compression_ratio": 1.820754716981132, "no_speech_prob": 0.0007552264723926783}, {"id": 1085, "seek": 525068, "start": 5276.360000000001, "end": 5278.200000000001, "text": " All right", "tokens": [51648, 1057, 558, 51740], "temperature": 0.0, "avg_logprob": -0.1435061310822109, "compression_ratio": 1.820754716981132, "no_speech_prob": 0.0007552264723926783}, {"id": 1086, "seek": 527820, "start": 5278.2, "end": 5280.2, "text": " Okay, so let's uh move on", "tokens": [50364, 1033, 11, 370, 718, 311, 2232, 1286, 322, 50464], "temperature": 0.0, "avg_logprob": -0.18894154866536458, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0003149164258502424}, {"id": 1087, "seek": 527820, "start": 5281.32, "end": 5282.84, "text": " so", "tokens": [50520, 370, 50596], "temperature": 0.0, "avg_logprob": -0.18894154866536458, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0003149164258502424}, {"id": 1088, "seek": 527820, "start": 5282.84, "end": 5285.32, "text": " The in the next case you can provide", "tokens": [50596, 440, 294, 264, 958, 1389, 291, 393, 2893, 50720], "temperature": 0.0, "avg_logprob": -0.18894154866536458, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0003149164258502424}, {"id": 1089, "seek": 527820, "start": 5286.28, "end": 5288.28, "text": " In sequential order", "tokens": [50768, 682, 42881, 1668, 50868], "temperature": 0.0, "avg_logprob": -0.18894154866536458, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0003149164258502424}, {"id": 1090, "seek": 527820, "start": 5288.5199999999995, "end": 5290.5199999999995, "text": " Any of standard in standard", "tokens": [50880, 2639, 295, 3832, 294, 3832, 50980], "temperature": 0.0, "avg_logprob": -0.18894154866536458, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0003149164258502424}, {"id": 1091, "seek": 527820, "start": 5291.32, "end": 5293.32, "text": " Out and standard error", "tokens": [51020, 5925, 293, 3832, 6713, 51120], "temperature": 0.0, "avg_logprob": -0.18894154866536458, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0003149164258502424}, {"id": 1092, "seek": 527820, "start": 5293.32, "end": 5300.28, "text": " And these are keyword arguments and they default to none right you may not have one of those streams although usually you have standard in", "tokens": [51120, 400, 613, 366, 20428, 12869, 293, 436, 7576, 281, 6022, 558, 291, 815, 406, 362, 472, 295, 729, 15842, 4878, 2673, 291, 362, 3832, 294, 51468], "temperature": 0.0, "avg_logprob": -0.18894154866536458, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0003149164258502424}, {"id": 1093, "seek": 527820, "start": 5301.4, "end": 5303.4, "text": " So those come", "tokens": [51524, 407, 729, 808, 51624], "temperature": 0.0, "avg_logprob": -0.18894154866536458, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0003149164258502424}, {"id": 1094, "seek": 530340, "start": 5303.4, "end": 5308.36, "text": " Immediately following the arguments parameter. So here we've got a grape function", "tokens": [50364, 34457, 3480, 264, 12869, 13075, 13, 407, 510, 321, 600, 658, 257, 23978, 2445, 50612], "temperature": 0.0, "avg_logprob": -0.21452392850603377, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.006287645548582077}, {"id": 1095, "seek": 530340, "start": 5309.48, "end": 5315.24, "text": " Or an underscore grape function. This is actually the most common pattern is you have pattern. Sorry. So you have the function", "tokens": [50668, 1610, 364, 37556, 23978, 2445, 13, 639, 307, 767, 264, 881, 2689, 5102, 307, 291, 362, 5102, 13, 4919, 13, 407, 291, 362, 264, 2445, 50956], "temperature": 0.0, "avg_logprob": -0.21452392850603377, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.006287645548582077}, {"id": 1096, "seek": 530340, "start": 5316.44, "end": 5318.679999999999, "text": " Name preceded by an underscore", "tokens": [51016, 13866, 16969, 292, 538, 364, 37556, 51128], "temperature": 0.0, "avg_logprob": -0.21452392850603377, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.006287645548582077}, {"id": 1097, "seek": 530340, "start": 5319.48, "end": 5321.48, "text": " And then you put that into", "tokens": [51168, 400, 550, 291, 829, 300, 666, 51268], "temperature": 0.0, "avg_logprob": -0.21452392850603377, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.006287645548582077}, {"id": 1098, "seek": 530340, "start": 5322.28, "end": 5324.28, "text": " The aliases dictionary without the underscore", "tokens": [51308, 440, 10198, 1957, 25890, 1553, 264, 37556, 51408], "temperature": 0.0, "avg_logprob": -0.21452392850603377, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.006287645548582077}, {"id": 1099, "seek": 530340, "start": 5325.879999999999, "end": 5329.4, "text": " And basically what these do is these give you file like handles", "tokens": [51488, 400, 1936, 437, 613, 360, 307, 613, 976, 291, 3991, 411, 18722, 51664], "temperature": 0.0, "avg_logprob": -0.21452392850603377, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.006287645548582077}, {"id": 1100, "seek": 532940, "start": 5329.96, "end": 5336.44, "text": " For standard in standard out and standard error. So if these are present you can access them and do whatever you would do normally", "tokens": [50392, 1171, 3832, 294, 3832, 484, 293, 3832, 6713, 13, 407, 498, 613, 366, 1974, 291, 393, 2105, 552, 293, 360, 2035, 291, 576, 360, 5646, 50716], "temperature": 0.0, "avg_logprob": -0.17585268020629882, "compression_ratio": 1.7321428571428572, "no_speech_prob": 0.002082499675452709}, {"id": 1101, "seek": 532940, "start": 5337.16, "end": 5339.719999999999, "text": " with those those handles so", "tokens": [50752, 365, 729, 729, 18722, 370, 50880], "temperature": 0.0, "avg_logprob": -0.17585268020629882, "compression_ratio": 1.7321428571428572, "no_speech_prob": 0.002082499675452709}, {"id": 1102, "seek": 532940, "start": 5340.92, "end": 5344.759999999999, "text": " We do some contact switching under the covers too. So like if you just", "tokens": [50940, 492, 360, 512, 3385, 16493, 833, 264, 10538, 886, 13, 407, 411, 498, 291, 445, 51132], "temperature": 0.0, "avg_logprob": -0.17585268020629882, "compression_ratio": 1.7321428571428572, "no_speech_prob": 0.002082499675452709}, {"id": 1103, "seek": 532940, "start": 5345.32, "end": 5350.36, "text": " write to sys.standard in or sys.standard error, etc. That that works as well, but", "tokens": [51160, 2464, 281, 262, 749, 13, 1115, 515, 294, 420, 262, 749, 13, 1115, 515, 6713, 11, 5183, 13, 663, 300, 1985, 382, 731, 11, 457, 51412], "temperature": 0.0, "avg_logprob": -0.17585268020629882, "compression_ratio": 1.7321428571428572, "no_speech_prob": 0.002082499675452709}, {"id": 1104, "seek": 532940, "start": 5351.16, "end": 5353.16, "text": " it's usually better and and", "tokens": [51452, 309, 311, 2673, 1101, 293, 293, 51552], "temperature": 0.0, "avg_logprob": -0.17585268020629882, "compression_ratio": 1.7321428571428572, "no_speech_prob": 0.002082499675452709}, {"id": 1105, "seek": 532940, "start": 5353.96, "end": 5356.28, "text": " To write directly to those file handles. So here", "tokens": [51592, 1407, 2464, 3838, 281, 729, 3991, 18722, 13, 407, 510, 51708], "temperature": 0.0, "avg_logprob": -0.17585268020629882, "compression_ratio": 1.7321428571428572, "no_speech_prob": 0.002082499675452709}, {"id": 1106, "seek": 535628, "start": 5357.24, "end": 5360.759999999999, "text": " If you wanted to implement something that's streaming but not asynchronous", "tokens": [50412, 759, 291, 1415, 281, 4445, 746, 300, 311, 11791, 457, 406, 49174, 50588], "temperature": 0.0, "avg_logprob": -0.1224905606862661, "compression_ratio": 1.5885416666666667, "no_speech_prob": 0.001987320138141513}, {"id": 1107, "seek": 535628, "start": 5362.5199999999995, "end": 5368.5199999999995, "text": " You would do four line in standard in you'd be reading lines from standard in and then we'd be writing them out", "tokens": [50676, 509, 576, 360, 1451, 1622, 294, 3832, 294, 291, 1116, 312, 3760, 3876, 490, 3832, 294, 293, 550, 321, 1116, 312, 3579, 552, 484, 50976], "temperature": 0.0, "avg_logprob": -0.1224905606862661, "compression_ratio": 1.5885416666666667, "no_speech_prob": 0.001987320138141513}, {"id": 1108, "seek": 535628, "start": 5370.04, "end": 5373.08, "text": " Write back out to standard out lowering them as we go", "tokens": [51052, 23499, 646, 484, 281, 3832, 484, 28124, 552, 382, 321, 352, 51204], "temperature": 0.0, "avg_logprob": -0.1224905606862661, "compression_ratio": 1.5885416666666667, "no_speech_prob": 0.001987320138141513}, {"id": 1109, "seek": 535628, "start": 5375.0, "end": 5377.0, "text": " Okay", "tokens": [51300, 1033, 51400], "temperature": 0.0, "avg_logprob": -0.1224905606862661, "compression_ratio": 1.5885416666666667, "no_speech_prob": 0.001987320138141513}, {"id": 1110, "seek": 535628, "start": 5378.04, "end": 5380.04, "text": " Yep", "tokens": [51452, 7010, 51552], "temperature": 0.0, "avg_logprob": -0.1224905606862661, "compression_ratio": 1.5885416666666667, "no_speech_prob": 0.001987320138141513}, {"id": 1111, "seek": 535628, "start": 5380.5199999999995, "end": 5382.5199999999995, "text": " The underscore pattern is there because", "tokens": [51576, 440, 37556, 5102, 307, 456, 570, 51676], "temperature": 0.0, "avg_logprob": -0.1224905606862661, "compression_ratio": 1.5885416666666667, "no_speech_prob": 0.001987320138141513}, {"id": 1112, "seek": 535628, "start": 5383.16, "end": 5385.16, "text": " When you source", "tokens": [51708, 1133, 291, 4009, 51808], "temperature": 0.0, "avg_logprob": -0.1224905606862661, "compression_ratio": 1.5885416666666667, "no_speech_prob": 0.001987320138141513}, {"id": 1113, "seek": 538516, "start": 5385.88, "end": 5391.4, "text": " You don't get under you don't get the underscore variables in your execution context", "tokens": [50400, 509, 500, 380, 483, 833, 291, 500, 380, 483, 264, 37556, 9102, 294, 428, 15058, 4319, 50676], "temperature": 0.0, "avg_logprob": -0.10029919942220052, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.0008164895116351545}, {"id": 1114, "seek": 538516, "start": 5391.96, "end": 5394.04, "text": " Those don't get brought in automatically. So", "tokens": [50704, 3950, 500, 380, 483, 3038, 294, 6772, 13, 407, 50808], "temperature": 0.0, "avg_logprob": -0.10029919942220052, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.0008164895116351545}, {"id": 1115, "seek": 538516, "start": 5394.76, "end": 5400.599999999999, "text": " It's a way of hiding things from your execution context if you don't want to pollute the namespace that you're just working in all the time", "tokens": [50844, 467, 311, 257, 636, 295, 10596, 721, 490, 428, 15058, 4319, 498, 291, 500, 380, 528, 281, 6418, 1169, 264, 5288, 17940, 300, 291, 434, 445, 1364, 294, 439, 264, 565, 51136], "temperature": 0.0, "avg_logprob": -0.10029919942220052, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.0008164895116351545}, {"id": 1116, "seek": 538516, "start": 5401.88, "end": 5402.76, "text": " Yeah", "tokens": [51200, 865, 51244], "temperature": 0.0, "avg_logprob": -0.10029919942220052, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.0008164895116351545}, {"id": 1117, "seek": 538516, "start": 5402.76, "end": 5408.599999999999, "text": " Okay, so usage here we go. So this takes a standard in and kind of needs it because we didn't check if it was none here", "tokens": [51244, 1033, 11, 370, 14924, 510, 321, 352, 13, 407, 341, 2516, 257, 3832, 294, 293, 733, 295, 2203, 309, 570, 321, 994, 380, 1520, 498, 309, 390, 6022, 510, 51536], "temperature": 0.0, "avg_logprob": -0.10029919942220052, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.0008164895116351545}, {"id": 1118, "seek": 538516, "start": 5409.0, "end": 5410.599999999999, "text": " so if we spell", "tokens": [51556, 370, 498, 321, 9827, 51636], "temperature": 0.0, "avg_logprob": -0.10029919942220052, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.0008164895116351545}, {"id": 1119, "seek": 538516, "start": 5410.599999999999, "end": 5412.36, "text": " echo wrath", "tokens": [51636, 14300, 35496, 51724], "temperature": 0.0, "avg_logprob": -0.10029919942220052, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.0008164895116351545}, {"id": 1120, "seek": 538516, "start": 5412.36, "end": 5413.88, "text": " with", "tokens": [51724, 365, 51800], "temperature": 0.0, "avg_logprob": -0.10029919942220052, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.0008164895116351545}, {"id": 1121, "seek": 541388, "start": 5413.88, "end": 5415.88, "text": " And then pipe that to our grape command", "tokens": [50364, 400, 550, 11240, 300, 281, 527, 23978, 5622, 50464], "temperature": 0.0, "avg_logprob": -0.1366603739121381, "compression_ratio": 1.7294685990338163, "no_speech_prob": 0.0002959105186164379}, {"id": 1122, "seek": 541388, "start": 5416.84, "end": 5419.08, "text": " It will lowercase that and write it back out", "tokens": [50512, 467, 486, 3126, 9765, 300, 293, 2464, 309, 646, 484, 50624], "temperature": 0.0, "avg_logprob": -0.1366603739121381, "compression_ratio": 1.7294685990338163, "no_speech_prob": 0.0002959105186164379}, {"id": 1123, "seek": 541388, "start": 5421.88, "end": 5423.56, "text": " This makes sense to everybody", "tokens": [50764, 639, 1669, 2020, 281, 2201, 50848], "temperature": 0.0, "avg_logprob": -0.1366603739121381, "compression_ratio": 1.7294685990338163, "no_speech_prob": 0.0002959105186164379}, {"id": 1124, "seek": 541388, "start": 5423.56, "end": 5425.56, "text": " right so the the", "tokens": [50848, 558, 370, 264, 264, 50948], "temperature": 0.0, "avg_logprob": -0.1366603739121381, "compression_ratio": 1.7294685990338163, "no_speech_prob": 0.0002959105186164379}, {"id": 1125, "seek": 541388, "start": 5425.56, "end": 5427.0, "text": " standard", "tokens": [50948, 3832, 51020], "temperature": 0.0, "avg_logprob": -0.1366603739121381, "compression_ratio": 1.7294685990338163, "no_speech_prob": 0.0002959105186164379}, {"id": 1126, "seek": 541388, "start": 5427.0, "end": 5431.24, "text": " The output of echo wrath becomes the standard in of the grape function", "tokens": [51020, 440, 5598, 295, 14300, 35496, 3643, 264, 3832, 294, 295, 264, 23978, 2445, 51232], "temperature": 0.0, "avg_logprob": -0.1366603739121381, "compression_ratio": 1.7294685990338163, "no_speech_prob": 0.0002959105186164379}, {"id": 1127, "seek": 541388, "start": 5431.4800000000005, "end": 5437.08, "text": " Which then operates and then writes back out to what is our our terminals standard out", "tokens": [51244, 3013, 550, 22577, 293, 550, 13657, 646, 484, 281, 437, 307, 527, 527, 38579, 3832, 484, 51524], "temperature": 0.0, "avg_logprob": -0.1366603739121381, "compression_ratio": 1.7294685990338163, "no_speech_prob": 0.0002959105186164379}, {"id": 1128, "seek": 541388, "start": 5437.96, "end": 5441.56, "text": " Because that the grape is being called last in the pipeline", "tokens": [51568, 1436, 300, 264, 23978, 307, 885, 1219, 1036, 294, 264, 15517, 51748], "temperature": 0.0, "avg_logprob": -0.1366603739121381, "compression_ratio": 1.7294685990338163, "no_speech_prob": 0.0002959105186164379}, {"id": 1129, "seek": 544388, "start": 5443.88, "end": 5451.88, "text": " Okay, um, you can use any of these but if if if you want to use standard error, you have to use standard in and standard out", "tokens": [50364, 1033, 11, 1105, 11, 291, 393, 764, 604, 295, 613, 457, 498, 498, 498, 291, 528, 281, 764, 3832, 6713, 11, 291, 362, 281, 764, 3832, 294, 293, 3832, 484, 50764], "temperature": 0.0, "avg_logprob": -0.1831304024958956, "compression_ratio": 1.5664335664335665, "no_speech_prob": 0.000269428885076195}, {"id": 1130, "seek": 544388, "start": 5454.12, "end": 5456.12, "text": " Yeah, that's about it", "tokens": [50876, 865, 11, 300, 311, 466, 309, 50976], "temperature": 0.0, "avg_logprob": -0.1831304024958956, "compression_ratio": 1.5664335664335665, "no_speech_prob": 0.000269428885076195}, {"id": 1131, "seek": 544388, "start": 5457.96, "end": 5460.04, "text": " Okay, whoops. Yeah, so", "tokens": [51068, 1033, 11, 567, 3370, 13, 865, 11, 370, 51172], "temperature": 0.0, "avg_logprob": -0.1831304024958956, "compression_ratio": 1.5664335664335665, "no_speech_prob": 0.000269428885076195}, {"id": 1132, "seek": 544388, "start": 5461.96, "end": 5465.96, "text": " Next up is you can also get a handle or a", "tokens": [51268, 3087, 493, 307, 291, 393, 611, 483, 257, 4813, 420, 257, 51468], "temperature": 0.0, "avg_logprob": -0.1831304024958956, "compression_ratio": 1.5664335664335665, "no_speech_prob": 0.000269428885076195}, {"id": 1133, "seek": 544388, "start": 5466.84, "end": 5468.4400000000005, "text": " reference to", "tokens": [51512, 6408, 281, 51592], "temperature": 0.0, "avg_logprob": -0.1831304024958956, "compression_ratio": 1.5664335664335665, "no_speech_prob": 0.000269428885076195}, {"id": 1134, "seek": 546844, "start": 5468.44, "end": 5476.599999999999, "text": " The command specification. So this is a specific object that the command pipeline also has access to it's it's basically how conch", "tokens": [50364, 440, 5622, 31256, 13, 407, 341, 307, 257, 2685, 2657, 300, 264, 5622, 15517, 611, 575, 2105, 281, 309, 311, 309, 311, 1936, 577, 416, 339, 50772], "temperature": 0.0, "avg_logprob": -0.12150729695955913, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.014723395928740501}, {"id": 1135, "seek": 546844, "start": 5477.24, "end": 5484.759999999999, "text": " Thinks you should be running the command. It's how the command pipeline got set up for that particular sub command", "tokens": [50804, 6557, 82, 291, 820, 312, 2614, 264, 5622, 13, 467, 311, 577, 264, 5622, 15517, 658, 992, 493, 337, 300, 1729, 1422, 5622, 51180], "temperature": 0.0, "avg_logprob": -0.12150729695955913, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.014723395928740501}, {"id": 1136, "seek": 546844, "start": 5485.24, "end": 5487.32, "text": " Um, so this is a rich python object", "tokens": [51204, 3301, 11, 370, 341, 307, 257, 4593, 38797, 2657, 51308], "temperature": 0.0, "avg_logprob": -0.12150729695955913, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.014723395928740501}, {"id": 1137, "seek": 546844, "start": 5487.32, "end": 5495.16, "text": " You can go look at the api if you want to but it it effectively contains all the metadata about how you should be running that command", "tokens": [51308, 509, 393, 352, 574, 412, 264, 1882, 72, 498, 291, 528, 281, 457, 309, 309, 8659, 8306, 439, 264, 26603, 466, 577, 291, 820, 312, 2614, 300, 5622, 51700], "temperature": 0.0, "avg_logprob": -0.12150729695955913, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.014723395928740501}, {"id": 1138, "seek": 549516, "start": 5495.88, "end": 5499.72, "text": " Um, including what goes in what goes out. So that'll come in", "tokens": [50400, 3301, 11, 3009, 437, 1709, 294, 437, 1709, 484, 13, 407, 300, 603, 808, 294, 50592], "temperature": 0.0, "avg_logprob": -0.17732970568598533, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0016482200007885695}, {"id": 1139, "seek": 549516, "start": 5500.36, "end": 5503.4, "text": " after the standard in standard out and standard error", "tokens": [50624, 934, 264, 3832, 294, 3832, 484, 293, 3832, 6713, 50776], "temperature": 0.0, "avg_logprob": -0.17732970568598533, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0016482200007885695}, {"id": 1140, "seek": 549516, "start": 5504.04, "end": 5504.84, "text": " um", "tokens": [50808, 1105, 50848], "temperature": 0.0, "avg_logprob": -0.17732970568598533, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0016482200007885695}, {"id": 1141, "seek": 549516, "start": 5504.84, "end": 5510.599999999999, "text": " And you can do kind of like funny things here. So one of the things you can do is you can you can use this for is you can check", "tokens": [50848, 400, 291, 393, 360, 733, 295, 411, 4074, 721, 510, 13, 407, 472, 295, 264, 721, 291, 393, 360, 307, 291, 393, 291, 393, 764, 341, 337, 307, 291, 393, 1520, 51136], "temperature": 0.0, "avg_logprob": -0.17732970568598533, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0016482200007885695}, {"id": 1142, "seek": 549516, "start": 5511.24, "end": 5512.36, "text": " whether", "tokens": [51168, 1968, 51224], "temperature": 0.0, "avg_logprob": -0.17732970568598533, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0016482200007885695}, {"id": 1143, "seek": 549516, "start": 5512.36, "end": 5513.88, "text": " the", "tokens": [51224, 264, 51300], "temperature": 0.0, "avg_logprob": -0.17732970568598533, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0016482200007885695}, {"id": 1144, "seek": 549516, "start": 5513.88, "end": 5519.96, "text": " Command is meant to be in a captured sub process so that we talked about that before so you can check to see like", "tokens": [51300, 17901, 307, 4140, 281, 312, 294, 257, 11828, 1422, 1399, 370, 300, 321, 2825, 466, 300, 949, 370, 291, 393, 1520, 281, 536, 411, 51604], "temperature": 0.0, "avg_logprob": -0.17732970568598533, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0016482200007885695}, {"id": 1145, "seek": 551996, "start": 5520.28, "end": 5522.92, "text": " Am I running this in a captured sub process or not?", "tokens": [50380, 2012, 286, 2614, 341, 294, 257, 11828, 1422, 1399, 420, 406, 30, 50512], "temperature": 0.0, "avg_logprob": -0.09766876797716156, "compression_ratio": 1.859375, "no_speech_prob": 0.005729378666728735}, {"id": 1146, "seek": 551996, "start": 5523.16, "end": 5527.4800000000005, "text": " So this is particularly useful if you want to know if you're connected to a live terminal or not", "tokens": [50524, 407, 341, 307, 4098, 4420, 498, 291, 528, 281, 458, 498, 291, 434, 4582, 281, 257, 1621, 14709, 420, 406, 50740], "temperature": 0.0, "avg_logprob": -0.09766876797716156, "compression_ratio": 1.859375, "no_speech_prob": 0.005729378666728735}, {"id": 1147, "seek": 551996, "start": 5528.36, "end": 5532.04, "text": " Or if you want to like this is actually used in the witch command pretty frequently", "tokens": [50784, 1610, 498, 291, 528, 281, 411, 341, 307, 767, 1143, 294, 264, 14867, 5622, 1238, 10374, 50968], "temperature": 0.0, "avg_logprob": -0.09766876797716156, "compression_ratio": 1.859375, "no_speech_prob": 0.005729378666728735}, {"id": 1148, "seek": 551996, "start": 5532.76, "end": 5535.72, "text": " Where you don't want to append a new line if you're capturing it", "tokens": [51004, 2305, 291, 500, 380, 528, 281, 34116, 257, 777, 1622, 498, 291, 434, 23384, 309, 51152], "temperature": 0.0, "avg_logprob": -0.09766876797716156, "compression_ratio": 1.859375, "no_speech_prob": 0.005729378666728735}, {"id": 1149, "seek": 551996, "start": 5535.96, "end": 5539.96, "text": " If you're just printing it out to the screen, you want the new line to be there because you want everything to look nice", "tokens": [51164, 759, 291, 434, 445, 14699, 309, 484, 281, 264, 2568, 11, 291, 528, 264, 777, 1622, 281, 312, 456, 570, 291, 528, 1203, 281, 574, 1481, 51364], "temperature": 0.0, "avg_logprob": -0.09766876797716156, "compression_ratio": 1.859375, "no_speech_prob": 0.005729378666728735}, {"id": 1150, "seek": 551996, "start": 5540.28, "end": 5541.96, "text": " but otherwise", "tokens": [51380, 457, 5911, 51464], "temperature": 0.0, "avg_logprob": -0.09766876797716156, "compression_ratio": 1.859375, "no_speech_prob": 0.005729378666728735}, {"id": 1151, "seek": 551996, "start": 5541.96, "end": 5543.72, "text": " You don't want the new line to be there. So", "tokens": [51464, 509, 500, 380, 528, 264, 777, 1622, 281, 312, 456, 13, 407, 51552], "temperature": 0.0, "avg_logprob": -0.09766876797716156, "compression_ratio": 1.859375, "no_speech_prob": 0.005729378666728735}, {"id": 1152, "seek": 554372, "start": 5543.72, "end": 5551.88, "text": " Um, and you can import part of conch to to do this check for you if it uh, if that makes it easier", "tokens": [50364, 3301, 11, 293, 291, 393, 974, 644, 295, 416, 339, 281, 281, 360, 341, 1520, 337, 291, 498, 309, 2232, 11, 498, 300, 1669, 309, 3571, 50772], "temperature": 0.0, "avg_logprob": -0.2250528217833719, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.000273693585768342}, {"id": 1153, "seek": 554372, "start": 5556.360000000001, "end": 5557.72, "text": " And", "tokens": [50996, 400, 51064], "temperature": 0.0, "avg_logprob": -0.2250528217833719, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.000273693585768342}, {"id": 1154, "seek": 554372, "start": 5557.72, "end": 5564.52, "text": " Here's just our kiwi and this will have output that looks sort of like this. So if we just run the kiwi command", "tokens": [51064, 1692, 311, 445, 527, 6315, 6253, 293, 341, 486, 362, 5598, 300, 1542, 1333, 295, 411, 341, 13, 407, 498, 321, 445, 1190, 264, 6315, 6253, 5622, 51404], "temperature": 0.0, "avg_logprob": -0.2250528217833719, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.000273693585768342}, {"id": 1155, "seek": 554372, "start": 5566.92, "end": 5568.52, "text": " Yep", "tokens": [51524, 7010, 51604], "temperature": 0.0, "avg_logprob": -0.2250528217833719, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.000273693585768342}, {"id": 1156, "seek": 554372, "start": 5568.52, "end": 5571.64, "text": " And then end equals end, but you didn't close the code. Yeah", "tokens": [51604, 400, 550, 917, 6915, 917, 11, 457, 291, 994, 380, 1998, 264, 3089, 13, 865, 51760], "temperature": 0.0, "avg_logprob": -0.2250528217833719, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.000273693585768342}, {"id": 1157, "seek": 557372, "start": 5574.68, "end": 5576.68, "text": " And then", "tokens": [50412, 400, 550, 50512], "temperature": 0.0, "avg_logprob": -0.13138101100921631, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.00011590537178562954}, {"id": 1158, "seek": 557372, "start": 5577.320000000001, "end": 5581.96, "text": " Yeah, so if you just run the kiwi command on its own in an uncaptured way", "tokens": [50544, 865, 11, 370, 498, 291, 445, 1190, 264, 6315, 6253, 5622, 322, 1080, 1065, 294, 364, 517, 496, 662, 3831, 636, 50776], "temperature": 0.0, "avg_logprob": -0.13138101100921631, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.00011590537178562954}, {"id": 1159, "seek": 557372, "start": 5582.6, "end": 5585.96, "text": " It will produce the new line in the extra text and if you", "tokens": [50808, 467, 486, 5258, 264, 777, 1622, 294, 264, 2857, 2487, 293, 498, 291, 50976], "temperature": 0.0, "avg_logprob": -0.13138101100921631, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.00011590537178562954}, {"id": 1160, "seek": 557372, "start": 5586.84, "end": 5590.4400000000005, "text": " Capture the kiwi command then it doesn't actually have the new line in it", "tokens": [51020, 9480, 540, 264, 6315, 6253, 5622, 550, 309, 1177, 380, 767, 362, 264, 777, 1622, 294, 309, 51200], "temperature": 0.0, "avg_logprob": -0.13138101100921631, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.00011590537178562954}, {"id": 1161, "seek": 557372, "start": 5592.52, "end": 5594.360000000001, "text": " Okay", "tokens": [51304, 1033, 51396], "temperature": 0.0, "avg_logprob": -0.13138101100921631, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.00011590537178562954}, {"id": 1162, "seek": 557372, "start": 5594.360000000001, "end": 5597.320000000001, "text": " Any any questions on this or use cases?", "tokens": [51396, 2639, 604, 1651, 322, 341, 420, 764, 3331, 30, 51544], "temperature": 0.0, "avg_logprob": -0.13138101100921631, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.00011590537178562954}, {"id": 1163, "seek": 557372, "start": 5600.52, "end": 5602.52, "text": " Yeah", "tokens": [51704, 865, 51804], "temperature": 0.0, "avg_logprob": -0.13138101100921631, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.00011590537178562954}, {"id": 1164, "seek": 560252, "start": 5602.6, "end": 5604.76, "text": " All right, so let's uh, let's move on", "tokens": [50368, 1057, 558, 11, 370, 718, 311, 2232, 11, 718, 311, 1286, 322, 50476], "temperature": 0.0, "avg_logprob": -0.1868449888731304, "compression_ratio": 1.5149700598802396, "no_speech_prob": 0.0004371969262138009}, {"id": 1165, "seek": 560252, "start": 5605.56, "end": 5609.96, "text": " um, so the last form of these functions is uh", "tokens": [50516, 1105, 11, 370, 264, 1036, 1254, 295, 613, 6828, 307, 2232, 50736], "temperature": 0.0, "avg_logprob": -0.1868449888731304, "compression_ratio": 1.5149700598802396, "no_speech_prob": 0.0004371969262138009}, {"id": 1166, "seek": 560252, "start": 5610.84, "end": 5612.84, "text": " You can get back", "tokens": [50780, 509, 393, 483, 646, 50880], "temperature": 0.0, "avg_logprob": -0.1868449888731304, "compression_ratio": 1.5149700598802396, "no_speech_prob": 0.0004371969262138009}, {"id": 1167, "seek": 560252, "start": 5613.4800000000005, "end": 5614.76, "text": " the", "tokens": [50912, 264, 50976], "temperature": 0.0, "avg_logprob": -0.1868449888731304, "compression_ratio": 1.5149700598802396, "no_speech_prob": 0.0004371969262138009}, {"id": 1168, "seek": 560252, "start": 5614.76, "end": 5618.6, "text": " stack frame of the call site of the alias", "tokens": [50976, 8630, 3920, 295, 264, 818, 3621, 295, 264, 419, 4609, 51168], "temperature": 0.0, "avg_logprob": -0.1868449888731304, "compression_ratio": 1.5149700598802396, "no_speech_prob": 0.0004371969262138009}, {"id": 1169, "seek": 560252, "start": 5619.160000000001, "end": 5621.160000000001, "text": " So if you need to know", "tokens": [51196, 407, 498, 291, 643, 281, 458, 51296], "temperature": 0.0, "avg_logprob": -0.1868449888731304, "compression_ratio": 1.5149700598802396, "no_speech_prob": 0.0004371969262138009}, {"id": 1170, "seek": 560252, "start": 5621.96, "end": 5624.4400000000005, "text": " the locals and global variables", "tokens": [51336, 264, 23335, 293, 4338, 9102, 51460], "temperature": 0.0, "avg_logprob": -0.1868449888731304, "compression_ratio": 1.5149700598802396, "no_speech_prob": 0.0004371969262138009}, {"id": 1171, "seek": 560252, "start": 5625.320000000001, "end": 5628.280000000001, "text": " Where the sub process command was being called from", "tokens": [51504, 2305, 264, 1422, 1399, 5622, 390, 885, 1219, 490, 51652], "temperature": 0.0, "avg_logprob": -0.1868449888731304, "compression_ratio": 1.5149700598802396, "no_speech_prob": 0.0004371969262138009}, {"id": 1172, "seek": 562828, "start": 5628.759999999999, "end": 5633.08, "text": " You get back the the stack for that if you don't understand what this means", "tokens": [50388, 509, 483, 646, 264, 264, 8630, 337, 300, 498, 291, 500, 380, 1223, 437, 341, 1355, 50604], "temperature": 0.0, "avg_logprob": -0.12735519238880702, "compression_ratio": 1.772, "no_speech_prob": 0.0034277173690497875}, {"id": 1173, "seek": 562828, "start": 5633.5599999999995, "end": 5638.2, "text": " Like don't worry about it. You definitely don't need it, but if you do this is like a ridiculous tool", "tokens": [50628, 1743, 500, 380, 3292, 466, 309, 13, 509, 2138, 500, 380, 643, 309, 11, 457, 498, 291, 360, 341, 307, 411, 257, 11083, 2290, 50860], "temperature": 0.0, "avg_logprob": -0.12735519238880702, "compression_ratio": 1.772, "no_speech_prob": 0.0034277173690497875}, {"id": 1174, "seek": 562828, "start": 5638.679999999999, "end": 5641.32, "text": " um, so please stack responsibly", "tokens": [50884, 1105, 11, 370, 1767, 8630, 2914, 3545, 51016], "temperature": 0.0, "avg_logprob": -0.12735519238880702, "compression_ratio": 1.772, "no_speech_prob": 0.0034277173690497875}, {"id": 1175, "seek": 562828, "start": 5642.759999999999, "end": 5645.32, "text": " But uh, it it is something that's like", "tokens": [51088, 583, 2232, 11, 309, 309, 307, 746, 300, 311, 411, 51216], "temperature": 0.0, "avg_logprob": -0.12735519238880702, "compression_ratio": 1.772, "no_speech_prob": 0.0034277173690497875}, {"id": 1176, "seek": 562828, "start": 5646.12, "end": 5648.759999999999, "text": " You know, we don't need to necessarily dive into this", "tokens": [51256, 509, 458, 11, 321, 500, 380, 643, 281, 4725, 9192, 666, 341, 51388], "temperature": 0.0, "avg_logprob": -0.12735519238880702, "compression_ratio": 1.772, "no_speech_prob": 0.0034277173690497875}, {"id": 1177, "seek": 562828, "start": 5648.759999999999, "end": 5653.08, "text": " But it is occasionally useful to know what you're what the variables are", "tokens": [51388, 583, 309, 307, 16895, 4420, 281, 458, 437, 291, 434, 437, 264, 9102, 366, 51604], "temperature": 0.0, "avg_logprob": -0.12735519238880702, "compression_ratio": 1.772, "no_speech_prob": 0.0034277173690497875}, {"id": 1178, "seek": 562828, "start": 5653.719999999999, "end": 5657.16, "text": " Around where you're being where the the sub process is being called", "tokens": [51636, 17633, 689, 291, 434, 885, 689, 264, 264, 1422, 1399, 307, 885, 1219, 51808], "temperature": 0.0, "avg_logprob": -0.12735519238880702, "compression_ratio": 1.772, "no_speech_prob": 0.0034277173690497875}, {"id": 1179, "seek": 565716, "start": 5658.12, "end": 5661.4, "text": " Um and conch does that tying in for you automatically", "tokens": [50412, 3301, 293, 416, 339, 775, 300, 32405, 294, 337, 291, 6772, 50576], "temperature": 0.0, "avg_logprob": -0.15006229795258622, "compression_ratio": 1.4858490566037736, "no_speech_prob": 0.00012531582615338266}, {"id": 1180, "seek": 565716, "start": 5663.48, "end": 5665.48, "text": " Any questions on this", "tokens": [50680, 2639, 1651, 322, 341, 50780], "temperature": 0.0, "avg_logprob": -0.15006229795258622, "compression_ratio": 1.4858490566037736, "no_speech_prob": 0.00012531582615338266}, {"id": 1181, "seek": 565716, "start": 5666.76, "end": 5669.88, "text": " I know this is this one in particular is a little wacky", "tokens": [50844, 286, 458, 341, 307, 341, 472, 294, 1729, 307, 257, 707, 42138, 88, 51000], "temperature": 0.0, "avg_logprob": -0.15006229795258622, "compression_ratio": 1.4858490566037736, "no_speech_prob": 0.00012531582615338266}, {"id": 1182, "seek": 565716, "start": 5671.72, "end": 5675.4, "text": " Okay, so we've got some more exercises. Um, they're all related", "tokens": [51092, 1033, 11, 370, 321, 600, 658, 512, 544, 11900, 13, 3301, 11, 436, 434, 439, 4077, 51276], "temperature": 0.0, "avg_logprob": -0.15006229795258622, "compression_ratio": 1.4858490566037736, "no_speech_prob": 0.00012531582615338266}, {"id": 1183, "seek": 565716, "start": 5676.12, "end": 5678.12, "text": " Uh, which is nice", "tokens": [51312, 4019, 11, 597, 307, 1481, 51412], "temperature": 0.0, "avg_logprob": -0.15006229795258622, "compression_ratio": 1.4858490566037736, "no_speech_prob": 0.00012531582615338266}, {"id": 1184, "seek": 565716, "start": 5678.28, "end": 5681.5599999999995, "text": " So the first exercise is to write a callable alias", "tokens": [51420, 407, 264, 700, 5380, 307, 281, 2464, 257, 818, 712, 419, 4609, 51584], "temperature": 0.0, "avg_logprob": -0.15006229795258622, "compression_ratio": 1.4858490566037736, "no_speech_prob": 0.00012531582615338266}, {"id": 1185, "seek": 565716, "start": 5682.04, "end": 5685.5599999999995, "text": " which just pulls down the contents of frankenstein", "tokens": [51608, 597, 445, 16982, 760, 264, 15768, 295, 10455, 268, 9089, 51784], "temperature": 0.0, "avg_logprob": -0.15006229795258622, "compression_ratio": 1.4858490566037736, "no_speech_prob": 0.00012531582615338266}, {"id": 1186, "seek": 568556, "start": 5686.04, "end": 5691.64, "text": " And uh writes them out to the screen. So if you look at that link, it's basically the project Gutenberg link", "tokens": [50388, 400, 2232, 13657, 552, 484, 281, 264, 2568, 13, 407, 498, 291, 574, 412, 300, 2113, 11, 309, 311, 1936, 264, 1716, 42833, 6873, 2113, 50668], "temperature": 0.0, "avg_logprob": -0.14475637379259165, "compression_ratio": 1.7161572052401746, "no_speech_prob": 0.0017268664669245481}, {"id": 1187, "seek": 568556, "start": 5692.04, "end": 5698.120000000001, "text": " Um, and so you can just copy that and and provide an alias that prints out frankenstein to the screen", "tokens": [50688, 3301, 11, 293, 370, 291, 393, 445, 5055, 300, 293, 293, 2893, 364, 419, 4609, 300, 22305, 484, 10455, 268, 9089, 281, 264, 2568, 50992], "temperature": 0.0, "avg_logprob": -0.14475637379259165, "compression_ratio": 1.7161572052401746, "no_speech_prob": 0.0017268664669245481}, {"id": 1188, "seek": 568556, "start": 5698.6, "end": 5700.6, "text": " grabbed from the internet", "tokens": [51016, 18607, 490, 264, 4705, 51116], "temperature": 0.0, "avg_logprob": -0.14475637379259165, "compression_ratio": 1.7161572052401746, "no_speech_prob": 0.0017268664669245481}, {"id": 1189, "seek": 568556, "start": 5700.68, "end": 5703.160000000001, "text": " Or you can grab it and then print it out however you want", "tokens": [51120, 1610, 291, 393, 4444, 309, 293, 550, 4482, 309, 484, 4461, 291, 528, 51244], "temperature": 0.0, "avg_logprob": -0.14475637379259165, "compression_ratio": 1.7161572052401746, "no_speech_prob": 0.0017268664669245481}, {"id": 1190, "seek": 568556, "start": 5703.72, "end": 5705.72, "text": " um", "tokens": [51272, 1105, 51372], "temperature": 0.0, "avg_logprob": -0.14475637379259165, "compression_ratio": 1.7161572052401746, "no_speech_prob": 0.0017268664669245481}, {"id": 1191, "seek": 568556, "start": 5705.72, "end": 5711.8, "text": " The next is to write an alias that calls upper on the standard input and returns that as output", "tokens": [51372, 440, 958, 307, 281, 2464, 364, 419, 4609, 300, 5498, 6597, 322, 264, 3832, 4846, 293, 11247, 300, 382, 5598, 51676], "temperature": 0.0, "avg_logprob": -0.14475637379259165, "compression_ratio": 1.7161572052401746, "no_speech_prob": 0.0017268664669245481}, {"id": 1192, "seek": 571180, "start": 5712.2, "end": 5718.2, "text": " Uh, the next one is to write an alias that returns all of the unique", "tokens": [50384, 4019, 11, 264, 958, 472, 307, 281, 2464, 364, 419, 4609, 300, 11247, 439, 295, 264, 3845, 50684], "temperature": 0.0, "avg_logprob": -0.1529852631804231, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0005191938253119588}, {"id": 1193, "seek": 571180, "start": 5718.84, "end": 5721.56, "text": " Sorted words coming from standard in", "tokens": [50716, 318, 14813, 2283, 1348, 490, 3832, 294, 50852], "temperature": 0.0, "avg_logprob": -0.1529852631804231, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0005191938253119588}, {"id": 1194, "seek": 571180, "start": 5722.360000000001, "end": 5723.4800000000005, "text": " um", "tokens": [50892, 1105, 50948], "temperature": 0.0, "avg_logprob": -0.1529852631804231, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0005191938253119588}, {"id": 1195, "seek": 571180, "start": 5723.4800000000005, "end": 5730.52, "text": " The next one after that is to write an alias that counts the number of white space separated tokens read from standard in", "tokens": [50948, 440, 958, 472, 934, 300, 307, 281, 2464, 364, 419, 4609, 300, 14893, 264, 1230, 295, 2418, 1901, 12005, 22667, 1401, 490, 3832, 294, 51300], "temperature": 0.0, "avg_logprob": -0.1529852631804231, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0005191938253119588}, {"id": 1196, "seek": 571180, "start": 5731.16, "end": 5737.400000000001, "text": " And then finally the combine all of those into to a single command pipeline that executes", "tokens": [51332, 400, 550, 2721, 264, 10432, 439, 295, 729, 666, 281, 257, 2167, 5622, 15517, 300, 4454, 1819, 51644], "temperature": 0.0, "avg_logprob": -0.1529852631804231, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0005191938253119588}, {"id": 1197, "seek": 574180, "start": 5742.76, "end": 5747.24, "text": " And we will definitely walk around and help or you can look at the the details", "tokens": [50412, 400, 321, 486, 2138, 1792, 926, 293, 854, 420, 291, 393, 574, 412, 264, 264, 4365, 50636], "temperature": 0.0, "avg_logprob": -0.11725082397460937, "compression_ratio": 1.5063291139240507, "no_speech_prob": 0.0002570984361227602}, {"id": 1198, "seek": 574180, "start": 5748.2, "end": 5750.2, "text": " um", "tokens": [50684, 1105, 50784], "temperature": 0.0, "avg_logprob": -0.11725082397460937, "compression_ratio": 1.5063291139240507, "no_speech_prob": 0.0002570984361227602}, {"id": 1199, "seek": 574180, "start": 5750.360000000001, "end": 5754.4400000000005, "text": " Each of these is can't is basically a one liner. So don't overthink it", "tokens": [50792, 6947, 295, 613, 307, 393, 380, 307, 1936, 257, 472, 24468, 13, 407, 500, 380, 670, 21074, 309, 50996], "temperature": 0.0, "avg_logprob": -0.11725082397460937, "compression_ratio": 1.5063291139240507, "no_speech_prob": 0.0002570984361227602}, {"id": 1200, "seek": 574180, "start": 5756.360000000001, "end": 5761.56, "text": " But it's okay to overthink it if it gets the job done. I think that's fully qualified", "tokens": [51092, 583, 309, 311, 1392, 281, 670, 21074, 309, 498, 309, 2170, 264, 1691, 1096, 13, 286, 519, 300, 311, 4498, 15904, 51352], "temperature": 0.0, "avg_logprob": -0.11725082397460937, "compression_ratio": 1.5063291139240507, "no_speech_prob": 0.0002570984361227602}, {"id": 1201, "seek": 577180, "start": 5772.28, "end": 5774.28, "text": " Okay, so", "tokens": [50388, 1033, 11, 370, 50488], "temperature": 0.0, "avg_logprob": -0.19174067179361978, "compression_ratio": 1.48125, "no_speech_prob": 0.002844225149601698}, {"id": 1202, "seek": 577180, "start": 5774.28, "end": 5776.04, "text": " um", "tokens": [50488, 1105, 50576], "temperature": 0.0, "avg_logprob": -0.19174067179361978, "compression_ratio": 1.48125, "no_speech_prob": 0.002844225149601698}, {"id": 1203, "seek": 577180, "start": 5776.04, "end": 5778.04, "text": " So for the first one if you", "tokens": [50576, 407, 337, 264, 700, 472, 498, 291, 50676], "temperature": 0.0, "avg_logprob": -0.19174067179361978, "compression_ratio": 1.48125, "no_speech_prob": 0.002844225149601698}, {"id": 1204, "seek": 577180, "start": 5779.320000000001, "end": 5782.12, "text": " Uh, you don't need to use python necessarily", "tokens": [50740, 4019, 11, 291, 500, 380, 643, 281, 764, 38797, 4725, 50880], "temperature": 0.0, "avg_logprob": -0.19174067179361978, "compression_ratio": 1.48125, "no_speech_prob": 0.002844225149601698}, {"id": 1205, "seek": 577180, "start": 5782.92, "end": 5788.92, "text": " To to do this so much you can just set set an alias to frankenstein that is a", "tokens": [50920, 1407, 281, 360, 341, 370, 709, 291, 393, 445, 992, 992, 364, 419, 4609, 281, 10455, 268, 9089, 300, 307, 257, 51220], "temperature": 0.0, "avg_logprob": -0.19174067179361978, "compression_ratio": 1.48125, "no_speech_prob": 0.002844225149601698}, {"id": 1206, "seek": 577180, "start": 5790.2, "end": 5791.400000000001, "text": " lambda", "tokens": [51284, 13607, 51344], "temperature": 0.0, "avg_logprob": -0.19174067179361978, "compression_ratio": 1.48125, "no_speech_prob": 0.002844225149601698}, {"id": 1207, "seek": 577180, "start": 5791.400000000001, "end": 5797.96, "text": " That calls curl or w getter whatever on that url and that will grab", "tokens": [51344, 663, 5498, 22591, 420, 261, 483, 391, 2035, 322, 300, 4038, 75, 293, 300, 486, 4444, 51672], "temperature": 0.0, "avg_logprob": -0.19174067179361978, "compression_ratio": 1.48125, "no_speech_prob": 0.002844225149601698}, {"id": 1208, "seek": 579796, "start": 5798.76, "end": 5804.76, "text": " That url that we listed just straight away. So if you're using requests or something you you can definitely do that", "tokens": [50404, 663, 4038, 75, 300, 321, 10052, 445, 2997, 1314, 13, 407, 498, 291, 434, 1228, 12475, 420, 746, 291, 291, 393, 2138, 360, 300, 50704], "temperature": 0.0, "avg_logprob": -0.1350813384103303, "compression_ratio": 1.6244343891402715, "no_speech_prob": 0.0019567946437746286}, {"id": 1209, "seek": 579796, "start": 5804.76, "end": 5809.08, "text": " That's totally fine, but you don't need to so you can use a command here", "tokens": [50704, 663, 311, 3879, 2489, 11, 457, 291, 500, 380, 643, 281, 370, 291, 393, 764, 257, 5622, 510, 50920], "temperature": 0.0, "avg_logprob": -0.1350813384103303, "compression_ratio": 1.6244343891402715, "no_speech_prob": 0.0019567946437746286}, {"id": 1210, "seek": 579796, "start": 5809.8, "end": 5811.56, "text": " um", "tokens": [50956, 1105, 51044], "temperature": 0.0, "avg_logprob": -0.1350813384103303, "compression_ratio": 1.6244343891402715, "no_speech_prob": 0.0019567946437746286}, {"id": 1211, "seek": 579796, "start": 5811.56, "end": 5813.56, "text": " Yeah", "tokens": [51044, 865, 51144], "temperature": 0.0, "avg_logprob": -0.1350813384103303, "compression_ratio": 1.6244343891402715, "no_speech_prob": 0.0019567946437746286}, {"id": 1212, "seek": 579796, "start": 5814.12, "end": 5817.08, "text": " So if you're getting stuck on that that's that's there", "tokens": [51172, 407, 498, 291, 434, 1242, 5541, 322, 300, 300, 311, 300, 311, 456, 51320], "temperature": 0.0, "avg_logprob": -0.1350813384103303, "compression_ratio": 1.6244343891402715, "no_speech_prob": 0.0019567946437746286}, {"id": 1213, "seek": 579796, "start": 5819.8, "end": 5825.4800000000005, "text": " And then yep, I'm sorry. All right, I'll come over so or but we should uh, should we do the second one too?", "tokens": [51456, 400, 550, 18633, 11, 286, 478, 2597, 13, 1057, 558, 11, 286, 603, 808, 670, 370, 420, 457, 321, 820, 2232, 11, 820, 321, 360, 264, 1150, 472, 886, 30, 51740], "temperature": 0.0, "avg_logprob": -0.1350813384103303, "compression_ratio": 1.6244343891402715, "no_speech_prob": 0.0019567946437746286}, {"id": 1214, "seek": 582548, "start": 5826.28, "end": 5827.48, "text": " Yeah", "tokens": [50404, 865, 50464], "temperature": 0.0, "avg_logprob": -0.1121590084499783, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0006666328408755362}, {"id": 1215, "seek": 582548, "start": 5827.48, "end": 5829.48, "text": " So for the second one", "tokens": [50464, 407, 337, 264, 1150, 472, 50564], "temperature": 0.0, "avg_logprob": -0.1121590084499783, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0006666328408755362}, {"id": 1216, "seek": 582548, "start": 5829.879999999999, "end": 5831.879999999999, "text": " If you want an upper", "tokens": [50584, 759, 291, 528, 364, 6597, 50684], "temperature": 0.0, "avg_logprob": -0.1121590084499783, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0006666328408755362}, {"id": 1217, "seek": 582548, "start": 5832.36, "end": 5835.799999999999, "text": " All you have to do is take both args and standard in", "tokens": [50708, 1057, 291, 362, 281, 360, 307, 747, 1293, 3882, 82, 293, 3832, 294, 50880], "temperature": 0.0, "avg_logprob": -0.1121590084499783, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0006666328408755362}, {"id": 1218, "seek": 582548, "start": 5836.759999999999, "end": 5839.48, "text": " Just read everything from standard in", "tokens": [50928, 1449, 1401, 1203, 490, 3832, 294, 51064], "temperature": 0.0, "avg_logprob": -0.1121590084499783, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0006666328408755362}, {"id": 1219, "seek": 582548, "start": 5840.2, "end": 5843.24, "text": " And then call which is a string and then return", "tokens": [51100, 400, 550, 818, 597, 307, 257, 6798, 293, 550, 2736, 51252], "temperature": 0.0, "avg_logprob": -0.1121590084499783, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0006666328408755362}, {"id": 1220, "seek": 582548, "start": 5844.2, "end": 5848.36, "text": " The upper of that string you could also do it in this streaming version", "tokens": [51300, 440, 6597, 295, 300, 6798, 291, 727, 611, 360, 309, 294, 341, 11791, 3037, 51508], "temperature": 0.0, "avg_logprob": -0.1121590084499783, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0006666328408755362}, {"id": 1221, "seek": 582548, "start": 5848.679999999999, "end": 5853.32, "text": " Where you have lines that you're reading from and then writing them back out to standard out", "tokens": [51524, 2305, 291, 362, 3876, 300, 291, 434, 3760, 490, 293, 550, 3579, 552, 646, 484, 281, 3832, 484, 51756], "temperature": 0.0, "avg_logprob": -0.1121590084499783, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.0006666328408755362}, {"id": 1222, "seek": 585332, "start": 5853.48, "end": 5855.98, "text": " It's a little more complicated. You don't really need to do that", "tokens": [50372, 467, 311, 257, 707, 544, 6179, 13, 509, 500, 380, 534, 643, 281, 360, 300, 50497], "temperature": 0.0, "avg_logprob": -0.1938140892688139, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.0005526865716092288}, {"id": 1223, "seek": 585332, "start": 5862.28, "end": 5864.28, "text": " So for the third example", "tokens": [50812, 407, 337, 264, 2636, 1365, 50912], "temperature": 0.0, "avg_logprob": -0.1938140892688139, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.0005526865716092288}, {"id": 1224, "seek": 585332, "start": 5864.92, "end": 5868.12, "text": " um, or the third exercise here, we do something", "tokens": [50944, 1105, 11, 420, 264, 2636, 5380, 510, 11, 321, 360, 746, 51104], "temperature": 0.0, "avg_logprob": -0.1938140892688139, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.0005526865716092288}, {"id": 1225, "seek": 585332, "start": 5868.92, "end": 5870.92, "text": " pretty similar where", "tokens": [51144, 1238, 2531, 689, 51244], "temperature": 0.0, "avg_logprob": -0.1938140892688139, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.0005526865716092288}, {"id": 1226, "seek": 585332, "start": 5871.08, "end": 5874.12, "text": " um to the other where we want to count of words", "tokens": [51252, 1105, 281, 264, 661, 689, 321, 528, 281, 1207, 295, 2283, 51404], "temperature": 0.0, "avg_logprob": -0.1938140892688139, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.0005526865716092288}, {"id": 1227, "seek": 585332, "start": 5874.679999999999, "end": 5877.719999999999, "text": " um, so the way that you do this is you read from standard in", "tokens": [51432, 1105, 11, 370, 264, 636, 300, 291, 360, 341, 307, 291, 1401, 490, 3832, 294, 51584], "temperature": 0.0, "avg_logprob": -0.1938140892688139, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.0005526865716092288}, {"id": 1228, "seek": 585332, "start": 5878.44, "end": 5880.44, "text": " um, and then you", "tokens": [51620, 1105, 11, 293, 550, 291, 51720], "temperature": 0.0, "avg_logprob": -0.1938140892688139, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.0005526865716092288}, {"id": 1229, "seek": 588044, "start": 5880.44, "end": 5884.599999999999, "text": " Split those split based on the white space, right? We're all pretty familiar with that", "tokens": [50364, 45111, 729, 7472, 2361, 322, 264, 2418, 1901, 11, 558, 30, 492, 434, 439, 1238, 4963, 365, 300, 50572], "temperature": 0.0, "avg_logprob": -0.116990264402617, "compression_ratio": 1.8898678414096917, "no_speech_prob": 0.0023586738388985395}, {"id": 1230, "seek": 588044, "start": 5885.08, "end": 5889.5599999999995, "text": " Um, if you want the unique, right? So that'll give you this big word list in order", "tokens": [50596, 3301, 11, 498, 291, 528, 264, 3845, 11, 558, 30, 407, 300, 603, 976, 291, 341, 955, 1349, 1329, 294, 1668, 50820], "temperature": 0.0, "avg_logprob": -0.116990264402617, "compression_ratio": 1.8898678414096917, "no_speech_prob": 0.0023586738388985395}, {"id": 1231, "seek": 588044, "start": 5889.879999999999, "end": 5893.96, "text": " If you want to unique that you call set around it to get the unique words", "tokens": [50836, 759, 291, 528, 281, 3845, 300, 291, 818, 992, 926, 309, 281, 483, 264, 3845, 2283, 51040], "temperature": 0.0, "avg_logprob": -0.116990264402617, "compression_ratio": 1.8898678414096917, "no_speech_prob": 0.0023586738388985395}, {"id": 1232, "seek": 588044, "start": 5894.599999999999, "end": 5899.719999999999, "text": " And then if you want them sorted you call sort it around that and then you join based on new lines", "tokens": [51072, 400, 550, 498, 291, 528, 552, 25462, 291, 818, 1333, 309, 926, 300, 293, 550, 291, 3917, 2361, 322, 777, 3876, 51328], "temperature": 0.0, "avg_logprob": -0.116990264402617, "compression_ratio": 1.8898678414096917, "no_speech_prob": 0.0023586738388985395}, {"id": 1233, "seek": 588044, "start": 5900.44, "end": 5905.32, "text": " So that you output a string again, and that's the uh, that's the thing that you return", "tokens": [51364, 407, 300, 291, 5598, 257, 6798, 797, 11, 293, 300, 311, 264, 2232, 11, 300, 311, 264, 551, 300, 291, 2736, 51608], "temperature": 0.0, "avg_logprob": -0.116990264402617, "compression_ratio": 1.8898678414096917, "no_speech_prob": 0.0023586738388985395}, {"id": 1234, "seek": 590532, "start": 5906.04, "end": 5911.16, "text": " It's kind of a lot of parentheses, but it gets the job done in one line", "tokens": [50400, 467, 311, 733, 295, 257, 688, 295, 34153, 11, 457, 309, 2170, 264, 1691, 1096, 294, 472, 1622, 50656], "temperature": 0.0, "avg_logprob": -0.16417650429599256, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.0049042426981031895}, {"id": 1235, "seek": 590532, "start": 5911.24, "end": 5914.84, "text": " You could do it in more lines if you wanted to clean it up like we did in some of the other examples", "tokens": [50660, 509, 727, 360, 309, 294, 544, 3876, 498, 291, 1415, 281, 2541, 309, 493, 411, 321, 630, 294, 512, 295, 264, 661, 5110, 50840], "temperature": 0.0, "avg_logprob": -0.16417650429599256, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.0049042426981031895}, {"id": 1236, "seek": 590532, "start": 5914.92, "end": 5916.92, "text": " But there's no need here", "tokens": [50844, 583, 456, 311, 572, 643, 510, 50944], "temperature": 0.0, "avg_logprob": -0.16417650429599256, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.0049042426981031895}, {"id": 1237, "seek": 590532, "start": 5926.2, "end": 5929.24, "text": " Do we have the we don't have these loaded in or you do okay. Oh, yeah", "tokens": [51408, 1144, 321, 362, 264, 321, 500, 380, 362, 613, 13210, 294, 420, 291, 360, 1392, 13, 876, 11, 1338, 51560], "temperature": 0.0, "avg_logprob": -0.16417650429599256, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.0049042426981031895}, {"id": 1238, "seek": 590532, "start": 5931.0, "end": 5933.0, "text": " Oh, nope. Okay", "tokens": [51648, 876, 11, 23444, 13, 1033, 51748], "temperature": 0.0, "avg_logprob": -0.16417650429599256, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.0049042426981031895}, {"id": 1239, "seek": 593300, "start": 5933.8, "end": 5935.8, "text": " That's probably in that. Yeah", "tokens": [50404, 663, 311, 1391, 294, 300, 13, 865, 50504], "temperature": 0.0, "avg_logprob": -0.23904969557276312, "compression_ratio": 1.3597122302158273, "no_speech_prob": 0.0002868346346076578}, {"id": 1240, "seek": 593300, "start": 5943.4, "end": 5950.52, "text": " So for example, if you ran thus it's not perfect, right? Because this is text processing, but um", "tokens": [50884, 407, 337, 1365, 11, 498, 291, 5872, 8807, 309, 311, 406, 2176, 11, 558, 30, 1436, 341, 307, 2487, 9007, 11, 457, 1105, 51240], "temperature": 0.0, "avg_logprob": -0.23904969557276312, "compression_ratio": 1.3597122302158273, "no_speech_prob": 0.0002868346346076578}, {"id": 1241, "seek": 593300, "start": 5952.04, "end": 5954.04, "text": " There it is", "tokens": [51316, 821, 309, 307, 51416], "temperature": 0.0, "avg_logprob": -0.23904969557276312, "compression_ratio": 1.3597122302158273, "no_speech_prob": 0.0002868346346076578}, {"id": 1242, "seek": 593300, "start": 5954.68, "end": 5957.56, "text": " Um, then for the fourth example or fourth exercise", "tokens": [51448, 3301, 11, 550, 337, 264, 6409, 1365, 420, 6409, 5380, 51592], "temperature": 0.0, "avg_logprob": -0.23904969557276312, "compression_ratio": 1.3597122302158273, "no_speech_prob": 0.0002868346346076578}, {"id": 1243, "seek": 595756, "start": 5958.280000000001, "end": 5963.240000000001, "text": " If you wanted to count the length of that thing coming in you'd have to basically do the same thing, right?", "tokens": [50400, 759, 291, 1415, 281, 1207, 264, 4641, 295, 300, 551, 1348, 294, 291, 1116, 362, 281, 1936, 360, 264, 912, 551, 11, 558, 30, 50648], "temperature": 0.0, "avg_logprob": -0.10947205679757255, "compression_ratio": 1.759656652360515, "no_speech_prob": 0.006901470944285393}, {"id": 1244, "seek": 595756, "start": 5963.4800000000005, "end": 5967.8, "text": " So here you'd you'd read it in you'd split based on white space again", "tokens": [50660, 407, 510, 291, 1116, 291, 1116, 1401, 309, 294, 291, 1116, 7472, 2361, 322, 2418, 1901, 797, 50876], "temperature": 0.0, "avg_logprob": -0.10947205679757255, "compression_ratio": 1.759656652360515, "no_speech_prob": 0.006901470944285393}, {"id": 1245, "seek": 595756, "start": 5968.68, "end": 5973.400000000001, "text": " And then instead of calling set or something else you call length", "tokens": [50920, 400, 550, 2602, 295, 5141, 992, 420, 746, 1646, 291, 818, 4641, 51156], "temperature": 0.0, "avg_logprob": -0.10947205679757255, "compression_ratio": 1.759656652360515, "no_speech_prob": 0.006901470944285393}, {"id": 1246, "seek": 595756, "start": 5973.96, "end": 5978.6, "text": " Uh, which returns an integer you don't want that integer to be the return code", "tokens": [51184, 4019, 11, 597, 11247, 364, 24922, 291, 500, 380, 528, 300, 24922, 281, 312, 264, 2736, 3089, 51416], "temperature": 0.0, "avg_logprob": -0.10947205679757255, "compression_ratio": 1.759656652360515, "no_speech_prob": 0.006901470944285393}, {"id": 1247, "seek": 595756, "start": 5978.68, "end": 5981.88, "text": " So you have to convert it to a string add a new line", "tokens": [51420, 407, 291, 362, 281, 7620, 309, 281, 257, 6798, 909, 257, 777, 1622, 51580], "temperature": 0.0, "avg_logprob": -0.10947205679757255, "compression_ratio": 1.759656652360515, "no_speech_prob": 0.006901470944285393}, {"id": 1248, "seek": 595756, "start": 5982.6, "end": 5985.88, "text": " And uh, and then you go from there", "tokens": [51616, 400, 2232, 11, 293, 550, 291, 352, 490, 456, 51780], "temperature": 0.0, "avg_logprob": -0.10947205679757255, "compression_ratio": 1.759656652360515, "no_speech_prob": 0.006901470944285393}, {"id": 1249, "seek": 598756, "start": 5988.52, "end": 5992.68, "text": " So that's how you do or you can do wc dot dash out because", "tokens": [50412, 407, 300, 311, 577, 291, 360, 420, 291, 393, 360, 261, 66, 5893, 8240, 484, 570, 50620], "temperature": 0.0, "avg_logprob": -0.16657608205621893, "compression_ratio": 1.6, "no_speech_prob": 0.00024918417329899967}, {"id": 1250, "seek": 598756, "start": 5993.96, "end": 5995.96, "text": " reasons", "tokens": [50684, 4112, 50784], "temperature": 0.0, "avg_logprob": -0.16657608205621893, "compression_ratio": 1.6, "no_speech_prob": 0.00024918417329899967}, {"id": 1251, "seek": 598756, "start": 5996.68, "end": 5999.160000000001, "text": " You could also do that that'd be a better example here", "tokens": [50820, 509, 727, 611, 360, 300, 300, 1116, 312, 257, 1101, 1365, 510, 50944], "temperature": 0.0, "avg_logprob": -0.16657608205621893, "compression_ratio": 1.6, "no_speech_prob": 0.00024918417329899967}, {"id": 1252, "seek": 598756, "start": 6001.4800000000005, "end": 6003.72, "text": " You could do that in the alias. Yeah, you could run", "tokens": [51060, 509, 727, 360, 300, 294, 264, 419, 4609, 13, 865, 11, 291, 727, 1190, 51172], "temperature": 0.0, "avg_logprob": -0.16657608205621893, "compression_ratio": 1.6, "no_speech_prob": 0.00024918417329899967}, {"id": 1253, "seek": 598756, "start": 6012.84, "end": 6015.64, "text": " Yeah, that's the simplest form of the alias really", "tokens": [51628, 865, 11, 300, 311, 264, 22811, 1254, 295, 264, 419, 4609, 534, 51768], "temperature": 0.0, "avg_logprob": -0.16657608205621893, "compression_ratio": 1.6, "no_speech_prob": 0.00024918417329899967}, {"id": 1254, "seek": 601756, "start": 6017.8, "end": 6019.8, "text": " And", "tokens": [50376, 400, 50476], "temperature": 0.0, "avg_logprob": -0.26006899939643013, "compression_ratio": 1.1573033707865168, "no_speech_prob": 0.0017267015064135194}, {"id": 1255, "seek": 601756, "start": 6020.280000000001, "end": 6022.92, "text": " Then pull down frankenstein", "tokens": [50500, 1396, 2235, 760, 10455, 268, 9089, 50632], "temperature": 0.0, "avg_logprob": -0.26006899939643013, "compression_ratio": 1.1573033707865168, "no_speech_prob": 0.0017267015064135194}, {"id": 1256, "seek": 601756, "start": 6026.120000000001, "end": 6028.120000000001, "text": " Oh, I think we just did", "tokens": [50792, 876, 11, 286, 519, 321, 445, 630, 50892], "temperature": 0.0, "avg_logprob": -0.26006899939643013, "compression_ratio": 1.1573033707865168, "no_speech_prob": 0.0017267015064135194}, {"id": 1257, "seek": 601756, "start": 6029.96, "end": 6031.96, "text": " We really love this frankenstein", "tokens": [50984, 492, 534, 959, 341, 10455, 268, 9089, 51084], "temperature": 0.0, "avg_logprob": -0.26006899939643013, "compression_ratio": 1.1573033707865168, "no_speech_prob": 0.0017267015064135194}, {"id": 1258, "seek": 601756, "start": 6038.92, "end": 6040.92, "text": " How did you do", "tokens": [51432, 1012, 630, 291, 360, 51532], "temperature": 0.0, "avg_logprob": -0.26006899939643013, "compression_ratio": 1.1573033707865168, "no_speech_prob": 0.0017267015064135194}, {"id": 1259, "seek": 604756, "start": 6048.120000000001, "end": 6050.120000000001, "text": " Maybe", "tokens": [50392, 2704, 50492], "temperature": 0.0, "avg_logprob": -0.236014190985232, "compression_ratio": 1.2033898305084745, "no_speech_prob": 0.0027562063187360764}, {"id": 1260, "seek": 604756, "start": 6057.0, "end": 6059.0, "text": " Thank you mic mccarty", "tokens": [50836, 1044, 291, 3123, 275, 1914, 446, 88, 50936], "temperature": 0.0, "avg_logprob": -0.236014190985232, "compression_ratio": 1.2033898305084745, "no_speech_prob": 0.0027562063187360764}, {"id": 1261, "seek": 604756, "start": 6061.400000000001, "end": 6070.76, "text": " All right, um, let's do it though. Yeah, do it the right way. Um, what was it upper? I'll let you do this and then", "tokens": [51056, 1057, 558, 11, 1105, 11, 718, 311, 360, 309, 1673, 13, 865, 11, 360, 309, 264, 558, 636, 13, 3301, 11, 437, 390, 309, 6597, 30, 286, 603, 718, 291, 360, 341, 293, 550, 51524], "temperature": 0.0, "avg_logprob": -0.236014190985232, "compression_ratio": 1.2033898305084745, "no_speech_prob": 0.0027562063187360764}, {"id": 1262, "seek": 607756, "start": 6078.52, "end": 6080.52, "text": " We'll uh, we'll debug that later", "tokens": [50412, 492, 603, 2232, 11, 321, 603, 24083, 300, 1780, 50512], "temperature": 0.0, "avg_logprob": -0.20401066296721157, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.00039201771141961217}, {"id": 1263, "seek": 607756, "start": 6082.52, "end": 6086.6, "text": " Oops, sorry you want the yeah, it's just words and then count", "tokens": [50612, 21726, 11, 2597, 291, 528, 264, 1338, 11, 309, 311, 445, 2283, 293, 550, 1207, 50816], "temperature": 0.0, "avg_logprob": -0.20401066296721157, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.00039201771141961217}, {"id": 1264, "seek": 607756, "start": 6091.96, "end": 6095.4800000000005, "text": " The real count and then the point here is that you can", "tokens": [51084, 440, 957, 1207, 293, 550, 264, 935, 510, 307, 300, 291, 393, 51260], "temperature": 0.0, "avg_logprob": -0.20401066296721157, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.00039201771141961217}, {"id": 1265, "seek": 607756, "start": 6096.360000000001, "end": 6101.160000000001, "text": " Merge all of these together in a single command pipeline, uh that executes so", "tokens": [51304, 6124, 432, 439, 295, 613, 1214, 294, 257, 2167, 5622, 15517, 11, 2232, 300, 4454, 1819, 370, 51544], "temperature": 0.0, "avg_logprob": -0.20401066296721157, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.00039201771141961217}, {"id": 1266, "seek": 607756, "start": 6103.88, "end": 6106.360000000001, "text": " Okay, any uh, any questions on this", "tokens": [51680, 1033, 11, 604, 2232, 11, 604, 1651, 322, 341, 51804], "temperature": 0.0, "avg_logprob": -0.20401066296721157, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.00039201771141961217}, {"id": 1267, "seek": 610756, "start": 6108.52, "end": 6112.04, "text": " All right, so that's uh", "tokens": [50412, 1057, 558, 11, 370, 300, 311, 2232, 50588], "temperature": 0.0, "avg_logprob": -0.21797676086425782, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0003199456841684878}, {"id": 1268, "seek": 610756, "start": 6113.080000000001, "end": 6120.200000000001, "text": " Let's if there's no questions on how this works or what it uses we'll move on not a break because we're doing breaks differently", "tokens": [50640, 961, 311, 498, 456, 311, 572, 1651, 322, 577, 341, 1985, 420, 437, 309, 4960, 321, 603, 1286, 322, 406, 257, 1821, 570, 321, 434, 884, 9857, 7614, 50996], "temperature": 0.0, "avg_logprob": -0.21797676086425782, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0003199456841684878}, {"id": 1269, "seek": 610756, "start": 6120.84, "end": 6126.04, "text": " Um, and our next topic will be events which uh, so switch with y'all", "tokens": [51028, 3301, 11, 293, 527, 958, 4829, 486, 312, 3931, 597, 2232, 11, 370, 3679, 365, 288, 6, 336, 51288], "temperature": 0.0, "avg_logprob": -0.21797676086425782, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0003199456841684878}, {"id": 1270, "seek": 610756, "start": 6131.88, "end": 6133.88, "text": " Okay, so um", "tokens": [51580, 1033, 11, 370, 1105, 51680], "temperature": 0.0, "avg_logprob": -0.21797676086425782, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0003199456841684878}, {"id": 1271, "seek": 610756, "start": 6134.4400000000005, "end": 6137.4800000000005, "text": " Uh an event is um, it's hard to actually describe", "tokens": [51708, 4019, 364, 2280, 307, 1105, 11, 309, 311, 1152, 281, 767, 6786, 51860], "temperature": 0.0, "avg_logprob": -0.21797676086425782, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0003199456841684878}, {"id": 1272, "seek": 613756, "start": 6137.56, "end": 6144.84, "text": " An event I discovered this um, but um, it's it's uh, it's a trigger that you can fire and then um, if", "tokens": [50364, 1107, 2280, 286, 6941, 341, 1105, 11, 457, 1105, 11, 309, 311, 309, 311, 2232, 11, 309, 311, 257, 7875, 300, 291, 393, 2610, 293, 550, 1105, 11, 498, 50728], "temperature": 0.0, "avg_logprob": -0.17290845363260174, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.0011507648741826415}, {"id": 1273, "seek": 613756, "start": 6145.72, "end": 6149.160000000001, "text": " You have something that's set up to listen to that firing which we would call a handler", "tokens": [50772, 509, 362, 746, 300, 311, 992, 493, 281, 2140, 281, 300, 16045, 597, 321, 576, 818, 257, 41967, 50944], "temperature": 0.0, "avg_logprob": -0.17290845363260174, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.0011507648741826415}, {"id": 1274, "seek": 613756, "start": 6149.240000000001, "end": 6151.240000000001, "text": " It will then execute that thing", "tokens": [50948, 467, 486, 550, 14483, 300, 551, 51048], "temperature": 0.0, "avg_logprob": -0.17290845363260174, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.0011507648741826415}, {"id": 1275, "seek": 613756, "start": 6151.240000000001, "end": 6153.240000000001, "text": " That is a horrible", "tokens": [51048, 663, 307, 257, 9263, 51148], "temperature": 0.0, "avg_logprob": -0.17290845363260174, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.0011507648741826415}, {"id": 1276, "seek": 613756, "start": 6153.240000000001, "end": 6155.080000000001, "text": " vague description", "tokens": [51148, 24247, 3855, 51240], "temperature": 0.0, "avg_logprob": -0.17290845363260174, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.0011507648741826415}, {"id": 1277, "seek": 613756, "start": 6155.080000000001, "end": 6158.280000000001, "text": " But is uh, I think we'll be a little clearer when we actually go through an example", "tokens": [51240, 583, 307, 2232, 11, 286, 519, 321, 603, 312, 257, 707, 26131, 562, 321, 767, 352, 807, 364, 1365, 51400], "temperature": 0.0, "avg_logprob": -0.17290845363260174, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.0011507648741826415}, {"id": 1278, "seek": 613756, "start": 6158.52, "end": 6161.72, "text": " I'll just say the events a system in cons was written by one of our", "tokens": [51412, 286, 603, 445, 584, 264, 3931, 257, 1185, 294, 1014, 390, 3720, 538, 472, 295, 527, 51572], "temperature": 0.0, "avg_logprob": -0.17290845363260174, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.0011507648741826415}, {"id": 1279, "seek": 613756, "start": 6162.200000000001, "end": 6167.080000000001, "text": " Contributors jimmy bliss and is just an incredible piece of work and I can say that because I had nothing to do with it", "tokens": [51596, 4839, 2024, 30751, 361, 332, 2226, 31522, 293, 307, 445, 364, 4651, 2522, 295, 589, 293, 286, 393, 584, 300, 570, 286, 632, 1825, 281, 360, 365, 309, 51840], "temperature": 0.0, "avg_logprob": -0.17290845363260174, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.0011507648741826415}, {"id": 1280, "seek": 616756, "start": 6167.88, "end": 6169.88, "text": " It's really incredibly powerful", "tokens": [50380, 467, 311, 534, 6252, 4005, 50480], "temperature": 0.0, "avg_logprob": -0.15393813796665357, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0004439839394763112}, {"id": 1281, "seek": 616756, "start": 6169.88, "end": 6173.400000000001, "text": " um, and lets you do a lot of really interesting things if you want to", "tokens": [50480, 1105, 11, 293, 6653, 291, 360, 257, 688, 295, 534, 1880, 721, 498, 291, 528, 281, 50656], "temperature": 0.0, "avg_logprob": -0.15393813796665357, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0004439839394763112}, {"id": 1282, "seek": 616756, "start": 6174.120000000001, "end": 6180.120000000001, "text": " Like introspect your code or have all sorts of things happen in response to all kinds of events. You can really start to um", "tokens": [50692, 1743, 560, 28713, 428, 3089, 420, 362, 439, 7527, 295, 721, 1051, 294, 4134, 281, 439, 3685, 295, 3931, 13, 509, 393, 534, 722, 281, 1105, 50992], "temperature": 0.0, "avg_logprob": -0.15393813796665357, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0004439839394763112}, {"id": 1283, "seek": 616756, "start": 6180.84, "end": 6184.360000000001, "text": " Do some very uh interesting clever and powerful things here", "tokens": [51028, 1144, 512, 588, 2232, 1880, 13494, 293, 4005, 721, 510, 51204], "temperature": 0.0, "avg_logprob": -0.15393813796665357, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0004439839394763112}, {"id": 1284, "seek": 616756, "start": 6187.64, "end": 6189.160000000001, "text": " Right, so I said this um", "tokens": [51368, 1779, 11, 370, 286, 848, 341, 1105, 51444], "temperature": 0.0, "avg_logprob": -0.15393813796665357, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0004439839394763112}, {"id": 1285, "seek": 616756, "start": 6189.160000000001, "end": 6192.120000000001, "text": " A handler is just a function that is called when an event is fired", "tokens": [51444, 316, 41967, 307, 445, 257, 2445, 300, 307, 1219, 562, 364, 2280, 307, 11777, 51592], "temperature": 0.0, "avg_logprob": -0.15393813796665357, "compression_ratio": 1.632034632034632, "no_speech_prob": 0.0004439839394763112}, {"id": 1286, "seek": 619212, "start": 6192.28, "end": 6197.64, "text": " So something says event this kind of event fires any handler that is attached to that event will then be run", "tokens": [50372, 407, 746, 1619, 2280, 341, 733, 295, 2280, 15044, 604, 41967, 300, 307, 8570, 281, 300, 2280, 486, 550, 312, 1190, 50640], "temperature": 0.0, "avg_logprob": -0.12610937802846195, "compression_ratio": 1.9298245614035088, "no_speech_prob": 0.0025098337791860104}, {"id": 1287, "seek": 619212, "start": 6197.64, "end": 6200.12, "text": " And you can have as many handlers as you want on a given event", "tokens": [50640, 400, 291, 393, 362, 382, 867, 1011, 11977, 382, 291, 528, 322, 257, 2212, 2280, 50764], "temperature": 0.0, "avg_logprob": -0.12610937802846195, "compression_ratio": 1.9298245614035088, "no_speech_prob": 0.0025098337791860104}, {"id": 1288, "seek": 619212, "start": 6200.2, "end": 6204.44, "text": " So several functions can be executed in response to something just happening somewhere", "tokens": [50768, 407, 2940, 6828, 393, 312, 17577, 294, 4134, 281, 746, 445, 2737, 4079, 50980], "temperature": 0.0, "avg_logprob": -0.12610937802846195, "compression_ratio": 1.9298245614035088, "no_speech_prob": 0.0025098337791860104}, {"id": 1289, "seek": 619212, "start": 6207.48, "end": 6213.0, "text": " Okay, so one of the events um all of these live in just the events uh, kind of built in at the base", "tokens": [51132, 1033, 11, 370, 472, 295, 264, 3931, 1105, 439, 295, 613, 1621, 294, 445, 264, 3931, 2232, 11, 733, 295, 3094, 294, 412, 264, 3096, 51408], "temperature": 0.0, "avg_logprob": -0.12610937802846195, "compression_ratio": 1.9298245614035088, "no_speech_prob": 0.0025098337791860104}, {"id": 1290, "seek": 619212, "start": 6213.0, "end": 6217.8, "text": " So you can say events um one of the common ones there's several that are built in to conch later", "tokens": [51408, 407, 291, 393, 584, 3931, 1105, 472, 295, 264, 2689, 2306, 456, 311, 2940, 300, 366, 3094, 294, 281, 416, 339, 1780, 51648], "temperature": 0.0, "avg_logprob": -0.12610937802846195, "compression_ratio": 1.9298245614035088, "no_speech_prob": 0.0025098337791860104}, {"id": 1291, "seek": 619212, "start": 6217.8, "end": 6221.8, "text": " We can look at like defining your own, but there are many that are built in the first is um on", "tokens": [51648, 492, 393, 574, 412, 411, 17827, 428, 1065, 11, 457, 456, 366, 867, 300, 366, 3094, 294, 264, 700, 307, 1105, 322, 51848], "temperature": 0.0, "avg_logprob": -0.12610937802846195, "compression_ratio": 1.9298245614035088, "no_speech_prob": 0.0025098337791860104}, {"id": 1292, "seek": 622212, "start": 6222.44, "end": 6223.96, "text": " Changed here", "tokens": [50380, 761, 10296, 510, 50456], "temperature": 0.0, "avg_logprob": -0.13051046643938338, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00032470692531205714}, {"id": 1293, "seek": 622212, "start": 6223.96, "end": 6227.16, "text": " Which fires if you can imagine whenever you change directory", "tokens": [50456, 3013, 15044, 498, 291, 393, 3811, 5699, 291, 1319, 21120, 50616], "temperature": 0.0, "avg_logprob": -0.13051046643938338, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00032470692531205714}, {"id": 1294, "seek": 622212, "start": 6230.599999999999, "end": 6232.599999999999, "text": " So this event already exists", "tokens": [50788, 407, 341, 2280, 1217, 8198, 50888], "temperature": 0.0, "avg_logprob": -0.13051046643938338, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00032470692531205714}, {"id": 1295, "seek": 622212, "start": 6232.84, "end": 6238.28, "text": " So what we want to do is just create a handler that will execute in response to that event being fired", "tokens": [50900, 407, 437, 321, 528, 281, 360, 307, 445, 1884, 257, 41967, 300, 486, 14483, 294, 4134, 281, 300, 2280, 885, 11777, 51172], "temperature": 0.0, "avg_logprob": -0.13051046643938338, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00032470692531205714}, {"id": 1296, "seek": 622212, "start": 6239.4, "end": 6244.76, "text": " So the way that you do that is with this decorator syntax. So you just say at events and the name of the event", "tokens": [51228, 407, 264, 636, 300, 291, 360, 300, 307, 365, 341, 7919, 1639, 28431, 13, 407, 291, 445, 584, 412, 3931, 293, 264, 1315, 295, 264, 2280, 51496], "temperature": 0.0, "avg_logprob": -0.13051046643938338, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00032470692531205714}, {"id": 1297, "seek": 622212, "start": 6247.16, "end": 6249.24, "text": " And in particular this event", "tokens": [51616, 400, 294, 1729, 341, 2280, 51720], "temperature": 0.0, "avg_logprob": -0.13051046643938338, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00032470692531205714}, {"id": 1298, "seek": 624924, "start": 6250.2, "end": 6252.2, "text": " Hands off two", "tokens": [50412, 21369, 766, 732, 50512], "temperature": 0.0, "avg_logprob": -0.1368086162366365, "compression_ratio": 1.6345381526104417, "no_speech_prob": 0.000527265714481473}, {"id": 1299, "seek": 624924, "start": 6252.28, "end": 6256.5199999999995, "text": " Variables to whatever function is being called as handler. We'll show you how to sort of inspect that later", "tokens": [50516, 32511, 2965, 281, 2035, 2445, 307, 885, 1219, 382, 41967, 13, 492, 603, 855, 291, 577, 281, 1333, 295, 15018, 300, 1780, 50728], "temperature": 0.0, "avg_logprob": -0.1368086162366365, "compression_ratio": 1.6345381526104417, "no_speech_prob": 0.000527265714481473}, {"id": 1300, "seek": 624924, "start": 6257.16, "end": 6259.16, "text": " They're called older and new dur", "tokens": [50760, 814, 434, 1219, 4906, 293, 777, 4861, 50860], "temperature": 0.0, "avg_logprob": -0.1368086162366365, "compression_ratio": 1.6345381526104417, "no_speech_prob": 0.000527265714481473}, {"id": 1301, "seek": 624924, "start": 6259.719999999999, "end": 6263.8, "text": " Or old deer and new deer depending on your preferred pronunciation of words that aren't words", "tokens": [50888, 1610, 1331, 17120, 293, 777, 17120, 5413, 322, 428, 16494, 23338, 295, 2283, 300, 3212, 380, 2283, 51092], "temperature": 0.0, "avg_logprob": -0.1368086162366365, "compression_ratio": 1.6345381526104417, "no_speech_prob": 0.000527265714481473}, {"id": 1302, "seek": 624924, "start": 6265.24, "end": 6268.599999999999, "text": " And then in this case just for a kind of a simple example", "tokens": [51164, 400, 550, 294, 341, 1389, 445, 337, 257, 733, 295, 257, 2199, 1365, 51332], "temperature": 0.0, "avg_logprob": -0.1368086162366365, "compression_ratio": 1.6345381526104417, "no_speech_prob": 0.000527265714481473}, {"id": 1303, "seek": 624924, "start": 6268.679999999999, "end": 6272.54, "text": " I'm just printing out a message that says hey, we just changed from this directory to that directory", "tokens": [51336, 286, 478, 445, 14699, 484, 257, 3636, 300, 1619, 4177, 11, 321, 445, 3105, 490, 341, 21120, 281, 300, 21120, 51529], "temperature": 0.0, "avg_logprob": -0.1368086162366365, "compression_ratio": 1.6345381526104417, "no_speech_prob": 0.000527265714481473}, {"id": 1304, "seek": 627924, "start": 6279.24, "end": 6281.24, "text": " Um", "tokens": [50364, 3301, 50464], "temperature": 0.0, "avg_logprob": -0.245296767779759, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0007672462379559875}, {"id": 1305, "seek": 627924, "start": 6291.719999999999, "end": 6294.679999999999, "text": " So now you can just move around in your terminal like do a cd dot dot", "tokens": [50988, 407, 586, 291, 393, 445, 1286, 926, 294, 428, 14709, 411, 360, 257, 269, 67, 5893, 5893, 51136], "temperature": 0.0, "avg_logprob": -0.245296767779759, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0007672462379559875}, {"id": 1306, "seek": 627924, "start": 6295.4, "end": 6299.4, "text": " And it'll tell you this thing and you can go back into the like directory. We're just in", "tokens": [51172, 400, 309, 603, 980, 291, 341, 551, 293, 291, 393, 352, 646, 666, 264, 411, 21120, 13, 492, 434, 445, 294, 51372], "temperature": 0.0, "avg_logprob": -0.245296767779759, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0007672462379559875}, {"id": 1307, "seek": 627924, "start": 6302.92, "end": 6305.4, "text": " Um, of course now, uh", "tokens": [51548, 3301, 11, 295, 1164, 586, 11, 2232, 51672], "temperature": 0.0, "avg_logprob": -0.245296767779759, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0007672462379559875}, {"id": 1308, "seek": 630540, "start": 6306.36, "end": 6311.4, "text": " Your terminal is is probably a little overly verbose and you don't want this to happen all the time. Um", "tokens": [50412, 2260, 14709, 307, 307, 1391, 257, 707, 24324, 9595, 541, 293, 291, 500, 380, 528, 341, 281, 1051, 439, 264, 565, 13, 3301, 50664], "temperature": 0.0, "avg_logprob": -0.12023000302522079, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00020341837080195546}, {"id": 1309, "seek": 630540, "start": 6312.36, "end": 6316.679999999999, "text": " So, um, you can always remove handlers too because maybe you've made a mistake", "tokens": [50712, 407, 11, 1105, 11, 291, 393, 1009, 4159, 1011, 11977, 886, 570, 1310, 291, 600, 1027, 257, 6146, 50928], "temperature": 0.0, "avg_logprob": -0.12023000302522079, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00020341837080195546}, {"id": 1310, "seek": 630540, "start": 6316.759999999999, "end": 6320.28, "text": " And it's saying way more than you meant it to say and you would just like to have your terminal back", "tokens": [50932, 400, 309, 311, 1566, 636, 544, 813, 291, 4140, 309, 281, 584, 293, 291, 576, 445, 411, 281, 362, 428, 14709, 646, 51108], "temperature": 0.0, "avg_logprob": -0.12023000302522079, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00020341837080195546}, {"id": 1311, "seek": 630540, "start": 6320.759999999999, "end": 6325.719999999999, "text": " Um, so the simplest way is just there's a set of handlers on each event and you can just pop them off", "tokens": [51132, 3301, 11, 370, 264, 22811, 636, 307, 445, 456, 311, 257, 992, 295, 1011, 11977, 322, 1184, 2280, 293, 291, 393, 445, 1665, 552, 766, 51380], "temperature": 0.0, "avg_logprob": -0.12023000302522079, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00020341837080195546}, {"id": 1312, "seek": 630540, "start": 6326.2, "end": 6328.2, "text": " So in this case events on change deer", "tokens": [51404, 407, 294, 341, 1389, 3931, 322, 1319, 17120, 51504], "temperature": 0.0, "avg_logprob": -0.12023000302522079, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00020341837080195546}, {"id": 1313, "seek": 630540, "start": 6328.839999999999, "end": 6329.799999999999, "text": " um", "tokens": [51536, 1105, 51584], "temperature": 0.0, "avg_logprob": -0.12023000302522079, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00020341837080195546}, {"id": 1314, "seek": 630540, "start": 6329.799999999999, "end": 6331.799999999999, "text": " dot pop", "tokens": [51584, 5893, 1665, 51684], "temperature": 0.0, "avg_logprob": -0.12023000302522079, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00020341837080195546}, {"id": 1315, "seek": 633180, "start": 6331.8, "end": 6336.12, "text": " And then you should see the thing come up and then you can just test to make sure that your terminal has recovered by", "tokens": [50364, 400, 550, 291, 820, 536, 264, 551, 808, 493, 293, 550, 291, 393, 445, 1500, 281, 652, 988, 300, 428, 14709, 575, 19542, 538, 50580], "temperature": 0.0, "avg_logprob": -0.08515366707139342, "compression_ratio": 1.7934426229508196, "no_speech_prob": 0.0004801447212230414}, {"id": 1316, "seek": 633180, "start": 6336.28, "end": 6342.2, "text": " You know going somewhere else and confirming that in fact there is uh, no longer something being printed every time", "tokens": [50588, 509, 458, 516, 4079, 1646, 293, 42861, 300, 294, 1186, 456, 307, 2232, 11, 572, 2854, 746, 885, 13567, 633, 565, 50884], "temperature": 0.0, "avg_logprob": -0.08515366707139342, "compression_ratio": 1.7934426229508196, "no_speech_prob": 0.0004801447212230414}, {"id": 1317, "seek": 633180, "start": 6345.16, "end": 6348.4400000000005, "text": " Um, so that was just a quick example to show you sort of what an event will do", "tokens": [51032, 3301, 11, 370, 300, 390, 445, 257, 1702, 1365, 281, 855, 291, 1333, 295, 437, 364, 2280, 486, 360, 51196], "temperature": 0.0, "avg_logprob": -0.08515366707139342, "compression_ratio": 1.7934426229508196, "no_speech_prob": 0.0004801447212230414}, {"id": 1318, "seek": 633180, "start": 6348.52, "end": 6350.68, "text": " We can now we'll sort of just dive in a little deeper", "tokens": [51200, 492, 393, 586, 321, 603, 1333, 295, 445, 9192, 294, 257, 707, 7731, 51308], "temperature": 0.0, "avg_logprob": -0.08515366707139342, "compression_ratio": 1.7934426229508196, "no_speech_prob": 0.0004801447212230414}, {"id": 1319, "seek": 633180, "start": 6351.08, "end": 6355.08, "text": " Um into what's happening and like what all you can do and how you can hook into things", "tokens": [51328, 3301, 666, 437, 311, 2737, 293, 411, 437, 439, 291, 393, 360, 293, 577, 291, 393, 6328, 666, 721, 51528], "temperature": 0.0, "avg_logprob": -0.08515366707139342, "compression_ratio": 1.7934426229508196, "no_speech_prob": 0.0004801447212230414}, {"id": 1320, "seek": 633180, "start": 6355.72, "end": 6361.64, "text": " Um, so as we showed you register a handler by just using the name of the event as a decorator", "tokens": [51560, 3301, 11, 370, 382, 321, 4712, 291, 7280, 257, 41967, 538, 445, 1228, 264, 1315, 295, 264, 2280, 382, 257, 7919, 1639, 51856], "temperature": 0.0, "avg_logprob": -0.08515366707139342, "compression_ratio": 1.7934426229508196, "no_speech_prob": 0.0004801447212230414}, {"id": 1321, "seek": 636180, "start": 6362.6, "end": 6363.8, "text": " um", "tokens": [50404, 1105, 50464], "temperature": 0.0, "avg_logprob": -0.18703190161257374, "compression_ratio": 1.6582278481012658, "no_speech_prob": 0.0001375496358377859}, {"id": 1322, "seek": 636180, "start": 6363.8, "end": 6368.6, "text": " those um input arguments uh, the keyword arguments that are there are being um", "tokens": [50464, 729, 1105, 4846, 12869, 2232, 11, 264, 20428, 12869, 300, 366, 456, 366, 885, 1105, 50704], "temperature": 0.0, "avg_logprob": -0.18703190161257374, "compression_ratio": 1.6582278481012658, "no_speech_prob": 0.0001375496358377859}, {"id": 1323, "seek": 636180, "start": 6369.4800000000005, "end": 6371.4800000000005, "text": " supplied by the event itself", "tokens": [50748, 27625, 538, 264, 2280, 2564, 50848], "temperature": 0.0, "avg_logprob": -0.18703190161257374, "compression_ratio": 1.6582278481012658, "no_speech_prob": 0.0001375496358377859}, {"id": 1324, "seek": 636180, "start": 6371.8, "end": 6373.16, "text": " um", "tokens": [50864, 1105, 50932], "temperature": 0.0, "avg_logprob": -0.18703190161257374, "compression_ratio": 1.6582278481012658, "no_speech_prob": 0.0001375496358377859}, {"id": 1325, "seek": 636180, "start": 6373.16, "end": 6377.4800000000005, "text": " There are two ways to kind of figure out what an event provides. Um", "tokens": [50932, 821, 366, 732, 2098, 281, 733, 295, 2573, 484, 437, 364, 2280, 6417, 13, 3301, 51148], "temperature": 0.0, "avg_logprob": -0.18703190161257374, "compression_ratio": 1.6582278481012658, "no_speech_prob": 0.0001375496358377859}, {"id": 1326, "seek": 636180, "start": 6378.2, "end": 6382.84, "text": " You can just um do help and then event dot name event. Um", "tokens": [51184, 509, 393, 445, 1105, 360, 854, 293, 550, 2280, 5893, 1315, 2280, 13, 3301, 51416], "temperature": 0.0, "avg_logprob": -0.18703190161257374, "compression_ratio": 1.6582278481012658, "no_speech_prob": 0.0001375496358377859}, {"id": 1327, "seek": 636180, "start": 6383.4800000000005, "end": 6390.52, "text": " Currently in cons that has the unfortunate side effect of also printing out a bunch of like metaclass stuff that you maybe don't care about at the moment", "tokens": [51448, 19964, 294, 1014, 300, 575, 264, 17843, 1252, 1802, 295, 611, 14699, 484, 257, 3840, 295, 411, 1131, 326, 14549, 1507, 300, 291, 1310, 500, 380, 1127, 466, 412, 264, 1623, 51800], "temperature": 0.0, "avg_logprob": -0.18703190161257374, "compression_ratio": 1.6582278481012658, "no_speech_prob": 0.0001375496358377859}, {"id": 1328, "seek": 639052, "start": 6391.4800000000005, "end": 6394.200000000001, "text": " If you just want the simple succinct definition", "tokens": [50412, 759, 291, 445, 528, 264, 2199, 21578, 5460, 7123, 50548], "temperature": 0.0, "avg_logprob": -0.17427311340967813, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.000570108531974256}, {"id": 1329, "seek": 639052, "start": 6394.4400000000005, "end": 6396.76, "text": " The better thing is just to look at the dunder dock", "tokens": [50560, 440, 1101, 551, 307, 445, 281, 574, 412, 264, 274, 6617, 20929, 50676], "temperature": 0.0, "avg_logprob": -0.17427311340967813, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.000570108531974256}, {"id": 1330, "seek": 639052, "start": 6397.320000000001, "end": 6400.68, "text": " Of the event you want. So in this case you can see that", "tokens": [50704, 2720, 264, 2280, 291, 528, 13, 407, 294, 341, 1389, 291, 393, 536, 300, 50872], "temperature": 0.0, "avg_logprob": -0.17427311340967813, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.000570108531974256}, {"id": 1331, "seek": 639052, "start": 6401.88, "end": 6405.88, "text": " It is uh specifying the types of the two arguments that will be provided", "tokens": [50932, 467, 307, 2232, 1608, 5489, 264, 3467, 295, 264, 732, 12869, 300, 486, 312, 5649, 51132], "temperature": 0.0, "avg_logprob": -0.17427311340967813, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.000570108531974256}, {"id": 1332, "seek": 639052, "start": 6408.120000000001, "end": 6411.080000000001, "text": " Right there. Yeah, um, and it's returning none", "tokens": [51244, 1779, 456, 13, 865, 11, 1105, 11, 293, 309, 311, 12678, 6022, 51392], "temperature": 0.0, "avg_logprob": -0.17427311340967813, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.000570108531974256}, {"id": 1333, "seek": 639052, "start": 6411.400000000001, "end": 6417.64, "text": " So you sort of have this like type hint signature that uh describes what arguments will be provided their types", "tokens": [51408, 407, 291, 1333, 295, 362, 341, 411, 2010, 12075, 13397, 300, 2232, 15626, 437, 12869, 486, 312, 5649, 641, 3467, 51720], "temperature": 0.0, "avg_logprob": -0.17427311340967813, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.000570108531974256}, {"id": 1334, "seek": 641764, "start": 6417.72, "end": 6419.72, "text": " And then what will come out of the event if anything", "tokens": [50368, 400, 550, 437, 486, 808, 484, 295, 264, 2280, 498, 1340, 50468], "temperature": 0.0, "avg_logprob": -0.13318661281040736, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.006901895627379417}, {"id": 1335, "seek": 641764, "start": 6423.0, "end": 6426.04, "text": " Yes, there is a there there are two ways to get a list of events that are available", "tokens": [50632, 1079, 11, 456, 307, 257, 456, 456, 366, 732, 2098, 281, 483, 257, 1329, 295, 3931, 300, 366, 2435, 50784], "temperature": 0.0, "avg_logprob": -0.13318661281040736, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.006901895627379417}, {"id": 1336, "seek": 641764, "start": 6426.360000000001, "end": 6431.400000000001, "text": " Um, currently the tab completion on that events shortcut is a little bit borked", "tokens": [50800, 3301, 11, 4362, 264, 4421, 19372, 322, 300, 3931, 24822, 307, 257, 707, 857, 272, 1284, 292, 51052], "temperature": 0.0, "avg_logprob": -0.13318661281040736, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.006901895627379417}, {"id": 1337, "seek": 641764, "start": 6431.4800000000005, "end": 6437.08, "text": " Which we're going to fix like in a couple of days, but if you go to a dunder conch dot built-ins", "tokens": [51056, 3013, 321, 434, 516, 281, 3191, 411, 294, 257, 1916, 295, 1708, 11, 457, 498, 291, 352, 281, 257, 274, 6617, 416, 339, 5893, 3094, 12, 1292, 51336], "temperature": 0.0, "avg_logprob": -0.13318661281040736, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.006901895627379417}, {"id": 1338, "seek": 641764, "start": 6440.4400000000005, "end": 6442.4400000000005, "text": " Built-ins dot events", "tokens": [51504, 49822, 12, 1292, 5893, 3931, 51604], "temperature": 0.0, "avg_logprob": -0.13318661281040736, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.006901895627379417}, {"id": 1339, "seek": 641764, "start": 6444.68, "end": 6446.68, "text": " And then hit dot tab", "tokens": [51716, 400, 550, 2045, 5893, 4421, 51816], "temperature": 0.0, "avg_logprob": -0.13318661281040736, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.006901895627379417}, {"id": 1340, "seek": 644668, "start": 6447.240000000001, "end": 6448.68, "text": " All of those", "tokens": [50392, 1057, 295, 729, 50464], "temperature": 0.0, "avg_logprob": -0.18929231391762788, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.0002491624909453094}, {"id": 1341, "seek": 644668, "start": 6448.68, "end": 6453.4800000000005, "text": " And the other way is if you go to the docs, there's like, you know x o n dot s h slash events", "tokens": [50464, 400, 264, 661, 636, 307, 498, 291, 352, 281, 264, 45623, 11, 456, 311, 411, 11, 291, 458, 2031, 277, 297, 5893, 262, 276, 17330, 3931, 50704], "temperature": 0.0, "avg_logprob": -0.18929231391762788, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.0002491624909453094}, {"id": 1342, "seek": 644668, "start": 6453.56, "end": 6457.96, "text": " I think it is the html, but on the website. There's a list of all of them what they do when they fire", "tokens": [50708, 286, 519, 309, 307, 264, 276, 83, 15480, 11, 457, 322, 264, 3144, 13, 821, 311, 257, 1329, 295, 439, 295, 552, 437, 436, 360, 562, 436, 2610, 50928], "temperature": 0.0, "avg_logprob": -0.18929231391762788, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.0002491624909453094}, {"id": 1343, "seek": 644668, "start": 6461.72, "end": 6463.72, "text": " Yeah", "tokens": [51116, 865, 51216], "temperature": 0.0, "avg_logprob": -0.18929231391762788, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.0002491624909453094}, {"id": 1344, "seek": 644668, "start": 6466.04, "end": 6469.88, "text": " Also, I should say if you want to register a handler for an event", "tokens": [51332, 2743, 11, 286, 820, 584, 498, 291, 528, 281, 7280, 257, 41967, 337, 364, 2280, 51524], "temperature": 0.0, "avg_logprob": -0.18929231391762788, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.0002491624909453094}, {"id": 1345, "seek": 644668, "start": 6470.200000000001, "end": 6473.72, "text": " But you don't actually I mean it's going to provide those arguments no matter what you do", "tokens": [51540, 583, 291, 500, 380, 767, 286, 914, 309, 311, 516, 281, 2893, 729, 12869, 572, 1871, 437, 291, 360, 51716], "temperature": 0.0, "avg_logprob": -0.18929231391762788, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.0002491624909453094}, {"id": 1346, "seek": 647372, "start": 6474.68, "end": 6476.84, "text": " Like it's that's what the event does to the handler", "tokens": [50412, 1743, 309, 311, 300, 311, 437, 264, 2280, 775, 281, 264, 41967, 50520], "temperature": 0.0, "avg_logprob": -0.10064272055948588, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.001524240360595286}, {"id": 1347, "seek": 647372, "start": 6477.08, "end": 6478.6, "text": " You can choose not to use them", "tokens": [50532, 509, 393, 2826, 406, 281, 764, 552, 50608], "temperature": 0.0, "avg_logprob": -0.10064272055948588, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.001524240360595286}, {"id": 1348, "seek": 647372, "start": 6478.6, "end": 6482.92, "text": " But you do need to say like you need to give it like a star star quarks or something to at least capture them", "tokens": [50608, 583, 291, 360, 643, 281, 584, 411, 291, 643, 281, 976, 309, 411, 257, 3543, 3543, 421, 20851, 420, 746, 281, 412, 1935, 7983, 552, 50824], "temperature": 0.0, "avg_logprob": -0.10064272055948588, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.001524240360595286}, {"id": 1349, "seek": 647372, "start": 6483.0, "end": 6485.16, "text": " Or it will throw an error because you're going to pass", "tokens": [50828, 1610, 309, 486, 3507, 364, 6713, 570, 291, 434, 516, 281, 1320, 50936], "temperature": 0.0, "avg_logprob": -0.10064272055948588, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.001524240360595286}, {"id": 1350, "seek": 647372, "start": 6485.72, "end": 6488.52, "text": " Arguments to a function that doesn't know how to accept them. So it's just you know", "tokens": [50964, 40081, 4697, 281, 257, 2445, 300, 1177, 380, 458, 577, 281, 3241, 552, 13, 407, 309, 311, 445, 291, 458, 51104], "temperature": 0.0, "avg_logprob": -0.10064272055948588, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.001524240360595286}, {"id": 1351, "seek": 647372, "start": 6488.52, "end": 6492.84, "text": " You can make these future basically future proof just so long as you always pass at star star quarks", "tokens": [51104, 509, 393, 652, 613, 2027, 1936, 2027, 8177, 445, 370, 938, 382, 291, 1009, 1320, 412, 3543, 3543, 421, 20851, 51320], "temperature": 0.0, "avg_logprob": -0.10064272055948588, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.001524240360595286}, {"id": 1352, "seek": 647372, "start": 6493.16, "end": 6495.320000000001, "text": " And then you don't have to worry about something firing", "tokens": [51336, 400, 550, 291, 500, 380, 362, 281, 3292, 466, 746, 16045, 51444], "temperature": 0.0, "avg_logprob": -0.10064272055948588, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.001524240360595286}, {"id": 1353, "seek": 647372, "start": 6496.04, "end": 6498.2, "text": " Or like passing unknown arguments to your handler", "tokens": [51480, 1610, 411, 8437, 9841, 12869, 281, 428, 41967, 51588], "temperature": 0.0, "avg_logprob": -0.10064272055948588, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.001524240360595286}, {"id": 1354, "seek": 649820, "start": 6499.0, "end": 6501.0, "text": " Um", "tokens": [50404, 3301, 50504], "temperature": 0.0, "avg_logprob": -0.1588911038000607, "compression_ratio": 1.6695278969957081, "no_speech_prob": 0.00025307730538770556}, {"id": 1355, "seek": 649820, "start": 6502.599999999999, "end": 6506.599999999999, "text": " So events get fired when we tell them to fire or when you tell them to fire", "tokens": [50584, 407, 3931, 483, 11777, 562, 321, 980, 552, 281, 2610, 420, 562, 291, 980, 552, 281, 2610, 50784], "temperature": 0.0, "avg_logprob": -0.1588911038000607, "compression_ratio": 1.6695278969957081, "no_speech_prob": 0.00025307730538770556}, {"id": 1356, "seek": 649820, "start": 6507.08, "end": 6509.5599999999995, "text": " Is is effectively the short answer to how these things get set off", "tokens": [50808, 1119, 307, 8659, 264, 2099, 1867, 281, 577, 613, 721, 483, 992, 766, 50932], "temperature": 0.0, "avg_logprob": -0.1588911038000607, "compression_ratio": 1.6695278969957081, "no_speech_prob": 0.00025307730538770556}, {"id": 1357, "seek": 649820, "start": 6512.5199999999995, "end": 6513.8, "text": " Um", "tokens": [51080, 3301, 51144], "temperature": 0.0, "avg_logprob": -0.1588911038000607, "compression_ratio": 1.6695278969957081, "no_speech_prob": 0.00025307730538770556}, {"id": 1358, "seek": 649820, "start": 6513.8, "end": 6517.8, "text": " But so we'll walk through an example of setting up our own event and telling it to fire just to give you a notion", "tokens": [51144, 583, 370, 321, 603, 1792, 807, 364, 1365, 295, 3287, 493, 527, 1065, 2280, 293, 3585, 309, 281, 2610, 445, 281, 976, 291, 257, 10710, 51344], "temperature": 0.0, "avg_logprob": -0.1588911038000607, "compression_ratio": 1.6695278969957081, "no_speech_prob": 0.00025307730538770556}, {"id": 1359, "seek": 649820, "start": 6517.8, "end": 6520.599999999999, "text": " Of a kind of what this all looks like and how you would put all of this together", "tokens": [51344, 2720, 257, 733, 295, 437, 341, 439, 1542, 411, 293, 577, 291, 576, 829, 439, 295, 341, 1214, 51484], "temperature": 0.0, "avg_logprob": -0.1588911038000607, "compression_ratio": 1.6695278969957081, "no_speech_prob": 0.00025307730538770556}, {"id": 1360, "seek": 649820, "start": 6522.84, "end": 6525.72, "text": " Okay, so first um, we need to create an event", "tokens": [51596, 1033, 11, 370, 700, 1105, 11, 321, 643, 281, 1884, 364, 2280, 51740], "temperature": 0.0, "avg_logprob": -0.1588911038000607, "compression_ratio": 1.6695278969957081, "no_speech_prob": 0.00025307730538770556}, {"id": 1361, "seek": 652572, "start": 6525.88, "end": 6527.88, "text": " Um, and uh", "tokens": [50372, 3301, 11, 293, 2232, 50472], "temperature": 0.0, "avg_logprob": -0.14493318766105076, "compression_ratio": 1.7944664031620554, "no_speech_prob": 0.00036243911017663777}, {"id": 1362, "seek": 652572, "start": 6528.4400000000005, "end": 6532.04, "text": " The way you create an event is actually by writing a doc string for it", "tokens": [50500, 440, 636, 291, 1884, 364, 2280, 307, 767, 538, 3579, 257, 3211, 6798, 337, 309, 50680], "temperature": 0.0, "avg_logprob": -0.14493318766105076, "compression_ratio": 1.7944664031620554, "no_speech_prob": 0.00036243911017663777}, {"id": 1363, "seek": 652572, "start": 6532.12, "end": 6539.4800000000005, "text": " It's sort of like the ultimate self-documenting code like it's impossible to create an event in contra without it having documentation because that's the only way to create it", "tokens": [50684, 467, 311, 1333, 295, 411, 264, 9705, 2698, 12, 67, 30439, 278, 3089, 411, 309, 311, 6243, 281, 1884, 364, 2280, 294, 10742, 1553, 309, 1419, 14333, 570, 300, 311, 264, 787, 636, 281, 1884, 309, 51052], "temperature": 0.0, "avg_logprob": -0.14493318766105076, "compression_ratio": 1.7944664031620554, "no_speech_prob": 0.00036243911017663777}, {"id": 1364, "seek": 652572, "start": 6540.04, "end": 6542.04, "text": " Um, it's kind of amazing", "tokens": [51080, 3301, 11, 309, 311, 733, 295, 2243, 51180], "temperature": 0.0, "avg_logprob": -0.14493318766105076, "compression_ratio": 1.7944664031620554, "no_speech_prob": 0.00036243911017663777}, {"id": 1365, "seek": 652572, "start": 6543.16, "end": 6544.360000000001, "text": " Um", "tokens": [51236, 3301, 51296], "temperature": 0.0, "avg_logprob": -0.14493318766105076, "compression_ratio": 1.7944664031620554, "no_speech_prob": 0.00036243911017663777}, {"id": 1366, "seek": 652572, "start": 6544.360000000001, "end": 6548.92, "text": " So we're going to create an event that just raises an alarm if it's called that just you know that it's unhappy", "tokens": [51296, 407, 321, 434, 516, 281, 1884, 364, 2280, 300, 445, 19658, 364, 14183, 498, 309, 311, 1219, 300, 445, 291, 458, 300, 309, 311, 22172, 51524], "temperature": 0.0, "avg_logprob": -0.14493318766105076, "compression_ratio": 1.7944664031620554, "no_speech_prob": 0.00036243911017663777}, {"id": 1367, "seek": 652572, "start": 6549.400000000001, "end": 6553.16, "text": " Um, so the the way you do this is you say events dot doc", "tokens": [51548, 3301, 11, 370, 264, 264, 636, 291, 360, 341, 307, 291, 584, 3931, 5893, 3211, 51736], "temperature": 0.0, "avg_logprob": -0.14493318766105076, "compression_ratio": 1.7944664031620554, "no_speech_prob": 0.00036243911017663777}, {"id": 1368, "seek": 655316, "start": 6553.639999999999, "end": 6555.639999999999, "text": " All right, and then the first", "tokens": [50388, 1057, 558, 11, 293, 550, 264, 700, 50488], "temperature": 0.0, "avg_logprob": -0.17540366914537217, "compression_ratio": 1.6756756756756757, "no_speech_prob": 0.001133242272771895}, {"id": 1369, "seek": 655316, "start": 6556.04, "end": 6558.5199999999995, "text": " Argument you give it is the title is the name of the event", "tokens": [50508, 40081, 2206, 291, 976, 309, 307, 264, 4876, 307, 264, 1315, 295, 264, 2280, 50632], "temperature": 0.0, "avg_logprob": -0.17540366914537217, "compression_ratio": 1.6756756756756757, "no_speech_prob": 0.001133242272771895}, {"id": 1370, "seek": 655316, "start": 6559.88, "end": 6561.88, "text": " Uh, which in this case is never run this", "tokens": [50700, 4019, 11, 597, 294, 341, 1389, 307, 1128, 1190, 341, 50800], "temperature": 0.0, "avg_logprob": -0.17540366914537217, "compression_ratio": 1.6756756756756757, "no_speech_prob": 0.001133242272771895}, {"id": 1371, "seek": 655316, "start": 6563.72, "end": 6567.72, "text": " Um, and then you give it a doc string, but which should be um", "tokens": [50892, 3301, 11, 293, 550, 291, 976, 309, 257, 3211, 6798, 11, 457, 597, 820, 312, 1105, 51092], "temperature": 0.0, "avg_logprob": -0.17540366914537217, "compression_ratio": 1.6756756756756757, "no_speech_prob": 0.001133242272771895}, {"id": 1372, "seek": 655316, "start": 6568.599999999999, "end": 6569.72, "text": " Uh", "tokens": [51136, 4019, 51192], "temperature": 0.0, "avg_logprob": -0.17540366914537217, "compression_ratio": 1.6756756756756757, "no_speech_prob": 0.001133242272771895}, {"id": 1373, "seek": 655316, "start": 6569.72, "end": 6575.16, "text": " The uh the signatures in this case this event takes no arguments and returns none. So it's just a it's a simpler", "tokens": [51192, 440, 2232, 264, 32322, 294, 341, 1389, 341, 2280, 2516, 572, 12869, 293, 11247, 6022, 13, 407, 309, 311, 445, 257, 309, 311, 257, 18587, 51464], "temperature": 0.0, "avg_logprob": -0.17540366914537217, "compression_ratio": 1.6756756756756757, "no_speech_prob": 0.001133242272771895}, {"id": 1374, "seek": 655316, "start": 6575.72, "end": 6576.84, "text": " Um", "tokens": [51492, 3301, 51548], "temperature": 0.0, "avg_logprob": -0.17540366914537217, "compression_ratio": 1.6756756756756757, "no_speech_prob": 0.001133242272771895}, {"id": 1375, "seek": 657684, "start": 6576.84, "end": 6584.4400000000005, "text": " Thing so it would just be events not never run this uh parens arrow none and then you can um on the next line", "tokens": [50364, 30902, 370, 309, 576, 445, 312, 3931, 406, 1128, 1190, 341, 2232, 7448, 3695, 11610, 6022, 293, 550, 291, 393, 1105, 322, 264, 958, 1622, 50744], "temperature": 0.0, "avg_logprob": -0.15120394570486886, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.005906344391405582}, {"id": 1376, "seek": 657684, "start": 6584.4400000000005, "end": 6587.56, "text": " You can kind of provide a description of what you know, you're expecting it to do", "tokens": [50744, 509, 393, 733, 295, 2893, 257, 3855, 295, 437, 291, 458, 11, 291, 434, 9650, 309, 281, 360, 50900], "temperature": 0.0, "avg_logprob": -0.15120394570486886, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.005906344391405582}, {"id": 1377, "seek": 657684, "start": 6588.2, "end": 6590.2, "text": " That's more for other users or other people", "tokens": [50932, 663, 311, 544, 337, 661, 5022, 420, 661, 561, 51032], "temperature": 0.0, "avg_logprob": -0.15120394570486886, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.005906344391405582}, {"id": 1378, "seek": 657684, "start": 6590.2, "end": 6593.72, "text": " So if you were writing a plugin and you wanted to have some events", "tokens": [51032, 407, 498, 291, 645, 3579, 257, 23407, 293, 291, 1415, 281, 362, 512, 3931, 51208], "temperature": 0.0, "avg_logprob": -0.15120394570486886, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.005906344391405582}, {"id": 1379, "seek": 657684, "start": 6593.72, "end": 6598.84, "text": " You would kind of try to put your explanations in here so people understand how they can use the events you provided", "tokens": [51208, 509, 576, 733, 295, 853, 281, 829, 428, 28708, 294, 510, 370, 561, 1223, 577, 436, 393, 764, 264, 3931, 291, 5649, 51464], "temperature": 0.0, "avg_logprob": -0.15120394570486886, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.005906344391405582}, {"id": 1380, "seek": 657684, "start": 6599.32, "end": 6601.32, "text": " Um to full effect", "tokens": [51488, 3301, 281, 1577, 1802, 51588], "temperature": 0.0, "avg_logprob": -0.15120394570486886, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.005906344391405582}, {"id": 1381, "seek": 660684, "start": 6607.8, "end": 6609.8, "text": " Okay", "tokens": [50412, 1033, 50512], "temperature": 0.0, "avg_logprob": -0.13151060948606397, "compression_ratio": 1.8122605363984674, "no_speech_prob": 0.0010321299778297544}, {"id": 1382, "seek": 660684, "start": 6612.12, "end": 6616.360000000001, "text": " Okay, so now what we're going to do is um the way you would use this event", "tokens": [50628, 1033, 11, 370, 586, 437, 321, 434, 516, 281, 360, 307, 1105, 264, 636, 291, 576, 764, 341, 2280, 50840], "temperature": 0.0, "avg_logprob": -0.13151060948606397, "compression_ratio": 1.8122605363984674, "no_speech_prob": 0.0010321299778297544}, {"id": 1383, "seek": 660684, "start": 6617.16, "end": 6618.76, "text": " is you would um", "tokens": [50880, 307, 291, 576, 1105, 50960], "temperature": 0.0, "avg_logprob": -0.13151060948606397, "compression_ratio": 1.8122605363984674, "no_speech_prob": 0.0010321299778297544}, {"id": 1384, "seek": 660684, "start": 6618.76, "end": 6620.84, "text": " It's an event that you basically want to never be fired", "tokens": [50960, 467, 311, 364, 2280, 300, 291, 1936, 528, 281, 1128, 312, 11777, 51064], "temperature": 0.0, "avg_logprob": -0.13151060948606397, "compression_ratio": 1.8122605363984674, "no_speech_prob": 0.0010321299778297544}, {"id": 1385, "seek": 660684, "start": 6620.84, "end": 6624.68, "text": " So you you would put it in a function that for some reason you have like really should never be run", "tokens": [51064, 407, 291, 291, 576, 829, 309, 294, 257, 2445, 300, 337, 512, 1778, 291, 362, 411, 534, 820, 1128, 312, 1190, 51256], "temperature": 0.0, "avg_logprob": -0.13151060948606397, "compression_ratio": 1.8122605363984674, "no_speech_prob": 0.0010321299778297544}, {"id": 1386, "seek": 660684, "start": 6624.76, "end": 6627.32, "text": " But you're you know you you want to recognize that it may exist", "tokens": [51260, 583, 291, 434, 291, 458, 291, 291, 528, 281, 5521, 300, 309, 815, 2514, 51388], "temperature": 0.0, "avg_logprob": -0.13151060948606397, "compression_ratio": 1.8122605363984674, "no_speech_prob": 0.0010321299778297544}, {"id": 1387, "seek": 660684, "start": 6627.72, "end": 6630.76, "text": " And so you put this event in there to kind of alert you that this thing is happening", "tokens": [51408, 400, 370, 291, 829, 341, 2280, 294, 456, 281, 733, 295, 9615, 291, 300, 341, 551, 307, 2737, 51560], "temperature": 0.0, "avg_logprob": -0.13151060948606397, "compression_ratio": 1.8122605363984674, "no_speech_prob": 0.0010321299778297544}, {"id": 1388, "seek": 660684, "start": 6631.88, "end": 6635.24, "text": " So, uh, if you wrote a function that deleted everything on your computer", "tokens": [51616, 407, 11, 2232, 11, 498, 291, 4114, 257, 2445, 300, 22981, 1203, 322, 428, 3820, 51784], "temperature": 0.0, "avg_logprob": -0.13151060948606397, "compression_ratio": 1.8122605363984674, "no_speech_prob": 0.0010321299778297544}, {"id": 1389, "seek": 663524, "start": 6635.719999999999, "end": 6637.719999999999, "text": " I don't know why but let's just say you did", "tokens": [50388, 286, 500, 380, 458, 983, 457, 718, 311, 445, 584, 291, 630, 50488], "temperature": 0.0, "avg_logprob": -0.1362185321011386, "compression_ratio": 1.7320574162679425, "no_speech_prob": 0.0003981536428909749}, {"id": 1390, "seek": 663524, "start": 6642.44, "end": 6649.16, "text": " Then what you would do in let's say the first line of that function or somewhere along is that you would just say events dot and then", "tokens": [50724, 1396, 437, 291, 576, 360, 294, 718, 311, 584, 264, 700, 1622, 295, 300, 2445, 420, 4079, 2051, 307, 300, 291, 576, 445, 584, 3931, 5893, 293, 550, 51060], "temperature": 0.0, "avg_logprob": -0.1362185321011386, "compression_ratio": 1.7320574162679425, "no_speech_prob": 0.0003981536428909749}, {"id": 1391, "seek": 663524, "start": 6649.719999999999, "end": 6651.719999999999, "text": " Never run this which we've defined", "tokens": [51088, 7344, 1190, 341, 597, 321, 600, 7642, 51188], "temperature": 0.0, "avg_logprob": -0.1362185321011386, "compression_ratio": 1.7320574162679425, "no_speech_prob": 0.0003981536428909749}, {"id": 1392, "seek": 663524, "start": 6651.96, "end": 6653.96, "text": " in that", "tokens": [51200, 294, 300, 51300], "temperature": 0.0, "avg_logprob": -0.1362185321011386, "compression_ratio": 1.7320574162679425, "no_speech_prob": 0.0003981536428909749}, {"id": 1393, "seek": 663524, "start": 6654.04, "end": 6656.2, "text": " Previous doc string thing and then dot fire", "tokens": [51304, 6001, 1502, 3211, 6798, 551, 293, 550, 5893, 2610, 51412], "temperature": 0.0, "avg_logprob": -0.1362185321011386, "compression_ratio": 1.7320574162679425, "no_speech_prob": 0.0003981536428909749}, {"id": 1394, "seek": 663524, "start": 6656.92, "end": 6662.04, "text": " And then what happens is that whenever that function is called and it gets to that line the event", "tokens": [51448, 400, 550, 437, 2314, 307, 300, 5699, 300, 2445, 307, 1219, 293, 309, 2170, 281, 300, 1622, 264, 2280, 51704], "temperature": 0.0, "avg_logprob": -0.1362185321011386, "compression_ratio": 1.7320574162679425, "no_speech_prob": 0.0003981536428909749}, {"id": 1395, "seek": 666204, "start": 6662.76, "end": 6664.92, "text": " Management system will basically fire that event", "tokens": [50400, 14781, 1185, 486, 1936, 2610, 300, 2280, 50508], "temperature": 0.0, "avg_logprob": -0.12691213843527804, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0009693695465102792}, {"id": 1396, "seek": 666204, "start": 6666.12, "end": 6668.68, "text": " So we can go ahead actually and run delete my computer", "tokens": [50568, 407, 321, 393, 352, 2286, 767, 293, 1190, 12097, 452, 3820, 50696], "temperature": 0.0, "avg_logprob": -0.12691213843527804, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0009693695465102792}, {"id": 1397, "seek": 666204, "start": 6670.68, "end": 6672.68, "text": " And nothing happens", "tokens": [50796, 400, 1825, 2314, 50896], "temperature": 0.0, "avg_logprob": -0.12691213843527804, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0009693695465102792}, {"id": 1398, "seek": 666204, "start": 6673.96, "end": 6675.96, "text": " So in fact actually um", "tokens": [50960, 407, 294, 1186, 767, 1105, 51060], "temperature": 0.0, "avg_logprob": -0.12691213843527804, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0009693695465102792}, {"id": 1399, "seek": 666204, "start": 6676.44, "end": 6680.36, "text": " Something does happen right the event fired, but we have nothing listening to the event", "tokens": [51084, 6595, 775, 1051, 558, 264, 2280, 11777, 11, 457, 321, 362, 1825, 4764, 281, 264, 2280, 51280], "temperature": 0.0, "avg_logprob": -0.12691213843527804, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0009693695465102792}, {"id": 1400, "seek": 666204, "start": 6680.76, "end": 6682.28, "text": " So you don't get anything out of it, right?", "tokens": [51300, 407, 291, 500, 380, 483, 1340, 484, 295, 309, 11, 558, 30, 51376], "temperature": 0.0, "avg_logprob": -0.12691213843527804, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0009693695465102792}, {"id": 1401, "seek": 666204, "start": 6682.6, "end": 6686.84, "text": " So then the final step is to set up a handler to add it so we create the event", "tokens": [51392, 407, 550, 264, 2572, 1823, 307, 281, 992, 493, 257, 41967, 281, 909, 309, 370, 321, 1884, 264, 2280, 51604], "temperature": 0.0, "avg_logprob": -0.12691213843527804, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0009693695465102792}, {"id": 1402, "seek": 668684, "start": 6687.400000000001, "end": 6692.6, "text": " We tell the event to fire and then we have something that listens for the event firing that then reacts to it", "tokens": [50392, 492, 980, 264, 2280, 281, 2610, 293, 550, 321, 362, 746, 300, 35959, 337, 264, 2280, 16045, 300, 550, 33305, 281, 309, 50652], "temperature": 0.0, "avg_logprob": -0.12606698710743974, "compression_ratio": 1.7198067632850242, "no_speech_prob": 0.003822585567831993}, {"id": 1403, "seek": 668684, "start": 6692.76, "end": 6695.56, "text": " Right, so there's these three separate these these three separate components", "tokens": [50660, 1779, 11, 370, 456, 311, 613, 1045, 4994, 613, 613, 1045, 4994, 6677, 50800], "temperature": 0.0, "avg_logprob": -0.12606698710743974, "compression_ratio": 1.7198067632850242, "no_speech_prob": 0.003822585567831993}, {"id": 1404, "seek": 668684, "start": 6699.64, "end": 6701.64, "text": " And given the fact that this is a uh", "tokens": [51004, 400, 2212, 264, 1186, 300, 341, 307, 257, 2232, 51104], "temperature": 0.0, "avg_logprob": -0.12606698710743974, "compression_ratio": 1.7198067632850242, "no_speech_prob": 0.003822585567831993}, {"id": 1405, "seek": 668684, "start": 6702.360000000001, "end": 6705.400000000001, "text": " Like an event that's supposed to fire when somebody has done something horrible to you", "tokens": [51140, 1743, 364, 2280, 300, 311, 3442, 281, 2610, 562, 2618, 575, 1096, 746, 9263, 281, 291, 51292], "temperature": 0.0, "avg_logprob": -0.12606698710743974, "compression_ratio": 1.7198067632850242, "no_speech_prob": 0.003822585567831993}, {"id": 1406, "seek": 668684, "start": 6705.8, "end": 6707.96, "text": " You can make it a suitably chastening message", "tokens": [51312, 509, 393, 652, 309, 257, 5722, 1188, 417, 525, 4559, 3636, 51420], "temperature": 0.0, "avg_logprob": -0.12606698710743974, "compression_ratio": 1.7198067632850242, "no_speech_prob": 0.003822585567831993}, {"id": 1407, "seek": 671684, "start": 6717.8, "end": 6719.8, "text": " Um and as always um", "tokens": [50412, 3301, 293, 382, 1009, 1105, 50512], "temperature": 0.0, "avg_logprob": -0.20576472764604548, "compression_ratio": 1.5207373271889402, "no_speech_prob": 0.002082298044115305}, {"id": 1408, "seek": 671684, "start": 6720.92, "end": 6722.68, "text": " Like you have access to the full", "tokens": [50568, 1743, 291, 362, 2105, 281, 264, 1577, 50656], "temperature": 0.0, "avg_logprob": -0.20576472764604548, "compression_ratio": 1.5207373271889402, "no_speech_prob": 0.002082298044115305}, {"id": 1409, "seek": 671684, "start": 6722.68, "end": 6723.4800000000005, "text": " You know uh", "tokens": [50656, 509, 458, 2232, 50696], "temperature": 0.0, "avg_logprob": -0.20576472764604548, "compression_ratio": 1.5207373271889402, "no_speech_prob": 0.002082298044115305}, {"id": 1410, "seek": 671684, "start": 6723.4800000000005, "end": 6727.16, "text": " Conspectrum here, so if you want like in this case it means like the who am I is a nice thing", "tokens": [50696, 6923, 1043, 6247, 510, 11, 370, 498, 291, 528, 411, 294, 341, 1389, 309, 1355, 411, 264, 567, 669, 286, 307, 257, 1481, 551, 50880], "temperature": 0.0, "avg_logprob": -0.20576472764604548, "compression_ratio": 1.5207373271889402, "no_speech_prob": 0.002082298044115305}, {"id": 1411, "seek": 671684, "start": 6727.16, "end": 6730.2, "text": " You can figure out exactly which user is responsible for doing this horrible thing to you", "tokens": [50880, 509, 393, 2573, 484, 2293, 597, 4195, 307, 6250, 337, 884, 341, 9263, 551, 281, 291, 51032], "temperature": 0.0, "avg_logprob": -0.20576472764604548, "compression_ratio": 1.5207373271889402, "no_speech_prob": 0.002082298044115305}, {"id": 1412, "seek": 671684, "start": 6740.92, "end": 6744.92, "text": " That's a good tip. Yeah, perfect. Um, so then if you run delete my computer again", "tokens": [51568, 663, 311, 257, 665, 4125, 13, 865, 11, 2176, 13, 3301, 11, 370, 550, 498, 291, 1190, 12097, 452, 3820, 797, 51768], "temperature": 0.0, "avg_logprob": -0.20576472764604548, "compression_ratio": 1.5207373271889402, "no_speech_prob": 0.002082298044115305}, {"id": 1413, "seek": 674684, "start": 6747.24, "end": 6753.56, "text": " Then the event fires and now you have you know, you know that it was scope at the delete of your computer. I'm sorry", "tokens": [50384, 1396, 264, 2280, 15044, 293, 586, 291, 362, 291, 458, 11, 291, 458, 300, 309, 390, 11923, 412, 264, 12097, 295, 428, 3820, 13, 286, 478, 2597, 50700], "temperature": 0.0, "avg_logprob": -0.17099807880542897, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.0002002483233809471}, {"id": 1414, "seek": 674684, "start": 6755.0, "end": 6757.0, "text": " Can't take him anywhere", "tokens": [50772, 1664, 380, 747, 796, 4992, 50872], "temperature": 0.0, "avg_logprob": -0.17099807880542897, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.0002002483233809471}, {"id": 1415, "seek": 674684, "start": 6762.52, "end": 6769.400000000001, "text": " Okay, so, um, are there any initial questions otherwise there's some exercises here that should help kind of like cement the general", "tokens": [51148, 1033, 11, 370, 11, 1105, 11, 366, 456, 604, 5883, 1651, 5911, 456, 311, 512, 11900, 510, 300, 820, 854, 733, 295, 411, 19729, 264, 2674, 51492], "temperature": 0.0, "avg_logprob": -0.17099807880542897, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.0002002483233809471}, {"id": 1416, "seek": 674684, "start": 6770.12, "end": 6772.360000000001, "text": " Pattern in place, but we're happy to take questions first", "tokens": [51528, 34367, 77, 294, 1081, 11, 457, 321, 434, 2055, 281, 747, 1651, 700, 51640], "temperature": 0.0, "avg_logprob": -0.17099807880542897, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.0002002483233809471}, {"id": 1417, "seek": 677236, "start": 6773.24, "end": 6775.24, "text": " Okay, great", "tokens": [50408, 1033, 11, 869, 50508], "temperature": 0.0, "avg_logprob": -0.2780780792236328, "compression_ratio": 1.825, "no_speech_prob": 0.0005973868537694216}, {"id": 1418, "seek": 677236, "start": 6775.24, "end": 6778.12, "text": " Um, so these sort of build on one another so I'll like reveal them as we go", "tokens": [50508, 3301, 11, 370, 613, 1333, 295, 1322, 322, 472, 1071, 370, 286, 603, 411, 10658, 552, 382, 321, 352, 50652], "temperature": 0.0, "avg_logprob": -0.2780780792236328, "compression_ratio": 1.825, "no_speech_prob": 0.0005973868537694216}, {"id": 1419, "seek": 677236, "start": 6778.759999999999, "end": 6784.12, "text": " Um, but the first is just to create a handler for the event that is called on n var change", "tokens": [50684, 3301, 11, 457, 264, 700, 307, 445, 281, 1884, 257, 41967, 337, 264, 2280, 300, 307, 1219, 322, 297, 1374, 1319, 50952], "temperature": 0.0, "avg_logprob": -0.2780780792236328, "compression_ratio": 1.825, "no_speech_prob": 0.0005973868537694216}, {"id": 1420, "seek": 677236, "start": 6784.839999999999, "end": 6791.0, "text": " Um, this is a built-in, uh event. You don't need to create the event. You just want a handler for the event and you want to have it print out the", "tokens": [50988, 3301, 11, 341, 307, 257, 3094, 12, 259, 11, 2232, 2280, 13, 509, 500, 380, 643, 281, 1884, 264, 2280, 13, 509, 445, 528, 257, 41967, 337, 264, 2280, 293, 291, 528, 281, 362, 309, 4482, 484, 264, 51296], "temperature": 0.0, "avg_logprob": -0.2780780792236328, "compression_ratio": 1.825, "no_speech_prob": 0.0005973868537694216}, {"id": 1421, "seek": 677236, "start": 6792.2, "end": 6796.839999999999, "text": " Um old value and then the new value and of course the name of the environment of the var umbrella is just changed", "tokens": [51356, 3301, 1331, 2158, 293, 550, 264, 777, 2158, 293, 295, 1164, 264, 1315, 295, 264, 2823, 295, 264, 1374, 21925, 307, 445, 3105, 51588], "temperature": 0.0, "avg_logprob": -0.2780780792236328, "compression_ratio": 1.825, "no_speech_prob": 0.0005973868537694216}, {"id": 1422, "seek": 679684, "start": 6796.92, "end": 6801.32, "text": " Um, so you should probably check on the dock the dunder dock of the event to figure out what those variables are called", "tokens": [50368, 3301, 11, 370, 291, 820, 1391, 1520, 322, 264, 20929, 264, 274, 6617, 20929, 295, 264, 2280, 281, 2573, 484, 437, 729, 9102, 366, 1219, 50588], "temperature": 0.0, "avg_logprob": -0.3035935128089225, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.00022688011813443154}, {"id": 1423, "seek": 679684, "start": 6801.32, "end": 6803.32, "text": " Otherwise, it's going to be hard to refer to them", "tokens": [50588, 10328, 11, 309, 311, 516, 281, 312, 1152, 281, 2864, 281, 552, 50688], "temperature": 0.0, "avg_logprob": -0.3035935128089225, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.00022688011813443154}, {"id": 1424, "seek": 679684, "start": 6804.12, "end": 6806.12, "text": " And Anthony and I can sort of wander and help", "tokens": [50728, 400, 15853, 293, 286, 393, 1333, 295, 27541, 293, 854, 50828], "temperature": 0.0, "avg_logprob": -0.3035935128089225, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.00022688011813443154}, {"id": 1425, "seek": 679684, "start": 6812.12, "end": 6814.12, "text": " So as gill showed up here, um", "tokens": [51128, 407, 382, 290, 373, 4712, 493, 510, 11, 1105, 51228], "temperature": 0.0, "avg_logprob": -0.3035935128089225, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.00022688011813443154}, {"id": 1426, "seek": 679684, "start": 6814.28, "end": 6819.8, "text": " If you just write a simple if condition to check if the name which comes in as a string is", "tokens": [51236, 759, 291, 445, 2464, 257, 2199, 498, 4188, 281, 1520, 498, 264, 1315, 597, 1487, 294, 382, 257, 6798, 307, 51512], "temperature": 0.0, "avg_logprob": -0.3035935128089225, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.00022688011813443154}, {"id": 1427, "seek": 679684, "start": 6820.12, "end": 6822.6, "text": " Like the dock string says is in", "tokens": [51528, 1743, 264, 20929, 6798, 1619, 307, 294, 51652], "temperature": 0.0, "avg_logprob": -0.3035935128089225, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.00022688011813443154}, {"id": 1428, "seek": 679684, "start": 6823.400000000001, "end": 6824.92, "text": " Is either", "tokens": [51692, 1119, 2139, 51768], "temperature": 0.0, "avg_logprob": -0.3035935128089225, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.00022688011813443154}, {"id": 1429, "seek": 682492, "start": 6825.0, "end": 6830.92, "text": " In uh is either pwd or old pwd and then only print if it's not", "tokens": [50368, 682, 2232, 307, 2139, 280, 43778, 420, 1331, 280, 43778, 293, 550, 787, 4482, 498, 309, 311, 406, 50664], "temperature": 0.0, "avg_logprob": -0.21496981732985554, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.0015480092260986567}, {"id": 1430, "seek": 682492, "start": 6831.8, "end": 6833.32, "text": " We can um", "tokens": [50708, 492, 393, 1105, 50784], "temperature": 0.0, "avg_logprob": -0.21496981732985554, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.0015480092260986567}, {"id": 1431, "seek": 682492, "start": 6833.32, "end": 6840.84, "text": " We can check to make sure that it works normally for most environment variables, but if we change directory it um", "tokens": [50784, 492, 393, 1520, 281, 652, 988, 300, 309, 1985, 5646, 337, 881, 2823, 9102, 11, 457, 498, 321, 1319, 21120, 309, 1105, 51160], "temperature": 0.0, "avg_logprob": -0.21496981732985554, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.0015480092260986567}, {"id": 1432, "seek": 682492, "start": 6841.88, "end": 6843.88, "text": " It it no longer gets called", "tokens": [51212, 467, 309, 572, 2854, 2170, 1219, 51312], "temperature": 0.0, "avg_logprob": -0.21496981732985554, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.0015480092260986567}, {"id": 1433, "seek": 682492, "start": 6849.0, "end": 6850.28, "text": " And then", "tokens": [51568, 400, 550, 51632], "temperature": 0.0, "avg_logprob": -0.21496981732985554, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.0015480092260986567}, {"id": 1434, "seek": 682492, "start": 6850.28, "end": 6851.64, "text": " think we're", "tokens": [51632, 519, 321, 434, 51700], "temperature": 0.0, "avg_logprob": -0.21496981732985554, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.0015480092260986567}, {"id": 1435, "seek": 685164, "start": 6851.64, "end": 6856.92, "text": " I mean a little low on time. So maybe we'll skip this, uh, this particular", "tokens": [50364, 286, 914, 257, 707, 2295, 322, 565, 13, 407, 1310, 321, 603, 10023, 341, 11, 2232, 11, 341, 1729, 50628], "temperature": 0.0, "avg_logprob": -0.18840974630768767, "compression_ratio": 1.5253456221198156, "no_speech_prob": 0.00031494253198616207}, {"id": 1436, "seek": 685164, "start": 6857.64, "end": 6862.04, "text": " Uh exercise, but you can go feel free to do it at home and and email us too", "tokens": [50664, 4019, 5380, 11, 457, 291, 393, 352, 841, 1737, 281, 360, 309, 412, 1280, 293, 293, 3796, 505, 886, 50884], "temperature": 0.0, "avg_logprob": -0.18840974630768767, "compression_ratio": 1.5253456221198156, "no_speech_prob": 0.00031494253198616207}, {"id": 1437, "seek": 685164, "start": 6863.08, "end": 6865.08, "text": " Uh, do you want to just show it or", "tokens": [50936, 4019, 11, 360, 291, 528, 281, 445, 855, 309, 420, 51036], "temperature": 0.0, "avg_logprob": -0.18840974630768767, "compression_ratio": 1.5253456221198156, "no_speech_prob": 0.00031494253198616207}, {"id": 1438, "seek": 685164, "start": 6865.8, "end": 6867.8, "text": " Okay", "tokens": [51072, 1033, 51172], "temperature": 0.0, "avg_logprob": -0.18840974630768767, "compression_ratio": 1.5253456221198156, "no_speech_prob": 0.00031494253198616207}, {"id": 1439, "seek": 685164, "start": 6869.400000000001, "end": 6872.200000000001, "text": " So one of the really um handy ones for doing some control flow", "tokens": [51252, 407, 472, 295, 264, 534, 1105, 13239, 2306, 337, 884, 512, 1969, 3095, 51392], "temperature": 0.0, "avg_logprob": -0.18840974630768767, "compression_ratio": 1.5253456221198156, "no_speech_prob": 0.00031494253198616207}, {"id": 1440, "seek": 685164, "start": 6872.200000000001, "end": 6875.0, "text": " We don't we don't have to take time to actually, you know, uh do it right now", "tokens": [51392, 492, 500, 380, 321, 500, 380, 362, 281, 747, 565, 281, 767, 11, 291, 458, 11, 2232, 360, 309, 558, 586, 51532], "temperature": 0.0, "avg_logprob": -0.18840974630768767, "compression_ratio": 1.5253456221198156, "no_speech_prob": 0.00031494253198616207}, {"id": 1441, "seek": 687500, "start": 6875.0, "end": 6881.88, "text": " But there's on post command which has a bunch of um of those items that you get in the", "tokens": [50364, 583, 456, 311, 322, 2183, 5622, 597, 575, 257, 3840, 295, 1105, 295, 729, 4754, 300, 291, 483, 294, 264, 50708], "temperature": 0.0, "avg_logprob": -0.11427236815630379, "compression_ratio": 1.7824561403508772, "no_speech_prob": 0.022968359291553497}, {"id": 1442, "seek": 687500, "start": 6883.0, "end": 6885.0, "text": " Command pipeline object", "tokens": [50764, 17901, 15517, 2657, 50864], "temperature": 0.0, "avg_logprob": -0.11427236815630379, "compression_ratio": 1.7824561403508772, "no_speech_prob": 0.022968359291553497}, {"id": 1443, "seek": 687500, "start": 6885.0, "end": 6887.56, "text": " Including like timestamps the name of the command that was run and other stuff", "tokens": [50864, 27137, 411, 49108, 23150, 264, 1315, 295, 264, 5622, 300, 390, 1190, 293, 661, 1507, 50992], "temperature": 0.0, "avg_logprob": -0.11427236815630379, "compression_ratio": 1.7824561403508772, "no_speech_prob": 0.022968359291553497}, {"id": 1444, "seek": 687500, "start": 6887.64, "end": 6891.88, "text": " So in this case, this is all it takes basically to set up like a power line style", "tokens": [50996, 407, 294, 341, 1389, 11, 341, 307, 439, 309, 2516, 1936, 281, 992, 493, 411, 257, 1347, 1622, 3758, 51208], "temperature": 0.0, "avg_logprob": -0.11427236815630379, "compression_ratio": 1.7824561403508772, "no_speech_prob": 0.022968359291553497}, {"id": 1445, "seek": 687500, "start": 6891.88, "end": 6896.28, "text": " Like the timestamps of the previous command and just throw it onto your right prompt over on the side", "tokens": [51208, 1743, 264, 49108, 23150, 295, 264, 3894, 5622, 293, 445, 3507, 309, 3911, 428, 558, 12391, 670, 322, 264, 1252, 51428], "temperature": 0.0, "avg_logprob": -0.11427236815630379, "compression_ratio": 1.7824561403508772, "no_speech_prob": 0.022968359291553497}, {"id": 1446, "seek": 687500, "start": 6896.6, "end": 6902.84, "text": " It's really just like this three line event handler thing that you can use and then you kind of set up this interactive thing to track", "tokens": [51444, 467, 311, 534, 445, 411, 341, 1045, 1622, 2280, 41967, 551, 300, 291, 393, 764, 293, 550, 291, 733, 295, 992, 493, 341, 15141, 551, 281, 2837, 51756], "temperature": 0.0, "avg_logprob": -0.11427236815630379, "compression_ratio": 1.7824561403508772, "no_speech_prob": 0.022968359291553497}, {"id": 1447, "seek": 690284, "start": 6903.8, "end": 6906.6, "text": " You can also get like return codes and start coloring things differently", "tokens": [50412, 509, 393, 611, 483, 411, 2736, 14211, 293, 722, 23198, 721, 7614, 50552], "temperature": 0.0, "avg_logprob": -0.11656376448544589, "compression_ratio": 1.5954545454545455, "no_speech_prob": 0.0005441268440335989}, {"id": 1448, "seek": 690284, "start": 6906.6, "end": 6911.0, "text": " I mean it gets really easy to build stuff up there, you know to get sort of the responsive prompt that you want", "tokens": [50552, 286, 914, 309, 2170, 534, 1858, 281, 1322, 1507, 493, 456, 11, 291, 458, 281, 483, 1333, 295, 264, 21826, 12391, 300, 291, 528, 50772], "temperature": 0.0, "avg_logprob": -0.11656376448544589, "compression_ratio": 1.5954545454545455, "no_speech_prob": 0.0005441268440335989}, {"id": 1449, "seek": 690284, "start": 6911.8, "end": 6913.8, "text": " That's all I wanted to say", "tokens": [50812, 663, 311, 439, 286, 1415, 281, 584, 50912], "temperature": 0.0, "avg_logprob": -0.11656376448544589, "compression_ratio": 1.5954545454545455, "no_speech_prob": 0.0005441268440335989}, {"id": 1450, "seek": 690284, "start": 6919.16, "end": 6922.84, "text": " Okay, so now we're going to talk about macros", "tokens": [51180, 1033, 11, 370, 586, 321, 434, 516, 281, 751, 466, 7912, 2635, 51364], "temperature": 0.0, "avg_logprob": -0.11656376448544589, "compression_ratio": 1.5954545454545455, "no_speech_prob": 0.0005441268440335989}, {"id": 1451, "seek": 690284, "start": 6924.28, "end": 6925.8, "text": " so", "tokens": [51436, 370, 51512], "temperature": 0.0, "avg_logprob": -0.11656376448544589, "compression_ratio": 1.5954545454545455, "no_speech_prob": 0.0005441268440335989}, {"id": 1452, "seek": 690284, "start": 6925.8, "end": 6932.76, "text": " macros are syntax that replace a small amount of code with some with one of the few things", "tokens": [51512, 7912, 2635, 366, 28431, 300, 7406, 257, 1359, 2372, 295, 3089, 365, 512, 365, 472, 295, 264, 1326, 721, 51860], "temperature": 0.0, "avg_logprob": -0.11656376448544589, "compression_ratio": 1.5954545454545455, "no_speech_prob": 0.0005441268440335989}, {"id": 1453, "seek": 693284, "start": 6932.84, "end": 6940.2, "text": " So either another expression or a syntax tree or just a string rather than being evaluated normally", "tokens": [50364, 407, 2139, 1071, 6114, 420, 257, 28431, 4230, 420, 445, 257, 6798, 2831, 813, 885, 25509, 5646, 50732], "temperature": 0.0, "avg_logprob": -0.13700978167645342, "compression_ratio": 1.61139896373057, "no_speech_prob": 5.919960676692426e-05}, {"id": 1454, "seek": 693284, "start": 6942.12, "end": 6944.68, "text": " So basically what happens in conch is", "tokens": [50828, 407, 1936, 437, 2314, 294, 416, 339, 307, 50956], "temperature": 0.0, "avg_logprob": -0.13700978167645342, "compression_ratio": 1.61139896373057, "no_speech_prob": 5.919960676692426e-05}, {"id": 1455, "seek": 693284, "start": 6945.400000000001, "end": 6948.28, "text": " That the the parser gets paused", "tokens": [50992, 663, 264, 264, 21156, 260, 2170, 46860, 51136], "temperature": 0.0, "avg_logprob": -0.13700978167645342, "compression_ratio": 1.61139896373057, "no_speech_prob": 5.919960676692426e-05}, {"id": 1456, "seek": 693284, "start": 6949.32, "end": 6951.32, "text": " And then we skip the normal parsing", "tokens": [51188, 400, 550, 321, 10023, 264, 2710, 21156, 278, 51288], "temperature": 0.0, "avg_logprob": -0.13700978167645342, "compression_ratio": 1.61139896373057, "no_speech_prob": 5.919960676692426e-05}, {"id": 1457, "seek": 693284, "start": 6952.4400000000005, "end": 6955.32, "text": " We gather up whatever macro inputs are going to be", "tokens": [51344, 492, 5448, 493, 2035, 18887, 15743, 366, 516, 281, 312, 51488], "temperature": 0.0, "avg_logprob": -0.13700978167645342, "compression_ratio": 1.61139896373057, "no_speech_prob": 5.919960676692426e-05}, {"id": 1458, "seek": 693284, "start": 6956.4400000000005, "end": 6958.68, "text": " Are handed off we'll get to what those are in a moment", "tokens": [51544, 2014, 16013, 766, 321, 603, 483, 281, 437, 729, 366, 294, 257, 1623, 51656], "temperature": 0.0, "avg_logprob": -0.13700978167645342, "compression_ratio": 1.61139896373057, "no_speech_prob": 5.919960676692426e-05}, {"id": 1459, "seek": 695868, "start": 6959.56, "end": 6962.76, "text": " We evaluate the macro with however we're told to evaluate it", "tokens": [50408, 492, 13059, 264, 18887, 365, 4461, 321, 434, 1907, 281, 13059, 309, 50568], "temperature": 0.0, "avg_logprob": -0.1402431818155142, "compression_ratio": 1.649402390438247, "no_speech_prob": 0.000869176525156945}, {"id": 1460, "seek": 695868, "start": 6963.4800000000005, "end": 6966.04, "text": " And then we resume normal parsing and execution", "tokens": [50604, 400, 550, 321, 15358, 2710, 21156, 278, 293, 15058, 50732], "temperature": 0.0, "avg_logprob": -0.1402431818155142, "compression_ratio": 1.649402390438247, "no_speech_prob": 0.000869176525156945}, {"id": 1461, "seek": 695868, "start": 6967.64, "end": 6971.240000000001, "text": " So conch's macro system is more like rusts than", "tokens": [50812, 407, 416, 339, 311, 18887, 1185, 307, 544, 411, 15259, 82, 813, 50992], "temperature": 0.0, "avg_logprob": -0.1402431818155142, "compression_ratio": 1.649402390438247, "no_speech_prob": 0.000869176525156945}, {"id": 1462, "seek": 695868, "start": 6971.88, "end": 6978.04, "text": " Other macro systems you might be familiar with so who here like knows rust even a little a little so", "tokens": [51024, 5358, 18887, 3652, 291, 1062, 312, 4963, 365, 370, 567, 510, 411, 3255, 15259, 754, 257, 707, 257, 707, 370, 51332], "temperature": 0.0, "avg_logprob": -0.1402431818155142, "compression_ratio": 1.649402390438247, "no_speech_prob": 0.000869176525156945}, {"id": 1463, "seek": 695868, "start": 6978.6, "end": 6984.52, "text": " This gets used all the time in rest. So if you're from if you know that it'll look familiar. If not, hopefully it won't be", "tokens": [51360, 639, 2170, 1143, 439, 264, 565, 294, 1472, 13, 407, 498, 291, 434, 490, 498, 291, 458, 300, 309, 603, 574, 4963, 13, 759, 406, 11, 4696, 309, 1582, 380, 312, 51656], "temperature": 0.0, "avg_logprob": -0.1402431818155142, "compression_ratio": 1.649402390438247, "no_speech_prob": 0.000869176525156945}, {"id": 1464, "seek": 695868, "start": 6985.240000000001, "end": 6987.240000000001, "text": " too much of a learning curve here", "tokens": [51692, 886, 709, 295, 257, 2539, 7605, 510, 51792], "temperature": 0.0, "avg_logprob": -0.1402431818155142, "compression_ratio": 1.649402390438247, "no_speech_prob": 0.000869176525156945}, {"id": 1465, "seek": 698868, "start": 6989.240000000001, "end": 6992.280000000001, "text": " But basically the point of this is that", "tokens": [50392, 583, 1936, 264, 935, 295, 341, 307, 300, 50544], "temperature": 0.0, "avg_logprob": -0.1399883596520675, "compression_ratio": 1.5314009661835748, "no_speech_prob": 7.483404624508694e-05}, {"id": 1466, "seek": 698868, "start": 6993.88, "end": 6995.88, "text": " You're already familiar with macros", "tokens": [50624, 509, 434, 1217, 4963, 365, 7912, 2635, 50724], "temperature": 0.0, "avg_logprob": -0.1399883596520675, "compression_ratio": 1.5314009661835748, "no_speech_prob": 7.483404624508694e-05}, {"id": 1467, "seek": 698868, "start": 6995.96, "end": 7002.4400000000005, "text": " Normally jupiter magics are just a macro system effectively. They they pause normal execution and do something else", "tokens": [50728, 17424, 361, 1010, 1681, 2258, 1167, 366, 445, 257, 18887, 1185, 8659, 13, 814, 436, 10465, 2710, 15058, 293, 360, 746, 1646, 51052], "temperature": 0.0, "avg_logprob": -0.1399883596520675, "compression_ratio": 1.5314009661835748, "no_speech_prob": 7.483404624508694e-05}, {"id": 1468, "seek": 698868, "start": 7005.72, "end": 7011.320000000001, "text": " So in like in rust the conch macros use the special exclamation point syntax", "tokens": [51216, 407, 294, 411, 294, 15259, 264, 416, 339, 7912, 2635, 764, 264, 2121, 1624, 43233, 935, 28431, 51496], "temperature": 0.0, "avg_logprob": -0.1399883596520675, "compression_ratio": 1.5314009661835748, "no_speech_prob": 7.483404624508694e-05}, {"id": 1469, "seek": 698868, "start": 7013.08, "end": 7017.400000000001, "text": " And there are three types of macros that we have", "tokens": [51584, 400, 456, 366, 1045, 3467, 295, 7912, 2635, 300, 321, 362, 51800], "temperature": 0.0, "avg_logprob": -0.1399883596520675, "compression_ratio": 1.5314009661835748, "no_speech_prob": 7.483404624508694e-05}, {"id": 1470, "seek": 701868, "start": 7018.68, "end": 7023.56, "text": " So one are sub process macros, which we'll go over first the next are function macros", "tokens": [50364, 407, 472, 366, 1422, 1399, 7912, 2635, 11, 597, 321, 603, 352, 670, 700, 264, 958, 366, 2445, 7912, 2635, 50608], "temperature": 0.0, "avg_logprob": -0.11605503824022081, "compression_ratio": 1.795275590551181, "no_speech_prob": 6.708189175697044e-05}, {"id": 1471, "seek": 701868, "start": 7024.200000000001, "end": 7027.8, "text": " Which we'll follow after and then third is context macros", "tokens": [50640, 3013, 321, 603, 1524, 934, 293, 550, 2636, 307, 4319, 7912, 2635, 50820], "temperature": 0.0, "avg_logprob": -0.11605503824022081, "compression_ratio": 1.795275590551181, "no_speech_prob": 6.708189175697044e-05}, {"id": 1472, "seek": 701868, "start": 7027.8, "end": 7031.16, "text": " So we'll see what all of these look like in in a moment here", "tokens": [50820, 407, 321, 603, 536, 437, 439, 295, 613, 574, 411, 294, 294, 257, 1623, 510, 50988], "temperature": 0.0, "avg_logprob": -0.11605503824022081, "compression_ratio": 1.795275590551181, "no_speech_prob": 6.708189175697044e-05}, {"id": 1473, "seek": 701868, "start": 7031.4800000000005, "end": 7033.4800000000005, "text": " So let's start with sub process macros", "tokens": [51004, 407, 718, 311, 722, 365, 1422, 1399, 7912, 2635, 51104], "temperature": 0.0, "avg_logprob": -0.11605503824022081, "compression_ratio": 1.795275590551181, "no_speech_prob": 6.708189175697044e-05}, {"id": 1474, "seek": 701868, "start": 7033.88, "end": 7039.96, "text": " So basically if you put an exclamation point anywhere a loan exclamation point anywhere in your command pipeline", "tokens": [51124, 407, 1936, 498, 291, 829, 364, 1624, 43233, 935, 4992, 257, 10529, 1624, 43233, 935, 4992, 294, 428, 5622, 15517, 51428], "temperature": 0.0, "avg_logprob": -0.11605503824022081, "compression_ratio": 1.795275590551181, "no_speech_prob": 6.708189175697044e-05}, {"id": 1475, "seek": 701868, "start": 7040.4400000000005, "end": 7046.360000000001, "text": " Anything after that will just be interpreted as a single string argument to the rest of the command", "tokens": [51452, 11998, 934, 300, 486, 445, 312, 26749, 382, 257, 2167, 6798, 6770, 281, 264, 1472, 295, 264, 5622, 51748], "temperature": 0.0, "avg_logprob": -0.11605503824022081, "compression_ratio": 1.795275590551181, "no_speech_prob": 6.708189175697044e-05}, {"id": 1476, "seek": 704636, "start": 7046.679999999999, "end": 7052.2, "text": " Um, so if you say echo exclamation point, I'm mr.", "tokens": [50380, 3301, 11, 370, 498, 291, 584, 14300, 1624, 43233, 935, 11, 286, 478, 33660, 13, 50656], "temperature": 0.0, "avg_logprob": -0.2509731624437415, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0002694035356398672}, {"id": 1477, "seek": 704636, "start": 7052.2, "end": 7057.08, "text": " Meeseeks for example, then that entire thing is just a single string", "tokens": [50656, 1923, 1130, 24785, 337, 1365, 11, 550, 300, 2302, 551, 307, 445, 257, 2167, 6798, 50900], "temperature": 0.0, "avg_logprob": -0.2509731624437415, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0002694035356398672}, {"id": 1478, "seek": 704636, "start": 7057.719999999999, "end": 7060.599999999999, "text": " Uh after the exclamation point it's stripped", "tokens": [50932, 4019, 934, 264, 1624, 43233, 935, 309, 311, 33221, 51076], "temperature": 0.0, "avg_logprob": -0.2509731624437415, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0002694035356398672}, {"id": 1479, "seek": 704636, "start": 7061.32, "end": 7063.32, "text": " we'll get but", "tokens": [51112, 321, 603, 483, 457, 51212], "temperature": 0.0, "avg_logprob": -0.2509731624437415, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0002694035356398672}, {"id": 1480, "seek": 704636, "start": 7063.5599999999995, "end": 7069.88, "text": " To show some counter examples if you just echo xyz right echo doesn't really care about the white space", "tokens": [51224, 1407, 855, 512, 5682, 5110, 498, 291, 445, 14300, 2031, 37433, 558, 14300, 1177, 380, 534, 1127, 466, 264, 2418, 1901, 51540], "temperature": 0.0, "avg_logprob": -0.2509731624437415, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0002694035356398672}, {"id": 1481, "seek": 704636, "start": 7070.44, "end": 7073.4, "text": " Um, so normally you'd have to pass this in as a string", "tokens": [51568, 3301, 11, 370, 5646, 291, 1116, 362, 281, 1320, 341, 294, 382, 257, 6798, 51716], "temperature": 0.0, "avg_logprob": -0.2509731624437415, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0002694035356398672}, {"id": 1482, "seek": 707340, "start": 7074.28, "end": 7076.28, "text": " Which is two characters", "tokens": [50408, 3013, 307, 732, 4342, 50508], "temperature": 0.0, "avg_logprob": -0.1476153205422794, "compression_ratio": 1.569767441860465, "no_speech_prob": 0.0001851810229709372}, {"id": 1483, "seek": 707340, "start": 7076.44, "end": 7081.639999999999, "text": " But if you use a macro you only have to use one it's echo exclamation point xyz in that whole thing", "tokens": [50516, 583, 498, 291, 764, 257, 18887, 291, 787, 362, 281, 764, 472, 309, 311, 14300, 1624, 43233, 935, 2031, 37433, 294, 300, 1379, 551, 50776], "temperature": 0.0, "avg_logprob": -0.1476153205422794, "compression_ratio": 1.569767441860465, "no_speech_prob": 0.0001851810229709372}, {"id": 1484, "seek": 707340, "start": 7081.96, "end": 7084.759999999999, "text": " It's equivalent to having put that everything in the string", "tokens": [50792, 467, 311, 10344, 281, 1419, 829, 300, 1203, 294, 264, 6798, 50932], "temperature": 0.0, "avg_logprob": -0.1476153205422794, "compression_ratio": 1.569767441860465, "no_speech_prob": 0.0001851810229709372}, {"id": 1485, "seek": 707340, "start": 7086.599999999999, "end": 7089.5599999999995, "text": " Okay, now this is sort of a contrived example", "tokens": [51024, 1033, 11, 586, 341, 307, 1333, 295, 257, 660, 470, 937, 1365, 51172], "temperature": 0.0, "avg_logprob": -0.1476153205422794, "compression_ratio": 1.569767441860465, "no_speech_prob": 0.0001851810229709372}, {"id": 1486, "seek": 707340, "start": 7091.719999999999, "end": 7093.719999999999, "text": " Oh, but before we get into that", "tokens": [51280, 876, 11, 457, 949, 321, 483, 666, 300, 51380], "temperature": 0.0, "avg_logprob": -0.1476153205422794, "compression_ratio": 1.569767441860465, "no_speech_prob": 0.0001851810229709372}, {"id": 1487, "seek": 707340, "start": 7094.04, "end": 7096.839999999999, "text": " And it's important to remember that macros pause all syntax right?", "tokens": [51396, 400, 309, 311, 1021, 281, 1604, 300, 7912, 2635, 10465, 439, 28431, 558, 30, 51536], "temperature": 0.0, "avg_logprob": -0.1476153205422794, "compression_ratio": 1.569767441860465, "no_speech_prob": 0.0001851810229709372}, {"id": 1488, "seek": 707340, "start": 7097.24, "end": 7102.36, "text": " Uh before until you escape the sub process command. So environment variables", "tokens": [51556, 4019, 949, 1826, 291, 7615, 264, 1422, 1399, 5622, 13, 407, 2823, 9102, 51812], "temperature": 0.0, "avg_logprob": -0.1476153205422794, "compression_ratio": 1.569767441860465, "no_speech_prob": 0.0001851810229709372}, {"id": 1489, "seek": 710236, "start": 7102.36, "end": 7108.92, "text": " Uh will just be listed as there as the string you typed in not anything else", "tokens": [50364, 4019, 486, 445, 312, 10052, 382, 456, 382, 264, 6798, 291, 33941, 294, 406, 1340, 1646, 50692], "temperature": 0.0, "avg_logprob": -0.20417903900146483, "compression_ratio": 1.7455357142857142, "no_speech_prob": 0.00020338421745691448}, {"id": 1490, "seek": 710236, "start": 7109.88, "end": 7113.32, "text": " Um, because we're not parsing that as an environment lookup anymore", "tokens": [50740, 3301, 11, 570, 321, 434, 406, 21156, 278, 300, 382, 364, 2823, 574, 1010, 3602, 50912], "temperature": 0.0, "avg_logprob": -0.20417903900146483, "compression_ratio": 1.7455357142857142, "no_speech_prob": 0.00020338421745691448}, {"id": 1491, "seek": 710236, "start": 7114.04, "end": 7119.24, "text": " Um, so if you can if you want a more like extended example, you can say you're gonna have", "tokens": [50948, 3301, 11, 370, 498, 291, 393, 498, 291, 528, 257, 544, 411, 10913, 1365, 11, 291, 393, 584, 291, 434, 799, 362, 51208], "temperature": 0.0, "avg_logprob": -0.20417903900146483, "compression_ratio": 1.7455357142857142, "no_speech_prob": 0.00020338421745691448}, {"id": 1492, "seek": 710236, "start": 7119.96, "end": 7127.5599999999995, "text": " An environment lookup on both sides and you'll see the first one is uh is the value and the second one is actually just the string that you typed in", "tokens": [51244, 1107, 2823, 574, 1010, 322, 1293, 4881, 293, 291, 603, 536, 264, 700, 472, 307, 2232, 307, 264, 2158, 293, 264, 1150, 472, 307, 767, 445, 264, 6798, 300, 291, 33941, 294, 51624], "temperature": 0.0, "avg_logprob": -0.20417903900146483, "compression_ratio": 1.7455357142857142, "no_speech_prob": 0.00020338421745691448}, {"id": 1493, "seek": 710236, "start": 7128.679999999999, "end": 7130.12, "text": " um", "tokens": [51680, 1105, 51752], "temperature": 0.0, "avg_logprob": -0.20417903900146483, "compression_ratio": 1.7455357142857142, "no_speech_prob": 0.00020338421745691448}, {"id": 1494, "seek": 710236, "start": 7130.12, "end": 7132.12, "text": " Okay", "tokens": [51752, 1033, 51852], "temperature": 0.0, "avg_logprob": -0.20417903900146483, "compression_ratio": 1.7455357142857142, "no_speech_prob": 0.00020338421745691448}, {"id": 1495, "seek": 713236, "start": 7132.92, "end": 7136.679999999999, "text": " So this is really useful when you want to pass in a lot of", "tokens": [50392, 407, 341, 307, 534, 4420, 562, 291, 528, 281, 1320, 294, 257, 688, 295, 50580], "temperature": 0.0, "avg_logprob": -0.17199546246489217, "compression_ratio": 1.7008196721311475, "no_speech_prob": 0.00013339675206225365}, {"id": 1496, "seek": 713236, "start": 7137.4, "end": 7139.639999999999, "text": " String like a very large string to a command", "tokens": [50616, 745, 2937, 411, 257, 588, 2416, 6798, 281, 257, 5622, 50728], "temperature": 0.0, "avg_logprob": -0.17199546246489217, "compression_ratio": 1.7008196721311475, "no_speech_prob": 0.00013339675206225365}, {"id": 1497, "seek": 713236, "start": 7140.2, "end": 7144.679999999999, "text": " Um, so for example time it time. It's like a classic case for this right?", "tokens": [50756, 3301, 11, 370, 337, 1365, 565, 309, 565, 13, 467, 311, 411, 257, 7230, 1389, 337, 341, 558, 30, 50980], "temperature": 0.0, "avg_logprob": -0.17199546246489217, "compression_ratio": 1.7008196721311475, "no_speech_prob": 0.00013339675206225365}, {"id": 1498, "seek": 713236, "start": 7144.759999999999, "end": 7148.36, "text": " So if you do time it and then some python code", "tokens": [50984, 407, 498, 291, 360, 565, 309, 293, 550, 512, 38797, 3089, 51164], "temperature": 0.0, "avg_logprob": -0.17199546246489217, "compression_ratio": 1.7008196721311475, "no_speech_prob": 0.00013339675206225365}, {"id": 1499, "seek": 713236, "start": 7149.0, "end": 7153.639999999999, "text": " Time it is a built-in alias in conch. So you don't need to worry about implementing it. Um, it's there", "tokens": [51196, 6161, 309, 307, 257, 3094, 12, 259, 419, 4609, 294, 416, 339, 13, 407, 291, 500, 380, 643, 281, 3292, 466, 18114, 309, 13, 3301, 11, 309, 311, 456, 51428], "temperature": 0.0, "avg_logprob": -0.17199546246489217, "compression_ratio": 1.7008196721311475, "no_speech_prob": 0.00013339675206225365}, {"id": 1500, "seek": 713236, "start": 7154.12, "end": 7155.4, "text": " Um", "tokens": [51452, 3301, 51516], "temperature": 0.0, "avg_logprob": -0.17199546246489217, "compression_ratio": 1.7008196721311475, "no_speech_prob": 0.00013339675206225365}, {"id": 1501, "seek": 713236, "start": 7155.4, "end": 7157.48, "text": " All of that is up is a python", "tokens": [51516, 1057, 295, 300, 307, 493, 307, 257, 38797, 51620], "temperature": 0.0, "avg_logprob": -0.17199546246489217, "compression_ratio": 1.7008196721311475, "no_speech_prob": 0.00013339675206225365}, {"id": 1502, "seek": 713236, "start": 7158.36, "end": 7160.5199999999995, "text": " The string that follows or a conch string that follows", "tokens": [51664, 440, 6798, 300, 10002, 420, 257, 416, 339, 6798, 300, 10002, 51772], "temperature": 0.0, "avg_logprob": -0.17199546246489217, "compression_ratio": 1.7008196721311475, "no_speech_prob": 0.00013339675206225365}, {"id": 1503, "seek": 716052, "start": 7160.52, "end": 7162.52, "text": " Um", "tokens": [50364, 3301, 50464], "temperature": 0.0, "avg_logprob": -0.18582687775293985, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0012063500471413136}, {"id": 1504, "seek": 716052, "start": 7162.76, "end": 7168.120000000001, "text": " Or similarly if you wanted to do some bash code right normally you'd have to put that bash code", "tokens": [50476, 1610, 14138, 498, 291, 1415, 281, 360, 512, 46183, 3089, 558, 5646, 291, 1116, 362, 281, 829, 300, 46183, 3089, 50744], "temperature": 0.0, "avg_logprob": -0.18582687775293985, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0012063500471413136}, {"id": 1505, "seek": 716052, "start": 7168.6, "end": 7170.200000000001, "text": " in a string", "tokens": [50768, 294, 257, 6798, 50848], "temperature": 0.0, "avg_logprob": -0.18582687775293985, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0012063500471413136}, {"id": 1506, "seek": 716052, "start": 7170.200000000001, "end": 7173.72, "text": " And then execute it but with the sub process macro you can just uh", "tokens": [50848, 400, 550, 14483, 309, 457, 365, 264, 1422, 1399, 18887, 291, 393, 445, 2232, 51024], "temperature": 0.0, "avg_logprob": -0.18582687775293985, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0012063500471413136}, {"id": 1507, "seek": 716052, "start": 7174.6, "end": 7177.64, "text": " Type in the exclamation point and it's uh, it's done", "tokens": [51068, 15576, 294, 264, 1624, 43233, 935, 293, 309, 311, 2232, 11, 309, 311, 1096, 51220], "temperature": 0.0, "avg_logprob": -0.18582687775293985, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0012063500471413136}, {"id": 1508, "seek": 716052, "start": 7178.76, "end": 7182.92, "text": " Um, or you can do this with python basically any of the things that you want to pass into dash c2", "tokens": [51276, 3301, 11, 420, 291, 393, 360, 341, 365, 38797, 1936, 604, 295, 264, 721, 300, 291, 528, 281, 1320, 666, 8240, 269, 17, 51484], "temperature": 0.0, "avg_logprob": -0.18582687775293985, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0012063500471413136}, {"id": 1509, "seek": 716052, "start": 7183.4800000000005, "end": 7185.4800000000005, "text": " Um, it'll work", "tokens": [51512, 3301, 11, 309, 603, 589, 51612], "temperature": 0.0, "avg_logprob": -0.18582687775293985, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0012063500471413136}, {"id": 1510, "seek": 718548, "start": 7186.2, "end": 7188.2, "text": " Okay", "tokens": [50400, 1033, 50500], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1511, "seek": 718548, "start": 7192.2, "end": 7194.2, "text": " I think uh, what did you", "tokens": [50700, 286, 519, 2232, 11, 437, 630, 291, 50800], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1512, "seek": 718548, "start": 7197.32, "end": 7200.04, "text": " Oh, yeah, there you go. Okay", "tokens": [50956, 876, 11, 1338, 11, 456, 291, 352, 13, 1033, 51092], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1513, "seek": 718548, "start": 7201.08, "end": 7202.2, "text": " Um", "tokens": [51144, 3301, 51200], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1514, "seek": 718548, "start": 7202.2, "end": 7204.2, "text": " Any questions on the sub process macros?", "tokens": [51200, 2639, 1651, 322, 264, 1422, 1399, 7912, 2635, 30, 51300], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1515, "seek": 718548, "start": 7204.759999999999, "end": 7206.759999999999, "text": " They're pretty simple", "tokens": [51328, 814, 434, 1238, 2199, 51428], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1516, "seek": 718548, "start": 7206.919999999999, "end": 7208.919999999999, "text": " That's why we did them first", "tokens": [51436, 663, 311, 983, 321, 630, 552, 700, 51536], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1517, "seek": 718548, "start": 7209.48, "end": 7210.839999999999, "text": " uh", "tokens": [51564, 2232, 51632], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1518, "seek": 718548, "start": 7210.839999999999, "end": 7212.04, "text": " The", "tokens": [51632, 440, 51692], "temperature": 0.0, "avg_logprob": -0.277250862121582, "compression_ratio": 1.2307692307692308, "no_speech_prob": 0.0012064788024872541}, {"id": 1519, "seek": 721204, "start": 7212.04, "end": 7215.72, "text": " Okay, so let's move on to the function macro. So these get a little more fun", "tokens": [50364, 1033, 11, 370, 718, 311, 1286, 322, 281, 264, 2445, 18887, 13, 407, 613, 483, 257, 707, 544, 1019, 50548], "temperature": 0.0, "avg_logprob": -0.15322542662667757, "compression_ratio": 1.6926406926406927, "no_speech_prob": 0.00011411389277782291}, {"id": 1520, "seek": 721204, "start": 7216.36, "end": 7218.12, "text": " um", "tokens": [50580, 1105, 50668], "temperature": 0.0, "avg_logprob": -0.15322542662667757, "compression_ratio": 1.6926406926406927, "no_speech_prob": 0.00011411389277782291}, {"id": 1521, "seek": 721204, "start": 7218.12, "end": 7219.16, "text": " So", "tokens": [50668, 407, 50720], "temperature": 0.0, "avg_logprob": -0.15322542662667757, "compression_ratio": 1.6926406926406927, "no_speech_prob": 0.00011411389277782291}, {"id": 1522, "seek": 721204, "start": 7219.16, "end": 7225.8, "text": " Macros don't require a special function definition. They only require a special function call. They modify how the function is called", "tokens": [50720, 5707, 2635, 500, 380, 3651, 257, 2121, 2445, 7123, 13, 814, 787, 3651, 257, 2121, 2445, 818, 13, 814, 16927, 577, 264, 2445, 307, 1219, 51052], "temperature": 0.0, "avg_logprob": -0.15322542662667757, "compression_ratio": 1.6926406926406927, "no_speech_prob": 0.00011411389277782291}, {"id": 1523, "seek": 721204, "start": 7226.44, "end": 7227.8, "text": " um", "tokens": [51084, 1105, 51152], "temperature": 0.0, "avg_logprob": -0.15322542662667757, "compression_ratio": 1.6926406926406927, "no_speech_prob": 0.00011411389277782291}, {"id": 1524, "seek": 721204, "start": 7227.8, "end": 7230.84, "text": " And uh, it's just normal python callables", "tokens": [51152, 400, 2232, 11, 309, 311, 445, 2710, 38797, 818, 2965, 51304], "temperature": 0.0, "avg_logprob": -0.15322542662667757, "compression_ratio": 1.6926406926406927, "no_speech_prob": 0.00011411389277782291}, {"id": 1525, "seek": 721204, "start": 7232.12, "end": 7238.92, "text": " What you do to call something as a macro is you stick an exclamation point between the name and the first the open parentheses", "tokens": [51368, 708, 291, 360, 281, 818, 746, 382, 257, 18887, 307, 291, 2897, 364, 1624, 43233, 935, 1296, 264, 1315, 293, 264, 700, 264, 1269, 34153, 51708], "temperature": 0.0, "avg_logprob": -0.15322542662667757, "compression_ratio": 1.6926406926406927, "no_speech_prob": 0.00011411389277782291}, {"id": 1526, "seek": 721204, "start": 7239.64, "end": 7240.92, "text": " um", "tokens": [51744, 1105, 51808], "temperature": 0.0, "avg_logprob": -0.15322542662667757, "compression_ratio": 1.6926406926406927, "no_speech_prob": 0.00011411389277782291}, {"id": 1527, "seek": 724092, "start": 7240.92, "end": 7246.76, "text": " And macro arguments are split on commas like normal functions. So here's a few simple examples", "tokens": [50364, 400, 18887, 12869, 366, 7472, 322, 800, 296, 411, 2710, 6828, 13, 407, 510, 311, 257, 1326, 2199, 5110, 50656], "temperature": 0.0, "avg_logprob": -0.15380920750079768, "compression_ratio": 1.7336244541484715, "no_speech_prob": 6.500909512396902e-05}, {"id": 1528, "seek": 724092, "start": 7247.32, "end": 7251.96, "text": " Uh, so if we had an f function if we wanted to call it as a macro with no arguments", "tokens": [50684, 4019, 11, 370, 498, 321, 632, 364, 283, 2445, 498, 321, 1415, 281, 818, 309, 382, 257, 18887, 365, 572, 12869, 50916], "temperature": 0.0, "avg_logprob": -0.15380920750079768, "compression_ratio": 1.7336244541484715, "no_speech_prob": 6.500909512396902e-05}, {"id": 1529, "seek": 724092, "start": 7252.04, "end": 7255.08, "text": " We would say f exclamation point parentheses", "tokens": [50920, 492, 576, 584, 283, 1624, 43233, 935, 34153, 51072], "temperature": 0.0, "avg_logprob": -0.15380920750079768, "compression_ratio": 1.7336244541484715, "no_speech_prob": 6.500909512396902e-05}, {"id": 1530, "seek": 724092, "start": 7256.12, "end": 7258.52, "text": " Your use dross this should look pretty familiar", "tokens": [51124, 2260, 764, 1224, 772, 341, 820, 574, 1238, 4963, 51244], "temperature": 0.0, "avg_logprob": -0.15380920750079768, "compression_ratio": 1.7336244541484715, "no_speech_prob": 6.500909512396902e-05}, {"id": 1531, "seek": 724092, "start": 7259.08, "end": 7260.36, "text": " um", "tokens": [51272, 1105, 51336], "temperature": 0.0, "avg_logprob": -0.15380920750079768, "compression_ratio": 1.7336244541484715, "no_speech_prob": 6.500909512396902e-05}, {"id": 1532, "seek": 724092, "start": 7260.36, "end": 7263.4800000000005, "text": " Uh, if you want to call it with a single argument, uh", "tokens": [51336, 4019, 11, 498, 291, 528, 281, 818, 309, 365, 257, 2167, 6770, 11, 2232, 51492], "temperature": 0.0, "avg_logprob": -0.15380920750079768, "compression_ratio": 1.7336244541484715, "no_speech_prob": 6.500909512396902e-05}, {"id": 1533, "seek": 724092, "start": 7264.2, "end": 7268.04, "text": " You would say you would do sort of the normal python single argument", "tokens": [51528, 509, 576, 584, 291, 576, 360, 1333, 295, 264, 2710, 38797, 2167, 6770, 51720], "temperature": 0.0, "avg_logprob": -0.15380920750079768, "compression_ratio": 1.7336244541484715, "no_speech_prob": 6.500909512396902e-05}, {"id": 1534, "seek": 726804, "start": 7268.76, "end": 7273.16, "text": " Uh methods or you can call it with multiple arguments splitting on those top-level commas", "tokens": [50400, 4019, 7150, 420, 291, 393, 818, 309, 365, 3866, 12869, 30348, 322, 729, 1192, 12, 12418, 800, 296, 50620], "temperature": 0.0, "avg_logprob": -0.2016219695409139, "compression_ratio": 1.6961325966850829, "no_speech_prob": 0.00048774262540973723}, {"id": 1535, "seek": 726804, "start": 7275.32, "end": 7277.32, "text": " Okay", "tokens": [50728, 1033, 50828], "temperature": 0.0, "avg_logprob": -0.2016219695409139, "compression_ratio": 1.6961325966850829, "no_speech_prob": 0.00048774262540973723}, {"id": 1536, "seek": 726804, "start": 7277.32, "end": 7279.32, "text": " um", "tokens": [50828, 1105, 50928], "temperature": 0.0, "avg_logprob": -0.2016219695409139, "compression_ratio": 1.6961325966850829, "no_speech_prob": 0.00048774262540973723}, {"id": 1537, "seek": 726804, "start": 7279.32, "end": 7284.28, "text": " How the function is defined uh determines what happens", "tokens": [50928, 1012, 264, 2445, 307, 7642, 2232, 24799, 437, 2314, 51176], "temperature": 0.0, "avg_logprob": -0.2016219695409139, "compression_ratio": 1.6961325966850829, "no_speech_prob": 0.00048774262540973723}, {"id": 1538, "seek": 726804, "start": 7284.84, "end": 7289.32, "text": " Or specifically how the function annotations what the function annotations look like", "tokens": [51204, 1610, 4682, 577, 264, 2445, 25339, 763, 437, 264, 2445, 25339, 763, 574, 411, 51428], "temperature": 0.0, "avg_logprob": -0.2016219695409139, "compression_ratio": 1.6961325966850829, "no_speech_prob": 0.00048774262540973723}, {"id": 1539, "seek": 726804, "start": 7289.88, "end": 7293.8, "text": " Determine what actually happens in the macro when you do a macro call", "tokens": [51456, 4237, 966, 533, 437, 767, 2314, 294, 264, 18887, 562, 291, 360, 257, 18887, 818, 51652], "temperature": 0.0, "avg_logprob": -0.2016219695409139, "compression_ratio": 1.6961325966850829, "no_speech_prob": 0.00048774262540973723}, {"id": 1540, "seek": 729380, "start": 7294.28, "end": 7297.96, "text": " Um, and that's matched up with each individual parameter", "tokens": [50388, 3301, 11, 293, 300, 311, 21447, 493, 365, 1184, 2609, 13075, 50572], "temperature": 0.0, "avg_logprob": -0.1747046214778249, "compression_ratio": 1.5612244897959184, "no_speech_prob": 0.0010646641021594405}, {"id": 1541, "seek": 729380, "start": 7298.6, "end": 7302.12, "text": " Uh, so here's an example. So say you have an identity", "tokens": [50604, 4019, 11, 370, 510, 311, 364, 1365, 13, 407, 584, 291, 362, 364, 6575, 50780], "temperature": 0.0, "avg_logprob": -0.1747046214778249, "compression_ratio": 1.5612244897959184, "no_speech_prob": 0.0010646641021594405}, {"id": 1542, "seek": 729380, "start": 7302.68, "end": 7308.04, "text": " Function that has its annotation for its x parameter set to string", "tokens": [50808, 11166, 882, 300, 575, 1080, 48654, 337, 1080, 2031, 13075, 992, 281, 6798, 51076], "temperature": 0.0, "avg_logprob": -0.1747046214778249, "compression_ratio": 1.5612244897959184, "no_speech_prob": 0.0010646641021594405}, {"id": 1543, "seek": 729380, "start": 7308.76, "end": 7310.76, "text": " That x that comes in", "tokens": [51112, 663, 2031, 300, 1487, 294, 51212], "temperature": 0.0, "avg_logprob": -0.1747046214778249, "compression_ratio": 1.5612244897959184, "no_speech_prob": 0.0010646641021594405}, {"id": 1544, "seek": 729380, "start": 7311.4800000000005, "end": 7314.68, "text": " When it's a macro call will always be a string", "tokens": [51248, 1133, 309, 311, 257, 18887, 818, 486, 1009, 312, 257, 6798, 51408], "temperature": 0.0, "avg_logprob": -0.1747046214778249, "compression_ratio": 1.5612244897959184, "no_speech_prob": 0.0010646641021594405}, {"id": 1545, "seek": 729380, "start": 7315.64, "end": 7319.0, "text": " Even if what's what's normally put into that is not a string", "tokens": [51456, 2754, 498, 437, 311, 437, 311, 5646, 829, 666, 300, 307, 406, 257, 6798, 51624], "temperature": 0.0, "avg_logprob": -0.1747046214778249, "compression_ratio": 1.5612244897959184, "no_speech_prob": 0.0010646641021594405}, {"id": 1546, "seek": 731900, "start": 7319.64, "end": 7323.64, "text": " So here's a here's a comparison between the the two different versions", "tokens": [50396, 407, 510, 311, 257, 510, 311, 257, 9660, 1296, 264, 264, 732, 819, 9606, 50596], "temperature": 0.0, "avg_logprob": -0.19236504049862133, "compression_ratio": 1.718232044198895, "no_speech_prob": 0.0007207687594927847}, {"id": 1547, "seek": 731900, "start": 7323.96, "end": 7328.28, "text": " So in the top we have the identity function. We call it with a string. We get a string back", "tokens": [50612, 407, 294, 264, 1192, 321, 362, 264, 6575, 2445, 13, 492, 818, 309, 365, 257, 6798, 13, 492, 483, 257, 6798, 646, 50828], "temperature": 0.0, "avg_logprob": -0.19236504049862133, "compression_ratio": 1.718232044198895, "no_speech_prob": 0.0007207687594927847}, {"id": 1548, "seek": 731900, "start": 7329.24, "end": 7331.96, "text": " On the bottom when we call it with", "tokens": [50876, 1282, 264, 2767, 562, 321, 818, 309, 365, 51012], "temperature": 0.0, "avg_logprob": -0.19236504049862133, "compression_ratio": 1.718232044198895, "no_speech_prob": 0.0007207687594927847}, {"id": 1549, "seek": 731900, "start": 7332.6, "end": 7334.6, "text": " um, the identity", "tokens": [51044, 1105, 11, 264, 6575, 51144], "temperature": 0.0, "avg_logprob": -0.19236504049862133, "compression_ratio": 1.718232044198895, "no_speech_prob": 0.0007207687594927847}, {"id": 1550, "seek": 731900, "start": 7334.6, "end": 7338.44, "text": " With a string, but as a macro call we get a", "tokens": [51144, 2022, 257, 6798, 11, 457, 382, 257, 18887, 818, 321, 483, 257, 51336], "temperature": 0.0, "avg_logprob": -0.19236504049862133, "compression_ratio": 1.718232044198895, "no_speech_prob": 0.0007207687594927847}, {"id": 1551, "seek": 731900, "start": 7339.24, "end": 7342.44, "text": " This the repper string effectively right returned", "tokens": [51376, 639, 264, 319, 3717, 6798, 8659, 558, 8752, 51536], "temperature": 0.0, "avg_logprob": -0.19236504049862133, "compression_ratio": 1.718232044198895, "no_speech_prob": 0.0007207687594927847}, {"id": 1552, "seek": 731900, "start": 7343.48, "end": 7344.76, "text": " um", "tokens": [51588, 1105, 51652], "temperature": 0.0, "avg_logprob": -0.19236504049862133, "compression_ratio": 1.718232044198895, "no_speech_prob": 0.0007207687594927847}, {"id": 1553, "seek": 734476, "start": 7344.76, "end": 7348.4400000000005, "text": " Similarly for ints in a normal python call you'd get an int back", "tokens": [50364, 13157, 337, 560, 82, 294, 257, 2710, 38797, 818, 291, 1116, 483, 364, 560, 646, 50548], "temperature": 0.0, "avg_logprob": -0.18500217390649112, "compression_ratio": 1.693121693121693, "no_speech_prob": 0.00019405102648306638}, {"id": 1554, "seek": 734476, "start": 7349.08, "end": 7351.24, "text": " In the identity you always get", "tokens": [50580, 682, 264, 6575, 291, 1009, 483, 50688], "temperature": 0.0, "avg_logprob": -0.18500217390649112, "compression_ratio": 1.693121693121693, "no_speech_prob": 0.00019405102648306638}, {"id": 1555, "seek": 734476, "start": 7351.8, "end": 7357.24, "text": " Uh, the or in the macro call you always get the string and same thing with the the others, right?", "tokens": [50716, 4019, 11, 264, 420, 294, 264, 18887, 818, 291, 1009, 483, 264, 6798, 293, 912, 551, 365, 264, 264, 2357, 11, 558, 30, 50988], "temperature": 0.0, "avg_logprob": -0.18500217390649112, "compression_ratio": 1.693121693121693, "no_speech_prob": 0.00019405102648306638}, {"id": 1556, "seek": 734476, "start": 7357.320000000001, "end": 7361.320000000001, "text": " You you get the string form of the argument rather than the", "tokens": [50992, 509, 291, 483, 264, 6798, 1254, 295, 264, 6770, 2831, 813, 264, 51192], "temperature": 0.0, "avg_logprob": -0.18500217390649112, "compression_ratio": 1.693121693121693, "no_speech_prob": 0.00019405102648306638}, {"id": 1557, "seek": 734476, "start": 7363.8, "end": 7366.280000000001, "text": " Rather than the the actual object itself", "tokens": [51316, 16571, 813, 264, 264, 3539, 2657, 2564, 51440], "temperature": 0.0, "avg_logprob": -0.18500217390649112, "compression_ratio": 1.693121693121693, "no_speech_prob": 0.00019405102648306638}, {"id": 1558, "seek": 734476, "start": 7369.400000000001, "end": 7371.400000000001, "text": " Each argument is stripped", "tokens": [51596, 6947, 6770, 307, 33221, 51696], "temperature": 0.0, "avg_logprob": -0.18500217390649112, "compression_ratio": 1.693121693121693, "no_speech_prob": 0.00019405102648306638}, {"id": 1559, "seek": 737140, "start": 7371.5599999999995, "end": 7373.5599999999995, "text": " This is basically done for consistency", "tokens": [50372, 639, 307, 1936, 1096, 337, 14416, 50472], "temperature": 0.0, "avg_logprob": -0.1808421766603148, "compression_ratio": 1.5260416666666667, "no_speech_prob": 0.0003249803849030286}, {"id": 1560, "seek": 737140, "start": 7374.44, "end": 7376.44, "text": " So that things like", "tokens": [50516, 407, 300, 721, 411, 50616], "temperature": 0.0, "avg_logprob": -0.1808421766603148, "compression_ratio": 1.5260416666666667, "no_speech_prob": 0.0003249803849030286}, {"id": 1561, "seek": 737140, "start": 7376.92, "end": 7381.799999999999, "text": " 42 and 42 don't end up being different. They're not really meant to be different. So", "tokens": [50640, 14034, 293, 14034, 500, 380, 917, 493, 885, 819, 13, 814, 434, 406, 534, 4140, 281, 312, 819, 13, 407, 50884], "temperature": 0.0, "avg_logprob": -0.1808421766603148, "compression_ratio": 1.5260416666666667, "no_speech_prob": 0.0003249803849030286}, {"id": 1562, "seek": 737140, "start": 7383.719999999999, "end": 7386.839999999999, "text": " In this string one, they end up being the same", "tokens": [50980, 682, 341, 6798, 472, 11, 436, 917, 493, 885, 264, 912, 51136], "temperature": 0.0, "avg_logprob": -0.1808421766603148, "compression_ratio": 1.5260416666666667, "no_speech_prob": 0.0003249803849030286}, {"id": 1563, "seek": 737140, "start": 7388.759999999999, "end": 7395.24, "text": " You feel free to like raise any questions or deep concerns or anything as we're going. Yeah, tom. Why?", "tokens": [51232, 509, 841, 1737, 281, 411, 5300, 604, 1651, 420, 2452, 7389, 420, 1340, 382, 321, 434, 516, 13, 865, 11, 2916, 13, 1545, 30, 51556], "temperature": 0.0, "avg_logprob": -0.1808421766603148, "compression_ratio": 1.5260416666666667, "no_speech_prob": 0.0003249803849030286}, {"id": 1564, "seek": 739524, "start": 7396.2, "end": 7398.2, "text": " Well, we're getting to why?", "tokens": [50412, 1042, 11, 321, 434, 1242, 281, 983, 30, 50512], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1565, "seek": 739524, "start": 7398.599999999999, "end": 7399.5599999999995, "text": " in", "tokens": [50532, 294, 50580], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1566, "seek": 739524, "start": 7399.5599999999995, "end": 7402.76, "text": " In context macros, which will see some cool things", "tokens": [50580, 682, 4319, 7912, 2635, 11, 597, 486, 536, 512, 1627, 721, 50740], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1567, "seek": 739524, "start": 7403.5599999999995, "end": 7405.0, "text": " um", "tokens": [50780, 1105, 50852], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1568, "seek": 739524, "start": 7405.0, "end": 7408.04, "text": " But it's the same it's it's the same underlying infrastructure for functions", "tokens": [50852, 583, 309, 311, 264, 912, 309, 311, 309, 311, 264, 912, 14217, 6896, 337, 6828, 51004], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1569, "seek": 739524, "start": 7409.16, "end": 7410.76, "text": " Okay", "tokens": [51060, 1033, 51140], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1570, "seek": 739524, "start": 7410.76, "end": 7412.76, "text": " Yeah, wow so consistent", "tokens": [51140, 865, 11, 6076, 370, 8398, 51240], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1571, "seek": 739524, "start": 7415.16, "end": 7419.16, "text": " Okay, so here's some like funny examples, uh that are really pretty bad", "tokens": [51360, 1033, 11, 370, 510, 311, 512, 411, 4074, 5110, 11, 2232, 300, 366, 534, 1238, 1578, 51560], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1572, "seek": 739524, "start": 7419.8, "end": 7424.76, "text": " Um, so if you macro call like import os obviously this is not valid python syntax", "tokens": [51592, 3301, 11, 370, 498, 291, 18887, 818, 411, 974, 3003, 2745, 341, 307, 406, 7363, 38797, 28431, 51840], "temperature": 0.0, "avg_logprob": -0.18289391537930103, "compression_ratio": 1.528888888888889, "no_speech_prob": 0.00075511634349823}, {"id": 1573, "seek": 742524, "start": 7425.24, "end": 7429.24, "text": " But in any way shape or form, but you can get that code back", "tokens": [50364, 583, 294, 604, 636, 3909, 420, 1254, 11, 457, 291, 393, 483, 300, 3089, 646, 50564], "temperature": 0.0, "avg_logprob": -0.18402417500813803, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00014422950334846973}, {"id": 1574, "seek": 742524, "start": 7430.2, "end": 7432.2, "text": " You could embed some c++", "tokens": [50612, 509, 727, 12240, 512, 269, 25472, 50712], "temperature": 0.0, "avg_logprob": -0.18402417500813803, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00014422950334846973}, {"id": 1575, "seek": 742524, "start": 7433.16, "end": 7435.16, "text": " Because I don't know why", "tokens": [50760, 1436, 286, 500, 380, 458, 983, 50860], "temperature": 0.0, "avg_logprob": -0.18402417500813803, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00014422950334846973}, {"id": 1576, "seek": 742524, "start": 7436.599999999999, "end": 7438.599999999999, "text": " I forget c++", "tokens": [50932, 286, 2870, 269, 25472, 51032], "temperature": 0.0, "avg_logprob": -0.18402417500813803, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00014422950334846973}, {"id": 1577, "seek": 742524, "start": 7438.92, "end": 7440.92, "text": " Wow, if only I could forget c++", "tokens": [51048, 3153, 11, 498, 787, 286, 727, 2870, 269, 25472, 51148], "temperature": 0.0, "avg_logprob": -0.18402417500813803, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00014422950334846973}, {"id": 1578, "seek": 742524, "start": 7445.0, "end": 7447.0, "text": " You don't have to type", "tokens": [51352, 509, 500, 380, 362, 281, 2010, 51452], "temperature": 0.0, "avg_logprob": -0.18402417500813803, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00014422950334846973}, {"id": 1579, "seek": 742524, "start": 7447.5599999999995, "end": 7452.92, "text": " No, you don't have to quote that it's not it's a way of like circumventing that quoting. Yeah", "tokens": [51480, 883, 11, 291, 500, 380, 362, 281, 6513, 300, 309, 311, 406, 309, 311, 257, 636, 295, 411, 7125, 2475, 278, 300, 41552, 13, 865, 51748], "temperature": 0.0, "avg_logprob": -0.18402417500813803, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00014422950334846973}, {"id": 1580, "seek": 745292, "start": 7453.8, "end": 7458.84, "text": " In this particular example, but there's more things that you can do than just strings. We just showed the strings here", "tokens": [50408, 682, 341, 1729, 1365, 11, 457, 456, 311, 544, 721, 300, 291, 393, 360, 813, 445, 13985, 13, 492, 445, 4712, 264, 13985, 510, 50660], "temperature": 0.0, "avg_logprob": -0.1041730489486303, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.0016739292768761516}, {"id": 1581, "seek": 745292, "start": 7460.04, "end": 7462.04, "text": " So if you said", "tokens": [50720, 407, 498, 291, 848, 50820], "temperature": 0.0, "avg_logprob": -0.1041730489486303, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.0016739292768761516}, {"id": 1582, "seek": 745292, "start": 7462.12, "end": 7467.16, "text": " You wanted this to be an ast there's there's kind of flag codes for this if you want to annotate it in different ways", "tokens": [50824, 509, 1415, 341, 281, 312, 364, 5357, 456, 311, 456, 311, 733, 295, 7166, 14211, 337, 341, 498, 291, 528, 281, 25339, 473, 309, 294, 819, 2098, 51076], "temperature": 0.0, "avg_logprob": -0.1041730489486303, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.0016739292768761516}, {"id": 1583, "seek": 745292, "start": 7467.64, "end": 7472.76, "text": " You can get back the ast of what you put in if it's python or conch code", "tokens": [51100, 509, 393, 483, 646, 264, 5357, 295, 437, 291, 829, 294, 498, 309, 311, 38797, 420, 416, 339, 3089, 51356], "temperature": 0.0, "avg_logprob": -0.1041730489486303, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.0016739292768761516}, {"id": 1584, "seek": 745292, "start": 7473.08, "end": 7478.92, "text": " So you can get that tree object back out, which is pretty pretty nice and useful if you're doing a lot of like", "tokens": [51372, 407, 291, 393, 483, 300, 4230, 2657, 646, 484, 11, 597, 307, 1238, 1238, 1481, 293, 4420, 498, 291, 434, 884, 257, 688, 295, 411, 51664], "temperature": 0.0, "avg_logprob": -0.1041730489486303, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.0016739292768761516}, {"id": 1585, "seek": 745292, "start": 7480.2, "end": 7482.04, "text": " a tree rewriting", "tokens": [51728, 257, 4230, 319, 19868, 51820], "temperature": 0.0, "avg_logprob": -0.1041730489486303, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.0016739292768761516}, {"id": 1586, "seek": 748204, "start": 7482.12, "end": 7485.96, "text": " You can get a code object out if you want to want to put in", "tokens": [50368, 509, 393, 483, 257, 3089, 2657, 484, 498, 291, 528, 281, 528, 281, 829, 294, 50560], "temperature": 0.0, "avg_logprob": -0.13667548019274145, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00091094512026757}, {"id": 1587, "seek": 748204, "start": 7487.32, "end": 7492.44, "text": " Exec or val or something or if you put in the c flag or sorry if you put in compile", "tokens": [50628, 17662, 420, 1323, 420, 746, 420, 498, 291, 829, 294, 264, 269, 7166, 420, 2597, 498, 291, 829, 294, 31413, 50884], "temperature": 0.0, "avg_logprob": -0.13667548019274145, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00091094512026757}, {"id": 1588, "seek": 748204, "start": 7493.48, "end": 7495.48, "text": " There's six of these so here the first three", "tokens": [50936, 821, 311, 2309, 295, 613, 370, 510, 264, 700, 1045, 51036], "temperature": 0.0, "avg_logprob": -0.13667548019274145, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00091094512026757}, {"id": 1589, "seek": 748204, "start": 7495.64, "end": 7502.76, "text": " The others are a val so that would just eval the argument as normal so that means that you basically could only put in python expressions", "tokens": [51044, 440, 2357, 366, 257, 1323, 370, 300, 576, 445, 1073, 304, 264, 6770, 382, 2710, 370, 300, 1355, 300, 291, 1936, 727, 787, 829, 294, 38797, 15277, 51400], "temperature": 0.0, "avg_logprob": -0.13667548019274145, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00091094512026757}, {"id": 1590, "seek": 748204, "start": 7504.04, "end": 7506.44, "text": " If you wanted to put in exec you could put in", "tokens": [51464, 759, 291, 1415, 281, 829, 294, 4454, 291, 727, 829, 294, 51584], "temperature": 0.0, "avg_logprob": -0.13667548019274145, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00091094512026757}, {"id": 1591, "seek": 748204, "start": 7507.08, "end": 7509.08, "text": " Basically anything that you wanted", "tokens": [51616, 8537, 1340, 300, 291, 1415, 51716], "temperature": 0.0, "avg_logprob": -0.13667548019274145, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00091094512026757}, {"id": 1592, "seek": 748204, "start": 7509.08, "end": 7511.56, "text": " Or you could say t and get the type back", "tokens": [51716, 1610, 291, 727, 584, 256, 293, 483, 264, 2010, 646, 51840], "temperature": 0.0, "avg_logprob": -0.13667548019274145, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00091094512026757}, {"id": 1593, "seek": 751204, "start": 7512.12, "end": 7513.24, "text": " um", "tokens": [50368, 1105, 50424], "temperature": 0.0, "avg_logprob": -0.17093303203582763, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0001071939550456591}, {"id": 1594, "seek": 751204, "start": 7513.24, "end": 7518.5199999999995, "text": " So and in theory this could be extended if there are other things out there that people would want to see done", "tokens": [50424, 407, 293, 294, 5261, 341, 727, 312, 10913, 498, 456, 366, 661, 721, 484, 456, 300, 561, 576, 528, 281, 536, 1096, 50688], "temperature": 0.0, "avg_logprob": -0.17093303203582763, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0001071939550456591}, {"id": 1595, "seek": 751204, "start": 7519.4, "end": 7522.5199999999995, "text": " But this is kind of this is what's available right now", "tokens": [50732, 583, 341, 307, 733, 295, 341, 307, 437, 311, 2435, 558, 586, 50888], "temperature": 0.0, "avg_logprob": -0.17093303203582763, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0001071939550456591}, {"id": 1596, "seek": 751204, "start": 7524.84, "end": 7526.84, "text": " Any questions on this stuff?", "tokens": [51004, 2639, 1651, 322, 341, 1507, 30, 51104], "temperature": 0.0, "avg_logprob": -0.17093303203582763, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0001071939550456591}, {"id": 1597, "seek": 751204, "start": 7528.68, "end": 7530.68, "text": " Okay", "tokens": [51196, 1033, 51296], "temperature": 0.0, "avg_logprob": -0.17093303203582763, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0001071939550456591}, {"id": 1598, "seek": 751204, "start": 7532.28, "end": 7534.92, "text": " Okay, so here's an example of some annotations", "tokens": [51376, 1033, 11, 370, 510, 311, 364, 1365, 295, 512, 25339, 763, 51508], "temperature": 0.0, "avg_logprob": -0.17093303203582763, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0001071939550456591}, {"id": 1599, "seek": 751204, "start": 7535.64, "end": 7538.44, "text": " Uh a simple function. So we're annotating with", "tokens": [51544, 4019, 257, 2199, 2445, 13, 407, 321, 434, 25339, 990, 365, 51684], "temperature": 0.0, "avg_logprob": -0.17093303203582763, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0001071939550456591}, {"id": 1600, "seek": 753844, "start": 7539.4, "end": 7542.599999999999, "text": " This the first argument by default since it's got no annotation", "tokens": [50412, 639, 264, 700, 6770, 538, 7576, 1670, 309, 311, 658, 572, 48654, 50572], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1601, "seek": 753844, "start": 7542.679999999999, "end": 7544.679999999999, "text": " We'll just come back as a string", "tokens": [50576, 492, 603, 445, 808, 646, 382, 257, 6798, 50676], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1602, "seek": 753844, "start": 7544.679999999999, "end": 7547.32, "text": " The second one will be an ast object", "tokens": [50676, 440, 1150, 472, 486, 312, 364, 5357, 2657, 50808], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1603, "seek": 753844, "start": 7547.719999999999, "end": 7552.599999999999, "text": " And the third one will be a code object because we're passing in compile the built-in compile function", "tokens": [50828, 400, 264, 2636, 472, 486, 312, 257, 3089, 2657, 570, 321, 434, 8437, 294, 31413, 264, 3094, 12, 259, 31413, 2445, 51072], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1604, "seek": 753844, "start": 7553.32, "end": 7554.36, "text": " um", "tokens": [51108, 1105, 51160], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1605, "seek": 753844, "start": 7554.36, "end": 7556.36, "text": " If we do a macro call", "tokens": [51160, 759, 321, 360, 257, 18887, 818, 51260], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1606, "seek": 753844, "start": 7561.16, "end": 7562.679999999999, "text": " Yep", "tokens": [51500, 7010, 51576], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1607, "seek": 753844, "start": 7562.679999999999, "end": 7564.679999999999, "text": " See a lot of pensive people", "tokens": [51576, 3008, 257, 688, 295, 280, 2953, 561, 51676], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1608, "seek": 753844, "start": 7565.32, "end": 7567.32, "text": " head's exploding", "tokens": [51708, 1378, 311, 35175, 51808], "temperature": 0.0, "avg_logprob": -0.14637700442610116, "compression_ratio": 1.5270935960591132, "no_speech_prob": 0.0006562159396708012}, {"id": 1609, "seek": 756732, "start": 7567.4, "end": 7569.4, "text": " Okay", "tokens": [50368, 1033, 50468], "temperature": 0.0, "avg_logprob": -0.18197158865026525, "compression_ratio": 1.5644171779141105, "no_speech_prob": 0.000253120408160612}, {"id": 1610, "seek": 756732, "start": 7571.08, "end": 7576.84, "text": " Uh of this one. Yeah, so just call it with anything. Um, or any python anything excellent point", "tokens": [50552, 4019, 295, 341, 472, 13, 865, 11, 370, 445, 818, 309, 365, 1340, 13, 3301, 11, 420, 604, 38797, 1340, 7103, 935, 50840], "temperature": 0.0, "avg_logprob": -0.18197158865026525, "compression_ratio": 1.5644171779141105, "no_speech_prob": 0.000253120408160612}, {"id": 1611, "seek": 756732, "start": 7581.96, "end": 7586.92, "text": " Yep, uh, I don't know like three plus five I guess I don't", "tokens": [51096, 7010, 11, 2232, 11, 286, 500, 380, 458, 411, 1045, 1804, 1732, 286, 2041, 286, 500, 380, 51344], "temperature": 0.0, "avg_logprob": -0.18197158865026525, "compression_ratio": 1.5644171779141105, "no_speech_prob": 0.000253120408160612}, {"id": 1612, "seek": 756732, "start": 7590.04, "end": 7596.28, "text": " Oh, yeah, uh, I think you have to do a new line after the three plus five right or after the os", "tokens": [51500, 876, 11, 1338, 11, 2232, 11, 286, 519, 291, 362, 281, 360, 257, 777, 1622, 934, 264, 1045, 1804, 1732, 558, 420, 934, 264, 3003, 51812], "temperature": 0.0, "avg_logprob": -0.18197158865026525, "compression_ratio": 1.5644171779141105, "no_speech_prob": 0.000253120408160612}, {"id": 1613, "seek": 759732, "start": 7597.799999999999, "end": 7599.799999999999, "text": " I", "tokens": [50388, 286, 50488], "temperature": 0.0, "avg_logprob": -0.22555127957972085, "compression_ratio": 1.1414141414141414, "no_speech_prob": 0.00030524106114171445}, {"id": 1614, "seek": 759732, "start": 7601.48, "end": 7603.48, "text": " Think it's after the os because you did a statement", "tokens": [50572, 6557, 309, 311, 934, 264, 3003, 570, 291, 630, 257, 5629, 50672], "temperature": 0.0, "avg_logprob": -0.22555127957972085, "compression_ratio": 1.1414141414141414, "no_speech_prob": 0.00030524106114171445}, {"id": 1615, "seek": 759732, "start": 7607.719999999999, "end": 7612.04, "text": " No, no, no like a literal new line", "tokens": [50884, 883, 11, 572, 11, 572, 411, 257, 20411, 777, 1622, 51100], "temperature": 0.0, "avg_logprob": -0.22555127957972085, "compression_ratio": 1.1414141414141414, "no_speech_prob": 0.00030524106114171445}, {"id": 1616, "seek": 759732, "start": 7615.5599999999995, "end": 7617.5599999999995, "text": " I'll do it. It's too, uh", "tokens": [51276, 286, 603, 360, 309, 13, 467, 311, 886, 11, 2232, 51376], "temperature": 0.0, "avg_logprob": -0.22555127957972085, "compression_ratio": 1.1414141414141414, "no_speech_prob": 0.00030524106114171445}, {"id": 1617, "seek": 762732, "start": 7628.12, "end": 7630.12, "text": " No, I guess not string", "tokens": [50404, 883, 11, 286, 2041, 406, 6798, 50504], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1618, "seek": 762732, "start": 7632.759999999999, "end": 7634.759999999999, "text": " Interesting, uh", "tokens": [50636, 14711, 11, 2232, 50736], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1619, "seek": 762732, "start": 7636.2, "end": 7640.759999999999, "text": " I thought there was an example here. All right. Well, this is not working right", "tokens": [50808, 286, 1194, 456, 390, 364, 1365, 510, 13, 1057, 558, 13, 1042, 11, 341, 307, 406, 1364, 558, 51036], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1620, "seek": 762732, "start": 7641.719999999999, "end": 7644.04, "text": " Now, I don't know what the this should", "tokens": [51084, 823, 11, 286, 500, 380, 458, 437, 264, 341, 820, 51200], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1621, "seek": 762732, "start": 7644.92, "end": 7646.759999999999, "text": " Know for their code", "tokens": [51244, 10265, 337, 641, 3089, 51336], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1622, "seek": 762732, "start": 7646.759999999999, "end": 7648.759999999999, "text": " Okay, well, it's not it's failing to", "tokens": [51336, 1033, 11, 731, 11, 309, 311, 406, 309, 311, 18223, 281, 51436], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1623, "seek": 762732, "start": 7649.96, "end": 7651.96, "text": " Compile one of these things so", "tokens": [51496, 6620, 794, 472, 295, 613, 721, 370, 51596], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1624, "seek": 762732, "start": 7652.599999999999, "end": 7654.599999999999, "text": " um", "tokens": [51628, 1105, 51728], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1625, "seek": 762732, "start": 7655.16, "end": 7657.16, "text": " Let's maybe just do this", "tokens": [51756, 961, 311, 1310, 445, 360, 341, 51856], "temperature": 0.0, "avg_logprob": -0.15692456189323875, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0015245851827785373}, {"id": 1626, "seek": 765732, "start": 7657.32, "end": 7659.32, "text": " Uh", "tokens": [50364, 4019, 50464], "temperature": 0.0, "avg_logprob": -0.25609395163399834, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.0005355998873710632}, {"id": 1627, "seek": 765732, "start": 7662.44, "end": 7664.44, "text": " No", "tokens": [50620, 883, 50720], "temperature": 0.0, "avg_logprob": -0.25609395163399834, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.0005355998873710632}, {"id": 1628, "seek": 765732, "start": 7667.0, "end": 7673.799999999999, "text": " Yeah, I don't know. It's uh, what the problem is I'm sorry. We'll have to figure it out afterwards. So, um", "tokens": [50848, 865, 11, 286, 500, 380, 458, 13, 467, 311, 2232, 11, 437, 264, 1154, 307, 286, 478, 2597, 13, 492, 603, 362, 281, 2573, 309, 484, 10543, 13, 407, 11, 1105, 51188], "temperature": 0.0, "avg_logprob": -0.25609395163399834, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.0005355998873710632}, {"id": 1629, "seek": 765732, "start": 7674.92, "end": 7676.92, "text": " We have a parser error. All right", "tokens": [51244, 492, 362, 257, 21156, 260, 6713, 13, 1057, 558, 51344], "temperature": 0.0, "avg_logprob": -0.25609395163399834, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.0005355998873710632}, {"id": 1630, "seek": 765732, "start": 7678.759999999999, "end": 7680.679999999999, "text": " Um", "tokens": [51436, 3301, 51532], "temperature": 0.0, "avg_logprob": -0.25609395163399834, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.0005355998873710632}, {"id": 1631, "seek": 765732, "start": 7680.679999999999, "end": 7682.679999999999, "text": " Okay, sorry about that", "tokens": [51532, 1033, 11, 2597, 466, 300, 51632], "temperature": 0.0, "avg_logprob": -0.25609395163399834, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.0005355998873710632}, {"id": 1632, "seek": 765732, "start": 7683.08, "end": 7685.08, "text": " uh, so", "tokens": [51652, 2232, 11, 370, 51752], "temperature": 0.0, "avg_logprob": -0.25609395163399834, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.0005355998873710632}, {"id": 1633, "seek": 765732, "start": 7685.08, "end": 7687.08, "text": " the", "tokens": [51752, 264, 51852], "temperature": 0.0, "avg_logprob": -0.25609395163399834, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.0005355998873710632}, {"id": 1634, "seek": 768708, "start": 7687.08, "end": 7691.8, "text": " Next the the last bit of macros that we'll get to are context macros. So these use", "tokens": [50364, 3087, 264, 264, 1036, 857, 295, 7912, 2635, 300, 321, 603, 483, 281, 366, 4319, 7912, 2635, 13, 407, 613, 764, 50600], "temperature": 0.0, "avg_logprob": -0.1968196668122944, "compression_ratio": 1.6350710900473933, "no_speech_prob": 6.107876833993942e-05}, {"id": 1635, "seek": 768708, "start": 7692.36, "end": 7698.36, "text": " The exclamation point right after the with uh word so you can use with exclamation point", "tokens": [50628, 440, 1624, 43233, 935, 558, 934, 264, 365, 2232, 1349, 370, 291, 393, 764, 365, 1624, 43233, 935, 50928], "temperature": 0.0, "avg_logprob": -0.1968196668122944, "compression_ratio": 1.6350710900473933, "no_speech_prob": 6.107876833993942e-05}, {"id": 1636, "seek": 768708, "start": 7698.84, "end": 7701.64, "text": " um, and then everything after the colon will be", "tokens": [50952, 1105, 11, 293, 550, 1203, 934, 264, 8255, 486, 312, 51092], "temperature": 0.0, "avg_logprob": -0.1968196668122944, "compression_ratio": 1.6350710900473933, "no_speech_prob": 6.107876833993942e-05}, {"id": 1637, "seek": 768708, "start": 7702.36, "end": 7704.36, "text": " captured, uh", "tokens": [51128, 11828, 11, 2232, 51228], "temperature": 0.0, "avg_logprob": -0.1968196668122944, "compression_ratio": 1.6350710900473933, "no_speech_prob": 6.107876833993942e-05}, {"id": 1638, "seek": 768708, "start": 7704.76, "end": 7708.44, "text": " Like it was in a normal uh with semen. So this provides both", "tokens": [51248, 1743, 309, 390, 294, 257, 2710, 2232, 365, 369, 2558, 13, 407, 341, 6417, 1293, 51432], "temperature": 0.0, "avg_logprob": -0.1968196668122944, "compression_ratio": 1.6350710900473933, "no_speech_prob": 6.107876833993942e-05}, {"id": 1639, "seek": 768708, "start": 7709.16, "end": 7711.32, "text": " Named blocks and anonymous blocks", "tokens": [51468, 426, 3475, 8474, 293, 24932, 8474, 51576], "temperature": 0.0, "avg_logprob": -0.1968196668122944, "compression_ratio": 1.6350710900473933, "no_speech_prob": 6.107876833993942e-05}, {"id": 1640, "seek": 768708, "start": 7711.96, "end": 7713.96, "text": " um, so if you say", "tokens": [51608, 1105, 11, 370, 498, 291, 584, 51708], "temperature": 0.0, "avg_logprob": -0.1968196668122944, "compression_ratio": 1.6350710900473933, "no_speech_prob": 6.107876833993942e-05}, {"id": 1641, "seek": 771396, "start": 7713.96, "end": 7720.68, "text": " This isn't going to work because there's no x to enter but you say with x equals 10 print y this would come", "tokens": [50364, 639, 1943, 380, 516, 281, 589, 570, 456, 311, 572, 2031, 281, 3242, 457, 291, 584, 365, 2031, 6915, 1266, 4482, 288, 341, 576, 808, 50700], "temperature": 0.0, "avg_logprob": -0.2049896820731785, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.0011156541295349598}, {"id": 1642, "seek": 771396, "start": 7721.4, "end": 7724.76, "text": " Uh come back as us as a string", "tokens": [50736, 4019, 808, 646, 382, 505, 382, 257, 6798, 50904], "temperature": 0.0, "avg_logprob": -0.2049896820731785, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.0011156541295349598}, {"id": 1643, "seek": 771396, "start": 7725.72, "end": 7731.08, "text": " Um, and what this can be thought of really is is doing the follow. So you can think of this as saying", "tokens": [50952, 3301, 11, 293, 437, 341, 393, 312, 1194, 295, 534, 307, 307, 884, 264, 1524, 13, 407, 291, 393, 519, 295, 341, 382, 1566, 51220], "temperature": 0.0, "avg_logprob": -0.2049896820731785, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.0011156541295349598}, {"id": 1644, "seek": 771396, "start": 7731.72, "end": 7738.92, "text": " Uh, whatever your context is x dot macro block equals the string of the code in the block", "tokens": [51252, 4019, 11, 2035, 428, 4319, 307, 2031, 5893, 18887, 3461, 6915, 264, 6798, 295, 264, 3089, 294, 264, 3461, 51612], "temperature": 0.0, "avg_logprob": -0.2049896820731785, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.0011156541295349598}, {"id": 1645, "seek": 771396, "start": 7739.4800000000005, "end": 7740.68, "text": " de-indented", "tokens": [51640, 368, 12, 471, 6003, 51700], "temperature": 0.0, "avg_logprob": -0.2049896820731785, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.0011156541295349598}, {"id": 1646, "seek": 774068, "start": 7741.400000000001, "end": 7748.04, "text": " And then assigning the locals and globals to to vary up to attributes of that as well and then passing for the actual block", "tokens": [50400, 400, 550, 49602, 264, 23335, 293, 16125, 1124, 281, 281, 10559, 493, 281, 17212, 295, 300, 382, 731, 293, 550, 8437, 337, 264, 3539, 3461, 50732], "temperature": 0.0, "avg_logprob": -0.1307512160834916, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.00013980975199956447}, {"id": 1647, "seek": 774068, "start": 7749.0, "end": 7751.0, "text": " Um, so it's a bit of code rewriting", "tokens": [50780, 3301, 11, 370, 309, 311, 257, 857, 295, 3089, 319, 19868, 50880], "temperature": 0.0, "avg_logprob": -0.1307512160834916, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.00013980975199956447}, {"id": 1648, "seek": 774068, "start": 7751.8, "end": 7753.8, "text": " macro block is de-indented", "tokens": [50920, 18887, 3461, 307, 368, 12, 471, 6003, 51020], "temperature": 0.0, "avg_logprob": -0.1307512160834916, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.00013980975199956447}, {"id": 1649, "seek": 774068, "start": 7754.84, "end": 7760.04, "text": " And uh these attributes are set before the enter method is called", "tokens": [51072, 400, 2232, 613, 17212, 366, 992, 949, 264, 3242, 3170, 307, 1219, 51332], "temperature": 0.0, "avg_logprob": -0.1307512160834916, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.00013980975199956447}, {"id": 1650, "seek": 774068, "start": 7761.4800000000005, "end": 7765.72, "text": " But they're not cleaned up on the exit method. So you can do that if you want to uh, but they live around", "tokens": [51404, 583, 436, 434, 406, 16146, 493, 322, 264, 11043, 3170, 13, 407, 291, 393, 360, 300, 498, 291, 528, 281, 2232, 11, 457, 436, 1621, 926, 51616], "temperature": 0.0, "avg_logprob": -0.1307512160834916, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.00013980975199956447}, {"id": 1651, "seek": 774068, "start": 7765.8, "end": 7767.8, "text": " They stay around and live if you if you need them", "tokens": [51620, 814, 1754, 926, 293, 1621, 498, 291, 498, 291, 643, 552, 51720], "temperature": 0.0, "avg_logprob": -0.1307512160834916, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.00013980975199956447}, {"id": 1652, "seek": 774068, "start": 7768.6, "end": 7769.8, "text": " um", "tokens": [51760, 1105, 51820], "temperature": 0.0, "avg_logprob": -0.1307512160834916, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.00013980975199956447}, {"id": 1653, "seek": 776980, "start": 7769.8, "end": 7773.400000000001, "text": " Like with functions by default the contents of the block are returned as a string", "tokens": [50364, 1743, 365, 6828, 538, 7576, 264, 15768, 295, 264, 3461, 366, 8752, 382, 257, 6798, 50544], "temperature": 0.0, "avg_logprob": -0.13206838824085354, "compression_ratio": 1.5955555555555556, "no_speech_prob": 0.00014424411347135901}, {"id": 1654, "seek": 776980, "start": 7774.04, "end": 7779.96, "text": " Um, however, they don't need to be they could be any of the other special annotations that we saw before", "tokens": [50576, 3301, 11, 4461, 11, 436, 500, 380, 643, 281, 312, 436, 727, 312, 604, 295, 264, 661, 2121, 25339, 763, 300, 321, 1866, 949, 50872], "temperature": 0.0, "avg_logprob": -0.13206838824085354, "compression_ratio": 1.5955555555555556, "no_speech_prob": 0.00014424411347135901}, {"id": 1655, "seek": 776980, "start": 7780.52, "end": 7781.8, "text": " um", "tokens": [50900, 1105, 50964], "temperature": 0.0, "avg_logprob": -0.13206838824085354, "compression_ratio": 1.5955555555555556, "no_speech_prob": 0.00014424411347135901}, {"id": 1656, "seek": 776980, "start": 7781.8, "end": 7785.64, "text": " And that's just lives is the this conch block", "tokens": [50964, 400, 300, 311, 445, 2909, 307, 264, 341, 416, 339, 3461, 51156], "temperature": 0.0, "avg_logprob": -0.13206838824085354, "compression_ratio": 1.5955555555555556, "no_speech_prob": 0.00014424411347135901}, {"id": 1657, "seek": 776980, "start": 7786.360000000001, "end": 7791.08, "text": " Attribute on the context manager. So that's how it knows what to look up what type to convert it to", "tokens": [51192, 7298, 2024, 1169, 322, 264, 4319, 6598, 13, 407, 300, 311, 577, 309, 3255, 437, 281, 574, 493, 437, 2010, 281, 7620, 309, 281, 51428], "temperature": 0.0, "avg_logprob": -0.13206838824085354, "compression_ratio": 1.5955555555555556, "no_speech_prob": 0.00014424411347135901}, {"id": 1658, "seek": 776980, "start": 7791.88, "end": 7793.4800000000005, "text": " um", "tokens": [51468, 1105, 51548], "temperature": 0.0, "avg_logprob": -0.13206838824085354, "compression_ratio": 1.5955555555555556, "no_speech_prob": 0.00014424411347135901}, {"id": 1659, "seek": 776980, "start": 7793.4800000000005, "end": 7795.16, "text": " So here's an example", "tokens": [51548, 407, 510, 311, 364, 1365, 51632], "temperature": 0.0, "avg_logprob": -0.13206838824085354, "compression_ratio": 1.5955555555555556, "no_speech_prob": 0.00014424411347135901}, {"id": 1660, "seek": 779516, "start": 7795.72, "end": 7800.2, "text": " And and this is gets to the use case a bit. So we can write a simple", "tokens": [50392, 400, 293, 341, 307, 2170, 281, 264, 764, 1389, 257, 857, 13, 407, 321, 393, 2464, 257, 2199, 50616], "temperature": 0.0, "avg_logprob": -0.17045680454799106, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.00021316240599844605}, {"id": 1661, "seek": 779516, "start": 7800.84, "end": 7802.36, "text": " xml block", "tokens": [50648, 2031, 15480, 3461, 50724], "temperature": 0.0, "avg_logprob": -0.17045680454799106, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.00021316240599844605}, {"id": 1662, "seek": 779516, "start": 7802.36, "end": 7806.12, "text": " So if we say we're just going to be pretty explicit. You don't need the comments, obviously", "tokens": [50724, 407, 498, 321, 584, 321, 434, 445, 516, 281, 312, 1238, 13691, 13, 509, 500, 380, 643, 264, 3053, 11, 2745, 50912], "temperature": 0.0, "avg_logprob": -0.17045680454799106, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.00021316240599844605}, {"id": 1663, "seek": 779516, "start": 7806.68, "end": 7808.04, "text": " um", "tokens": [50940, 1105, 51008], "temperature": 0.0, "avg_logprob": -0.17045680454799106, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.00021316240599844605}, {"id": 1664, "seek": 779516, "start": 7808.04, "end": 7810.2, "text": " So we say it's going to come back as a string", "tokens": [51008, 407, 321, 584, 309, 311, 516, 281, 808, 646, 382, 257, 6798, 51116], "temperature": 0.0, "avg_logprob": -0.17045680454799106, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.00021316240599844605}, {"id": 1665, "seek": 779516, "start": 7810.76, "end": 7814.28, "text": " We write an enter method that takes", "tokens": [51144, 492, 2464, 364, 3242, 3170, 300, 2516, 51320], "temperature": 0.0, "avg_logprob": -0.17045680454799106, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.00021316240599844605}, {"id": 1666, "seek": 779516, "start": 7815.08, "end": 7818.04, "text": " the contents of the block as a string", "tokens": [51360, 264, 15768, 295, 264, 3461, 382, 257, 6798, 51508], "temperature": 0.0, "avg_logprob": -0.17045680454799106, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.00021316240599844605}, {"id": 1667, "seek": 779516, "start": 7818.68, "end": 7824.04, "text": " And we'll parse them into an element tree an xml element tree and return that", "tokens": [51540, 400, 321, 603, 48377, 552, 666, 364, 4478, 4230, 364, 2031, 15480, 4478, 4230, 293, 2736, 300, 51808], "temperature": 0.0, "avg_logprob": -0.17045680454799106, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.00021316240599844605}, {"id": 1668, "seek": 782404, "start": 7824.5199999999995, "end": 7828.04, "text": " um as the uh as the object in the context manager", "tokens": [50388, 1105, 382, 264, 2232, 382, 264, 2657, 294, 264, 4319, 6598, 50564], "temperature": 0.0, "avg_logprob": -0.1769443130493164, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.00041722701280377805}, {"id": 1669, "seek": 782404, "start": 7828.76, "end": 7834.2, "text": " Um, then when it exits, we're just going to clean up those things the things that we we had before", "tokens": [50600, 3301, 11, 550, 562, 309, 44183, 11, 321, 434, 445, 516, 281, 2541, 493, 729, 721, 264, 721, 300, 321, 321, 632, 949, 50872], "temperature": 0.0, "avg_logprob": -0.1769443130493164, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.00041722701280377805}, {"id": 1670, "seek": 782404, "start": 7841.48, "end": 7843.48, "text": " Yeah, I think you need this star whatever", "tokens": [51236, 865, 11, 286, 519, 291, 643, 341, 3543, 2035, 51336], "temperature": 0.0, "avg_logprob": -0.1769443130493164, "compression_ratio": 1.4393939393939394, "no_speech_prob": 0.00041722701280377805}, {"id": 1671, "seek": 785404, "start": 7854.92, "end": 7857.16, "text": " Macro locals. Yeah", "tokens": [50408, 5707, 340, 23335, 13, 865, 50520], "temperature": 0.0, "avg_logprob": -0.25264313220977785, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.002182534197345376}, {"id": 1672, "seek": 785404, "start": 7859.4, "end": 7864.28, "text": " Okay, and then you can use this. Oh, it's cutting it off a bit, but um", "tokens": [50632, 1033, 11, 293, 550, 291, 393, 764, 341, 13, 876, 11, 309, 311, 6492, 309, 766, 257, 857, 11, 457, 1105, 50876], "temperature": 0.0, "avg_logprob": -0.25264313220977785, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.002182534197345376}, {"id": 1673, "seek": 785404, "start": 7865.4, "end": 7867.64, "text": " Uh by saying with exclamation point", "tokens": [50932, 4019, 538, 1566, 365, 1624, 43233, 935, 51044], "temperature": 0.0, "avg_logprob": -0.25264313220977785, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.002182534197345376}, {"id": 1674, "seek": 785404, "start": 7868.5199999999995, "end": 7871.16, "text": " xml block a new object as tree", "tokens": [51088, 2031, 15480, 3461, 257, 777, 2657, 382, 4230, 51220], "temperature": 0.0, "avg_logprob": -0.25264313220977785, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.002182534197345376}, {"id": 1675, "seek": 785404, "start": 7872.12, "end": 7874.28, "text": " colon and then everything", "tokens": [51268, 8255, 293, 550, 1203, 51376], "temperature": 0.0, "avg_logprob": -0.25264313220977785, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.002182534197345376}, {"id": 1676, "seek": 785404, "start": 7875.56, "end": 7880.68, "text": " Um, you can just do a short one. So just do like you could even just do yeah you", "tokens": [51440, 3301, 11, 291, 393, 445, 360, 257, 2099, 472, 13, 407, 445, 360, 411, 291, 727, 754, 445, 360, 1338, 291, 51696], "temperature": 0.0, "avg_logprob": -0.25264313220977785, "compression_ratio": 1.4943181818181819, "no_speech_prob": 0.002182534197345376}, {"id": 1677, "seek": 788068, "start": 7881.240000000001, "end": 7883.240000000001, "text": " Uh", "tokens": [50392, 4019, 50492], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1678, "seek": 788068, "start": 7883.64, "end": 7885.64, "text": " And then just close out the note I think", "tokens": [50512, 400, 550, 445, 1998, 484, 264, 3637, 286, 519, 50612], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1679, "seek": 788068, "start": 7886.4400000000005, "end": 7888.4400000000005, "text": " um", "tokens": [50652, 1105, 50752], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1680, "seek": 788068, "start": 7889.4800000000005, "end": 7892.280000000001, "text": " And now if we we can inspect the tree object", "tokens": [50804, 400, 586, 498, 321, 321, 393, 15018, 264, 4230, 2657, 50944], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1681, "seek": 788068, "start": 7893.0, "end": 7895.0, "text": " tree is an instance of", "tokens": [50980, 4230, 307, 364, 5197, 295, 51080], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1682, "seek": 788068, "start": 7895.64, "end": 7897.96, "text": " So I think what is it if you do tree tag?", "tokens": [51112, 407, 286, 519, 437, 307, 309, 498, 291, 360, 4230, 6162, 30, 51228], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1683, "seek": 788068, "start": 7899.240000000001, "end": 7901.64, "text": " Um, that gets the note so it parses", "tokens": [51292, 3301, 11, 300, 2170, 264, 3637, 370, 309, 21156, 279, 51412], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1684, "seek": 788068, "start": 7902.4400000000005, "end": 7904.68, "text": " That x xml. So this lets you", "tokens": [51452, 663, 2031, 2031, 15480, 13, 407, 341, 6653, 291, 51564], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1685, "seek": 788068, "start": 7905.400000000001, "end": 7910.280000000001, "text": " write documents and other languages right in conch and then do whatever you want with them", "tokens": [51600, 2464, 8512, 293, 661, 8650, 558, 294, 416, 339, 293, 550, 360, 2035, 291, 528, 365, 552, 51844], "temperature": 0.0, "avg_logprob": -0.1821533941453503, "compression_ratio": 1.6, "no_speech_prob": 0.00019409564265515655}, {"id": 1686, "seek": 791068, "start": 7911.64, "end": 7916.280000000001, "text": " Which is somewhat insane, but actually kind of useful occasionally", "tokens": [50412, 3013, 307, 8344, 10838, 11, 457, 767, 733, 295, 4420, 16895, 50644], "temperature": 0.0, "avg_logprob": -0.14984320458911715, "compression_ratio": 1.5638766519823788, "no_speech_prob": 5.224397682468407e-05}, {"id": 1687, "seek": 791068, "start": 7917.72, "end": 7924.12, "text": " And you saw like writing that context macro macro object that class was actually pretty simple", "tokens": [50716, 400, 291, 1866, 411, 3579, 300, 4319, 18887, 18887, 2657, 300, 1508, 390, 767, 1238, 2199, 51036], "temperature": 0.0, "avg_logprob": -0.14984320458911715, "compression_ratio": 1.5638766519823788, "no_speech_prob": 5.224397682468407e-05}, {"id": 1688, "seek": 791068, "start": 7925.16, "end": 7927.240000000001, "text": " It didn't take a lot of lines of code to do that", "tokens": [51088, 467, 994, 380, 747, 257, 688, 295, 3876, 295, 3089, 281, 360, 300, 51192], "temperature": 0.0, "avg_logprob": -0.14984320458911715, "compression_ratio": 1.5638766519823788, "no_speech_prob": 5.224397682468407e-05}, {"id": 1689, "seek": 791068, "start": 7929.88, "end": 7932.200000000001, "text": " So yeah, that's kind of the", "tokens": [51324, 407, 1338, 11, 300, 311, 733, 295, 264, 51440], "temperature": 0.0, "avg_logprob": -0.14984320458911715, "compression_ratio": 1.5638766519823788, "no_speech_prob": 5.224397682468407e-05}, {"id": 1690, "seek": 791068, "start": 7933.4800000000005, "end": 7935.4800000000005, "text": " Scenario there", "tokens": [51504, 2747, 49120, 456, 51604], "temperature": 0.0, "avg_logprob": -0.14984320458911715, "compression_ratio": 1.5638766519823788, "no_speech_prob": 5.224397682468407e-05}, {"id": 1691, "seek": 791068, "start": 7935.4800000000005, "end": 7940.6, "text": " And hopefully that answers at least partially the use case question. Okay. So we have a few exercises", "tokens": [51604, 400, 4696, 300, 6338, 412, 1935, 18886, 264, 764, 1389, 1168, 13, 1033, 13, 407, 321, 362, 257, 1326, 11900, 51860], "temperature": 0.0, "avg_logprob": -0.14984320458911715, "compression_ratio": 1.5638766519823788, "no_speech_prob": 5.224397682468407e-05}, {"id": 1692, "seek": 794068, "start": 7941.64, "end": 7943.64, "text": " Um", "tokens": [50412, 3301, 50512], "temperature": 0.0, "avg_logprob": -0.1931561279296875, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.00024529173970222473}, {"id": 1693, "seek": 794068, "start": 7944.04, "end": 7948.4400000000005, "text": " The first is to use a sub process macro. So just run time it", "tokens": [50532, 440, 700, 307, 281, 764, 257, 1422, 1399, 18887, 13, 407, 445, 1190, 565, 309, 50752], "temperature": 0.0, "avg_logprob": -0.1931561279296875, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.00024529173970222473}, {"id": 1694, "seek": 794068, "start": 7949.0, "end": 7952.68, "text": " Um on the string and formatting a string", "tokens": [50780, 3301, 322, 264, 6798, 293, 39366, 257, 6798, 50964], "temperature": 0.0, "avg_logprob": -0.1931561279296875, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.00024529173970222473}, {"id": 1695, "seek": 794068, "start": 7954.200000000001, "end": 7956.04, "text": " The second is", "tokens": [51040, 440, 1150, 307, 51132], "temperature": 0.0, "avg_logprob": -0.1931561279296875, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.00024529173970222473}, {"id": 1696, "seek": 794068, "start": 7956.04, "end": 7957.08, "text": " to", "tokens": [51132, 281, 51184], "temperature": 0.0, "avg_logprob": -0.1931561279296875, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.00024529173970222473}, {"id": 1697, "seek": 794068, "start": 7957.08, "end": 7959.64, "text": " Call the import module as a macro", "tokens": [51184, 7807, 264, 974, 10088, 382, 257, 18887, 51312], "temperature": 0.0, "avg_logprob": -0.1931561279296875, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.00024529173970222473}, {"id": 1698, "seek": 794068, "start": 7961.08, "end": 7967.320000000001, "text": " So you don't have to use quotes and the third is to run, uh, uh write a json block context manager", "tokens": [51384, 407, 291, 500, 380, 362, 281, 764, 19963, 293, 264, 2636, 307, 281, 1190, 11, 2232, 11, 2232, 2464, 257, 361, 3015, 3461, 4319, 6598, 51696], "temperature": 0.0, "avg_logprob": -0.1931561279296875, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.00024529173970222473}, {"id": 1699, "seek": 797068, "start": 7971.56, "end": 7973.56, "text": " Oh, yeah, we're not gonna", "tokens": [50408, 876, 11, 1338, 11, 321, 434, 406, 799, 50508], "temperature": 0.0, "avg_logprob": -0.2238457904142492, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.0007435364532284439}, {"id": 1700, "seek": 797068, "start": 7974.12, "end": 7976.12, "text": " Then we need to get into our example", "tokens": [50536, 1396, 321, 643, 281, 483, 666, 527, 1365, 50636], "temperature": 0.0, "avg_logprob": -0.2238457904142492, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.0007435364532284439}, {"id": 1701, "seek": 797068, "start": 7976.52, "end": 7978.52, "text": " And then we need to get into our like", "tokens": [50656, 400, 550, 321, 643, 281, 483, 666, 527, 411, 50756], "temperature": 0.0, "avg_logprob": -0.2238457904142492, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.0007435364532284439}, {"id": 1702, "seek": 797068, "start": 7980.52, "end": 7983.0, "text": " Any questions on any of these or if there are questions, um", "tokens": [50856, 2639, 1651, 322, 604, 295, 613, 420, 498, 456, 366, 1651, 11, 1105, 50980], "temperature": 0.0, "avg_logprob": -0.2238457904142492, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.0007435364532284439}, {"id": 1703, "seek": 797068, "start": 7986.68, "end": 7988.68, "text": " Format was 42", "tokens": [51164, 10126, 267, 390, 14034, 51264], "temperature": 0.0, "avg_logprob": -0.2238457904142492, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.0007435364532284439}, {"id": 1704, "seek": 797068, "start": 7990.6, "end": 7995.88, "text": " And you see like what this really prevents once time it completes", "tokens": [51360, 400, 291, 536, 411, 437, 341, 534, 22367, 1564, 565, 309, 36362, 51624], "temperature": 0.0, "avg_logprob": -0.2238457904142492, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.0007435364532284439}, {"id": 1705, "seek": 799588, "start": 7996.6, "end": 8004.4400000000005, "text": " Is you having to run it with a extra set of quotes, right? Because time it expects just a single argument that takes", "tokens": [50400, 1119, 291, 1419, 281, 1190, 309, 365, 257, 2857, 992, 295, 19963, 11, 558, 30, 1436, 565, 309, 33280, 445, 257, 2167, 6770, 300, 2516, 50792], "temperature": 0.0, "avg_logprob": -0.16893431904551748, "compression_ratio": 1.5727699530516432, "no_speech_prob": 0.0005883403937332332}, {"id": 1706, "seek": 799588, "start": 8005.08, "end": 8007.08, "text": " Um, so this is the same", "tokens": [50824, 3301, 11, 370, 341, 307, 264, 912, 50924], "temperature": 0.0, "avg_logprob": -0.16893431904551748, "compression_ratio": 1.5727699530516432, "no_speech_prob": 0.0005883403937332332}, {"id": 1707, "seek": 799588, "start": 8007.400000000001, "end": 8011.88, "text": " This is fundamentally the same, but you just you don't have to type that extra set of quotes. So", "tokens": [50940, 639, 307, 17879, 264, 912, 11, 457, 291, 445, 291, 500, 380, 362, 281, 2010, 300, 2857, 992, 295, 19963, 13, 407, 51164], "temperature": 0.0, "avg_logprob": -0.16893431904551748, "compression_ratio": 1.5727699530516432, "no_speech_prob": 0.0005883403937332332}, {"id": 1708, "seek": 799588, "start": 8013.88, "end": 8015.88, "text": " Okay", "tokens": [51264, 1033, 51364], "temperature": 0.0, "avg_logprob": -0.16893431904551748, "compression_ratio": 1.5727699530516432, "no_speech_prob": 0.0005883403937332332}, {"id": 1709, "seek": 799588, "start": 8017.56, "end": 8019.56, "text": " All right, you want to move on to the next", "tokens": [51448, 1057, 558, 11, 291, 528, 281, 1286, 322, 281, 264, 958, 51548], "temperature": 0.0, "avg_logprob": -0.16893431904551748, "compression_ratio": 1.5727699530516432, "no_speech_prob": 0.0005883403937332332}, {"id": 1710, "seek": 799588, "start": 8020.68, "end": 8022.68, "text": " And then yeah for the", "tokens": [51604, 400, 550, 1338, 337, 264, 51704], "temperature": 0.0, "avg_logprob": -0.16893431904551748, "compression_ratio": 1.5727699530516432, "no_speech_prob": 0.0005883403937332332}, {"id": 1711, "seek": 799588, "start": 8022.84, "end": 8024.84, "text": " standard library import lib", "tokens": [51712, 3832, 6405, 974, 22854, 51812], "temperature": 0.0, "avg_logprob": -0.16893431904551748, "compression_ratio": 1.5727699530516432, "no_speech_prob": 0.0005883403937332332}, {"id": 1712, "seek": 802484, "start": 8025.400000000001, "end": 8031.08, "text": " Um, this is just showing you can you actually you can just use existing functions, but call them using the macro syntax", "tokens": [50392, 3301, 11, 341, 307, 445, 4099, 291, 393, 291, 767, 291, 393, 445, 764, 6741, 6828, 11, 457, 818, 552, 1228, 264, 18887, 28431, 50676], "temperature": 0.0, "avg_logprob": -0.16988304539730675, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.00021651304268743843}, {"id": 1713, "seek": 802484, "start": 8031.96, "end": 8033.96, "text": " And so in this case you get back the", "tokens": [50720, 400, 370, 294, 341, 1389, 291, 483, 646, 264, 50820], "temperature": 0.0, "avg_logprob": -0.16988304539730675, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.00021651304268743843}, {"id": 1714, "seek": 802484, "start": 8036.6, "end": 8038.6, "text": " Import lib sorry. Yeah", "tokens": [50952, 26391, 22854, 2597, 13, 865, 51052], "temperature": 0.0, "avg_logprob": -0.16988304539730675, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.00021651304268743843}, {"id": 1715, "seek": 802484, "start": 8039.0, "end": 8040.4400000000005, "text": " dot", "tokens": [51072, 5893, 51144], "temperature": 0.0, "avg_logprob": -0.16988304539730675, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.00021651304268743843}, {"id": 1716, "seek": 802484, "start": 8040.4400000000005, "end": 8042.4400000000005, "text": " import module", "tokens": [51144, 974, 10088, 51244], "temperature": 0.0, "avg_logprob": -0.16988304539730675, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.00021651304268743843}, {"id": 1717, "seek": 802484, "start": 8043.08, "end": 8045.08, "text": " So if we do sys", "tokens": [51276, 407, 498, 321, 360, 262, 749, 51376], "temperature": 0.0, "avg_logprob": -0.16988304539730675, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.00021651304268743843}, {"id": 1718, "seek": 802484, "start": 8046.2, "end": 8050.360000000001, "text": " Uh, right because the first argument is a string you can just get that so", "tokens": [51432, 4019, 11, 558, 570, 264, 700, 6770, 307, 257, 6798, 291, 393, 445, 483, 300, 370, 51640], "temperature": 0.0, "avg_logprob": -0.16988304539730675, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.00021651304268743843}, {"id": 1719, "seek": 802484, "start": 8051.16, "end": 8054.12, "text": " It'll it'll take it'll turn whatever you type that into a string", "tokens": [51680, 467, 603, 309, 603, 747, 309, 603, 1261, 2035, 291, 2010, 300, 666, 257, 6798, 51828], "temperature": 0.0, "avg_logprob": -0.16988304539730675, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.00021651304268743843}, {"id": 1720, "seek": 805484, "start": 8055.8, "end": 8057.8, "text": " Okay", "tokens": [50412, 1033, 50512], "temperature": 0.0, "avg_logprob": -0.20651588977222712, "compression_ratio": 1.4113924050632911, "no_speech_prob": 0.0015009631169959903}, {"id": 1721, "seek": 805484, "start": 8060.12, "end": 8062.12, "text": " And then", "tokens": [50628, 400, 550, 50728], "temperature": 0.0, "avg_logprob": -0.20651588977222712, "compression_ratio": 1.4113924050632911, "no_speech_prob": 0.0015009631169959903}, {"id": 1722, "seek": 805484, "start": 8062.360000000001, "end": 8069.4800000000005, "text": " Uh, the third one is this json block. So this should be very familiar to the xml one where", "tokens": [50740, 4019, 11, 264, 2636, 472, 307, 341, 361, 3015, 3461, 13, 407, 341, 820, 312, 588, 4963, 281, 264, 2031, 15480, 472, 689, 51096], "temperature": 0.0, "avg_logprob": -0.20651588977222712, "compression_ratio": 1.4113924050632911, "no_speech_prob": 0.0015009631169959903}, {"id": 1723, "seek": 805484, "start": 8070.4400000000005, "end": 8072.4400000000005, "text": " um", "tokens": [51144, 1105, 51244], "temperature": 0.0, "avg_logprob": -0.20651588977222712, "compression_ratio": 1.4113924050632911, "no_speech_prob": 0.0015009631169959903}, {"id": 1724, "seek": 805484, "start": 8073.0, "end": 8074.84, "text": " Now we just have", "tokens": [51272, 823, 321, 445, 362, 51364], "temperature": 0.0, "avg_logprob": -0.20651588977222712, "compression_ratio": 1.4113924050632911, "no_speech_prob": 0.0015009631169959903}, {"id": 1725, "seek": 805484, "start": 8074.84, "end": 8083.16, "text": " Or now we have uh json. We don't need the the macro block part because that's optional. Um, but we", "tokens": [51364, 1610, 586, 321, 362, 2232, 361, 3015, 13, 492, 500, 380, 643, 264, 264, 18887, 3461, 644, 570, 300, 311, 17312, 13, 3301, 11, 457, 321, 51780], "temperature": 0.0, "avg_logprob": -0.20651588977222712, "compression_ratio": 1.4113924050632911, "no_speech_prob": 0.0015009631169959903}, {"id": 1726, "seek": 808316, "start": 8084.12, "end": 8086.12, "text": " Uh, oops on enter", "tokens": [50412, 4019, 11, 34166, 322, 3242, 50512], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1727, "seek": 808316, "start": 8087.0, "end": 8088.5199999999995, "text": " um", "tokens": [50556, 1105, 50632], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1728, "seek": 808316, "start": 8088.5199999999995, "end": 8091.0, "text": " We'll assume that the code that comes in", "tokens": [50632, 492, 603, 6552, 300, 264, 3089, 300, 1487, 294, 50756], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1729, "seek": 808316, "start": 8091.8, "end": 8093.32, "text": " is", "tokens": [50796, 307, 50872], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1730, "seek": 808316, "start": 8093.32, "end": 8097.72, "text": " Uh part of is valid json. So we'll return", "tokens": [50872, 4019, 644, 295, 307, 7363, 361, 3015, 13, 407, 321, 603, 2736, 51092], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1731, "seek": 808316, "start": 8099.32, "end": 8101.32, "text": " uh json", "tokens": [51172, 2232, 361, 3015, 51272], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1732, "seek": 808316, "start": 8101.4, "end": 8103.4, "text": " dot loads", "tokens": [51276, 5893, 12668, 51376], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1733, "seek": 808316, "start": 8103.4, "end": 8104.76, "text": " of", "tokens": [51376, 295, 51444], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1734, "seek": 808316, "start": 8104.76, "end": 8106.44, "text": " self dot", "tokens": [51444, 2698, 5893, 51528], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1735, "seek": 808316, "start": 8106.44, "end": 8108.44, "text": " macro block", "tokens": [51528, 18887, 3461, 51628], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1736, "seek": 808316, "start": 8108.76, "end": 8110.76, "text": " Um", "tokens": [51644, 3301, 51744], "temperature": 0.0, "avg_logprob": -0.24438264634874132, "compression_ratio": 1.3130434782608695, "no_speech_prob": 0.004330403171479702}, {"id": 1737, "seek": 811076, "start": 8111.400000000001, "end": 8113.400000000001, "text": " And then on exit", "tokens": [50396, 400, 550, 322, 11043, 50496], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1738, "seek": 811076, "start": 8113.56, "end": 8118.280000000001, "text": " Uh, we'll do this we'll do the same delete portion just to clean up after ourselves as well", "tokens": [50504, 4019, 11, 321, 603, 360, 341, 321, 603, 360, 264, 912, 12097, 8044, 445, 281, 2541, 493, 934, 4175, 382, 731, 50740], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1739, "seek": 811076, "start": 8118.84, "end": 8122.84, "text": " um, and so a use case for this is just with", "tokens": [50768, 1105, 11, 293, 370, 257, 764, 1389, 337, 341, 307, 445, 365, 50968], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1740, "seek": 811076, "start": 8123.96, "end": 8125.08, "text": " uh", "tokens": [51024, 2232, 51080], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1741, "seek": 811076, "start": 8125.08, "end": 8127.08, "text": " json block", "tokens": [51080, 361, 3015, 3461, 51180], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1742, "seek": 811076, "start": 8127.16, "end": 8128.360000000001, "text": " as", "tokens": [51184, 382, 51244], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1743, "seek": 811076, "start": 8128.360000000001, "end": 8131.56, "text": " Let's call it x. Um, and we can write like", "tokens": [51244, 961, 311, 818, 309, 2031, 13, 3301, 11, 293, 321, 393, 2464, 411, 51404], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1744, "seek": 811076, "start": 8133.64, "end": 8136.360000000001, "text": " Hello, just some random json", "tokens": [51508, 2425, 11, 445, 512, 4974, 361, 3015, 51644], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1745, "seek": 811076, "start": 8137.72, "end": 8139.4800000000005, "text": " mom", "tokens": [51712, 1225, 51800], "temperature": 0.0, "avg_logprob": -0.21443520971091398, "compression_ratio": 1.4759036144578312, "no_speech_prob": 0.000656277930829674}, {"id": 1746, "seek": 813948, "start": 8139.48, "end": 8140.759999999999, "text": " And now", "tokens": [50364, 400, 586, 50428], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1747, "seek": 813948, "start": 8140.759999999999, "end": 8143.5599999999995, "text": " x is a dictionary that was parsed from that json pretty", "tokens": [50428, 2031, 307, 257, 25890, 300, 390, 21156, 292, 490, 300, 361, 3015, 1238, 50568], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1748, "seek": 813948, "start": 8144.28, "end": 8151.879999999999, "text": " Pretty simple silly example because json and python are so similar here, but uh, you know, it's it's a one way to do things", "tokens": [50604, 10693, 2199, 11774, 1365, 570, 361, 3015, 293, 38797, 366, 370, 2531, 510, 11, 457, 2232, 11, 291, 458, 11, 309, 311, 309, 311, 257, 472, 636, 281, 360, 721, 50984], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1749, "seek": 813948, "start": 8152.12, "end": 8153.48, "text": " so", "tokens": [50996, 370, 51064], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1750, "seek": 813948, "start": 8153.48, "end": 8155.48, "text": " Any questions on these exercises? Yeah", "tokens": [51064, 2639, 1651, 322, 613, 11900, 30, 865, 51164], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1751, "seek": 813948, "start": 8156.12, "end": 8156.919999999999, "text": " So", "tokens": [51196, 407, 51236], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1752, "seek": 813948, "start": 8156.919999999999, "end": 8162.599999999999, "text": " Where does this json block object end up in this case? What do you mean? So", "tokens": [51236, 2305, 775, 341, 361, 3015, 3461, 2657, 917, 493, 294, 341, 1389, 30, 708, 360, 291, 914, 30, 407, 51520], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1753, "seek": 813948, "start": 8163.5599999999995, "end": 8165.5599999999995, "text": " x ended up as the return value of enter", "tokens": [51568, 2031, 4590, 493, 382, 264, 2736, 2158, 295, 3242, 51668], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1754, "seek": 813948, "start": 8166.12, "end": 8168.12, "text": " Yes, so where did the json block instance", "tokens": [51696, 1079, 11, 370, 689, 630, 264, 361, 3015, 3461, 5197, 51796], "temperature": 0.0, "avg_logprob": -0.1403216634477888, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.00048012688057497144}, {"id": 1755, "seek": 816812, "start": 8169.08, "end": 8171.5599999999995, "text": " It's gone. Okay, so like the so the cleanup is a little", "tokens": [50412, 467, 311, 2780, 13, 1033, 11, 370, 411, 264, 370, 264, 40991, 307, 257, 707, 50536], "temperature": 0.0, "avg_logprob": -0.20934852151309744, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0005614151596091688}, {"id": 1756, "seek": 816812, "start": 8173.0, "end": 8175.0, "text": " I guess you can show in the cleanup", "tokens": [50608, 286, 2041, 291, 393, 855, 294, 264, 40991, 50708], "temperature": 0.0, "avg_logprob": -0.20934852151309744, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0005614151596091688}, {"id": 1757, "seek": 816812, "start": 8175.0, "end": 8177.0, "text": " Implying these things are leaking", "tokens": [50708, 8270, 7310, 613, 721, 366, 32856, 50808], "temperature": 0.0, "avg_logprob": -0.20934852151309744, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0005614151596091688}, {"id": 1758, "seek": 816812, "start": 8177.24, "end": 8183.32, "text": " Well, so the macro block and macro globals and macro locals. Yeah, so so this would leak", "tokens": [50820, 1042, 11, 370, 264, 18887, 3461, 293, 18887, 16125, 1124, 293, 18887, 23335, 13, 865, 11, 370, 370, 341, 576, 17143, 51124], "temperature": 0.0, "avg_logprob": -0.20934852151309744, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0005614151596091688}, {"id": 1759, "seek": 816812, "start": 8183.5599999999995, "end": 8187.4, "text": " I get in the case where you instead returned self from the", "tokens": [51136, 286, 483, 294, 264, 1389, 689, 291, 2602, 8752, 2698, 490, 264, 51328], "temperature": 0.0, "avg_logprob": -0.20934852151309744, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0005614151596091688}, {"id": 1760, "seek": 816812, "start": 8188.599999999999, "end": 8191.08, "text": " From the from the enter method", "tokens": [51388, 3358, 264, 490, 264, 3242, 3170, 51512], "temperature": 0.0, "avg_logprob": -0.20934852151309744, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0005614151596091688}, {"id": 1761, "seek": 816812, "start": 8192.28, "end": 8194.28, "text": " Right", "tokens": [51572, 1779, 51672], "temperature": 0.0, "avg_logprob": -0.20934852151309744, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0005614151596091688}, {"id": 1762, "seek": 819428, "start": 8195.24, "end": 8198.44, "text": " No, no, it's not it's not keeping a cache it would only leak if you", "tokens": [50412, 883, 11, 572, 11, 309, 311, 406, 309, 311, 406, 5145, 257, 19459, 309, 576, 787, 17143, 498, 291, 50572], "temperature": 0.0, "avg_logprob": -0.16796864145170382, "compression_ratio": 1.7547892720306513, "no_speech_prob": 0.0007207597955130041}, {"id": 1763, "seek": 819428, "start": 8199.480000000001, "end": 8200.76, "text": " so like", "tokens": [50624, 370, 411, 50688], "temperature": 0.0, "avg_logprob": -0.16796864145170382, "compression_ratio": 1.7547892720306513, "no_speech_prob": 0.0007207597955130041}, {"id": 1764, "seek": 819428, "start": 8200.76, "end": 8205.640000000001, "text": " So the the place where it would leak potentially where you wouldn't want it to necessarily is like if you wanted to", "tokens": [50688, 407, 264, 264, 1081, 689, 309, 576, 17143, 7263, 689, 291, 2759, 380, 528, 309, 281, 4725, 307, 411, 498, 291, 1415, 281, 50932], "temperature": 0.0, "avg_logprob": -0.16796864145170382, "compression_ratio": 1.7547892720306513, "no_speech_prob": 0.0007207597955130041}, {"id": 1765, "seek": 819428, "start": 8206.2, "end": 8207.400000000001, "text": " Have the same", "tokens": [50960, 3560, 264, 912, 51020], "temperature": 0.0, "avg_logprob": -0.16796864145170382, "compression_ratio": 1.7547892720306513, "no_speech_prob": 0.0007207597955130041}, {"id": 1766, "seek": 819428, "start": 8207.400000000001, "end": 8213.480000000001, "text": " Instance of json block be reentrant like that's what this makes us so you could like have one instance of json block", "tokens": [51020, 2730, 719, 295, 361, 3015, 3461, 312, 319, 317, 7541, 411, 300, 311, 437, 341, 1669, 505, 370, 291, 727, 411, 362, 472, 5197, 295, 361, 3015, 3461, 51324], "temperature": 0.0, "avg_logprob": -0.16796864145170382, "compression_ratio": 1.7547892720306513, "no_speech_prob": 0.0007207597955130041}, {"id": 1767, "seek": 819428, "start": 8213.640000000001, "end": 8215.640000000001, "text": " And then just reenter it every time", "tokens": [51332, 400, 550, 445, 319, 14278, 309, 633, 565, 51432], "temperature": 0.0, "avg_logprob": -0.16796864145170382, "compression_ratio": 1.7547892720306513, "no_speech_prob": 0.0007207597955130041}, {"id": 1768, "seek": 819428, "start": 8216.04, "end": 8218.04, "text": " And always get the tree back", "tokens": [51452, 400, 1009, 483, 264, 4230, 646, 51552], "temperature": 0.0, "avg_logprob": -0.16796864145170382, "compression_ratio": 1.7547892720306513, "no_speech_prob": 0.0007207597955130041}, {"id": 1769, "seek": 819428, "start": 8218.44, "end": 8221.640000000001, "text": " Uh, or if you return self and we're doing something else with it later", "tokens": [51572, 4019, 11, 420, 498, 291, 2736, 2698, 293, 321, 434, 884, 746, 1646, 365, 309, 1780, 51732], "temperature": 0.0, "avg_logprob": -0.16796864145170382, "compression_ratio": 1.7547892720306513, "no_speech_prob": 0.0007207597955130041}, {"id": 1770, "seek": 822164, "start": 8222.359999999999, "end": 8224.359999999999, "text": " Right, so yeah", "tokens": [50400, 1779, 11, 370, 1338, 50500], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1771, "seek": 822164, "start": 8225.64, "end": 8227.88, "text": " That that's where the references get added", "tokens": [50564, 663, 300, 311, 689, 264, 15400, 483, 3869, 50676], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1772, "seek": 822164, "start": 8229.88, "end": 8231.64, "text": " Yeah", "tokens": [50776, 865, 50864], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1773, "seek": 822164, "start": 8231.64, "end": 8233.64, "text": " Does that make sense", "tokens": [50864, 4402, 300, 652, 2020, 50964], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1774, "seek": 822164, "start": 8233.64, "end": 8238.84, "text": " Sort of um close enough. Yeah, I guess the the thing is like if you returned", "tokens": [50964, 26149, 295, 1105, 1998, 1547, 13, 865, 11, 286, 2041, 264, 264, 551, 307, 411, 498, 291, 8752, 51224], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1775, "seek": 822164, "start": 8240.119999999999, "end": 8242.119999999999, "text": " Uh, so if you said like", "tokens": [51288, 4019, 11, 370, 498, 291, 848, 411, 51388], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1776, "seek": 822164, "start": 8243.64, "end": 8245.08, "text": " self", "tokens": [51464, 2698, 51536], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1777, "seek": 822164, "start": 8245.08, "end": 8247.08, "text": " dot", "tokens": [51536, 5893, 51636], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1778, "seek": 822164, "start": 8247.32, "end": 8249.32, "text": " Like maybe you wanted like", "tokens": [51648, 1743, 1310, 291, 1415, 411, 51748], "temperature": 0.0, "avg_logprob": -0.2327619635540506, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0013248296454548836}, {"id": 1779, "seek": 824932, "start": 8250.039999999999, "end": 8256.76, "text": " Like maybe you wanted to keep the j object around so you did like json dot", "tokens": [50400, 1743, 1310, 291, 1415, 281, 1066, 264, 361, 2657, 926, 370, 291, 630, 411, 361, 3015, 5893, 50736], "temperature": 0.0, "avg_logprob": -0.18661044538021088, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00036822029505856335}, {"id": 1780, "seek": 824932, "start": 8257.48, "end": 8259.48, "text": " Or you wanted to keep the tree", "tokens": [50772, 1610, 291, 1415, 281, 1066, 264, 4230, 50872], "temperature": 0.0, "avg_logprob": -0.18661044538021088, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00036822029505856335}, {"id": 1781, "seek": 824932, "start": 8260.199999999999, "end": 8262.199999999999, "text": " um, so you do json.loads", "tokens": [50908, 1105, 11, 370, 291, 360, 361, 3015, 13, 2907, 82, 51008], "temperature": 0.0, "avg_logprob": -0.18661044538021088, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00036822029505856335}, {"id": 1782, "seek": 824932, "start": 8263.56, "end": 8265.56, "text": " of", "tokens": [51076, 295, 51176], "temperature": 0.0, "avg_logprob": -0.18661044538021088, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00036822029505856335}, {"id": 1783, "seek": 824932, "start": 8266.199999999999, "end": 8268.199999999999, "text": " self dot macro block", "tokens": [51208, 2698, 5893, 18887, 3461, 51308], "temperature": 0.0, "avg_logprob": -0.18661044538021088, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00036822029505856335}, {"id": 1784, "seek": 824932, "start": 8269.64, "end": 8271.64, "text": " And then", "tokens": [51380, 400, 550, 51480], "temperature": 0.0, "avg_logprob": -0.18661044538021088, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00036822029505856335}, {"id": 1785, "seek": 824932, "start": 8272.44, "end": 8274.44, "text": " And then you return", "tokens": [51520, 400, 550, 291, 2736, 51620], "temperature": 0.0, "avg_logprob": -0.18661044538021088, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00036822029505856335}, {"id": 1786, "seek": 824932, "start": 8274.84, "end": 8276.84, "text": " self", "tokens": [51640, 2698, 51740], "temperature": 0.0, "avg_logprob": -0.18661044538021088, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00036822029505856335}, {"id": 1787, "seek": 827684, "start": 8276.92, "end": 8279.0, "text": " You know, you might not want to keep the globals", "tokens": [50368, 509, 458, 11, 291, 1062, 406, 528, 281, 1066, 264, 16125, 1124, 50472], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1788, "seek": 827684, "start": 8279.72, "end": 8284.28, "text": " You might want to keep the macro block itself around, but you might not want to keep the other locals and and", "tokens": [50508, 509, 1062, 528, 281, 1066, 264, 18887, 3461, 2564, 926, 11, 457, 291, 1062, 406, 528, 281, 1066, 264, 661, 23335, 293, 293, 50736], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1789, "seek": 827684, "start": 8284.92, "end": 8286.52, "text": " globals here", "tokens": [50768, 16125, 1124, 510, 50848], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1790, "seek": 827684, "start": 8286.52, "end": 8288.2, "text": " and so", "tokens": [50848, 293, 370, 50932], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1791, "seek": 827684, "start": 8288.2, "end": 8289.8, "text": " Just using this", "tokens": [50932, 1449, 1228, 341, 51012], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1792, "seek": 827684, "start": 8289.8, "end": 8294.12, "text": " So now x is the json block and then x dot", "tokens": [51012, 407, 586, 2031, 307, 264, 361, 3015, 3461, 293, 550, 2031, 5893, 51228], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1793, "seek": 827684, "start": 8295.4, "end": 8297.0, "text": " Tree", "tokens": [51292, 22291, 51372], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1794, "seek": 827684, "start": 8297.0, "end": 8299.0, "text": " Is the uh, is the actual", "tokens": [51372, 1119, 264, 2232, 11, 307, 264, 3539, 51472], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1795, "seek": 827684, "start": 8299.32, "end": 8303.48, "text": " Version, but you still have access to the string of what the macro block was", "tokens": [51488, 35965, 11, 457, 291, 920, 362, 2105, 281, 264, 6798, 295, 437, 264, 18887, 3461, 390, 51696], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1796, "seek": 827684, "start": 8304.52, "end": 8306.52, "text": " Yeah", "tokens": [51748, 865, 51848], "temperature": 0.0, "avg_logprob": -0.1707588044723662, "compression_ratio": 1.8219895287958114, "no_speech_prob": 0.0018960173474624753}, {"id": 1797, "seek": 830684, "start": 8307.8, "end": 8313.16, "text": " They are the uh, they they're the the name they're the local and global", "tokens": [50412, 814, 366, 264, 2232, 11, 436, 436, 434, 264, 264, 1315, 436, 434, 264, 2654, 293, 4338, 50680], "temperature": 0.0, "avg_logprob": -0.2529752576673353, "compression_ratio": 1.6569767441860466, "no_speech_prob": 0.0006357294041663408}, {"id": 1798, "seek": 830684, "start": 8313.880000000001, "end": 8317.880000000001, "text": " Uh dictionaries like as if you had called locals and globals the python built-ins", "tokens": [50716, 4019, 22352, 4889, 411, 382, 498, 291, 632, 1219, 23335, 293, 16125, 1124, 264, 38797, 3094, 12, 1292, 50916], "temperature": 0.0, "avg_logprob": -0.2529752576673353, "compression_ratio": 1.6569767441860466, "no_speech_prob": 0.0006357294041663408}, {"id": 1799, "seek": 830684, "start": 8318.44, "end": 8325.0, "text": " Where the where the macro block was called or the context macro was was written", "tokens": [50944, 2305, 264, 689, 264, 18887, 3461, 390, 1219, 420, 264, 4319, 18887, 390, 390, 3720, 51272], "temperature": 0.0, "avg_logprob": -0.2529752576673353, "compression_ratio": 1.6569767441860466, "no_speech_prob": 0.0006357294041663408}, {"id": 1800, "seek": 830684, "start": 8326.2, "end": 8328.2, "text": " Yeah", "tokens": [51332, 865, 51432], "temperature": 0.0, "avg_logprob": -0.2529752576673353, "compression_ratio": 1.6569767441860466, "no_speech_prob": 0.0006357294041663408}, {"id": 1801, "seek": 830684, "start": 8328.68, "end": 8331.48, "text": " Yeah, okay. Yeah, any other questions on this?", "tokens": [51456, 865, 11, 1392, 13, 865, 11, 604, 661, 1651, 322, 341, 30, 51596], "temperature": 0.0, "avg_logprob": -0.2529752576673353, "compression_ratio": 1.6569767441860466, "no_speech_prob": 0.0006357294041663408}, {"id": 1802, "seek": 833684, "start": 8337.32, "end": 8339.32, "text": " What are the use cases", "tokens": [50388, 708, 366, 264, 764, 3331, 50488], "temperature": 0.0, "avg_logprob": -0.17811891382390801, "compression_ratio": 1.8218623481781377, "no_speech_prob": 0.0030264670494943857}, {"id": 1803, "seek": 833684, "start": 8342.2, "end": 8346.36, "text": " Yeah, so the most common use case is really something like time that right, it's really those", "tokens": [50632, 865, 11, 370, 264, 881, 2689, 764, 1389, 307, 534, 746, 411, 565, 300, 558, 11, 309, 311, 534, 729, 50840], "temperature": 0.0, "avg_logprob": -0.17811891382390801, "compression_ratio": 1.8218623481781377, "no_speech_prob": 0.0030264670494943857}, {"id": 1804, "seek": 833684, "start": 8346.52, "end": 8353.0, "text": " Um, there's a couple of cases where that i've that we've used these things where like if you wanted to write some bash", "tokens": [50848, 3301, 11, 456, 311, 257, 1916, 295, 3331, 689, 300, 741, 600, 300, 321, 600, 1143, 613, 721, 689, 411, 498, 291, 1415, 281, 2464, 512, 46183, 51172], "temperature": 0.0, "avg_logprob": -0.17811891382390801, "compression_ratio": 1.8218623481781377, "no_speech_prob": 0.0030264670494943857}, {"id": 1805, "seek": 833684, "start": 8353.24, "end": 8356.12, "text": " And you really needed it to be bash in a local context", "tokens": [51184, 400, 291, 534, 2978, 309, 281, 312, 46183, 294, 257, 2654, 4319, 51328], "temperature": 0.0, "avg_logprob": -0.17811891382390801, "compression_ratio": 1.8218623481781377, "no_speech_prob": 0.0030264670494943857}, {"id": 1806, "seek": 833684, "start": 8356.6, "end": 8359.24, "text": " Then you would then you write like a little bash thing", "tokens": [51352, 1396, 291, 576, 550, 291, 2464, 411, 257, 707, 46183, 551, 51484], "temperature": 0.0, "avg_logprob": -0.17811891382390801, "compression_ratio": 1.8218623481781377, "no_speech_prob": 0.0030264670494943857}, {"id": 1807, "seek": 833684, "start": 8359.72, "end": 8360.68, "text": " um", "tokens": [51508, 1105, 51556], "temperature": 0.0, "avg_logprob": -0.17811891382390801, "compression_ratio": 1.8218623481781377, "no_speech_prob": 0.0030264670494943857}, {"id": 1808, "seek": 833684, "start": 8360.68, "end": 8366.68, "text": " There's been some other use cases where we take input or configuration files in as these macro blocks", "tokens": [51556, 821, 311, 668, 512, 661, 764, 3331, 689, 321, 747, 4846, 420, 11694, 7098, 294, 382, 613, 18887, 8474, 51856], "temperature": 0.0, "avg_logprob": -0.17811891382390801, "compression_ratio": 1.8218623481781377, "no_speech_prob": 0.0030264670494943857}, {"id": 1809, "seek": 836684, "start": 8367.72, "end": 8371.880000000001, "text": " Um, uh, but otherwise, yeah, it's that's kind of the use cases", "tokens": [50408, 3301, 11, 2232, 11, 457, 5911, 11, 1338, 11, 309, 311, 300, 311, 733, 295, 264, 764, 3331, 50616], "temperature": 0.0, "avg_logprob": -0.21168140002659389, "compression_ratio": 1.401639344262295, "no_speech_prob": 0.0010981997475028038}, {"id": 1810, "seek": 836684, "start": 8383.72, "end": 8385.72, "text": " Import sorry saying", "tokens": [51208, 26391, 2597, 1566, 51308], "temperature": 0.0, "avg_logprob": -0.21168140002659389, "compression_ratio": 1.401639344262295, "no_speech_prob": 0.0010981997475028038}, {"id": 1811, "seek": 836684, "start": 8387.24, "end": 8389.24, "text": " Oh, yeah, yeah", "tokens": [51384, 876, 11, 1338, 11, 1338, 51484], "temperature": 0.0, "avg_logprob": -0.21168140002659389, "compression_ratio": 1.401639344262295, "no_speech_prob": 0.0010981997475028038}, {"id": 1812, "seek": 836684, "start": 8389.56, "end": 8393.880000000001, "text": " That that was that's just a toy. Uh, that's kind of a toy example to show", "tokens": [51500, 663, 300, 390, 300, 311, 445, 257, 12058, 13, 4019, 11, 300, 311, 733, 295, 257, 12058, 1365, 281, 855, 51716], "temperature": 0.0, "avg_logprob": -0.21168140002659389, "compression_ratio": 1.401639344262295, "no_speech_prob": 0.0010981997475028038}, {"id": 1813, "seek": 839388, "start": 8394.759999999998, "end": 8399.24, "text": " Um, right this comes from the standard library and the standard library didn't", "tokens": [50408, 3301, 11, 558, 341, 1487, 490, 264, 3832, 6405, 293, 264, 3832, 6405, 994, 380, 50632], "temperature": 0.0, "avg_logprob": -0.1533747434616089, "compression_ratio": 1.764102564102564, "no_speech_prob": 0.0004441634810063988}, {"id": 1814, "seek": 839388, "start": 8399.88, "end": 8402.279999999999, "text": " Uh, doesn't know anything about conscious", "tokens": [50664, 4019, 11, 1177, 380, 458, 1340, 466, 6648, 50784], "temperature": 0.0, "avg_logprob": -0.1533747434616089, "compression_ratio": 1.764102564102564, "no_speech_prob": 0.0004441634810063988}, {"id": 1815, "seek": 839388, "start": 8403.08, "end": 8404.119999999999, "text": " Macro system", "tokens": [50824, 5707, 340, 1185, 50876], "temperature": 0.0, "avg_logprob": -0.1533747434616089, "compression_ratio": 1.764102564102564, "no_speech_prob": 0.0004441634810063988}, {"id": 1816, "seek": 839388, "start": 8404.119999999999, "end": 8409.64, "text": " So it didn't annotate these functions in any particular way and this is just showing that you that you can use", "tokens": [50876, 407, 309, 994, 380, 25339, 473, 613, 6828, 294, 604, 1729, 636, 293, 341, 307, 445, 4099, 300, 291, 300, 291, 393, 764, 51152], "temperature": 0.0, "avg_logprob": -0.1533747434616089, "compression_ratio": 1.764102564102564, "no_speech_prob": 0.0004441634810063988}, {"id": 1817, "seek": 839388, "start": 8410.519999999999, "end": 8415.72, "text": " You can use the macros on those functions if you if those functions happen to take string arguments", "tokens": [51196, 509, 393, 764, 264, 7912, 2635, 322, 729, 6828, 498, 291, 498, 729, 6828, 1051, 281, 747, 6798, 12869, 51456], "temperature": 0.0, "avg_logprob": -0.1533747434616089, "compression_ratio": 1.764102564102564, "no_speech_prob": 0.0004441634810063988}, {"id": 1818, "seek": 841572, "start": 8416.439999999999, "end": 8423.96, "text": " Okay, so it's more just demonstrating it's it's demonstrating. Yeah, but the function macro stuff just ended up having to", "tokens": [50400, 1033, 11, 370, 309, 311, 544, 445, 29889, 309, 311, 309, 311, 29889, 13, 865, 11, 457, 264, 2445, 18887, 1507, 445, 4590, 493, 1419, 281, 50776], "temperature": 0.0, "avg_logprob": -0.18271778369772024, "compression_ratio": 1.7358490566037736, "no_speech_prob": 0.01854250766336918}, {"id": 1819, "seek": 841572, "start": 8424.359999999999, "end": 8427.08, "text": " It kind of had to be there for the context macro stuff", "tokens": [50796, 467, 733, 295, 632, 281, 312, 456, 337, 264, 4319, 18887, 1507, 50932], "temperature": 0.0, "avg_logprob": -0.18271778369772024, "compression_ratio": 1.7358490566037736, "no_speech_prob": 0.01854250766336918}, {"id": 1820, "seek": 841572, "start": 8427.72, "end": 8428.76, "text": " um", "tokens": [50964, 1105, 51016], "temperature": 0.0, "avg_logprob": -0.18271778369772024, "compression_ratio": 1.7358490566037736, "no_speech_prob": 0.01854250766336918}, {"id": 1821, "seek": 841572, "start": 8428.76, "end": 8433.88, "text": " That infrastructure all had to be the same. So it's there and available in the language if you want it, but", "tokens": [51016, 663, 6896, 439, 632, 281, 312, 264, 912, 13, 407, 309, 311, 456, 293, 2435, 294, 264, 2856, 498, 291, 528, 309, 11, 457, 51272], "temperature": 0.0, "avg_logprob": -0.18271778369772024, "compression_ratio": 1.7358490566037736, "no_speech_prob": 0.01854250766336918}, {"id": 1822, "seek": 841572, "start": 8434.519999999999, "end": 8437.8, "text": " Um, I wouldn't say there's like a killer feature for it unless you're coming", "tokens": [51304, 3301, 11, 286, 2759, 380, 584, 456, 311, 411, 257, 13364, 4111, 337, 309, 5969, 291, 434, 1348, 51468], "temperature": 0.0, "avg_logprob": -0.18271778369772024, "compression_ratio": 1.7358490566037736, "no_speech_prob": 0.01854250766336918}, {"id": 1823, "seek": 841572, "start": 8438.359999999999, "end": 8444.679999999998, "text": " From rust or you or you really like doing a lot of ast syntax ast tree like rewriting and stuff", "tokens": [51496, 3358, 15259, 420, 291, 420, 291, 534, 411, 884, 257, 688, 295, 5357, 28431, 5357, 4230, 411, 319, 19868, 293, 1507, 51812], "temperature": 0.0, "avg_logprob": -0.18271778369772024, "compression_ratio": 1.7358490566037736, "no_speech_prob": 0.01854250766336918}, {"id": 1824, "seek": 844468, "start": 8445.48, "end": 8450.44, "text": " In which case this makes it easy for you to provide those rewriters or pattern matchers", "tokens": [50404, 682, 597, 1389, 341, 1669, 309, 1858, 337, 291, 281, 2893, 729, 319, 86, 39335, 420, 5102, 2995, 433, 50652], "temperature": 0.0, "avg_logprob": -0.18876666333301959, "compression_ratio": 1.4702970297029703, "no_speech_prob": 0.0006768957246094942}, {"id": 1825, "seek": 844468, "start": 8451.32, "end": 8456.68, "text": " Um inside of conch, but there aren't that that intersection is basically me. So", "tokens": [50696, 3301, 1854, 295, 416, 339, 11, 457, 456, 3212, 380, 300, 300, 15236, 307, 1936, 385, 13, 407, 50964], "temperature": 0.0, "avg_logprob": -0.18876666333301959, "compression_ratio": 1.4702970297029703, "no_speech_prob": 0.0006768957246094942}, {"id": 1826, "seek": 844468, "start": 8459.4, "end": 8461.4, "text": " Yeah, so", "tokens": [51100, 865, 11, 370, 51200], "temperature": 0.0, "avg_logprob": -0.18876666333301959, "compression_ratio": 1.4702970297029703, "no_speech_prob": 0.0006768957246094942}, {"id": 1827, "seek": 844468, "start": 8462.04, "end": 8464.04, "text": " Okay, cool", "tokens": [51232, 1033, 11, 1627, 51332], "temperature": 0.0, "avg_logprob": -0.18876666333301959, "compression_ratio": 1.4702970297029703, "no_speech_prob": 0.0006768957246094942}, {"id": 1828, "seek": 844468, "start": 8465.32, "end": 8467.32, "text": " Good question", "tokens": [51396, 2205, 1168, 51496], "temperature": 0.0, "avg_logprob": -0.18876666333301959, "compression_ratio": 1.4702970297029703, "no_speech_prob": 0.0006768957246094942}, {"id": 1829, "seek": 844468, "start": 8468.6, "end": 8474.52, "text": " Uh, let's we should maybe skip this well except we don't know if we can yeah, well I can try to", "tokens": [51560, 4019, 11, 718, 311, 321, 820, 1310, 10023, 341, 731, 3993, 321, 500, 380, 458, 498, 321, 393, 1338, 11, 731, 286, 393, 853, 281, 51856], "temperature": 0.0, "avg_logprob": -0.18876666333301959, "compression_ratio": 1.4702970297029703, "no_speech_prob": 0.0006768957246094942}, {"id": 1830, "seek": 847468, "start": 8475.4, "end": 8480.52, "text": " Um, so this is going to be interesting as we discover if this is even possible anymore", "tokens": [50400, 3301, 11, 370, 341, 307, 516, 281, 312, 1880, 382, 321, 4411, 498, 341, 307, 754, 1944, 3602, 50656], "temperature": 0.0, "avg_logprob": -0.19459736224302313, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.00010068769188364968}, {"id": 1831, "seek": 847468, "start": 8481.0, "end": 8483.880000000001, "text": " Um, but there, uh, there is an example here", "tokens": [50680, 3301, 11, 457, 456, 11, 2232, 11, 456, 307, 364, 1365, 510, 50824], "temperature": 0.0, "avg_logprob": -0.19459736224302313, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.00010068769188364968}, {"id": 1832, "seek": 847468, "start": 8484.36, "end": 8489.16, "text": " Which is that we were working in a lab that had a bunch of MRIs of mouse lemurs", "tokens": [50848, 3013, 307, 300, 321, 645, 1364, 294, 257, 2715, 300, 632, 257, 3840, 295, 32812, 82, 295, 9719, 7495, 2156, 51088], "temperature": 0.0, "avg_logprob": -0.19459736224302313, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.00010068769188364968}, {"id": 1833, "seek": 847468, "start": 8490.6, "end": 8492.6, "text": " That's a mouse lemur", "tokens": [51160, 663, 311, 257, 9719, 7495, 374, 51260], "temperature": 0.0, "avg_logprob": -0.19459736224302313, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.00010068769188364968}, {"id": 1834, "seek": 847468, "start": 8496.6, "end": 8502.2, "text": " So we had all these MRI datas, um, but uh, it was set up on our web server by a postdoc who disappeared last week", "tokens": [51460, 407, 321, 632, 439, 613, 32812, 20377, 11, 1105, 11, 457, 2232, 11, 309, 390, 992, 493, 322, 527, 3670, 7154, 538, 257, 2183, 39966, 567, 13954, 1036, 1243, 51740], "temperature": 0.0, "avg_logprob": -0.19459736224302313, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.00010068769188364968}, {"id": 1835, "seek": 850220, "start": 8502.76, "end": 8505.0, "text": " Um, and we have some other bad news", "tokens": [50392, 3301, 11, 293, 321, 362, 512, 661, 1578, 2583, 50504], "temperature": 0.0, "avg_logprob": -0.18402861035059367, "compression_ratio": 1.6156462585034013, "no_speech_prob": 0.0006664221291430295}, {"id": 1836, "seek": 850220, "start": 8505.800000000001, "end": 8509.0, "text": " Uh, which is that he used bash to handle all the data collection", "tokens": [50544, 4019, 11, 597, 307, 300, 415, 1143, 46183, 281, 4813, 439, 264, 1412, 5765, 50704], "temperature": 0.0, "avg_logprob": -0.18402861035059367, "compression_ratio": 1.6156462585034013, "no_speech_prob": 0.0006664221291430295}, {"id": 1837, "seek": 850220, "start": 8509.320000000002, "end": 8512.68, "text": " He didn't know how to make sure that different datasets were saved to separate directories", "tokens": [50720, 634, 994, 380, 458, 577, 281, 652, 988, 300, 819, 42856, 645, 6624, 281, 4994, 5391, 530, 50888], "temperature": 0.0, "avg_logprob": -0.18402861035059367, "compression_ratio": 1.6156462585034013, "no_speech_prob": 0.0006664221291430295}, {"id": 1838, "seek": 850220, "start": 8512.68, "end": 8515.960000000001, "text": " So he just added a random four-digit number to the end of all of these", "tokens": [50888, 407, 415, 445, 3869, 257, 4974, 1451, 12, 25259, 270, 1230, 281, 264, 917, 295, 439, 295, 613, 51052], "temperature": 0.0, "avg_logprob": -0.18402861035059367, "compression_ratio": 1.6156462585034013, "no_speech_prob": 0.0006664221291430295}, {"id": 1839, "seek": 850220, "start": 8516.6, "end": 8519.720000000001, "text": " Um, NII MRI image data files", "tokens": [51084, 3301, 11, 426, 9503, 32812, 3256, 1412, 7098, 51240], "temperature": 0.0, "avg_logprob": -0.18402861035059367, "compression_ratio": 1.6156462585034013, "no_speech_prob": 0.0006664221291430295}, {"id": 1840, "seek": 850220, "start": 8520.28, "end": 8525.640000000001, "text": " Um, and he also neglected to do this with the json metadata that was included with it. So that's all been overwritten and lost", "tokens": [51268, 3301, 11, 293, 415, 611, 32701, 281, 360, 341, 365, 264, 361, 3015, 26603, 300, 390, 5556, 365, 309, 13, 407, 300, 311, 439, 668, 670, 26859, 293, 2731, 51536], "temperature": 0.0, "avg_logprob": -0.18402861035059367, "compression_ratio": 1.6156462585034013, "no_speech_prob": 0.0006664221291430295}, {"id": 1841, "seek": 850220, "start": 8526.36, "end": 8528.12, "text": " Um", "tokens": [51572, 3301, 51660], "temperature": 0.0, "avg_logprob": -0.18402861035059367, "compression_ratio": 1.6156462585034013, "no_speech_prob": 0.0006664221291430295}, {"id": 1842, "seek": 850220, "start": 8528.12, "end": 8530.68, "text": " And then he ran remove with an overly permissive glob", "tokens": [51660, 400, 550, 415, 5872, 4159, 365, 364, 24324, 4784, 891, 488, 16125, 51788], "temperature": 0.0, "avg_logprob": -0.18402861035059367, "compression_ratio": 1.6156462585034013, "no_speech_prob": 0.0006664221291430295}, {"id": 1843, "seek": 853068, "start": 8530.92, "end": 8532.92, "text": " I deleted all of them", "tokens": [50376, 286, 22981, 439, 295, 552, 50476], "temperature": 0.0, "avg_logprob": -0.13475604150809495, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.0004371584509499371}, {"id": 1844, "seek": 853068, "start": 8533.32, "end": 8536.52, "text": " And uh, the files are kind of big in the postdoc's web servers at his house", "tokens": [50496, 400, 2232, 11, 264, 7098, 366, 733, 295, 955, 294, 264, 2183, 39966, 311, 3670, 15909, 412, 702, 1782, 50656], "temperature": 0.0, "avg_logprob": -0.13475604150809495, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.0004371584509499371}, {"id": 1845, "seek": 853068, "start": 8537.16, "end": 8539.16, "text": " We don't want to have to download all of them", "tokens": [50688, 492, 500, 380, 528, 281, 362, 281, 5484, 439, 295, 552, 50788], "temperature": 0.0, "avg_logprob": -0.13475604150809495, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.0004371584509499371}, {"id": 1846, "seek": 853068, "start": 8539.64, "end": 8541.48, "text": " um", "tokens": [50812, 1105, 50904], "temperature": 0.0, "avg_logprob": -0.13475604150809495, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.0004371584509499371}, {"id": 1847, "seek": 853068, "start": 8541.48, "end": 8546.92, "text": " That being said, uh, the web server at the house, which is on my laptop is completely inaccessible to everyone on this network", "tokens": [50904, 663, 885, 848, 11, 2232, 11, 264, 3670, 7154, 412, 264, 1782, 11, 597, 307, 322, 452, 10732, 307, 2584, 33230, 780, 964, 281, 1518, 322, 341, 3209, 51176], "temperature": 0.0, "avg_logprob": -0.13475604150809495, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.0004371584509499371}, {"id": 1848, "seek": 853068, "start": 8546.92, "end": 8549.16, "text": " It turns out which makes this a little trickier", "tokens": [51176, 467, 4523, 484, 597, 1669, 341, 257, 707, 4282, 811, 51288], "temperature": 0.0, "avg_logprob": -0.13475604150809495, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.0004371584509499371}, {"id": 1849, "seek": 853068, "start": 8550.2, "end": 8552.2, "text": " um", "tokens": [51340, 1105, 51440], "temperature": 0.0, "avg_logprob": -0.13475604150809495, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.0004371584509499371}, {"id": 1850, "seek": 853068, "start": 8554.6, "end": 8557.4, "text": " The data is now on uh github", "tokens": [51560, 440, 1412, 307, 586, 322, 2232, 290, 355, 836, 51700], "temperature": 0.0, "avg_logprob": -0.13475604150809495, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.0004371584509499371}, {"id": 1851, "seek": 855740, "start": 8557.64, "end": 8561.96, "text": " At uh in this repo called MRI data, sorry", "tokens": [50376, 1711, 2232, 294, 341, 49040, 1219, 32812, 1412, 11, 2597, 50592], "temperature": 0.0, "avg_logprob": -0.1552721911137647, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.0006069157971069217}, {"id": 1852, "seek": 855740, "start": 8567.8, "end": 8569.8, "text": " And uh", "tokens": [50884, 400, 2232, 50984], "temperature": 0.0, "avg_logprob": -0.1552721911137647, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.0006069157971069217}, {"id": 1853, "seek": 855740, "start": 8569.96, "end": 8573.16, "text": " This may not be possible. So we'll find that it's going to be a learning adventure for all of us", "tokens": [50992, 639, 815, 406, 312, 1944, 13, 407, 321, 603, 915, 300, 309, 311, 516, 281, 312, 257, 2539, 9868, 337, 439, 295, 505, 51152], "temperature": 0.0, "avg_logprob": -0.1552721911137647, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.0006069157971069217}, {"id": 1854, "seek": 855740, "start": 8573.88, "end": 8578.119999999999, "text": " Um, we do know a couple of things about the data. So this is sort of our exploratory thing", "tokens": [51188, 3301, 11, 321, 360, 458, 257, 1916, 295, 721, 466, 264, 1412, 13, 407, 341, 307, 1333, 295, 527, 24765, 4745, 551, 51400], "temperature": 0.0, "avg_logprob": -0.1552721911137647, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.0006069157971069217}, {"id": 1855, "seek": 855740, "start": 8578.199999999999, "end": 8580.84, "text": " They all do follow this naming convention", "tokens": [51404, 814, 439, 360, 1524, 341, 25290, 10286, 51536], "temperature": 0.0, "avg_logprob": -0.1552721911137647, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.0006069157971069217}, {"id": 1856, "seek": 855740, "start": 8581.4, "end": 8586.199999999999, "text": " Uh, so you just have like sub dash two-digit number underscore four-digit number dot NII", "tokens": [51564, 4019, 11, 370, 291, 445, 362, 411, 1422, 8240, 732, 12, 25259, 270, 1230, 37556, 1451, 12, 25259, 270, 1230, 5893, 426, 9503, 51804], "temperature": 0.0, "avg_logprob": -0.1552721911137647, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.0006069157971069217}, {"id": 1857, "seek": 858620, "start": 8587.16, "end": 8588.28, "text": " Um", "tokens": [50412, 3301, 50468], "temperature": 0.0, "avg_logprob": -0.14687070501856056, "compression_ratio": 1.4527363184079602, "no_speech_prob": 0.00023043401597533375}, {"id": 1858, "seek": 858620, "start": 8588.28, "end": 8593.640000000001, "text": " The files are large, but the first 348 bytes of each file is a header", "tokens": [50468, 440, 7098, 366, 2416, 11, 457, 264, 700, 12790, 23, 36088, 295, 1184, 3991, 307, 257, 23117, 50736], "temperature": 0.0, "avg_logprob": -0.14687070501856056, "compression_ratio": 1.4527363184079602, "no_speech_prob": 0.00023043401597533375}, {"id": 1859, "seek": 858620, "start": 8594.44, "end": 8597.0, "text": " So you can nominally just pull down the header", "tokens": [50776, 407, 291, 393, 5369, 19801, 445, 2235, 760, 264, 23117, 50904], "temperature": 0.0, "avg_logprob": -0.14687070501856056, "compression_ratio": 1.4527363184079602, "no_speech_prob": 0.00023043401597533375}, {"id": 1860, "seek": 858620, "start": 8598.52, "end": 8601.480000000001, "text": " Um, we're pretty sure there are 19 mouse lemur scans", "tokens": [50980, 3301, 11, 321, 434, 1238, 988, 456, 366, 1294, 9719, 7495, 374, 35116, 51128], "temperature": 0.0, "avg_logprob": -0.14687070501856056, "compression_ratio": 1.4527363184079602, "no_speech_prob": 0.00023043401597533375}, {"id": 1861, "seek": 858620, "start": 8603.240000000002, "end": 8604.52, "text": " Um", "tokens": [51216, 3301, 51280], "temperature": 0.0, "avg_logprob": -0.14687070501856056, "compression_ratio": 1.4527363184079602, "no_speech_prob": 0.00023043401597533375}, {"id": 1862, "seek": 858620, "start": 8604.52, "end": 8609.800000000001, "text": " And the circle spine study going on the lab next door, which is mixed in with all this data only has six subjects", "tokens": [51280, 400, 264, 6329, 15395, 2979, 516, 322, 264, 2715, 958, 2853, 11, 597, 307, 7467, 294, 365, 439, 341, 1412, 787, 575, 2309, 13066, 51544], "temperature": 0.0, "avg_logprob": -0.14687070501856056, "compression_ratio": 1.4527363184079602, "no_speech_prob": 0.00023043401597533375}, {"id": 1863, "seek": 858620, "start": 8611.720000000001, "end": 8613.08, "text": " Um", "tokens": [51640, 3301, 51708], "temperature": 0.0, "avg_logprob": -0.14687070501856056, "compression_ratio": 1.4527363184079602, "no_speech_prob": 0.00023043401597533375}, {"id": 1864, "seek": 861308, "start": 8613.08, "end": 8621.0, "text": " And nominally this is how you would use curl to only pull down the first 348 bytes of a file if there were a functioning web server available", "tokens": [50364, 400, 5369, 19801, 341, 307, 577, 291, 576, 764, 22591, 281, 787, 2235, 760, 264, 700, 12790, 23, 36088, 295, 257, 3991, 498, 456, 645, 257, 18483, 3670, 7154, 2435, 50760], "temperature": 0.0, "avg_logprob": -0.11205763345236307, "compression_ratio": 1.5594713656387664, "no_speech_prob": 7.030674169072881e-05}, {"id": 1865, "seek": 861308, "start": 8621.56, "end": 8627.24, "text": " Um, we're going to discover together if you can do this from like the raw link on a github repo", "tokens": [50788, 3301, 11, 321, 434, 516, 281, 4411, 1214, 498, 291, 393, 360, 341, 490, 411, 264, 8936, 2113, 322, 257, 290, 355, 836, 49040, 51072], "temperature": 0.0, "avg_logprob": -0.11205763345236307, "compression_ratio": 1.5594713656387664, "no_speech_prob": 7.030674169072881e-05}, {"id": 1866, "seek": 861308, "start": 8628.28, "end": 8630.28, "text": " But we're not sure", "tokens": [51124, 583, 321, 434, 406, 988, 51224], "temperature": 0.0, "avg_logprob": -0.11205763345236307, "compression_ratio": 1.5594713656387664, "no_speech_prob": 7.030674169072881e-05}, {"id": 1867, "seek": 861308, "start": 8631.08, "end": 8633.08, "text": " Um", "tokens": [51264, 3301, 51364], "temperature": 0.0, "avg_logprob": -0.11205763345236307, "compression_ratio": 1.5594713656387664, "no_speech_prob": 7.030674169072881e-05}, {"id": 1868, "seek": 861308, "start": 8633.32, "end": 8638.76, "text": " So having said that if you would like to even try this and we welcome your support and efforts", "tokens": [51376, 407, 1419, 848, 300, 498, 291, 576, 411, 281, 754, 853, 341, 293, 321, 2928, 428, 1406, 293, 6484, 51648], "temperature": 0.0, "avg_logprob": -0.11205763345236307, "compression_ratio": 1.5594713656387664, "no_speech_prob": 7.030674169072881e-05}, {"id": 1869, "seek": 863876, "start": 8639.64, "end": 8646.92, "text": " You can install, uh, n i babel, uh, n i b a b e l on kind of forage, which is a nice package for loading in this MRI data", "tokens": [50408, 509, 393, 3625, 11, 2232, 11, 297, 741, 7564, 338, 11, 2232, 11, 297, 741, 272, 257, 272, 308, 287, 322, 733, 295, 337, 609, 11, 597, 307, 257, 1481, 7372, 337, 15114, 294, 341, 32812, 1412, 50772], "temperature": 0.0, "avg_logprob": -0.20699618412898138, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.0038830512203276157}, {"id": 1870, "seek": 863876, "start": 8648.12, "end": 8652.84, "text": " It's on pip, right? I don't know. Oh, you don't know. Okay. Yeah, I don't even look on pip anymore. Yeah", "tokens": [50832, 467, 311, 322, 8489, 11, 558, 30, 286, 500, 380, 458, 13, 876, 11, 291, 500, 380, 458, 13, 1033, 13, 865, 11, 286, 500, 380, 754, 574, 322, 8489, 3602, 13, 865, 51068], "temperature": 0.0, "avg_logprob": -0.20699618412898138, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.0038830512203276157}, {"id": 1871, "seek": 863876, "start": 8656.28, "end": 8658.28, "text": " And then um", "tokens": [51240, 400, 550, 1105, 51340], "temperature": 0.0, "avg_logprob": -0.20699618412898138, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.0038830512203276157}, {"id": 1872, "seek": 863876, "start": 8658.6, "end": 8661.32, "text": " We are all gonna try together to see if we can", "tokens": [51356, 492, 366, 439, 799, 853, 1214, 281, 536, 498, 321, 393, 51492], "temperature": 0.0, "avg_logprob": -0.20699618412898138, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.0038830512203276157}, {"id": 1873, "seek": 863876, "start": 8662.04, "end": 8665.800000000001, "text": " Just download the headers of each of these files to sort of determine which of them are the ones we want", "tokens": [51528, 1449, 5484, 264, 45101, 295, 1184, 295, 613, 7098, 281, 1333, 295, 6997, 597, 295, 552, 366, 264, 2306, 321, 528, 51716], "temperature": 0.0, "avg_logprob": -0.20699618412898138, "compression_ratio": 1.6115702479338843, "no_speech_prob": 0.0038830512203276157}, {"id": 1874, "seek": 866580, "start": 8665.8, "end": 8670.519999999999, "text": " So we don't just download everything which is never usually the right answer to these sorts of questions", "tokens": [50364, 407, 321, 500, 380, 445, 5484, 1203, 597, 307, 1128, 2673, 264, 558, 1867, 281, 613, 7527, 295, 1651, 50600], "temperature": 0.0, "avg_logprob": -0.16272967843448413, "compression_ratio": 1.458128078817734, "no_speech_prob": 0.0037066712975502014}, {"id": 1875, "seek": 866580, "start": 8672.599999999999, "end": 8676.679999999998, "text": " Maybe we should see if we can curl one of them right now. Yeah, let's try it. Okay", "tokens": [50704, 2704, 321, 820, 536, 498, 321, 393, 22591, 472, 295, 552, 558, 586, 13, 865, 11, 718, 311, 853, 309, 13, 1033, 50908], "temperature": 0.0, "avg_logprob": -0.16272967843448413, "compression_ratio": 1.458128078817734, "no_speech_prob": 0.0037066712975502014}, {"id": 1876, "seek": 866580, "start": 8677.64, "end": 8679.64, "text": " um", "tokens": [50956, 1105, 51056], "temperature": 0.0, "avg_logprob": -0.16272967843448413, "compression_ratio": 1.458128078817734, "no_speech_prob": 0.0037066712975502014}, {"id": 1877, "seek": 866580, "start": 8681.16, "end": 8683.48, "text": " All right, so what it's curl dash", "tokens": [51132, 1057, 558, 11, 370, 437, 309, 311, 22591, 8240, 51248], "temperature": 0.0, "avg_logprob": -0.16272967843448413, "compression_ratio": 1.458128078817734, "no_speech_prob": 0.0037066712975502014}, {"id": 1878, "seek": 866580, "start": 8686.599999999999, "end": 8688.199999999999, "text": " R", "tokens": [51404, 497, 51484], "temperature": 0.0, "avg_logprob": -0.16272967843448413, "compression_ratio": 1.458128078817734, "no_speech_prob": 0.0037066712975502014}, {"id": 1879, "seek": 866580, "start": 8688.199999999999, "end": 8690.199999999999, "text": " and then", "tokens": [51484, 293, 550, 51584], "temperature": 0.0, "avg_logprob": -0.16272967843448413, "compression_ratio": 1.458128078817734, "no_speech_prob": 0.0037066712975502014}, {"id": 1880, "seek": 866580, "start": 8690.84, "end": 8694.519999999999, "text": " What I should have kept that and then what's the github URL?", "tokens": [51616, 708, 286, 820, 362, 4305, 300, 293, 550, 437, 311, 264, 290, 355, 836, 12905, 30, 51800], "temperature": 0.0, "avg_logprob": -0.16272967843448413, "compression_ratio": 1.458128078817734, "no_speech_prob": 0.0037066712975502014}, {"id": 1881, "seek": 869580, "start": 8695.8, "end": 8698.039999999999, "text": " Well, the github api should be", "tokens": [50364, 1042, 11, 264, 290, 355, 836, 1882, 72, 820, 312, 50476], "temperature": 0.0, "avg_logprob": -0.23634159153905407, "compression_ratio": 1.289855072463768, "no_speech_prob": 0.0008423990802839398}, {"id": 1882, "seek": 869580, "start": 8701.24, "end": 8703.4, "text": " This feels way too much like real science right now", "tokens": [50636, 639, 3417, 636, 886, 709, 411, 957, 3497, 558, 586, 50744], "temperature": 0.0, "avg_logprob": -0.23634159153905407, "compression_ratio": 1.289855072463768, "no_speech_prob": 0.0008423990802839398}, {"id": 1883, "seek": 869580, "start": 8706.92, "end": 8708.92, "text": " So it would be uh", "tokens": [50920, 407, 309, 576, 312, 2232, 51020], "temperature": 0.0, "avg_logprob": -0.23634159153905407, "compression_ratio": 1.289855072463768, "no_speech_prob": 0.0008423990802839398}, {"id": 1884, "seek": 869580, "start": 8711.88, "end": 8717.24, "text": " github.com g4 site MRI data sorry blob master rifles true", "tokens": [51168, 290, 355, 836, 13, 1112, 290, 19, 3621, 32812, 1412, 2597, 46115, 4505, 34058, 2074, 51436], "temperature": 0.0, "avg_logprob": -0.23634159153905407, "compression_ratio": 1.289855072463768, "no_speech_prob": 0.0008423990802839398}, {"id": 1885, "seek": 869580, "start": 8719.64, "end": 8721.64, "text": " That didn't work", "tokens": [51556, 663, 994, 380, 589, 51656], "temperature": 0.0, "avg_logprob": -0.23634159153905407, "compression_ratio": 1.289855072463768, "no_speech_prob": 0.0008423990802839398}, {"id": 1886, "seek": 869580, "start": 8723.4, "end": 8725.4, "text": " No", "tokens": [51744, 883, 51844], "temperature": 0.0, "avg_logprob": -0.23634159153905407, "compression_ratio": 1.289855072463768, "no_speech_prob": 0.0008423990802839398}, {"id": 1887, "seek": 872580, "start": 8726.679999999998, "end": 8727.8, "text": " I", "tokens": [50408, 286, 50464], "temperature": 0.0, "avg_logprob": -0.16413899355156478, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.000423838704591617}, {"id": 1888, "seek": 872580, "start": 8727.8, "end": 8729.8, "text": " Thought there was like a real", "tokens": [50464, 23058, 456, 390, 411, 257, 957, 50564], "temperature": 0.0, "avg_logprob": -0.16413899355156478, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.000423838704591617}, {"id": 1889, "seek": 872580, "start": 8730.599999999999, "end": 8735.24, "text": " Okay, you know like a raw user data kind of thing. Where does that live at?", "tokens": [50604, 1033, 11, 291, 458, 411, 257, 8936, 4195, 1412, 733, 295, 551, 13, 2305, 775, 300, 1621, 412, 30, 50836], "temperature": 0.0, "avg_logprob": -0.16413899355156478, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.000423838704591617}, {"id": 1890, "seek": 872580, "start": 8736.359999999999, "end": 8738.359999999999, "text": " I think usually it's there unless the file is too big", "tokens": [50892, 286, 519, 2673, 309, 311, 456, 5969, 264, 3991, 307, 886, 955, 50992], "temperature": 0.0, "avg_logprob": -0.16413899355156478, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.000423838704591617}, {"id": 1891, "seek": 872580, "start": 8739.8, "end": 8741.4, "text": " Oh", "tokens": [51064, 876, 51144], "temperature": 0.0, "avg_logprob": -0.16413899355156478, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.000423838704591617}, {"id": 1892, "seek": 872580, "start": 8741.4, "end": 8745.72, "text": " Okay, this is why you don't store, you know big data on github this way. It's a really bad pattern", "tokens": [51144, 1033, 11, 341, 307, 983, 291, 500, 380, 3531, 11, 291, 458, 955, 1412, 322, 290, 355, 836, 341, 636, 13, 467, 311, 257, 534, 1578, 5102, 51360], "temperature": 0.0, "avg_logprob": -0.16413899355156478, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.000423838704591617}, {"id": 1893, "seek": 872580, "start": 8750.84, "end": 8752.84, "text": " Let's try this one", "tokens": [51616, 961, 311, 853, 341, 472, 51716], "temperature": 0.0, "avg_logprob": -0.16413899355156478, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.000423838704591617}, {"id": 1894, "seek": 875580, "start": 8756.759999999998, "end": 8758.759999999998, "text": " Received", "tokens": [50412, 41962, 3194, 50512], "temperature": 0.0, "avg_logprob": -0.2760760188102722, "compression_ratio": 1.184782608695652, "no_speech_prob": 0.004131536465138197}, {"id": 1895, "seek": 875580, "start": 8767.16, "end": 8769.48, "text": " No such key or maybe that one's not up yet", "tokens": [50932, 883, 1270, 2141, 420, 1310, 300, 472, 311, 406, 493, 1939, 51048], "temperature": 0.0, "avg_logprob": -0.2760760188102722, "compression_ratio": 1.184782608695652, "no_speech_prob": 0.004131536465138197}, {"id": 1896, "seek": 875580, "start": 8775.24, "end": 8777.56, "text": " It's another one of these file names that's definitely up", "tokens": [51336, 467, 311, 1071, 472, 295, 613, 3991, 5288, 300, 311, 2138, 493, 51452], "temperature": 0.0, "avg_logprob": -0.2760760188102722, "compression_ratio": 1.184782608695652, "no_speech_prob": 0.004131536465138197}, {"id": 1897, "seek": 878580, "start": 8786.279999999999, "end": 8788.279999999999, "text": " Uh", "tokens": [50388, 4019, 50488], "temperature": 0.0, "avg_logprob": -0.27479129367404515, "compression_ratio": 1.3098591549295775, "no_speech_prob": 0.003376056207343936}, {"id": 1898, "seek": 878580, "start": 8792.439999999999, "end": 8794.439999999999, "text": " Okay, time to rewrite the slides", "tokens": [50696, 1033, 11, 565, 281, 28132, 264, 9788, 50796], "temperature": 0.0, "avg_logprob": -0.27479129367404515, "compression_ratio": 1.3098591549295775, "no_speech_prob": 0.003376056207343936}, {"id": 1899, "seek": 878580, "start": 8796.599999999999, "end": 8803.88, "text": " Which you'll be able to reload and copy from yeah, what's that digital ocean droplet? Uh, they're all all", "tokens": [50904, 3013, 291, 603, 312, 1075, 281, 25628, 293, 5055, 490, 1338, 11, 437, 311, 300, 4562, 7810, 3789, 14657, 30, 4019, 11, 436, 434, 439, 439, 51268], "temperature": 0.0, "avg_logprob": -0.27479129367404515, "compression_ratio": 1.3098591549295775, "no_speech_prob": 0.003376056207343936}, {"id": 1900, "seek": 878580, "start": 8806.039999999999, "end": 8808.039999999999, "text": " Put it in this chat", "tokens": [51376, 4935, 309, 294, 341, 5081, 51476], "temperature": 0.0, "avg_logprob": -0.27479129367404515, "compression_ratio": 1.3098591549295775, "no_speech_prob": 0.003376056207343936}, {"id": 1901, "seek": 878580, "start": 8812.439999999999, "end": 8814.439999999999, "text": " Sorry about this overall", "tokens": [51696, 4919, 466, 341, 4787, 51796], "temperature": 0.0, "avg_logprob": -0.27479129367404515, "compression_ratio": 1.3098591549295775, "no_speech_prob": 0.003376056207343936}, {"id": 1902, "seek": 881580, "start": 8816.519999999999, "end": 8818.519999999999, "text": " By", "tokens": [50400, 3146, 50500], "temperature": 0.0, "avg_logprob": -0.2124504962209928, "compression_ratio": 1.4071428571428573, "no_speech_prob": 0.003428936004638672}, {"id": 1903, "seek": 881580, "start": 8821.4, "end": 8825.8, "text": " Yes, yeah, no the network's all kinds of fun today", "tokens": [50644, 1079, 11, 1338, 11, 572, 264, 3209, 311, 439, 3685, 295, 1019, 965, 50864], "temperature": 0.0, "avg_logprob": -0.2124504962209928, "compression_ratio": 1.4071428571428573, "no_speech_prob": 0.003428936004638672}, {"id": 1904, "seek": 881580, "start": 8837.08, "end": 8843.8, "text": " Don't help me google. I don't want your help your help is terrible and poison. It's not help. It's spying. Just stop spying on everything we do", "tokens": [51428, 1468, 380, 854, 385, 20742, 13, 286, 500, 380, 528, 428, 854, 428, 854, 307, 6237, 293, 10836, 13, 467, 311, 406, 854, 13, 467, 311, 637, 1840, 13, 1449, 1590, 637, 1840, 322, 1203, 321, 360, 51764], "temperature": 0.0, "avg_logprob": -0.2124504962209928, "compression_ratio": 1.4071428571428573, "no_speech_prob": 0.003428936004638672}, {"id": 1905, "seek": 884380, "start": 8844.039999999999, "end": 8846.039999999999, "text": " They're watching us right now", "tokens": [50376, 814, 434, 1976, 505, 558, 586, 50476], "temperature": 0.0, "avg_logprob": -0.28658461570739746, "compression_ratio": 1.3774834437086092, "no_speech_prob": 0.009858522564172745}, {"id": 1906, "seek": 884380, "start": 8847.48, "end": 8850.039999999999, "text": " That's true, but we we ask them to", "tokens": [50548, 663, 311, 2074, 11, 457, 321, 321, 1029, 552, 281, 50676], "temperature": 0.0, "avg_logprob": -0.28658461570739746, "compression_ratio": 1.3774834437086092, "no_speech_prob": 0.009858522564172745}, {"id": 1907, "seek": 884380, "start": 8858.279999999999, "end": 8863.56, "text": " Can you curl down a file list from there? Is that work? No, I don't well, I don't know how to what was the command for doing", "tokens": [51088, 1664, 291, 22591, 760, 257, 3991, 1329, 490, 456, 30, 1119, 300, 589, 30, 883, 11, 286, 500, 380, 731, 11, 286, 500, 380, 458, 577, 281, 437, 390, 264, 5622, 337, 884, 51352], "temperature": 0.0, "avg_logprob": -0.28658461570739746, "compression_ratio": 1.3774834437086092, "no_speech_prob": 0.009858522564172745}, {"id": 1908, "seek": 884380, "start": 8865.24, "end": 8867.24, "text": " All right, I think", "tokens": [51436, 1057, 558, 11, 286, 519, 51536], "temperature": 0.0, "avg_logprob": -0.28658461570739746, "compression_ratio": 1.3774834437086092, "no_speech_prob": 0.009858522564172745}, {"id": 1909, "seek": 886724, "start": 8867.56, "end": 8873.48, "text": " It should just be this", "tokens": [50380, 467, 820, 445, 312, 341, 50676], "temperature": 0.0, "avg_logprob": -0.240676482518514, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.0034831746015697718}, {"id": 1910, "seek": 886724, "start": 8877.64, "end": 8879.64, "text": " Okay, does it work", "tokens": [50884, 1033, 11, 775, 309, 589, 50984], "temperature": 0.0, "avg_logprob": -0.240676482518514, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.0034831746015697718}, {"id": 1911, "seek": 886724, "start": 8880.119999999999, "end": 8884.119999999999, "text": " Yeah, that's yeah that that the information's in there. Okay, so", "tokens": [51008, 865, 11, 300, 311, 1338, 300, 300, 264, 1589, 311, 294, 456, 13, 1033, 11, 370, 51208], "temperature": 0.0, "avg_logprob": -0.240676482518514, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.0034831746015697718}, {"id": 1912, "seek": 886724, "start": 8886.039999999999, "end": 8888.039999999999, "text": " Yes", "tokens": [51304, 1079, 51404], "temperature": 0.0, "avg_logprob": -0.240676482518514, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.0034831746015697718}, {"id": 1913, "seek": 886724, "start": 8888.039999999999, "end": 8890.039999999999, "text": " So you've got an xml block", "tokens": [51404, 407, 291, 600, 658, 364, 2031, 15480, 3461, 51504], "temperature": 0.0, "avg_logprob": -0.240676482518514, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.0034831746015697718}, {"id": 1914, "seek": 886724, "start": 8890.36, "end": 8892.36, "text": " all right", "tokens": [51520, 439, 558, 51620], "temperature": 0.0, "avg_logprob": -0.240676482518514, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.0034831746015697718}, {"id": 1915, "seek": 886724, "start": 8892.76, "end": 8896.92, "text": " We are happy to answer questions along the way this should actually work though, which is kind of amazing", "tokens": [51640, 492, 366, 2055, 281, 1867, 1651, 2051, 264, 636, 341, 820, 767, 589, 1673, 11, 597, 307, 733, 295, 2243, 51848], "temperature": 0.0, "avg_logprob": -0.240676482518514, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.0034831746015697718}, {"id": 1916, "seek": 889724, "start": 8898.119999999999, "end": 8899.8, "text": " so we have", "tokens": [50408, 370, 321, 362, 50492], "temperature": 0.0, "avg_logprob": -0.1535670280456543, "compression_ratio": 1.7165991902834008, "no_speech_prob": 0.00047277091653086245}, {"id": 1917, "seek": 889724, "start": 8899.8, "end": 8905.56, "text": " The post doc is better than we thought he was and has uploaded the files to this digital ocean droplet", "tokens": [50492, 440, 2183, 3211, 307, 1101, 813, 321, 1194, 415, 390, 293, 575, 17135, 264, 7098, 281, 341, 4562, 7810, 3789, 14657, 50780], "temperature": 0.0, "avg_logprob": -0.1535670280456543, "compression_ratio": 1.7165991902834008, "no_speech_prob": 0.00047277091653086245}, {"id": 1918, "seek": 889724, "start": 8906.119999999999, "end": 8908.119999999999, "text": " That I've just added to this slide", "tokens": [50808, 663, 286, 600, 445, 3869, 281, 341, 4137, 50908], "temperature": 0.0, "avg_logprob": -0.1535670280456543, "compression_ratio": 1.7165991902834008, "no_speech_prob": 0.00047277091653086245}, {"id": 1919, "seek": 889724, "start": 8909.0, "end": 8913.4, "text": " If you reload the slide deck you should be oh, I haven't I haven't pushed it up. Okay. I'm sorry", "tokens": [50952, 759, 291, 25628, 264, 4137, 9341, 291, 820, 312, 1954, 11, 286, 2378, 380, 286, 2378, 380, 9152, 309, 493, 13, 1033, 13, 286, 478, 2597, 51172], "temperature": 0.0, "avg_logprob": -0.1535670280456543, "compression_ratio": 1.7165991902834008, "no_speech_prob": 0.00047277091653086245}, {"id": 1920, "seek": 889724, "start": 8913.72, "end": 8918.36, "text": " I can't I can't push anything right now because I haven't set up the ssh thing and it wasn't working. I'm sorry", "tokens": [51188, 286, 393, 380, 286, 393, 380, 2944, 1340, 558, 586, 570, 286, 2378, 380, 992, 493, 264, 262, 2716, 551, 293, 309, 2067, 380, 1364, 13, 286, 478, 2597, 51420], "temperature": 0.0, "avg_logprob": -0.1535670280456543, "compression_ratio": 1.7165991902834008, "no_speech_prob": 0.00047277091653086245}, {"id": 1921, "seek": 889724, "start": 8919.32, "end": 8920.52, "text": " um", "tokens": [51468, 1105, 51528], "temperature": 0.0, "avg_logprob": -0.1535670280456543, "compression_ratio": 1.7165991902834008, "no_speech_prob": 0.00047277091653086245}, {"id": 1922, "seek": 889724, "start": 8920.52, "end": 8924.039999999999, "text": " But if you curl that url you will get", "tokens": [51528, 583, 498, 291, 22591, 300, 4038, 75, 291, 486, 483, 51704], "temperature": 0.0, "avg_logprob": -0.1535670280456543, "compression_ratio": 1.7165991902834008, "no_speech_prob": 0.00047277091653086245}, {"id": 1923, "seek": 889724, "start": 8925.16, "end": 8927.16, "text": " This looking kind of blob", "tokens": [51760, 639, 1237, 733, 295, 46115, 51860], "temperature": 0.0, "avg_logprob": -0.1535670280456543, "compression_ratio": 1.7165991902834008, "no_speech_prob": 0.00047277091653086245}, {"id": 1924, "seek": 892724, "start": 8927.72, "end": 8929.72, "text": " Which does have all of the file names in it", "tokens": [50388, 3013, 775, 362, 439, 295, 264, 3991, 5288, 294, 309, 50488], "temperature": 0.0, "avg_logprob": -0.17063686825813504, "compression_ratio": 1.6473029045643153, "no_speech_prob": 0.000305268942611292}, {"id": 1925, "seek": 892724, "start": 8930.199999999999, "end": 8932.199999999999, "text": " So you can see there's one", "tokens": [50512, 407, 291, 393, 536, 456, 311, 472, 50612], "temperature": 0.0, "avg_logprob": -0.17063686825813504, "compression_ratio": 1.6473029045643153, "no_speech_prob": 0.000305268942611292}, {"id": 1926, "seek": 892724, "start": 8932.36, "end": 8933.96, "text": " I lost it there", "tokens": [50620, 286, 2731, 309, 456, 50700], "temperature": 0.0, "avg_logprob": -0.17063686825813504, "compression_ratio": 1.6473029045643153, "no_speech_prob": 0.000305268942611292}, {"id": 1927, "seek": 892724, "start": 8933.96, "end": 8935.96, "text": " sub 187785.nii", "tokens": [50700, 1422, 2443, 17512, 19287, 13, 3722, 72, 50800], "temperature": 0.0, "avg_logprob": -0.17063686825813504, "compression_ratio": 1.6473029045643153, "no_speech_prob": 0.000305268942611292}, {"id": 1928, "seek": 892724, "start": 8937.56, "end": 8942.039999999999, "text": " And you should be able to pull out from this a list of all all of the names that match that pattern", "tokens": [50880, 400, 291, 820, 312, 1075, 281, 2235, 484, 490, 341, 257, 1329, 295, 439, 439, 295, 264, 5288, 300, 2995, 300, 5102, 51104], "temperature": 0.0, "avg_logprob": -0.17063686825813504, "compression_ratio": 1.6473029045643153, "no_speech_prob": 0.000305268942611292}, {"id": 1929, "seek": 892724, "start": 8942.76, "end": 8944.76, "text": " and then you can", "tokens": [51140, 293, 550, 291, 393, 51240], "temperature": 0.0, "avg_logprob": -0.17063686825813504, "compression_ratio": 1.6473029045643153, "no_speech_prob": 0.000305268942611292}, {"id": 1930, "seek": 892724, "start": 8944.76, "end": 8948.92, "text": " Pull down only the first 348 bytes of each of them load them into", "tokens": [51240, 15074, 760, 787, 264, 700, 12790, 23, 36088, 295, 1184, 295, 552, 3677, 552, 666, 51448], "temperature": 0.0, "avg_logprob": -0.17063686825813504, "compression_ratio": 1.6473029045643153, "no_speech_prob": 0.000305268942611292}, {"id": 1931, "seek": 892724, "start": 8950.039999999999, "end": 8955.56, "text": " Ni babel and then inspect sort of the dimensions of the thing to figure out which are sort of the correct images", "tokens": [51504, 12370, 7564, 338, 293, 550, 15018, 1333, 295, 264, 12819, 295, 264, 551, 281, 2573, 484, 597, 366, 1333, 295, 264, 3006, 5267, 51780], "temperature": 0.0, "avg_logprob": -0.17063686825813504, "compression_ratio": 1.6473029045643153, "no_speech_prob": 0.000305268942611292}, {"id": 1932, "seek": 895724, "start": 8958.039999999999, "end": 8960.039999999999, "text": " Yes, I can", "tokens": [50404, 1079, 11, 286, 393, 50504], "temperature": 0.0, "avg_logprob": -0.2563367990347055, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.0043305931612849236}, {"id": 1933, "seek": 895724, "start": 8968.28, "end": 8975.08, "text": " You probably need to well actually yeah, it should just work. Yeah. Yeah, it works. Yeah, I do that all the time", "tokens": [50916, 509, 1391, 643, 281, 731, 767, 1338, 11, 309, 820, 445, 589, 13, 865, 13, 865, 11, 309, 1985, 13, 865, 11, 286, 360, 300, 439, 264, 565, 51256], "temperature": 0.0, "avg_logprob": -0.2563367990347055, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.0043305931612849236}, {"id": 1934, "seek": 895724, "start": 8976.44, "end": 8979.0, "text": " All right, kind of install something and then import it immediately", "tokens": [51324, 1057, 558, 11, 733, 295, 3625, 746, 293, 550, 974, 309, 4258, 51452], "temperature": 0.0, "avg_logprob": -0.2563367990347055, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.0043305931612849236}, {"id": 1935, "seek": 897900, "start": 8979.24, "end": 8981.24, "text": " Yeah, so", "tokens": [50376, 865, 11, 370, 50476], "temperature": 0.0, "avg_logprob": -0.20776247622361824, "compression_ratio": 1.5144508670520231, "no_speech_prob": 0.008574037812650204}, {"id": 1936, "seek": 897900, "start": 8982.76, "end": 8988.12, "text": " Uh, yeah, and if you're having a problem or if you're running to issues like come just raise your hand let let us know", "tokens": [50552, 4019, 11, 1338, 11, 293, 498, 291, 434, 1419, 257, 1154, 420, 498, 291, 434, 2614, 281, 2663, 411, 808, 445, 5300, 428, 1011, 718, 718, 505, 458, 50820], "temperature": 0.0, "avg_logprob": -0.20776247622361824, "compression_ratio": 1.5144508670520231, "no_speech_prob": 0.008574037812650204}, {"id": 1937, "seek": 897900, "start": 8992.52, "end": 8995.32, "text": " And thanks for uh dealing with our debugging", "tokens": [51040, 400, 3231, 337, 2232, 6260, 365, 527, 45592, 51180], "temperature": 0.0, "avg_logprob": -0.20776247622361824, "compression_ratio": 1.5144508670520231, "no_speech_prob": 0.008574037812650204}, {"id": 1938, "seek": 897900, "start": 8999.96, "end": 9005.24, "text": " So for a quick update on our progress here is there anyone anyone doing on this if at all", "tokens": [51412, 407, 337, 257, 1702, 5623, 322, 527, 4205, 510, 307, 456, 2878, 2878, 884, 322, 341, 498, 412, 439, 51676], "temperature": 0.0, "avg_logprob": -0.20776247622361824, "compression_ratio": 1.5144508670520231, "no_speech_prob": 0.008574037812650204}, {"id": 1939, "seek": 900900, "start": 9009.0, "end": 9010.52, "text": " Sorry to hear that", "tokens": [50364, 4919, 281, 1568, 300, 50440], "temperature": 0.0, "avg_logprob": -0.21269132323184256, "compression_ratio": 1.6254980079681276, "no_speech_prob": 0.0018094753613695502}, {"id": 1940, "seek": 900900, "start": 9010.52, "end": 9011.72, "text": " so, um", "tokens": [50440, 370, 11, 1105, 50500], "temperature": 0.0, "avg_logprob": -0.21269132323184256, "compression_ratio": 1.6254980079681276, "no_speech_prob": 0.0018094753613695502}, {"id": 1941, "seek": 900900, "start": 9011.72, "end": 9015.4, "text": " One thing you can do for some of this is you first want to get", "tokens": [50500, 1485, 551, 291, 393, 360, 337, 512, 295, 341, 307, 291, 700, 528, 281, 483, 50684], "temperature": 0.0, "avg_logprob": -0.21269132323184256, "compression_ratio": 1.6254980079681276, "no_speech_prob": 0.0018094753613695502}, {"id": 1942, "seek": 900900, "start": 9017.32, "end": 9019.32, "text": " Uh the raw kind of page", "tokens": [50780, 4019, 264, 8936, 733, 295, 3028, 50880], "temperature": 0.0, "avg_logprob": -0.21269132323184256, "compression_ratio": 1.6254980079681276, "no_speech_prob": 0.0018094753613695502}, {"id": 1943, "seek": 900900, "start": 9019.96, "end": 9025.0, "text": " So that would be you could just curl down that base. You are all there. I actually got encoded. This is a yeah", "tokens": [50912, 407, 300, 576, 312, 291, 727, 445, 22591, 760, 300, 3096, 13, 509, 366, 439, 456, 13, 286, 767, 658, 2058, 12340, 13, 639, 307, 257, 1338, 51164], "temperature": 0.0, "avg_logprob": -0.21269132323184256, "compression_ratio": 1.6254980079681276, "no_speech_prob": 0.0018094753613695502}, {"id": 1944, "seek": 900900, "start": 9025.0, "end": 9027.0, "text": " Can you make the font? I sure can", "tokens": [51164, 1664, 291, 652, 264, 10703, 30, 286, 988, 393, 51264], "temperature": 0.0, "avg_logprob": -0.21269132323184256, "compression_ratio": 1.6254980079681276, "no_speech_prob": 0.0018094753613695502}, {"id": 1945, "seek": 900900, "start": 9029.72, "end": 9034.52, "text": " You want to show the other command? Oh, yeah base. You're all right. Yeah, so then if you have this", "tokens": [51400, 509, 528, 281, 855, 264, 661, 5622, 30, 876, 11, 1338, 3096, 13, 509, 434, 439, 558, 13, 865, 11, 370, 550, 498, 291, 362, 341, 51640], "temperature": 0.0, "avg_logprob": -0.21269132323184256, "compression_ratio": 1.6254980079681276, "no_speech_prob": 0.0018094753613695502}, {"id": 1946, "seek": 900900, "start": 9035.32, "end": 9037.4, "text": " Really long painful string like this, but you know", "tokens": [51680, 4083, 938, 11697, 6798, 411, 341, 11, 457, 291, 458, 51784], "temperature": 0.0, "avg_logprob": -0.21269132323184256, "compression_ratio": 1.6254980079681276, "no_speech_prob": 0.0018094753613695502}, {"id": 1947, "seek": 903740, "start": 9038.279999999999, "end": 9040.279999999999, "text": " That the files look like", "tokens": [50408, 663, 264, 7098, 574, 411, 50508], "temperature": 0.0, "avg_logprob": -0.1468985248619402, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.0006069035734981298}, {"id": 1948, "seek": 903740, "start": 9043.32, "end": 9045.32, "text": " Somewhere there", "tokens": [50660, 34500, 456, 50760], "temperature": 0.0, "avg_logprob": -0.1468985248619402, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.0006069035734981298}, {"id": 1949, "seek": 903740, "start": 9046.84, "end": 9050.039999999999, "text": " You can try to use xml, but xml is horrible", "tokens": [50836, 509, 393, 853, 281, 764, 2031, 15480, 11, 457, 2031, 15480, 307, 9263, 50996], "temperature": 0.0, "avg_logprob": -0.1468985248619402, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.0006069035734981298}, {"id": 1950, "seek": 903740, "start": 9050.92, "end": 9051.96, "text": " so", "tokens": [51040, 370, 51092], "temperature": 0.0, "avg_logprob": -0.1468985248619402, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.0006069035734981298}, {"id": 1951, "seek": 903740, "start": 9051.96, "end": 9053.16, "text": " um", "tokens": [51092, 1105, 51152], "temperature": 0.0, "avg_logprob": -0.1468985248619402, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.0006069035734981298}, {"id": 1952, "seek": 903740, "start": 9053.16, "end": 9059.32, "text": " You could also use a regular expression to scrape over that and pull out anything that matches a certain pattern", "tokens": [51152, 509, 727, 611, 764, 257, 3890, 6114, 281, 32827, 670, 300, 293, 2235, 484, 1340, 300, 10676, 257, 1629, 5102, 51460], "temperature": 0.0, "avg_logprob": -0.1468985248619402, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.0006069035734981298}, {"id": 1953, "seek": 903740, "start": 9062.199999999999, "end": 9065.0, "text": " So then that's sort of the list of files that match that", "tokens": [51604, 407, 550, 300, 311, 1333, 295, 264, 1329, 295, 7098, 300, 2995, 300, 51744], "temperature": 0.0, "avg_logprob": -0.1468985248619402, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.0006069035734981298}, {"id": 1954, "seek": 906500, "start": 9065.4, "end": 9070.2, "text": " So now you might want to try just like downloading one of those", "tokens": [50384, 407, 586, 291, 1062, 528, 281, 853, 445, 411, 32529, 472, 295, 729, 50624], "temperature": 0.0, "avg_logprob": -0.17096805572509766, "compression_ratio": 1.549738219895288, "no_speech_prob": 0.0006563262431882322}, {"id": 1955, "seek": 906500, "start": 9072.28, "end": 9076.2, "text": " Which would be to grab the first 348 bytes", "tokens": [50728, 3013, 576, 312, 281, 4444, 264, 700, 12790, 23, 36088, 50924], "temperature": 0.0, "avg_logprob": -0.17096805572509766, "compression_ratio": 1.549738219895288, "no_speech_prob": 0.0006563262431882322}, {"id": 1956, "seek": 906500, "start": 9080.68, "end": 9084.76, "text": " Save it to the same output file it concatenate or just you know put together the base url", "tokens": [51148, 15541, 309, 281, 264, 912, 5598, 3991, 309, 1588, 7186, 473, 420, 445, 291, 458, 829, 1214, 264, 3096, 4038, 75, 51352], "temperature": 0.0, "avg_logprob": -0.17096805572509766, "compression_ratio": 1.549738219895288, "no_speech_prob": 0.0006563262431882322}, {"id": 1957, "seek": 906500, "start": 9084.76, "end": 9087.32, "text": " And then the path of a single file just to kind of test it out", "tokens": [51352, 400, 550, 264, 3100, 295, 257, 2167, 3991, 445, 281, 733, 295, 1500, 309, 484, 51480], "temperature": 0.0, "avg_logprob": -0.17096805572509766, "compression_ratio": 1.549738219895288, "no_speech_prob": 0.0006563262431882322}, {"id": 1958, "seek": 906500, "start": 9089.88, "end": 9092.44, "text": " Seems to work you import knee babble", "tokens": [51608, 22524, 281, 589, 291, 974, 9434, 7564, 638, 51736], "temperature": 0.0, "avg_logprob": -0.17096805572509766, "compression_ratio": 1.549738219895288, "no_speech_prob": 0.0006563262431882322}, {"id": 1959, "seek": 909500, "start": 9095.4, "end": 9097.4, "text": " You can load that file", "tokens": [50384, 509, 393, 3677, 300, 3991, 50484], "temperature": 0.0, "avg_logprob": -0.09899562947890338, "compression_ratio": 1.2647058823529411, "no_speech_prob": 0.0007207572343759239}, {"id": 1960, "seek": 909500, "start": 9098.2, "end": 9100.2, "text": " And then if you explore", "tokens": [50524, 400, 550, 498, 291, 6839, 50624], "temperature": 0.0, "avg_logprob": -0.09899562947890338, "compression_ratio": 1.2647058823529411, "no_speech_prob": 0.0007207572343759239}, {"id": 1961, "seek": 909500, "start": 9101.08, "end": 9104.76, "text": " Some of the different options here you might see this header thing", "tokens": [50668, 2188, 295, 264, 819, 3956, 510, 291, 1062, 536, 341, 23117, 551, 50852], "temperature": 0.0, "avg_logprob": -0.09899562947890338, "compression_ratio": 1.2647058823529411, "no_speech_prob": 0.0007207572343759239}, {"id": 1962, "seek": 909500, "start": 9112.84, "end": 9114.84, "text": " Yeah back there", "tokens": [51256, 865, 646, 456, 51356], "temperature": 0.0, "avg_logprob": -0.09899562947890338, "compression_ratio": 1.2647058823529411, "no_speech_prob": 0.0007207572343759239}, {"id": 1963, "seek": 912500, "start": 9125.96, "end": 9134.36, "text": " Yeah, so the question is about uh, why why shouldn't you use a path string here? Well, yeah", "tokens": [50412, 865, 11, 370, 264, 1168, 307, 466, 2232, 11, 983, 983, 4659, 380, 291, 764, 257, 3100, 6798, 510, 30, 1042, 11, 1338, 50832], "temperature": 0.0, "avg_logprob": -0.1448874213478782, "compression_ratio": 1.6916666666666667, "no_speech_prob": 0.000417215283960104}, {"id": 1964, "seek": 912500, "start": 9134.36, "end": 9136.76, "text": " So the answer is basically that it's a url", "tokens": [50832, 407, 264, 1867, 307, 1936, 300, 309, 311, 257, 4038, 75, 50952], "temperature": 0.0, "avg_logprob": -0.1448874213478782, "compression_ratio": 1.6916666666666667, "no_speech_prob": 0.000417215283960104}, {"id": 1965, "seek": 912500, "start": 9137.32, "end": 9139.32, "text": " So it's not really a path in a normal way", "tokens": [50980, 407, 309, 311, 406, 534, 257, 3100, 294, 257, 2710, 636, 51080], "temperature": 0.0, "avg_logprob": -0.1448874213478782, "compression_ratio": 1.6916666666666667, "no_speech_prob": 0.000417215283960104}, {"id": 1966, "seek": 912500, "start": 9139.56, "end": 9144.84, "text": " And the second is that you're you're just passing it back down to a command a sub process command", "tokens": [51092, 400, 264, 1150, 307, 300, 291, 434, 291, 434, 445, 8437, 309, 646, 760, 281, 257, 5622, 257, 1422, 1399, 5622, 51356], "temperature": 0.0, "avg_logprob": -0.1448874213478782, "compression_ratio": 1.6916666666666667, "no_speech_prob": 0.000417215283960104}, {"id": 1967, "seek": 912500, "start": 9145.16, "end": 9149.72, "text": " And so it's going to get turned back into a string anyways, so you don't really need the path object", "tokens": [51372, 400, 370, 309, 311, 516, 281, 483, 3574, 646, 666, 257, 6798, 13448, 11, 370, 291, 500, 380, 534, 643, 264, 3100, 2657, 51600], "temperature": 0.0, "avg_logprob": -0.1448874213478782, "compression_ratio": 1.6916666666666667, "no_speech_prob": 0.000417215283960104}, {"id": 1968, "seek": 912500, "start": 9150.2, "end": 9152.2, "text": " Yeah, having said that what um", "tokens": [51624, 865, 11, 1419, 848, 300, 437, 1105, 51724], "temperature": 0.0, "avg_logprob": -0.1448874213478782, "compression_ratio": 1.6916666666666667, "no_speech_prob": 0.000417215283960104}, {"id": 1969, "seek": 915220, "start": 9153.08, "end": 9156.76, "text": " You know as you go along on this you might you would maybe curl it down using just you know", "tokens": [50408, 509, 458, 382, 291, 352, 2051, 322, 341, 291, 1062, 291, 576, 1310, 22591, 309, 760, 1228, 445, 291, 458, 50592], "temperature": 0.0, "avg_logprob": -0.11259124238612288, "compression_ratio": 1.81640625, "no_speech_prob": 0.0009540009777992964}, {"id": 1970, "seek": 915220, "start": 9156.92, "end": 9158.92, "text": " Just a string because you want to pass that to curl", "tokens": [50600, 1449, 257, 6798, 570, 291, 528, 281, 1320, 300, 281, 22591, 50700], "temperature": 0.0, "avg_logprob": -0.11259124238612288, "compression_ratio": 1.81640625, "no_speech_prob": 0.0009540009777992964}, {"id": 1971, "seek": 915220, "start": 9159.240000000002, "end": 9164.44, "text": " But then in terms of loading the file after you have it there you could first make it a a path lib path", "tokens": [50716, 583, 550, 294, 2115, 295, 15114, 264, 3991, 934, 291, 362, 309, 456, 291, 727, 700, 652, 309, 257, 257, 3100, 22854, 3100, 50976], "temperature": 0.0, "avg_logprob": -0.11259124238612288, "compression_ratio": 1.81640625, "no_speech_prob": 0.0009540009777992964}, {"id": 1972, "seek": 915220, "start": 9165.08, "end": 9169.480000000001, "text": " Load it from that and then depending on the results of like how you're inspecting it", "tokens": [51008, 48408, 309, 490, 300, 293, 550, 5413, 322, 264, 3542, 295, 411, 577, 291, 434, 15018, 278, 309, 51228], "temperature": 0.0, "avg_logprob": -0.11259124238612288, "compression_ratio": 1.81640625, "no_speech_prob": 0.0009540009777992964}, {"id": 1973, "seek": 915220, "start": 9169.560000000001, "end": 9174.12, "text": " Then use path lib of that file to move it or change it or mark it or delete it or", "tokens": [51232, 1396, 764, 3100, 22854, 295, 300, 3991, 281, 1286, 309, 420, 1319, 309, 420, 1491, 309, 420, 12097, 309, 420, 51460], "temperature": 0.0, "avg_logprob": -0.11259124238612288, "compression_ratio": 1.81640625, "no_speech_prob": 0.0009540009777992964}, {"id": 1974, "seek": 915220, "start": 9174.84, "end": 9176.84, "text": " You know so you can work that into the", "tokens": [51496, 509, 458, 370, 291, 393, 589, 300, 666, 264, 51596], "temperature": 0.0, "avg_logprob": -0.11259124238612288, "compression_ratio": 1.81640625, "no_speech_prob": 0.0009540009777992964}, {"id": 1975, "seek": 915220, "start": 9177.240000000002, "end": 9179.240000000002, "text": " The process", "tokens": [51616, 440, 1399, 51716], "temperature": 0.0, "avg_logprob": -0.11259124238612288, "compression_ratio": 1.81640625, "no_speech_prob": 0.0009540009777992964}, {"id": 1976, "seek": 918220, "start": 9182.44, "end": 9184.92, "text": " I'm going to keep working on this like at lunch so people want to", "tokens": [50376, 286, 478, 516, 281, 1066, 1364, 322, 341, 411, 412, 6349, 370, 561, 528, 281, 50500], "temperature": 0.0, "avg_logprob": -0.17306110547936482, "compression_ratio": 1.6356877323420074, "no_speech_prob": 0.0007910343701951206}, {"id": 1977, "seek": 918220, "start": 9185.960000000001, "end": 9187.960000000001, "text": " On this contrived example to be created", "tokens": [50552, 1282, 341, 660, 470, 937, 1365, 281, 312, 2942, 50652], "temperature": 0.0, "avg_logprob": -0.17306110547936482, "compression_ratio": 1.6356877323420074, "no_speech_prob": 0.0007910343701951206}, {"id": 1978, "seek": 918220, "start": 9188.44, "end": 9190.44, "text": " But you want things to work", "tokens": [50676, 583, 291, 528, 721, 281, 589, 50776], "temperature": 0.0, "avg_logprob": -0.17306110547936482, "compression_ratio": 1.6356877323420074, "no_speech_prob": 0.0007910343701951206}, {"id": 1979, "seek": 918220, "start": 9191.240000000002, "end": 9196.44, "text": " So that um, thank you everyone for coming. Uh, I know it's like a lot of information just to dump into people's heads", "tokens": [50816, 407, 300, 1105, 11, 1309, 291, 1518, 337, 1348, 13, 4019, 11, 286, 458, 309, 311, 411, 257, 688, 295, 1589, 445, 281, 11430, 666, 561, 311, 8050, 51076], "temperature": 0.0, "avg_logprob": -0.17306110547936482, "compression_ratio": 1.6356877323420074, "no_speech_prob": 0.0007910343701951206}, {"id": 1980, "seek": 918220, "start": 9196.84, "end": 9202.76, "text": " But we appreciate you guys kind of toughing it out with us. Um, we also um, there's a bunch of stuff we haven't covered", "tokens": [51096, 583, 321, 4449, 291, 1074, 733, 295, 4930, 278, 309, 484, 365, 505, 13, 3301, 11, 321, 611, 1105, 11, 456, 311, 257, 3840, 295, 1507, 321, 2378, 380, 5343, 51392], "temperature": 0.0, "avg_logprob": -0.17306110547936482, "compression_ratio": 1.6356877323420074, "no_speech_prob": 0.0007910343701951206}, {"id": 1981, "seek": 918220, "start": 9204.76, "end": 9207.560000000001, "text": " There's even some more new syntax probably that I've forgotten about", "tokens": [51492, 821, 311, 754, 512, 544, 777, 28431, 1391, 300, 286, 600, 11832, 466, 51632], "temperature": 0.0, "avg_logprob": -0.17306110547936482, "compression_ratio": 1.6356877323420074, "no_speech_prob": 0.0007910343701951206}, {"id": 1982, "seek": 920756, "start": 9207.64, "end": 9211.64, "text": " Um, but we're here all week and we're happy to help you answer questions", "tokens": [50368, 3301, 11, 457, 321, 434, 510, 439, 1243, 293, 321, 434, 2055, 281, 854, 291, 1867, 1651, 50568], "temperature": 0.0, "avg_logprob": -0.13883099856076542, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.005299379117786884}, {"id": 1983, "seek": 920756, "start": 9211.64, "end": 9215.48, "text": " If you have a certain thing you like to do and you just want it to you think it could work a little better", "tokens": [50568, 759, 291, 362, 257, 1629, 551, 291, 411, 281, 360, 293, 291, 445, 528, 309, 281, 291, 519, 309, 727, 589, 257, 707, 1101, 50760], "temperature": 0.0, "avg_logprob": -0.13883099856076542, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.005299379117786884}, {"id": 1984, "seek": 920756, "start": 9215.48, "end": 9218.359999999999, "text": " You want to try see what it would look like on conch? Please like stop us anytime", "tokens": [50760, 509, 528, 281, 853, 536, 437, 309, 576, 574, 411, 322, 416, 339, 30, 2555, 411, 1590, 505, 13038, 50904], "temperature": 0.0, "avg_logprob": -0.13883099856076542, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.005299379117786884}, {"id": 1985, "seek": 920756, "start": 9218.439999999999, "end": 9224.439999999999, "text": " We have stickers on our badges and you probably would recognize at this point. Um, we also have stickers up front", "tokens": [50908, 492, 362, 21019, 322, 527, 43894, 293, 291, 1391, 576, 5521, 412, 341, 935, 13, 3301, 11, 321, 611, 362, 21019, 493, 1868, 51208], "temperature": 0.0, "avg_logprob": -0.13883099856076542, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.005299379117786884}, {"id": 1986, "seek": 920756, "start": 9224.519999999999, "end": 9230.439999999999, "text": " So feel free to take as many as you want of those and uh, yeah, thanks for coming and trying out conch and hopefully", "tokens": [51212, 407, 841, 1737, 281, 747, 382, 867, 382, 291, 528, 295, 729, 293, 2232, 11, 1338, 11, 3231, 337, 1348, 293, 1382, 484, 416, 339, 293, 4696, 51508], "temperature": 0.0, "avg_logprob": -0.13883099856076542, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.005299379117786884}, {"id": 1987, "seek": 920756, "start": 9231.08, "end": 9234.84, "text": " You know, it improves your life in some meaningful way. So", "tokens": [51540, 509, 458, 11, 309, 24771, 428, 993, 294, 512, 10995, 636, 13, 407, 51728], "temperature": 0.0, "avg_logprob": -0.13883099856076542, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.005299379117786884}, {"id": 1988, "seek": 920756, "start": 9235.48, "end": 9237.24, "text": " uh, and then", "tokens": [51760, 2232, 11, 293, 550, 51848], "temperature": 0.0, "avg_logprob": -0.13883099856076542, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.005299379117786884}, {"id": 1989, "seek": 923724, "start": 9237.24, "end": 9241.0, "text": " Yeah, we'll be around and open bug reports find us on getter", "tokens": [50364, 865, 11, 321, 603, 312, 926, 293, 1269, 7426, 7122, 915, 505, 322, 483, 391, 50552], "temperature": 0.0, "avg_logprob": -0.287658166885376, "compression_ratio": 1.1983471074380165, "no_speech_prob": 0.0022782571613788605}, {"id": 1990, "seek": 923724, "start": 9241.64, "end": 9244.44, "text": " Uh, open issues contribute. We're", "tokens": [50584, 4019, 11, 1269, 2663, 10586, 13, 492, 434, 50724], "temperature": 0.0, "avg_logprob": -0.287658166885376, "compression_ratio": 1.1983471074380165, "no_speech_prob": 0.0022782571613788605}, {"id": 1991, "seek": 923724, "start": 9245.4, "end": 9248.36, "text": " Friendly community. So thank you so much everybody", "tokens": [50772, 22812, 356, 1768, 13, 407, 1309, 291, 370, 709, 2201, 50920], "temperature": 0.0, "avg_logprob": -0.287658166885376, "compression_ratio": 1.1983471074380165, "no_speech_prob": 0.0022782571613788605}], "language": "en"}