1
00:00:00,000 --> 00:00:11,240
Hey everybody, my name is Jason, also known as PirateJC, and today we're going to be taking

2
00:00:11,240 --> 00:00:18,000
a look at animation groups, specifically how you can deconstruct them and use their pieces

3
00:00:18,000 --> 00:00:21,920
to apply animations to other elements within your scene.

4
00:00:21,920 --> 00:00:27,760
Now, I am super excited about today's video because I get to show you something that is

5
00:00:27,760 --> 00:00:30,480
very near and dear to my heart, something that I've been working on.

6
00:00:30,480 --> 00:00:33,040
It is the Pirate Fort.

7
00:00:33,040 --> 00:00:34,240
Yes, it is true.

8
00:00:34,240 --> 00:00:39,560
I do love pirates, if you couldn't tell, and the Pirate Fort is something that I am so

9
00:00:39,560 --> 00:00:41,520
excited to share with you.

10
00:00:41,520 --> 00:00:46,960
Now, before we dive into this, I want to take a moment to shout out to Grant Abbott.

11
00:00:46,960 --> 00:00:52,640
If you don't know who Grant is, and you're interested in 3D, you need to know Grant.

12
00:00:52,640 --> 00:00:56,400
Grant is this amazing 3D artist that has a YouTube channel dedicated to teaching people

13
00:00:56,400 --> 00:01:02,720
all about 3D and how to use Blender to create amazing 3D assets and worlds.

14
00:01:02,720 --> 00:01:07,840
I used Grant's C-Shack tutorial series as inspiration for the Pirate Fort, and really

15
00:01:07,840 --> 00:01:11,720
you need to go check out Grant's channel, which you can find a link for in the description

16
00:01:11,720 --> 00:01:12,720
down below.

17
00:01:12,720 --> 00:01:15,640
So thank you, Grant, for all the amazing work you do and for the inspiration for the Pirate

18
00:01:15,640 --> 00:01:16,640
Fort here.

19
00:01:16,640 --> 00:01:21,040
Okay, let's dive right in to the Pirate Fort scene.

20
00:01:21,040 --> 00:01:24,520
What we have here is this awesome scene that I can tumble around.

21
00:01:24,640 --> 00:01:29,600
I can click on a cannon, and it'll hop back, kind of do a little hop back animation, any

22
00:01:29,600 --> 00:01:30,600
one of them.

23
00:01:30,600 --> 00:01:35,200
Now, these are all clones, and today the most important thing that we're going to be doing

24
00:01:35,200 --> 00:01:40,760
is kind of taking the cannon asset, loading it into the scene, and cleaning it up.

25
00:01:40,760 --> 00:01:44,360
Now, I know that doesn't sound super exciting, but there's a ton to learn in this, so I hope

26
00:01:44,360 --> 00:01:45,760
you stick around for it.

27
00:01:45,760 --> 00:01:50,040
So let's take a look at the cannon asset by itself, okay?

28
00:01:50,040 --> 00:01:53,000
This is it here, and it looks a little something like this.

29
00:01:53,000 --> 00:01:59,320
It starts with a single root node, and then under that I have a cannon root, and then

30
00:01:59,320 --> 00:02:05,360
underneath that there's the meshes, the cannon mount, which is the brown part with the wheels,

31
00:02:05,360 --> 00:02:10,120
and then of course the cast iron part of the cannon underneath that.

32
00:02:10,120 --> 00:02:13,720
So having two roots isn't super useful, so we'll have to clean that up in a minute, but

33
00:02:13,720 --> 00:02:16,920
I also have two animation groups.

34
00:02:16,920 --> 00:02:21,280
I have one animation that controls sort of the little tilt of the cannon itself, and

35
00:02:21,280 --> 00:02:26,480
then I have another one that's the little hot back for the cannon mount.

36
00:02:26,480 --> 00:02:31,560
And having two animation groups is fine, but I actually would like to combine these together,

37
00:02:31,560 --> 00:02:33,600
and I'll explain why in a little bit.

38
00:02:33,600 --> 00:02:38,040
So let's dive into the cannon asset, and one of the ways that we're going to start to clean

39
00:02:38,040 --> 00:02:39,840
it up is by getting rid of this top root node.

40
00:02:39,840 --> 00:02:43,280
It's pretty easy, but let's take a look at how I do that, okay?

41
00:02:43,280 --> 00:02:51,840
I have this line of code here, which imports the cannon, and then I have these three here,

42
00:02:51,840 --> 00:02:56,320
which are going to essentially un-parent the cannon root from the top root, and here's

43
00:02:56,320 --> 00:02:57,320
how it works.

44
00:02:57,320 --> 00:03:02,680
I take the imported cannon, okay, and I say, give me the top node, in that case that's

45
00:03:02,680 --> 00:03:09,120
this root node, and then I want to get all children, now there's only one, so I want

46
00:03:09,120 --> 00:03:15,280
to take the first one, and the first child is cannon root, and then I want to say, okay,

47
00:03:15,280 --> 00:03:16,280
that's equal to cannon.

48
00:03:16,280 --> 00:03:21,640
So the cannon root, I'm going to set its parent to none, so now it is un-parented, and then

49
00:03:21,640 --> 00:03:26,440
of course I can get rid of the original top level root node, and now it looks like this,

50
00:03:26,440 --> 00:03:27,440
nice and clean.

51
00:03:27,440 --> 00:03:31,040
So I have the cannon root, and the cannon mount, and then the cannon.

52
00:03:31,040 --> 00:03:35,880
Now you may see this, if you're going from Blender, and using the GLTF Explorer that's

53
00:03:35,880 --> 00:03:41,840
built into Blender 2.8 and above, then you might see that you get extra root nodes, and

54
00:03:41,840 --> 00:03:42,840
don't worry about that.

55
00:03:42,840 --> 00:03:45,960
You can take care of that with something simple like this, as un-parenting and clean it up

56
00:03:45,960 --> 00:03:48,880
once you get inside of Babylon if you want to, okay.

57
00:03:48,880 --> 00:03:53,040
The other thing I have here is animation groups, I have two of them, and I actually want there

58
00:03:53,040 --> 00:03:57,680
to be one, and the reason I want there to be one is to manage complexity.

59
00:03:57,680 --> 00:04:04,520
Let's think about it this way, in my scene I want to click on a cannon, and I want the

60
00:04:04,520 --> 00:04:06,680
cannon to do two animations.

61
00:04:06,680 --> 00:04:11,600
Well I could write, hey, animation number one play, animation number two play, or I could

62
00:04:11,600 --> 00:04:16,160
combine them and just write animation group play, and it'll play both of them.

63
00:04:16,160 --> 00:04:17,280
That's pretty handy.

64
00:04:17,280 --> 00:04:21,520
Now with two it may not seem like a huge savings, but imagine if you wanted something to happen

65
00:04:21,520 --> 00:04:26,080
where you clicked on an object, and 75 different animations happened.

66
00:04:26,080 --> 00:04:30,000
Well then of course you'd save yourself a ton of time by grouping those together.

67
00:04:30,000 --> 00:04:34,520
So let's dive through the scene now, now that we have a semi-cleaned-up hierarchy for our

68
00:04:34,520 --> 00:04:36,520
cannon, okay.

69
00:04:36,520 --> 00:04:41,640
So first thing I'm going to do is I'm going to have a clear color here, have an arc rotate

70
00:04:41,640 --> 00:04:45,960
camera with some certain limits so I can't go too close or too far to the asset, and

71
00:04:45,960 --> 00:04:52,320
then give canvas control so as I click the canvas I can animate the camera, okay.

72
00:04:52,320 --> 00:04:57,280
Now this is really, really important, a really important thing to know in Babylon.

73
00:04:57,280 --> 00:05:05,000
A mesh that's going to be animated has no knowledge of its animation.

74
00:05:05,000 --> 00:05:08,360
You've got to really understand that it's different than some other 3D applications

75
00:05:08,360 --> 00:05:09,720
you may have used.

76
00:05:09,720 --> 00:05:14,120
The mesh itself exists as a completely separate construct from an animation.

77
00:05:14,120 --> 00:05:15,840
Those are two different things.

78
00:05:15,840 --> 00:05:20,440
Now of course an animation needs to know I need to apply a certain number of values to

79
00:05:20,440 --> 00:05:21,440
the mesh.

80
00:05:21,440 --> 00:05:25,560
So the animation knows about the mesh, but the mesh doesn't have any awareness of any

81
00:05:25,560 --> 00:05:27,360
animations in the scene.

82
00:05:27,360 --> 00:05:31,680
And that's a really, really important thing to know because that means that if I want

83
00:05:31,680 --> 00:05:37,080
to click on a mesh, I can't just say, hey, play an animation, I have to know which animation

84
00:05:37,080 --> 00:05:39,120
in the scene to play.

85
00:05:39,120 --> 00:05:45,560
So I need to manage a relationship between the mesh and the associated animation I want

86
00:05:45,560 --> 00:05:47,680
it to be associated with.

87
00:05:47,680 --> 00:05:49,080
And so that's what this is.

88
00:05:49,080 --> 00:05:53,480
This is going to be a JavaScript object where I'm going to store key value pairs for the

89
00:05:53,480 --> 00:05:58,880
Canon clone that I create and the associated animation I want to play based on which clone

90
00:05:58,880 --> 00:05:59,880
was selected.

91
00:05:59,880 --> 00:06:02,640
Okay, so we'll use that in a little bit, but that's why this is here.

92
00:06:02,640 --> 00:06:06,920
Okay, I'm going to load in the Pirate Fort, I'm going to name the top level node Pirate

93
00:06:06,920 --> 00:06:11,840
Fort, I'm going to find the C and then I'm going to give the material, say that it needs

94
00:06:11,840 --> 00:06:12,840
a depth pre-pass.

95
00:06:12,840 --> 00:06:14,520
I'm going to set that to true.

96
00:06:14,520 --> 00:06:18,360
That happens sometimes when you're using transparency, depending on the way you set up the asset,

97
00:06:18,360 --> 00:06:22,320
it actually helps with the Z ordering of the transparency and how it's rendered.

98
00:06:22,320 --> 00:06:25,000
It kind of depends on how it's set up and whether or not you want to use this or not,

99
00:06:25,000 --> 00:06:27,200
it's up to you, but it's there and you should know about it.

100
00:06:27,200 --> 00:06:30,200
And then also I'm going to dial up the intensity of the directional light that I've added to

101
00:06:30,200 --> 00:06:32,520
the scene, which I've called sun.

102
00:06:32,520 --> 00:06:36,760
Okay, now what I want to do is I'm going to, we've already seen the Canon here.

103
00:06:36,760 --> 00:06:39,440
We've already seen that we've loaded it in and we've cleaned up the hierarchy.

104
00:06:39,440 --> 00:06:45,560
So just like in the previous video where I used to create picking ray to select a Canon

105
00:06:45,560 --> 00:06:52,300
based on, sorry, select a Canon based on the metadata in it, I select any mesh and I filter

106
00:06:52,300 --> 00:06:53,780
based on the metadata.

107
00:06:53,780 --> 00:06:55,780
I'm doing that again here.

108
00:06:55,780 --> 00:06:59,900
So essentially I'm going to look for was a mesh picked and then did that mesh have a

109
00:06:59,900 --> 00:07:00,980
metadata tag?

110
00:07:00,980 --> 00:07:02,980
This isn't the only way to filter down.

111
00:07:02,980 --> 00:07:03,980
It's just one of them.

112
00:07:03,980 --> 00:07:07,660
And it's the one that I want to use to say, okay, was a Canon selected?

113
00:07:07,660 --> 00:07:09,340
And that's I'm going to use that with metadata.

114
00:07:09,340 --> 00:07:13,420
So we now imported the Canon and then I want to import the animation groups.

115
00:07:13,420 --> 00:07:16,300
So remember we have two of them, right?

116
00:07:16,300 --> 00:07:18,140
There's these two different animation groups.

117
00:07:18,140 --> 00:07:22,300
I want to now set them to imported anim groups.

118
00:07:22,300 --> 00:07:28,180
And this is where we start to get really deep into what is an animation group.

119
00:07:28,180 --> 00:07:32,580
You have to think of it in three different layers, animations within Babylon.

120
00:07:32,580 --> 00:07:33,900
We'll think about it this way.

121
00:07:33,900 --> 00:07:37,420
At the very bottom level, there's an animation.

122
00:07:37,420 --> 00:07:43,820
An animation is just values that change from one point to another over time at a certain

123
00:07:43,820 --> 00:07:45,060
frame rate.

124
00:07:45,060 --> 00:07:46,860
Let's take the value of X.

125
00:07:46,860 --> 00:07:56,260
Let's say I want X to go from the value of zero to five from frames zero to 30 over 30

126
00:07:56,260 --> 00:07:57,260
frames a second.

127
00:07:57,260 --> 00:08:01,780
So it will change X from zero to five over one second.

128
00:08:01,780 --> 00:08:02,780
Okay.

129
00:08:02,780 --> 00:08:03,780
That's an animation.

130
00:08:03,780 --> 00:08:06,580
It has no knowledge of what it's affecting.

131
00:08:06,580 --> 00:08:08,220
It's just a value.

132
00:08:08,220 --> 00:08:13,500
Then you have a targeted animation and a targeted animation sits above that and it says, I'm

133
00:08:13,500 --> 00:08:17,740
going to take that animation data and apply it to a specific entity in Babylon.

134
00:08:17,740 --> 00:08:20,460
Say a mesh or a camera or a light.

135
00:08:20,460 --> 00:08:24,020
You could apply that same animation data to multiple different things in your scene if

136
00:08:24,020 --> 00:08:25,420
you want to.

137
00:08:25,420 --> 00:08:28,660
And so then, of course, you have your targeted animation, which is animation applied to a

138
00:08:28,660 --> 00:08:29,900
thing.

139
00:08:29,900 --> 00:08:34,420
And then what happens if you want multiple different animations all grouped together

140
00:08:34,420 --> 00:08:35,660
to play at the same time?

141
00:08:35,660 --> 00:08:37,660
Well, that's an animation group.

142
00:08:37,660 --> 00:08:42,780
So now you can have multiple targeted animations in one animation group, play that group and

143
00:08:42,780 --> 00:08:46,940
all of the animation, targeted animations inside of it will play.

144
00:08:46,940 --> 00:08:48,500
And that's essentially what we're going to do here.

145
00:08:48,500 --> 00:08:53,860
So we're going to rip apart the animation groups that start with the cannon and then

146
00:08:53,860 --> 00:08:56,420
we're going to rebuild them in the way that we want them.

147
00:08:56,420 --> 00:08:57,980
So let's walk through this together.

148
00:08:57,980 --> 00:09:01,980
Firstly, I'm going to create an array called animations because what I'm going to do is

149
00:09:01,980 --> 00:09:06,580
I'm going to dive in to the targeted to the animation groups into the targeted animations

150
00:09:06,580 --> 00:09:09,700
and pull out just the raw animation data.

151
00:09:09,700 --> 00:09:11,300
I don't care what it's associated with.

152
00:09:11,300 --> 00:09:13,420
I just want the animation data.

153
00:09:13,420 --> 00:09:16,700
And so I'm going to pull that out here and it looks like this.

154
00:09:16,700 --> 00:09:19,220
I'm going to loop through all of the imported animation groups.

155
00:09:19,220 --> 00:09:21,020
Remember, in this case, we have two.

156
00:09:21,020 --> 00:09:23,900
I'm going to stop any animations from playing.

157
00:09:23,900 --> 00:09:24,900
That's not necessary.

158
00:09:24,900 --> 00:09:27,660
It's just something I wanted to do for debugging so I didn't constantly see the animation

159
00:09:27,660 --> 00:09:28,860
looping.

160
00:09:28,860 --> 00:09:33,060
And so then I'm going to say, okay, I'm going to take the imported animation group.

161
00:09:33,060 --> 00:09:39,420
I'm going to take the targeted animation and pull out just the animation data itself and

162
00:09:39,420 --> 00:09:42,660
then push that into my animations array.

163
00:09:42,660 --> 00:09:46,420
And then I'm going to dispose of the original animation group.

164
00:09:46,420 --> 00:09:51,340
So by the time I'm done with this loop, I have an array here that has the raw animation

165
00:09:51,340 --> 00:09:58,340
data for the camera tilt and the camera mount, little hopback thing, independent of any meshes.

166
00:09:58,340 --> 00:10:02,420
It's just the data stored into an array, okay?

167
00:10:02,420 --> 00:10:09,340
Now what I want to do is create a new animation group here and I'm going to add a new targeted

168
00:10:09,340 --> 00:10:10,340
animation.

169
00:10:10,340 --> 00:10:13,660
I'm going to take the, let's say, I don't know which one's which, I forget, but we're

170
00:10:13,660 --> 00:10:19,100
going to take the Canon tilt and we're going to apply that to the Canon.

171
00:10:19,100 --> 00:10:25,140
Now it's the same Canon mesh that it was originally applied to, but I'm redoing it with a singular

172
00:10:25,140 --> 00:10:26,820
animation group.

173
00:10:26,820 --> 00:10:30,500
And it may sound redundant, but again, think about saving yourself time down the road by

174
00:10:30,500 --> 00:10:33,420
only having one animation group to manage.

175
00:10:33,420 --> 00:10:34,420
So I do this twice.

176
00:10:34,420 --> 00:10:40,380
The Canon gets its animation back and the Canon mount gets its little hop animation back.

177
00:10:40,380 --> 00:10:43,900
So by the time that I'm done with this, it actually looks a little something like this.

178
00:10:43,900 --> 00:10:48,620
I have the Canon root, I have the Canon mount and the Canon and then under animation groups,

179
00:10:48,620 --> 00:10:54,580
I have a single animation group now that has two different targeted animations on it.

180
00:10:54,580 --> 00:10:56,620
Now it's nice and clean.

181
00:10:56,620 --> 00:11:00,460
Now we're ready to clone this and build out our scene.

182
00:11:00,460 --> 00:11:04,540
Okay, so that's a lot and it's important to know how animations work.

183
00:11:04,540 --> 00:11:06,460
The next part, not important to you at all.

184
00:11:06,460 --> 00:11:11,300
It's just the specific positions and rotations that I want the Cannons in for this particular

185
00:11:11,300 --> 00:11:12,300
scene.

186
00:11:12,300 --> 00:11:16,380
Okay, so it's not something that you really need to care about, but this definitely is.

187
00:11:16,380 --> 00:11:21,300
I'm going to loop through 10 times and create 10 clones of our original Canon.

188
00:11:21,300 --> 00:11:24,420
So each time we go through the loop, I create a clone.

189
00:11:24,420 --> 00:11:29,340
I'm going to set its position based on where I want these positions, again, based on this

190
00:11:29,340 --> 00:11:31,580
array of positions and rotations here.

191
00:11:31,580 --> 00:11:35,340
And then I'm going to create a new animation group.

192
00:11:35,340 --> 00:11:37,220
Now this part might throw you off.

193
00:11:37,220 --> 00:11:39,740
You're saying I'm cloning the Canon, right?

194
00:11:39,740 --> 00:11:41,580
So why are you creating a new animation group?

195
00:11:41,580 --> 00:11:48,740
Because remember, in Babylon, the mesh exists separately from the animation.

196
00:11:48,740 --> 00:11:53,660
So even though if I have my original Canon here and my original animation group for that

197
00:11:53,660 --> 00:12:01,100
Canon here, and I clone the Canon, I now have to figure out how do I create a new animation

198
00:12:01,100 --> 00:12:06,300
group that points to the cloned Canon instead of pointing to the original Canon?

199
00:12:06,300 --> 00:12:07,460
I hope that makes sense.

200
00:12:07,460 --> 00:12:08,980
That's what we're doing right here.

201
00:12:08,980 --> 00:12:13,660
And again, you can see those three layers of animation group down to targeted animation

202
00:12:13,660 --> 00:12:15,140
down to animation data.

203
00:12:15,140 --> 00:12:17,320
You can see that at play again right here.

204
00:12:17,320 --> 00:12:22,580
So I create a new animation group and then I'm going to add a new targeted animation.

205
00:12:22,580 --> 00:12:29,140
And I'm going to pull the animation curve data from the Canon Anim group.

206
00:12:29,140 --> 00:12:35,620
That's the one animation group I created with the first targeted animation and the first

207
00:12:35,620 --> 00:12:37,100
curve data from it.

208
00:12:37,100 --> 00:12:41,100
And then I'm going to apply that to the appropriate mesh.

209
00:12:41,100 --> 00:12:42,100
Okay.

210
00:12:42,100 --> 00:12:47,860
And so now what I have after this is done is with each loop through, I have a clone of

211
00:12:47,860 --> 00:12:54,020
the Canon and I have a new animation group where the animations are pointing to the cloned

212
00:12:54,020 --> 00:12:56,700
meshes, not the original meshes.

213
00:12:56,700 --> 00:12:57,780
I hope that makes sense.

214
00:12:57,780 --> 00:12:59,220
Why that's important.

215
00:12:59,220 --> 00:13:02,740
So by the time, oh, and then of course, what I do is I'll go through and because I don't

216
00:13:02,740 --> 00:13:06,860
need the original Canon anymore, that was just sort of my copy mechanism, I'm going to get

217
00:13:06,860 --> 00:13:10,540
rid of the original Canon, okay, and the original Canon group, Anim group.

218
00:13:10,540 --> 00:13:12,540
So now let's look at the inspector at the hierarchy.

219
00:13:12,540 --> 00:13:18,420
I have 10 different cannons, each with that nice clean hierarchy that we went through.

220
00:13:18,420 --> 00:13:23,900
And under animation groups, I have 10 different animation groups, each with targeted animations

221
00:13:23,900 --> 00:13:30,020
pointing at the appropriate cloned mesh, but we're not quite done there because remember,

222
00:13:30,020 --> 00:13:35,300
I want to interact with a mesh and then play an animation, which means I need to store a

223
00:13:35,300 --> 00:13:40,580
relationship for the mesh to know which animation group is associated with it.

224
00:13:40,580 --> 00:13:44,340
And that is going to happen right here, actually skipped over that part.

225
00:13:44,340 --> 00:13:51,420
That's where I'm going to say, okay, I want to take this Canon animation pairings JavaScript

226
00:13:51,420 --> 00:13:52,420
object.

227
00:13:52,420 --> 00:13:57,980
And I want to say the Canon clone that I've created, the mesh, the name of the top note

228
00:13:57,980 --> 00:14:02,780
of the mesh is going to be set to the name of the animation group.

229
00:14:02,780 --> 00:14:08,260
So now I have key value pairs for all 10 cannons and the associated animation groups.

230
00:14:08,260 --> 00:14:09,380
Awesome.

231
00:14:09,380 --> 00:14:13,500
So now we get to get into some of the fun interaction parts.

232
00:14:13,500 --> 00:14:18,500
I'm going to here check in the scene when the pointer is clicked, I'm going to look

233
00:14:18,500 --> 00:14:19,820
at the pick results.

234
00:14:19,820 --> 00:14:23,420
Now, if you remember from that last video that I did, I showed you how to use that create

235
00:14:23,420 --> 00:14:26,940
picking ray, this is just a different way to do it.

236
00:14:26,940 --> 00:14:30,140
There's multiple different ways in Babylon to accomplish what you want to be able to

237
00:14:30,140 --> 00:14:31,140
do.

238
00:14:31,140 --> 00:14:32,140
This is just one of them.

239
00:14:32,140 --> 00:14:35,940
And so here I'm introducing a new way to do it, which is to take the pick result from

240
00:14:35,940 --> 00:14:38,980
the on pointer down event.

241
00:14:38,980 --> 00:14:44,580
And so what I want to do is I first want to say, was there a mesh that was picked?

242
00:14:44,580 --> 00:14:49,300
And did that mesh have metadata equal to the word Canon?

243
00:14:49,300 --> 00:14:53,980
So this is the moment where I'm filtering between picking on a Canon and any other type

244
00:14:53,980 --> 00:14:57,780
of mesh in the scene, say the pirate fort per se.

245
00:14:57,780 --> 00:15:01,820
If I end up inside of this check, then what I'm going to do is I'm going to do a little

246
00:15:01,820 --> 00:15:02,820
bit of logic here.

247
00:15:02,820 --> 00:15:06,020
This part might be a tiny bit confusing, but basically it's just a bit of code I wrote

248
00:15:06,020 --> 00:15:10,660
to figure out the top level node for any given mesh that was picked.

249
00:15:10,660 --> 00:15:18,700
So no matter if I pick the Canon or the Canon mount, I'm going to find the top level parent

250
00:15:18,700 --> 00:15:22,560
in that particular asset because that's what's stored in the key value pair.

251
00:15:22,560 --> 00:15:28,740
So the top parent becomes always this Canon clone, this top level node, whatever, whichever

252
00:15:28,740 --> 00:15:29,940
one it is.

253
00:15:29,940 --> 00:15:35,460
So then what I'm going to do is I'm going to say, okay, let's check that key value pair

254
00:15:36,260 --> 00:15:41,460
and based on the top level node name, that's here, based on which Canon clone I picked,

255
00:15:41,460 --> 00:15:44,380
what's the appropriate or the associated animation group?

256
00:15:44,380 --> 00:15:47,340
And then I'm going to say that is going to be animation to play.

257
00:15:47,340 --> 00:15:48,340
I'm going to store that.

258
00:15:48,340 --> 00:15:55,520
So now I know I've clicked on a Canon and I know the appropriate animation group name

259
00:15:55,520 --> 00:15:57,020
that I should play.

260
00:15:57,020 --> 00:16:01,580
So then I'm going to loop through all of the animation groups in the scene and I am going

261
00:16:01,580 --> 00:16:06,020
to then say, hey, is the current one that I'm looking at equal?

262
00:16:06,020 --> 00:16:09,660
Is it the same name as the animation to play?

263
00:16:09,660 --> 00:16:13,700
The one I've said is the appropriate one to play based on which mesh that was clicked.

264
00:16:13,700 --> 00:16:16,900
If it is, then go ahead and play it.

265
00:16:16,900 --> 00:16:18,660
And that is the end of the scene.

266
00:16:18,660 --> 00:16:20,740
Then we end up with our clones.

267
00:16:20,740 --> 00:16:22,580
I can click on any given Canon.

268
00:16:22,580 --> 00:16:29,140
They all have their own animation groups and they all have their own interaction because

269
00:16:29,140 --> 00:16:32,340
they have their own animation groups pointing to the appropriate clones.

270
00:16:32,340 --> 00:16:35,020
Man, that's a lot, but how exciting is that?

271
00:16:35,020 --> 00:16:36,620
It's so cool.

272
00:16:36,620 --> 00:16:42,540
That is our scene fully constructed, cleaning up and going through the complexity of animation

273
00:16:42,540 --> 00:16:46,620
groups and how to break them apart and reuse pieces to create new ones and clone them for

274
00:16:46,620 --> 00:16:48,980
different objects that we're going to clone in the scene.

275
00:16:48,980 --> 00:16:51,060
I hope this video has been useful to you.

276
00:16:51,060 --> 00:16:54,860
Again, please go check out Grant Abbott's channel because I just really love the work

277
00:16:54,860 --> 00:16:57,140
that he's doing and we want to support him.

278
00:16:57,140 --> 00:16:59,020
And thank you so much for coming and checking this out.

279
00:16:59,020 --> 00:17:00,980
I hope it was educational for you.

280
00:17:00,980 --> 00:17:04,420
Whatever future kind of content you want to see, go ahead and comment down below.

281
00:17:04,420 --> 00:17:05,740
We'd love to see that.

282
00:17:05,740 --> 00:17:08,700
And in the description down below, you can find a link to this playground.

283
00:17:08,700 --> 00:17:14,820
You can also find a link to the sandbox, to Grant's channel, and then also a documentation

284
00:17:14,820 --> 00:17:18,060
page on animation groups within Babylon.

285
00:17:18,060 --> 00:17:19,660
Again, thank you so much for checking this out.

286
00:17:19,660 --> 00:17:23,580
If you haven't already had a chance to do this, I hope you consider subscribing to this

287
00:17:23,580 --> 00:17:25,660
channel so you don't miss any future updates.

288
00:17:25,660 --> 00:17:27,060
And again, thanks so much for joining me.

289
00:17:27,060 --> 00:17:27,740
We'll see you next time.

