1
00:00:00,000 --> 00:00:06,240
Hi guys, in this video I am going to show you how you can create a REST API by using Julia.

2
00:00:06,240 --> 00:00:09,440
API means here Application Programming Interface.

3
00:00:10,160 --> 00:00:17,840
Due to this you can talk to any language like you can call you can talk to any language and

4
00:00:18,480 --> 00:00:26,400
even you can talk with the command line by the curl and you can also talk from mobile.

5
00:00:26,400 --> 00:00:31,360
You can think as suppose you go to the Japanese restaurant and you don't know Japanese

6
00:00:32,160 --> 00:00:38,400
and what you need to do now you need a converter who convert English language into Japanese

7
00:00:39,040 --> 00:00:47,680
then you finally got the dish for example you can if you use the azure azure is a cloud platform

8
00:00:48,320 --> 00:00:55,760
which is provided by the Microsoft and there are API available for different different services for

9
00:00:55,760 --> 00:01:03,120
if you want to do text analytics there is also there is API available for that for different

10
00:01:03,120 --> 00:01:12,240
tasks for API is available in the azure similarly for Google cloud and Amazon web service similarly

11
00:01:12,240 --> 00:01:20,400
if you go to the yatra.com or booking.com so this website basically for traveling or

12
00:01:20,400 --> 00:01:28,000
hotel booking or flight booking they under the hood they actually using the API so API is very

13
00:01:28,000 --> 00:01:35,440
famous things in the internet and you use probably you use most of the time API service

14
00:01:36,080 --> 00:01:42,400
in your daily life so what I will do so I am calling the REST API

15
00:01:43,360 --> 00:01:54,400
to the Julia from the R programming so what I do I create a JSON data structure in R then I send

16
00:01:54,400 --> 00:02:01,520
to the JSON request to the Julia server Julia REST API server then Julia responds the JSON

17
00:02:01,520 --> 00:02:11,120
response so suppose I want a sum of the array so four plus five nine plus six fifteen so it will

18
00:02:11,120 --> 00:02:17,520
give you the result the fifteen like that you can call to any language like I will show you in

19
00:02:17,520 --> 00:02:25,840
two languages R and Python to create a REST API in Julia I am using here gini package so this is

20
00:02:25,840 --> 00:02:32,400
the basic command first out what I am doing I activating the gini environment variable then

21
00:02:32,400 --> 00:02:42,240
I change the directory gini apps so if you observed here this is my folder so I am going there

22
00:02:43,840 --> 00:02:51,760
buy run this command cd so change directory then I import the gini package to create the REST API

23
00:02:52,320 --> 00:03:00,240
you have to type new app underscore web service and put here your app name so I am I am taking

24
00:03:00,240 --> 00:03:10,480
here test zero so this is my app name so when you run this it will create a create the template for

25
00:03:10,480 --> 00:03:20,480
you this is my home directory and this is my folder under this folder so this is a my template

26
00:03:21,120 --> 00:03:28,720
so this is my whole app test zero to run your app what you can do so in under the bin directory

27
00:03:29,440 --> 00:03:37,280
so you have to run either server or repl all the logic you have to type here in roots.gl file

28
00:03:38,080 --> 00:03:48,720
so I open this file so I need to use the router it is a compulsory and I am also using gini and

29
00:03:48,960 --> 00:03:57,520
I also using the request module so for that type here gini.request

30
00:03:59,280 --> 00:04:14,400
to rendering the json response I have to use the json so I type here renderer.json

31
00:04:15,360 --> 00:04:24,560
now I am making the root so json payload whatever you can give the name and I want to do the post

32
00:04:24,560 --> 00:04:38,880
request so method I want post to show you the json response you have to use the macros at the

33
00:04:38,960 --> 00:04:46,480
at the red so so I I want to show the json payload this is a function

34
00:04:52,320 --> 00:04:59,280
whatever this function is written this is so to the user I also want to show the

35
00:05:01,200 --> 00:05:07,760
row payload then I want to save the user's data so suppose users give me the array

36
00:05:08,480 --> 00:05:13,360
so I save this in a variable suppose you

37
00:05:18,640 --> 00:05:24,800
json payload is a function which it return a dictionary so that's why I am writing here in

38
00:05:25,840 --> 00:05:35,280
the close bracket I show you how it actually work so I open the repl so first I am making the

39
00:05:36,240 --> 00:05:44,240
first function f which have no argument and it return our data structure integer so one

40
00:05:45,120 --> 00:05:55,040
so whenever I call f then press enter it will return no parenthesis so it will return a one

41
00:05:55,200 --> 00:06:05,280
function similarly suppose if I type here the data structure array one two and three

42
00:06:06,720 --> 00:06:13,600
if I call this function so this is no this has no argument so I have to call in parenthesis

43
00:06:13,600 --> 00:06:21,520
if you press enter it will return a data structure array similarly if I type here a dictionary

44
00:06:26,000 --> 00:06:33,520
so if I call this function it will return a dictionary if I want to extract the first element

45
00:06:34,320 --> 00:06:38,320
so I have to write here in bracket a

46
00:06:42,320 --> 00:06:48,160
so it will return an array like that it return an array of the users

47
00:06:49,120 --> 00:06:55,520
now I want to do some calculation in this array let's suppose I want to show the

48
00:06:55,520 --> 00:07:04,080
sum of the vector to the user now I want to give the json response you just need to use the json

49
00:07:04,160 --> 00:07:17,440
function that's it and your rest api is ready now now I run the app so bin repl

50
00:07:19,520 --> 00:07:30,320
call the up function to run the server so my app is running in this url now I am calling

51
00:07:30,400 --> 00:07:39,840
from r or r and python so this is python and first I am importing the request module so then I am

52
00:07:40,720 --> 00:07:49,360
requesting the post request in this url so this is my server url so if you observed here

53
00:07:49,920 --> 00:07:59,440
julia is running in the so what I do I just copy this url and paste this so this is the local host

54
00:07:59,440 --> 00:08:09,680
and this is the port number and this is my the root and I am giving the json data array 456

55
00:08:09,680 --> 00:08:19,200
so I run this command to get the result response type here response your variable name and json

56
00:08:20,320 --> 00:08:28,080
so as you can see that uh sum of array is 15 so which is 100 correct similarly in r you have to

57
00:08:28,080 --> 00:08:36,480
use the sttr library and json light library I I write here url where my julia server is running

58
00:08:36,480 --> 00:08:43,200
and I put here json data then I run the post request

59
00:08:46,080 --> 00:08:50,000
to see the content you have to use the content function in the r

60
00:08:51,440 --> 00:08:55,040
so as you can see that sum of array is 15 thank you

