{"text": " Hi guys, in this video I am going to show you how you can create a REST API by using Julia. API means here Application Programming Interface. Due to this you can talk to any language like you can call you can talk to any language and even you can talk with the command line by the curl and you can also talk from mobile. You can think as suppose you go to the Japanese restaurant and you don't know Japanese and what you need to do now you need a converter who convert English language into Japanese then you finally got the dish for example you can if you use the azure azure is a cloud platform which is provided by the Microsoft and there are API available for different different services for if you want to do text analytics there is also there is API available for that for different tasks for API is available in the azure similarly for Google cloud and Amazon web service similarly if you go to the yatra.com or booking.com so this website basically for traveling or hotel booking or flight booking they under the hood they actually using the API so API is very famous things in the internet and you use probably you use most of the time API service in your daily life so what I will do so I am calling the REST API to the Julia from the R programming so what I do I create a JSON data structure in R then I send to the JSON request to the Julia server Julia REST API server then Julia responds the JSON response so suppose I want a sum of the array so four plus five nine plus six fifteen so it will give you the result the fifteen like that you can call to any language like I will show you in two languages R and Python to create a REST API in Julia I am using here gini package so this is the basic command first out what I am doing I activating the gini environment variable then I change the directory gini apps so if you observed here this is my folder so I am going there buy run this command cd so change directory then I import the gini package to create the REST API you have to type new app underscore web service and put here your app name so I am I am taking here test zero so this is my app name so when you run this it will create a create the template for you this is my home directory and this is my folder under this folder so this is a my template so this is my whole app test zero to run your app what you can do so in under the bin directory so you have to run either server or repl all the logic you have to type here in roots.gl file so I open this file so I need to use the router it is a compulsory and I am also using gini and I also using the request module so for that type here gini.request to rendering the json response I have to use the json so I type here renderer.json now I am making the root so json payload whatever you can give the name and I want to do the post request so method I want post to show you the json response you have to use the macros at the at the red so so I I want to show the json payload this is a function whatever this function is written this is so to the user I also want to show the row payload then I want to save the user's data so suppose users give me the array so I save this in a variable suppose you json payload is a function which it return a dictionary so that's why I am writing here in the close bracket I show you how it actually work so I open the repl so first I am making the first function f which have no argument and it return our data structure integer so one so whenever I call f then press enter it will return no parenthesis so it will return a one function similarly suppose if I type here the data structure array one two and three if I call this function so this is no this has no argument so I have to call in parenthesis if you press enter it will return a data structure array similarly if I type here a dictionary so if I call this function it will return a dictionary if I want to extract the first element so I have to write here in bracket a so it will return an array like that it return an array of the users now I want to do some calculation in this array let's suppose I want to show the sum of the vector to the user now I want to give the json response you just need to use the json function that's it and your rest api is ready now now I run the app so bin repl call the up function to run the server so my app is running in this url now I am calling from r or r and python so this is python and first I am importing the request module so then I am requesting the post request in this url so this is my server url so if you observed here julia is running in the so what I do I just copy this url and paste this so this is the local host and this is the port number and this is my the root and I am giving the json data array 456 so I run this command to get the result response type here response your variable name and json so as you can see that uh sum of array is 15 so which is 100 correct similarly in r you have to use the sttr library and json light library I I write here url where my julia server is running and I put here json data then I run the post request to see the content you have to use the content function in the r so as you can see that sum of array is 15 thank you", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 6.24, "text": " Hi guys, in this video I am going to show you how you can create a REST API by using Julia.", "tokens": [50364, 2421, 1074, 11, 294, 341, 960, 286, 669, 516, 281, 855, 291, 577, 291, 393, 1884, 257, 497, 14497, 9362, 538, 1228, 18551, 13, 50676], "temperature": 0.0, "avg_logprob": -0.2035051438866592, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.3148380517959595}, {"id": 1, "seek": 0, "start": 6.24, "end": 9.44, "text": " API means here Application Programming Interface.", "tokens": [50676, 9362, 1355, 510, 39512, 8338, 2810, 5751, 2868, 13, 50836], "temperature": 0.0, "avg_logprob": -0.2035051438866592, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.3148380517959595}, {"id": 2, "seek": 0, "start": 10.16, "end": 17.84, "text": " Due to this you can talk to any language like you can call you can talk to any language and", "tokens": [50872, 18980, 281, 341, 291, 393, 751, 281, 604, 2856, 411, 291, 393, 818, 291, 393, 751, 281, 604, 2856, 293, 51256], "temperature": 0.0, "avg_logprob": -0.2035051438866592, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.3148380517959595}, {"id": 3, "seek": 0, "start": 18.48, "end": 26.400000000000002, "text": " even you can talk with the command line by the curl and you can also talk from mobile.", "tokens": [51288, 754, 291, 393, 751, 365, 264, 5622, 1622, 538, 264, 22591, 293, 291, 393, 611, 751, 490, 6013, 13, 51684], "temperature": 0.0, "avg_logprob": -0.2035051438866592, "compression_ratio": 1.6842105263157894, "no_speech_prob": 0.3148380517959595}, {"id": 4, "seek": 2640, "start": 26.4, "end": 31.36, "text": " You can think as suppose you go to the Japanese restaurant and you don't know Japanese", "tokens": [50364, 509, 393, 519, 382, 7297, 291, 352, 281, 264, 5433, 6383, 293, 291, 500, 380, 458, 5433, 50612], "temperature": 0.0, "avg_logprob": -0.11205147533881955, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.09897094964981079}, {"id": 5, "seek": 2640, "start": 32.16, "end": 38.4, "text": " and what you need to do now you need a converter who convert English language into Japanese", "tokens": [50652, 293, 437, 291, 643, 281, 360, 586, 291, 643, 257, 33905, 567, 7620, 3669, 2856, 666, 5433, 50964], "temperature": 0.0, "avg_logprob": -0.11205147533881955, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.09897094964981079}, {"id": 6, "seek": 2640, "start": 39.04, "end": 47.68, "text": " then you finally got the dish for example you can if you use the azure azure is a cloud platform", "tokens": [50996, 550, 291, 2721, 658, 264, 5025, 337, 1365, 291, 393, 498, 291, 764, 264, 7883, 540, 7883, 540, 307, 257, 4588, 3663, 51428], "temperature": 0.0, "avg_logprob": -0.11205147533881955, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.09897094964981079}, {"id": 7, "seek": 2640, "start": 48.32, "end": 55.76, "text": " which is provided by the Microsoft and there are API available for different different services for", "tokens": [51460, 597, 307, 5649, 538, 264, 8116, 293, 456, 366, 9362, 2435, 337, 819, 819, 3328, 337, 51832], "temperature": 0.0, "avg_logprob": -0.11205147533881955, "compression_ratio": 1.6891891891891893, "no_speech_prob": 0.09897094964981079}, {"id": 8, "seek": 5576, "start": 55.76, "end": 63.12, "text": " if you want to do text analytics there is also there is API available for that for different", "tokens": [50364, 498, 291, 528, 281, 360, 2487, 15370, 456, 307, 611, 456, 307, 9362, 2435, 337, 300, 337, 819, 50732], "temperature": 0.0, "avg_logprob": -0.171413391828537, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.05326666682958603}, {"id": 9, "seek": 5576, "start": 63.12, "end": 72.24, "text": " tasks for API is available in the azure similarly for Google cloud and Amazon web service similarly", "tokens": [50732, 9608, 337, 9362, 307, 2435, 294, 264, 7883, 540, 14138, 337, 3329, 4588, 293, 6795, 3670, 2643, 14138, 51188], "temperature": 0.0, "avg_logprob": -0.171413391828537, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.05326666682958603}, {"id": 10, "seek": 5576, "start": 72.24, "end": 80.4, "text": " if you go to the yatra.com or booking.com so this website basically for traveling or", "tokens": [51188, 498, 291, 352, 281, 264, 288, 33593, 13, 1112, 420, 34424, 13, 1112, 370, 341, 3144, 1936, 337, 9712, 420, 51596], "temperature": 0.0, "avg_logprob": -0.171413391828537, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.05326666682958603}, {"id": 11, "seek": 8040, "start": 80.4, "end": 88.0, "text": " hotel booking or flight booking they under the hood they actually using the API so API is very", "tokens": [50364, 7622, 34424, 420, 7018, 34424, 436, 833, 264, 13376, 436, 767, 1228, 264, 9362, 370, 9362, 307, 588, 50744], "temperature": 0.0, "avg_logprob": -0.10981835524241129, "compression_ratio": 1.5403726708074534, "no_speech_prob": 0.18081426620483398}, {"id": 12, "seek": 8040, "start": 88.0, "end": 95.44000000000001, "text": " famous things in the internet and you use probably you use most of the time API service", "tokens": [50744, 4618, 721, 294, 264, 4705, 293, 291, 764, 1391, 291, 764, 881, 295, 264, 565, 9362, 2643, 51116], "temperature": 0.0, "avg_logprob": -0.10981835524241129, "compression_ratio": 1.5403726708074534, "no_speech_prob": 0.18081426620483398}, {"id": 13, "seek": 8040, "start": 96.08000000000001, "end": 102.4, "text": " in your daily life so what I will do so I am calling the REST API", "tokens": [51148, 294, 428, 5212, 993, 370, 437, 286, 486, 360, 370, 286, 669, 5141, 264, 497, 14497, 9362, 51464], "temperature": 0.0, "avg_logprob": -0.10981835524241129, "compression_ratio": 1.5403726708074534, "no_speech_prob": 0.18081426620483398}, {"id": 14, "seek": 10240, "start": 103.36, "end": 114.4, "text": " to the Julia from the R programming so what I do I create a JSON data structure in R then I send", "tokens": [50412, 281, 264, 18551, 490, 264, 497, 9410, 370, 437, 286, 360, 286, 1884, 257, 31828, 1412, 3877, 294, 497, 550, 286, 2845, 50964], "temperature": 0.0, "avg_logprob": -0.14165741464366083, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.4024623930454254}, {"id": 15, "seek": 10240, "start": 114.4, "end": 121.52000000000001, "text": " to the JSON request to the Julia server Julia REST API server then Julia responds the JSON", "tokens": [50964, 281, 264, 31828, 5308, 281, 264, 18551, 7154, 18551, 497, 14497, 9362, 7154, 550, 18551, 27331, 264, 31828, 51320], "temperature": 0.0, "avg_logprob": -0.14165741464366083, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.4024623930454254}, {"id": 16, "seek": 10240, "start": 121.52000000000001, "end": 131.12, "text": " response so suppose I want a sum of the array so four plus five nine plus six fifteen so it will", "tokens": [51320, 4134, 370, 7297, 286, 528, 257, 2408, 295, 264, 10225, 370, 1451, 1804, 1732, 4949, 1804, 2309, 18126, 370, 309, 486, 51800], "temperature": 0.0, "avg_logprob": -0.14165741464366083, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.4024623930454254}, {"id": 17, "seek": 13112, "start": 131.12, "end": 137.52, "text": " give you the result the fifteen like that you can call to any language like I will show you in", "tokens": [50364, 976, 291, 264, 1874, 264, 18126, 411, 300, 291, 393, 818, 281, 604, 2856, 411, 286, 486, 855, 291, 294, 50684], "temperature": 0.0, "avg_logprob": -0.14236133238848517, "compression_ratio": 1.5053191489361701, "no_speech_prob": 0.023687684908509254}, {"id": 18, "seek": 13112, "start": 137.52, "end": 145.84, "text": " two languages R and Python to create a REST API in Julia I am using here gini package so this is", "tokens": [50684, 732, 8650, 497, 293, 15329, 281, 1884, 257, 497, 14497, 9362, 294, 18551, 286, 669, 1228, 510, 290, 3812, 7372, 370, 341, 307, 51100], "temperature": 0.0, "avg_logprob": -0.14236133238848517, "compression_ratio": 1.5053191489361701, "no_speech_prob": 0.023687684908509254}, {"id": 19, "seek": 13112, "start": 145.84, "end": 152.4, "text": " the basic command first out what I am doing I activating the gini environment variable then", "tokens": [51100, 264, 3875, 5622, 700, 484, 437, 286, 669, 884, 286, 42481, 264, 290, 3812, 2823, 7006, 550, 51428], "temperature": 0.0, "avg_logprob": -0.14236133238848517, "compression_ratio": 1.5053191489361701, "no_speech_prob": 0.023687684908509254}, {"id": 20, "seek": 15240, "start": 152.4, "end": 162.24, "text": " I change the directory gini apps so if you observed here this is my folder so I am going there", "tokens": [50364, 286, 1319, 264, 21120, 290, 3812, 7733, 370, 498, 291, 13095, 510, 341, 307, 452, 10820, 370, 286, 669, 516, 456, 50856], "temperature": 0.0, "avg_logprob": -0.08426982164382935, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.025496426969766617}, {"id": 21, "seek": 15240, "start": 163.84, "end": 171.76, "text": " buy run this command cd so change directory then I import the gini package to create the REST API", "tokens": [50936, 2256, 1190, 341, 5622, 269, 67, 370, 1319, 21120, 550, 286, 974, 264, 290, 3812, 7372, 281, 1884, 264, 497, 14497, 9362, 51332], "temperature": 0.0, "avg_logprob": -0.08426982164382935, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.025496426969766617}, {"id": 22, "seek": 15240, "start": 172.32, "end": 180.24, "text": " you have to type new app underscore web service and put here your app name so I am I am taking", "tokens": [51360, 291, 362, 281, 2010, 777, 724, 37556, 3670, 2643, 293, 829, 510, 428, 724, 1315, 370, 286, 669, 286, 669, 1940, 51756], "temperature": 0.0, "avg_logprob": -0.08426982164382935, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.025496426969766617}, {"id": 23, "seek": 18024, "start": 180.24, "end": 190.48000000000002, "text": " here test zero so this is my app name so when you run this it will create a create the template for", "tokens": [50364, 510, 1500, 4018, 370, 341, 307, 452, 724, 1315, 370, 562, 291, 1190, 341, 309, 486, 1884, 257, 1884, 264, 12379, 337, 50876], "temperature": 0.0, "avg_logprob": -0.050409297148386635, "compression_ratio": 1.9863013698630136, "no_speech_prob": 0.02661973237991333}, {"id": 24, "seek": 18024, "start": 190.48000000000002, "end": 200.48000000000002, "text": " you this is my home directory and this is my folder under this folder so this is a my template", "tokens": [50876, 291, 341, 307, 452, 1280, 21120, 293, 341, 307, 452, 10820, 833, 341, 10820, 370, 341, 307, 257, 452, 12379, 51376], "temperature": 0.0, "avg_logprob": -0.050409297148386635, "compression_ratio": 1.9863013698630136, "no_speech_prob": 0.02661973237991333}, {"id": 25, "seek": 18024, "start": 201.12, "end": 208.72, "text": " so this is my whole app test zero to run your app what you can do so in under the bin directory", "tokens": [51408, 370, 341, 307, 452, 1379, 724, 1500, 4018, 281, 1190, 428, 724, 437, 291, 393, 360, 370, 294, 833, 264, 5171, 21120, 51788], "temperature": 0.0, "avg_logprob": -0.050409297148386635, "compression_ratio": 1.9863013698630136, "no_speech_prob": 0.02661973237991333}, {"id": 26, "seek": 20872, "start": 209.44, "end": 217.28, "text": " so you have to run either server or repl all the logic you have to type here in roots.gl file", "tokens": [50400, 370, 291, 362, 281, 1190, 2139, 7154, 420, 1085, 75, 439, 264, 9952, 291, 362, 281, 2010, 510, 294, 10669, 13, 7191, 3991, 50792], "temperature": 0.0, "avg_logprob": -0.12968518998887804, "compression_ratio": 1.5, "no_speech_prob": 0.014576596207916737}, {"id": 27, "seek": 20872, "start": 218.07999999999998, "end": 228.72, "text": " so I open this file so I need to use the router it is a compulsory and I am also using gini and", "tokens": [50832, 370, 286, 1269, 341, 3991, 370, 286, 643, 281, 764, 264, 22492, 309, 307, 257, 42773, 827, 293, 286, 669, 611, 1228, 290, 3812, 293, 51364], "temperature": 0.0, "avg_logprob": -0.12968518998887804, "compression_ratio": 1.5, "no_speech_prob": 0.014576596207916737}, {"id": 28, "seek": 22872, "start": 228.96, "end": 237.52, "text": " I also using the request module so for that type here gini.request", "tokens": [50376, 286, 611, 1228, 264, 5308, 10088, 370, 337, 300, 2010, 510, 290, 3812, 13, 265, 20343, 50804], "temperature": 0.0, "avg_logprob": -0.22131848335266113, "compression_ratio": 1.4607843137254901, "no_speech_prob": 0.047107815742492676}, {"id": 29, "seek": 22872, "start": 239.28, "end": 254.4, "text": " to rendering the json response I have to use the json so I type here renderer.json", "tokens": [50892, 281, 22407, 264, 361, 3015, 4134, 286, 362, 281, 764, 264, 361, 3015, 370, 286, 2010, 510, 15529, 260, 13, 73, 3015, 51648], "temperature": 0.0, "avg_logprob": -0.22131848335266113, "compression_ratio": 1.4607843137254901, "no_speech_prob": 0.047107815742492676}, {"id": 30, "seek": 25440, "start": 255.36, "end": 264.56, "text": " now I am making the root so json payload whatever you can give the name and I want to do the post", "tokens": [50412, 586, 286, 669, 1455, 264, 5593, 370, 361, 3015, 30918, 2035, 291, 393, 976, 264, 1315, 293, 286, 528, 281, 360, 264, 2183, 50872], "temperature": 0.0, "avg_logprob": -0.10172812143961589, "compression_ratio": 1.528, "no_speech_prob": 0.025632107630372047}, {"id": 31, "seek": 25440, "start": 264.56, "end": 278.88, "text": " request so method I want post to show you the json response you have to use the macros at the", "tokens": [50872, 5308, 370, 3170, 286, 528, 2183, 281, 855, 291, 264, 361, 3015, 4134, 291, 362, 281, 764, 264, 7912, 2635, 412, 264, 51588], "temperature": 0.0, "avg_logprob": -0.10172812143961589, "compression_ratio": 1.528, "no_speech_prob": 0.025632107630372047}, {"id": 32, "seek": 27888, "start": 278.96, "end": 286.48, "text": " at the red so so I I want to show the json payload this is a function", "tokens": [50368, 412, 264, 2182, 370, 370, 286, 286, 528, 281, 855, 264, 361, 3015, 30918, 341, 307, 257, 2445, 50744], "temperature": 0.0, "avg_logprob": -0.12318197625582336, "compression_ratio": 1.7786259541984732, "no_speech_prob": 0.04307324066758156}, {"id": 33, "seek": 27888, "start": 292.32, "end": 299.28, "text": " whatever this function is written this is so to the user I also want to show the", "tokens": [51036, 2035, 341, 2445, 307, 3720, 341, 307, 370, 281, 264, 4195, 286, 611, 528, 281, 855, 264, 51384], "temperature": 0.0, "avg_logprob": -0.12318197625582336, "compression_ratio": 1.7786259541984732, "no_speech_prob": 0.04307324066758156}, {"id": 34, "seek": 27888, "start": 301.2, "end": 307.76, "text": " row payload then I want to save the user's data so suppose users give me the array", "tokens": [51480, 5386, 30918, 550, 286, 528, 281, 3155, 264, 4195, 311, 1412, 370, 7297, 5022, 976, 385, 264, 10225, 51808], "temperature": 0.0, "avg_logprob": -0.12318197625582336, "compression_ratio": 1.7786259541984732, "no_speech_prob": 0.04307324066758156}, {"id": 35, "seek": 30776, "start": 308.48, "end": 313.36, "text": " so I save this in a variable suppose you", "tokens": [50400, 370, 286, 3155, 341, 294, 257, 7006, 7297, 291, 50644], "temperature": 0.0, "avg_logprob": -0.12077619261660819, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.020702259615063667}, {"id": 36, "seek": 30776, "start": 318.64, "end": 324.8, "text": " json payload is a function which it return a dictionary so that's why I am writing here in", "tokens": [50908, 361, 3015, 30918, 307, 257, 2445, 597, 309, 2736, 257, 25890, 370, 300, 311, 983, 286, 669, 3579, 510, 294, 51216], "temperature": 0.0, "avg_logprob": -0.12077619261660819, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.020702259615063667}, {"id": 37, "seek": 30776, "start": 325.84, "end": 335.28, "text": " the close bracket I show you how it actually work so I open the repl so first I am making the", "tokens": [51268, 264, 1998, 16904, 286, 855, 291, 577, 309, 767, 589, 370, 286, 1269, 264, 1085, 75, 370, 700, 286, 669, 1455, 264, 51740], "temperature": 0.0, "avg_logprob": -0.12077619261660819, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.020702259615063667}, {"id": 38, "seek": 33528, "start": 336.23999999999995, "end": 344.23999999999995, "text": " first function f which have no argument and it return our data structure integer so one", "tokens": [50412, 700, 2445, 283, 597, 362, 572, 6770, 293, 309, 2736, 527, 1412, 3877, 24922, 370, 472, 50812], "temperature": 0.0, "avg_logprob": -0.10108204115004767, "compression_ratio": 1.504201680672269, "no_speech_prob": 0.011292983777821064}, {"id": 39, "seek": 33528, "start": 345.11999999999995, "end": 355.03999999999996, "text": " so whenever I call f then press enter it will return no parenthesis so it will return a one", "tokens": [50856, 370, 5699, 286, 818, 283, 550, 1886, 3242, 309, 486, 2736, 572, 23350, 9374, 370, 309, 486, 2736, 257, 472, 51352], "temperature": 0.0, "avg_logprob": -0.10108204115004767, "compression_ratio": 1.504201680672269, "no_speech_prob": 0.011292983777821064}, {"id": 40, "seek": 35504, "start": 355.20000000000005, "end": 365.28000000000003, "text": " function similarly suppose if I type here the data structure array one two and three", "tokens": [50372, 2445, 14138, 7297, 498, 286, 2010, 510, 264, 1412, 3877, 10225, 472, 732, 293, 1045, 50876], "temperature": 0.0, "avg_logprob": -0.14938190335133036, "compression_ratio": 1.7828947368421053, "no_speech_prob": 0.03348972275853157}, {"id": 41, "seek": 35504, "start": 366.72, "end": 373.6, "text": " if I call this function so this is no this has no argument so I have to call in parenthesis", "tokens": [50948, 498, 286, 818, 341, 2445, 370, 341, 307, 572, 341, 575, 572, 6770, 370, 286, 362, 281, 818, 294, 23350, 9374, 51292], "temperature": 0.0, "avg_logprob": -0.14938190335133036, "compression_ratio": 1.7828947368421053, "no_speech_prob": 0.03348972275853157}, {"id": 42, "seek": 35504, "start": 373.6, "end": 381.52000000000004, "text": " if you press enter it will return a data structure array similarly if I type here a dictionary", "tokens": [51292, 498, 291, 1886, 3242, 309, 486, 2736, 257, 1412, 3877, 10225, 14138, 498, 286, 2010, 510, 257, 25890, 51688], "temperature": 0.0, "avg_logprob": -0.14938190335133036, "compression_ratio": 1.7828947368421053, "no_speech_prob": 0.03348972275853157}, {"id": 43, "seek": 38504, "start": 386.0, "end": 393.52000000000004, "text": " so if I call this function it will return a dictionary if I want to extract the first element", "tokens": [50412, 370, 498, 286, 818, 341, 2445, 309, 486, 2736, 257, 25890, 498, 286, 528, 281, 8947, 264, 700, 4478, 50788], "temperature": 0.0, "avg_logprob": -0.12000478482713886, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.001906813820824027}, {"id": 44, "seek": 38504, "start": 394.32, "end": 398.32000000000005, "text": " so I have to write here in bracket a", "tokens": [50828, 370, 286, 362, 281, 2464, 510, 294, 16904, 257, 51028], "temperature": 0.0, "avg_logprob": -0.12000478482713886, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.001906813820824027}, {"id": 45, "seek": 38504, "start": 402.32000000000005, "end": 408.16, "text": " so it will return an array like that it return an array of the users", "tokens": [51228, 370, 309, 486, 2736, 364, 10225, 411, 300, 309, 2736, 364, 10225, 295, 264, 5022, 51520], "temperature": 0.0, "avg_logprob": -0.12000478482713886, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.001906813820824027}, {"id": 46, "seek": 40816, "start": 409.12, "end": 415.52000000000004, "text": " now I want to do some calculation in this array let's suppose I want to show the", "tokens": [50412, 586, 286, 528, 281, 360, 512, 17108, 294, 341, 10225, 718, 311, 7297, 286, 528, 281, 855, 264, 50732], "temperature": 0.0, "avg_logprob": -0.15059499939282736, "compression_ratio": 1.5, "no_speech_prob": 0.0648690015077591}, {"id": 47, "seek": 40816, "start": 415.52000000000004, "end": 424.08000000000004, "text": " sum of the vector to the user now I want to give the json response you just need to use the json", "tokens": [50732, 2408, 295, 264, 8062, 281, 264, 4195, 586, 286, 528, 281, 976, 264, 361, 3015, 4134, 291, 445, 643, 281, 764, 264, 361, 3015, 51160], "temperature": 0.0, "avg_logprob": -0.15059499939282736, "compression_ratio": 1.5, "no_speech_prob": 0.0648690015077591}, {"id": 48, "seek": 42408, "start": 424.15999999999997, "end": 437.44, "text": " function that's it and your rest api is ready now now I run the app so bin repl", "tokens": [50368, 2445, 300, 311, 309, 293, 428, 1472, 1882, 72, 307, 1919, 586, 586, 286, 1190, 264, 724, 370, 5171, 1085, 75, 51032], "temperature": 0.0, "avg_logprob": -0.16396495699882507, "compression_ratio": 1.4867256637168142, "no_speech_prob": 0.25615280866622925}, {"id": 49, "seek": 42408, "start": 439.52, "end": 450.32, "text": " call the up function to run the server so my app is running in this url now I am calling", "tokens": [51136, 818, 264, 493, 2445, 281, 1190, 264, 7154, 370, 452, 724, 307, 2614, 294, 341, 4038, 75, 586, 286, 669, 5141, 51676], "temperature": 0.0, "avg_logprob": -0.16396495699882507, "compression_ratio": 1.4867256637168142, "no_speech_prob": 0.25615280866622925}, {"id": 50, "seek": 45032, "start": 450.4, "end": 459.84, "text": " from r or r and python so this is python and first I am importing the request module so then I am", "tokens": [50368, 490, 367, 420, 367, 293, 38797, 370, 341, 307, 38797, 293, 700, 286, 669, 43866, 264, 5308, 10088, 370, 550, 286, 669, 50840], "temperature": 0.0, "avg_logprob": -0.08880399703979493, "compression_ratio": 1.8269230769230769, "no_speech_prob": 0.050203073769807816}, {"id": 51, "seek": 45032, "start": 460.71999999999997, "end": 469.36, "text": " requesting the post request in this url so this is my server url so if you observed here", "tokens": [50884, 31937, 264, 2183, 5308, 294, 341, 4038, 75, 370, 341, 307, 452, 7154, 4038, 75, 370, 498, 291, 13095, 510, 51316], "temperature": 0.0, "avg_logprob": -0.08880399703979493, "compression_ratio": 1.8269230769230769, "no_speech_prob": 0.050203073769807816}, {"id": 52, "seek": 45032, "start": 469.92, "end": 479.44, "text": " julia is running in the so what I do I just copy this url and paste this so this is the local host", "tokens": [51344, 30764, 654, 307, 2614, 294, 264, 370, 437, 286, 360, 286, 445, 5055, 341, 4038, 75, 293, 9163, 341, 370, 341, 307, 264, 2654, 3975, 51820], "temperature": 0.0, "avg_logprob": -0.08880399703979493, "compression_ratio": 1.8269230769230769, "no_speech_prob": 0.050203073769807816}, {"id": 53, "seek": 47944, "start": 479.44, "end": 489.68, "text": " and this is the port number and this is my the root and I am giving the json data array 456", "tokens": [50364, 293, 341, 307, 264, 2436, 1230, 293, 341, 307, 452, 264, 5593, 293, 286, 669, 2902, 264, 361, 3015, 1412, 10225, 6905, 21, 50876], "temperature": 0.0, "avg_logprob": -0.08404578248115435, "compression_ratio": 1.6171428571428572, "no_speech_prob": 0.016376031562685966}, {"id": 54, "seek": 47944, "start": 489.68, "end": 499.2, "text": " so I run this command to get the result response type here response your variable name and json", "tokens": [50876, 370, 286, 1190, 341, 5622, 281, 483, 264, 1874, 4134, 2010, 510, 4134, 428, 7006, 1315, 293, 361, 3015, 51352], "temperature": 0.0, "avg_logprob": -0.08404578248115435, "compression_ratio": 1.6171428571428572, "no_speech_prob": 0.016376031562685966}, {"id": 55, "seek": 47944, "start": 500.32, "end": 508.08, "text": " so as you can see that uh sum of array is 15 so which is 100 correct similarly in r you have to", "tokens": [51408, 370, 382, 291, 393, 536, 300, 2232, 2408, 295, 10225, 307, 2119, 370, 597, 307, 2319, 3006, 14138, 294, 367, 291, 362, 281, 51796], "temperature": 0.0, "avg_logprob": -0.08404578248115435, "compression_ratio": 1.6171428571428572, "no_speech_prob": 0.016376031562685966}, {"id": 56, "seek": 50808, "start": 508.08, "end": 516.48, "text": " use the sttr library and json light library I I write here url where my julia server is running", "tokens": [50364, 764, 264, 342, 6903, 6405, 293, 361, 3015, 1442, 6405, 286, 286, 2464, 510, 4038, 75, 689, 452, 30764, 654, 7154, 307, 2614, 50784], "temperature": 0.0, "avg_logprob": -0.11924133035871717, "compression_ratio": 1.6257668711656441, "no_speech_prob": 0.012167512439191341}, {"id": 57, "seek": 50808, "start": 516.48, "end": 523.1999999999999, "text": " and I put here json data then I run the post request", "tokens": [50784, 293, 286, 829, 510, 361, 3015, 1412, 550, 286, 1190, 264, 2183, 5308, 51120], "temperature": 0.0, "avg_logprob": -0.11924133035871717, "compression_ratio": 1.6257668711656441, "no_speech_prob": 0.012167512439191341}, {"id": 58, "seek": 50808, "start": 526.0799999999999, "end": 530.0, "text": " to see the content you have to use the content function in the r", "tokens": [51264, 281, 536, 264, 2701, 291, 362, 281, 764, 264, 2701, 2445, 294, 264, 367, 51460], "temperature": 0.0, "avg_logprob": -0.11924133035871717, "compression_ratio": 1.6257668711656441, "no_speech_prob": 0.012167512439191341}, {"id": 59, "seek": 50808, "start": 531.4399999999999, "end": 535.04, "text": " so as you can see that sum of array is 15 thank you", "tokens": [51532, 370, 382, 291, 393, 536, 300, 2408, 295, 10225, 307, 2119, 1309, 291, 51712], "temperature": 0.0, "avg_logprob": -0.11924133035871717, "compression_ratio": 1.6257668711656441, "no_speech_prob": 0.012167512439191341}], "language": "en"}