{"text": " Hey guys, this is going to be a video on essentially an effective method to learn many different concepts quickly. This method is dubbed black boxing, and as you can see here I've hand drawn a cube to represent this, if you like this. So this allows you to apply many different techniques like algorithms, data structures, or just pieces of code in general. And it works for competitive programming, or even just general programming, because there's a lot of similarity between the two and the way the method is used. So in particular, I've used this a lot during some contests of mine to get where I am now. With a significant example being how I used it to solve a quite hard problem with a technique I didn't even know much about. Only a brief overview of what it did, and that ended up getting me 10th and saving my 7th star rating on codechef. So, yeah, this method works. And in fact, this is something we generally use all the time in general programming without even thinking much about it. So what even is a black box? Well, we can pull up Wikipedia's definition as support, but essentially it just means that it's some piece of code that does something, and we understand what it does, but not really how it does it. It's sort of, like they say, it's viewed in terms of its inputs and outputs, but not the internal mechanisms that are converting that input into the output. And the reason we don't understand what it does, the reason we don't understand how it does it is because we don't need to. Like many APIs are internal libraries, like we already use for many portions of our code, like input and output, for example. We let the pre-written code do the hidden magic and only worry about what we do with the results. And the cool thing about programs is that you can literally just copy and paste some piece of code in, and regardless of how much you understand it, it's still going to work. So let's take a very common example of sorting an array. For many languages, we use an internal algorithm to sort an array, some part of the programming languages library. And just as a brief refresher, if it's unfamiliar to you, sorting is just reordering elements in some kind of increasing order. And I'm also so proud of this cube drawing that I'm going to keep it here for this example. So often, in general, we do learn how this algorithm works sorting, or at least some viable sorting algorithm, just because it's like one of the common introductory things to programming and it's often a good exercise. But it's not necessary to use the library. Like a single function called does all the work for us. I mean, all we do is we call some sorting method or function, and that's it. We don't worry about what's going on inside. And other library uses work the same way. We simply use their functions without implementing them ourselves. A different example is femur trees or binary index trees, which is a topic from competitive programming. So if you already know these, great, then it's a good example. And if you don't, then that's fine. And the whole point of this is that it will only take me like a few seconds up to a minute to explain it. So the quick black box description of what it is, is it basically operates on an array. It supports two different operations. The first is that you can pick some index, some position in the array, and add some value x to it. And the second is that you can query the sum of the first x elements or the first i elements. Both of these operations take O of log n complexity. And it's O of n to initialize and O of n memory overall. And that's it. There is some complicated underlying bitwise logic that makes it work. But to use it, none of that is actually necessary to know. And in fact, I honestly don't even understand it myself because I've never bothered to because it's never been necessary. And nonetheless, I've solved many, many problems using this technique. So my template, which is the code you can see below or in front of you, is sort of structured like an API, where these add and query functions are just simply using the struct and telling it to do that. So now let's pull out the trusty paint for a demonstration. And if you're new to this channel, well, I basically use it for everything. So that will be how it goes. In this diagram, vertical distance represents time. And basically the standard strategy for learning is to pick some list of topics and then learn them one by one. However, this is rather slow. And during the period of learning, for the topics that you haven't even looked at yet, you won't know anything or much about any of them. So say some contest comes and you'd want to do it because the contest and contests are always good for you to learn from, which I made a video on. Essentially, you're not going to be able to do anything. Maybe you know enough about topic A, which you've learned some about to be able to do it. But for topics, for concepts B and C, you're just totally screwed. There's nothing you can do. You don't really know about them. So if those show up, there's nothing you'll be able to do. So it's sort of bad in the intermediate step. But now let's introduce black boxing, which is much closer to the unknown side of things because it doesn't take that much time to learn it. It's an easy gap to cross versus learning an entire thing. Now say I black box all three of the concepts before starting to fully learn them. Not necessarily as a substitute for learning them just as a start. And I think this should be the way that black boxing is used. It's still a good idea to eventually learn things because it's sort of going to be necessary if you ever want to make modifications to something, which does show up somewhat frequently. But it's a good first step and it will let you be informed about all of the algorithms and data structures and everything that you're interested in using. So this black boxing may also involve solving a few problems or just playing with it a bit, getting a bit of practice, just to get comfortable. And the plan is to eventually learn them, of course. But just starting with these techniques as black boxes is a good enough introduction to them. Now in this scenario, say the contest happens. And I've already black boxed these three and I'm in the process of learning concept A. But I'm already at the point where I'm able to use all three concepts effectively. So I know enough about all three of the topics to solve the problems that use them. So I do. And I do much better on this contest potentially if it has these topics than if I hadn't used the black boxing. And I got some practice out of it because now I know these problems are going to use these concepts. So black boxing is basically like an intermediate step, except it has no drawbacks. You're going to learn this stuff anyway, so it can really only benefit you and the benefits are still really good. So let's talk advantages. Why is this useful? It definitely works very quickly in that the information required to use something is much less than the information required to fully understand something. As you could have seen from my previous examples, it took like maybe around a minute or two just to explain the black box rendition of some concept. Especially for rather hard topics, ones that can take like hours or even multiple days to learn and grasp. This saves a lot of the work at least initially. And allows you to have most of the necessary information very quickly. And then when you decide to learn it later, you'll be able to solidify that knowledge later on as you formally learn things. So if you encounter a problem related to something you're not so well versed in, perhaps you have it black boxed in your head, but you don't exactly understand it yet. At the very least, you do know what to look for. You know that this was the concept involved, you're just not that good at that concept yet. So it lets you sort of figure out where you should go from a certain point. It also allows you to identify related problems as you come across them. So yeah, when you do eventually learn something, you already know places where you can practice and apply it. You've already found some practice problems for yourself by just having the black box and recognizing the certain problem requires a certain concept. It will ultimately keep your learning focused because you already know what everything is doing, you know what the purpose of it is. All you're doing once you transition from having something black boxed to learning it normally, you're just figuring out how it works. You already know what it does, you already know everything that's required to use it, you're just understanding the internal mechanisms of it. And also on that note, when you understand the underlying purpose of something and you're really like acquainted with it, it makes it a lot less scary to learn it for real because you know the end result already. It's just figuring out how it gets there. Now this wouldn't be one of my videos if I didn't take every opportunity to flex. So here's some examples from my own experience where this black boxing has actually worked for me. As I mentioned in the beginning, there was one where I used a complicated concept that I didn't really know much about to get 10th place in a contest and again retain my 7th star ready. And this was an example of using a suffix array, which is a complicated, yeah, like I said, a complicated concept. It's not really related to this video so you don't have to know it to understand this, but the point is that I essentially had this black boxed. I understood what this algorithm did and what it produced, but had no idea how it worked. And just because of that, I was able to copy paste it and make it work. And yeah, as clearly it worked out. Two other examples, one of them was where I actually learned something in contest using a very cool library called the Atcoder library. And this library is nice because it describes things in a black box way where it tells you the functions and what it does and their complexities and everything you'd ever need to know to use it, but it doesn't need to give details on the code. So it's very useful for someone who's taking the black boxing approach because it gives you exactly what you need for everything. So I actually learned this thing in contest and then was able to solve the problem using it. And yeah, that worked out too. And then a separate example is an even harder algorithm called the convex hull trick, which is essentially something I've been using for a long time. I made a stream on it without even understanding how it works just because black boxing was so effective. And I also saved my rating in another hard code chef contest by copy pasting convex hull trick in that. And that got me, I believe, 13th. So showing this code, if you'll notice, the only things that really matter are the two functions, insert line, which will insert a line. Even if you don't understand what that means, it's just simply there are two functions that control everything and everything else is internal. The insert line and eval functions are the API and everything else is magic for all I know. So a bit of advice on the practicality of using the black box method. I mean, how do you even find working code without having to understand and produce yourself, right? Well, as it turns out, there are plenty of well tested and useful libraries that contain code for a lot of different things. I'll include all of these in the description, but a brief overview of what some of them do. The at coder library or ACL is a working and a very broad library with sort of black box style documentation. They give the complexity and the utility, the functions, what the code does, but not necessarily how the code works because it's not necessary. So it basically aligns exactly with how black boxing works. There's a site called CP algorithms, which gives, and by the way, CP is for competitive programming, not the other meaning of the acronym. But it gives both code and explanations for it. But the important thing is that it gives full code without any sort of necessary interpretation most of the time. Some pages aren't perfect, but most of the time it will give full code. There are also some other basic libraries like Cactal, I believe that's how you pronounce that, and also a library by Ben Q, one of the top competitive programmers currently second on code for this. And if you want, I also have my own library with some stuff, but it's not too friendly for anyone who isn't me. So possibly I'll clean it up in the future, but I would recommend using some of the other ones instead of mine. And I'm sure there are also probably plenty of others that you could find on the internet. Alright, so that's black boxing. And whether you choose to use it or not is totally up to you, but I would say it can't hurt for sure. It takes a really short time, like mere minutes for a single topic, and it involves information that you would eventually need to have anyway when you're learning something because it's the utility. It's what the thing actually does. And it also gives you a brief but sufficient, sufficient for using it, introduction to topics, allowing you to use them much quicker than you'd be able to if you decided to learn them all fully in sequence. Now, if you're also looking for some place to try and learn these things, there are some of the websites I mentioned above, but to self-promote a little bit because I have to shove that in too. So I also go over various topics on my channel, so you may want to check the rest of that out and potentially subscribe if you maybe want to possibly potentially. And yeah, um, sorry, that's all I have. Yeah, see you guys.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.0, "text": " Hey guys, this is going to be a video on essentially an effective method to learn many different concepts quickly.", "tokens": [50364, 1911, 1074, 11, 341, 307, 516, 281, 312, 257, 960, 322, 4476, 364, 4942, 3170, 281, 1466, 867, 819, 10392, 2661, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1331855623345626, "compression_ratio": 1.6950819672131148, "no_speech_prob": 0.1291085183620453}, {"id": 1, "seek": 0, "start": 7.0, "end": 13.0, "text": " This method is dubbed black boxing, and as you can see here I've hand drawn a cube to represent this, if you like this.", "tokens": [50714, 639, 3170, 307, 43686, 2211, 24424, 11, 293, 382, 291, 393, 536, 510, 286, 600, 1011, 10117, 257, 13728, 281, 2906, 341, 11, 498, 291, 411, 341, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1331855623345626, "compression_ratio": 1.6950819672131148, "no_speech_prob": 0.1291085183620453}, {"id": 2, "seek": 0, "start": 13.0, "end": 19.0, "text": " So this allows you to apply many different techniques like algorithms, data structures, or just pieces of code in general.", "tokens": [51014, 407, 341, 4045, 291, 281, 3079, 867, 819, 7512, 411, 14642, 11, 1412, 9227, 11, 420, 445, 3755, 295, 3089, 294, 2674, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1331855623345626, "compression_ratio": 1.6950819672131148, "no_speech_prob": 0.1291085183620453}, {"id": 3, "seek": 0, "start": 19.0, "end": 27.0, "text": " And it works for competitive programming, or even just general programming, because there's a lot of similarity between the two and the way the method is used.", "tokens": [51314, 400, 309, 1985, 337, 10043, 9410, 11, 420, 754, 445, 2674, 9410, 11, 570, 456, 311, 257, 688, 295, 32194, 1296, 264, 732, 293, 264, 636, 264, 3170, 307, 1143, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1331855623345626, "compression_ratio": 1.6950819672131148, "no_speech_prob": 0.1291085183620453}, {"id": 4, "seek": 2700, "start": 27.0, "end": 34.0, "text": " So in particular, I've used this a lot during some contests of mine to get where I am now.", "tokens": [50364, 407, 294, 1729, 11, 286, 600, 1143, 341, 257, 688, 1830, 512, 660, 4409, 295, 3892, 281, 483, 689, 286, 669, 586, 13, 50714], "temperature": 0.0, "avg_logprob": -0.12472358345985413, "compression_ratio": 1.4896265560165975, "no_speech_prob": 0.05103955790400505}, {"id": 5, "seek": 2700, "start": 34.0, "end": 42.0, "text": " With a significant example being how I used it to solve a quite hard problem with a technique I didn't even know much about.", "tokens": [50714, 2022, 257, 4776, 1365, 885, 577, 286, 1143, 309, 281, 5039, 257, 1596, 1152, 1154, 365, 257, 6532, 286, 994, 380, 754, 458, 709, 466, 13, 51114], "temperature": 0.0, "avg_logprob": -0.12472358345985413, "compression_ratio": 1.4896265560165975, "no_speech_prob": 0.05103955790400505}, {"id": 6, "seek": 2700, "start": 42.0, "end": 48.0, "text": " Only a brief overview of what it did, and that ended up getting me 10th and saving my 7th star rating on codechef.", "tokens": [51114, 5686, 257, 5353, 12492, 295, 437, 309, 630, 11, 293, 300, 4590, 493, 1242, 385, 1266, 392, 293, 6816, 452, 1614, 392, 3543, 10990, 322, 3089, 1876, 69, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12472358345985413, "compression_ratio": 1.4896265560165975, "no_speech_prob": 0.05103955790400505}, {"id": 7, "seek": 2700, "start": 48.0, "end": 51.0, "text": " So, yeah, this method works.", "tokens": [51414, 407, 11, 1338, 11, 341, 3170, 1985, 13, 51564], "temperature": 0.0, "avg_logprob": -0.12472358345985413, "compression_ratio": 1.4896265560165975, "no_speech_prob": 0.05103955790400505}, {"id": 8, "seek": 5100, "start": 52.0, "end": 60.0, "text": " And in fact, this is something we generally use all the time in general programming without even thinking much about it.", "tokens": [50414, 400, 294, 1186, 11, 341, 307, 746, 321, 5101, 764, 439, 264, 565, 294, 2674, 9410, 1553, 754, 1953, 709, 466, 309, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07653423718043736, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.048815447837114334}, {"id": 9, "seek": 5100, "start": 60.0, "end": 62.0, "text": " So what even is a black box?", "tokens": [50814, 407, 437, 754, 307, 257, 2211, 2424, 30, 50914], "temperature": 0.0, "avg_logprob": -0.07653423718043736, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.048815447837114334}, {"id": 10, "seek": 5100, "start": 62.0, "end": 69.0, "text": " Well, we can pull up Wikipedia's definition as support, but essentially it just means that it's some piece of code that does something,", "tokens": [50914, 1042, 11, 321, 393, 2235, 493, 28999, 311, 7123, 382, 1406, 11, 457, 4476, 309, 445, 1355, 300, 309, 311, 512, 2522, 295, 3089, 300, 775, 746, 11, 51264], "temperature": 0.0, "avg_logprob": -0.07653423718043736, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.048815447837114334}, {"id": 11, "seek": 5100, "start": 69.0, "end": 72.0, "text": " and we understand what it does, but not really how it does it.", "tokens": [51264, 293, 321, 1223, 437, 309, 775, 11, 457, 406, 534, 577, 309, 775, 309, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07653423718043736, "compression_ratio": 1.6036866359447004, "no_speech_prob": 0.048815447837114334}, {"id": 12, "seek": 7200, "start": 72.0, "end": 81.0, "text": " It's sort of, like they say, it's viewed in terms of its inputs and outputs, but not the internal mechanisms that are converting that input into the output.", "tokens": [50364, 467, 311, 1333, 295, 11, 411, 436, 584, 11, 309, 311, 19174, 294, 2115, 295, 1080, 15743, 293, 23930, 11, 457, 406, 264, 6920, 15902, 300, 366, 29942, 300, 4846, 666, 264, 5598, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07829400527575785, "compression_ratio": 1.8327272727272728, "no_speech_prob": 0.29718104004859924}, {"id": 13, "seek": 7200, "start": 81.0, "end": 87.0, "text": " And the reason we don't understand what it does, the reason we don't understand how it does it is because we don't need to.", "tokens": [50814, 400, 264, 1778, 321, 500, 380, 1223, 437, 309, 775, 11, 264, 1778, 321, 500, 380, 1223, 577, 309, 775, 309, 307, 570, 321, 500, 380, 643, 281, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07829400527575785, "compression_ratio": 1.8327272727272728, "no_speech_prob": 0.29718104004859924}, {"id": 14, "seek": 7200, "start": 87.0, "end": 95.0, "text": " Like many APIs are internal libraries, like we already use for many portions of our code, like input and output, for example.", "tokens": [51114, 1743, 867, 21445, 366, 6920, 15148, 11, 411, 321, 1217, 764, 337, 867, 25070, 295, 527, 3089, 11, 411, 4846, 293, 5598, 11, 337, 1365, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07829400527575785, "compression_ratio": 1.8327272727272728, "no_speech_prob": 0.29718104004859924}, {"id": 15, "seek": 7200, "start": 95.0, "end": 100.0, "text": " We let the pre-written code do the hidden magic and only worry about what we do with the results.", "tokens": [51514, 492, 718, 264, 659, 12, 26859, 3089, 360, 264, 7633, 5585, 293, 787, 3292, 466, 437, 321, 360, 365, 264, 3542, 13, 51764], "temperature": 0.0, "avg_logprob": -0.07829400527575785, "compression_ratio": 1.8327272727272728, "no_speech_prob": 0.29718104004859924}, {"id": 16, "seek": 10000, "start": 100.0, "end": 105.0, "text": " And the cool thing about programs is that you can literally just copy and paste some piece of code in,", "tokens": [50364, 400, 264, 1627, 551, 466, 4268, 307, 300, 291, 393, 3736, 445, 5055, 293, 9163, 512, 2522, 295, 3089, 294, 11, 50614], "temperature": 0.0, "avg_logprob": -0.043303713334345184, "compression_ratio": 1.674911660777385, "no_speech_prob": 0.003944294527173042}, {"id": 17, "seek": 10000, "start": 105.0, "end": 109.0, "text": " and regardless of how much you understand it, it's still going to work.", "tokens": [50614, 293, 10060, 295, 577, 709, 291, 1223, 309, 11, 309, 311, 920, 516, 281, 589, 13, 50814], "temperature": 0.0, "avg_logprob": -0.043303713334345184, "compression_ratio": 1.674911660777385, "no_speech_prob": 0.003944294527173042}, {"id": 18, "seek": 10000, "start": 109.0, "end": 114.0, "text": " So let's take a very common example of sorting an array.", "tokens": [50814, 407, 718, 311, 747, 257, 588, 2689, 1365, 295, 32411, 364, 10225, 13, 51064], "temperature": 0.0, "avg_logprob": -0.043303713334345184, "compression_ratio": 1.674911660777385, "no_speech_prob": 0.003944294527173042}, {"id": 19, "seek": 10000, "start": 114.0, "end": 121.0, "text": " For many languages, we use an internal algorithm to sort an array, some part of the programming languages library.", "tokens": [51064, 1171, 867, 8650, 11, 321, 764, 364, 6920, 9284, 281, 1333, 364, 10225, 11, 512, 644, 295, 264, 9410, 8650, 6405, 13, 51414], "temperature": 0.0, "avg_logprob": -0.043303713334345184, "compression_ratio": 1.674911660777385, "no_speech_prob": 0.003944294527173042}, {"id": 20, "seek": 10000, "start": 121.0, "end": 129.0, "text": " And just as a brief refresher, if it's unfamiliar to you, sorting is just reordering elements in some kind of increasing order.", "tokens": [51414, 400, 445, 382, 257, 5353, 17368, 511, 11, 498, 309, 311, 29415, 281, 291, 11, 32411, 307, 445, 319, 765, 1794, 4959, 294, 512, 733, 295, 5662, 1668, 13, 51814], "temperature": 0.0, "avg_logprob": -0.043303713334345184, "compression_ratio": 1.674911660777385, "no_speech_prob": 0.003944294527173042}, {"id": 21, "seek": 12900, "start": 129.0, "end": 134.0, "text": " And I'm also so proud of this cube drawing that I'm going to keep it here for this example.", "tokens": [50364, 400, 286, 478, 611, 370, 4570, 295, 341, 13728, 6316, 300, 286, 478, 516, 281, 1066, 309, 510, 337, 341, 1365, 13, 50614], "temperature": 0.0, "avg_logprob": -0.06418530941009522, "compression_ratio": 1.610236220472441, "no_speech_prob": 0.006287860684096813}, {"id": 22, "seek": 12900, "start": 134.0, "end": 142.0, "text": " So often, in general, we do learn how this algorithm works sorting, or at least some viable sorting algorithm,", "tokens": [50614, 407, 2049, 11, 294, 2674, 11, 321, 360, 1466, 577, 341, 9284, 1985, 32411, 11, 420, 412, 1935, 512, 22024, 32411, 9284, 11, 51014], "temperature": 0.0, "avg_logprob": -0.06418530941009522, "compression_ratio": 1.610236220472441, "no_speech_prob": 0.006287860684096813}, {"id": 23, "seek": 12900, "start": 142.0, "end": 148.0, "text": " just because it's like one of the common introductory things to programming and it's often a good exercise.", "tokens": [51014, 445, 570, 309, 311, 411, 472, 295, 264, 2689, 39048, 721, 281, 9410, 293, 309, 311, 2049, 257, 665, 5380, 13, 51314], "temperature": 0.0, "avg_logprob": -0.06418530941009522, "compression_ratio": 1.610236220472441, "no_speech_prob": 0.006287860684096813}, {"id": 24, "seek": 12900, "start": 148.0, "end": 152.0, "text": " But it's not necessary to use the library.", "tokens": [51314, 583, 309, 311, 406, 4818, 281, 764, 264, 6405, 13, 51514], "temperature": 0.0, "avg_logprob": -0.06418530941009522, "compression_ratio": 1.610236220472441, "no_speech_prob": 0.006287860684096813}, {"id": 25, "seek": 12900, "start": 152.0, "end": 155.0, "text": " Like a single function called does all the work for us.", "tokens": [51514, 1743, 257, 2167, 2445, 1219, 775, 439, 264, 589, 337, 505, 13, 51664], "temperature": 0.0, "avg_logprob": -0.06418530941009522, "compression_ratio": 1.610236220472441, "no_speech_prob": 0.006287860684096813}, {"id": 26, "seek": 15500, "start": 155.0, "end": 162.0, "text": " I mean, all we do is we call some sorting method or function, and that's it.", "tokens": [50364, 286, 914, 11, 439, 321, 360, 307, 321, 818, 512, 32411, 3170, 420, 2445, 11, 293, 300, 311, 309, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10343515582200957, "compression_ratio": 1.5654205607476634, "no_speech_prob": 0.004330993164330721}, {"id": 27, "seek": 15500, "start": 162.0, "end": 165.0, "text": " We don't worry about what's going on inside.", "tokens": [50714, 492, 500, 380, 3292, 466, 437, 311, 516, 322, 1854, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10343515582200957, "compression_ratio": 1.5654205607476634, "no_speech_prob": 0.004330993164330721}, {"id": 28, "seek": 15500, "start": 165.0, "end": 167.0, "text": " And other library uses work the same way.", "tokens": [50864, 400, 661, 6405, 4960, 589, 264, 912, 636, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10343515582200957, "compression_ratio": 1.5654205607476634, "no_speech_prob": 0.004330993164330721}, {"id": 29, "seek": 15500, "start": 167.0, "end": 174.0, "text": " We simply use their functions without implementing them ourselves.", "tokens": [50964, 492, 2935, 764, 641, 6828, 1553, 18114, 552, 4175, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10343515582200957, "compression_ratio": 1.5654205607476634, "no_speech_prob": 0.004330993164330721}, {"id": 30, "seek": 15500, "start": 174.0, "end": 181.0, "text": " A different example is femur trees or binary index trees, which is a topic from competitive programming.", "tokens": [51314, 316, 819, 1365, 307, 4010, 374, 5852, 420, 17434, 8186, 5852, 11, 597, 307, 257, 4829, 490, 10043, 9410, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10343515582200957, "compression_ratio": 1.5654205607476634, "no_speech_prob": 0.004330993164330721}, {"id": 31, "seek": 18100, "start": 181.0, "end": 183.0, "text": " So if you already know these, great, then it's a good example.", "tokens": [50364, 407, 498, 291, 1217, 458, 613, 11, 869, 11, 550, 309, 311, 257, 665, 1365, 13, 50464], "temperature": 0.0, "avg_logprob": -0.06371310137320256, "compression_ratio": 1.7910958904109588, "no_speech_prob": 0.016908403486013412}, {"id": 32, "seek": 18100, "start": 183.0, "end": 185.0, "text": " And if you don't, then that's fine.", "tokens": [50464, 400, 498, 291, 500, 380, 11, 550, 300, 311, 2489, 13, 50564], "temperature": 0.0, "avg_logprob": -0.06371310137320256, "compression_ratio": 1.7910958904109588, "no_speech_prob": 0.016908403486013412}, {"id": 33, "seek": 18100, "start": 185.0, "end": 190.0, "text": " And the whole point of this is that it will only take me like a few seconds up to a minute to explain it.", "tokens": [50564, 400, 264, 1379, 935, 295, 341, 307, 300, 309, 486, 787, 747, 385, 411, 257, 1326, 3949, 493, 281, 257, 3456, 281, 2903, 309, 13, 50814], "temperature": 0.0, "avg_logprob": -0.06371310137320256, "compression_ratio": 1.7910958904109588, "no_speech_prob": 0.016908403486013412}, {"id": 34, "seek": 18100, "start": 190.0, "end": 195.0, "text": " So the quick black box description of what it is, is it basically operates on an array.", "tokens": [50814, 407, 264, 1702, 2211, 2424, 3855, 295, 437, 309, 307, 11, 307, 309, 1936, 22577, 322, 364, 10225, 13, 51064], "temperature": 0.0, "avg_logprob": -0.06371310137320256, "compression_ratio": 1.7910958904109588, "no_speech_prob": 0.016908403486013412}, {"id": 35, "seek": 18100, "start": 195.0, "end": 197.0, "text": " It supports two different operations.", "tokens": [51064, 467, 9346, 732, 819, 7705, 13, 51164], "temperature": 0.0, "avg_logprob": -0.06371310137320256, "compression_ratio": 1.7910958904109588, "no_speech_prob": 0.016908403486013412}, {"id": 36, "seek": 18100, "start": 197.0, "end": 203.0, "text": " The first is that you can pick some index, some position in the array, and add some value x to it.", "tokens": [51164, 440, 700, 307, 300, 291, 393, 1888, 512, 8186, 11, 512, 2535, 294, 264, 10225, 11, 293, 909, 512, 2158, 2031, 281, 309, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06371310137320256, "compression_ratio": 1.7910958904109588, "no_speech_prob": 0.016908403486013412}, {"id": 37, "seek": 18100, "start": 203.0, "end": 210.0, "text": " And the second is that you can query the sum of the first x elements or the first i elements.", "tokens": [51464, 400, 264, 1150, 307, 300, 291, 393, 14581, 264, 2408, 295, 264, 700, 2031, 4959, 420, 264, 700, 741, 4959, 13, 51814], "temperature": 0.0, "avg_logprob": -0.06371310137320256, "compression_ratio": 1.7910958904109588, "no_speech_prob": 0.016908403486013412}, {"id": 38, "seek": 21000, "start": 211.0, "end": 214.0, "text": " Both of these operations take O of log n complexity.", "tokens": [50414, 6767, 295, 613, 7705, 747, 422, 295, 3565, 297, 14024, 13, 50564], "temperature": 0.0, "avg_logprob": -0.10987159184047154, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.005909449886530638}, {"id": 39, "seek": 21000, "start": 214.0, "end": 221.0, "text": " And it's O of n to initialize and O of n memory overall.", "tokens": [50564, 400, 309, 311, 422, 295, 297, 281, 5883, 1125, 293, 422, 295, 297, 4675, 4787, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10987159184047154, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.005909449886530638}, {"id": 40, "seek": 21000, "start": 221.0, "end": 223.0, "text": " And that's it.", "tokens": [50914, 400, 300, 311, 309, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10987159184047154, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.005909449886530638}, {"id": 41, "seek": 21000, "start": 223.0, "end": 228.0, "text": " There is some complicated underlying bitwise logic that makes it work.", "tokens": [51014, 821, 307, 512, 6179, 14217, 857, 3711, 9952, 300, 1669, 309, 589, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10987159184047154, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.005909449886530638}, {"id": 42, "seek": 21000, "start": 228.0, "end": 232.0, "text": " But to use it, none of that is actually necessary to know.", "tokens": [51264, 583, 281, 764, 309, 11, 6022, 295, 300, 307, 767, 4818, 281, 458, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10987159184047154, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.005909449886530638}, {"id": 43, "seek": 21000, "start": 232.0, "end": 238.0, "text": " And in fact, I honestly don't even understand it myself because I've never bothered to because it's never been necessary.", "tokens": [51464, 400, 294, 1186, 11, 286, 6095, 500, 380, 754, 1223, 309, 2059, 570, 286, 600, 1128, 22996, 281, 570, 309, 311, 1128, 668, 4818, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10987159184047154, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.005909449886530638}, {"id": 44, "seek": 23800, "start": 238.0, "end": 242.0, "text": " And nonetheless, I've solved many, many problems using this technique.", "tokens": [50364, 400, 26756, 11, 286, 600, 13041, 867, 11, 867, 2740, 1228, 341, 6532, 13, 50564], "temperature": 0.0, "avg_logprob": -0.060793982142895726, "compression_ratio": 1.6102941176470589, "no_speech_prob": 0.004608838353306055}, {"id": 45, "seek": 23800, "start": 242.0, "end": 249.0, "text": " So my template, which is the code you can see below or in front of you, is sort of structured like an API,", "tokens": [50564, 407, 452, 12379, 11, 597, 307, 264, 3089, 291, 393, 536, 2507, 420, 294, 1868, 295, 291, 11, 307, 1333, 295, 18519, 411, 364, 9362, 11, 50914], "temperature": 0.0, "avg_logprob": -0.060793982142895726, "compression_ratio": 1.6102941176470589, "no_speech_prob": 0.004608838353306055}, {"id": 46, "seek": 23800, "start": 249.0, "end": 255.0, "text": " where these add and query functions are just simply using the struct and telling it to do that.", "tokens": [50914, 689, 613, 909, 293, 14581, 6828, 366, 445, 2935, 1228, 264, 6594, 293, 3585, 309, 281, 360, 300, 13, 51214], "temperature": 0.0, "avg_logprob": -0.060793982142895726, "compression_ratio": 1.6102941176470589, "no_speech_prob": 0.004608838353306055}, {"id": 47, "seek": 23800, "start": 258.0, "end": 261.0, "text": " So now let's pull out the trusty paint for a demonstration.", "tokens": [51364, 407, 586, 718, 311, 2235, 484, 264, 3361, 88, 4225, 337, 257, 16520, 13, 51514], "temperature": 0.0, "avg_logprob": -0.060793982142895726, "compression_ratio": 1.6102941176470589, "no_speech_prob": 0.004608838353306055}, {"id": 48, "seek": 23800, "start": 261.0, "end": 264.0, "text": " And if you're new to this channel, well, I basically use it for everything.", "tokens": [51514, 400, 498, 291, 434, 777, 281, 341, 2269, 11, 731, 11, 286, 1936, 764, 309, 337, 1203, 13, 51664], "temperature": 0.0, "avg_logprob": -0.060793982142895726, "compression_ratio": 1.6102941176470589, "no_speech_prob": 0.004608838353306055}, {"id": 49, "seek": 23800, "start": 264.0, "end": 267.0, "text": " So that will be how it goes.", "tokens": [51664, 407, 300, 486, 312, 577, 309, 1709, 13, 51814], "temperature": 0.0, "avg_logprob": -0.060793982142895726, "compression_ratio": 1.6102941176470589, "no_speech_prob": 0.004608838353306055}, {"id": 50, "seek": 26700, "start": 267.0, "end": 270.0, "text": " In this diagram, vertical distance represents time.", "tokens": [50364, 682, 341, 10686, 11, 9429, 4560, 8855, 565, 13, 50514], "temperature": 0.0, "avg_logprob": -0.06727978476771602, "compression_ratio": 1.709433962264151, "no_speech_prob": 0.004679631441831589}, {"id": 51, "seek": 26700, "start": 270.0, "end": 277.0, "text": " And basically the standard strategy for learning is to pick some list of topics and then learn them one by one.", "tokens": [50514, 400, 1936, 264, 3832, 5206, 337, 2539, 307, 281, 1888, 512, 1329, 295, 8378, 293, 550, 1466, 552, 472, 538, 472, 13, 50864], "temperature": 0.0, "avg_logprob": -0.06727978476771602, "compression_ratio": 1.709433962264151, "no_speech_prob": 0.004679631441831589}, {"id": 52, "seek": 26700, "start": 277.0, "end": 280.0, "text": " However, this is rather slow.", "tokens": [50864, 2908, 11, 341, 307, 2831, 2964, 13, 51014], "temperature": 0.0, "avg_logprob": -0.06727978476771602, "compression_ratio": 1.709433962264151, "no_speech_prob": 0.004679631441831589}, {"id": 53, "seek": 26700, "start": 280.0, "end": 287.0, "text": " And during the period of learning, for the topics that you haven't even looked at yet, you won't know anything or much about any of them.", "tokens": [51014, 400, 1830, 264, 2896, 295, 2539, 11, 337, 264, 8378, 300, 291, 2378, 380, 754, 2956, 412, 1939, 11, 291, 1582, 380, 458, 1340, 420, 709, 466, 604, 295, 552, 13, 51364], "temperature": 0.0, "avg_logprob": -0.06727978476771602, "compression_ratio": 1.709433962264151, "no_speech_prob": 0.004679631441831589}, {"id": 54, "seek": 26700, "start": 287.0, "end": 295.0, "text": " So say some contest comes and you'd want to do it because the contest and contests are always good for you to learn from,", "tokens": [51364, 407, 584, 512, 10287, 1487, 293, 291, 1116, 528, 281, 360, 309, 570, 264, 10287, 293, 660, 4409, 366, 1009, 665, 337, 291, 281, 1466, 490, 11, 51764], "temperature": 0.0, "avg_logprob": -0.06727978476771602, "compression_ratio": 1.709433962264151, "no_speech_prob": 0.004679631441831589}, {"id": 55, "seek": 29500, "start": 295.0, "end": 298.0, "text": " which I made a video on.", "tokens": [50364, 597, 286, 1027, 257, 960, 322, 13, 50514], "temperature": 0.0, "avg_logprob": -0.07196405659551205, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0071191247552633286}, {"id": 56, "seek": 29500, "start": 298.0, "end": 302.0, "text": " Essentially, you're not going to be able to do anything.", "tokens": [50514, 23596, 11, 291, 434, 406, 516, 281, 312, 1075, 281, 360, 1340, 13, 50714], "temperature": 0.0, "avg_logprob": -0.07196405659551205, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0071191247552633286}, {"id": 57, "seek": 29500, "start": 302.0, "end": 309.0, "text": " Maybe you know enough about topic A, which you've learned some about to be able to do it.", "tokens": [50714, 2704, 291, 458, 1547, 466, 4829, 316, 11, 597, 291, 600, 3264, 512, 466, 281, 312, 1075, 281, 360, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07196405659551205, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0071191247552633286}, {"id": 58, "seek": 29500, "start": 309.0, "end": 314.0, "text": " But for topics, for concepts B and C, you're just totally screwed.", "tokens": [51064, 583, 337, 8378, 11, 337, 10392, 363, 293, 383, 11, 291, 434, 445, 3879, 20331, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07196405659551205, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0071191247552633286}, {"id": 59, "seek": 29500, "start": 314.0, "end": 316.0, "text": " There's nothing you can do. You don't really know about them.", "tokens": [51314, 821, 311, 1825, 291, 393, 360, 13, 509, 500, 380, 534, 458, 466, 552, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07196405659551205, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0071191247552633286}, {"id": 60, "seek": 29500, "start": 316.0, "end": 320.0, "text": " So if those show up, there's nothing you'll be able to do.", "tokens": [51414, 407, 498, 729, 855, 493, 11, 456, 311, 1825, 291, 603, 312, 1075, 281, 360, 13, 51614], "temperature": 0.0, "avg_logprob": -0.07196405659551205, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0071191247552633286}, {"id": 61, "seek": 29500, "start": 320.0, "end": 323.0, "text": " So it's sort of bad in the intermediate step.", "tokens": [51614, 407, 309, 311, 1333, 295, 1578, 294, 264, 19376, 1823, 13, 51764], "temperature": 0.0, "avg_logprob": -0.07196405659551205, "compression_ratio": 1.6945606694560669, "no_speech_prob": 0.0071191247552633286}, {"id": 62, "seek": 32300, "start": 323.0, "end": 331.0, "text": " But now let's introduce black boxing, which is much closer to the unknown side of things because it doesn't take that much time to learn it.", "tokens": [50364, 583, 586, 718, 311, 5366, 2211, 24424, 11, 597, 307, 709, 4966, 281, 264, 9841, 1252, 295, 721, 570, 309, 1177, 380, 747, 300, 709, 565, 281, 1466, 309, 13, 50764], "temperature": 0.0, "avg_logprob": -0.06286283639761117, "compression_ratio": 1.8084415584415585, "no_speech_prob": 0.027570903301239014}, {"id": 63, "seek": 32300, "start": 331.0, "end": 334.0, "text": " It's an easy gap to cross versus learning an entire thing.", "tokens": [50764, 467, 311, 364, 1858, 7417, 281, 3278, 5717, 2539, 364, 2302, 551, 13, 50914], "temperature": 0.0, "avg_logprob": -0.06286283639761117, "compression_ratio": 1.8084415584415585, "no_speech_prob": 0.027570903301239014}, {"id": 64, "seek": 32300, "start": 334.0, "end": 338.0, "text": " Now say I black box all three of the concepts before starting to fully learn them.", "tokens": [50914, 823, 584, 286, 2211, 2424, 439, 1045, 295, 264, 10392, 949, 2891, 281, 4498, 1466, 552, 13, 51114], "temperature": 0.0, "avg_logprob": -0.06286283639761117, "compression_ratio": 1.8084415584415585, "no_speech_prob": 0.027570903301239014}, {"id": 65, "seek": 32300, "start": 338.0, "end": 342.0, "text": " Not necessarily as a substitute for learning them just as a start.", "tokens": [51114, 1726, 4725, 382, 257, 15802, 337, 2539, 552, 445, 382, 257, 722, 13, 51314], "temperature": 0.0, "avg_logprob": -0.06286283639761117, "compression_ratio": 1.8084415584415585, "no_speech_prob": 0.027570903301239014}, {"id": 66, "seek": 32300, "start": 342.0, "end": 345.0, "text": " And I think this should be the way that black boxing is used.", "tokens": [51314, 400, 286, 519, 341, 820, 312, 264, 636, 300, 2211, 24424, 307, 1143, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06286283639761117, "compression_ratio": 1.8084415584415585, "no_speech_prob": 0.027570903301239014}, {"id": 67, "seek": 32300, "start": 345.0, "end": 352.0, "text": " It's still a good idea to eventually learn things because it's sort of going to be necessary if you ever want to make modifications to something,", "tokens": [51464, 467, 311, 920, 257, 665, 1558, 281, 4728, 1466, 721, 570, 309, 311, 1333, 295, 516, 281, 312, 4818, 498, 291, 1562, 528, 281, 652, 26881, 281, 746, 11, 51814], "temperature": 0.0, "avg_logprob": -0.06286283639761117, "compression_ratio": 1.8084415584415585, "no_speech_prob": 0.027570903301239014}, {"id": 68, "seek": 35200, "start": 352.0, "end": 355.0, "text": " which does show up somewhat frequently.", "tokens": [50364, 597, 775, 855, 493, 8344, 10374, 13, 50514], "temperature": 0.0, "avg_logprob": -0.0741006168750448, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.004608220420777798}, {"id": 69, "seek": 35200, "start": 355.0, "end": 365.0, "text": " But it's a good first step and it will let you be informed about all of the algorithms and data structures and everything that you're interested in using.", "tokens": [50514, 583, 309, 311, 257, 665, 700, 1823, 293, 309, 486, 718, 291, 312, 11740, 466, 439, 295, 264, 14642, 293, 1412, 9227, 293, 1203, 300, 291, 434, 3102, 294, 1228, 13, 51014], "temperature": 0.0, "avg_logprob": -0.0741006168750448, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.004608220420777798}, {"id": 70, "seek": 35200, "start": 365.0, "end": 374.0, "text": " So this black boxing may also involve solving a few problems or just playing with it a bit, getting a bit of practice, just to get comfortable.", "tokens": [51014, 407, 341, 2211, 24424, 815, 611, 9494, 12606, 257, 1326, 2740, 420, 445, 2433, 365, 309, 257, 857, 11, 1242, 257, 857, 295, 3124, 11, 445, 281, 483, 4619, 13, 51464], "temperature": 0.0, "avg_logprob": -0.0741006168750448, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.004608220420777798}, {"id": 71, "seek": 35200, "start": 374.0, "end": 377.0, "text": " And the plan is to eventually learn them, of course.", "tokens": [51464, 400, 264, 1393, 307, 281, 4728, 1466, 552, 11, 295, 1164, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0741006168750448, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.004608220420777798}, {"id": 72, "seek": 35200, "start": 377.0, "end": 381.0, "text": " But just starting with these techniques as black boxes is a good enough introduction to them.", "tokens": [51614, 583, 445, 2891, 365, 613, 7512, 382, 2211, 9002, 307, 257, 665, 1547, 9339, 281, 552, 13, 51814], "temperature": 0.0, "avg_logprob": -0.0741006168750448, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.004608220420777798}, {"id": 73, "seek": 38100, "start": 382.0, "end": 385.0, "text": " Now in this scenario, say the contest happens.", "tokens": [50414, 823, 294, 341, 9005, 11, 584, 264, 10287, 2314, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08267430905942563, "compression_ratio": 1.7396694214876034, "no_speech_prob": 0.014059457927942276}, {"id": 74, "seek": 38100, "start": 385.0, "end": 389.0, "text": " And I've already black boxed these three and I'm in the process of learning concept A.", "tokens": [50564, 400, 286, 600, 1217, 2211, 2424, 292, 613, 1045, 293, 286, 478, 294, 264, 1399, 295, 2539, 3410, 316, 13, 50764], "temperature": 0.0, "avg_logprob": -0.08267430905942563, "compression_ratio": 1.7396694214876034, "no_speech_prob": 0.014059457927942276}, {"id": 75, "seek": 38100, "start": 389.0, "end": 396.0, "text": " But I'm already at the point where I'm able to use all three concepts effectively.", "tokens": [50764, 583, 286, 478, 1217, 412, 264, 935, 689, 286, 478, 1075, 281, 764, 439, 1045, 10392, 8659, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08267430905942563, "compression_ratio": 1.7396694214876034, "no_speech_prob": 0.014059457927942276}, {"id": 76, "seek": 38100, "start": 396.0, "end": 401.0, "text": " So I know enough about all three of the topics to solve the problems that use them.", "tokens": [51114, 407, 286, 458, 1547, 466, 439, 1045, 295, 264, 8378, 281, 5039, 264, 2740, 300, 764, 552, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08267430905942563, "compression_ratio": 1.7396694214876034, "no_speech_prob": 0.014059457927942276}, {"id": 77, "seek": 38100, "start": 401.0, "end": 402.0, "text": " So I do.", "tokens": [51364, 407, 286, 360, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08267430905942563, "compression_ratio": 1.7396694214876034, "no_speech_prob": 0.014059457927942276}, {"id": 78, "seek": 38100, "start": 402.0, "end": 408.0, "text": " And I do much better on this contest potentially if it has these topics than if I hadn't used the black boxing.", "tokens": [51414, 400, 286, 360, 709, 1101, 322, 341, 10287, 7263, 498, 309, 575, 613, 8378, 813, 498, 286, 8782, 380, 1143, 264, 2211, 24424, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08267430905942563, "compression_ratio": 1.7396694214876034, "no_speech_prob": 0.014059457927942276}, {"id": 79, "seek": 40800, "start": 409.0, "end": 414.0, "text": " And I got some practice out of it because now I know these problems are going to use these concepts.", "tokens": [50414, 400, 286, 658, 512, 3124, 484, 295, 309, 570, 586, 286, 458, 613, 2740, 366, 516, 281, 764, 613, 10392, 13, 50664], "temperature": 0.0, "avg_logprob": -0.06709945201873779, "compression_ratio": 1.725085910652921, "no_speech_prob": 0.019711188971996307}, {"id": 80, "seek": 40800, "start": 414.0, "end": 419.0, "text": " So black boxing is basically like an intermediate step, except it has no drawbacks.", "tokens": [50664, 407, 2211, 24424, 307, 1936, 411, 364, 19376, 1823, 11, 3993, 309, 575, 572, 2642, 17758, 13, 50914], "temperature": 0.0, "avg_logprob": -0.06709945201873779, "compression_ratio": 1.725085910652921, "no_speech_prob": 0.019711188971996307}, {"id": 81, "seek": 40800, "start": 419.0, "end": 424.0, "text": " You're going to learn this stuff anyway, so it can really only benefit you and the benefits are still really good.", "tokens": [50914, 509, 434, 516, 281, 1466, 341, 1507, 4033, 11, 370, 309, 393, 534, 787, 5121, 291, 293, 264, 5311, 366, 920, 534, 665, 13, 51164], "temperature": 0.0, "avg_logprob": -0.06709945201873779, "compression_ratio": 1.725085910652921, "no_speech_prob": 0.019711188971996307}, {"id": 82, "seek": 40800, "start": 426.0, "end": 428.0, "text": " So let's talk advantages.", "tokens": [51264, 407, 718, 311, 751, 14906, 13, 51364], "temperature": 0.0, "avg_logprob": -0.06709945201873779, "compression_ratio": 1.725085910652921, "no_speech_prob": 0.019711188971996307}, {"id": 83, "seek": 40800, "start": 428.0, "end": 429.0, "text": " Why is this useful?", "tokens": [51364, 1545, 307, 341, 4420, 30, 51414], "temperature": 0.0, "avg_logprob": -0.06709945201873779, "compression_ratio": 1.725085910652921, "no_speech_prob": 0.019711188971996307}, {"id": 84, "seek": 40800, "start": 429.0, "end": 436.0, "text": " It definitely works very quickly in that the information required to use something is much less than the information required to fully understand something.", "tokens": [51414, 467, 2138, 1985, 588, 2661, 294, 300, 264, 1589, 4739, 281, 764, 746, 307, 709, 1570, 813, 264, 1589, 4739, 281, 4498, 1223, 746, 13, 51764], "temperature": 0.0, "avg_logprob": -0.06709945201873779, "compression_ratio": 1.725085910652921, "no_speech_prob": 0.019711188971996307}, {"id": 85, "seek": 43600, "start": 436.0, "end": 446.0, "text": " As you could have seen from my previous examples, it took like maybe around a minute or two just to explain the black box rendition of some concept.", "tokens": [50364, 1018, 291, 727, 362, 1612, 490, 452, 3894, 5110, 11, 309, 1890, 411, 1310, 926, 257, 3456, 420, 732, 445, 281, 2903, 264, 2211, 2424, 6125, 849, 295, 512, 3410, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08687542760094931, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.003272278467193246}, {"id": 86, "seek": 43600, "start": 448.0, "end": 454.0, "text": " Especially for rather hard topics, ones that can take like hours or even multiple days to learn and grasp.", "tokens": [50964, 8545, 337, 2831, 1152, 8378, 11, 2306, 300, 393, 747, 411, 2496, 420, 754, 3866, 1708, 281, 1466, 293, 21743, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08687542760094931, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.003272278467193246}, {"id": 87, "seek": 43600, "start": 454.0, "end": 456.0, "text": " This saves a lot of the work at least initially.", "tokens": [51264, 639, 19155, 257, 688, 295, 264, 589, 412, 1935, 9105, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08687542760094931, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.003272278467193246}, {"id": 88, "seek": 43600, "start": 457.0, "end": 461.0, "text": " And allows you to have most of the necessary information very quickly.", "tokens": [51414, 400, 4045, 291, 281, 362, 881, 295, 264, 4818, 1589, 588, 2661, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08687542760094931, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.003272278467193246}, {"id": 89, "seek": 46100, "start": 461.0, "end": 466.0, "text": " And then when you decide to learn it later, you'll be able to solidify that knowledge later on as you formally learn things.", "tokens": [50364, 400, 550, 562, 291, 4536, 281, 1466, 309, 1780, 11, 291, 603, 312, 1075, 281, 5100, 2505, 300, 3601, 1780, 322, 382, 291, 25983, 1466, 721, 13, 50614], "temperature": 0.0, "avg_logprob": -0.06837845599557471, "compression_ratio": 1.7312925170068028, "no_speech_prob": 0.16438697278499603}, {"id": 90, "seek": 46100, "start": 467.0, "end": 475.0, "text": " So if you encounter a problem related to something you're not so well versed in, perhaps you have it black boxed in your head, but you don't exactly understand it yet.", "tokens": [50664, 407, 498, 291, 8593, 257, 1154, 4077, 281, 746, 291, 434, 406, 370, 731, 1774, 292, 294, 11, 4317, 291, 362, 309, 2211, 2424, 292, 294, 428, 1378, 11, 457, 291, 500, 380, 2293, 1223, 309, 1939, 13, 51064], "temperature": 0.0, "avg_logprob": -0.06837845599557471, "compression_ratio": 1.7312925170068028, "no_speech_prob": 0.16438697278499603}, {"id": 91, "seek": 46100, "start": 475.0, "end": 477.0, "text": " At the very least, you do know what to look for.", "tokens": [51064, 1711, 264, 588, 1935, 11, 291, 360, 458, 437, 281, 574, 337, 13, 51164], "temperature": 0.0, "avg_logprob": -0.06837845599557471, "compression_ratio": 1.7312925170068028, "no_speech_prob": 0.16438697278499603}, {"id": 92, "seek": 46100, "start": 477.0, "end": 482.0, "text": " You know that this was the concept involved, you're just not that good at that concept yet.", "tokens": [51164, 509, 458, 300, 341, 390, 264, 3410, 3288, 11, 291, 434, 445, 406, 300, 665, 412, 300, 3410, 1939, 13, 51414], "temperature": 0.0, "avg_logprob": -0.06837845599557471, "compression_ratio": 1.7312925170068028, "no_speech_prob": 0.16438697278499603}, {"id": 93, "seek": 46100, "start": 482.0, "end": 487.0, "text": " So it lets you sort of figure out where you should go from a certain point.", "tokens": [51414, 407, 309, 6653, 291, 1333, 295, 2573, 484, 689, 291, 820, 352, 490, 257, 1629, 935, 13, 51664], "temperature": 0.0, "avg_logprob": -0.06837845599557471, "compression_ratio": 1.7312925170068028, "no_speech_prob": 0.16438697278499603}, {"id": 94, "seek": 48700, "start": 488.0, "end": 491.0, "text": " It also allows you to identify related problems as you come across them.", "tokens": [50414, 467, 611, 4045, 291, 281, 5876, 4077, 2740, 382, 291, 808, 2108, 552, 13, 50564], "temperature": 0.0, "avg_logprob": -0.06539732217788696, "compression_ratio": 1.7547169811320755, "no_speech_prob": 0.015900684520602226}, {"id": 95, "seek": 48700, "start": 491.0, "end": 497.0, "text": " So yeah, when you do eventually learn something, you already know places where you can practice and apply it.", "tokens": [50564, 407, 1338, 11, 562, 291, 360, 4728, 1466, 746, 11, 291, 1217, 458, 3190, 689, 291, 393, 3124, 293, 3079, 309, 13, 50864], "temperature": 0.0, "avg_logprob": -0.06539732217788696, "compression_ratio": 1.7547169811320755, "no_speech_prob": 0.015900684520602226}, {"id": 96, "seek": 48700, "start": 497.0, "end": 505.0, "text": " You've already found some practice problems for yourself by just having the black box and recognizing the certain problem requires a certain concept.", "tokens": [50864, 509, 600, 1217, 1352, 512, 3124, 2740, 337, 1803, 538, 445, 1419, 264, 2211, 2424, 293, 18538, 264, 1629, 1154, 7029, 257, 1629, 3410, 13, 51264], "temperature": 0.0, "avg_logprob": -0.06539732217788696, "compression_ratio": 1.7547169811320755, "no_speech_prob": 0.015900684520602226}, {"id": 97, "seek": 48700, "start": 507.0, "end": 513.0, "text": " It will ultimately keep your learning focused because you already know what everything is doing, you know what the purpose of it is.", "tokens": [51364, 467, 486, 6284, 1066, 428, 2539, 5178, 570, 291, 1217, 458, 437, 1203, 307, 884, 11, 291, 458, 437, 264, 4334, 295, 309, 307, 13, 51664], "temperature": 0.0, "avg_logprob": -0.06539732217788696, "compression_ratio": 1.7547169811320755, "no_speech_prob": 0.015900684520602226}, {"id": 98, "seek": 51300, "start": 514.0, "end": 521.0, "text": " All you're doing once you transition from having something black boxed to learning it normally, you're just figuring out how it works.", "tokens": [50414, 1057, 291, 434, 884, 1564, 291, 6034, 490, 1419, 746, 2211, 2424, 292, 281, 2539, 309, 5646, 11, 291, 434, 445, 15213, 484, 577, 309, 1985, 13, 50764], "temperature": 0.0, "avg_logprob": -0.07271866879220736, "compression_ratio": 1.8601398601398602, "no_speech_prob": 0.09662555158138275}, {"id": 99, "seek": 51300, "start": 521.0, "end": 527.0, "text": " You already know what it does, you already know everything that's required to use it, you're just understanding the internal mechanisms of it.", "tokens": [50764, 509, 1217, 458, 437, 309, 775, 11, 291, 1217, 458, 1203, 300, 311, 4739, 281, 764, 309, 11, 291, 434, 445, 3701, 264, 6920, 15902, 295, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07271866879220736, "compression_ratio": 1.8601398601398602, "no_speech_prob": 0.09662555158138275}, {"id": 100, "seek": 51300, "start": 527.0, "end": 537.0, "text": " And also on that note, when you understand the underlying purpose of something and you're really like acquainted with it, it makes it a lot less scary to learn it for real because you know the end result already.", "tokens": [51064, 400, 611, 322, 300, 3637, 11, 562, 291, 1223, 264, 14217, 4334, 295, 746, 293, 291, 434, 534, 411, 50224, 365, 309, 11, 309, 1669, 309, 257, 688, 1570, 6958, 281, 1466, 309, 337, 957, 570, 291, 458, 264, 917, 1874, 1217, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07271866879220736, "compression_ratio": 1.8601398601398602, "no_speech_prob": 0.09662555158138275}, {"id": 101, "seek": 51300, "start": 537.0, "end": 539.0, "text": " It's just figuring out how it gets there.", "tokens": [51564, 467, 311, 445, 15213, 484, 577, 309, 2170, 456, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07271866879220736, "compression_ratio": 1.8601398601398602, "no_speech_prob": 0.09662555158138275}, {"id": 102, "seek": 53900, "start": 540.0, "end": 546.0, "text": " Now this wouldn't be one of my videos if I didn't take every opportunity to flex.", "tokens": [50414, 823, 341, 2759, 380, 312, 472, 295, 452, 2145, 498, 286, 994, 380, 747, 633, 2650, 281, 5896, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10079648028845074, "compression_ratio": 1.5, "no_speech_prob": 0.008706852793693542}, {"id": 103, "seek": 53900, "start": 546.0, "end": 551.0, "text": " So here's some examples from my own experience where this black boxing has actually worked for me.", "tokens": [50714, 407, 510, 311, 512, 5110, 490, 452, 1065, 1752, 689, 341, 2211, 24424, 575, 767, 2732, 337, 385, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10079648028845074, "compression_ratio": 1.5, "no_speech_prob": 0.008706852793693542}, {"id": 104, "seek": 53900, "start": 551.0, "end": 563.0, "text": " As I mentioned in the beginning, there was one where I used a complicated concept that I didn't really know much about to get 10th place in a contest and again retain my 7th star ready.", "tokens": [50964, 1018, 286, 2835, 294, 264, 2863, 11, 456, 390, 472, 689, 286, 1143, 257, 6179, 3410, 300, 286, 994, 380, 534, 458, 709, 466, 281, 483, 1266, 392, 1081, 294, 257, 10287, 293, 797, 18340, 452, 1614, 392, 3543, 1919, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10079648028845074, "compression_ratio": 1.5, "no_speech_prob": 0.008706852793693542}, {"id": 105, "seek": 56300, "start": 563.0, "end": 569.0, "text": " And this was an example of using a suffix array, which is a complicated, yeah, like I said, a complicated concept.", "tokens": [50364, 400, 341, 390, 364, 1365, 295, 1228, 257, 3889, 970, 10225, 11, 597, 307, 257, 6179, 11, 1338, 11, 411, 286, 848, 11, 257, 6179, 3410, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10860526895968714, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.34827080368995667}, {"id": 106, "seek": 56300, "start": 569.0, "end": 577.0, "text": " It's not really related to this video so you don't have to know it to understand this, but the point is that I essentially had this black boxed.", "tokens": [50664, 467, 311, 406, 534, 4077, 281, 341, 960, 370, 291, 500, 380, 362, 281, 458, 309, 281, 1223, 341, 11, 457, 264, 935, 307, 300, 286, 4476, 632, 341, 2211, 2424, 292, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10860526895968714, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.34827080368995667}, {"id": 107, "seek": 56300, "start": 577.0, "end": 583.0, "text": " I understood what this algorithm did and what it produced, but had no idea how it worked.", "tokens": [51064, 286, 7320, 437, 341, 9284, 630, 293, 437, 309, 7126, 11, 457, 632, 572, 1558, 577, 309, 2732, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10860526895968714, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.34827080368995667}, {"id": 108, "seek": 56300, "start": 583.0, "end": 588.0, "text": " And just because of that, I was able to copy paste it and make it work.", "tokens": [51364, 400, 445, 570, 295, 300, 11, 286, 390, 1075, 281, 5055, 9163, 309, 293, 652, 309, 589, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10860526895968714, "compression_ratio": 1.6706349206349207, "no_speech_prob": 0.34827080368995667}, {"id": 109, "seek": 58800, "start": 589.0, "end": 593.0, "text": " And yeah, as clearly it worked out.", "tokens": [50414, 400, 1338, 11, 382, 4448, 309, 2732, 484, 13, 50614], "temperature": 0.0, "avg_logprob": -0.16964403340514278, "compression_ratio": 1.58, "no_speech_prob": 0.01825384423136711}, {"id": 110, "seek": 58800, "start": 593.0, "end": 603.0, "text": " Two other examples, one of them was where I actually learned something in contest using a very cool library called the Atcoder library.", "tokens": [50614, 4453, 661, 5110, 11, 472, 295, 552, 390, 689, 286, 767, 3264, 746, 294, 10287, 1228, 257, 588, 1627, 6405, 1219, 264, 1711, 66, 19866, 6405, 13, 51114], "temperature": 0.0, "avg_logprob": -0.16964403340514278, "compression_ratio": 1.58, "no_speech_prob": 0.01825384423136711}, {"id": 111, "seek": 58800, "start": 603.0, "end": 616.0, "text": " And this library is nice because it describes things in a black box way where it tells you the functions and what it does and their complexities", "tokens": [51114, 400, 341, 6405, 307, 1481, 570, 309, 15626, 721, 294, 257, 2211, 2424, 636, 689, 309, 5112, 291, 264, 6828, 293, 437, 309, 775, 293, 641, 48705, 51764], "temperature": 0.0, "avg_logprob": -0.16964403340514278, "compression_ratio": 1.58, "no_speech_prob": 0.01825384423136711}, {"id": 112, "seek": 61600, "start": 616.0, "end": 620.0, "text": " and everything you'd ever need to know to use it, but it doesn't need to give details on the code.", "tokens": [50364, 293, 1203, 291, 1116, 1562, 643, 281, 458, 281, 764, 309, 11, 457, 309, 1177, 380, 643, 281, 976, 4365, 322, 264, 3089, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08190402319264967, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.05743679776787758}, {"id": 113, "seek": 61600, "start": 620.0, "end": 627.0, "text": " So it's very useful for someone who's taking the black boxing approach because it gives you exactly what you need for everything.", "tokens": [50564, 407, 309, 311, 588, 4420, 337, 1580, 567, 311, 1940, 264, 2211, 24424, 3109, 570, 309, 2709, 291, 2293, 437, 291, 643, 337, 1203, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08190402319264967, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.05743679776787758}, {"id": 114, "seek": 61600, "start": 627.0, "end": 632.0, "text": " So I actually learned this thing in contest and then was able to solve the problem using it.", "tokens": [50914, 407, 286, 767, 3264, 341, 551, 294, 10287, 293, 550, 390, 1075, 281, 5039, 264, 1154, 1228, 309, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08190402319264967, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.05743679776787758}, {"id": 115, "seek": 61600, "start": 632.0, "end": 636.0, "text": " And yeah, that worked out too.", "tokens": [51164, 400, 1338, 11, 300, 2732, 484, 886, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08190402319264967, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.05743679776787758}, {"id": 116, "seek": 63600, "start": 637.0, "end": 647.0, "text": " And then a separate example is an even harder algorithm called the convex hull trick, which is essentially something I've been using for a long time.", "tokens": [50414, 400, 550, 257, 4994, 1365, 307, 364, 754, 6081, 9284, 1219, 264, 42432, 32335, 4282, 11, 597, 307, 4476, 746, 286, 600, 668, 1228, 337, 257, 938, 565, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13122848842454993, "compression_ratio": 1.5846774193548387, "no_speech_prob": 0.01150423102080822}, {"id": 117, "seek": 63600, "start": 647.0, "end": 652.0, "text": " I made a stream on it without even understanding how it works just because black boxing was so effective.", "tokens": [50914, 286, 1027, 257, 4309, 322, 309, 1553, 754, 3701, 577, 309, 1985, 445, 570, 2211, 24424, 390, 370, 4942, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13122848842454993, "compression_ratio": 1.5846774193548387, "no_speech_prob": 0.01150423102080822}, {"id": 118, "seek": 63600, "start": 652.0, "end": 661.0, "text": " And I also saved my rating in another hard code chef contest by copy pasting convex hull trick in that.", "tokens": [51164, 400, 286, 611, 6624, 452, 10990, 294, 1071, 1152, 3089, 10530, 10287, 538, 5055, 1791, 278, 42432, 32335, 4282, 294, 300, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13122848842454993, "compression_ratio": 1.5846774193548387, "no_speech_prob": 0.01150423102080822}, {"id": 119, "seek": 63600, "start": 661.0, "end": 665.0, "text": " And that got me, I believe, 13th.", "tokens": [51614, 400, 300, 658, 385, 11, 286, 1697, 11, 3705, 392, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13122848842454993, "compression_ratio": 1.5846774193548387, "no_speech_prob": 0.01150423102080822}, {"id": 120, "seek": 66500, "start": 665.0, "end": 674.0, "text": " So showing this code, if you'll notice, the only things that really matter are the two functions, insert line, which will insert a line.", "tokens": [50364, 407, 4099, 341, 3089, 11, 498, 291, 603, 3449, 11, 264, 787, 721, 300, 534, 1871, 366, 264, 732, 6828, 11, 8969, 1622, 11, 597, 486, 8969, 257, 1622, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07547749824894284, "compression_ratio": 1.7470355731225296, "no_speech_prob": 0.014497199095785618}, {"id": 121, "seek": 66500, "start": 674.0, "end": 680.0, "text": " Even if you don't understand what that means, it's just simply there are two functions that control everything and everything else is internal.", "tokens": [50814, 2754, 498, 291, 500, 380, 1223, 437, 300, 1355, 11, 309, 311, 445, 2935, 456, 366, 732, 6828, 300, 1969, 1203, 293, 1203, 1646, 307, 6920, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07547749824894284, "compression_ratio": 1.7470355731225296, "no_speech_prob": 0.014497199095785618}, {"id": 122, "seek": 66500, "start": 680.0, "end": 688.0, "text": " The insert line and eval functions are the API and everything else is magic for all I know.", "tokens": [51114, 440, 8969, 1622, 293, 1073, 304, 6828, 366, 264, 9362, 293, 1203, 1646, 307, 5585, 337, 439, 286, 458, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07547749824894284, "compression_ratio": 1.7470355731225296, "no_speech_prob": 0.014497199095785618}, {"id": 123, "seek": 66500, "start": 688.0, "end": 693.0, "text": " So a bit of advice on the practicality of using the black box method.", "tokens": [51514, 407, 257, 857, 295, 5192, 322, 264, 8496, 507, 295, 1228, 264, 2211, 2424, 3170, 13, 51764], "temperature": 0.0, "avg_logprob": -0.07547749824894284, "compression_ratio": 1.7470355731225296, "no_speech_prob": 0.014497199095785618}, {"id": 124, "seek": 69300, "start": 693.0, "end": 698.0, "text": " I mean, how do you even find working code without having to understand and produce yourself, right?", "tokens": [50364, 286, 914, 11, 577, 360, 291, 754, 915, 1364, 3089, 1553, 1419, 281, 1223, 293, 5258, 1803, 11, 558, 30, 50614], "temperature": 0.0, "avg_logprob": -0.10143976211547852, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.03458331152796745}, {"id": 125, "seek": 69300, "start": 698.0, "end": 704.0, "text": " Well, as it turns out, there are plenty of well tested and useful libraries that contain code for a lot of different things.", "tokens": [50614, 1042, 11, 382, 309, 4523, 484, 11, 456, 366, 7140, 295, 731, 8246, 293, 4420, 15148, 300, 5304, 3089, 337, 257, 688, 295, 819, 721, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10143976211547852, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.03458331152796745}, {"id": 126, "seek": 69300, "start": 704.0, "end": 710.0, "text": " I'll include all of these in the description, but a brief overview of what some of them do.", "tokens": [50914, 286, 603, 4090, 439, 295, 613, 294, 264, 3855, 11, 457, 257, 5353, 12492, 295, 437, 512, 295, 552, 360, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10143976211547852, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.03458331152796745}, {"id": 127, "seek": 69300, "start": 710.0, "end": 717.0, "text": " The at coder library or ACL is a working and a very broad library with sort of black box style documentation.", "tokens": [51214, 440, 412, 17656, 260, 6405, 420, 43873, 307, 257, 1364, 293, 257, 588, 4152, 6405, 365, 1333, 295, 2211, 2424, 3758, 14333, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10143976211547852, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.03458331152796745}, {"id": 128, "seek": 71700, "start": 717.0, "end": 727.0, "text": " They give the complexity and the utility, the functions, what the code does, but not necessarily how the code works because it's not necessary.", "tokens": [50364, 814, 976, 264, 14024, 293, 264, 14877, 11, 264, 6828, 11, 437, 264, 3089, 775, 11, 457, 406, 4725, 577, 264, 3089, 1985, 570, 309, 311, 406, 4818, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09333691415907461, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.42569392919540405}, {"id": 129, "seek": 71700, "start": 727.0, "end": 731.0, "text": " So it basically aligns exactly with how black boxing works.", "tokens": [50864, 407, 309, 1936, 7975, 82, 2293, 365, 577, 2211, 24424, 1985, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09333691415907461, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.42569392919540405}, {"id": 130, "seek": 71700, "start": 731.0, "end": 739.0, "text": " There's a site called CP algorithms, which gives, and by the way, CP is for competitive programming, not the other meaning of the acronym.", "tokens": [51064, 821, 311, 257, 3621, 1219, 22431, 14642, 11, 597, 2709, 11, 293, 538, 264, 636, 11, 22431, 307, 337, 10043, 9410, 11, 406, 264, 661, 3620, 295, 264, 39195, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09333691415907461, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.42569392919540405}, {"id": 131, "seek": 73900, "start": 739.0, "end": 743.0, "text": " But it gives both code and explanations for it.", "tokens": [50364, 583, 309, 2709, 1293, 3089, 293, 28708, 337, 309, 13, 50564], "temperature": 0.0, "avg_logprob": -0.15970645904541014, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.5653583407402039}, {"id": 132, "seek": 73900, "start": 743.0, "end": 751.0, "text": " But the important thing is that it gives full code without any sort of necessary interpretation most of the time.", "tokens": [50564, 583, 264, 1021, 551, 307, 300, 309, 2709, 1577, 3089, 1553, 604, 1333, 295, 4818, 14174, 881, 295, 264, 565, 13, 50964], "temperature": 0.0, "avg_logprob": -0.15970645904541014, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.5653583407402039}, {"id": 133, "seek": 73900, "start": 751.0, "end": 755.0, "text": " Some pages aren't perfect, but most of the time it will give full code.", "tokens": [50964, 2188, 7183, 3212, 380, 2176, 11, 457, 881, 295, 264, 565, 309, 486, 976, 1577, 3089, 13, 51164], "temperature": 0.0, "avg_logprob": -0.15970645904541014, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.5653583407402039}, {"id": 134, "seek": 73900, "start": 755.0, "end": 766.0, "text": " There are also some other basic libraries like Cactal, I believe that's how you pronounce that, and also a library by Ben Q, one of the top competitive programmers currently second on code for this.", "tokens": [51164, 821, 366, 611, 512, 661, 3875, 15148, 411, 383, 578, 304, 11, 286, 1697, 300, 311, 577, 291, 19567, 300, 11, 293, 611, 257, 6405, 538, 3964, 1249, 11, 472, 295, 264, 1192, 10043, 41504, 4362, 1150, 322, 3089, 337, 341, 13, 51714], "temperature": 0.0, "avg_logprob": -0.15970645904541014, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.5653583407402039}, {"id": 135, "seek": 76600, "start": 766.0, "end": 775.0, "text": " And if you want, I also have my own library with some stuff, but it's not too friendly for anyone who isn't me.", "tokens": [50364, 400, 498, 291, 528, 11, 286, 611, 362, 452, 1065, 6405, 365, 512, 1507, 11, 457, 309, 311, 406, 886, 9208, 337, 2878, 567, 1943, 380, 385, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08577187061309814, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.327278733253479}, {"id": 136, "seek": 76600, "start": 775.0, "end": 782.0, "text": " So possibly I'll clean it up in the future, but I would recommend using some of the other ones instead of mine.", "tokens": [50814, 407, 6264, 286, 603, 2541, 309, 493, 294, 264, 2027, 11, 457, 286, 576, 2748, 1228, 512, 295, 264, 661, 2306, 2602, 295, 3892, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08577187061309814, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.327278733253479}, {"id": 137, "seek": 76600, "start": 782.0, "end": 788.0, "text": " And I'm sure there are also probably plenty of others that you could find on the internet.", "tokens": [51164, 400, 286, 478, 988, 456, 366, 611, 1391, 7140, 295, 2357, 300, 291, 727, 915, 322, 264, 4705, 13, 51464], "temperature": 0.0, "avg_logprob": -0.08577187061309814, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.327278733253479}, {"id": 138, "seek": 78800, "start": 788.0, "end": 790.0, "text": " Alright, so that's black boxing.", "tokens": [50364, 2798, 11, 370, 300, 311, 2211, 24424, 13, 50464], "temperature": 0.0, "avg_logprob": -0.09138779110378689, "compression_ratio": 1.5793991416309012, "no_speech_prob": 0.42189303040504456}, {"id": 139, "seek": 78800, "start": 790.0, "end": 796.0, "text": " And whether you choose to use it or not is totally up to you, but I would say it can't hurt for sure.", "tokens": [50464, 400, 1968, 291, 2826, 281, 764, 309, 420, 406, 307, 3879, 493, 281, 291, 11, 457, 286, 576, 584, 309, 393, 380, 4607, 337, 988, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09138779110378689, "compression_ratio": 1.5793991416309012, "no_speech_prob": 0.42189303040504456}, {"id": 140, "seek": 78800, "start": 796.0, "end": 807.0, "text": " It takes a really short time, like mere minutes for a single topic, and it involves information that you would eventually need to have anyway when you're learning something because it's the utility.", "tokens": [50764, 467, 2516, 257, 534, 2099, 565, 11, 411, 8401, 2077, 337, 257, 2167, 4829, 11, 293, 309, 11626, 1589, 300, 291, 576, 4728, 643, 281, 362, 4033, 562, 291, 434, 2539, 746, 570, 309, 311, 264, 14877, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09138779110378689, "compression_ratio": 1.5793991416309012, "no_speech_prob": 0.42189303040504456}, {"id": 141, "seek": 78800, "start": 807.0, "end": 809.0, "text": " It's what the thing actually does.", "tokens": [51314, 467, 311, 437, 264, 551, 767, 775, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09138779110378689, "compression_ratio": 1.5793991416309012, "no_speech_prob": 0.42189303040504456}, {"id": 142, "seek": 80900, "start": 809.0, "end": 820.0, "text": " And it also gives you a brief but sufficient, sufficient for using it, introduction to topics, allowing you to use them much quicker than you'd be able to if you decided to learn them all fully in sequence.", "tokens": [50364, 400, 309, 611, 2709, 291, 257, 5353, 457, 11563, 11, 11563, 337, 1228, 309, 11, 9339, 281, 8378, 11, 8293, 291, 281, 764, 552, 709, 16255, 813, 291, 1116, 312, 1075, 281, 498, 291, 3047, 281, 1466, 552, 439, 4498, 294, 8310, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08371960355880413, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.809420645236969}, {"id": 143, "seek": 80900, "start": 820.0, "end": 832.0, "text": " Now, if you're also looking for some place to try and learn these things, there are some of the websites I mentioned above, but to self-promote a little bit because I have to shove that in too.", "tokens": [50914, 823, 11, 498, 291, 434, 611, 1237, 337, 512, 1081, 281, 853, 293, 1466, 613, 721, 11, 456, 366, 512, 295, 264, 12891, 286, 2835, 3673, 11, 457, 281, 2698, 12, 28722, 1370, 257, 707, 857, 570, 286, 362, 281, 35648, 300, 294, 886, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08371960355880413, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.809420645236969}, {"id": 144, "seek": 83200, "start": 832.0, "end": 842.0, "text": " So I also go over various topics on my channel, so you may want to check the rest of that out and potentially subscribe if you maybe want to possibly potentially.", "tokens": [50364, 407, 286, 611, 352, 670, 3683, 8378, 322, 452, 2269, 11, 370, 291, 815, 528, 281, 1520, 264, 1472, 295, 300, 484, 293, 7263, 3022, 498, 291, 1310, 528, 281, 6264, 7263, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1468095946730229, "compression_ratio": 1.4415584415584415, "no_speech_prob": 0.9162064790725708}, {"id": 145, "seek": 83200, "start": 842.0, "end": 848.0, "text": " And yeah, um, sorry, that's all I have. Yeah, see you guys.", "tokens": [50864, 400, 1338, 11, 1105, 11, 2597, 11, 300, 311, 439, 286, 362, 13, 865, 11, 536, 291, 1074, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1468095946730229, "compression_ratio": 1.4415584415584415, "no_speech_prob": 0.9162064790725708}], "language": "en"}