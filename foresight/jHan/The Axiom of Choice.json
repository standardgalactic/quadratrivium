{"text": " In mathematics, you want to prove things. Usually take some known theorems and ideas and, by using logic and mathematical techniques, show something new. But what lies at the foundation of mathematics? You prove new statements from statements that you already know, which themselves were proven from other statements and so on until you reach, well, assumptions. Stuff we don't really prove, but assume to be true. In mathematics, we call these axioms, and they lay the foundations of what we can do. The most widely used system of axioms is called Zermelo-Francole set theory with the axiom of choice, and these axioms talk specifically about sets. And the reason this is is because sets are so foundational that it's in everything in mathematics, from numbers to functions to algebraic structures, which can all be described by sets. But there's a specific axiom that stands out above the rest, the axiom of choice. We'll see what it really says about how we make choices in mathematics, as well as the controversy that this axiom brought, and why, even after all that, mathematicians hold fast to this axiom. But first, we need to learn a bit of set theory, because usually when you ask someone what a set is, they just say a collection of mathematical things. You know, we can have the set of natural numbers or real numbers. A basis of the vector space R2 is just a set of vectors. In fact, basically everything in mathematics, from ordered pairs to functions, relations, equivalence classes, even numbers themselves, can be described as sets. So this is why set theory is foundational in all of mathematics, because sets are the building blocks. So we need a formal set of rules to govern how sets work, or else you might run into contradictions. For example, consider the set of all sets that does not contain itself, call it R, then is R contained in R? Well, if R is an R, then it contains itself, so it cannot be an R. But if R is not an R, then R should now be an R. This is called Russell's Paradox, which is formulated by Bertrand Russell in 1901 to show that, clearly, we have to restrict on how we build and talk about sets in some way. Before this, mathematicians worked with sets and collections in a naive sort of way, just using assumptions they thought were self-evident. But with Russell's Paradox, mathematicians realized the necessity to lay down the foundational rules of what a set is, and its properties. In 1908, Ernst Zermelo formulated a list of axioms to base the theory of sets. Eventually, other mathematicians like Abraham Frankel and John von Neumann added some other axioms and eventually formulated Zermelo-Frankel set theory, also known as ZF, along with the axiom of choice, together called ZFC. We won't go through all of ZF today because that probably requires a whole series of videos, but this is a quick, informal description of what they say. Two sets are equal if they have the same elements. There exists the empty set. There exists a set containing two already existing sets. The union of sets is a set. The collection of all subsets of a set is a set. A definable sub-collection of a set is a set. There exists an infinite set. The image of any set under a definable function is a set, and every non-empty set contains a member that it is disjoint with. Now, some of these you can omit in certain circumstances by following from other axioms, but this is the general idea of ZF. Now, it's important to note that ZF or axiom of choice isn't some god-given, infallible, objective mathematical set of rules. You can construct and define other axiomatic systems and assumptions, which themselves can be useful in building upon mathematics. But ZF and the axiom of choice is what we use historically, and so far, works pretty well. So what does ZF say about sets, and what can we build from them? Well, first, from now on, everything in mathematics is a set, so it's important that we construct the mathematical concepts that we're familiar with in terms of sets, and we do this by constructing sets with the same properties that we expect from what we're familiar with. For example, consider the ordered pair AB, where it's just a collection of two objects with a strict ordering, so AB and BA are not the same if A and B are not the same. What's the defining property of the ordered pair? Well, how can we say that two ordered pairs are equal? Well, their first elements must be the same, and then their second element must also be the same. So, AB is equal to A'B' if and only if A is equal to A' and B is equal to B'. Can we describe sets with such properties? Yes, we can in fact formulate multiple constructions, but the widely accepted definition is a Kurotowski's definition, where AB is this set. It looks a bit wonky, but if you do the math, you'll get that this set exactly satisfies the defining property of the ordered pair. Now, defining ordered pairs is important because they help us construct other concepts. For example, take the Cartesian product of two sets. It's the set of all possible ordered pairs, AB, such that A is in A and B is in B. For example, the Cartesian product of the natural numbers and the natural numbers is all possible pairs of natural numbers. Then we can define something called a relation from sets X to Y. Formally, these are just a subset of the Cartesian product X times Y. Then we say that some X and X is related to some Y and Y denoted like this, if X, Y is in this subset R of X times Y. For example, the greater than relation of the natural numbers is a subset G of N times N. Then 2 comma 1 is an element of G, but 3 comma 7 is not an element of G. But what if we restrict a relation such that every X and X can be related to exactly 1 Y and Y? Well, this is called a rule of assignment. But let's step back a bit. A rule of assignment is a set of ordered pairs in X times Y, where each X and X is related, or you can say mapped, to a unique Y and Y. That, my friends, is just a function. Recall back in grade school how you described a function as a graph on the Cartesian plane. The graph had to pass the vertical line test showing that each X element had to be mapped to exactly one Y element. Well, this graph is just a representation of a set of ordered pairs. Take the real valued function f of X equals X squared on the reels. We can demonstrate it as a graph where each point on the graph is an ordered pair. So this graph represents the set of ordered pairs, which is just the rule of assignment defined by the rule f of X equals X squared. So a function is just a set defined by this rule of assignment. Functions are at the heart of the axiom of choice, so let's briefly go over a few properties and definitions. A function is defined between two sets, the domain, which is the set of inputs, and the co-domain, which contains the set of outputs. In our formal definition, if we have a rule of assignment as set of ordered pairs, the domain is a set which the first element of the order pair comes from, and the co-domain is a set in which the second element of each order pair comes from. Technically speaking, a function is then formally defined as a triple consisting of the rule of assignment, the domain, and the co-domain, but for simplicity, we can just talk about the rule of assignment. Indeed, the rule of assignment of a function maps each element of the domain to a unique element of the co-domain. Notice that the co-domain isn't necessarily the set of all outputs, that would be the image of the function. Like for f of x equals x squared, not all real numbers are outputs of this function, in particular the negative numbers. If a function does map to all of the co-domain, such that the range is the co-domain, the function is called surjective, or onto. Now, looking at the domain, while each element can only be mapped to one element in the co-domain, it doesn't mean two elements of the domain might end up mapping to the same element in the co-domain. In our f of x equals x squared example, negative two and positive two map to the same element, four. But if it happens that distinct elements in the domain are mapped to distinct elements in the co-domain, then that function is called injective, or one to one. If a function is both surjective and injective, such a function is called bijective. There's a lot more we can dig into, but I think we're ready for a formal approach to the axiom of choice. Take a set x, which is a collection of sets which are non-empty, meaning each element of x is a set that contains something. The axiom of choice says that there is a function which, for every set in x, chooses an element inside that set. Such a function is called a choice function of x. When you hear like that, it seems a bit underwhelming, but let's look at the machinery of what's going on here. So our domain is a set of these non-empty sets, then our co-domain is a set of all the elements in each of these sets, since our output will always be in one of these sets. So the co-domain is a union of all these non-empty sets. Just imagine that these non-empty sets in x are boxes containing some mathematical things, then our co-domain is just a big box where you dump all the contents of these boxes into. Then the co-domain is a set of all the possible elements we can choose from, and our choice function chooses one for each element of x. We call this the union set of x, which we can also denote with the big union symbol like this. Then we say that there is a function from x to the union set of x, such that f of x is in x for each x and big x. So f of x basically chooses an element in the non-empty set x. Now the axiom of choice doesn't actually give us a way to find this function or what this function looks like. It just declares that for any set of non-empty sets x, such a function must exist. So why is this axiom so important or even necessary? It feels, well, a bit obvious. Well, that's because most of us live in a finite mindset. If we have a finite number of sets, we can easily prove that such a choice function must exist using a technique called induction. You don't need an axiom to make finite choices. In fact, even some infinite choices don't really need the axiom of choice. Take the set of all possible subsets of the natural numbers called the power set of the naturals. Then a choice function f for the power set of n chooses a natural number from each possible subset of the naturals. So the domain is the power set of n and the co-domain is a set of naturals. But we really don't need the axiom of choice to show that a choice function exists. For example, you can easily define a choice function by just choosing the smallest element in each subset. By the properties of the naturals, every subset contains the smallest element. So again, we don't need a c to show that a choice function exists. But the universe of sets is much, much bigger than the naturals. For example, the real numbers live in a bigger size of infinity than the naturals called uncountable infinity. But we can also define bigger infinities by using something called ordinals. In essence, we can define bigger and bigger infinities by describing what are called different order types of the same size. It's definitely out of the scope of this video, but the point is sets can get stupidly unfathomably large. And so if we want to make these uncountably infinite number of choices, well, we can't just do that using any of our zf axioms. We need the axiom of choice to assume that we can make these infinitely many choices, no matter how incomprehensibly large our sets can get. And it turns out that making these choices is necessary even for the most seemingly obvious theorems about sets. For example, let a function f from x to y be surjective. Remember, it means all of its co domain is mapped by some element of the domain. Then does this imply that there exists an injective function g from y to x, that is, a function where two distinct elements of y are always mapped to distinct elements in x? Well, let's think about this. By the surjectivity of f, each element in y is mapped by some x in x. So simple. Let's just let g of y be this x. But wait, there is no guarantee that f is injective. So there could be multiple x's in x that map to this y. So if x1 and x2 both map to y by f, which one do we choose for our g? Clearly, we need the axiom of choice to choose, arbitrarily, some element to map y to. This is how we'd formally state this. Let x sub y be the set of all elements in x such that f of x is equal to y. So this is the set of x's from which we'd like to choose what to map y to. Think of like we're watching The Bachelors and this is the set of all candidates for g of y. Notice that x sub y is a subset of x. Since our choice function, let's call h, wants to choose an element of this subset, its inputs are the subsets of x. So the domain of our choice function h can be the set of all subsets of x. That's the power set of x. Remember, this is the set of all subsets of x. So x sub y is an element of the power set of x. But recall that ac requires our domain to contain only non-empty sets. So we do have to remove the empty set, which is technically a subset of x. Okay, then its co-domain is the union set of p of x. But clearly, this is just x. I mean, everything in here is just a subset of x, so you dump all of its elements into one big collection, it's just gonna be x. So the axiom of choice affirms that there exists a choice function h from p of x minus 0 to x. In particular, h of x sub y will be in x sub y, meaning h of x of y is guaranteed to be one of our bachelors. So that's how we'll define g. For every y and y, let g of y just be h of x sub y. Let's show that g is injective. If y is not equal to y prime, then xy and xy prime must be disjoint, meaning they have no elements in common. Indeed, if x was in both xy and xy prime, it would mean that f of x equals y and f of x equals y prime, which contradicts the rules for functions, that each element is mapped to a unique output. So if xy is disjoint from xy prime, any element in xy is distinct from any element in xy prime. So g of y equals hxy is not equal to gy prime equals hxy prime. So g is injective. So that's how you apply the axiom of choice in a proof. And the axiom of choice appears a lot in mathematics. In fact, it is equivalent over zf to a lot of statements. And when I say that two statements are equivalent over zf, it means that, assuming all the other axioms of zf, the statements imply one another. Basically, it means that the statements are the same. They are simply different ways of stating the same innate fact. So saying ac is equivalent to some statement means if you want this statement to be true, you will need the axiom of choice. So let's go over some equivalences of ac in set theory. One of the most important equivalences of ac is Zorn's lemma. But before we state Zorn's lemma, we need some preliminaries. Let's say you wanted a way to compare elements of a set x. Then you can define what's called an ordering on that set. It has to satisfy some properties. First, it must be reflexive, meaning every element of x is related to itself. It must also be anti-symmetric, meaning if x is related to y and y is related to x, this means x is equal to y. Finally, it must be transitive, meaning if x is related to y and y is related to z, then x is related to z. A prime example of an ordering is the greater than or equal to relation on the set of numbers like the integers and the reals. In fact, in general, we like to use this notation for orderings on sets, but of course there are many more orderings than just the greater than or equal. For example, take the set inclusion relation, given by a is a subset of p, and the power set of some set. This also satisfies three properties, but here's the thing. You can choose any two numbers, and you'll always be able to compare them with greater than or equal to. But if you choose two elements of a set containing sets, they might not be subsets of one another, like 1, 2, 3, and 2, 3, 4 can't be compared by set inclusion. No worries, such a set with a relation that satisfies the three properties, but not all elements of the set can be compared to every other element is called a partial ordering. And if, like the integers with a greater than or equal to relation, every element can be compared to every other element, that set is called a total ordering. Now let's say that you have a partial ordering on some set, and you want a subset of that set that is a total ordering induced by that same ordering on the whole set. Then such a subset is called a chain, and the chain is a good name for them because elements of such subsets form a chain of ordered elements. Now in general, if you have a subset s of a partially ordered set x, you can define what's called an upper bound of s. This is some element u of x, such that u is greater than or equal to every element in s. Now u doesn't have to be in s, but it could, and there could be multiple upper bounds. For example, an upper bound of the subset 1, 2, 6 in the set of naturals is 7, but also 1000, or maybe 6, or basically all natural numbers greater than or equal to 6. But not all subsets have upper bounds, like take the set of even numbers, which obviously doesn't have an upper bound. No natural number is greater than or equal to every even number. Finally, let's define something called a maximal element of x. An element m of a partially ordered set x is maximal if there is no other element of x that is greater than or equal to m. For example, in the set 1, 2, 3, 4, 5 with the usual greater than or equal to ordering, 5 is a maximal element. But in the set of all natural numbers, well, there is no maximal element. Now we can define Zorn's lemma. Let x be a partially ordered set induced by some relation. Suppose that for every chain c of x, c has an upper bound, then x has a maximal element. A few questions arise pretty quickly. First, where is the axiom of choice in this? This was supposed to be an equivalent statement, yet it looks and feels so different. And also, what really is this statement saying? What is it used for? Let's answer the second question first. A lot of mathematical concepts that you may know are actually maximal elements in disguise. If you know some linear algebra, think about the basis of a vector space. You can pretty easily prove with basic linear algebra that a basis of some vector space v is the maximal element of the set of all linearly independent subsets of v. So, Zorn's lemma can be crucial in proving the existence of some very important mathematical objects. So, how do Zorn's lemma and the axiom of choice relate? Well first, let's try to find ac in Zorn's lemma. In other words, if Zorn's lemma is true, does that mean that we can find a choice function for any set? The answer is yes. Take a set x of non-ante sets, and let a be the set of functions f, or technically rule of assignments, don't worry too much about the semantics, such that its domain is a subset of x, and it satisfies f of x is an x for all x in the domain of f. Well, this set a is a partially ordered set induced by the set inclusion relation. But it turns out that every chain in A has an upper bound. So you can apply Zorn's and show that A has a maximal element. Then you can show that this maximal element is exactly a choice function, or x. Zorn's lemma implies the axiom of choice. How about the other implication? Does ac imply Zorn's? Yeah. But that proof is a lot more complicated. It requires ordinals and a technique called transfinite recursion, which uses the axiom of replacement. The tools required for this proof are beyond the scope of this video, but as a general idea, you take a partially ordered set A where every chain has an upper bound. Then you construct some subset of A by using the axiom of choice to recursively choose what are called strict upper bounds. These are basically elements that are strictly bigger than everything in a subset. Basically, at each step, if your subset still has some strict upper bounds, you choose one and add it to the subset. We do this continuously until the subset we constructed has no more upper bounds. This way, we want to construct a maximal element of A by taking this subset and taking its union set. But because we could have so many choices for such strict upper bounds, we have to use the axiom of choice. This kind of recursion is also not over the naturals, but instead each step is marked by these transfinite objects called the ordinals. You can then use an axiom called replacement to prove that this transfinite recursion must eventually stop. And thus, you have constructed a maximal element using ac. So ac implies zorns. So that's the first important equivalence of ac. But there's another also very important equivalence of ac called the well ordering theorem. Remember the ordering stuff from zorns lemma? Well, let's suppose that a set x has a total ordering, meaning every element can be compared to every other element. Such an ordering is called well founded if every subset of x has what's called a least element, meaning everything in s is greater than or equal to this least element. If a set has a total ordering and is also well founded, we say that the set can be well ordered. For example, the set of naturals with the usual ordering is clearly well ordered. We know that the naturals and their usual ordering is a total ordering. And it's not hard to see that every subset of the naturals must have a least element, because if not, you'd be able to find some infinitely descending subset of the naturals, which cannot happen because, well, you'd have to eventually stop after some finite steps at zero. But what about the integers? Well, it sure has a total ordering under our usual ordering relation, but it's not well founded. Take the subset of all negative integers. It doesn't have a least element. But this doesn't mean the integers can't be well ordered. How about we define a new relation on the integer, where a is less than b, if the absolute value of a is less than the absolute value of b. Now, if the absolute values are equal, and let's say a is not equal to b, then this must mean that b is negative a. So, whichever of a or b is positive, let's order first. So such an ordering would look like this, zero, one, minus one, two, minus two, three, minus three, and so on. Then this ordering is well founded. You can see how our order relation may look a bit weird, but nonetheless, the set can be well ordered. But can we do this for every set? You can, in fact, define a pretty nice well ordering on the rationals and in general, any set that is countable, meaning it has size equal or smaller than the naturals. But when things get uncountably infinite, like the reels, it becomes difficult to find a well ordering. But even so, do we know one can exist? Well, the well ordering theorem says that every set can be well ordered. And it turns out, the well ordering theorem is equivalent to the axiom of choice. Like Zorn's lemma showing that the well ordering theorem implies ac is a bit more easier. If we assume the well ordering theorem, take any set of non-empty sets x and look at the union set of x, then the union set of x has a well ordering. In particular, every subset of u of x has a least element by well foundedness. But notice that every element x of x is a subset of the union set of x. So we can define a choice function from x to union set of x, such that f of x is the least element of x as a subset in ux with respect to its well ordering. Well, the least element of x as a subset of the union set of x is obviously in x, so we just defined a choice function for x. On the other hand, showing that ac implies the well ordering theorem is again a bit more complicated. And again, we need stuff like transfinite recursion and ordinals to define a well ordering. But the idea is pretty straightforward. For any set x, you basically use the axiom of choice to choose an element in x. Set that as your least element, then choose another element from the remaining elements in x, that's your next element in our order, then you just continue to do that recursively, again with the weird transfinite recursion done over the ordinals, and again, by the axiom of replacement, it necessitates that we must stop. Then we have basically constructed a well ordering on x. Again, the details are out of the scope of this video, but hopefully you can see the choiceness required for the well ordering theorem. But the equivalences of ac are not just limited to set theory. There are a lot of equivalences to very many important statements outside of set theory. First, every vector space has a basis. If you took any level of linear algebra, this is a foundational statement about vector spaces. When we are given a vector space, we automatically assume it has a basis. It turns out that this theorem is equivalent to ac. Second, that every ring contains a maximal ideal. This is a statement in ring theory, and it's a pretty important statement because maximal ideals are quite useful tools. And like our previous example, it's a foundational theorem in algebra, which is also equivalent to the axiom of choice. Now, these statements might seem a bit disconnected from our first formulation of the axiom of choice about choice functions, but they are quite immediate from our other equivalent formulation, Zorn's lemma. Both a basis of a vector space and a maximal ideal of a ring are just maximal elements under the set inclusion relation. So oftentimes, in abstract algebra, the preferred form of the axiom of choice is Zorn's lemma. Of course, the fact that these statements also imply Zorn's lemma is quite interesting. Another important equivalence of ac is Tykinov's theorem, which states that the product of any collection of compact topological spaces is compact with respect to product topology. It's considered one of the most crucial theorems of a branch of topology called point set topology. And these are but just a few of many examples. So clearly, the axiom of choice is an indispensable theorem of mathematics. If we have the axiom of choice, we can prove these important theorems, and if we want any of these foundational theorems to be true, the axiom of choice must follow. So what's the problem? Why did I say that the axiom of choice is controversial? Well, there are a lot of reasons for this controversy. One comes from the philosophical consequence of accepting the arbitrary existence of these choice functions, maximal elements, well-orderings, without any concrete way to construct or describe these things. We just say that they must exist, but as far as we know, we have no idea what they look like. Another problem occurs with certain implications of ac that seem, well, counterintuitive. Take the Banach-Tarski paradox, which says that you can take a solid 3D unit ball, take it apart into finally many pieces, and using only rotations and translations, assemble the pieces to get two exact copies of the unit ball. I mean, this sounds ridiculous, surely that contradicts all intuition of geometry and volume, but if ac is true, it's always Banach-Tarski. So if we want these really nice theorems and mathematics, like Takanov's theorem, we're going to have to accept stuff like Banach-Tarski. So yes, the axiom of choice breaks our intuition in more ways than one, and this weirdness has garnered some controversy throughout its history. But over time, the majority of mathematicians have agreed to accept ac as a valid axiom to derive the theorems, and as weird as ac might be, it hasn't shown any contradiction so far. But Banach-Tarski, for example, is just a consequence of describing sets so weird that the concept of volume really just falls apart. It may break our intuition, but that's different from a contradiction. But if anything, the axiom of choice shows the chaotic nature of mathematics. Our theorems are not something to be taken for granted. Our truths are often confusing and built upon a foundation not of objectives, but of assumptions we can only hope are strong. But maybe that's the beauty of it. There may be some things we can never truly know the answer to, maybe even some statements that don't have an answer. But we constructed our system of truths and relying only on our intuition and assumptions and logic discovered what the universe had to offer. Even if we know there is a limitation, that doesn't mean we can't reach new heights. Is the axiom of choice true? Does that question even make sense? Are the axioms of ZFC truly free of contradictions? We may never know, but maybe that's not the point. Just being curious, desiring to know more, and pushing ourselves to make sure our truths are truths, that in and of itself allows us to contemplate and debate and imagine and discover. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 16.080000000000002, "text": " In mathematics, you want to prove things.", "tokens": [50364, 682, 18666, 11, 291, 528, 281, 7081, 721, 13, 51168], "temperature": 0.0, "avg_logprob": -0.2565581263328085, "compression_ratio": 1.4154929577464788, "no_speech_prob": 0.0372484028339386}, {"id": 1, "seek": 0, "start": 16.080000000000002, "end": 21.2, "text": " Usually take some known theorems and ideas and, by using logic and mathematical techniques,", "tokens": [51168, 11419, 747, 512, 2570, 10299, 2592, 293, 3487, 293, 11, 538, 1228, 9952, 293, 18894, 7512, 11, 51424], "temperature": 0.0, "avg_logprob": -0.2565581263328085, "compression_ratio": 1.4154929577464788, "no_speech_prob": 0.0372484028339386}, {"id": 2, "seek": 0, "start": 21.2, "end": 22.88, "text": " show something new.", "tokens": [51424, 855, 746, 777, 13, 51508], "temperature": 0.0, "avg_logprob": -0.2565581263328085, "compression_ratio": 1.4154929577464788, "no_speech_prob": 0.0372484028339386}, {"id": 3, "seek": 0, "start": 22.88, "end": 25.84, "text": " But what lies at the foundation of mathematics?", "tokens": [51508, 583, 437, 9134, 412, 264, 7030, 295, 18666, 30, 51656], "temperature": 0.0, "avg_logprob": -0.2565581263328085, "compression_ratio": 1.4154929577464788, "no_speech_prob": 0.0372484028339386}, {"id": 4, "seek": 2584, "start": 26.08, "end": 29.12, "text": " You prove new statements from statements that you already know,", "tokens": [50376, 509, 7081, 777, 12363, 490, 12363, 300, 291, 1217, 458, 11, 50528], "temperature": 0.0, "avg_logprob": -0.15212247885909735, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.02366400882601738}, {"id": 5, "seek": 2584, "start": 29.12, "end": 35.28, "text": " which themselves were proven from other statements and so on until you reach, well, assumptions.", "tokens": [50528, 597, 2969, 645, 12785, 490, 661, 12363, 293, 370, 322, 1826, 291, 2524, 11, 731, 11, 17695, 13, 50836], "temperature": 0.0, "avg_logprob": -0.15212247885909735, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.02366400882601738}, {"id": 6, "seek": 2584, "start": 35.92, "end": 39.44, "text": " Stuff we don't really prove, but assume to be true.", "tokens": [50868, 31347, 321, 500, 380, 534, 7081, 11, 457, 6552, 281, 312, 2074, 13, 51044], "temperature": 0.0, "avg_logprob": -0.15212247885909735, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.02366400882601738}, {"id": 7, "seek": 2584, "start": 40.24, "end": 45.6, "text": " In mathematics, we call these axioms, and they lay the foundations of what we can do.", "tokens": [51084, 682, 18666, 11, 321, 818, 613, 6360, 72, 4785, 11, 293, 436, 2360, 264, 22467, 295, 437, 321, 393, 360, 13, 51352], "temperature": 0.0, "avg_logprob": -0.15212247885909735, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.02366400882601738}, {"id": 8, "seek": 2584, "start": 46.64, "end": 53.04, "text": " The most widely used system of axioms is called Zermelo-Francole set theory with the axiom of", "tokens": [51404, 440, 881, 13371, 1143, 1185, 295, 6360, 72, 4785, 307, 1219, 1176, 966, 10590, 12, 37, 4257, 1291, 306, 992, 5261, 365, 264, 6360, 72, 298, 295, 51724], "temperature": 0.0, "avg_logprob": -0.15212247885909735, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.02366400882601738}, {"id": 9, "seek": 5304, "start": 53.04, "end": 57.36, "text": " choice, and these axioms talk specifically about sets.", "tokens": [50364, 3922, 11, 293, 613, 6360, 72, 4785, 751, 4682, 466, 6352, 13, 50580], "temperature": 0.0, "avg_logprob": -0.10087371118289908, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.03306039050221443}, {"id": 10, "seek": 5304, "start": 57.36, "end": 63.2, "text": " And the reason this is is because sets are so foundational that it's in everything in mathematics,", "tokens": [50580, 400, 264, 1778, 341, 307, 307, 570, 6352, 366, 370, 32195, 300, 309, 311, 294, 1203, 294, 18666, 11, 50872], "temperature": 0.0, "avg_logprob": -0.10087371118289908, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.03306039050221443}, {"id": 11, "seek": 5304, "start": 63.2, "end": 68.56, "text": " from numbers to functions to algebraic structures, which can all be described by sets.", "tokens": [50872, 490, 3547, 281, 6828, 281, 21989, 299, 9227, 11, 597, 393, 439, 312, 7619, 538, 6352, 13, 51140], "temperature": 0.0, "avg_logprob": -0.10087371118289908, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.03306039050221443}, {"id": 12, "seek": 5304, "start": 69.44, "end": 74.4, "text": " But there's a specific axiom that stands out above the rest, the axiom of choice.", "tokens": [51184, 583, 456, 311, 257, 2685, 6360, 72, 298, 300, 7382, 484, 3673, 264, 1472, 11, 264, 6360, 72, 298, 295, 3922, 13, 51432], "temperature": 0.0, "avg_logprob": -0.10087371118289908, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.03306039050221443}, {"id": 13, "seek": 5304, "start": 75.2, "end": 79.52, "text": " We'll see what it really says about how we make choices in mathematics,", "tokens": [51472, 492, 603, 536, 437, 309, 534, 1619, 466, 577, 321, 652, 7994, 294, 18666, 11, 51688], "temperature": 0.0, "avg_logprob": -0.10087371118289908, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.03306039050221443}, {"id": 14, "seek": 7952, "start": 79.52, "end": 84.96, "text": " as well as the controversy that this axiom brought, and why, even after all that,", "tokens": [50364, 382, 731, 382, 264, 22976, 300, 341, 6360, 72, 298, 3038, 11, 293, 983, 11, 754, 934, 439, 300, 11, 50636], "temperature": 0.0, "avg_logprob": -0.07349328014338127, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001098638167604804}, {"id": 15, "seek": 7952, "start": 84.96, "end": 87.75999999999999, "text": " mathematicians hold fast to this axiom.", "tokens": [50636, 32811, 2567, 1797, 2370, 281, 341, 6360, 72, 298, 13, 50776], "temperature": 0.0, "avg_logprob": -0.07349328014338127, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001098638167604804}, {"id": 16, "seek": 7952, "start": 88.64, "end": 94.8, "text": " But first, we need to learn a bit of set theory, because usually when you ask someone what a set", "tokens": [50820, 583, 700, 11, 321, 643, 281, 1466, 257, 857, 295, 992, 5261, 11, 570, 2673, 562, 291, 1029, 1580, 437, 257, 992, 51128], "temperature": 0.0, "avg_logprob": -0.07349328014338127, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001098638167604804}, {"id": 17, "seek": 7952, "start": 94.8, "end": 98.16, "text": " is, they just say a collection of mathematical things.", "tokens": [51128, 307, 11, 436, 445, 584, 257, 5765, 295, 18894, 721, 13, 51296], "temperature": 0.0, "avg_logprob": -0.07349328014338127, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001098638167604804}, {"id": 18, "seek": 7952, "start": 98.16, "end": 101.52, "text": " You know, we can have the set of natural numbers or real numbers.", "tokens": [51296, 509, 458, 11, 321, 393, 362, 264, 992, 295, 3303, 3547, 420, 957, 3547, 13, 51464], "temperature": 0.0, "avg_logprob": -0.07349328014338127, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001098638167604804}, {"id": 19, "seek": 7952, "start": 101.52, "end": 105.44, "text": " A basis of the vector space R2 is just a set of vectors.", "tokens": [51464, 316, 5143, 295, 264, 8062, 1901, 497, 17, 307, 445, 257, 992, 295, 18875, 13, 51660], "temperature": 0.0, "avg_logprob": -0.07349328014338127, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001098638167604804}, {"id": 20, "seek": 10544, "start": 106.08, "end": 110.96, "text": " In fact, basically everything in mathematics, from ordered pairs to functions, relations,", "tokens": [50396, 682, 1186, 11, 1936, 1203, 294, 18666, 11, 490, 8866, 15494, 281, 6828, 11, 2299, 11, 50640], "temperature": 0.0, "avg_logprob": -0.07640417722555307, "compression_ratio": 1.6531365313653137, "no_speech_prob": 0.004754966590553522}, {"id": 21, "seek": 10544, "start": 110.96, "end": 114.96, "text": " equivalence classes, even numbers themselves, can be described as sets.", "tokens": [50640, 9052, 655, 5359, 11, 754, 3547, 2969, 11, 393, 312, 7619, 382, 6352, 13, 50840], "temperature": 0.0, "avg_logprob": -0.07640417722555307, "compression_ratio": 1.6531365313653137, "no_speech_prob": 0.004754966590553522}, {"id": 22, "seek": 10544, "start": 115.6, "end": 121.2, "text": " So this is why set theory is foundational in all of mathematics, because sets are the building blocks.", "tokens": [50872, 407, 341, 307, 983, 992, 5261, 307, 32195, 294, 439, 295, 18666, 11, 570, 6352, 366, 264, 2390, 8474, 13, 51152], "temperature": 0.0, "avg_logprob": -0.07640417722555307, "compression_ratio": 1.6531365313653137, "no_speech_prob": 0.004754966590553522}, {"id": 23, "seek": 10544, "start": 121.92, "end": 128.16, "text": " So we need a formal set of rules to govern how sets work, or else you might run into contradictions.", "tokens": [51188, 407, 321, 643, 257, 9860, 992, 295, 4474, 281, 1980, 577, 6352, 589, 11, 420, 1646, 291, 1062, 1190, 666, 15858, 15607, 13, 51500], "temperature": 0.0, "avg_logprob": -0.07640417722555307, "compression_ratio": 1.6531365313653137, "no_speech_prob": 0.004754966590553522}, {"id": 24, "seek": 10544, "start": 128.8, "end": 134.64, "text": " For example, consider the set of all sets that does not contain itself, call it R,", "tokens": [51532, 1171, 1365, 11, 1949, 264, 992, 295, 439, 6352, 300, 775, 406, 5304, 2564, 11, 818, 309, 497, 11, 51824], "temperature": 0.0, "avg_logprob": -0.07640417722555307, "compression_ratio": 1.6531365313653137, "no_speech_prob": 0.004754966590553522}, {"id": 25, "seek": 13464, "start": 134.64, "end": 141.76, "text": " then is R contained in R? Well, if R is an R, then it contains itself, so it cannot be an R.", "tokens": [50364, 550, 307, 497, 16212, 294, 497, 30, 1042, 11, 498, 497, 307, 364, 497, 11, 550, 309, 8306, 2564, 11, 370, 309, 2644, 312, 364, 497, 13, 50720], "temperature": 0.0, "avg_logprob": -0.1002303957939148, "compression_ratio": 1.6194331983805668, "no_speech_prob": 0.0025908173993229866}, {"id": 26, "seek": 13464, "start": 142.39999999999998, "end": 148.88, "text": " But if R is not an R, then R should now be an R. This is called Russell's Paradox,", "tokens": [50752, 583, 498, 497, 307, 406, 364, 497, 11, 550, 497, 820, 586, 312, 364, 497, 13, 639, 307, 1219, 20937, 311, 3457, 23029, 11, 51076], "temperature": 0.0, "avg_logprob": -0.1002303957939148, "compression_ratio": 1.6194331983805668, "no_speech_prob": 0.0025908173993229866}, {"id": 27, "seek": 13464, "start": 148.88, "end": 153.83999999999997, "text": " which is formulated by Bertrand Russell in 1901 to show that, clearly,", "tokens": [51076, 597, 307, 48936, 538, 29594, 3699, 20937, 294, 1294, 10607, 281, 855, 300, 11, 4448, 11, 51324], "temperature": 0.0, "avg_logprob": -0.1002303957939148, "compression_ratio": 1.6194331983805668, "no_speech_prob": 0.0025908173993229866}, {"id": 28, "seek": 13464, "start": 153.83999999999997, "end": 157.67999999999998, "text": " we have to restrict on how we build and talk about sets in some way.", "tokens": [51324, 321, 362, 281, 7694, 322, 577, 321, 1322, 293, 751, 466, 6352, 294, 512, 636, 13, 51516], "temperature": 0.0, "avg_logprob": -0.1002303957939148, "compression_ratio": 1.6194331983805668, "no_speech_prob": 0.0025908173993229866}, {"id": 29, "seek": 13464, "start": 158.32, "end": 163.11999999999998, "text": " Before this, mathematicians worked with sets and collections in a naive sort of way,", "tokens": [51548, 4546, 341, 11, 32811, 2567, 2732, 365, 6352, 293, 16641, 294, 257, 29052, 1333, 295, 636, 11, 51788], "temperature": 0.0, "avg_logprob": -0.1002303957939148, "compression_ratio": 1.6194331983805668, "no_speech_prob": 0.0025908173993229866}, {"id": 30, "seek": 16312, "start": 163.12, "end": 168.08, "text": " just using assumptions they thought were self-evident. But with Russell's Paradox,", "tokens": [50364, 445, 1228, 17695, 436, 1194, 645, 2698, 12, 13379, 1078, 13, 583, 365, 20937, 311, 3457, 23029, 11, 50612], "temperature": 0.0, "avg_logprob": -0.08315207815577841, "compression_ratio": 1.6070175438596492, "no_speech_prob": 0.0026314971037209034}, {"id": 31, "seek": 16312, "start": 168.08, "end": 173.20000000000002, "text": " mathematicians realized the necessity to lay down the foundational rules of what a set is,", "tokens": [50612, 32811, 2567, 5334, 264, 24217, 281, 2360, 760, 264, 32195, 4474, 295, 437, 257, 992, 307, 11, 50868], "temperature": 0.0, "avg_logprob": -0.08315207815577841, "compression_ratio": 1.6070175438596492, "no_speech_prob": 0.0026314971037209034}, {"id": 32, "seek": 16312, "start": 173.20000000000002, "end": 180.56, "text": " and its properties. In 1908, Ernst Zermelo formulated a list of axioms to base the theory of sets.", "tokens": [50868, 293, 1080, 7221, 13, 682, 1294, 16133, 11, 24147, 372, 1176, 966, 10590, 48936, 257, 1329, 295, 6360, 72, 4785, 281, 3096, 264, 5261, 295, 6352, 13, 51236], "temperature": 0.0, "avg_logprob": -0.08315207815577841, "compression_ratio": 1.6070175438596492, "no_speech_prob": 0.0026314971037209034}, {"id": 33, "seek": 16312, "start": 180.56, "end": 185.44, "text": " Eventually, other mathematicians like Abraham Frankel and John von Neumann added some other", "tokens": [51236, 17586, 11, 661, 32811, 2567, 411, 17782, 17288, 7124, 293, 2619, 2957, 1734, 449, 969, 3869, 512, 661, 51480], "temperature": 0.0, "avg_logprob": -0.08315207815577841, "compression_ratio": 1.6070175438596492, "no_speech_prob": 0.0026314971037209034}, {"id": 34, "seek": 16312, "start": 185.44, "end": 191.44, "text": " axioms and eventually formulated Zermelo-Frankel set theory, also known as ZF, along with the", "tokens": [51480, 6360, 72, 4785, 293, 4728, 48936, 1176, 966, 10590, 12, 37, 4257, 7124, 992, 5261, 11, 611, 2570, 382, 1176, 37, 11, 2051, 365, 264, 51780], "temperature": 0.0, "avg_logprob": -0.08315207815577841, "compression_ratio": 1.6070175438596492, "no_speech_prob": 0.0026314971037209034}, {"id": 35, "seek": 19144, "start": 191.44, "end": 198.32, "text": " axiom of choice, together called ZFC. We won't go through all of ZF today because that probably", "tokens": [50364, 6360, 72, 298, 295, 3922, 11, 1214, 1219, 1176, 18671, 13, 492, 1582, 380, 352, 807, 439, 295, 1176, 37, 965, 570, 300, 1391, 50708], "temperature": 0.0, "avg_logprob": -0.06937084595362346, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.006097101606428623}, {"id": 36, "seek": 19144, "start": 198.32, "end": 203.84, "text": " requires a whole series of videos, but this is a quick, informal description of what they say.", "tokens": [50708, 7029, 257, 1379, 2638, 295, 2145, 11, 457, 341, 307, 257, 1702, 11, 24342, 3855, 295, 437, 436, 584, 13, 50984], "temperature": 0.0, "avg_logprob": -0.06937084595362346, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.006097101606428623}, {"id": 37, "seek": 19144, "start": 204.4, "end": 211.04, "text": " Two sets are equal if they have the same elements. There exists the empty set. There exists a set", "tokens": [51012, 4453, 6352, 366, 2681, 498, 436, 362, 264, 912, 4959, 13, 821, 8198, 264, 6707, 992, 13, 821, 8198, 257, 992, 51344], "temperature": 0.0, "avg_logprob": -0.06937084595362346, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.006097101606428623}, {"id": 38, "seek": 19144, "start": 211.04, "end": 217.36, "text": " containing two already existing sets. The union of sets is a set. The collection of all subsets of", "tokens": [51344, 19273, 732, 1217, 6741, 6352, 13, 440, 11671, 295, 6352, 307, 257, 992, 13, 440, 5765, 295, 439, 2090, 1385, 295, 51660], "temperature": 0.0, "avg_logprob": -0.06937084595362346, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.006097101606428623}, {"id": 39, "seek": 21736, "start": 217.36, "end": 224.48000000000002, "text": " a set is a set. A definable sub-collection of a set is a set. There exists an infinite set.", "tokens": [50364, 257, 992, 307, 257, 992, 13, 316, 1561, 712, 1422, 12, 33891, 10183, 295, 257, 992, 307, 257, 992, 13, 821, 8198, 364, 13785, 992, 13, 50720], "temperature": 0.0, "avg_logprob": -0.08010272468839373, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.014062297530472279}, {"id": 40, "seek": 21736, "start": 225.04000000000002, "end": 232.08, "text": " The image of any set under a definable function is a set, and every non-empty set contains a member", "tokens": [50748, 440, 3256, 295, 604, 992, 833, 257, 1561, 712, 2445, 307, 257, 992, 11, 293, 633, 2107, 12, 4543, 88, 992, 8306, 257, 4006, 51100], "temperature": 0.0, "avg_logprob": -0.08010272468839373, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.014062297530472279}, {"id": 41, "seek": 21736, "start": 232.08, "end": 238.16000000000003, "text": " that it is disjoint with. Now, some of these you can omit in certain circumstances by following from", "tokens": [51100, 300, 309, 307, 717, 48613, 365, 13, 823, 11, 512, 295, 613, 291, 393, 3406, 270, 294, 1629, 9121, 538, 3480, 490, 51404], "temperature": 0.0, "avg_logprob": -0.08010272468839373, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.014062297530472279}, {"id": 42, "seek": 21736, "start": 238.16000000000003, "end": 245.12, "text": " other axioms, but this is the general idea of ZF. Now, it's important to note that ZF or axiom of", "tokens": [51404, 661, 6360, 72, 4785, 11, 457, 341, 307, 264, 2674, 1558, 295, 1176, 37, 13, 823, 11, 309, 311, 1021, 281, 3637, 300, 1176, 37, 420, 6360, 72, 298, 295, 51752], "temperature": 0.0, "avg_logprob": -0.08010272468839373, "compression_ratio": 1.638655462184874, "no_speech_prob": 0.014062297530472279}, {"id": 43, "seek": 24512, "start": 245.12, "end": 252.4, "text": " choice isn't some god-given, infallible, objective mathematical set of rules. You can construct and", "tokens": [50364, 3922, 1943, 380, 512, 3044, 12, 70, 5709, 11, 1536, 336, 964, 11, 10024, 18894, 992, 295, 4474, 13, 509, 393, 7690, 293, 50728], "temperature": 0.0, "avg_logprob": -0.09213239839761564, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.004331320524215698}, {"id": 44, "seek": 24512, "start": 252.4, "end": 257.68, "text": " define other axiomatic systems and assumptions, which themselves can be useful in building upon", "tokens": [50728, 6964, 661, 6360, 72, 13143, 3652, 293, 17695, 11, 597, 2969, 393, 312, 4420, 294, 2390, 3564, 50992], "temperature": 0.0, "avg_logprob": -0.09213239839761564, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.004331320524215698}, {"id": 45, "seek": 24512, "start": 257.68, "end": 264.72, "text": " mathematics. But ZF and the axiom of choice is what we use historically, and so far, works pretty well.", "tokens": [50992, 18666, 13, 583, 1176, 37, 293, 264, 6360, 72, 298, 295, 3922, 307, 437, 321, 764, 16180, 11, 293, 370, 1400, 11, 1985, 1238, 731, 13, 51344], "temperature": 0.0, "avg_logprob": -0.09213239839761564, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.004331320524215698}, {"id": 46, "seek": 24512, "start": 265.52, "end": 272.16, "text": " So what does ZF say about sets, and what can we build from them? Well, first, from now on,", "tokens": [51384, 407, 437, 775, 1176, 37, 584, 466, 6352, 11, 293, 437, 393, 321, 1322, 490, 552, 30, 1042, 11, 700, 11, 490, 586, 322, 11, 51716], "temperature": 0.0, "avg_logprob": -0.09213239839761564, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.004331320524215698}, {"id": 47, "seek": 27216, "start": 272.16, "end": 277.12, "text": " everything in mathematics is a set, so it's important that we construct the mathematical", "tokens": [50364, 1203, 294, 18666, 307, 257, 992, 11, 370, 309, 311, 1021, 300, 321, 7690, 264, 18894, 50612], "temperature": 0.0, "avg_logprob": -0.07727765495126898, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.001366927637718618}, {"id": 48, "seek": 27216, "start": 277.12, "end": 282.8, "text": " concepts that we're familiar with in terms of sets, and we do this by constructing sets with", "tokens": [50612, 10392, 300, 321, 434, 4963, 365, 294, 2115, 295, 6352, 11, 293, 321, 360, 341, 538, 39969, 6352, 365, 50896], "temperature": 0.0, "avg_logprob": -0.07727765495126898, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.001366927637718618}, {"id": 49, "seek": 27216, "start": 282.8, "end": 289.36, "text": " the same properties that we expect from what we're familiar with. For example, consider the ordered pair", "tokens": [50896, 264, 912, 7221, 300, 321, 2066, 490, 437, 321, 434, 4963, 365, 13, 1171, 1365, 11, 1949, 264, 8866, 6119, 51224], "temperature": 0.0, "avg_logprob": -0.07727765495126898, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.001366927637718618}, {"id": 50, "seek": 27216, "start": 289.36, "end": 295.92, "text": " AB, where it's just a collection of two objects with a strict ordering, so AB and BA are not the", "tokens": [51224, 13838, 11, 689, 309, 311, 445, 257, 5765, 295, 732, 6565, 365, 257, 10910, 21739, 11, 370, 13838, 293, 21050, 366, 406, 264, 51552], "temperature": 0.0, "avg_logprob": -0.07727765495126898, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.001366927637718618}, {"id": 51, "seek": 29592, "start": 295.92, "end": 302.32, "text": " same if A and B are not the same. What's the defining property of the ordered pair? Well,", "tokens": [50364, 912, 498, 316, 293, 363, 366, 406, 264, 912, 13, 708, 311, 264, 17827, 4707, 295, 264, 8866, 6119, 30, 1042, 11, 50684], "temperature": 0.0, "avg_logprob": -0.0704851776662499, "compression_ratio": 1.7761194029850746, "no_speech_prob": 0.004070022609084845}, {"id": 52, "seek": 29592, "start": 302.32, "end": 307.44, "text": " how can we say that two ordered pairs are equal? Well, their first elements must be the same,", "tokens": [50684, 577, 393, 321, 584, 300, 732, 8866, 15494, 366, 2681, 30, 1042, 11, 641, 700, 4959, 1633, 312, 264, 912, 11, 50940], "temperature": 0.0, "avg_logprob": -0.0704851776662499, "compression_ratio": 1.7761194029850746, "no_speech_prob": 0.004070022609084845}, {"id": 53, "seek": 29592, "start": 307.44, "end": 314.64, "text": " and then their second element must also be the same. So, AB is equal to A'B' if and only if", "tokens": [50940, 293, 550, 641, 1150, 4478, 1633, 611, 312, 264, 912, 13, 407, 11, 13838, 307, 2681, 281, 316, 6, 33, 6, 498, 293, 787, 498, 51300], "temperature": 0.0, "avg_logprob": -0.0704851776662499, "compression_ratio": 1.7761194029850746, "no_speech_prob": 0.004070022609084845}, {"id": 54, "seek": 29592, "start": 314.64, "end": 320.16, "text": " A is equal to A' and B is equal to B'. Can we describe sets with such properties?", "tokens": [51300, 316, 307, 2681, 281, 316, 6, 293, 363, 307, 2681, 281, 363, 5004, 1664, 321, 6786, 6352, 365, 1270, 7221, 30, 51576], "temperature": 0.0, "avg_logprob": -0.0704851776662499, "compression_ratio": 1.7761194029850746, "no_speech_prob": 0.004070022609084845}, {"id": 55, "seek": 32016, "start": 320.88000000000005, "end": 326.16, "text": " Yes, we can in fact formulate multiple constructions, but the widely accepted definition", "tokens": [50400, 1079, 11, 321, 393, 294, 1186, 47881, 3866, 7690, 626, 11, 457, 264, 13371, 9035, 7123, 50664], "temperature": 0.0, "avg_logprob": -0.08235227921429802, "compression_ratio": 1.6289592760180995, "no_speech_prob": 0.0050600627437233925}, {"id": 56, "seek": 32016, "start": 326.16, "end": 333.84000000000003, "text": " is a Kurotowski's definition, where AB is this set. It looks a bit wonky, but if you do the math,", "tokens": [50664, 307, 257, 16481, 310, 21866, 311, 7123, 11, 689, 13838, 307, 341, 992, 13, 467, 1542, 257, 857, 1582, 4133, 11, 457, 498, 291, 360, 264, 5221, 11, 51048], "temperature": 0.0, "avg_logprob": -0.08235227921429802, "compression_ratio": 1.6289592760180995, "no_speech_prob": 0.0050600627437233925}, {"id": 57, "seek": 32016, "start": 333.84000000000003, "end": 339.04, "text": " you'll get that this set exactly satisfies the defining property of the ordered pair.", "tokens": [51048, 291, 603, 483, 300, 341, 992, 2293, 44271, 264, 17827, 4707, 295, 264, 8866, 6119, 13, 51308], "temperature": 0.0, "avg_logprob": -0.08235227921429802, "compression_ratio": 1.6289592760180995, "no_speech_prob": 0.0050600627437233925}, {"id": 58, "seek": 32016, "start": 340.08000000000004, "end": 345.20000000000005, "text": " Now, defining ordered pairs is important because they help us construct other concepts.", "tokens": [51360, 823, 11, 17827, 8866, 15494, 307, 1021, 570, 436, 854, 505, 7690, 661, 10392, 13, 51616], "temperature": 0.0, "avg_logprob": -0.08235227921429802, "compression_ratio": 1.6289592760180995, "no_speech_prob": 0.0050600627437233925}, {"id": 59, "seek": 34520, "start": 345.2, "end": 350.56, "text": " For example, take the Cartesian product of two sets. It's the set of all possible ordered pairs,", "tokens": [50364, 1171, 1365, 11, 747, 264, 22478, 42434, 1674, 295, 732, 6352, 13, 467, 311, 264, 992, 295, 439, 1944, 8866, 15494, 11, 50632], "temperature": 0.0, "avg_logprob": -0.058142428596814476, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.0023229848593473434}, {"id": 60, "seek": 34520, "start": 350.56, "end": 357.59999999999997, "text": " AB, such that A is in A and B is in B. For example, the Cartesian product of the natural numbers and", "tokens": [50632, 13838, 11, 1270, 300, 316, 307, 294, 316, 293, 363, 307, 294, 363, 13, 1171, 1365, 11, 264, 22478, 42434, 1674, 295, 264, 3303, 3547, 293, 50984], "temperature": 0.0, "avg_logprob": -0.058142428596814476, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.0023229848593473434}, {"id": 61, "seek": 34520, "start": 357.59999999999997, "end": 363.36, "text": " the natural numbers is all possible pairs of natural numbers. Then we can define something", "tokens": [50984, 264, 3303, 3547, 307, 439, 1944, 15494, 295, 3303, 3547, 13, 1396, 321, 393, 6964, 746, 51272], "temperature": 0.0, "avg_logprob": -0.058142428596814476, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.0023229848593473434}, {"id": 62, "seek": 34520, "start": 363.36, "end": 369.76, "text": " called a relation from sets X to Y. Formally, these are just a subset of the Cartesian product", "tokens": [51272, 1219, 257, 9721, 490, 6352, 1783, 281, 398, 13, 10126, 379, 11, 613, 366, 445, 257, 25993, 295, 264, 22478, 42434, 1674, 51592], "temperature": 0.0, "avg_logprob": -0.058142428596814476, "compression_ratio": 1.8413461538461537, "no_speech_prob": 0.0023229848593473434}, {"id": 63, "seek": 36976, "start": 369.76, "end": 376.08, "text": " X times Y. Then we say that some X and X is related to some Y and Y denoted like this,", "tokens": [50364, 1783, 1413, 398, 13, 1396, 321, 584, 300, 512, 1783, 293, 1783, 307, 4077, 281, 512, 398, 293, 398, 1441, 23325, 411, 341, 11, 50680], "temperature": 0.0, "avg_logprob": -0.10393853053868374, "compression_ratio": 1.6860986547085202, "no_speech_prob": 0.029309729114174843}, {"id": 64, "seek": 36976, "start": 376.08, "end": 383.36, "text": " if X, Y is in this subset R of X times Y. For example, the greater than relation of the natural", "tokens": [50680, 498, 1783, 11, 398, 307, 294, 341, 25993, 497, 295, 1783, 1413, 398, 13, 1171, 1365, 11, 264, 5044, 813, 9721, 295, 264, 3303, 51044], "temperature": 0.0, "avg_logprob": -0.10393853053868374, "compression_ratio": 1.6860986547085202, "no_speech_prob": 0.029309729114174843}, {"id": 65, "seek": 36976, "start": 383.36, "end": 392.48, "text": " numbers is a subset G of N times N. Then 2 comma 1 is an element of G, but 3 comma 7 is not an element", "tokens": [51044, 3547, 307, 257, 25993, 460, 295, 426, 1413, 426, 13, 1396, 568, 22117, 502, 307, 364, 4478, 295, 460, 11, 457, 805, 22117, 1614, 307, 406, 364, 4478, 51500], "temperature": 0.0, "avg_logprob": -0.10393853053868374, "compression_ratio": 1.6860986547085202, "no_speech_prob": 0.029309729114174843}, {"id": 66, "seek": 36976, "start": 392.48, "end": 399.59999999999997, "text": " of G. But what if we restrict a relation such that every X and X can be related to exactly", "tokens": [51500, 295, 460, 13, 583, 437, 498, 321, 7694, 257, 9721, 1270, 300, 633, 1783, 293, 1783, 393, 312, 4077, 281, 2293, 51856], "temperature": 0.0, "avg_logprob": -0.10393853053868374, "compression_ratio": 1.6860986547085202, "no_speech_prob": 0.029309729114174843}, {"id": 67, "seek": 39960, "start": 399.76000000000005, "end": 407.6, "text": " 1 Y and Y? Well, this is called a rule of assignment. But let's step back a bit. A rule of assignment", "tokens": [50372, 502, 398, 293, 398, 30, 1042, 11, 341, 307, 1219, 257, 4978, 295, 15187, 13, 583, 718, 311, 1823, 646, 257, 857, 13, 316, 4978, 295, 15187, 50764], "temperature": 0.0, "avg_logprob": -0.0655727564731491, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.004069886635988951}, {"id": 68, "seek": 39960, "start": 407.6, "end": 414.24, "text": " is a set of ordered pairs in X times Y, where each X and X is related, or you can say mapped,", "tokens": [50764, 307, 257, 992, 295, 8866, 15494, 294, 1783, 1413, 398, 11, 689, 1184, 1783, 293, 1783, 307, 4077, 11, 420, 291, 393, 584, 33318, 11, 51096], "temperature": 0.0, "avg_logprob": -0.0655727564731491, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.004069886635988951}, {"id": 69, "seek": 39960, "start": 414.24, "end": 420.64000000000004, "text": " to a unique Y and Y. That, my friends, is just a function. Recall back in grade school how you", "tokens": [51096, 281, 257, 3845, 398, 293, 398, 13, 663, 11, 452, 1855, 11, 307, 445, 257, 2445, 13, 9647, 336, 646, 294, 7204, 1395, 577, 291, 51416], "temperature": 0.0, "avg_logprob": -0.0655727564731491, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.004069886635988951}, {"id": 70, "seek": 39960, "start": 420.64000000000004, "end": 426.16, "text": " described a function as a graph on the Cartesian plane. The graph had to pass the vertical line", "tokens": [51416, 7619, 257, 2445, 382, 257, 4295, 322, 264, 22478, 42434, 5720, 13, 440, 4295, 632, 281, 1320, 264, 9429, 1622, 51692], "temperature": 0.0, "avg_logprob": -0.0655727564731491, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.004069886635988951}, {"id": 71, "seek": 42616, "start": 426.16, "end": 433.92, "text": " test showing that each X element had to be mapped to exactly one Y element. Well, this graph is just", "tokens": [50364, 1500, 4099, 300, 1184, 1783, 4478, 632, 281, 312, 33318, 281, 2293, 472, 398, 4478, 13, 1042, 11, 341, 4295, 307, 445, 50752], "temperature": 0.0, "avg_logprob": -0.07350531444754652, "compression_ratio": 1.7935779816513762, "no_speech_prob": 0.006487969774752855}, {"id": 72, "seek": 42616, "start": 433.92, "end": 439.20000000000005, "text": " a representation of a set of ordered pairs. Take the real valued function f of X equals", "tokens": [50752, 257, 10290, 295, 257, 992, 295, 8866, 15494, 13, 3664, 264, 957, 22608, 2445, 283, 295, 1783, 6915, 51016], "temperature": 0.0, "avg_logprob": -0.07350531444754652, "compression_ratio": 1.7935779816513762, "no_speech_prob": 0.006487969774752855}, {"id": 73, "seek": 42616, "start": 439.20000000000005, "end": 445.20000000000005, "text": " X squared on the reels. We can demonstrate it as a graph where each point on the graph is an ordered", "tokens": [51016, 1783, 8889, 322, 264, 319, 1625, 13, 492, 393, 11698, 309, 382, 257, 4295, 689, 1184, 935, 322, 264, 4295, 307, 364, 8866, 51316], "temperature": 0.0, "avg_logprob": -0.07350531444754652, "compression_ratio": 1.7935779816513762, "no_speech_prob": 0.006487969774752855}, {"id": 74, "seek": 42616, "start": 445.20000000000005, "end": 450.88, "text": " pair. So this graph represents the set of ordered pairs, which is just the rule of assignment defined", "tokens": [51316, 6119, 13, 407, 341, 4295, 8855, 264, 992, 295, 8866, 15494, 11, 597, 307, 445, 264, 4978, 295, 15187, 7642, 51600], "temperature": 0.0, "avg_logprob": -0.07350531444754652, "compression_ratio": 1.7935779816513762, "no_speech_prob": 0.006487969774752855}, {"id": 75, "seek": 45088, "start": 450.88, "end": 458.48, "text": " by the rule f of X equals X squared. So a function is just a set defined by this rule of assignment.", "tokens": [50364, 538, 264, 4978, 283, 295, 1783, 6915, 1783, 8889, 13, 407, 257, 2445, 307, 445, 257, 992, 7642, 538, 341, 4978, 295, 15187, 13, 50744], "temperature": 0.0, "avg_logprob": -0.07003644617592417, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.005910877138376236}, {"id": 76, "seek": 45088, "start": 459.36, "end": 463.76, "text": " Functions are at the heart of the axiom of choice, so let's briefly go over a few properties and", "tokens": [50788, 11166, 3916, 366, 412, 264, 1917, 295, 264, 6360, 72, 298, 295, 3922, 11, 370, 718, 311, 10515, 352, 670, 257, 1326, 7221, 293, 51008], "temperature": 0.0, "avg_logprob": -0.07003644617592417, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.005910877138376236}, {"id": 77, "seek": 45088, "start": 463.76, "end": 469.44, "text": " definitions. A function is defined between two sets, the domain, which is the set of inputs,", "tokens": [51008, 21988, 13, 316, 2445, 307, 7642, 1296, 732, 6352, 11, 264, 9274, 11, 597, 307, 264, 992, 295, 15743, 11, 51292], "temperature": 0.0, "avg_logprob": -0.07003644617592417, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.005910877138376236}, {"id": 78, "seek": 45088, "start": 469.44, "end": 474.48, "text": " and the co-domain, which contains the set of outputs. In our formal definition, if we have a", "tokens": [51292, 293, 264, 598, 12, 4121, 491, 11, 597, 8306, 264, 992, 295, 23930, 13, 682, 527, 9860, 7123, 11, 498, 321, 362, 257, 51544], "temperature": 0.0, "avg_logprob": -0.07003644617592417, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.005910877138376236}, {"id": 79, "seek": 45088, "start": 474.48, "end": 479.36, "text": " rule of assignment as set of ordered pairs, the domain is a set which the first element of the", "tokens": [51544, 4978, 295, 15187, 382, 992, 295, 8866, 15494, 11, 264, 9274, 307, 257, 992, 597, 264, 700, 4478, 295, 264, 51788], "temperature": 0.0, "avg_logprob": -0.07003644617592417, "compression_ratio": 1.859922178988327, "no_speech_prob": 0.005910877138376236}, {"id": 80, "seek": 47936, "start": 479.36, "end": 484.64, "text": " order pair comes from, and the co-domain is a set in which the second element of each order pair comes", "tokens": [50364, 1668, 6119, 1487, 490, 11, 293, 264, 598, 12, 4121, 491, 307, 257, 992, 294, 597, 264, 1150, 4478, 295, 1184, 1668, 6119, 1487, 50628], "temperature": 0.0, "avg_logprob": -0.06075976146915095, "compression_ratio": 2.0203252032520327, "no_speech_prob": 0.0023966452572494745}, {"id": 81, "seek": 47936, "start": 484.64, "end": 489.52000000000004, "text": " from. Technically speaking, a function is then formally defined as a triple consisting of the", "tokens": [50628, 490, 13, 42494, 4124, 11, 257, 2445, 307, 550, 25983, 7642, 382, 257, 15508, 33921, 295, 264, 50872], "temperature": 0.0, "avg_logprob": -0.06075976146915095, "compression_ratio": 2.0203252032520327, "no_speech_prob": 0.0023966452572494745}, {"id": 82, "seek": 47936, "start": 489.52000000000004, "end": 493.92, "text": " rule of assignment, the domain, and the co-domain, but for simplicity, we can just talk about the", "tokens": [50872, 4978, 295, 15187, 11, 264, 9274, 11, 293, 264, 598, 12, 4121, 491, 11, 457, 337, 25632, 11, 321, 393, 445, 751, 466, 264, 51092], "temperature": 0.0, "avg_logprob": -0.06075976146915095, "compression_ratio": 2.0203252032520327, "no_speech_prob": 0.0023966452572494745}, {"id": 83, "seek": 47936, "start": 493.92, "end": 499.68, "text": " rule of assignment. Indeed, the rule of assignment of a function maps each element of the domain to", "tokens": [51092, 4978, 295, 15187, 13, 15061, 11, 264, 4978, 295, 15187, 295, 257, 2445, 11317, 1184, 4478, 295, 264, 9274, 281, 51380], "temperature": 0.0, "avg_logprob": -0.06075976146915095, "compression_ratio": 2.0203252032520327, "no_speech_prob": 0.0023966452572494745}, {"id": 84, "seek": 47936, "start": 499.68, "end": 506.08000000000004, "text": " a unique element of the co-domain. Notice that the co-domain isn't necessarily the set of all outputs,", "tokens": [51380, 257, 3845, 4478, 295, 264, 598, 12, 4121, 491, 13, 13428, 300, 264, 598, 12, 4121, 491, 1943, 380, 4725, 264, 992, 295, 439, 23930, 11, 51700], "temperature": 0.0, "avg_logprob": -0.06075976146915095, "compression_ratio": 2.0203252032520327, "no_speech_prob": 0.0023966452572494745}, {"id": 85, "seek": 50608, "start": 506.08, "end": 510.56, "text": " that would be the image of the function. Like for f of x equals x squared,", "tokens": [50364, 300, 576, 312, 264, 3256, 295, 264, 2445, 13, 1743, 337, 283, 295, 2031, 6915, 2031, 8889, 11, 50588], "temperature": 0.0, "avg_logprob": -0.0631479335432293, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.0033764697145670652}, {"id": 86, "seek": 50608, "start": 510.56, "end": 515.36, "text": " not all real numbers are outputs of this function, in particular the negative numbers.", "tokens": [50588, 406, 439, 957, 3547, 366, 23930, 295, 341, 2445, 11, 294, 1729, 264, 3671, 3547, 13, 50828], "temperature": 0.0, "avg_logprob": -0.0631479335432293, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.0033764697145670652}, {"id": 87, "seek": 50608, "start": 515.36, "end": 520.96, "text": " If a function does map to all of the co-domain, such that the range is the co-domain, the function", "tokens": [50828, 759, 257, 2445, 775, 4471, 281, 439, 295, 264, 598, 12, 4121, 491, 11, 1270, 300, 264, 3613, 307, 264, 598, 12, 4121, 491, 11, 264, 2445, 51108], "temperature": 0.0, "avg_logprob": -0.0631479335432293, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.0033764697145670652}, {"id": 88, "seek": 50608, "start": 520.96, "end": 527.04, "text": " is called surjective, or onto. Now, looking at the domain, while each element can only be mapped", "tokens": [51108, 307, 1219, 1022, 1020, 488, 11, 420, 3911, 13, 823, 11, 1237, 412, 264, 9274, 11, 1339, 1184, 4478, 393, 787, 312, 33318, 51412], "temperature": 0.0, "avg_logprob": -0.0631479335432293, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.0033764697145670652}, {"id": 89, "seek": 50608, "start": 527.04, "end": 532.8, "text": " to one element in the co-domain, it doesn't mean two elements of the domain might end up mapping", "tokens": [51412, 281, 472, 4478, 294, 264, 598, 12, 4121, 491, 11, 309, 1177, 380, 914, 732, 4959, 295, 264, 9274, 1062, 917, 493, 18350, 51700], "temperature": 0.0, "avg_logprob": -0.0631479335432293, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.0033764697145670652}, {"id": 90, "seek": 53280, "start": 532.8, "end": 538.56, "text": " to the same element in the co-domain. In our f of x equals x squared example, negative two and", "tokens": [50364, 281, 264, 912, 4478, 294, 264, 598, 12, 4121, 491, 13, 682, 527, 283, 295, 2031, 6915, 2031, 8889, 1365, 11, 3671, 732, 293, 50652], "temperature": 0.0, "avg_logprob": -0.05377573263449747, "compression_ratio": 1.8674698795180722, "no_speech_prob": 0.014062442816793919}, {"id": 91, "seek": 53280, "start": 538.56, "end": 545.1999999999999, "text": " positive two map to the same element, four. But if it happens that distinct elements in the domain", "tokens": [50652, 3353, 732, 4471, 281, 264, 912, 4478, 11, 1451, 13, 583, 498, 309, 2314, 300, 10644, 4959, 294, 264, 9274, 50984], "temperature": 0.0, "avg_logprob": -0.05377573263449747, "compression_ratio": 1.8674698795180722, "no_speech_prob": 0.014062442816793919}, {"id": 92, "seek": 53280, "start": 545.1999999999999, "end": 550.4799999999999, "text": " are mapped to distinct elements in the co-domain, then that function is called injective, or one", "tokens": [50984, 366, 33318, 281, 10644, 4959, 294, 264, 598, 12, 4121, 491, 11, 550, 300, 2445, 307, 1219, 10711, 488, 11, 420, 472, 51248], "temperature": 0.0, "avg_logprob": -0.05377573263449747, "compression_ratio": 1.8674698795180722, "no_speech_prob": 0.014062442816793919}, {"id": 93, "seek": 53280, "start": 550.4799999999999, "end": 557.04, "text": " to one. If a function is both surjective and injective, such a function is called bijective.", "tokens": [51248, 281, 472, 13, 759, 257, 2445, 307, 1293, 1022, 1020, 488, 293, 10711, 488, 11, 1270, 257, 2445, 307, 1219, 3228, 1020, 488, 13, 51576], "temperature": 0.0, "avg_logprob": -0.05377573263449747, "compression_ratio": 1.8674698795180722, "no_speech_prob": 0.014062442816793919}, {"id": 94, "seek": 53280, "start": 557.68, "end": 562.0, "text": " There's a lot more we can dig into, but I think we're ready for a formal approach", "tokens": [51608, 821, 311, 257, 688, 544, 321, 393, 2528, 666, 11, 457, 286, 519, 321, 434, 1919, 337, 257, 9860, 3109, 51824], "temperature": 0.0, "avg_logprob": -0.05377573263449747, "compression_ratio": 1.8674698795180722, "no_speech_prob": 0.014062442816793919}, {"id": 95, "seek": 56200, "start": 562.0, "end": 567.84, "text": " to the axiom of choice. Take a set x, which is a collection of sets which are non-empty,", "tokens": [50364, 281, 264, 6360, 72, 298, 295, 3922, 13, 3664, 257, 992, 2031, 11, 597, 307, 257, 5765, 295, 6352, 597, 366, 2107, 12, 4543, 88, 11, 50656], "temperature": 0.0, "avg_logprob": -0.06872105366975359, "compression_ratio": 1.7327188940092166, "no_speech_prob": 0.00218263384886086}, {"id": 96, "seek": 56200, "start": 567.84, "end": 574.0, "text": " meaning each element of x is a set that contains something. The axiom of choice says that there", "tokens": [50656, 3620, 1184, 4478, 295, 2031, 307, 257, 992, 300, 8306, 746, 13, 440, 6360, 72, 298, 295, 3922, 1619, 300, 456, 50964], "temperature": 0.0, "avg_logprob": -0.06872105366975359, "compression_ratio": 1.7327188940092166, "no_speech_prob": 0.00218263384886086}, {"id": 97, "seek": 56200, "start": 574.0, "end": 581.76, "text": " is a function which, for every set in x, chooses an element inside that set. Such a function is", "tokens": [50964, 307, 257, 2445, 597, 11, 337, 633, 992, 294, 2031, 11, 25963, 364, 4478, 1854, 300, 992, 13, 9653, 257, 2445, 307, 51352], "temperature": 0.0, "avg_logprob": -0.06872105366975359, "compression_ratio": 1.7327188940092166, "no_speech_prob": 0.00218263384886086}, {"id": 98, "seek": 56200, "start": 581.76, "end": 588.64, "text": " called a choice function of x. When you hear like that, it seems a bit underwhelming, but let's", "tokens": [51352, 1219, 257, 3922, 2445, 295, 2031, 13, 1133, 291, 1568, 411, 300, 11, 309, 2544, 257, 857, 833, 8746, 2810, 11, 457, 718, 311, 51696], "temperature": 0.0, "avg_logprob": -0.06872105366975359, "compression_ratio": 1.7327188940092166, "no_speech_prob": 0.00218263384886086}, {"id": 99, "seek": 58864, "start": 588.64, "end": 594.8, "text": " look at the machinery of what's going on here. So our domain is a set of these non-empty sets,", "tokens": [50364, 574, 412, 264, 27302, 295, 437, 311, 516, 322, 510, 13, 407, 527, 9274, 307, 257, 992, 295, 613, 2107, 12, 4543, 88, 6352, 11, 50672], "temperature": 0.0, "avg_logprob": -0.043984430645583966, "compression_ratio": 1.9846938775510203, "no_speech_prob": 0.0019877119921147823}, {"id": 100, "seek": 58864, "start": 594.8, "end": 600.8, "text": " then our co-domain is a set of all the elements in each of these sets, since our output will always", "tokens": [50672, 550, 527, 598, 12, 4121, 491, 307, 257, 992, 295, 439, 264, 4959, 294, 1184, 295, 613, 6352, 11, 1670, 527, 5598, 486, 1009, 50972], "temperature": 0.0, "avg_logprob": -0.043984430645583966, "compression_ratio": 1.9846938775510203, "no_speech_prob": 0.0019877119921147823}, {"id": 101, "seek": 58864, "start": 600.8, "end": 608.16, "text": " be in one of these sets. So the co-domain is a union of all these non-empty sets. Just imagine", "tokens": [50972, 312, 294, 472, 295, 613, 6352, 13, 407, 264, 598, 12, 4121, 491, 307, 257, 11671, 295, 439, 613, 2107, 12, 4543, 88, 6352, 13, 1449, 3811, 51340], "temperature": 0.0, "avg_logprob": -0.043984430645583966, "compression_ratio": 1.9846938775510203, "no_speech_prob": 0.0019877119921147823}, {"id": 102, "seek": 58864, "start": 608.16, "end": 614.48, "text": " that these non-empty sets in x are boxes containing some mathematical things, then our co-domain is", "tokens": [51340, 300, 613, 2107, 12, 4543, 88, 6352, 294, 2031, 366, 9002, 19273, 512, 18894, 721, 11, 550, 527, 598, 12, 4121, 491, 307, 51656], "temperature": 0.0, "avg_logprob": -0.043984430645583966, "compression_ratio": 1.9846938775510203, "no_speech_prob": 0.0019877119921147823}, {"id": 103, "seek": 61448, "start": 614.48, "end": 620.88, "text": " just a big box where you dump all the contents of these boxes into. Then the co-domain is a set of", "tokens": [50364, 445, 257, 955, 2424, 689, 291, 11430, 439, 264, 15768, 295, 613, 9002, 666, 13, 1396, 264, 598, 12, 4121, 491, 307, 257, 992, 295, 50684], "temperature": 0.0, "avg_logprob": -0.05372701241419865, "compression_ratio": 1.8240740740740742, "no_speech_prob": 0.0023231091909110546}, {"id": 104, "seek": 61448, "start": 620.88, "end": 627.52, "text": " all the possible elements we can choose from, and our choice function chooses one for each element of", "tokens": [50684, 439, 264, 1944, 4959, 321, 393, 2826, 490, 11, 293, 527, 3922, 2445, 25963, 472, 337, 1184, 4478, 295, 51016], "temperature": 0.0, "avg_logprob": -0.05372701241419865, "compression_ratio": 1.8240740740740742, "no_speech_prob": 0.0023231091909110546}, {"id": 105, "seek": 61448, "start": 627.52, "end": 634.24, "text": " x. We call this the union set of x, which we can also denote with the big union symbol like this.", "tokens": [51016, 2031, 13, 492, 818, 341, 264, 11671, 992, 295, 2031, 11, 597, 321, 393, 611, 45708, 365, 264, 955, 11671, 5986, 411, 341, 13, 51352], "temperature": 0.0, "avg_logprob": -0.05372701241419865, "compression_ratio": 1.8240740740740742, "no_speech_prob": 0.0023231091909110546}, {"id": 106, "seek": 61448, "start": 635.2, "end": 641.9200000000001, "text": " Then we say that there is a function from x to the union set of x, such that f of x is in x for", "tokens": [51400, 1396, 321, 584, 300, 456, 307, 257, 2445, 490, 2031, 281, 264, 11671, 992, 295, 2031, 11, 1270, 300, 283, 295, 2031, 307, 294, 2031, 337, 51736], "temperature": 0.0, "avg_logprob": -0.05372701241419865, "compression_ratio": 1.8240740740740742, "no_speech_prob": 0.0023231091909110546}, {"id": 107, "seek": 64192, "start": 641.92, "end": 651.8399999999999, "text": " each x and big x. So f of x basically chooses an element in the non-empty set x. Now the axiom of", "tokens": [50364, 1184, 2031, 293, 955, 2031, 13, 407, 283, 295, 2031, 1936, 25963, 364, 4478, 294, 264, 2107, 12, 4543, 88, 992, 2031, 13, 823, 264, 6360, 72, 298, 295, 50860], "temperature": 0.0, "avg_logprob": -0.07409847224200214, "compression_ratio": 1.620253164556962, "no_speech_prob": 0.0018101776950061321}, {"id": 108, "seek": 64192, "start": 651.8399999999999, "end": 656.9599999999999, "text": " choice doesn't actually give us a way to find this function or what this function looks like.", "tokens": [50860, 3922, 1177, 380, 767, 976, 505, 257, 636, 281, 915, 341, 2445, 420, 437, 341, 2445, 1542, 411, 13, 51116], "temperature": 0.0, "avg_logprob": -0.07409847224200214, "compression_ratio": 1.620253164556962, "no_speech_prob": 0.0018101776950061321}, {"id": 109, "seek": 64192, "start": 656.9599999999999, "end": 664.64, "text": " It just declares that for any set of non-empty sets x, such a function must exist. So why is this", "tokens": [51116, 467, 445, 979, 19415, 300, 337, 604, 992, 295, 2107, 12, 4543, 88, 6352, 2031, 11, 1270, 257, 2445, 1633, 2514, 13, 407, 983, 307, 341, 51500], "temperature": 0.0, "avg_logprob": -0.07409847224200214, "compression_ratio": 1.620253164556962, "no_speech_prob": 0.0018101776950061321}, {"id": 110, "seek": 64192, "start": 664.64, "end": 671.52, "text": " axiom so important or even necessary? It feels, well, a bit obvious. Well, that's because most", "tokens": [51500, 6360, 72, 298, 370, 1021, 420, 754, 4818, 30, 467, 3417, 11, 731, 11, 257, 857, 6322, 13, 1042, 11, 300, 311, 570, 881, 51844], "temperature": 0.0, "avg_logprob": -0.07409847224200214, "compression_ratio": 1.620253164556962, "no_speech_prob": 0.0018101776950061321}, {"id": 111, "seek": 67152, "start": 671.52, "end": 677.04, "text": " of us live in a finite mindset. If we have a finite number of sets, we can easily prove that such a", "tokens": [50364, 295, 505, 1621, 294, 257, 19362, 12543, 13, 759, 321, 362, 257, 19362, 1230, 295, 6352, 11, 321, 393, 3612, 7081, 300, 1270, 257, 50640], "temperature": 0.0, "avg_logprob": -0.051382436752319335, "compression_ratio": 1.7885462555066078, "no_speech_prob": 0.0008830183651298285}, {"id": 112, "seek": 67152, "start": 677.04, "end": 683.1999999999999, "text": " choice function must exist using a technique called induction. You don't need an axiom to make finite", "tokens": [50640, 3922, 2445, 1633, 2514, 1228, 257, 6532, 1219, 33371, 13, 509, 500, 380, 643, 364, 6360, 72, 298, 281, 652, 19362, 50948], "temperature": 0.0, "avg_logprob": -0.051382436752319335, "compression_ratio": 1.7885462555066078, "no_speech_prob": 0.0008830183651298285}, {"id": 113, "seek": 67152, "start": 683.1999999999999, "end": 690.24, "text": " choices. In fact, even some infinite choices don't really need the axiom of choice. Take the set of", "tokens": [50948, 7994, 13, 682, 1186, 11, 754, 512, 13785, 7994, 500, 380, 534, 643, 264, 6360, 72, 298, 295, 3922, 13, 3664, 264, 992, 295, 51300], "temperature": 0.0, "avg_logprob": -0.051382436752319335, "compression_ratio": 1.7885462555066078, "no_speech_prob": 0.0008830183651298285}, {"id": 114, "seek": 67152, "start": 690.24, "end": 696.56, "text": " all possible subsets of the natural numbers called the power set of the naturals. Then a choice function", "tokens": [51300, 439, 1944, 2090, 1385, 295, 264, 3303, 3547, 1219, 264, 1347, 992, 295, 264, 26389, 1124, 13, 1396, 257, 3922, 2445, 51616], "temperature": 0.0, "avg_logprob": -0.051382436752319335, "compression_ratio": 1.7885462555066078, "no_speech_prob": 0.0008830183651298285}, {"id": 115, "seek": 69656, "start": 696.56, "end": 702.7199999999999, "text": " f for the power set of n chooses a natural number from each possible subset of the naturals.", "tokens": [50364, 283, 337, 264, 1347, 992, 295, 297, 25963, 257, 3303, 1230, 490, 1184, 1944, 25993, 295, 264, 26389, 1124, 13, 50672], "temperature": 0.0, "avg_logprob": -0.062333257574784126, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.00884674396365881}, {"id": 116, "seek": 69656, "start": 702.7199999999999, "end": 708.9599999999999, "text": " So the domain is the power set of n and the co-domain is a set of naturals. But we really", "tokens": [50672, 407, 264, 9274, 307, 264, 1347, 992, 295, 297, 293, 264, 598, 12, 4121, 491, 307, 257, 992, 295, 26389, 1124, 13, 583, 321, 534, 50984], "temperature": 0.0, "avg_logprob": -0.062333257574784126, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.00884674396365881}, {"id": 117, "seek": 69656, "start": 708.9599999999999, "end": 714.9599999999999, "text": " don't need the axiom of choice to show that a choice function exists. For example, you can easily", "tokens": [50984, 500, 380, 643, 264, 6360, 72, 298, 295, 3922, 281, 855, 300, 257, 3922, 2445, 8198, 13, 1171, 1365, 11, 291, 393, 3612, 51284], "temperature": 0.0, "avg_logprob": -0.062333257574784126, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.00884674396365881}, {"id": 118, "seek": 69656, "start": 714.9599999999999, "end": 720.7199999999999, "text": " define a choice function by just choosing the smallest element in each subset. By the properties", "tokens": [51284, 6964, 257, 3922, 2445, 538, 445, 10875, 264, 16998, 4478, 294, 1184, 25993, 13, 3146, 264, 7221, 51572], "temperature": 0.0, "avg_logprob": -0.062333257574784126, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.00884674396365881}, {"id": 119, "seek": 72072, "start": 720.72, "end": 727.6, "text": " of the naturals, every subset contains the smallest element. So again, we don't need a c to show that", "tokens": [50364, 295, 264, 26389, 1124, 11, 633, 25993, 8306, 264, 16998, 4478, 13, 407, 797, 11, 321, 500, 380, 643, 257, 269, 281, 855, 300, 50708], "temperature": 0.0, "avg_logprob": -0.05144269340916684, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.002631629118695855}, {"id": 120, "seek": 72072, "start": 727.6, "end": 735.0400000000001, "text": " a choice function exists. But the universe of sets is much, much bigger than the naturals. For", "tokens": [50708, 257, 3922, 2445, 8198, 13, 583, 264, 6445, 295, 6352, 307, 709, 11, 709, 3801, 813, 264, 26389, 1124, 13, 1171, 51080], "temperature": 0.0, "avg_logprob": -0.05144269340916684, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.002631629118695855}, {"id": 121, "seek": 72072, "start": 735.0400000000001, "end": 740.8000000000001, "text": " example, the real numbers live in a bigger size of infinity than the naturals called uncountable", "tokens": [51080, 1365, 11, 264, 957, 3547, 1621, 294, 257, 3801, 2744, 295, 13202, 813, 264, 26389, 1124, 1219, 6219, 792, 712, 51368], "temperature": 0.0, "avg_logprob": -0.05144269340916684, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.002631629118695855}, {"id": 122, "seek": 72072, "start": 740.8000000000001, "end": 747.84, "text": " infinity. But we can also define bigger infinities by using something called ordinals. In essence,", "tokens": [51368, 13202, 13, 583, 321, 393, 611, 6964, 3801, 7193, 1088, 538, 1228, 746, 1219, 25376, 1124, 13, 682, 12801, 11, 51720], "temperature": 0.0, "avg_logprob": -0.05144269340916684, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.002631629118695855}, {"id": 123, "seek": 74784, "start": 747.84, "end": 753.6, "text": " we can define bigger and bigger infinities by describing what are called different order types", "tokens": [50364, 321, 393, 6964, 3801, 293, 3801, 7193, 1088, 538, 16141, 437, 366, 1219, 819, 1668, 3467, 50652], "temperature": 0.0, "avg_logprob": -0.05882867019955475, "compression_ratio": 1.6041666666666667, "no_speech_prob": 0.004069851245731115}, {"id": 124, "seek": 74784, "start": 753.6, "end": 759.9200000000001, "text": " of the same size. It's definitely out of the scope of this video, but the point is sets can get", "tokens": [50652, 295, 264, 912, 2744, 13, 467, 311, 2138, 484, 295, 264, 11923, 295, 341, 960, 11, 457, 264, 935, 307, 6352, 393, 483, 50968], "temperature": 0.0, "avg_logprob": -0.05882867019955475, "compression_ratio": 1.6041666666666667, "no_speech_prob": 0.004069851245731115}, {"id": 125, "seek": 74784, "start": 759.9200000000001, "end": 766.8000000000001, "text": " stupidly unfathomably large. And so if we want to make these uncountably infinite number of choices,", "tokens": [50968, 6631, 356, 3971, 998, 298, 1188, 2416, 13, 400, 370, 498, 321, 528, 281, 652, 613, 6219, 792, 1188, 13785, 1230, 295, 7994, 11, 51312], "temperature": 0.0, "avg_logprob": -0.05882867019955475, "compression_ratio": 1.6041666666666667, "no_speech_prob": 0.004069851245731115}, {"id": 126, "seek": 74784, "start": 766.8000000000001, "end": 773.0400000000001, "text": " well, we can't just do that using any of our zf axioms. We need the axiom of choice to assume", "tokens": [51312, 731, 11, 321, 393, 380, 445, 360, 300, 1228, 604, 295, 527, 710, 69, 6360, 72, 4785, 13, 492, 643, 264, 6360, 72, 298, 295, 3922, 281, 6552, 51624], "temperature": 0.0, "avg_logprob": -0.05882867019955475, "compression_ratio": 1.6041666666666667, "no_speech_prob": 0.004069851245731115}, {"id": 127, "seek": 77304, "start": 773.04, "end": 779.12, "text": " that we can make these infinitely many choices, no matter how incomprehensibly large our sets", "tokens": [50364, 300, 321, 393, 652, 613, 36227, 867, 7994, 11, 572, 1871, 577, 14036, 40128, 694, 3545, 2416, 527, 6352, 50668], "temperature": 0.0, "avg_logprob": -0.054510562977892286, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.010650908574461937}, {"id": 128, "seek": 77304, "start": 779.12, "end": 785.76, "text": " can get. And it turns out that making these choices is necessary even for the most seemingly obvious", "tokens": [50668, 393, 483, 13, 400, 309, 4523, 484, 300, 1455, 613, 7994, 307, 4818, 754, 337, 264, 881, 18709, 6322, 51000], "temperature": 0.0, "avg_logprob": -0.054510562977892286, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.010650908574461937}, {"id": 129, "seek": 77304, "start": 785.76, "end": 792.9599999999999, "text": " theorems about sets. For example, let a function f from x to y be surjective. Remember, it means", "tokens": [51000, 10299, 2592, 466, 6352, 13, 1171, 1365, 11, 718, 257, 2445, 283, 490, 2031, 281, 288, 312, 1022, 1020, 488, 13, 5459, 11, 309, 1355, 51360], "temperature": 0.0, "avg_logprob": -0.054510562977892286, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.010650908574461937}, {"id": 130, "seek": 77304, "start": 792.9599999999999, "end": 799.12, "text": " all of its co domain is mapped by some element of the domain. Then does this imply that there exists", "tokens": [51360, 439, 295, 1080, 598, 9274, 307, 33318, 538, 512, 4478, 295, 264, 9274, 13, 1396, 775, 341, 33616, 300, 456, 8198, 51668], "temperature": 0.0, "avg_logprob": -0.054510562977892286, "compression_ratio": 1.6065573770491803, "no_speech_prob": 0.010650908574461937}, {"id": 131, "seek": 79912, "start": 799.12, "end": 806.24, "text": " an injective function g from y to x, that is, a function where two distinct elements of y are", "tokens": [50364, 364, 10711, 488, 2445, 290, 490, 288, 281, 2031, 11, 300, 307, 11, 257, 2445, 689, 732, 10644, 4959, 295, 288, 366, 50720], "temperature": 0.0, "avg_logprob": -0.0971365891970121, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004198688082396984}, {"id": 132, "seek": 79912, "start": 806.24, "end": 812.48, "text": " always mapped to distinct elements in x? Well, let's think about this. By the surjectivity of f,", "tokens": [50720, 1009, 33318, 281, 10644, 4959, 294, 2031, 30, 1042, 11, 718, 311, 519, 466, 341, 13, 3146, 264, 1022, 1020, 4253, 295, 283, 11, 51032], "temperature": 0.0, "avg_logprob": -0.0971365891970121, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004198688082396984}, {"id": 133, "seek": 79912, "start": 812.48, "end": 818.96, "text": " each element in y is mapped by some x in x. So simple. Let's just let g of y be this x.", "tokens": [51032, 1184, 4478, 294, 288, 307, 33318, 538, 512, 2031, 294, 2031, 13, 407, 2199, 13, 961, 311, 445, 718, 290, 295, 288, 312, 341, 2031, 13, 51356], "temperature": 0.0, "avg_logprob": -0.0971365891970121, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004198688082396984}, {"id": 134, "seek": 79912, "start": 819.92, "end": 827.12, "text": " But wait, there is no guarantee that f is injective. So there could be multiple x's in x", "tokens": [51404, 583, 1699, 11, 456, 307, 572, 10815, 300, 283, 307, 10711, 488, 13, 407, 456, 727, 312, 3866, 2031, 311, 294, 2031, 51764], "temperature": 0.0, "avg_logprob": -0.0971365891970121, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004198688082396984}, {"id": 135, "seek": 82712, "start": 827.12, "end": 834.88, "text": " that map to this y. So if x1 and x2 both map to y by f, which one do we choose for our g?", "tokens": [50364, 300, 4471, 281, 341, 288, 13, 407, 498, 2031, 16, 293, 2031, 17, 1293, 4471, 281, 288, 538, 283, 11, 597, 472, 360, 321, 2826, 337, 527, 290, 30, 50752], "temperature": 0.0, "avg_logprob": -0.06785897204750463, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.026351649314165115}, {"id": 136, "seek": 82712, "start": 836.16, "end": 842.24, "text": " Clearly, we need the axiom of choice to choose, arbitrarily, some element to map y to.", "tokens": [50816, 24120, 11, 321, 643, 264, 6360, 72, 298, 295, 3922, 281, 2826, 11, 19071, 3289, 11, 512, 4478, 281, 4471, 288, 281, 13, 51120], "temperature": 0.0, "avg_logprob": -0.06785897204750463, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.026351649314165115}, {"id": 137, "seek": 82712, "start": 843.12, "end": 848.5600000000001, "text": " This is how we'd formally state this. Let x sub y be the set of all elements in x such that f", "tokens": [51164, 639, 307, 577, 321, 1116, 25983, 1785, 341, 13, 961, 2031, 1422, 288, 312, 264, 992, 295, 439, 4959, 294, 2031, 1270, 300, 283, 51436], "temperature": 0.0, "avg_logprob": -0.06785897204750463, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.026351649314165115}, {"id": 138, "seek": 82712, "start": 848.5600000000001, "end": 855.2, "text": " of x is equal to y. So this is the set of x's from which we'd like to choose what to map y to.", "tokens": [51436, 295, 2031, 307, 2681, 281, 288, 13, 407, 341, 307, 264, 992, 295, 2031, 311, 490, 597, 321, 1116, 411, 281, 2826, 437, 281, 4471, 288, 281, 13, 51768], "temperature": 0.0, "avg_logprob": -0.06785897204750463, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.026351649314165115}, {"id": 139, "seek": 85520, "start": 855.84, "end": 860.08, "text": " Think of like we're watching The Bachelors and this is the set of all candidates for g of y.", "tokens": [50396, 6557, 295, 411, 321, 434, 1976, 440, 363, 8188, 830, 293, 341, 307, 264, 992, 295, 439, 11255, 337, 290, 295, 288, 13, 50608], "temperature": 0.0, "avg_logprob": -0.07570678408783262, "compression_ratio": 1.7259615384615385, "no_speech_prob": 0.005219834856688976}, {"id": 140, "seek": 85520, "start": 860.96, "end": 867.76, "text": " Notice that x sub y is a subset of x. Since our choice function, let's call h,", "tokens": [50652, 13428, 300, 2031, 1422, 288, 307, 257, 25993, 295, 2031, 13, 4162, 527, 3922, 2445, 11, 718, 311, 818, 276, 11, 50992], "temperature": 0.0, "avg_logprob": -0.07570678408783262, "compression_ratio": 1.7259615384615385, "no_speech_prob": 0.005219834856688976}, {"id": 141, "seek": 85520, "start": 867.76, "end": 873.9200000000001, "text": " wants to choose an element of this subset, its inputs are the subsets of x. So the domain of", "tokens": [50992, 2738, 281, 2826, 364, 4478, 295, 341, 25993, 11, 1080, 15743, 366, 264, 2090, 1385, 295, 2031, 13, 407, 264, 9274, 295, 51300], "temperature": 0.0, "avg_logprob": -0.07570678408783262, "compression_ratio": 1.7259615384615385, "no_speech_prob": 0.005219834856688976}, {"id": 142, "seek": 85520, "start": 873.9200000000001, "end": 880.4000000000001, "text": " our choice function h can be the set of all subsets of x. That's the power set of x. Remember,", "tokens": [51300, 527, 3922, 2445, 276, 393, 312, 264, 992, 295, 439, 2090, 1385, 295, 2031, 13, 663, 311, 264, 1347, 992, 295, 2031, 13, 5459, 11, 51624], "temperature": 0.0, "avg_logprob": -0.07570678408783262, "compression_ratio": 1.7259615384615385, "no_speech_prob": 0.005219834856688976}, {"id": 143, "seek": 88040, "start": 880.4, "end": 885.68, "text": " this is the set of all subsets of x. So x sub y is an element of the power set of x.", "tokens": [50364, 341, 307, 264, 992, 295, 439, 2090, 1385, 295, 2031, 13, 407, 2031, 1422, 288, 307, 364, 4478, 295, 264, 1347, 992, 295, 2031, 13, 50628], "temperature": 0.0, "avg_logprob": -0.09863951057195663, "compression_ratio": 1.778225806451613, "no_speech_prob": 0.0026315313298255205}, {"id": 144, "seek": 88040, "start": 886.3199999999999, "end": 891.68, "text": " But recall that ac requires our domain to contain only non-empty sets. So we do have", "tokens": [50660, 583, 9901, 300, 696, 7029, 527, 9274, 281, 5304, 787, 2107, 12, 4543, 88, 6352, 13, 407, 321, 360, 362, 50928], "temperature": 0.0, "avg_logprob": -0.09863951057195663, "compression_ratio": 1.778225806451613, "no_speech_prob": 0.0026315313298255205}, {"id": 145, "seek": 88040, "start": 891.68, "end": 898.48, "text": " to remove the empty set, which is technically a subset of x. Okay, then its co-domain is the", "tokens": [50928, 281, 4159, 264, 6707, 992, 11, 597, 307, 12120, 257, 25993, 295, 2031, 13, 1033, 11, 550, 1080, 598, 12, 4121, 491, 307, 264, 51268], "temperature": 0.0, "avg_logprob": -0.09863951057195663, "compression_ratio": 1.778225806451613, "no_speech_prob": 0.0026315313298255205}, {"id": 146, "seek": 88040, "start": 898.48, "end": 905.04, "text": " union set of p of x. But clearly, this is just x. I mean, everything in here is just a subset of x,", "tokens": [51268, 11671, 992, 295, 280, 295, 2031, 13, 583, 4448, 11, 341, 307, 445, 2031, 13, 286, 914, 11, 1203, 294, 510, 307, 445, 257, 25993, 295, 2031, 11, 51596], "temperature": 0.0, "avg_logprob": -0.09863951057195663, "compression_ratio": 1.778225806451613, "no_speech_prob": 0.0026315313298255205}, {"id": 147, "seek": 88040, "start": 905.04, "end": 908.56, "text": " so you dump all of its elements into one big collection, it's just gonna be x.", "tokens": [51596, 370, 291, 11430, 439, 295, 1080, 4959, 666, 472, 955, 5765, 11, 309, 311, 445, 799, 312, 2031, 13, 51772], "temperature": 0.0, "avg_logprob": -0.09863951057195663, "compression_ratio": 1.778225806451613, "no_speech_prob": 0.0026315313298255205}, {"id": 148, "seek": 90856, "start": 909.3599999999999, "end": 916.9599999999999, "text": " So the axiom of choice affirms that there exists a choice function h from p of x minus 0 to x.", "tokens": [50404, 407, 264, 6360, 72, 298, 295, 3922, 36315, 2592, 300, 456, 8198, 257, 3922, 2445, 276, 490, 280, 295, 2031, 3175, 1958, 281, 2031, 13, 50784], "temperature": 0.0, "avg_logprob": -0.08234520469393049, "compression_ratio": 1.5675675675675675, "no_speech_prob": 0.0014550413470715284}, {"id": 149, "seek": 90856, "start": 917.76, "end": 924.7199999999999, "text": " In particular, h of x sub y will be in x sub y, meaning h of x of y is guaranteed", "tokens": [50824, 682, 1729, 11, 276, 295, 2031, 1422, 288, 486, 312, 294, 2031, 1422, 288, 11, 3620, 276, 295, 2031, 295, 288, 307, 18031, 51172], "temperature": 0.0, "avg_logprob": -0.08234520469393049, "compression_ratio": 1.5675675675675675, "no_speech_prob": 0.0014550413470715284}, {"id": 150, "seek": 90856, "start": 924.7199999999999, "end": 930.0, "text": " to be one of our bachelors. So that's how we'll define g. For every y and y,", "tokens": [51172, 281, 312, 472, 295, 527, 272, 8188, 830, 13, 407, 300, 311, 577, 321, 603, 6964, 290, 13, 1171, 633, 288, 293, 288, 11, 51436], "temperature": 0.0, "avg_logprob": -0.08234520469393049, "compression_ratio": 1.5675675675675675, "no_speech_prob": 0.0014550413470715284}, {"id": 151, "seek": 90856, "start": 930.0, "end": 937.52, "text": " let g of y just be h of x sub y. Let's show that g is injective. If y is not equal to y prime,", "tokens": [51436, 718, 290, 295, 288, 445, 312, 276, 295, 2031, 1422, 288, 13, 961, 311, 855, 300, 290, 307, 10711, 488, 13, 759, 288, 307, 406, 2681, 281, 288, 5835, 11, 51812], "temperature": 0.0, "avg_logprob": -0.08234520469393049, "compression_ratio": 1.5675675675675675, "no_speech_prob": 0.0014550413470715284}, {"id": 152, "seek": 93752, "start": 937.52, "end": 941.92, "text": " then xy and xy prime must be disjoint, meaning they have no elements in common.", "tokens": [50364, 550, 2031, 88, 293, 2031, 88, 5835, 1633, 312, 717, 48613, 11, 3620, 436, 362, 572, 4959, 294, 2689, 13, 50584], "temperature": 0.0, "avg_logprob": -0.07448212155755961, "compression_ratio": 1.8407960199004976, "no_speech_prob": 0.004468163009732962}, {"id": 153, "seek": 93752, "start": 942.48, "end": 949.92, "text": " Indeed, if x was in both xy and xy prime, it would mean that f of x equals y and f of x equals y", "tokens": [50612, 15061, 11, 498, 2031, 390, 294, 1293, 2031, 88, 293, 2031, 88, 5835, 11, 309, 576, 914, 300, 283, 295, 2031, 6915, 288, 293, 283, 295, 2031, 6915, 288, 50984], "temperature": 0.0, "avg_logprob": -0.07448212155755961, "compression_ratio": 1.8407960199004976, "no_speech_prob": 0.004468163009732962}, {"id": 154, "seek": 93752, "start": 949.92, "end": 956.0, "text": " prime, which contradicts the rules for functions, that each element is mapped to a unique output.", "tokens": [50984, 5835, 11, 597, 28900, 82, 264, 4474, 337, 6828, 11, 300, 1184, 4478, 307, 33318, 281, 257, 3845, 5598, 13, 51288], "temperature": 0.0, "avg_logprob": -0.07448212155755961, "compression_ratio": 1.8407960199004976, "no_speech_prob": 0.004468163009732962}, {"id": 155, "seek": 93752, "start": 956.0, "end": 964.0799999999999, "text": " So if xy is disjoint from xy prime, any element in xy is distinct from any element in xy prime.", "tokens": [51288, 407, 498, 2031, 88, 307, 717, 48613, 490, 2031, 88, 5835, 11, 604, 4478, 294, 2031, 88, 307, 10644, 490, 604, 4478, 294, 2031, 88, 5835, 13, 51692], "temperature": 0.0, "avg_logprob": -0.07448212155755961, "compression_ratio": 1.8407960199004976, "no_speech_prob": 0.004468163009732962}, {"id": 156, "seek": 96408, "start": 964.08, "end": 972.96, "text": " So g of y equals hxy is not equal to gy prime equals hxy prime. So g is injective.", "tokens": [50364, 407, 290, 295, 288, 6915, 276, 12876, 307, 406, 2681, 281, 15823, 5835, 6915, 276, 12876, 5835, 13, 407, 290, 307, 10711, 488, 13, 50808], "temperature": 0.0, "avg_logprob": -0.06393454209813532, "compression_ratio": 1.7783251231527093, "no_speech_prob": 0.0007553811301477253}, {"id": 157, "seek": 96408, "start": 974.1600000000001, "end": 979.76, "text": " So that's how you apply the axiom of choice in a proof. And the axiom of choice appears a lot", "tokens": [50868, 407, 300, 311, 577, 291, 3079, 264, 6360, 72, 298, 295, 3922, 294, 257, 8177, 13, 400, 264, 6360, 72, 298, 295, 3922, 7038, 257, 688, 51148], "temperature": 0.0, "avg_logprob": -0.06393454209813532, "compression_ratio": 1.7783251231527093, "no_speech_prob": 0.0007553811301477253}, {"id": 158, "seek": 96408, "start": 979.76, "end": 986.24, "text": " in mathematics. In fact, it is equivalent over zf to a lot of statements. And when I say that two", "tokens": [51148, 294, 18666, 13, 682, 1186, 11, 309, 307, 10344, 670, 710, 69, 281, 257, 688, 295, 12363, 13, 400, 562, 286, 584, 300, 732, 51472], "temperature": 0.0, "avg_logprob": -0.06393454209813532, "compression_ratio": 1.7783251231527093, "no_speech_prob": 0.0007553811301477253}, {"id": 159, "seek": 96408, "start": 986.24, "end": 992.08, "text": " statements are equivalent over zf, it means that, assuming all the other axioms of zf,", "tokens": [51472, 12363, 366, 10344, 670, 710, 69, 11, 309, 1355, 300, 11, 11926, 439, 264, 661, 6360, 72, 4785, 295, 710, 69, 11, 51764], "temperature": 0.0, "avg_logprob": -0.06393454209813532, "compression_ratio": 1.7783251231527093, "no_speech_prob": 0.0007553811301477253}, {"id": 160, "seek": 99208, "start": 992.08, "end": 997.44, "text": " the statements imply one another. Basically, it means that the statements are the same.", "tokens": [50364, 264, 12363, 33616, 472, 1071, 13, 8537, 11, 309, 1355, 300, 264, 12363, 366, 264, 912, 13, 50632], "temperature": 0.0, "avg_logprob": -0.05650181716747498, "compression_ratio": 1.7725118483412323, "no_speech_prob": 0.004904916509985924}, {"id": 161, "seek": 99208, "start": 998.24, "end": 1005.12, "text": " They are simply different ways of stating the same innate fact. So saying ac is equivalent to", "tokens": [50672, 814, 366, 2935, 819, 2098, 295, 26688, 264, 912, 41766, 1186, 13, 407, 1566, 696, 307, 10344, 281, 51016], "temperature": 0.0, "avg_logprob": -0.05650181716747498, "compression_ratio": 1.7725118483412323, "no_speech_prob": 0.004904916509985924}, {"id": 162, "seek": 99208, "start": 1005.12, "end": 1011.2800000000001, "text": " some statement means if you want this statement to be true, you will need the axiom of choice.", "tokens": [51016, 512, 5629, 1355, 498, 291, 528, 341, 5629, 281, 312, 2074, 11, 291, 486, 643, 264, 6360, 72, 298, 295, 3922, 13, 51324], "temperature": 0.0, "avg_logprob": -0.05650181716747498, "compression_ratio": 1.7725118483412323, "no_speech_prob": 0.004904916509985924}, {"id": 163, "seek": 99208, "start": 1011.9200000000001, "end": 1018.1600000000001, "text": " So let's go over some equivalences of ac in set theory. One of the most important equivalences of", "tokens": [51356, 407, 718, 311, 352, 670, 512, 9052, 2667, 295, 696, 294, 992, 5261, 13, 1485, 295, 264, 881, 1021, 9052, 2667, 295, 51668], "temperature": 0.0, "avg_logprob": -0.05650181716747498, "compression_ratio": 1.7725118483412323, "no_speech_prob": 0.004904916509985924}, {"id": 164, "seek": 101816, "start": 1018.24, "end": 1023.4399999999999, "text": " ac is Zorn's lemma. But before we state Zorn's lemma, we need some preliminaries.", "tokens": [50368, 696, 307, 1176, 1865, 311, 7495, 1696, 13, 583, 949, 321, 1785, 1176, 1865, 311, 7495, 1696, 11, 321, 643, 512, 26414, 259, 4889, 13, 50628], "temperature": 0.0, "avg_logprob": -0.06483822484170237, "compression_ratio": 1.7182539682539681, "no_speech_prob": 0.00793757289648056}, {"id": 165, "seek": 101816, "start": 1024.08, "end": 1029.36, "text": " Let's say you wanted a way to compare elements of a set x. Then you can define what's called", "tokens": [50660, 961, 311, 584, 291, 1415, 257, 636, 281, 6794, 4959, 295, 257, 992, 2031, 13, 1396, 291, 393, 6964, 437, 311, 1219, 50924], "temperature": 0.0, "avg_logprob": -0.06483822484170237, "compression_ratio": 1.7182539682539681, "no_speech_prob": 0.00793757289648056}, {"id": 166, "seek": 101816, "start": 1029.36, "end": 1034.48, "text": " an ordering on that set. It has to satisfy some properties. First, it must be reflexive,", "tokens": [50924, 364, 21739, 322, 300, 992, 13, 467, 575, 281, 19319, 512, 7221, 13, 2386, 11, 309, 1633, 312, 23802, 488, 11, 51180], "temperature": 0.0, "avg_logprob": -0.06483822484170237, "compression_ratio": 1.7182539682539681, "no_speech_prob": 0.00793757289648056}, {"id": 167, "seek": 101816, "start": 1034.48, "end": 1039.6, "text": " meaning every element of x is related to itself. It must also be anti-symmetric,", "tokens": [51180, 3620, 633, 4478, 295, 2031, 307, 4077, 281, 2564, 13, 467, 1633, 611, 312, 6061, 12, 3187, 2174, 17475, 11, 51436], "temperature": 0.0, "avg_logprob": -0.06483822484170237, "compression_ratio": 1.7182539682539681, "no_speech_prob": 0.00793757289648056}, {"id": 168, "seek": 101816, "start": 1039.6, "end": 1046.24, "text": " meaning if x is related to y and y is related to x, this means x is equal to y. Finally,", "tokens": [51436, 3620, 498, 2031, 307, 4077, 281, 288, 293, 288, 307, 4077, 281, 2031, 11, 341, 1355, 2031, 307, 2681, 281, 288, 13, 6288, 11, 51768], "temperature": 0.0, "avg_logprob": -0.06483822484170237, "compression_ratio": 1.7182539682539681, "no_speech_prob": 0.00793757289648056}, {"id": 169, "seek": 104624, "start": 1046.32, "end": 1051.84, "text": " it must be transitive, meaning if x is related to y and y is related to z, then x is related to z.", "tokens": [50368, 309, 1633, 312, 1145, 2187, 11, 3620, 498, 2031, 307, 4077, 281, 288, 293, 288, 307, 4077, 281, 710, 11, 550, 2031, 307, 4077, 281, 710, 13, 50644], "temperature": 0.0, "avg_logprob": -0.0847624879542405, "compression_ratio": 1.8804780876494025, "no_speech_prob": 0.008314882405102253}, {"id": 170, "seek": 104624, "start": 1052.8, "end": 1057.76, "text": " A prime example of an ordering is the greater than or equal to relation on the set of numbers", "tokens": [50692, 316, 5835, 1365, 295, 364, 21739, 307, 264, 5044, 813, 420, 2681, 281, 9721, 322, 264, 992, 295, 3547, 50940], "temperature": 0.0, "avg_logprob": -0.0847624879542405, "compression_ratio": 1.8804780876494025, "no_speech_prob": 0.008314882405102253}, {"id": 171, "seek": 104624, "start": 1057.76, "end": 1062.96, "text": " like the integers and the reals. In fact, in general, we like to use this notation for", "tokens": [50940, 411, 264, 41674, 293, 264, 957, 82, 13, 682, 1186, 11, 294, 2674, 11, 321, 411, 281, 764, 341, 24657, 337, 51200], "temperature": 0.0, "avg_logprob": -0.0847624879542405, "compression_ratio": 1.8804780876494025, "no_speech_prob": 0.008314882405102253}, {"id": 172, "seek": 104624, "start": 1062.96, "end": 1067.28, "text": " orderings on sets, but of course there are many more orderings than just the greater than or equal.", "tokens": [51200, 1668, 1109, 322, 6352, 11, 457, 295, 1164, 456, 366, 867, 544, 1668, 1109, 813, 445, 264, 5044, 813, 420, 2681, 13, 51416], "temperature": 0.0, "avg_logprob": -0.0847624879542405, "compression_ratio": 1.8804780876494025, "no_speech_prob": 0.008314882405102253}, {"id": 173, "seek": 104624, "start": 1068.0, "end": 1073.84, "text": " For example, take the set inclusion relation, given by a is a subset of p, and the power set", "tokens": [51452, 1171, 1365, 11, 747, 264, 992, 15874, 9721, 11, 2212, 538, 257, 307, 257, 25993, 295, 280, 11, 293, 264, 1347, 992, 51744], "temperature": 0.0, "avg_logprob": -0.0847624879542405, "compression_ratio": 1.8804780876494025, "no_speech_prob": 0.008314882405102253}, {"id": 174, "seek": 107384, "start": 1073.84, "end": 1081.1999999999998, "text": " of some set. This also satisfies three properties, but here's the thing. You can choose any two numbers,", "tokens": [50364, 295, 512, 992, 13, 639, 611, 44271, 1045, 7221, 11, 457, 510, 311, 264, 551, 13, 509, 393, 2826, 604, 732, 3547, 11, 50732], "temperature": 0.0, "avg_logprob": -0.08459130455465878, "compression_ratio": 1.5655737704918034, "no_speech_prob": 0.007120758760720491}, {"id": 175, "seek": 107384, "start": 1081.1999999999998, "end": 1086.1599999999999, "text": " and you'll always be able to compare them with greater than or equal to. But if you choose two", "tokens": [50732, 293, 291, 603, 1009, 312, 1075, 281, 6794, 552, 365, 5044, 813, 420, 2681, 281, 13, 583, 498, 291, 2826, 732, 50980], "temperature": 0.0, "avg_logprob": -0.08459130455465878, "compression_ratio": 1.5655737704918034, "no_speech_prob": 0.007120758760720491}, {"id": 176, "seek": 107384, "start": 1086.1599999999999, "end": 1093.04, "text": " elements of a set containing sets, they might not be subsets of one another, like 1, 2, 3,", "tokens": [50980, 4959, 295, 257, 992, 19273, 6352, 11, 436, 1062, 406, 312, 2090, 1385, 295, 472, 1071, 11, 411, 502, 11, 568, 11, 805, 11, 51324], "temperature": 0.0, "avg_logprob": -0.08459130455465878, "compression_ratio": 1.5655737704918034, "no_speech_prob": 0.007120758760720491}, {"id": 177, "seek": 107384, "start": 1093.04, "end": 1100.08, "text": " and 2, 3, 4 can't be compared by set inclusion. No worries, such a set with a relation that", "tokens": [51324, 293, 568, 11, 805, 11, 1017, 393, 380, 312, 5347, 538, 992, 15874, 13, 883, 16340, 11, 1270, 257, 992, 365, 257, 9721, 300, 51676], "temperature": 0.0, "avg_logprob": -0.08459130455465878, "compression_ratio": 1.5655737704918034, "no_speech_prob": 0.007120758760720491}, {"id": 178, "seek": 110008, "start": 1100.08, "end": 1105.6799999999998, "text": " satisfies the three properties, but not all elements of the set can be compared to every other element", "tokens": [50364, 44271, 264, 1045, 7221, 11, 457, 406, 439, 4959, 295, 264, 992, 393, 312, 5347, 281, 633, 661, 4478, 50644], "temperature": 0.0, "avg_logprob": -0.05729142304892852, "compression_ratio": 1.9656652360515021, "no_speech_prob": 0.0010649431496858597}, {"id": 179, "seek": 110008, "start": 1105.6799999999998, "end": 1112.0, "text": " is called a partial ordering. And if, like the integers with a greater than or equal to relation,", "tokens": [50644, 307, 1219, 257, 14641, 21739, 13, 400, 498, 11, 411, 264, 41674, 365, 257, 5044, 813, 420, 2681, 281, 9721, 11, 50960], "temperature": 0.0, "avg_logprob": -0.05729142304892852, "compression_ratio": 1.9656652360515021, "no_speech_prob": 0.0010649431496858597}, {"id": 180, "seek": 110008, "start": 1112.0, "end": 1117.6, "text": " every element can be compared to every other element, that set is called a total ordering.", "tokens": [50960, 633, 4478, 393, 312, 5347, 281, 633, 661, 4478, 11, 300, 992, 307, 1219, 257, 3217, 21739, 13, 51240], "temperature": 0.0, "avg_logprob": -0.05729142304892852, "compression_ratio": 1.9656652360515021, "no_speech_prob": 0.0010649431496858597}, {"id": 181, "seek": 110008, "start": 1119.4399999999998, "end": 1123.76, "text": " Now let's say that you have a partial ordering on some set, and you want a subset", "tokens": [51332, 823, 718, 311, 584, 300, 291, 362, 257, 14641, 21739, 322, 512, 992, 11, 293, 291, 528, 257, 25993, 51548], "temperature": 0.0, "avg_logprob": -0.05729142304892852, "compression_ratio": 1.9656652360515021, "no_speech_prob": 0.0010649431496858597}, {"id": 182, "seek": 110008, "start": 1123.76, "end": 1128.8, "text": " of that set that is a total ordering induced by that same ordering on the whole set.", "tokens": [51548, 295, 300, 992, 300, 307, 257, 3217, 21739, 33991, 538, 300, 912, 21739, 322, 264, 1379, 992, 13, 51800], "temperature": 0.0, "avg_logprob": -0.05729142304892852, "compression_ratio": 1.9656652360515021, "no_speech_prob": 0.0010649431496858597}, {"id": 183, "seek": 112880, "start": 1129.6, "end": 1134.72, "text": " Then such a subset is called a chain, and the chain is a good name for them because", "tokens": [50404, 1396, 1270, 257, 25993, 307, 1219, 257, 5021, 11, 293, 264, 5021, 307, 257, 665, 1315, 337, 552, 570, 50660], "temperature": 0.0, "avg_logprob": -0.06837748989616473, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0019877294544130564}, {"id": 184, "seek": 112880, "start": 1134.72, "end": 1141.6, "text": " elements of such subsets form a chain of ordered elements. Now in general, if you have a subset", "tokens": [50660, 4959, 295, 1270, 2090, 1385, 1254, 257, 5021, 295, 8866, 4959, 13, 823, 294, 2674, 11, 498, 291, 362, 257, 25993, 51004], "temperature": 0.0, "avg_logprob": -0.06837748989616473, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0019877294544130564}, {"id": 185, "seek": 112880, "start": 1141.6, "end": 1148.24, "text": " s of a partially ordered set x, you can define what's called an upper bound of s. This is some", "tokens": [51004, 262, 295, 257, 18886, 8866, 992, 2031, 11, 291, 393, 6964, 437, 311, 1219, 364, 6597, 5472, 295, 262, 13, 639, 307, 512, 51336], "temperature": 0.0, "avg_logprob": -0.06837748989616473, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0019877294544130564}, {"id": 186, "seek": 112880, "start": 1148.24, "end": 1155.52, "text": " element u of x, such that u is greater than or equal to every element in s. Now u doesn't have", "tokens": [51336, 4478, 344, 295, 2031, 11, 1270, 300, 344, 307, 5044, 813, 420, 2681, 281, 633, 4478, 294, 262, 13, 823, 344, 1177, 380, 362, 51700], "temperature": 0.0, "avg_logprob": -0.06837748989616473, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0019877294544130564}, {"id": 187, "seek": 115552, "start": 1155.52, "end": 1161.84, "text": " to be in s, but it could, and there could be multiple upper bounds. For example, an upper bound", "tokens": [50364, 281, 312, 294, 262, 11, 457, 309, 727, 11, 293, 456, 727, 312, 3866, 6597, 29905, 13, 1171, 1365, 11, 364, 6597, 5472, 50680], "temperature": 0.0, "avg_logprob": -0.09379670226458207, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.033082425594329834}, {"id": 188, "seek": 115552, "start": 1161.84, "end": 1169.76, "text": " of the subset 1, 2, 6 in the set of naturals is 7, but also 1000, or maybe 6, or basically all", "tokens": [50680, 295, 264, 25993, 502, 11, 568, 11, 1386, 294, 264, 992, 295, 26389, 1124, 307, 1614, 11, 457, 611, 9714, 11, 420, 1310, 1386, 11, 420, 1936, 439, 51076], "temperature": 0.0, "avg_logprob": -0.09379670226458207, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.033082425594329834}, {"id": 189, "seek": 115552, "start": 1169.76, "end": 1176.32, "text": " natural numbers greater than or equal to 6. But not all subsets have upper bounds, like take the set", "tokens": [51076, 3303, 3547, 5044, 813, 420, 2681, 281, 1386, 13, 583, 406, 439, 2090, 1385, 362, 6597, 29905, 11, 411, 747, 264, 992, 51404], "temperature": 0.0, "avg_logprob": -0.09379670226458207, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.033082425594329834}, {"id": 190, "seek": 115552, "start": 1176.32, "end": 1182.56, "text": " of even numbers, which obviously doesn't have an upper bound. No natural number is greater than or", "tokens": [51404, 295, 754, 3547, 11, 597, 2745, 1177, 380, 362, 364, 6597, 5472, 13, 883, 3303, 1230, 307, 5044, 813, 420, 51716], "temperature": 0.0, "avg_logprob": -0.09379670226458207, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.033082425594329834}, {"id": 191, "seek": 118256, "start": 1182.56, "end": 1189.28, "text": " equal to every even number. Finally, let's define something called a maximal element of x.", "tokens": [50364, 2681, 281, 633, 754, 1230, 13, 6288, 11, 718, 311, 6964, 746, 1219, 257, 49336, 4478, 295, 2031, 13, 50700], "temperature": 0.0, "avg_logprob": -0.06140054132520538, "compression_ratio": 1.7843137254901962, "no_speech_prob": 0.005219892133027315}, {"id": 192, "seek": 118256, "start": 1190.0, "end": 1196.1599999999999, "text": " An element m of a partially ordered set x is maximal if there is no other element of x that", "tokens": [50736, 1107, 4478, 275, 295, 257, 18886, 8866, 992, 2031, 307, 49336, 498, 456, 307, 572, 661, 4478, 295, 2031, 300, 51044], "temperature": 0.0, "avg_logprob": -0.06140054132520538, "compression_ratio": 1.7843137254901962, "no_speech_prob": 0.005219892133027315}, {"id": 193, "seek": 118256, "start": 1196.1599999999999, "end": 1202.32, "text": " is greater than or equal to m. For example, in the set 1, 2, 3, 4, 5 with the usual greater", "tokens": [51044, 307, 5044, 813, 420, 2681, 281, 275, 13, 1171, 1365, 11, 294, 264, 992, 502, 11, 568, 11, 805, 11, 1017, 11, 1025, 365, 264, 7713, 5044, 51352], "temperature": 0.0, "avg_logprob": -0.06140054132520538, "compression_ratio": 1.7843137254901962, "no_speech_prob": 0.005219892133027315}, {"id": 194, "seek": 118256, "start": 1202.32, "end": 1208.48, "text": " than or equal to ordering, 5 is a maximal element. But in the set of all natural numbers,", "tokens": [51352, 813, 420, 2681, 281, 21739, 11, 1025, 307, 257, 49336, 4478, 13, 583, 294, 264, 992, 295, 439, 3303, 3547, 11, 51660], "temperature": 0.0, "avg_logprob": -0.06140054132520538, "compression_ratio": 1.7843137254901962, "no_speech_prob": 0.005219892133027315}, {"id": 195, "seek": 120848, "start": 1208.48, "end": 1216.64, "text": " well, there is no maximal element. Now we can define Zorn's lemma. Let x be a partially ordered", "tokens": [50364, 731, 11, 456, 307, 572, 49336, 4478, 13, 823, 321, 393, 6964, 1176, 1865, 311, 7495, 1696, 13, 961, 2031, 312, 257, 18886, 8866, 50772], "temperature": 0.0, "avg_logprob": -0.10325874152936433, "compression_ratio": 1.4789473684210526, "no_speech_prob": 0.001133534125983715}, {"id": 196, "seek": 120848, "start": 1216.64, "end": 1225.28, "text": " set induced by some relation. Suppose that for every chain c of x, c has an upper bound, then x", "tokens": [50772, 992, 33991, 538, 512, 9721, 13, 21360, 300, 337, 633, 5021, 269, 295, 2031, 11, 269, 575, 364, 6597, 5472, 11, 550, 2031, 51204], "temperature": 0.0, "avg_logprob": -0.10325874152936433, "compression_ratio": 1.4789473684210526, "no_speech_prob": 0.001133534125983715}, {"id": 197, "seek": 120848, "start": 1225.28, "end": 1231.84, "text": " has a maximal element. A few questions arise pretty quickly. First, where is the axiom of", "tokens": [51204, 575, 257, 49336, 4478, 13, 316, 1326, 1651, 20288, 1238, 2661, 13, 2386, 11, 689, 307, 264, 6360, 72, 298, 295, 51532], "temperature": 0.0, "avg_logprob": -0.10325874152936433, "compression_ratio": 1.4789473684210526, "no_speech_prob": 0.001133534125983715}, {"id": 198, "seek": 123184, "start": 1231.84, "end": 1237.52, "text": " choice in this? This was supposed to be an equivalent statement, yet it looks and feels so", "tokens": [50364, 3922, 294, 341, 30, 639, 390, 3442, 281, 312, 364, 10344, 5629, 11, 1939, 309, 1542, 293, 3417, 370, 50648], "temperature": 0.0, "avg_logprob": -0.053996900342545416, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.07158379256725311}, {"id": 199, "seek": 123184, "start": 1237.52, "end": 1244.0, "text": " different. And also, what really is this statement saying? What is it used for? Let's answer the", "tokens": [50648, 819, 13, 400, 611, 11, 437, 534, 307, 341, 5629, 1566, 30, 708, 307, 309, 1143, 337, 30, 961, 311, 1867, 264, 50972], "temperature": 0.0, "avg_logprob": -0.053996900342545416, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.07158379256725311}, {"id": 200, "seek": 123184, "start": 1244.0, "end": 1249.28, "text": " second question first. A lot of mathematical concepts that you may know are actually maximal", "tokens": [50972, 1150, 1168, 700, 13, 316, 688, 295, 18894, 10392, 300, 291, 815, 458, 366, 767, 49336, 51236], "temperature": 0.0, "avg_logprob": -0.053996900342545416, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.07158379256725311}, {"id": 201, "seek": 123184, "start": 1249.28, "end": 1254.8, "text": " elements in disguise. If you know some linear algebra, think about the basis of a vector space.", "tokens": [51236, 4959, 294, 32751, 13, 759, 291, 458, 512, 8213, 21989, 11, 519, 466, 264, 5143, 295, 257, 8062, 1901, 13, 51512], "temperature": 0.0, "avg_logprob": -0.053996900342545416, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.07158379256725311}, {"id": 202, "seek": 123184, "start": 1254.8, "end": 1260.6399999999999, "text": " You can pretty easily prove with basic linear algebra that a basis of some vector space v", "tokens": [51512, 509, 393, 1238, 3612, 7081, 365, 3875, 8213, 21989, 300, 257, 5143, 295, 512, 8062, 1901, 371, 51804], "temperature": 0.0, "avg_logprob": -0.053996900342545416, "compression_ratio": 1.6583629893238434, "no_speech_prob": 0.07158379256725311}, {"id": 203, "seek": 126064, "start": 1260.64, "end": 1266.88, "text": " is the maximal element of the set of all linearly independent subsets of v. So,", "tokens": [50364, 307, 264, 49336, 4478, 295, 264, 992, 295, 439, 43586, 6695, 2090, 1385, 295, 371, 13, 407, 11, 50676], "temperature": 0.0, "avg_logprob": -0.06845680557855285, "compression_ratio": 1.640552995391705, "no_speech_prob": 0.0009110269602388144}, {"id": 204, "seek": 126064, "start": 1266.88, "end": 1272.48, "text": " Zorn's lemma can be crucial in proving the existence of some very important mathematical", "tokens": [50676, 1176, 1865, 311, 7495, 1696, 393, 312, 11462, 294, 27221, 264, 9123, 295, 512, 588, 1021, 18894, 50956], "temperature": 0.0, "avg_logprob": -0.06845680557855285, "compression_ratio": 1.640552995391705, "no_speech_prob": 0.0009110269602388144}, {"id": 205, "seek": 126064, "start": 1272.48, "end": 1279.8400000000001, "text": " objects. So, how do Zorn's lemma and the axiom of choice relate? Well first, let's try to find", "tokens": [50956, 6565, 13, 407, 11, 577, 360, 1176, 1865, 311, 7495, 1696, 293, 264, 6360, 72, 298, 295, 3922, 10961, 30, 1042, 700, 11, 718, 311, 853, 281, 915, 51324], "temperature": 0.0, "avg_logprob": -0.06845680557855285, "compression_ratio": 1.640552995391705, "no_speech_prob": 0.0009110269602388144}, {"id": 206, "seek": 126064, "start": 1279.8400000000001, "end": 1285.6000000000001, "text": " ac in Zorn's lemma. In other words, if Zorn's lemma is true, does that mean that we can find", "tokens": [51324, 696, 294, 1176, 1865, 311, 7495, 1696, 13, 682, 661, 2283, 11, 498, 1176, 1865, 311, 7495, 1696, 307, 2074, 11, 775, 300, 914, 300, 321, 393, 915, 51612], "temperature": 0.0, "avg_logprob": -0.06845680557855285, "compression_ratio": 1.640552995391705, "no_speech_prob": 0.0009110269602388144}, {"id": 207, "seek": 128560, "start": 1285.6, "end": 1293.6, "text": " a choice function for any set? The answer is yes. Take a set x of non-ante sets, and let a be the", "tokens": [50364, 257, 3922, 2445, 337, 604, 992, 30, 440, 1867, 307, 2086, 13, 3664, 257, 992, 2031, 295, 2107, 12, 2879, 6352, 11, 293, 718, 257, 312, 264, 50764], "temperature": 0.0, "avg_logprob": -0.13557866476114513, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.01744138076901436}, {"id": 208, "seek": 128560, "start": 1293.6, "end": 1298.9599999999998, "text": " set of functions f, or technically rule of assignments, don't worry too much about the semantics,", "tokens": [50764, 992, 295, 6828, 283, 11, 420, 12120, 4978, 295, 22546, 11, 500, 380, 3292, 886, 709, 466, 264, 4361, 45298, 11, 51032], "temperature": 0.0, "avg_logprob": -0.13557866476114513, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.01744138076901436}, {"id": 209, "seek": 128560, "start": 1298.9599999999998, "end": 1305.52, "text": " such that its domain is a subset of x, and it satisfies f of x is an x for all x in the domain", "tokens": [51032, 1270, 300, 1080, 9274, 307, 257, 25993, 295, 2031, 11, 293, 309, 44271, 283, 295, 2031, 307, 364, 2031, 337, 439, 2031, 294, 264, 9274, 51360], "temperature": 0.0, "avg_logprob": -0.13557866476114513, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.01744138076901436}, {"id": 210, "seek": 128560, "start": 1305.52, "end": 1312.0, "text": " of f. Well, this set a is a partially ordered set induced by the set inclusion relation.", "tokens": [51360, 295, 283, 13, 1042, 11, 341, 992, 257, 307, 257, 18886, 8866, 992, 33991, 538, 264, 992, 15874, 9721, 13, 51684], "temperature": 0.0, "avg_logprob": -0.13557866476114513, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.01744138076901436}, {"id": 211, "seek": 131200, "start": 1312.64, "end": 1319.2, "text": " But it turns out that every chain in A has an upper bound. So you can apply Zorn's and show", "tokens": [50396, 583, 309, 4523, 484, 300, 633, 5021, 294, 316, 575, 364, 6597, 5472, 13, 407, 291, 393, 3079, 1176, 1865, 311, 293, 855, 50724], "temperature": 0.0, "avg_logprob": -0.10435102487865247, "compression_ratio": 1.5865921787709498, "no_speech_prob": 0.008061635307967663}, {"id": 212, "seek": 131200, "start": 1319.2, "end": 1326.32, "text": " that A has a maximal element. Then you can show that this maximal element is exactly a choice", "tokens": [50724, 300, 316, 575, 257, 49336, 4478, 13, 1396, 291, 393, 855, 300, 341, 49336, 4478, 307, 2293, 257, 3922, 51080], "temperature": 0.0, "avg_logprob": -0.10435102487865247, "compression_ratio": 1.5865921787709498, "no_speech_prob": 0.008061635307967663}, {"id": 213, "seek": 131200, "start": 1326.32, "end": 1335.36, "text": " function, or x. Zorn's lemma implies the axiom of choice. How about the other implication? Does ac", "tokens": [51080, 2445, 11, 420, 2031, 13, 1176, 1865, 311, 7495, 1696, 18779, 264, 6360, 72, 298, 295, 3922, 13, 1012, 466, 264, 661, 37814, 30, 4402, 696, 51532], "temperature": 0.0, "avg_logprob": -0.10435102487865247, "compression_ratio": 1.5865921787709498, "no_speech_prob": 0.008061635307967663}, {"id": 214, "seek": 133536, "start": 1335.6799999999998, "end": 1342.8799999999999, "text": " imply Zorn's? Yeah. But that proof is a lot more complicated. It requires ordinals and a technique", "tokens": [50380, 33616, 1176, 1865, 311, 30, 865, 13, 583, 300, 8177, 307, 257, 688, 544, 6179, 13, 467, 7029, 25376, 1124, 293, 257, 6532, 50740], "temperature": 0.0, "avg_logprob": -0.07645800679000382, "compression_ratio": 1.544, "no_speech_prob": 0.04401343688368797}, {"id": 215, "seek": 133536, "start": 1342.8799999999999, "end": 1348.6399999999999, "text": " called transfinite recursion, which uses the axiom of replacement. The tools required for this proof", "tokens": [50740, 1219, 1145, 5194, 642, 20560, 313, 11, 597, 4960, 264, 6360, 72, 298, 295, 14419, 13, 440, 3873, 4739, 337, 341, 8177, 51028], "temperature": 0.0, "avg_logprob": -0.07645800679000382, "compression_ratio": 1.544, "no_speech_prob": 0.04401343688368797}, {"id": 216, "seek": 133536, "start": 1348.6399999999999, "end": 1354.08, "text": " are beyond the scope of this video, but as a general idea, you take a partially ordered set A", "tokens": [51028, 366, 4399, 264, 11923, 295, 341, 960, 11, 457, 382, 257, 2674, 1558, 11, 291, 747, 257, 18886, 8866, 992, 316, 51300], "temperature": 0.0, "avg_logprob": -0.07645800679000382, "compression_ratio": 1.544, "no_speech_prob": 0.04401343688368797}, {"id": 217, "seek": 133536, "start": 1354.08, "end": 1359.28, "text": " where every chain has an upper bound. Then you construct some subset of A by using the axiom", "tokens": [51300, 689, 633, 5021, 575, 364, 6597, 5472, 13, 1396, 291, 7690, 512, 25993, 295, 316, 538, 1228, 264, 6360, 72, 298, 51560], "temperature": 0.0, "avg_logprob": -0.07645800679000382, "compression_ratio": 1.544, "no_speech_prob": 0.04401343688368797}, {"id": 218, "seek": 135928, "start": 1359.28, "end": 1365.36, "text": " of choice to recursively choose what are called strict upper bounds. These are basically elements", "tokens": [50364, 295, 3922, 281, 20560, 3413, 2826, 437, 366, 1219, 10910, 6597, 29905, 13, 1981, 366, 1936, 4959, 50668], "temperature": 0.0, "avg_logprob": -0.0354891344048511, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.01542398240417242}, {"id": 219, "seek": 135928, "start": 1365.36, "end": 1371.36, "text": " that are strictly bigger than everything in a subset. Basically, at each step, if your subset", "tokens": [50668, 300, 366, 20792, 3801, 813, 1203, 294, 257, 25993, 13, 8537, 11, 412, 1184, 1823, 11, 498, 428, 25993, 50968], "temperature": 0.0, "avg_logprob": -0.0354891344048511, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.01542398240417242}, {"id": 220, "seek": 135928, "start": 1371.36, "end": 1377.92, "text": " still has some strict upper bounds, you choose one and add it to the subset. We do this continuously", "tokens": [50968, 920, 575, 512, 10910, 6597, 29905, 11, 291, 2826, 472, 293, 909, 309, 281, 264, 25993, 13, 492, 360, 341, 15684, 51296], "temperature": 0.0, "avg_logprob": -0.0354891344048511, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.01542398240417242}, {"id": 221, "seek": 135928, "start": 1377.92, "end": 1384.3999999999999, "text": " until the subset we constructed has no more upper bounds. This way, we want to construct a maximal", "tokens": [51296, 1826, 264, 25993, 321, 17083, 575, 572, 544, 6597, 29905, 13, 639, 636, 11, 321, 528, 281, 7690, 257, 49336, 51620], "temperature": 0.0, "avg_logprob": -0.0354891344048511, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.01542398240417242}, {"id": 222, "seek": 138440, "start": 1384.4, "end": 1391.44, "text": " element of A by taking this subset and taking its union set. But because we could have so many choices", "tokens": [50364, 4478, 295, 316, 538, 1940, 341, 25993, 293, 1940, 1080, 11671, 992, 13, 583, 570, 321, 727, 362, 370, 867, 7994, 50716], "temperature": 0.0, "avg_logprob": -0.04743133623575427, "compression_ratio": 1.6738197424892705, "no_speech_prob": 0.0043313768692314625}, {"id": 223, "seek": 138440, "start": 1391.44, "end": 1398.5600000000002, "text": " for such strict upper bounds, we have to use the axiom of choice. This kind of recursion is also", "tokens": [50716, 337, 1270, 10910, 6597, 29905, 11, 321, 362, 281, 764, 264, 6360, 72, 298, 295, 3922, 13, 639, 733, 295, 20560, 313, 307, 611, 51072], "temperature": 0.0, "avg_logprob": -0.04743133623575427, "compression_ratio": 1.6738197424892705, "no_speech_prob": 0.0043313768692314625}, {"id": 224, "seek": 138440, "start": 1398.5600000000002, "end": 1404.48, "text": " not over the naturals, but instead each step is marked by these transfinite objects called the", "tokens": [51072, 406, 670, 264, 26389, 1124, 11, 457, 2602, 1184, 1823, 307, 12658, 538, 613, 1145, 5194, 642, 6565, 1219, 264, 51368], "temperature": 0.0, "avg_logprob": -0.04743133623575427, "compression_ratio": 1.6738197424892705, "no_speech_prob": 0.0043313768692314625}, {"id": 225, "seek": 138440, "start": 1404.48, "end": 1410.4, "text": " ordinals. You can then use an axiom called replacement to prove that this transfinite recursion", "tokens": [51368, 25376, 1124, 13, 509, 393, 550, 764, 364, 6360, 72, 298, 1219, 14419, 281, 7081, 300, 341, 1145, 5194, 642, 20560, 313, 51664], "temperature": 0.0, "avg_logprob": -0.04743133623575427, "compression_ratio": 1.6738197424892705, "no_speech_prob": 0.0043313768692314625}, {"id": 226, "seek": 141040, "start": 1410.4, "end": 1418.88, "text": " must eventually stop. And thus, you have constructed a maximal element using ac. So ac implies zorns.", "tokens": [50364, 1633, 4728, 1590, 13, 400, 8807, 11, 291, 362, 17083, 257, 49336, 4478, 1228, 696, 13, 407, 696, 18779, 710, 27128, 13, 50788], "temperature": 0.0, "avg_logprob": -0.12134065628051757, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0012065627379342914}, {"id": 227, "seek": 141040, "start": 1420.0, "end": 1425.2800000000002, "text": " So that's the first important equivalence of ac. But there's another also very important", "tokens": [50844, 407, 300, 311, 264, 700, 1021, 9052, 655, 295, 696, 13, 583, 456, 311, 1071, 611, 588, 1021, 51108], "temperature": 0.0, "avg_logprob": -0.12134065628051757, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0012065627379342914}, {"id": 228, "seek": 141040, "start": 1425.2800000000002, "end": 1431.6000000000001, "text": " equivalence of ac called the well ordering theorem. Remember the ordering stuff from zorns lemma?", "tokens": [51108, 9052, 655, 295, 696, 1219, 264, 731, 21739, 20904, 13, 5459, 264, 21739, 1507, 490, 710, 27128, 7495, 1696, 30, 51424], "temperature": 0.0, "avg_logprob": -0.12134065628051757, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0012065627379342914}, {"id": 229, "seek": 141040, "start": 1432.16, "end": 1436.88, "text": " Well, let's suppose that a set x has a total ordering, meaning every element can be compared", "tokens": [51452, 1042, 11, 718, 311, 7297, 300, 257, 992, 2031, 575, 257, 3217, 21739, 11, 3620, 633, 4478, 393, 312, 5347, 51688], "temperature": 0.0, "avg_logprob": -0.12134065628051757, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0012065627379342914}, {"id": 230, "seek": 143688, "start": 1436.88, "end": 1443.3600000000001, "text": " to every other element. Such an ordering is called well founded if every subset of x has", "tokens": [50364, 281, 633, 661, 4478, 13, 9653, 364, 21739, 307, 1219, 731, 13234, 498, 633, 25993, 295, 2031, 575, 50688], "temperature": 0.0, "avg_logprob": -0.06315880754719609, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.010326256975531578}, {"id": 231, "seek": 143688, "start": 1443.3600000000001, "end": 1448.8000000000002, "text": " what's called a least element, meaning everything in s is greater than or equal to this least element.", "tokens": [50688, 437, 311, 1219, 257, 1935, 4478, 11, 3620, 1203, 294, 262, 307, 5044, 813, 420, 2681, 281, 341, 1935, 4478, 13, 50960], "temperature": 0.0, "avg_logprob": -0.06315880754719609, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.010326256975531578}, {"id": 232, "seek": 143688, "start": 1449.3600000000001, "end": 1455.5200000000002, "text": " If a set has a total ordering and is also well founded, we say that the set can be well ordered.", "tokens": [50988, 759, 257, 992, 575, 257, 3217, 21739, 293, 307, 611, 731, 13234, 11, 321, 584, 300, 264, 992, 393, 312, 731, 8866, 13, 51296], "temperature": 0.0, "avg_logprob": -0.06315880754719609, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.010326256975531578}, {"id": 233, "seek": 143688, "start": 1456.4, "end": 1461.92, "text": " For example, the set of naturals with the usual ordering is clearly well ordered. We know that", "tokens": [51340, 1171, 1365, 11, 264, 992, 295, 26389, 1124, 365, 264, 7713, 21739, 307, 4448, 731, 8866, 13, 492, 458, 300, 51616], "temperature": 0.0, "avg_logprob": -0.06315880754719609, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.010326256975531578}, {"id": 234, "seek": 146192, "start": 1462.0, "end": 1466.88, "text": " the naturals and their usual ordering is a total ordering. And it's not hard to see that every", "tokens": [50368, 264, 26389, 1124, 293, 641, 7713, 21739, 307, 257, 3217, 21739, 13, 400, 309, 311, 406, 1152, 281, 536, 300, 633, 50612], "temperature": 0.0, "avg_logprob": -0.07492300945779552, "compression_ratio": 1.8604651162790697, "no_speech_prob": 0.0034833226818591356}, {"id": 235, "seek": 146192, "start": 1466.88, "end": 1473.3600000000001, "text": " subset of the naturals must have a least element, because if not, you'd be able to find some infinitely", "tokens": [50612, 25993, 295, 264, 26389, 1124, 1633, 362, 257, 1935, 4478, 11, 570, 498, 406, 11, 291, 1116, 312, 1075, 281, 915, 512, 36227, 50936], "temperature": 0.0, "avg_logprob": -0.07492300945779552, "compression_ratio": 1.8604651162790697, "no_speech_prob": 0.0034833226818591356}, {"id": 236, "seek": 146192, "start": 1473.3600000000001, "end": 1478.16, "text": " descending subset of the naturals, which cannot happen because, well, you'd have to eventually", "tokens": [50936, 40182, 25993, 295, 264, 26389, 1124, 11, 597, 2644, 1051, 570, 11, 731, 11, 291, 1116, 362, 281, 4728, 51176], "temperature": 0.0, "avg_logprob": -0.07492300945779552, "compression_ratio": 1.8604651162790697, "no_speech_prob": 0.0034833226818591356}, {"id": 237, "seek": 146192, "start": 1478.16, "end": 1485.52, "text": " stop after some finite steps at zero. But what about the integers? Well, it sure has a total", "tokens": [51176, 1590, 934, 512, 19362, 4439, 412, 4018, 13, 583, 437, 466, 264, 41674, 30, 1042, 11, 309, 988, 575, 257, 3217, 51544], "temperature": 0.0, "avg_logprob": -0.07492300945779552, "compression_ratio": 1.8604651162790697, "no_speech_prob": 0.0034833226818591356}, {"id": 238, "seek": 146192, "start": 1485.52, "end": 1490.96, "text": " ordering under our usual ordering relation, but it's not well founded. Take the subset of all", "tokens": [51544, 21739, 833, 527, 7713, 21739, 9721, 11, 457, 309, 311, 406, 731, 13234, 13, 3664, 264, 25993, 295, 439, 51816], "temperature": 0.0, "avg_logprob": -0.07492300945779552, "compression_ratio": 1.8604651162790697, "no_speech_prob": 0.0034833226818591356}, {"id": 239, "seek": 149096, "start": 1491.04, "end": 1496.8, "text": " negative integers. It doesn't have a least element. But this doesn't mean the integers", "tokens": [50368, 3671, 41674, 13, 467, 1177, 380, 362, 257, 1935, 4478, 13, 583, 341, 1177, 380, 914, 264, 41674, 50656], "temperature": 0.0, "avg_logprob": -0.08174251928562071, "compression_ratio": 1.889795918367347, "no_speech_prob": 0.0030752690508961678}, {"id": 240, "seek": 149096, "start": 1496.8, "end": 1502.4, "text": " can't be well ordered. How about we define a new relation on the integer, where a is less than b,", "tokens": [50656, 393, 380, 312, 731, 8866, 13, 1012, 466, 321, 6964, 257, 777, 9721, 322, 264, 24922, 11, 689, 257, 307, 1570, 813, 272, 11, 50936], "temperature": 0.0, "avg_logprob": -0.08174251928562071, "compression_ratio": 1.889795918367347, "no_speech_prob": 0.0030752690508961678}, {"id": 241, "seek": 149096, "start": 1502.4, "end": 1507.6000000000001, "text": " if the absolute value of a is less than the absolute value of b. Now, if the absolute values", "tokens": [50936, 498, 264, 8236, 2158, 295, 257, 307, 1570, 813, 264, 8236, 2158, 295, 272, 13, 823, 11, 498, 264, 8236, 4190, 51196], "temperature": 0.0, "avg_logprob": -0.08174251928562071, "compression_ratio": 1.889795918367347, "no_speech_prob": 0.0030752690508961678}, {"id": 242, "seek": 149096, "start": 1507.6000000000001, "end": 1514.0, "text": " are equal, and let's say a is not equal to b, then this must mean that b is negative a. So,", "tokens": [51196, 366, 2681, 11, 293, 718, 311, 584, 257, 307, 406, 2681, 281, 272, 11, 550, 341, 1633, 914, 300, 272, 307, 3671, 257, 13, 407, 11, 51516], "temperature": 0.0, "avg_logprob": -0.08174251928562071, "compression_ratio": 1.889795918367347, "no_speech_prob": 0.0030752690508961678}, {"id": 243, "seek": 149096, "start": 1514.0, "end": 1520.0, "text": " whichever of a or b is positive, let's order first. So such an ordering would look like this,", "tokens": [51516, 24123, 295, 257, 420, 272, 307, 3353, 11, 718, 311, 1668, 700, 13, 407, 1270, 364, 21739, 576, 574, 411, 341, 11, 51816], "temperature": 0.0, "avg_logprob": -0.08174251928562071, "compression_ratio": 1.889795918367347, "no_speech_prob": 0.0030752690508961678}, {"id": 244, "seek": 152000, "start": 1520.0, "end": 1526.48, "text": " zero, one, minus one, two, minus two, three, minus three, and so on. Then this ordering", "tokens": [50364, 4018, 11, 472, 11, 3175, 472, 11, 732, 11, 3175, 732, 11, 1045, 11, 3175, 1045, 11, 293, 370, 322, 13, 1396, 341, 21739, 50688], "temperature": 0.0, "avg_logprob": -0.10591675031303179, "compression_ratio": 1.7077625570776256, "no_speech_prob": 0.0012842240976169705}, {"id": 245, "seek": 152000, "start": 1526.48, "end": 1532.8, "text": " is well founded. You can see how our order relation may look a bit weird, but nonetheless,", "tokens": [50688, 307, 731, 13234, 13, 509, 393, 536, 577, 527, 1668, 9721, 815, 574, 257, 857, 3657, 11, 457, 26756, 11, 51004], "temperature": 0.0, "avg_logprob": -0.10591675031303179, "compression_ratio": 1.7077625570776256, "no_speech_prob": 0.0012842240976169705}, {"id": 246, "seek": 152000, "start": 1532.8, "end": 1540.96, "text": " the set can be well ordered. But can we do this for every set? You can, in fact, define a pretty", "tokens": [51004, 264, 992, 393, 312, 731, 8866, 13, 583, 393, 321, 360, 341, 337, 633, 992, 30, 509, 393, 11, 294, 1186, 11, 6964, 257, 1238, 51412], "temperature": 0.0, "avg_logprob": -0.10591675031303179, "compression_ratio": 1.7077625570776256, "no_speech_prob": 0.0012842240976169705}, {"id": 247, "seek": 152000, "start": 1540.96, "end": 1546.48, "text": " nice well ordering on the rationals and in general, any set that is countable, meaning it has size", "tokens": [51412, 1481, 731, 21739, 322, 264, 24258, 1124, 293, 294, 2674, 11, 604, 992, 300, 307, 1207, 712, 11, 3620, 309, 575, 2744, 51688], "temperature": 0.0, "avg_logprob": -0.10591675031303179, "compression_ratio": 1.7077625570776256, "no_speech_prob": 0.0012842240976169705}, {"id": 248, "seek": 154648, "start": 1546.48, "end": 1553.52, "text": " equal or smaller than the naturals. But when things get uncountably infinite, like the reels,", "tokens": [50364, 2681, 420, 4356, 813, 264, 26389, 1124, 13, 583, 562, 721, 483, 6219, 792, 1188, 13785, 11, 411, 264, 319, 1625, 11, 50716], "temperature": 0.0, "avg_logprob": -0.07607724500256915, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.006289468612521887}, {"id": 249, "seek": 154648, "start": 1553.52, "end": 1561.52, "text": " it becomes difficult to find a well ordering. But even so, do we know one can exist? Well,", "tokens": [50716, 309, 3643, 2252, 281, 915, 257, 731, 21739, 13, 583, 754, 370, 11, 360, 321, 458, 472, 393, 2514, 30, 1042, 11, 51116], "temperature": 0.0, "avg_logprob": -0.07607724500256915, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.006289468612521887}, {"id": 250, "seek": 154648, "start": 1561.52, "end": 1567.2, "text": " the well ordering theorem says that every set can be well ordered. And it turns out,", "tokens": [51116, 264, 731, 21739, 20904, 1619, 300, 633, 992, 393, 312, 731, 8866, 13, 400, 309, 4523, 484, 11, 51400], "temperature": 0.0, "avg_logprob": -0.07607724500256915, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.006289468612521887}, {"id": 251, "seek": 154648, "start": 1567.2, "end": 1570.56, "text": " the well ordering theorem is equivalent to the axiom of choice.", "tokens": [51400, 264, 731, 21739, 20904, 307, 10344, 281, 264, 6360, 72, 298, 295, 3922, 13, 51568], "temperature": 0.0, "avg_logprob": -0.07607724500256915, "compression_ratio": 1.6733668341708543, "no_speech_prob": 0.006289468612521887}, {"id": 252, "seek": 157056, "start": 1570.96, "end": 1576.32, "text": " Like Zorn's lemma showing that the well ordering theorem implies ac is a bit more easier. If we", "tokens": [50384, 1743, 1176, 1865, 311, 7495, 1696, 4099, 300, 264, 731, 21739, 20904, 18779, 696, 307, 257, 857, 544, 3571, 13, 759, 321, 50652], "temperature": 0.0, "avg_logprob": -0.16641961611234224, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0018101807218044996}, {"id": 253, "seek": 157056, "start": 1576.32, "end": 1582.48, "text": " assume the well ordering theorem, take any set of non-empty sets x and look at the union set of x,", "tokens": [50652, 6552, 264, 731, 21739, 20904, 11, 747, 604, 992, 295, 2107, 12, 4543, 88, 6352, 2031, 293, 574, 412, 264, 11671, 992, 295, 2031, 11, 50960], "temperature": 0.0, "avg_logprob": -0.16641961611234224, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0018101807218044996}, {"id": 254, "seek": 157056, "start": 1582.48, "end": 1589.28, "text": " then the union set of x has a well ordering. In particular, every subset of u of x has a least", "tokens": [50960, 550, 264, 11671, 992, 295, 2031, 575, 257, 731, 21739, 13, 682, 1729, 11, 633, 25993, 295, 344, 295, 2031, 575, 257, 1935, 51300], "temperature": 0.0, "avg_logprob": -0.16641961611234224, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0018101807218044996}, {"id": 255, "seek": 157056, "start": 1589.28, "end": 1596.96, "text": " element by well foundedness. But notice that every element x of x is a subset of the union set of x.", "tokens": [51300, 4478, 538, 731, 13234, 1287, 13, 583, 3449, 300, 633, 4478, 2031, 295, 2031, 307, 257, 25993, 295, 264, 11671, 992, 295, 2031, 13, 51684], "temperature": 0.0, "avg_logprob": -0.16641961611234224, "compression_ratio": 1.9024390243902438, "no_speech_prob": 0.0018101807218044996}, {"id": 256, "seek": 159696, "start": 1597.68, "end": 1605.28, "text": " So we can define a choice function from x to union set of x, such that f of x is the least", "tokens": [50400, 407, 321, 393, 6964, 257, 3922, 2445, 490, 2031, 281, 11671, 992, 295, 2031, 11, 1270, 300, 283, 295, 2031, 307, 264, 1935, 50780], "temperature": 0.0, "avg_logprob": -0.1023928097316197, "compression_ratio": 1.855, "no_speech_prob": 0.015905221924185753}, {"id": 257, "seek": 159696, "start": 1605.28, "end": 1612.64, "text": " element of x as a subset in ux with respect to its well ordering. Well, the least element of x", "tokens": [50780, 4478, 295, 2031, 382, 257, 25993, 294, 344, 87, 365, 3104, 281, 1080, 731, 21739, 13, 1042, 11, 264, 1935, 4478, 295, 2031, 51148], "temperature": 0.0, "avg_logprob": -0.1023928097316197, "compression_ratio": 1.855, "no_speech_prob": 0.015905221924185753}, {"id": 258, "seek": 159696, "start": 1612.64, "end": 1619.1200000000001, "text": " as a subset of the union set of x is obviously in x, so we just defined a choice function for x.", "tokens": [51148, 382, 257, 25993, 295, 264, 11671, 992, 295, 2031, 307, 2745, 294, 2031, 11, 370, 321, 445, 7642, 257, 3922, 2445, 337, 2031, 13, 51472], "temperature": 0.0, "avg_logprob": -0.1023928097316197, "compression_ratio": 1.855, "no_speech_prob": 0.015905221924185753}, {"id": 259, "seek": 159696, "start": 1620.16, "end": 1624.32, "text": " On the other hand, showing that ac implies the well ordering theorem is again a bit more", "tokens": [51524, 1282, 264, 661, 1011, 11, 4099, 300, 696, 18779, 264, 731, 21739, 20904, 307, 797, 257, 857, 544, 51732], "temperature": 0.0, "avg_logprob": -0.1023928097316197, "compression_ratio": 1.855, "no_speech_prob": 0.015905221924185753}, {"id": 260, "seek": 162432, "start": 1624.3999999999999, "end": 1629.28, "text": " complicated. And again, we need stuff like transfinite recursion and ordinals to define", "tokens": [50368, 6179, 13, 400, 797, 11, 321, 643, 1507, 411, 1145, 5194, 642, 20560, 313, 293, 25376, 1124, 281, 6964, 50612], "temperature": 0.0, "avg_logprob": -0.08251959193836558, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.010985913686454296}, {"id": 261, "seek": 162432, "start": 1629.28, "end": 1634.8799999999999, "text": " a well ordering. But the idea is pretty straightforward. For any set x, you basically", "tokens": [50612, 257, 731, 21739, 13, 583, 264, 1558, 307, 1238, 15325, 13, 1171, 604, 992, 2031, 11, 291, 1936, 50892], "temperature": 0.0, "avg_logprob": -0.08251959193836558, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.010985913686454296}, {"id": 262, "seek": 162432, "start": 1634.8799999999999, "end": 1640.56, "text": " use the axiom of choice to choose an element in x. Set that as your least element, then choose", "tokens": [50892, 764, 264, 6360, 72, 298, 295, 3922, 281, 2826, 364, 4478, 294, 2031, 13, 8928, 300, 382, 428, 1935, 4478, 11, 550, 2826, 51176], "temperature": 0.0, "avg_logprob": -0.08251959193836558, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.010985913686454296}, {"id": 263, "seek": 162432, "start": 1640.56, "end": 1645.12, "text": " another element from the remaining elements in x, that's your next element in our order,", "tokens": [51176, 1071, 4478, 490, 264, 8877, 4959, 294, 2031, 11, 300, 311, 428, 958, 4478, 294, 527, 1668, 11, 51404], "temperature": 0.0, "avg_logprob": -0.08251959193836558, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.010985913686454296}, {"id": 264, "seek": 162432, "start": 1645.12, "end": 1650.32, "text": " then you just continue to do that recursively, again with the weird transfinite recursion done", "tokens": [51404, 550, 291, 445, 2354, 281, 360, 300, 20560, 3413, 11, 797, 365, 264, 3657, 1145, 5194, 642, 20560, 313, 1096, 51664], "temperature": 0.0, "avg_logprob": -0.08251959193836558, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.010985913686454296}, {"id": 265, "seek": 165032, "start": 1650.32, "end": 1656.56, "text": " over the ordinals, and again, by the axiom of replacement, it necessitates that we must stop.", "tokens": [50364, 670, 264, 25376, 1124, 11, 293, 797, 11, 538, 264, 6360, 72, 298, 295, 14419, 11, 309, 2688, 30035, 300, 321, 1633, 1590, 13, 50676], "temperature": 0.0, "avg_logprob": -0.1002269142552426, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.003824364859610796}, {"id": 266, "seek": 165032, "start": 1657.4399999999998, "end": 1662.72, "text": " Then we have basically constructed a well ordering on x. Again, the details are out of", "tokens": [50720, 1396, 321, 362, 1936, 17083, 257, 731, 21739, 322, 2031, 13, 3764, 11, 264, 4365, 366, 484, 295, 50984], "temperature": 0.0, "avg_logprob": -0.1002269142552426, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.003824364859610796}, {"id": 267, "seek": 165032, "start": 1662.72, "end": 1668.6399999999999, "text": " the scope of this video, but hopefully you can see the choiceness required for the well ordering", "tokens": [50984, 264, 11923, 295, 341, 960, 11, 457, 4696, 291, 393, 536, 264, 1586, 299, 15264, 4739, 337, 264, 731, 21739, 51280], "temperature": 0.0, "avg_logprob": -0.1002269142552426, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.003824364859610796}, {"id": 268, "seek": 165032, "start": 1668.6399999999999, "end": 1675.76, "text": " theorem. But the equivalences of ac are not just limited to set theory. There are a lot of equivalences", "tokens": [51280, 20904, 13, 583, 264, 9052, 2667, 295, 696, 366, 406, 445, 5567, 281, 992, 5261, 13, 821, 366, 257, 688, 295, 9052, 2667, 51636], "temperature": 0.0, "avg_logprob": -0.1002269142552426, "compression_ratio": 1.6858407079646018, "no_speech_prob": 0.003824364859610796}, {"id": 269, "seek": 167576, "start": 1675.76, "end": 1682.8, "text": " to very many important statements outside of set theory. First, every vector space has a basis.", "tokens": [50364, 281, 588, 867, 1021, 12363, 2380, 295, 992, 5261, 13, 2386, 11, 633, 8062, 1901, 575, 257, 5143, 13, 50716], "temperature": 0.0, "avg_logprob": -0.07974162968722256, "compression_ratio": 1.7155555555555555, "no_speech_prob": 0.005554684437811375}, {"id": 270, "seek": 167576, "start": 1682.8, "end": 1687.92, "text": " If you took any level of linear algebra, this is a foundational statement about vector spaces.", "tokens": [50716, 759, 291, 1890, 604, 1496, 295, 8213, 21989, 11, 341, 307, 257, 32195, 5629, 466, 8062, 7673, 13, 50972], "temperature": 0.0, "avg_logprob": -0.07974162968722256, "compression_ratio": 1.7155555555555555, "no_speech_prob": 0.005554684437811375}, {"id": 271, "seek": 167576, "start": 1687.92, "end": 1693.84, "text": " When we are given a vector space, we automatically assume it has a basis. It turns out that this", "tokens": [50972, 1133, 321, 366, 2212, 257, 8062, 1901, 11, 321, 6772, 6552, 309, 575, 257, 5143, 13, 467, 4523, 484, 300, 341, 51268], "temperature": 0.0, "avg_logprob": -0.07974162968722256, "compression_ratio": 1.7155555555555555, "no_speech_prob": 0.005554684437811375}, {"id": 272, "seek": 167576, "start": 1693.84, "end": 1702.0, "text": " theorem is equivalent to ac. Second, that every ring contains a maximal ideal. This is a statement", "tokens": [51268, 20904, 307, 10344, 281, 696, 13, 5736, 11, 300, 633, 4875, 8306, 257, 49336, 7157, 13, 639, 307, 257, 5629, 51676], "temperature": 0.0, "avg_logprob": -0.07974162968722256, "compression_ratio": 1.7155555555555555, "no_speech_prob": 0.005554684437811375}, {"id": 273, "seek": 170200, "start": 1702.0, "end": 1707.04, "text": " in ring theory, and it's a pretty important statement because maximal ideals are quite useful", "tokens": [50364, 294, 4875, 5261, 11, 293, 309, 311, 257, 1238, 1021, 5629, 570, 49336, 30956, 366, 1596, 4420, 50616], "temperature": 0.0, "avg_logprob": -0.09802002376980251, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.005554751958698034}, {"id": 274, "seek": 170200, "start": 1707.04, "end": 1712.56, "text": " tools. And like our previous example, it's a foundational theorem in algebra, which is also", "tokens": [50616, 3873, 13, 400, 411, 527, 3894, 1365, 11, 309, 311, 257, 32195, 20904, 294, 21989, 11, 597, 307, 611, 50892], "temperature": 0.0, "avg_logprob": -0.09802002376980251, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.005554751958698034}, {"id": 275, "seek": 170200, "start": 1712.56, "end": 1718.0, "text": " equivalent to the axiom of choice. Now, these statements might seem a bit disconnected from", "tokens": [50892, 10344, 281, 264, 6360, 72, 298, 295, 3922, 13, 823, 11, 613, 12363, 1062, 1643, 257, 857, 29426, 490, 51164], "temperature": 0.0, "avg_logprob": -0.09802002376980251, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.005554751958698034}, {"id": 276, "seek": 170200, "start": 1718.0, "end": 1723.44, "text": " our first formulation of the axiom of choice about choice functions, but they are quite immediate", "tokens": [51164, 527, 700, 37642, 295, 264, 6360, 72, 298, 295, 3922, 466, 3922, 6828, 11, 457, 436, 366, 1596, 11629, 51436], "temperature": 0.0, "avg_logprob": -0.09802002376980251, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.005554751958698034}, {"id": 277, "seek": 170200, "start": 1723.44, "end": 1729.84, "text": " from our other equivalent formulation, Zorn's lemma. Both a basis of a vector space and a maximal", "tokens": [51436, 490, 527, 661, 10344, 37642, 11, 1176, 1865, 311, 7495, 1696, 13, 6767, 257, 5143, 295, 257, 8062, 1901, 293, 257, 49336, 51756], "temperature": 0.0, "avg_logprob": -0.09802002376980251, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.005554751958698034}, {"id": 278, "seek": 172984, "start": 1729.84, "end": 1735.6799999999998, "text": " ideal of a ring are just maximal elements under the set inclusion relation. So oftentimes,", "tokens": [50364, 7157, 295, 257, 4875, 366, 445, 49336, 4959, 833, 264, 992, 15874, 9721, 13, 407, 18349, 11, 50656], "temperature": 0.0, "avg_logprob": -0.0964890041866818, "compression_ratio": 1.6702508960573477, "no_speech_prob": 0.0021826315205544233}, {"id": 279, "seek": 172984, "start": 1735.6799999999998, "end": 1741.6, "text": " in abstract algebra, the preferred form of the axiom of choice is Zorn's lemma. Of course,", "tokens": [50656, 294, 12649, 21989, 11, 264, 16494, 1254, 295, 264, 6360, 72, 298, 295, 3922, 307, 1176, 1865, 311, 7495, 1696, 13, 2720, 1164, 11, 50952], "temperature": 0.0, "avg_logprob": -0.0964890041866818, "compression_ratio": 1.6702508960573477, "no_speech_prob": 0.0021826315205544233}, {"id": 280, "seek": 172984, "start": 1741.6, "end": 1747.4399999999998, "text": " the fact that these statements also imply Zorn's lemma is quite interesting. Another important", "tokens": [50952, 264, 1186, 300, 613, 12363, 611, 33616, 1176, 1865, 311, 7495, 1696, 307, 1596, 1880, 13, 3996, 1021, 51244], "temperature": 0.0, "avg_logprob": -0.0964890041866818, "compression_ratio": 1.6702508960573477, "no_speech_prob": 0.0021826315205544233}, {"id": 281, "seek": 172984, "start": 1747.4399999999998, "end": 1752.8799999999999, "text": " equivalence of ac is Tykinov's theorem, which states that the product of any collection of", "tokens": [51244, 9052, 655, 295, 696, 307, 5569, 74, 2982, 85, 311, 20904, 11, 597, 4368, 300, 264, 1674, 295, 604, 5765, 295, 51516], "temperature": 0.0, "avg_logprob": -0.0964890041866818, "compression_ratio": 1.6702508960573477, "no_speech_prob": 0.0021826315205544233}, {"id": 282, "seek": 172984, "start": 1752.8799999999999, "end": 1759.1999999999998, "text": " compact topological spaces is compact with respect to product topology. It's considered one of the", "tokens": [51516, 14679, 1192, 4383, 7673, 307, 14679, 365, 3104, 281, 1674, 1192, 1793, 13, 467, 311, 4888, 472, 295, 264, 51832], "temperature": 0.0, "avg_logprob": -0.0964890041866818, "compression_ratio": 1.6702508960573477, "no_speech_prob": 0.0021826315205544233}, {"id": 283, "seek": 175920, "start": 1759.2, "end": 1765.8400000000001, "text": " most crucial theorems of a branch of topology called point set topology. And these are but just", "tokens": [50364, 881, 11462, 10299, 2592, 295, 257, 9819, 295, 1192, 1793, 1219, 935, 992, 1192, 1793, 13, 400, 613, 366, 457, 445, 50696], "temperature": 0.0, "avg_logprob": -0.062255330085754394, "compression_ratio": 1.737556561085973, "no_speech_prob": 0.0007793540135025978}, {"id": 284, "seek": 175920, "start": 1765.8400000000001, "end": 1772.88, "text": " a few of many examples. So clearly, the axiom of choice is an indispensable theorem of mathematics.", "tokens": [50696, 257, 1326, 295, 867, 5110, 13, 407, 4448, 11, 264, 6360, 72, 298, 295, 3922, 307, 364, 47940, 20904, 295, 18666, 13, 51048], "temperature": 0.0, "avg_logprob": -0.062255330085754394, "compression_ratio": 1.737556561085973, "no_speech_prob": 0.0007793540135025978}, {"id": 285, "seek": 175920, "start": 1773.6000000000001, "end": 1778.16, "text": " If we have the axiom of choice, we can prove these important theorems, and if we want any of", "tokens": [51084, 759, 321, 362, 264, 6360, 72, 298, 295, 3922, 11, 321, 393, 7081, 613, 1021, 10299, 2592, 11, 293, 498, 321, 528, 604, 295, 51312], "temperature": 0.0, "avg_logprob": -0.062255330085754394, "compression_ratio": 1.737556561085973, "no_speech_prob": 0.0007793540135025978}, {"id": 286, "seek": 175920, "start": 1778.16, "end": 1784.16, "text": " these foundational theorems to be true, the axiom of choice must follow. So what's the problem?", "tokens": [51312, 613, 32195, 10299, 2592, 281, 312, 2074, 11, 264, 6360, 72, 298, 295, 3922, 1633, 1524, 13, 407, 437, 311, 264, 1154, 30, 51612], "temperature": 0.0, "avg_logprob": -0.062255330085754394, "compression_ratio": 1.737556561085973, "no_speech_prob": 0.0007793540135025978}, {"id": 287, "seek": 178416, "start": 1784.72, "end": 1788.16, "text": " Why did I say that the axiom of choice is controversial?", "tokens": [50392, 1545, 630, 286, 584, 300, 264, 6360, 72, 298, 295, 3922, 307, 17323, 30, 50564], "temperature": 0.0, "avg_logprob": -0.07187892966074487, "compression_ratio": 1.5748792270531402, "no_speech_prob": 0.022283388301730156}, {"id": 288, "seek": 178416, "start": 1789.92, "end": 1796.0800000000002, "text": " Well, there are a lot of reasons for this controversy. One comes from the philosophical", "tokens": [50652, 1042, 11, 456, 366, 257, 688, 295, 4112, 337, 341, 22976, 13, 1485, 1487, 490, 264, 25066, 50960], "temperature": 0.0, "avg_logprob": -0.07187892966074487, "compression_ratio": 1.5748792270531402, "no_speech_prob": 0.022283388301730156}, {"id": 289, "seek": 178416, "start": 1796.0800000000002, "end": 1802.5600000000002, "text": " consequence of accepting the arbitrary existence of these choice functions, maximal elements,", "tokens": [50960, 18326, 295, 17391, 264, 23211, 9123, 295, 613, 3922, 6828, 11, 49336, 4959, 11, 51284], "temperature": 0.0, "avg_logprob": -0.07187892966074487, "compression_ratio": 1.5748792270531402, "no_speech_prob": 0.022283388301730156}, {"id": 290, "seek": 178416, "start": 1802.5600000000002, "end": 1809.0400000000002, "text": " well-orderings, without any concrete way to construct or describe these things. We just", "tokens": [51284, 731, 12, 4687, 1109, 11, 1553, 604, 9859, 636, 281, 7690, 420, 6786, 613, 721, 13, 492, 445, 51608], "temperature": 0.0, "avg_logprob": -0.07187892966074487, "compression_ratio": 1.5748792270531402, "no_speech_prob": 0.022283388301730156}, {"id": 291, "seek": 180904, "start": 1809.12, "end": 1813.84, "text": " say that they must exist, but as far as we know, we have no idea what they look like.", "tokens": [50368, 584, 300, 436, 1633, 2514, 11, 457, 382, 1400, 382, 321, 458, 11, 321, 362, 572, 1558, 437, 436, 574, 411, 13, 50604], "temperature": 0.0, "avg_logprob": -0.10594359231651376, "compression_ratio": 1.623134328358209, "no_speech_prob": 0.03621450066566467}, {"id": 292, "seek": 180904, "start": 1814.6399999999999, "end": 1821.12, "text": " Another problem occurs with certain implications of ac that seem, well, counterintuitive.", "tokens": [50644, 3996, 1154, 11843, 365, 1629, 16602, 295, 696, 300, 1643, 11, 731, 11, 5682, 686, 48314, 13, 50968], "temperature": 0.0, "avg_logprob": -0.10594359231651376, "compression_ratio": 1.623134328358209, "no_speech_prob": 0.03621450066566467}, {"id": 293, "seek": 180904, "start": 1821.12, "end": 1826.24, "text": " Take the Banach-Tarski paradox, which says that you can take a solid 3D unit ball,", "tokens": [50968, 3664, 264, 13850, 608, 12, 51, 685, 2984, 26221, 11, 597, 1619, 300, 291, 393, 747, 257, 5100, 805, 35, 4985, 2594, 11, 51224], "temperature": 0.0, "avg_logprob": -0.10594359231651376, "compression_ratio": 1.623134328358209, "no_speech_prob": 0.03621450066566467}, {"id": 294, "seek": 180904, "start": 1826.24, "end": 1830.8, "text": " take it apart into finally many pieces, and using only rotations and translations,", "tokens": [51224, 747, 309, 4936, 666, 2721, 867, 3755, 11, 293, 1228, 787, 44796, 293, 37578, 11, 51452], "temperature": 0.0, "avg_logprob": -0.10594359231651376, "compression_ratio": 1.623134328358209, "no_speech_prob": 0.03621450066566467}, {"id": 295, "seek": 180904, "start": 1831.36, "end": 1837.12, "text": " assemble the pieces to get two exact copies of the unit ball. I mean, this sounds ridiculous,", "tokens": [51480, 22364, 264, 3755, 281, 483, 732, 1900, 14341, 295, 264, 4985, 2594, 13, 286, 914, 11, 341, 3263, 11083, 11, 51768], "temperature": 0.0, "avg_logprob": -0.10594359231651376, "compression_ratio": 1.623134328358209, "no_speech_prob": 0.03621450066566467}, {"id": 296, "seek": 183712, "start": 1837.12, "end": 1843.84, "text": " surely that contradicts all intuition of geometry and volume, but if ac is true,", "tokens": [50364, 11468, 300, 28900, 82, 439, 24002, 295, 18426, 293, 5523, 11, 457, 498, 696, 307, 2074, 11, 50700], "temperature": 0.0, "avg_logprob": -0.10220048162672254, "compression_ratio": 1.62, "no_speech_prob": 0.0005883974372409284}, {"id": 297, "seek": 183712, "start": 1843.84, "end": 1848.7199999999998, "text": " it's always Banach-Tarski. So if we want these really nice theorems and mathematics,", "tokens": [50700, 309, 311, 1009, 13850, 608, 12, 51, 685, 2984, 13, 407, 498, 321, 528, 613, 534, 1481, 10299, 2592, 293, 18666, 11, 50944], "temperature": 0.0, "avg_logprob": -0.10220048162672254, "compression_ratio": 1.62, "no_speech_prob": 0.0005883974372409284}, {"id": 298, "seek": 183712, "start": 1848.7199999999998, "end": 1852.9599999999998, "text": " like Takanov's theorem, we're going to have to accept stuff like Banach-Tarski.", "tokens": [50944, 411, 9118, 38990, 311, 20904, 11, 321, 434, 516, 281, 362, 281, 3241, 1507, 411, 13850, 608, 12, 51, 685, 2984, 13, 51156], "temperature": 0.0, "avg_logprob": -0.10220048162672254, "compression_ratio": 1.62, "no_speech_prob": 0.0005883974372409284}, {"id": 299, "seek": 183712, "start": 1853.76, "end": 1857.84, "text": " So yes, the axiom of choice breaks our intuition in more ways than one,", "tokens": [51196, 407, 2086, 11, 264, 6360, 72, 298, 295, 3922, 9857, 527, 24002, 294, 544, 2098, 813, 472, 11, 51400], "temperature": 0.0, "avg_logprob": -0.10220048162672254, "compression_ratio": 1.62, "no_speech_prob": 0.0005883974372409284}, {"id": 300, "seek": 183712, "start": 1857.84, "end": 1863.28, "text": " and this weirdness has garnered some controversy throughout its history. But over time,", "tokens": [51400, 293, 341, 3657, 1287, 575, 25067, 4073, 512, 22976, 3710, 1080, 2503, 13, 583, 670, 565, 11, 51672], "temperature": 0.0, "avg_logprob": -0.10220048162672254, "compression_ratio": 1.62, "no_speech_prob": 0.0005883974372409284}, {"id": 301, "seek": 186328, "start": 1863.28, "end": 1869.36, "text": " the majority of mathematicians have agreed to accept ac as a valid axiom to derive the theorems,", "tokens": [50364, 264, 6286, 295, 32811, 2567, 362, 9166, 281, 3241, 696, 382, 257, 7363, 6360, 72, 298, 281, 28446, 264, 10299, 2592, 11, 50668], "temperature": 0.0, "avg_logprob": -0.07209996060208157, "compression_ratio": 1.6544117647058822, "no_speech_prob": 0.0008040568791329861}, {"id": 302, "seek": 186328, "start": 1870.16, "end": 1875.84, "text": " and as weird as ac might be, it hasn't shown any contradiction so far. But Banach-Tarski,", "tokens": [50708, 293, 382, 3657, 382, 696, 1062, 312, 11, 309, 6132, 380, 4898, 604, 34937, 370, 1400, 13, 583, 13850, 608, 12, 51, 685, 2984, 11, 50992], "temperature": 0.0, "avg_logprob": -0.07209996060208157, "compression_ratio": 1.6544117647058822, "no_speech_prob": 0.0008040568791329861}, {"id": 303, "seek": 186328, "start": 1875.84, "end": 1881.92, "text": " for example, is just a consequence of describing sets so weird that the concept of volume really", "tokens": [50992, 337, 1365, 11, 307, 445, 257, 18326, 295, 16141, 6352, 370, 3657, 300, 264, 3410, 295, 5523, 534, 51296], "temperature": 0.0, "avg_logprob": -0.07209996060208157, "compression_ratio": 1.6544117647058822, "no_speech_prob": 0.0008040568791329861}, {"id": 304, "seek": 186328, "start": 1881.92, "end": 1887.12, "text": " just falls apart. It may break our intuition, but that's different from a contradiction.", "tokens": [51296, 445, 8804, 4936, 13, 467, 815, 1821, 527, 24002, 11, 457, 300, 311, 819, 490, 257, 34937, 13, 51556], "temperature": 0.0, "avg_logprob": -0.07209996060208157, "compression_ratio": 1.6544117647058822, "no_speech_prob": 0.0008040568791329861}, {"id": 305, "seek": 186328, "start": 1888.16, "end": 1893.12, "text": " But if anything, the axiom of choice shows the chaotic nature of mathematics.", "tokens": [51608, 583, 498, 1340, 11, 264, 6360, 72, 298, 295, 3922, 3110, 264, 27013, 3687, 295, 18666, 13, 51856], "temperature": 0.0, "avg_logprob": -0.07209996060208157, "compression_ratio": 1.6544117647058822, "no_speech_prob": 0.0008040568791329861}, {"id": 306, "seek": 189328, "start": 1893.68, "end": 1897.92, "text": " Our theorems are not something to be taken for granted. Our truths are often confusing and", "tokens": [50384, 2621, 10299, 2592, 366, 406, 746, 281, 312, 2726, 337, 12344, 13, 2621, 30079, 366, 2049, 13181, 293, 50596], "temperature": 0.0, "avg_logprob": -0.08151264848380253, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009398696711286902}, {"id": 307, "seek": 189328, "start": 1897.92, "end": 1903.92, "text": " built upon a foundation not of objectives, but of assumptions we can only hope are strong.", "tokens": [50596, 3094, 3564, 257, 7030, 406, 295, 15961, 11, 457, 295, 17695, 321, 393, 787, 1454, 366, 2068, 13, 50896], "temperature": 0.0, "avg_logprob": -0.08151264848380253, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009398696711286902}, {"id": 308, "seek": 189328, "start": 1904.96, "end": 1910.24, "text": " But maybe that's the beauty of it. There may be some things we can never truly know the answer to,", "tokens": [50948, 583, 1310, 300, 311, 264, 6643, 295, 309, 13, 821, 815, 312, 512, 721, 321, 393, 1128, 4908, 458, 264, 1867, 281, 11, 51212], "temperature": 0.0, "avg_logprob": -0.08151264848380253, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009398696711286902}, {"id": 309, "seek": 189328, "start": 1910.24, "end": 1916.8, "text": " maybe even some statements that don't have an answer. But we constructed our system of truths", "tokens": [51212, 1310, 754, 512, 12363, 300, 500, 380, 362, 364, 1867, 13, 583, 321, 17083, 527, 1185, 295, 30079, 51540], "temperature": 0.0, "avg_logprob": -0.08151264848380253, "compression_ratio": 1.654867256637168, "no_speech_prob": 0.0009398696711286902}, {"id": 310, "seek": 191680, "start": 1916.8, "end": 1923.76, "text": " and relying only on our intuition and assumptions and logic discovered what the universe had to offer.", "tokens": [50364, 293, 24140, 787, 322, 527, 24002, 293, 17695, 293, 9952, 6941, 437, 264, 6445, 632, 281, 2626, 13, 50712], "temperature": 0.0, "avg_logprob": -0.08991189175341503, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.022281451150774956}, {"id": 311, "seek": 191680, "start": 1925.44, "end": 1930.96, "text": " Even if we know there is a limitation, that doesn't mean we can't reach new heights.", "tokens": [50796, 2754, 498, 321, 458, 456, 307, 257, 27432, 11, 300, 1177, 380, 914, 321, 393, 380, 2524, 777, 25930, 13, 51072], "temperature": 0.0, "avg_logprob": -0.08991189175341503, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.022281451150774956}, {"id": 312, "seek": 191680, "start": 1932.08, "end": 1936.24, "text": " Is the axiom of choice true? Does that question even make sense?", "tokens": [51128, 1119, 264, 6360, 72, 298, 295, 3922, 2074, 30, 4402, 300, 1168, 754, 652, 2020, 30, 51336], "temperature": 0.0, "avg_logprob": -0.08991189175341503, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.022281451150774956}, {"id": 313, "seek": 191680, "start": 1936.96, "end": 1941.9199999999998, "text": " Are the axioms of ZFC truly free of contradictions? We may never know,", "tokens": [51372, 2014, 264, 6360, 72, 4785, 295, 1176, 18671, 4908, 1737, 295, 15858, 15607, 30, 492, 815, 1128, 458, 11, 51620], "temperature": 0.0, "avg_logprob": -0.08991189175341503, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.022281451150774956}, {"id": 314, "seek": 194192, "start": 1942.72, "end": 1947.92, "text": " but maybe that's not the point. Just being curious, desiring to know more, and pushing", "tokens": [50404, 457, 1310, 300, 311, 406, 264, 935, 13, 1449, 885, 6369, 11, 730, 5057, 281, 458, 544, 11, 293, 7380, 50664], "temperature": 0.0, "avg_logprob": -0.16967574337072538, "compression_ratio": 1.4746835443037976, "no_speech_prob": 0.010323954746127129}, {"id": 315, "seek": 194192, "start": 1947.92, "end": 1953.68, "text": " ourselves to make sure our truths are truths, that in and of itself allows us to contemplate", "tokens": [50664, 4175, 281, 652, 988, 527, 30079, 366, 30079, 11, 300, 294, 293, 295, 2564, 4045, 505, 281, 19935, 473, 50952], "temperature": 0.0, "avg_logprob": -0.16967574337072538, "compression_ratio": 1.4746835443037976, "no_speech_prob": 0.010323954746127129}, {"id": 316, "seek": 194192, "start": 1953.68, "end": 1967.04, "text": " and debate and imagine and discover. Until next time.", "tokens": [50952, 293, 7958, 293, 3811, 293, 4411, 13, 9088, 958, 565, 13, 51620], "temperature": 0.0, "avg_logprob": -0.16967574337072538, "compression_ratio": 1.4746835443037976, "no_speech_prob": 0.010323954746127129}], "language": "en"}