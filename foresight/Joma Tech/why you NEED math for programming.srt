1
00:00:00,000 --> 00:00:07,000
ᶠᶕᶖᶦᶜᵗ ᶠᶫᶜᶜᶜᶜᵉylᶦᵛᶜᶜᶜᶜᶜᶜ featured in the anime reaching and beforehand…

2
00:00:07,000 --> 00:00:11,000
RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR44ınınᶠᶠᶜ� while the headphone calls it over before the sound.

3
00:00:11,000 --> 00:00:21,900
2M

4
00:00:21,900 --> 00:00:51,900
ლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლლ�

5
00:00:51,900 --> 00:01:06,440
ვოლლლლ მლლლლლგლლლლლლლლლლლლ ეით ეგ მʄპვო ნოევს�iyლი Ⴠ჏ეპბʐფივემო სჩივემლ� western western western western western western western western western western western western western western意us

6
00:01:06,440 --> 00:01:07,220
,,,,,, ,,

7
00:01:07,380 --> 00:01:07,880
,,,

8
00:01:11,880 --> 00:01:12,500
,

9
00:01:12,500 --> 00:01:18,500
Oh, right. Okay, let me just show you. Let me just finish up real quick.

10
00:01:29,500 --> 00:01:30,500
Ready?

11
00:01:43,500 --> 00:01:48,500
Wait, I don't follow this.

12
00:01:48,500 --> 00:01:50,500
It's a doughnut.

13
00:01:50,500 --> 00:01:52,500
It's incredible, isn't it?

14
00:01:54,500 --> 00:02:00,500
So all of this just to render a doughnut on your terminal?

15
00:02:03,500 --> 00:02:04,500
What the f-

16
00:02:05,500 --> 00:02:11,500
Thanks for watching. The idea and code were originally from the amazing Andy Sloan.

17
00:02:11,500 --> 00:02:19,500
Where he was able to code this whole program in C and made the code itself look like a doughnut.

18
00:02:19,500 --> 00:02:24,500
He has an article explaining how the code works, which I'll link in the description.

19
00:02:24,500 --> 00:02:27,500
So why is math important for programming?

20
00:02:27,500 --> 00:02:35,500
Well, it's because even if 99% of the time you won't need it, there's a 1% chance that you might.

21
00:02:35,500 --> 00:02:41,500
And it's in those moments that separate out a great programmer from average ones.

22
00:02:41,500 --> 00:02:50,500
And if you do know your math, you'll know how to modify this doughnut to increase the size, change the rotation, or even make a cube instead.

23
00:02:51,500 --> 00:02:57,500
Also, if you want to do computer graphics, machine learning or cryptography, you're going to need math.

24
00:02:57,500 --> 00:03:01,500
So might as well get good at it as you did for programming.

25
00:03:02,500 --> 00:03:06,500
Anyway, back to the doughnut. How do we write this program?

26
00:03:06,500 --> 00:03:19,500
Well, first you have to create a doughnut, which is essentially a solid of revolution where we have a circle that rotates around the y-axis, which will make a doughnut, a.k.a. a tourist.

27
00:03:19,500 --> 00:03:26,500
This is the formula to create the circle centered at R2 with radius R1.

28
00:03:26,500 --> 00:03:32,500
And this is the rotation matrix to rotate this circle around the y-axis.

29
00:03:32,500 --> 00:03:37,500
So when we combine them, we get the coordinates of every point on your doughnut.

30
00:03:37,500 --> 00:03:42,500
Now that we have a doughnut, shut up, I know this is a bagel.

31
00:03:42,500 --> 00:03:50,500
Now that we have a doughnut, we want to rotate it around the x and z-axis so it looks cool or flying and stuff.

32
00:03:50,500 --> 00:03:56,500
We can do that by multiplying our doughnut coordinates with these two rotation matrices.

33
00:03:56,500 --> 00:04:04,500
Now we have to map this 3D flying doughnut onto a 2D screen, which will become our terminal.

34
00:04:04,500 --> 00:04:09,500
So each character on the terminal will be a pixel on the screen.

35
00:04:09,500 --> 00:04:17,500
To figure out how to shade our doughnut, we calculate the dot product of the surface normal and the direction of the light.

36
00:04:17,500 --> 00:04:22,500
So as you can see, when the normal points this way, it's way brighter.

37
00:04:22,500 --> 00:04:25,500
And when it points that way, it's way darker.

38
00:04:25,500 --> 00:04:29,500
So the dot product will tell us how light or dark it is.

39
00:04:29,500 --> 00:04:36,500
We take the result of the dot product and map it into these characters from darkest to brightest.

40
00:04:36,500 --> 00:04:39,500
And lastly, we draw that on our terminal.

41
00:04:39,500 --> 00:04:40,500
And voila!

42
00:04:40,500 --> 00:04:46,500
If you like the way I teach, you can check out my new course on data structures and algorithms,

43
00:04:46,500 --> 00:04:52,500
where I use easy to understand animations to explain these concepts.

44
00:04:52,500 --> 00:04:57,500
The first 100 people to sign up for Joma class will get 15% off.

45
00:04:57,500 --> 00:05:00,500
Joma class!

