start	end	text
0	5240	All right, so welcome to the first episode of Killing the Caveman.
5240	11880	So in this episode, I'm going to be talking about why COBOL is needed now and why it should
11880	17580	have died 20 years ago, it's 2020 right now, and why governments suddenly need programmers
17580	18580	for it.
18580	25520	All right, recently due to the pandemic, there has been a really big need for some governments
25520	32440	and businesses to have an old software be worked on that was built in COBOL, because
32440	36600	I think there's like millions of lines of code that are currently still written in
36600	37960	COBOL.
37960	41880	So if you don't know what COBOL is, it is an old language used for business.
41880	50000	In fact, the acronym is Common Business Oriented Language, or that's a, yeah that's common
50000	57120	is the C-O and then business is the B of course, and then oriented O and language.
57120	61800	Common Oriented Business Language, ah, you know what I mean.
61800	65760	This is probably the most boring acronym I have ever heard by the way, like business
65760	67800	has the word business and common in it.
67800	70560	Those are like very boring words, never mind.
70560	73920	Let me know in the comments if you think there's a more boring acronym that you can
73920	75360	think of.
75360	80220	So the language should have been gotten rid of like many, many years ago, but governments
80220	84960	refuse to get rid of it in favor of new modern languages and technologies, because these
84960	88040	new modern languages and technologies cost money.
88040	98120	And now these governments are faced with the consequences of not replacing them.
98120	103720	So because most of these people who know COBOL are of course retired now, and because nobody
103720	108800	wants to learn it of course, and we'll get to reasons why, and so no one can fix it or
108800	112000	maintain it if there's an issue.
112000	116880	So let's get to the history of what COBOL is and why was it used.
116880	120200	So COBOL was made in 1960.
120200	126080	So if you started to learn or started to use COBOL like right out of college when you like
126080	132960	turned 20 or something like that, you would be 80 years old because that's 60 years ago,
133320	134320	1960.
134320	135320	Ridiculous.
135320	142680	So you can kind of guess why people who developed with this language are retired now, because
142680	145160	of course most people retire around 65 years old.
145160	152680	So if most people started using this language in like 1975, then they're probably retired
152680	154400	by now.
154400	159000	So you might be wondering why are these places still using this language?
159000	161400	Why haven't they replaced it?
161400	167840	Like what purpose does it have other than that it's too expensive to replace for the
167840	171040	local government or businesses?
171040	180560	And of course the main reason is three words, mainframe, processing, speed, MPS, and it's
180560	185760	also the cost associated with replacing it with these newer technologies because then
185760	190040	you would have to hire developers and developers don't cost a lot nowadays, or they do cost
190040	191040	a lot.
191040	197120	So it's more expensive compared to other engineers or software engineers are more expensive generally
197120	199600	than other kinds of engineers.
199600	203600	And oftentimes people don't want to spend all their money just developing like software
203600	206320	that not many people are going to use.
206320	214040	Alright so I want to show you an article on ours Technica about how or why IBM is scrambling
214040	217720	to find or train more COBOL programmers to help states.
217720	224360	So this is kind of look at these old computers here they so I don't even know what to like
224360	228440	think about them they look like washing machines or like something to do my laundry with or
228440	229440	something like that.
229440	233040	It looks like a kitchen countertop too.
233040	236560	And I don't know what these things on the side are but it seems interesting.
236560	244120	But anyways New Jersey is one of the states that needs COBOL programmers to help with
244120	247200	the state's unemployment insurance system.
247200	254720	So this is kind of one of the uses of COBOL because this unemployment system probably hasn't
254720	260200	seen much use for a long long time because if you didn't know the unemployment rate prior
260200	270480	to recent happenings has been very low it's been record lows for the last couple of years
270480	271480	I think.
271480	274320	I mean of course since like 2008 it's been low.
274320	280880	So since that time though they probably had a lot of people to work on or not like a lot
280880	284440	of people but some people to work on COBOL back during that time.
284440	291080	But now that everything is modernized and the unemployment rate is like skyrocketed recently.
291080	298520	They need more people or more people are going through file for unemployment of course.
298520	305120	So IBM is trying to like train people to work in COBOL.
305120	311200	But like I said most COBOL most experienced COBOL programmers aren't getting any younger
311200	314120	so I mean no one's getting any younger.
314120	322000	But they're not going to have time to train people with to meet all their demands and
322000	326000	the amount of time because COBOL is not an easy language and I'll show you some examples.
326000	331040	So I do want to show you another example of how COBOL was used and why people needed COBOL
331040	332040	developers.
332040	335960	So in Kansas government Laura Kelly said the State Department of Labor was in the process
335960	344680	of modernizing COBOL but the virus came in and they couldn't do it of course or at least
344680	348480	they're not able to do it in time for this pandemic.
348480	354000	So the operating on really old stuff currently and of course that's going to slow down things.
354000	358240	So I mentioned that it was made in like 1960-1959.
358240	363920	Well is programming language used or very significant percentage of business systems
363920	366840	over the period of 60s 70s and even the 80s.
366840	372880	So what about the 90s the zeros and the teens why haven't people replaced it since then
372880	379560	that's 30 years even during like high usage maybe 20 years.
379560	383000	So that's kind of ridiculous how they haven't replaced this.
383000	388920	I see now that the 220 billion lines of COBOL code and use today I don't know about you
388920	396640	but that's a lot of lines of code and the lines of code for COBOL are very verbose but
396640	403240	even still that's kind of crazy 43 percent of banking systems 90 percent of ATMs what
403240	408880	that's ridiculous 95 percent of ATMs like I might be thinking what can you replace that
408880	410960	with and that's a good question.
410960	418240	Alright so COBOL was kind of like the enterprise programming language for this old time era.
418240	423280	So it of course can be replaced with anything enterprise nowadays which can be a variety
423280	429720	of languages Python Java JavaScript C++ really it can even do be done on assembly it doesn't
429720	436840	really matter what you replace it with as long as it is at least efficient.
436840	438960	So let me show you some cool things about COBOL.
438960	444520	So it's the first high level very widely used high level programming language and it's
444520	449180	English like in structure that's probably the unique thing about COBOL.
449180	453440	So it has self-documentating so what that means is you don't have to like make your
453440	459600	own documents elsewhere because it's so verbose and it can handle huge data processing which
459600	465520	of course isn't huge enough at this during times of need like this.
465520	469080	And of course mirror messaging is useful.
469080	474040	So I want to show you now a Hello World program in COBOL and see what it's like.
474040	479160	Alright of course I'm not an expert in COBOL because I'm not from the dinosaur area but
479160	481440	I can probably see the basics of it.
481440	488000	So display it's kind of like real world real words to display things.
488000	494720	So display you can say hello world you can move tutorial point I don't know where is
494720	500760	that defined to WS name I guess and then you okay this is another display so hello my
500760	504520	name is then my ID is.
504520	513040	So you can execute it and then it will say hello world my name is oh okay.
513040	523560	So they kind of declared tutorial point to be their name and then their ID was um that's
523600	524600	really cool.
524600	530280	I mean it's really like interesting how they did it but this seems like this could be done
530280	535320	in like a line of code in like almost any other language or maybe like three lines of
535320	543080	code so it's kind of crazy so this is just like how many lines three six like at least
543080	548840	ten fifteen lines of code just for something simple as this that's kind of ridiculous.
548840	555760	Alright so what makes COBOL so bad and as you can see a little bit there is it is verbose
555760	561960	it requires a lot of words to do very simple things and I didn't show you much COBOL code
561960	568880	but it is difficult to read COBOL code like that was pretty difficult to read because
568880	573840	there was so many lines of code and you had to figure out what was going on and the verbose
573840	581040	part was wasn't too useful in the self-documentating part because usually good code doesn't need
581040	583080	documentation.
583080	588960	So programs written in COBOL were also difficult to read and hard to modularize into different
588960	595560	little pieces which made them have kind of a lack of structure which is not good for
595560	597560	a programming language.
597560	607760	So if you have ever heard of the famous computer scientist Edsger Dijkstra like he made Dijkstra's
607760	613040	algorithm so if you don't know what that is it is an algorithm that almost everyone who
613040	618920	takes a computer science class called like data structure and algorithm needs to know
618920	626480	Dijkstra's algorithms to be somewhat good at data structure and algorithms so he Dijkstra
626480	635520	criticized COBOL because this is back in the day when he was algorithming that's a word.
635520	642200	So he said the use of COBOL cripples the mind and I can kind of understand why.
642200	644920	So that's the end of this COBOL video thanks for watching.
