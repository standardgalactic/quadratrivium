{"text": " My name is Jason Yelik, and I'd like to talk with you about the Hyperledger Fabric Lifecycle today. In particular, the new distributed chain code lifecycle introduced in version 2.0 of Hyperledger Fabric. Today, we'll be starting by talking about an overview of the version 1.x lifecycle, so basically how chain code lifecycle has worked up until version 2.0. Then we'll do a similar discussion of the version 2.0 lifecycle, sort of a high level, including a workflow for that, and then some permutations around that workflow. Finally, we'll move on to details about the version 2.0 lifecycle, and then finally some other notes and considerations that you should keep in mind when dealing with the v2 lifecycle. Starting out with how chain code lifecycle worked in Fabric 1.x. This should be a pretty familiar picture. You have a couple organizations, their respective admins, and an ordering service, and we would like to get chain code installed and instantiated so that we can begin transacting on the blockchain. So step one, each org admin installs the chain code to one or more of their peers. Step two, one of the admins goes out and does a LSCC deploy or upgrade transaction to instantiate that chain code, gets the result, submits it to ordering, commits it all the peers, and now the chain code is up and running. It's basically a two-step process, which is nice because it's a small number of steps, but it has a lot of drawbacks. To begin with, installing a chain code sort of grants this unconditional agreement to run that chain code on any channel that your peer is joined to, whether or not you agree that that chain code should run on that channel, or whether you agree to the assorted parameters to that instantiation. So for instance, you might want a certain endorsement policy associated with that chain code. You might want to have control over when that chain code is upgraded and downgraded, and you might simply not want to execute that chain code. So that's sort of one of the first big problems, and this is where we talk about this sort of distributed chain code life cycle, or sort of distributed government, the governance distributed agreement. So continuing, so when we say that the new life cycle is decentralized, that's what we're talking about, that it's not just one admin making the decisions, that that's a problem we had in the previous life cycle, and that's something the new life cycle is here to address. Now, the second problem, which is a little less obvious, is that the instantiation, i.e. that deploy or that upgrade transaction, that includes invoking a knit of the deployed chain code. But if we look at our picture here, you can see that that transaction actually only executes on Ord1's peer. So even though we may have set an endorsement policy for this chain code, that initial invocation of a knit doesn't respect that endorsement policy. And you know, in a lot of ways that's fine because it's being invoked by a trusted user and some other things, but it's still an asymmetry, and it's something that we wanted to fix. And then finally, this is more of an operational one. If you've ever tried to operate a fabric network and you've tried onboarding new orgs and that sort of thing, what you'll quickly realize is that even though you don't want to change anything about the code of your chain code, any of the chain code logic, if you want to modify, say, the endorsement policy to include a new org, well, you actually have to go through this whole process of installing the chain code and performing an upgrade across the network, which is really unnecessary and causes a lot of churn that's a bit of a pain, operationally speaking. So these are sort of the three big problems that we encountered in the original chain code lifecycle, which sort of leads to the three principles for the new v2 decentralized lifecycle. So first one is that peers only participate in a chain code. If the org admin explicitly agrees, yes, I like this configuration for the chain code. So until the orgs admin agrees, that peer will not endorse the definition, the instantiation, and further it will not endorse any invocation of that chain code, including its init function. So this basically, if we go back to our previous slide, we said that the installing agrees to instantiate unconditionally, this fixes that problem. Secondly, no exceptions to endorsement policies. This corresponds to our second problem we enumerated, which is the chain code init should be subject to the same endorsement policy as the rest of the invocations. So we enforce that chain code init abides by the endorsement policy as defined for the chain code, just like every other transaction. But secondly, and this one is a little more subtle, in the v1.x lifecycle, lscc really didn't have an endorsement policy. So in the v2 distributed lifecycle, we also enforce that the lifecycle at chain code itself is governed by an endorsement policy and decisions are validated based on that endorsement policy. So finally, the third parameter, which comes back to our operational problems, is that you should be able to modify your chain code definition, you should be able to change the endorsement policy, add collections, etc., without requiring an upgrade of the code across the network. So those three things are sort of the guiding principles behind the design of the v2 decentralized lifecycle, and you'll be able to see that reflected in just a moment when we do an overview of how the decentralized lifecycle works. Now, before we go into the overview of how the lifecycle works, it's important to mention sort of an implementation detail. And that's that v2 lifecycle is very much powered by a new v2 concept, and that is organization implicit collections. Now, if you're at all familiar with private data collections from v1.2 or 3 onwards, you'll know that the basic idea is that it's a namespace that's reserved that only certain members can read. So on v2, we've sort of extended that concept, and you can now associate which members can write to that namespace. And there's the set of implicit collections, which are defined implicitly, i.e. they're there without you having to do anything to define them. And you get one implicit collection per organization in your channel, and only peers from that organization may write to it, and only peers from that organization may read from it. So this allows you to implement a lot of interesting things in your chain code that weren't previously possible, notably things like voting schemes, and ways for a chain code of one org to make a different decision than a chain code of another. So that's a bit of a side note, and I don't want to get too off topic here, but implicit collections are sort of the underpinning technology behind the new v2 lifecycle, and you can use this in your own chain codes as well. So back to that overview. Just like with the v1.x lifecycle and the v2 lifecycle, the first thing we do is an install. Now the packaging format has been changed, there are some different things about the install, but conceptually, it's still just an install, you're putting the chain code's code package onto the file system, and that takes place as your first step performed by each admin, respectively. Secondly, and this is where things start to differ a little bit, um, org one's admin, in this case, is going to execute an approve for my org function against his peer, send that to ordering, and it commits. Now this is modifying the implicit collection for org one, indicating that org one agrees with this particular chain code definition that org one's admin is approving. Now org two's admin is going to do the very same thing, sends to his own peer, his approval, submits that to ordering, it commits, and now we have an entry in the implicit collection for each org, indicating agreement to some chain code definition. At this point, org one's admin, or it could be org two's, but we'll use org one's in this case, invokes the lifecycle chain code on one of his peers, and one of org two's peers, saying let's go ahead and commit this definition, submits that to the ordering service, it commits in the public namespace, and now the chain code is defined. The definition that was approved by the two org admins have committed, and the chain code was ready to execute. At this point, typically the same user who did the commit of the definition would be the one who invokes init, and init can execute just like any other chain code invocation. The peer will track whether or not init has been called and enforce that it's the first function called, but I think as people get used to this new decentralized lifecycle, you'll realize more and more that init usually isn't necessary, and it's actually a whole lot easier and more flexible to implement init logic inside the chain code itself if needed. You know, a couple examples for this could be, first off, if you implement init inside a chain code, you can require each org to perform some action before the chain code is initialized, or if you're doing something like upgrading your key schema, you can require a series of transactions that modify your database layout before you allow normal transactions to begin, because a single transaction would be too large. And really, to implement init logic, it's really very simple. You just pick a reserved key, perform a read against that key, and see whether it says the chain code has been initialized or not. If it's not, enforce init, otherwise, allow things through as usual. And in fact, that's all fabric does for you when in your definition you require init. So, with the new lifecycle, not only are the semantics a little different, we had to pick a new name for lifecycle. Now, if you're familiar with operating a fabric v1.x network, you'll know that lifecycle operations were done through a system chain code called lscc. So, lscc is no longer the chain code used for lifecycle operations. Instead, there's a new system chain code called underscore lifecycle. And the underscore in the front is a prefix to indicate that it's a system name space, the suffix of ending chain codes in scc to indicate system name spaces was not one of the better ideas in fabric v1.x. So, underscore is now a reserve system name space, underscore lifecycle is the lifecycle system chain code. And in fabric v2, both the underscore lifecycle and the lscc chain codes exist. Both are functional. And in the event that the distributed lifecycle has been enabled, first we'll check definitions done in the new lifecycle. And if there's nothing there, we fall back to the old lifecycle. But it is important to note that eventually fabric will be removing support for the legacy lscc. So, it's a good idea to go ahead and migrate onto this new lifecycle as soon as possible because at a later fabric version, lscc will be removed. And you'll be forced to move there eventually. So, let's talk about how lifecycle works sort of from a user perspective. Let's say you have three organizations, org one, org two, and org three. And everyone wants to run chain code mycc. And we've agreed that two out of three orgs must agree that's the endorsement policy we want to go with. So, what would this look like implemented? Someone's got to take the lead. Someone has to sort of administrate the process. And for here, we've chosen org one, but it could be really any admin. And what they would do is they would package this chain code using the pure CLI into what is now just a standard tar GZ. And disseminate that package to the other orgs. Now, the other orgs, they can take a look at this package. And unlike in fabric v1.x, where the package format was sort of a fabric specific thing, a CDS file, in the v2 lifecycle, these packages are standard tar GZs. So, an admin can simply use whatever commodity tooling they would like to take a look at that package, make sure it is, in fact, the chain code that they want to install. Now, everyone goes and installs this chain code package and commits that approval, sends that approve for my org transaction through, according to the parameters that we sort of agreed out of band. So, this is my cc, it's version one, the endorsement policy is two out of three and so forth. Once everyone's done their approval, and again, typically we would wait for everyone, then the administrative org one sends the transaction to commit the chain code definition for that channel, and the chain code is now operational. So, let's look at this visually. We have three peers. The administrators install the chain code on each of those three peers. They approve the chain code with all of the same parameters, and then they commit that chain code definition, and now the chain code is defined, all three peers are ready to execute it. This is the standard workflow and, you know, what you can expect to happen in most production fabric networks. You know, everyone is in sync, everyone is in agreement, everyone does the same approval, and once everyone is ready, the definition commits. But, you know, we don't want to require unanimous agreement for everything. So, here are some permutations. Let's say one of the admins doesn't install the chain code. One of the admins, you know, either they forget to or they simply don't want to execute this chain code. Well, things still proceed just fine because all three ORGs have agreed on this chain code definition, and that definition commits as normal, but only ORG1 and ORG2's peers will service invocations for that chain code because, of course, the chain code is not installed on ORG3's peer. Hopefully, that's unsurprising and what everyone would expect. Now, the second one. Now, this is sort of the crux of the difference between the v1.x and the decentralized lifecycle, and that's if ORG3's admin does not approve that definition. If ORG3's admin does nothing, well, it's still possible for the chain code to get defined on the channel because ORG1 and ORG2 agree, and we'll talk a little bit more about that later. But here, the chain code gets defined, and even though ORG3's peer has the chain code installed, ORG3's peer will not execute that chain code, and that's because ORG3's admin never agreed to this particular definition. Well, what if they did agree that they wanted to run this chain code, but, you know, in a slightly different way? So in this case, you know, you can see in bold here that for ORG3, their admin said, I want a policy of three out of three for the endorsement policy. All three ORGs must execute. While ORG1 and ORG2 said, no, two out of three is just fine. Well, in this case, even though ORG3 has said, yes, I want to run this chain code, because ORG3's agreement doesn't match what's actually committed in the channel, ORG3 will still refuse to execute the chain code. So you get the same effect as if the ORG3's admin had done nothing. And so finally, this is sort of the worst case. Communications broke down. People couldn't agree on the parameters. Here we have ORG1's admin picked version 1.1, ORG3 picked a policy of three out of three. We simply don't have enough agreement here on how this chain code should be instantiated. So in this case, the chain code could not be defined because we wouldn't be able to gather sufficient endorsements from the lifecycle chain code to actually get this definition committed. So I've been sort of avoiding the topic and alluding to it a little bit, but lifecycle is governed by endorsement policies. In the v1.x lifecycle, there were a few things going on. There were some sort of hard-coded validation rules in the validation plugin logic, or vscc, as it used to be called, that treated lifecycle invocation specially. The endorsement policy was also hard-coded there. In the new lifecycle, everything is based off of endorsement policies. In particular, to commit a definition into the lifecycle chain code namespace, you need to satisfy the channel application lifecycle endorsement policy. So this is a channel configuration policy, much like the channel readers or channel writers policies, but this one defaults to requiring that a majority of the application orgs must endorse. So what this means is in the default configuration, so long as a majority of the organizations in the network can agree on a change, then that change will be permitted. Now, note, just like we saw back here, just because the network agrees on a definition doesn't force an org to participate in that chain code, but what it does do is it allows the network to make changes even if one of the actors is not participating. And so this could be maybe there's an urgent security bug or other reason that the chain code needs to change, and one of the organizations, they can't be contacted. They're administrators on vacation, something like that. We basically didn't want to default to requiring unanimous agreement, although, of course, this is a configurable policy in the channel config. So for those users who don't like the default of a majority, this can be modified to be any policy that you like. In a more dictatorial network, you could require that a single specific org is the only org authorized to make life cycle changes. Now, secondly, there's another new endorsement policy, which is simply channel application endorsement, and this serves as the new default endorsement policy for chain codes when users fail to provide one. In v1.x, if you failed to provide an endorsement policy for your chain code, the default you got was any member of any org is an adequate endorsement, which makes for a very convenient development default. It makes it very easy to get up and going, but we saw confusion from users who maybe they didn't understand what an endorsement policy was, and they ended up with a default that didn't give them the security guarantees they were hoping for. So again, we think that this default of a majority of organizations must endorse, that that's a pretty reasonable default, but it's just a channel policy. It can be changed to whatever the specifics that a channel requires. Now, here's another point that sort of was deliberately omitted in the previous slides. We talk a lot about these sort of sequences of events that org ones admin does something, and org twos admin does something, and the problem we always have when we have workflows like this is how do we know that what org one agreed to is still valid and current? And so you can sort of think of a sequence number as being sort of like an election year or something like that, that in sequence one, we're all voting on the definition, on the first definition of a chain code. For sequence two, we're talking about the first change to that definition. For sequence three, we're talking about the change to the changed definition and so forth. And so what that allows us to do is we can approve a chain code and commit its definition at sequence one. And then while that chain code is operating, we can now begin approving a new definition at sequence two. And once the entire network has, you know, agreed to that definition, installed that chain code, so on and so forth, then we can sort of atomically move up to sequence two. And then you have a process repeats for sequence three, so on and so forth. So this is just a new concept that you need to be aware of that each incarnation of the chain code definition is assigned to sequence. And when we want to talk about this version or the next version, we talk relative to that sequence number. So let's go ahead and look at how this might, you know, actually manifest. If we go back to our three org example, you know, if we have org one and org two, they approve a chain code definition at sequence one. And because org threes administrator is on vacation, they go ahead and commit this chain code definition. And we end up back in that scenario where org one and org two will, you know, endorse invocations of that chain code, but org three will not. Well, org threes admin gets back from vacation, sees what the network did, says, oh, great, I agree. Now org three can go ahead and approve the definition at sequence one. And org threes peers will now begin endorsing just like org one and org twos. The important thing to note here is that without this sequence number, if org three simply sent a new approval in, it would be unclear whether org three was attempting to, you know, approve the current definition or whether org three wanted to, you know, maybe make some changes to the definition. So, and that's what we see in this next step here. org one, org two and org three, they want some sort of change. So they approve a new definition at sequence two. Once they've all approved at sequence two, we can commit. And that chain code definition now goes to sequence two. Of course, if you wanted to make another change to the chain code, you would make that change at sequence three, so on and so forth. Now, all of this has corresponding peer CLI commands, and they're not all listed here, in particular, there's a lot of query ability that you won't see here. But the big, you know, four you want to be aware of, there's a new packaging command, a pure life cycle chain code package. That will generate that tar GZ we talked about earlier. There's an install command, and install it to the peers, and approve command, which will, you know, approve a particular chain code definition for your org. Note that there is the sequence number attached to this, whether an it is required and so on and so forth. And then finally, a way to commit that chain code definition. So a few other notes and considerations. One thing that is either a feature or a, I won't say a bug, but a problem for operators that you may have run into is this notion of chain code fingerprint matching. If you've ever tried to package the same chain code multiple times, and install it on different peers, what you'll often find in your logs is this chain code fingerprint mismatch error. And essentially, this comes down to the fact that even if you have the same set of files, getting them to package into exactly the same set of bytes is a little tricky. That you have things like file timestamps, you have execute bits, you have different file systems that support different attributes, and so on and so forth. So in particular, if you tried to package a chain code with the node SDK, and then you tried to package that same chain code with the peer CLI, you know, you would basically end up with different package fingerprints. And at your execution time, you would encounter this mismatch, which is not something that you wanted. Your chain code would otherwise execute just fine, but you would have these fingerprint mismatches that prevented things from working. So that exists no more. That's gone, which means actually that your chain codes can even differ slightly from peer to peer. That if, you know, org one installs a chain code package, and org two installs a chain code package, those can actually be different chain codes. Now, they must implement the same logic. And by and large, you know, we would usually expect them to be the same chain code. But going back to one of our examples from earlier, let's say that there's a bug in the chain code that the chain code forgot to check if the third argument was nil before dereferencing it. So if someone sends in bad input, it can crash the chain code. Well, you know, this doesn't actually have any impact on the chain code read write set. It just causes the chain code to crash sometimes. So it would be perfectly possible for org one to recognize this bug, fix it and push a patched version of the chain code to their peers. And instantly this chain code will no longer crash on their peers on this bad input. Now, or two, you know, they get the email from org one saying, you know, there's this bug and we need to fix it. Here's my patch. They can take a look at that patch. They can evaluate it. In this case, it should be, you know, an obvious we'll accept it. You know, but basically, organizations can roll out minor fixes to the chain codes, independently of each other, and we no longer require that coordination. Of course, if you wanted to change the, you know, the DB layout or, you know, what keys functions are accessing, you know, we still have those same chain code execution guarantees via the endorsement policy that basically checks to make sure that the chain codes read exactly the same thing, the same versions and wrote the same things at the same versions. But, you know, slight variations in chain code logic, in particular around things like air checking, you know, that's something that can differ. Secondly, using the new life cycle, you must enable the V2 application capability before any of these life cycle commands will work. And this is a bit of a double-edged sword. When you flip that application capability on, the old life cycle, the old LSEC namespace becomes read-only. So, essentially, if you are using the new life cycle, you know, all of your old chain codes continue working until they've been redefined in the new life cycle. But, you know, basically, you can't change them anymore. So, if you needed to, you know, for some emergency reason, go in and upgrade your version of the chain code, you would need to do that in the new life cycle, not in the old life cycle. You know, it shouldn't be a problem operationally, but it's just something to be aware of, you know, make sure that you've thoroughly tested and you're ready to migrate your chain codes as soon as the application capability is enabled. You should be able to do this, essentially, without downtime, you know, because the old chain codes do continue to work. But, you know, once this capability is on, the old life cycle is no longer an option for modifications. And finally, you know, just in case, you know, anyone's immediate thought was, oh, let's turn off the capability to get the old life cycle writable again. You know, that might work. But, like all capabilities, once you disable or once you enable a capability, disabling it is not supported. It's simply nothing that's tested and things could go wrong in odd ways. So, even if it might work, this is not a supported configuration. And there are lots of good reasons for this. In particular, once you've upgraded or once you've enabled a channel capability, that's part of the blockchain, which means other peers need to parse this capability. So, there's really no going back. You know, we have an immutable ledger. And, you know, if you were to disable the capability, it's still enabled in that section of the blockchain. So, we really don't want to deal with disabling capabilities. And that's it. So, hopefully, this has been informative. And, you know, I'm always active out on the paper ledger rocket chat. And, yeah, thank you. Great. Thanks, Jason. And there are several questions people might be interested in. As you mentioned, it's currently possible to run different code for the same chain code across different organizations. And could you give some examples like how that could be useful, some use cases or scenarios? Sure. So, you know, we, you know, I touched a little bit on this that, you know, we now have these, for instance, org implicit collections. So, for those org implicit collections, the rights to them are only performed by my peers, right? I can execute a transaction only on my peers and write to this, this implicit collection. So, I don't really need agreement from other organizations. So, you know, let's go ahead and say that I wanted to implement some sort of, you know, a bidding chain code. When, you know, my peer gets this, this invocation, my peer is going to, to write the bid into its implicit collection. But it wants to validate this bid according to rules that make sense for my organization. So, maybe my chain code implements some, you know, proprietary logic, or maybe my chain code, you know, looks up, you know, makes an API call to a user database. Basically, something that's specific to my organization to decide whether or not it's going to endorse or to enforce some validation on parameters. So, that's, that's really where, you know, different chain codes start to make sense. When different orgs require different logic, specifically around rights that aren't coordinated, things like implicit collections. Now, you can always do sort of, you know, additional validation and verification, you know, you know, things that, for instance, fail endorsement, you know, maybe, you know, in the official chain code, it allows arbitrary bids. But, you know, for you, you want to add some additional air checking saying I will never endorse a bid for more than, you know, a hundred million dollars or whatever the limit that makes sense for you is. So, any sort of logic that's going to throw in air and prevent execution is also a fair game for sort of a difference in a chain code. The things that you want to avoid are things that read from the state or that write to the state that other orgs are not going to implement. As I mentioned, the important thing is that the chain code must produce the same reads and the same rights across all orgs. Okay. The third question is, do you have any tips or suggestions like people need to pay attention to while migrating to new life cycle? Sure. So, you know, the new life cycle is really meant to be, you know, very compatible with the old, you know, the actual instantiation process is a little different, but none of this should require code changes inside your chain code itself. However, you know, as I had mentioned, I would encourage everyone to look at their chain codes and, you know, see, is a knit actually being used to accomplish something useful? Could a knit be, you know, removed from your chain code? And if so, you know, during this chain code, life cycle migration, if you can drop the requirement for a knit, you will remove a step from your workflow, which is always a great thing. You know, otherwise, you know, I think the, you know, sort of the big shocks are really the things that we, you know, set out to address that you need, you need to know the peer addresses of, you know, or the addresses of peers and other organizations in order to do your life cycle operations. You know, you need to coordinate with the other administrators to perform their approvals. You know, so there's more coordination. There's more knowledge. But, you know, that's really what was required to get us to this decentralized point. So I guess if I could leave with a little bit of advice, you know, it would be, you know, sort of to just take whatever coordination existed within your network before, you know, around making decisions as to, you know, how and when to upgrade chain codes and sort of just, you know, codify that into a sort of more formal procedure that, you know, to explicitly enumerate, this will be the new endorsement policy. This will be the new version. This upgrade will or will not require init to be executed. And if you can sort of get this, you know, set of data that's required for this approve for my word command, sort of, you know, down and sort of, if you can get this into a workflow as a concrete item, then this sort of approve step, the define step, you know, this should all just follow up very naturally from that. Okay. Thank you, Jason. Thank you for the great talk. We are now open for questions from audiences.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.68, "text": " My name is Jason Yelik, and I'd like to talk with you about the Hyperledger Fabric Lifecycle", "tokens": [50364, 1222, 1315, 307, 11181, 398, 338, 1035, 11, 293, 286, 1116, 411, 281, 751, 365, 291, 466, 264, 29592, 1493, 1321, 17440, 1341, 7720, 14796, 50748], "temperature": 0.0, "avg_logprob": -0.2191569679661801, "compression_ratio": 1.4922279792746114, "no_speech_prob": 0.02711685374379158}, {"id": 1, "seek": 0, "start": 7.68, "end": 17.52, "text": " today. In particular, the new distributed chain code lifecycle introduced in version 2.0 of Hyperledger", "tokens": [50748, 965, 13, 682, 1729, 11, 264, 777, 12631, 5021, 3089, 45722, 7268, 294, 3037, 568, 13, 15, 295, 29592, 1493, 1321, 51240], "temperature": 0.0, "avg_logprob": -0.2191569679661801, "compression_ratio": 1.4922279792746114, "no_speech_prob": 0.02711685374379158}, {"id": 2, "seek": 0, "start": 17.52, "end": 25.6, "text": " Fabric. Today, we'll be starting by talking about an overview of the version 1.x lifecycle,", "tokens": [51240, 17440, 1341, 13, 2692, 11, 321, 603, 312, 2891, 538, 1417, 466, 364, 12492, 295, 264, 3037, 502, 13, 87, 45722, 11, 51644], "temperature": 0.0, "avg_logprob": -0.2191569679661801, "compression_ratio": 1.4922279792746114, "no_speech_prob": 0.02711685374379158}, {"id": 3, "seek": 2560, "start": 25.6, "end": 31.68, "text": " so basically how chain code lifecycle has worked up until version 2.0. Then we'll do a similar", "tokens": [50364, 370, 1936, 577, 5021, 3089, 45722, 575, 2732, 493, 1826, 3037, 568, 13, 15, 13, 1396, 321, 603, 360, 257, 2531, 50668], "temperature": 0.0, "avg_logprob": -0.09532191727187607, "compression_ratio": 1.731818181818182, "no_speech_prob": 0.002115256618708372}, {"id": 4, "seek": 2560, "start": 31.68, "end": 38.160000000000004, "text": " discussion of the version 2.0 lifecycle, sort of a high level, including a workflow for that,", "tokens": [50668, 5017, 295, 264, 3037, 568, 13, 15, 45722, 11, 1333, 295, 257, 1090, 1496, 11, 3009, 257, 20993, 337, 300, 11, 50992], "temperature": 0.0, "avg_logprob": -0.09532191727187607, "compression_ratio": 1.731818181818182, "no_speech_prob": 0.002115256618708372}, {"id": 5, "seek": 2560, "start": 38.72, "end": 45.6, "text": " and then some permutations around that workflow. Finally, we'll move on to details about the", "tokens": [51020, 293, 550, 512, 4784, 325, 763, 926, 300, 20993, 13, 6288, 11, 321, 603, 1286, 322, 281, 4365, 466, 264, 51364], "temperature": 0.0, "avg_logprob": -0.09532191727187607, "compression_ratio": 1.731818181818182, "no_speech_prob": 0.002115256618708372}, {"id": 6, "seek": 2560, "start": 45.6, "end": 52.32, "text": " version 2.0 lifecycle, and then finally some other notes and considerations that you should keep in", "tokens": [51364, 3037, 568, 13, 15, 45722, 11, 293, 550, 2721, 512, 661, 5570, 293, 24070, 300, 291, 820, 1066, 294, 51700], "temperature": 0.0, "avg_logprob": -0.09532191727187607, "compression_ratio": 1.731818181818182, "no_speech_prob": 0.002115256618708372}, {"id": 7, "seek": 5232, "start": 52.32, "end": 61.84, "text": " mind when dealing with the v2 lifecycle. Starting out with how chain code lifecycle worked in", "tokens": [50364, 1575, 562, 6260, 365, 264, 371, 17, 45722, 13, 16217, 484, 365, 577, 5021, 3089, 45722, 2732, 294, 50840], "temperature": 0.0, "avg_logprob": -0.08812117209801307, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0015484211035072803}, {"id": 8, "seek": 5232, "start": 61.84, "end": 69.03999999999999, "text": " Fabric 1.x. This should be a pretty familiar picture. You have a couple organizations,", "tokens": [50840, 17440, 1341, 502, 13, 87, 13, 639, 820, 312, 257, 1238, 4963, 3036, 13, 509, 362, 257, 1916, 6150, 11, 51200], "temperature": 0.0, "avg_logprob": -0.08812117209801307, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0015484211035072803}, {"id": 9, "seek": 5232, "start": 69.84, "end": 75.92, "text": " their respective admins, and an ordering service, and we would like to get chain code installed", "tokens": [51240, 641, 23649, 5910, 1292, 11, 293, 364, 21739, 2643, 11, 293, 321, 576, 411, 281, 483, 5021, 3089, 8899, 51544], "temperature": 0.0, "avg_logprob": -0.08812117209801307, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0015484211035072803}, {"id": 10, "seek": 7592, "start": 75.92, "end": 85.12, "text": " and instantiated so that we can begin transacting on the blockchain. So step one, each org admin", "tokens": [50364, 293, 9836, 72, 770, 370, 300, 321, 393, 1841, 1145, 41090, 322, 264, 17176, 13, 407, 1823, 472, 11, 1184, 14045, 24236, 50824], "temperature": 0.0, "avg_logprob": -0.07380419561307724, "compression_ratio": 1.6264367816091954, "no_speech_prob": 0.08386335521936417}, {"id": 11, "seek": 7592, "start": 85.12, "end": 95.44, "text": " installs the chain code to one or more of their peers. Step two, one of the admins goes out and", "tokens": [50824, 3625, 82, 264, 5021, 3089, 281, 472, 420, 544, 295, 641, 16739, 13, 5470, 732, 11, 472, 295, 264, 5910, 1292, 1709, 484, 293, 51340], "temperature": 0.0, "avg_logprob": -0.07380419561307724, "compression_ratio": 1.6264367816091954, "no_speech_prob": 0.08386335521936417}, {"id": 12, "seek": 7592, "start": 95.44, "end": 104.48, "text": " does a LSCC deploy or upgrade transaction to instantiate that chain code, gets the result,", "tokens": [51340, 775, 257, 36657, 11717, 7274, 420, 11484, 14425, 281, 9836, 13024, 300, 5021, 3089, 11, 2170, 264, 1874, 11, 51792], "temperature": 0.0, "avg_logprob": -0.07380419561307724, "compression_ratio": 1.6264367816091954, "no_speech_prob": 0.08386335521936417}, {"id": 13, "seek": 10448, "start": 104.48, "end": 110.24000000000001, "text": " submits it to ordering, commits it all the peers, and now the chain code is up and running.", "tokens": [50364, 8286, 1208, 309, 281, 21739, 11, 48311, 309, 439, 264, 16739, 11, 293, 586, 264, 5021, 3089, 307, 493, 293, 2614, 13, 50652], "temperature": 0.0, "avg_logprob": -0.10495860436383415, "compression_ratio": 1.4850299401197604, "no_speech_prob": 0.0010648715542629361}, {"id": 14, "seek": 10448, "start": 112.24000000000001, "end": 117.04, "text": " It's basically a two-step process, which is nice because it's a small number of steps,", "tokens": [50752, 467, 311, 1936, 257, 732, 12, 16792, 1399, 11, 597, 307, 1481, 570, 309, 311, 257, 1359, 1230, 295, 4439, 11, 50992], "temperature": 0.0, "avg_logprob": -0.10495860436383415, "compression_ratio": 1.4850299401197604, "no_speech_prob": 0.0010648715542629361}, {"id": 15, "seek": 10448, "start": 118.24000000000001, "end": 125.92, "text": " but it has a lot of drawbacks. To begin with, installing a chain code", "tokens": [51052, 457, 309, 575, 257, 688, 295, 2642, 17758, 13, 1407, 1841, 365, 11, 20762, 257, 5021, 3089, 51436], "temperature": 0.0, "avg_logprob": -0.10495860436383415, "compression_ratio": 1.4850299401197604, "no_speech_prob": 0.0010648715542629361}, {"id": 16, "seek": 12592, "start": 126.88, "end": 135.52, "text": " sort of grants this unconditional agreement to run that chain code on any channel that your", "tokens": [50412, 1333, 295, 16101, 341, 47916, 8106, 281, 1190, 300, 5021, 3089, 322, 604, 2269, 300, 428, 50844], "temperature": 0.0, "avg_logprob": -0.12880276411007613, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.14407126605510712}, {"id": 17, "seek": 12592, "start": 136.24, "end": 140.96, "text": " peer is joined to, whether or not you agree that that chain code should run on that channel,", "tokens": [50880, 15108, 307, 6869, 281, 11, 1968, 420, 406, 291, 3986, 300, 300, 5021, 3089, 820, 1190, 322, 300, 2269, 11, 51116], "temperature": 0.0, "avg_logprob": -0.12880276411007613, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.14407126605510712}, {"id": 18, "seek": 12592, "start": 141.6, "end": 147.52, "text": " or whether you agree to the assorted parameters to that instantiation. So for instance,", "tokens": [51148, 420, 1968, 291, 3986, 281, 264, 1256, 14813, 9834, 281, 300, 9836, 6642, 13, 407, 337, 5197, 11, 51444], "temperature": 0.0, "avg_logprob": -0.12880276411007613, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.14407126605510712}, {"id": 19, "seek": 12592, "start": 148.8, "end": 153.76, "text": " you might want a certain endorsement policy associated with that chain code.", "tokens": [51508, 291, 1062, 528, 257, 1629, 29228, 518, 3897, 6615, 365, 300, 5021, 3089, 13, 51756], "temperature": 0.0, "avg_logprob": -0.12880276411007613, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.14407126605510712}, {"id": 20, "seek": 15376, "start": 154.64, "end": 160.39999999999998, "text": " You might want to have control over when that chain code is upgraded and downgraded,", "tokens": [50408, 509, 1062, 528, 281, 362, 1969, 670, 562, 300, 5021, 3089, 307, 24133, 293, 760, 7165, 292, 11, 50696], "temperature": 0.0, "avg_logprob": -0.156776948408647, "compression_ratio": 1.6130952380952381, "no_speech_prob": 0.002322825603187084}, {"id": 21, "seek": 15376, "start": 162.16, "end": 168.32, "text": " and you might simply not want to execute that chain code. So that's sort of one of the first big", "tokens": [50784, 293, 291, 1062, 2935, 406, 528, 281, 14483, 300, 5021, 3089, 13, 407, 300, 311, 1333, 295, 472, 295, 264, 700, 955, 51092], "temperature": 0.0, "avg_logprob": -0.156776948408647, "compression_ratio": 1.6130952380952381, "no_speech_prob": 0.002322825603187084}, {"id": 22, "seek": 15376, "start": 168.32, "end": 178.88, "text": " problems, and this is where we talk about this sort of distributed chain code life cycle,", "tokens": [51092, 2740, 11, 293, 341, 307, 689, 321, 751, 466, 341, 1333, 295, 12631, 5021, 3089, 993, 6586, 11, 51620], "temperature": 0.0, "avg_logprob": -0.156776948408647, "compression_ratio": 1.6130952380952381, "no_speech_prob": 0.002322825603187084}, {"id": 23, "seek": 17888, "start": 179.76, "end": 186.32, "text": " or sort of distributed government, the governance distributed agreement. So continuing,", "tokens": [50408, 420, 1333, 295, 12631, 2463, 11, 264, 17449, 12631, 8106, 13, 407, 9289, 11, 50736], "temperature": 0.0, "avg_logprob": -0.16251707665714216, "compression_ratio": 1.725, "no_speech_prob": 0.009409816935658455}, {"id": 24, "seek": 17888, "start": 187.04, "end": 192.79999999999998, "text": " so when we say that the new life cycle is decentralized, that's what we're talking", "tokens": [50772, 370, 562, 321, 584, 300, 264, 777, 993, 6586, 307, 32870, 11, 300, 311, 437, 321, 434, 1417, 51060], "temperature": 0.0, "avg_logprob": -0.16251707665714216, "compression_ratio": 1.725, "no_speech_prob": 0.009409816935658455}, {"id": 25, "seek": 17888, "start": 192.79999999999998, "end": 199.04, "text": " about, that it's not just one admin making the decisions, that that's a problem we had in the", "tokens": [51060, 466, 11, 300, 309, 311, 406, 445, 472, 24236, 1455, 264, 5327, 11, 300, 300, 311, 257, 1154, 321, 632, 294, 264, 51372], "temperature": 0.0, "avg_logprob": -0.16251707665714216, "compression_ratio": 1.725, "no_speech_prob": 0.009409816935658455}, {"id": 26, "seek": 17888, "start": 199.04, "end": 202.96, "text": " previous life cycle, and that's something the new life cycle is here to address.", "tokens": [51372, 3894, 993, 6586, 11, 293, 300, 311, 746, 264, 777, 993, 6586, 307, 510, 281, 2985, 13, 51568], "temperature": 0.0, "avg_logprob": -0.16251707665714216, "compression_ratio": 1.725, "no_speech_prob": 0.009409816935658455}, {"id": 27, "seek": 20296, "start": 203.92000000000002, "end": 212.72, "text": " Now, the second problem, which is a little less obvious, is that the instantiation, i.e. that deploy", "tokens": [50412, 823, 11, 264, 1150, 1154, 11, 597, 307, 257, 707, 1570, 6322, 11, 307, 300, 264, 9836, 6642, 11, 741, 13, 68, 13, 300, 7274, 50852], "temperature": 0.0, "avg_logprob": -0.14433408464704242, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0018673061858862638}, {"id": 28, "seek": 20296, "start": 212.72, "end": 219.12, "text": " or that upgrade transaction, that includes invoking a knit of the deployed chain code.", "tokens": [50852, 420, 300, 11484, 14425, 11, 300, 5974, 1048, 5953, 257, 15594, 295, 264, 17826, 5021, 3089, 13, 51172], "temperature": 0.0, "avg_logprob": -0.14433408464704242, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0018673061858862638}, {"id": 29, "seek": 20296, "start": 220.16, "end": 226.08, "text": " But if we look at our picture here, you can see that that transaction actually only executes on", "tokens": [51224, 583, 498, 321, 574, 412, 527, 3036, 510, 11, 291, 393, 536, 300, 300, 14425, 767, 787, 4454, 1819, 322, 51520], "temperature": 0.0, "avg_logprob": -0.14433408464704242, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.0018673061858862638}, {"id": 30, "seek": 22608, "start": 226.08, "end": 234.08, "text": " Ord1's peer. So even though we may have set an endorsement policy for this chain code,", "tokens": [50364, 29388, 16, 311, 15108, 13, 407, 754, 1673, 321, 815, 362, 992, 364, 29228, 518, 3897, 337, 341, 5021, 3089, 11, 50764], "temperature": 0.0, "avg_logprob": -0.12103750329268606, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.05833636596798897}, {"id": 31, "seek": 22608, "start": 234.08, "end": 240.16000000000003, "text": " that initial invocation of a knit doesn't respect that endorsement policy. And you know,", "tokens": [50764, 300, 5883, 1048, 27943, 295, 257, 15594, 1177, 380, 3104, 300, 29228, 518, 3897, 13, 400, 291, 458, 11, 51068], "temperature": 0.0, "avg_logprob": -0.12103750329268606, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.05833636596798897}, {"id": 32, "seek": 22608, "start": 240.96, "end": 245.28, "text": " in a lot of ways that's fine because it's being invoked by a trusted user and some other things,", "tokens": [51108, 294, 257, 688, 295, 2098, 300, 311, 2489, 570, 309, 311, 885, 1048, 9511, 538, 257, 16034, 4195, 293, 512, 661, 721, 11, 51324], "temperature": 0.0, "avg_logprob": -0.12103750329268606, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.05833636596798897}, {"id": 33, "seek": 22608, "start": 245.28, "end": 252.64000000000001, "text": " but it's still an asymmetry, and it's something that we wanted to fix. And then finally,", "tokens": [51324, 457, 309, 311, 920, 364, 37277, 9889, 11, 293, 309, 311, 746, 300, 321, 1415, 281, 3191, 13, 400, 550, 2721, 11, 51692], "temperature": 0.0, "avg_logprob": -0.12103750329268606, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.05833636596798897}, {"id": 34, "seek": 25264, "start": 253.6, "end": 260.56, "text": " this is more of an operational one. If you've ever tried to operate a fabric network and you've", "tokens": [50412, 341, 307, 544, 295, 364, 16607, 472, 13, 759, 291, 600, 1562, 3031, 281, 9651, 257, 7253, 3209, 293, 291, 600, 50760], "temperature": 0.0, "avg_logprob": -0.09661527980457653, "compression_ratio": 1.7374517374517375, "no_speech_prob": 0.005910379812121391}, {"id": 35, "seek": 25264, "start": 260.56, "end": 265.91999999999996, "text": " tried onboarding new orgs and that sort of thing, what you'll quickly realize is that", "tokens": [50760, 3031, 24033, 278, 777, 14045, 82, 293, 300, 1333, 295, 551, 11, 437, 291, 603, 2661, 4325, 307, 300, 51028], "temperature": 0.0, "avg_logprob": -0.09661527980457653, "compression_ratio": 1.7374517374517375, "no_speech_prob": 0.005910379812121391}, {"id": 36, "seek": 25264, "start": 266.56, "end": 271.2, "text": " even though you don't want to change anything about the code of your chain code, any of the", "tokens": [51060, 754, 1673, 291, 500, 380, 528, 281, 1319, 1340, 466, 264, 3089, 295, 428, 5021, 3089, 11, 604, 295, 264, 51292], "temperature": 0.0, "avg_logprob": -0.09661527980457653, "compression_ratio": 1.7374517374517375, "no_speech_prob": 0.005910379812121391}, {"id": 37, "seek": 25264, "start": 271.2, "end": 276.32, "text": " chain code logic, if you want to modify, say, the endorsement policy to include a new org,", "tokens": [51292, 5021, 3089, 9952, 11, 498, 291, 528, 281, 16927, 11, 584, 11, 264, 29228, 518, 3897, 281, 4090, 257, 777, 14045, 11, 51548], "temperature": 0.0, "avg_logprob": -0.09661527980457653, "compression_ratio": 1.7374517374517375, "no_speech_prob": 0.005910379812121391}, {"id": 38, "seek": 25264, "start": 276.88, "end": 281.44, "text": " well, you actually have to go through this whole process of installing the chain code", "tokens": [51576, 731, 11, 291, 767, 362, 281, 352, 807, 341, 1379, 1399, 295, 20762, 264, 5021, 3089, 51804], "temperature": 0.0, "avg_logprob": -0.09661527980457653, "compression_ratio": 1.7374517374517375, "no_speech_prob": 0.005910379812121391}, {"id": 39, "seek": 28144, "start": 281.52, "end": 290.16, "text": " and performing an upgrade across the network, which is really unnecessary and causes a lot of churn", "tokens": [50368, 293, 10205, 364, 11484, 2108, 264, 3209, 11, 597, 307, 534, 19350, 293, 7700, 257, 688, 295, 417, 925, 50800], "temperature": 0.0, "avg_logprob": -0.08511497057401217, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.0007552647148258984}, {"id": 40, "seek": 28144, "start": 290.16, "end": 296.48, "text": " that's a bit of a pain, operationally speaking. So these are sort of the three big problems that", "tokens": [50800, 300, 311, 257, 857, 295, 257, 1822, 11, 6916, 379, 4124, 13, 407, 613, 366, 1333, 295, 264, 1045, 955, 2740, 300, 51116], "temperature": 0.0, "avg_logprob": -0.08511497057401217, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.0007552647148258984}, {"id": 41, "seek": 28144, "start": 298.08, "end": 304.15999999999997, "text": " we encountered in the original chain code lifecycle, which sort of leads to the three", "tokens": [51196, 321, 20381, 294, 264, 3380, 5021, 3089, 45722, 11, 597, 1333, 295, 6689, 281, 264, 1045, 51500], "temperature": 0.0, "avg_logprob": -0.08511497057401217, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.0007552647148258984}, {"id": 42, "seek": 30416, "start": 304.96000000000004, "end": 314.40000000000003, "text": " principles for the new v2 decentralized lifecycle. So first one is that peers only participate in a", "tokens": [50404, 9156, 337, 264, 777, 371, 17, 32870, 45722, 13, 407, 700, 472, 307, 300, 16739, 787, 8197, 294, 257, 50876], "temperature": 0.0, "avg_logprob": -0.11331078280573306, "compression_ratio": 1.3943661971830985, "no_speech_prob": 0.017983773723244667}, {"id": 43, "seek": 30416, "start": 314.40000000000003, "end": 323.04, "text": " chain code. If the org admin explicitly agrees, yes, I like this configuration for the chain code.", "tokens": [50876, 5021, 3089, 13, 759, 264, 14045, 24236, 20803, 26383, 11, 2086, 11, 286, 411, 341, 11694, 337, 264, 5021, 3089, 13, 51308], "temperature": 0.0, "avg_logprob": -0.11331078280573306, "compression_ratio": 1.3943661971830985, "no_speech_prob": 0.017983773723244667}, {"id": 44, "seek": 32304, "start": 324.0, "end": 336.40000000000003, "text": " So until the orgs admin agrees, that peer will not endorse the definition, the instantiation,", "tokens": [50412, 407, 1826, 264, 14045, 82, 24236, 26383, 11, 300, 15108, 486, 406, 29228, 264, 7123, 11, 264, 9836, 6642, 11, 51032], "temperature": 0.0, "avg_logprob": -0.108356773853302, "compression_ratio": 1.5975609756097562, "no_speech_prob": 0.030209504067897797}, {"id": 45, "seek": 32304, "start": 337.44, "end": 342.64000000000004, "text": " and further it will not endorse any invocation of that chain code, including its init function.", "tokens": [51084, 293, 3052, 309, 486, 406, 29228, 604, 1048, 27943, 295, 300, 5021, 3089, 11, 3009, 1080, 3157, 2445, 13, 51344], "temperature": 0.0, "avg_logprob": -0.108356773853302, "compression_ratio": 1.5975609756097562, "no_speech_prob": 0.030209504067897797}, {"id": 46, "seek": 32304, "start": 343.92, "end": 348.88, "text": " So this basically, if we go back to our previous slide, we said that the", "tokens": [51408, 407, 341, 1936, 11, 498, 321, 352, 646, 281, 527, 3894, 4137, 11, 321, 848, 300, 264, 51656], "temperature": 0.0, "avg_logprob": -0.108356773853302, "compression_ratio": 1.5975609756097562, "no_speech_prob": 0.030209504067897797}, {"id": 47, "seek": 34888, "start": 349.84, "end": 353.84, "text": " installing agrees to instantiate unconditionally, this fixes that problem.", "tokens": [50412, 20762, 26383, 281, 9836, 13024, 34959, 15899, 11, 341, 32539, 300, 1154, 13, 50612], "temperature": 0.0, "avg_logprob": -0.08969651419540932, "compression_ratio": 1.587878787878788, "no_speech_prob": 0.00037995813181623816}, {"id": 48, "seek": 34888, "start": 355.44, "end": 361.52, "text": " Secondly, no exceptions to endorsement policies. This corresponds to our second problem we", "tokens": [50692, 19483, 11, 572, 22847, 281, 29228, 518, 7657, 13, 639, 23249, 281, 527, 1150, 1154, 321, 50996], "temperature": 0.0, "avg_logprob": -0.08969651419540932, "compression_ratio": 1.587878787878788, "no_speech_prob": 0.00037995813181623816}, {"id": 49, "seek": 34888, "start": 361.52, "end": 367.36, "text": " enumerated, which is the chain code init should be subject to the same endorsement policy as the", "tokens": [50996, 465, 15583, 770, 11, 597, 307, 264, 5021, 3089, 3157, 820, 312, 3983, 281, 264, 912, 29228, 518, 3897, 382, 264, 51288], "temperature": 0.0, "avg_logprob": -0.08969651419540932, "compression_ratio": 1.587878787878788, "no_speech_prob": 0.00037995813181623816}, {"id": 50, "seek": 36736, "start": 367.44, "end": 378.96000000000004, "text": " rest of the invocations. So we enforce that chain code init abides by the", "tokens": [50368, 1472, 295, 264, 1048, 905, 763, 13, 407, 321, 24825, 300, 5021, 3089, 3157, 410, 1875, 538, 264, 50944], "temperature": 0.0, "avg_logprob": -0.12399527334397839, "compression_ratio": 1.4382716049382716, "no_speech_prob": 0.1127653643488884}, {"id": 51, "seek": 36736, "start": 379.84000000000003, "end": 386.40000000000003, "text": " endorsement policy as defined for the chain code, just like every other transaction.", "tokens": [50988, 29228, 518, 3897, 382, 7642, 337, 264, 5021, 3089, 11, 445, 411, 633, 661, 14425, 13, 51316], "temperature": 0.0, "avg_logprob": -0.12399527334397839, "compression_ratio": 1.4382716049382716, "no_speech_prob": 0.1127653643488884}, {"id": 52, "seek": 36736, "start": 387.44, "end": 394.72, "text": " But secondly, and this one is a little more subtle, in the v1.x lifecycle,", "tokens": [51368, 583, 26246, 11, 293, 341, 472, 307, 257, 707, 544, 13743, 11, 294, 264, 371, 16, 13, 87, 45722, 11, 51732], "temperature": 0.0, "avg_logprob": -0.12399527334397839, "compression_ratio": 1.4382716049382716, "no_speech_prob": 0.1127653643488884}, {"id": 53, "seek": 39472, "start": 394.8, "end": 403.84000000000003, "text": " lscc really didn't have an endorsement policy. So in the v2 distributed lifecycle, we also", "tokens": [50368, 287, 4417, 66, 534, 994, 380, 362, 364, 29228, 518, 3897, 13, 407, 294, 264, 371, 17, 12631, 45722, 11, 321, 611, 50820], "temperature": 0.0, "avg_logprob": -0.09640213561384645, "compression_ratio": 1.6544502617801047, "no_speech_prob": 0.0012446694308891892}, {"id": 54, "seek": 39472, "start": 403.84000000000003, "end": 409.12, "text": " enforce that the lifecycle at chain code itself is governed by an endorsement policy", "tokens": [50820, 24825, 300, 264, 45722, 412, 5021, 3089, 2564, 307, 35529, 538, 364, 29228, 518, 3897, 51084], "temperature": 0.0, "avg_logprob": -0.09640213561384645, "compression_ratio": 1.6544502617801047, "no_speech_prob": 0.0012446694308891892}, {"id": 55, "seek": 39472, "start": 409.12, "end": 411.84000000000003, "text": " and decisions are validated based on that endorsement policy.", "tokens": [51084, 293, 5327, 366, 40693, 2361, 322, 300, 29228, 518, 3897, 13, 51220], "temperature": 0.0, "avg_logprob": -0.09640213561384645, "compression_ratio": 1.6544502617801047, "no_speech_prob": 0.0012446694308891892}, {"id": 56, "seek": 39472, "start": 413.84000000000003, "end": 418.96000000000004, "text": " So finally, the third parameter, which comes back to our operational problems,", "tokens": [51320, 407, 2721, 11, 264, 2636, 13075, 11, 597, 1487, 646, 281, 527, 16607, 2740, 11, 51576], "temperature": 0.0, "avg_logprob": -0.09640213561384645, "compression_ratio": 1.6544502617801047, "no_speech_prob": 0.0012446694308891892}, {"id": 57, "seek": 41896, "start": 419.91999999999996, "end": 425.35999999999996, "text": " is that you should be able to modify your chain code definition, you should be able to change", "tokens": [50412, 307, 300, 291, 820, 312, 1075, 281, 16927, 428, 5021, 3089, 7123, 11, 291, 820, 312, 1075, 281, 1319, 50684], "temperature": 0.0, "avg_logprob": -0.08650017541552348, "compression_ratio": 1.6171428571428572, "no_speech_prob": 0.017436884343624115}, {"id": 58, "seek": 41896, "start": 425.35999999999996, "end": 432.56, "text": " the endorsement policy, add collections, etc., without requiring an upgrade of the code across", "tokens": [50684, 264, 29228, 518, 3897, 11, 909, 16641, 11, 5183, 7933, 1553, 24165, 364, 11484, 295, 264, 3089, 2108, 51044], "temperature": 0.0, "avg_logprob": -0.08650017541552348, "compression_ratio": 1.6171428571428572, "no_speech_prob": 0.017436884343624115}, {"id": 59, "seek": 41896, "start": 432.56, "end": 440.24, "text": " the network. So those three things are sort of the guiding principles behind the design of the", "tokens": [51044, 264, 3209, 13, 407, 729, 1045, 721, 366, 1333, 295, 264, 25061, 9156, 2261, 264, 1715, 295, 264, 51428], "temperature": 0.0, "avg_logprob": -0.08650017541552348, "compression_ratio": 1.6171428571428572, "no_speech_prob": 0.017436884343624115}, {"id": 60, "seek": 44024, "start": 440.96000000000004, "end": 447.84000000000003, "text": " v2 decentralized lifecycle, and you'll be able to see that reflected in", "tokens": [50400, 371, 17, 32870, 45722, 11, 293, 291, 603, 312, 1075, 281, 536, 300, 15502, 294, 50744], "temperature": 0.0, "avg_logprob": -0.08704269141481634, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.027162794023752213}, {"id": 61, "seek": 44024, "start": 449.52, "end": 454.08, "text": " just a moment when we do an overview of how the decentralized lifecycle works.", "tokens": [50828, 445, 257, 1623, 562, 321, 360, 364, 12492, 295, 577, 264, 32870, 45722, 1985, 13, 51056], "temperature": 0.0, "avg_logprob": -0.08704269141481634, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.027162794023752213}, {"id": 62, "seek": 44024, "start": 455.84000000000003, "end": 465.2, "text": " Now, before we go into the overview of how the lifecycle works, it's important to mention", "tokens": [51144, 823, 11, 949, 321, 352, 666, 264, 12492, 295, 577, 264, 45722, 1985, 11, 309, 311, 1021, 281, 2152, 51612], "temperature": 0.0, "avg_logprob": -0.08704269141481634, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.027162794023752213}, {"id": 63, "seek": 46520, "start": 465.28, "end": 472.88, "text": " sort of an implementation detail. And that's that v2 lifecycle is very much", "tokens": [50368, 1333, 295, 364, 11420, 2607, 13, 400, 300, 311, 300, 371, 17, 45722, 307, 588, 709, 50748], "temperature": 0.0, "avg_logprob": -0.07611753367170503, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.02842569909989834}, {"id": 64, "seek": 46520, "start": 473.59999999999997, "end": 478.71999999999997, "text": " powered by a new v2 concept, and that is organization implicit collections.", "tokens": [50784, 17786, 538, 257, 777, 371, 17, 3410, 11, 293, 300, 307, 4475, 26947, 16641, 13, 51040], "temperature": 0.0, "avg_logprob": -0.07611753367170503, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.02842569909989834}, {"id": 65, "seek": 46520, "start": 479.59999999999997, "end": 486.56, "text": " Now, if you're at all familiar with private data collections from v1.2 or 3 onwards,", "tokens": [51084, 823, 11, 498, 291, 434, 412, 439, 4963, 365, 4551, 1412, 16641, 490, 371, 16, 13, 17, 420, 805, 34230, 11, 51432], "temperature": 0.0, "avg_logprob": -0.07611753367170503, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.02842569909989834}, {"id": 66, "seek": 46520, "start": 487.91999999999996, "end": 492.64, "text": " you'll know that the basic idea is that it's a namespace that's reserved", "tokens": [51500, 291, 603, 458, 300, 264, 3875, 1558, 307, 300, 309, 311, 257, 5288, 17940, 300, 311, 24819, 51736], "temperature": 0.0, "avg_logprob": -0.07611753367170503, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.02842569909989834}, {"id": 67, "seek": 49264, "start": 492.64, "end": 498.15999999999997, "text": " that only certain members can read. So on v2, we've sort of extended that concept,", "tokens": [50364, 300, 787, 1629, 2679, 393, 1401, 13, 407, 322, 371, 17, 11, 321, 600, 1333, 295, 10913, 300, 3410, 11, 50640], "temperature": 0.0, "avg_logprob": -0.0902936350215565, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.001754306023940444}, {"id": 68, "seek": 49264, "start": 498.71999999999997, "end": 506.56, "text": " and you can now associate which members can write to that namespace. And there's the set of", "tokens": [50668, 293, 291, 393, 586, 14644, 597, 2679, 393, 2464, 281, 300, 5288, 17940, 13, 400, 456, 311, 264, 992, 295, 51060], "temperature": 0.0, "avg_logprob": -0.0902936350215565, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.001754306023940444}, {"id": 69, "seek": 49264, "start": 506.56, "end": 512.88, "text": " implicit collections, which are defined implicitly, i.e. they're there without you having to do", "tokens": [51060, 26947, 16641, 11, 597, 366, 7642, 26947, 356, 11, 741, 13, 68, 13, 436, 434, 456, 1553, 291, 1419, 281, 360, 51376], "temperature": 0.0, "avg_logprob": -0.0902936350215565, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.001754306023940444}, {"id": 70, "seek": 49264, "start": 512.88, "end": 520.0, "text": " anything to define them. And you get one implicit collection per organization in your channel,", "tokens": [51376, 1340, 281, 6964, 552, 13, 400, 291, 483, 472, 26947, 5765, 680, 4475, 294, 428, 2269, 11, 51732], "temperature": 0.0, "avg_logprob": -0.0902936350215565, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.001754306023940444}, {"id": 71, "seek": 52000, "start": 520.64, "end": 525.12, "text": " and only peers from that organization may write to it, and only peers from that", "tokens": [50396, 293, 787, 16739, 490, 300, 4475, 815, 2464, 281, 309, 11, 293, 787, 16739, 490, 300, 50620], "temperature": 0.0, "avg_logprob": -0.08905254006385803, "compression_ratio": 1.792929292929293, "no_speech_prob": 0.004467659629881382}, {"id": 72, "seek": 52000, "start": 525.12, "end": 530.56, "text": " organization may read from it. So this allows you to implement a lot of interesting things", "tokens": [50620, 4475, 815, 1401, 490, 309, 13, 407, 341, 4045, 291, 281, 4445, 257, 688, 295, 1880, 721, 50892], "temperature": 0.0, "avg_logprob": -0.08905254006385803, "compression_ratio": 1.792929292929293, "no_speech_prob": 0.004467659629881382}, {"id": 73, "seek": 52000, "start": 530.56, "end": 535.84, "text": " in your chain code that weren't previously possible, notably things like voting schemes,", "tokens": [50892, 294, 428, 5021, 3089, 300, 4999, 380, 8046, 1944, 11, 31357, 721, 411, 10419, 26954, 11, 51156], "temperature": 0.0, "avg_logprob": -0.08905254006385803, "compression_ratio": 1.792929292929293, "no_speech_prob": 0.004467659629881382}, {"id": 74, "seek": 52000, "start": 536.72, "end": 542.96, "text": " and ways for a chain code of one org to make a different decision than a chain code of another.", "tokens": [51200, 293, 2098, 337, 257, 5021, 3089, 295, 472, 14045, 281, 652, 257, 819, 3537, 813, 257, 5021, 3089, 295, 1071, 13, 51512], "temperature": 0.0, "avg_logprob": -0.08905254006385803, "compression_ratio": 1.792929292929293, "no_speech_prob": 0.004467659629881382}, {"id": 75, "seek": 54296, "start": 543.9200000000001, "end": 549.9200000000001, "text": " So that's a bit of a side note, and I don't want to get too off topic here, but", "tokens": [50412, 407, 300, 311, 257, 857, 295, 257, 1252, 3637, 11, 293, 286, 500, 380, 528, 281, 483, 886, 766, 4829, 510, 11, 457, 50712], "temperature": 0.0, "avg_logprob": -0.08988581952594575, "compression_ratio": 1.525, "no_speech_prob": 0.009707518853247166}, {"id": 76, "seek": 54296, "start": 550.96, "end": 553.9200000000001, "text": " implicit collections are sort of the underpinning", "tokens": [50764, 26947, 16641, 366, 1333, 295, 264, 833, 17836, 773, 50912], "temperature": 0.0, "avg_logprob": -0.08988581952594575, "compression_ratio": 1.525, "no_speech_prob": 0.009707518853247166}, {"id": 77, "seek": 54296, "start": 556.4000000000001, "end": 562.0, "text": " technology behind the new v2 lifecycle, and you can use this in your own chain codes as well.", "tokens": [51036, 2899, 2261, 264, 777, 371, 17, 45722, 11, 293, 291, 393, 764, 341, 294, 428, 1065, 5021, 14211, 382, 731, 13, 51316], "temperature": 0.0, "avg_logprob": -0.08988581952594575, "compression_ratio": 1.525, "no_speech_prob": 0.009707518853247166}, {"id": 78, "seek": 54296, "start": 564.24, "end": 571.52, "text": " So back to that overview. Just like with the v1.x lifecycle and the v2 lifecycle,", "tokens": [51428, 407, 646, 281, 300, 12492, 13, 1449, 411, 365, 264, 371, 16, 13, 87, 45722, 293, 264, 371, 17, 45722, 11, 51792], "temperature": 0.0, "avg_logprob": -0.08988581952594575, "compression_ratio": 1.525, "no_speech_prob": 0.009707518853247166}, {"id": 79, "seek": 57152, "start": 571.6, "end": 576.64, "text": " the first thing we do is an install. Now the packaging format has been changed,", "tokens": [50368, 264, 700, 551, 321, 360, 307, 364, 3625, 13, 823, 264, 16836, 7877, 575, 668, 3105, 11, 50620], "temperature": 0.0, "avg_logprob": -0.12253564337025517, "compression_ratio": 1.646808510638298, "no_speech_prob": 0.0032723413314670324}, {"id": 80, "seek": 57152, "start": 577.1999999999999, "end": 582.0799999999999, "text": " there are some different things about the install, but conceptually, it's still just an install,", "tokens": [50648, 456, 366, 512, 819, 721, 466, 264, 3625, 11, 457, 3410, 671, 11, 309, 311, 920, 445, 364, 3625, 11, 50892], "temperature": 0.0, "avg_logprob": -0.12253564337025517, "compression_ratio": 1.646808510638298, "no_speech_prob": 0.0032723413314670324}, {"id": 81, "seek": 57152, "start": 582.0799999999999, "end": 585.04, "text": " you're putting the chain code's code package onto the file system,", "tokens": [50892, 291, 434, 3372, 264, 5021, 3089, 311, 3089, 7372, 3911, 264, 3991, 1185, 11, 51040], "temperature": 0.0, "avg_logprob": -0.12253564337025517, "compression_ratio": 1.646808510638298, "no_speech_prob": 0.0032723413314670324}, {"id": 82, "seek": 57152, "start": 586.3199999999999, "end": 591.1999999999999, "text": " and that takes place as your first step performed by each admin, respectively.", "tokens": [51104, 293, 300, 2516, 1081, 382, 428, 700, 1823, 10332, 538, 1184, 24236, 11, 25009, 13, 51348], "temperature": 0.0, "avg_logprob": -0.12253564337025517, "compression_ratio": 1.646808510638298, "no_speech_prob": 0.0032723413314670324}, {"id": 83, "seek": 57152, "start": 592.64, "end": 595.6, "text": " Secondly, and this is where things start to differ a little bit,", "tokens": [51420, 19483, 11, 293, 341, 307, 689, 721, 722, 281, 743, 257, 707, 857, 11, 51568], "temperature": 0.0, "avg_logprob": -0.12253564337025517, "compression_ratio": 1.646808510638298, "no_speech_prob": 0.0032723413314670324}, {"id": 84, "seek": 59560, "start": 596.5600000000001, "end": 604.08, "text": " um, org one's admin, in this case, is going to execute an approve for my org function against", "tokens": [50412, 1105, 11, 14045, 472, 311, 24236, 11, 294, 341, 1389, 11, 307, 516, 281, 14483, 364, 18827, 337, 452, 14045, 2445, 1970, 50788], "temperature": 0.0, "avg_logprob": -0.15294717252254486, "compression_ratio": 1.5625, "no_speech_prob": 0.007815134711563587}, {"id": 85, "seek": 59560, "start": 604.08, "end": 610.64, "text": " his peer, send that to ordering, and it commits. Now this is modifying the implicit collection", "tokens": [50788, 702, 15108, 11, 2845, 300, 281, 21739, 11, 293, 309, 48311, 13, 823, 341, 307, 42626, 264, 26947, 5765, 51116], "temperature": 0.0, "avg_logprob": -0.15294717252254486, "compression_ratio": 1.5625, "no_speech_prob": 0.007815134711563587}, {"id": 86, "seek": 59560, "start": 610.64, "end": 617.84, "text": " for org one, indicating that org one agrees with this particular chain code definition", "tokens": [51116, 337, 14045, 472, 11, 25604, 300, 14045, 472, 26383, 365, 341, 1729, 5021, 3089, 7123, 51476], "temperature": 0.0, "avg_logprob": -0.15294717252254486, "compression_ratio": 1.5625, "no_speech_prob": 0.007815134711563587}, {"id": 87, "seek": 61784, "start": 617.84, "end": 625.6800000000001, "text": " that org one's admin is approving. Now org two's admin is going to do the very same thing,", "tokens": [50364, 300, 14045, 472, 311, 24236, 307, 2075, 798, 13, 823, 14045, 732, 311, 24236, 307, 516, 281, 360, 264, 588, 912, 551, 11, 50756], "temperature": 0.0, "avg_logprob": -0.0886993302239312, "compression_ratio": 1.6553398058252426, "no_speech_prob": 0.014955439604818821}, {"id": 88, "seek": 61784, "start": 626.5600000000001, "end": 631.2800000000001, "text": " sends to his own peer, his approval, submits that to ordering, it commits,", "tokens": [50800, 14790, 281, 702, 1065, 15108, 11, 702, 13317, 11, 8286, 1208, 300, 281, 21739, 11, 309, 48311, 11, 51036], "temperature": 0.0, "avg_logprob": -0.0886993302239312, "compression_ratio": 1.6553398058252426, "no_speech_prob": 0.014955439604818821}, {"id": 89, "seek": 61784, "start": 632.08, "end": 637.6, "text": " and now we have an entry in the implicit collection for each org, indicating agreement to some", "tokens": [51076, 293, 586, 321, 362, 364, 8729, 294, 264, 26947, 5765, 337, 1184, 14045, 11, 25604, 8106, 281, 512, 51352], "temperature": 0.0, "avg_logprob": -0.0886993302239312, "compression_ratio": 1.6553398058252426, "no_speech_prob": 0.014955439604818821}, {"id": 90, "seek": 61784, "start": 637.6, "end": 644.5600000000001, "text": " chain code definition. At this point, org one's admin, or it could be org two's,", "tokens": [51352, 5021, 3089, 7123, 13, 1711, 341, 935, 11, 14045, 472, 311, 24236, 11, 420, 309, 727, 312, 14045, 732, 311, 11, 51700], "temperature": 0.0, "avg_logprob": -0.0886993302239312, "compression_ratio": 1.6553398058252426, "no_speech_prob": 0.014955439604818821}, {"id": 91, "seek": 64456, "start": 644.56, "end": 651.5999999999999, "text": " but we'll use org one's in this case, invokes the lifecycle chain code on one of his peers,", "tokens": [50364, 457, 321, 603, 764, 14045, 472, 311, 294, 341, 1389, 11, 1048, 8606, 264, 45722, 5021, 3089, 322, 472, 295, 702, 16739, 11, 50716], "temperature": 0.0, "avg_logprob": -0.0832184021731457, "compression_ratio": 1.7037037037037037, "no_speech_prob": 0.0009398979018442333}, {"id": 92, "seek": 64456, "start": 652.2399999999999, "end": 659.28, "text": " and one of org two's peers, saying let's go ahead and commit this definition,", "tokens": [50748, 293, 472, 295, 14045, 732, 311, 16739, 11, 1566, 718, 311, 352, 2286, 293, 5599, 341, 7123, 11, 51100], "temperature": 0.0, "avg_logprob": -0.0832184021731457, "compression_ratio": 1.7037037037037037, "no_speech_prob": 0.0009398979018442333}, {"id": 93, "seek": 64456, "start": 659.92, "end": 663.76, "text": " submits that to the ordering service, it commits in the public namespace,", "tokens": [51132, 8286, 1208, 300, 281, 264, 21739, 2643, 11, 309, 48311, 294, 264, 1908, 5288, 17940, 11, 51324], "temperature": 0.0, "avg_logprob": -0.0832184021731457, "compression_ratio": 1.7037037037037037, "no_speech_prob": 0.0009398979018442333}, {"id": 94, "seek": 64456, "start": 664.4, "end": 670.16, "text": " and now the chain code is defined. The definition that was approved by the two", "tokens": [51356, 293, 586, 264, 5021, 3089, 307, 7642, 13, 440, 7123, 300, 390, 10826, 538, 264, 732, 51644], "temperature": 0.0, "avg_logprob": -0.0832184021731457, "compression_ratio": 1.7037037037037037, "no_speech_prob": 0.0009398979018442333}, {"id": 95, "seek": 67016, "start": 670.16, "end": 675.92, "text": " org admins have committed, and the chain code was ready to execute. At this point,", "tokens": [50364, 14045, 5910, 1292, 362, 7784, 11, 293, 264, 5021, 3089, 390, 1919, 281, 14483, 13, 1711, 341, 935, 11, 50652], "temperature": 0.0, "avg_logprob": -0.10952576123751127, "compression_ratio": 1.5976331360946745, "no_speech_prob": 0.0005192399839870632}, {"id": 96, "seek": 67016, "start": 676.9599999999999, "end": 684.64, "text": " typically the same user who did the commit of the definition would be the one who invokes", "tokens": [50704, 5850, 264, 912, 4195, 567, 630, 264, 5599, 295, 264, 7123, 576, 312, 264, 472, 567, 1048, 8606, 51088], "temperature": 0.0, "avg_logprob": -0.10952576123751127, "compression_ratio": 1.5976331360946745, "no_speech_prob": 0.0005192399839870632}, {"id": 97, "seek": 67016, "start": 684.64, "end": 695.6, "text": " init, and init can execute just like any other chain code invocation. The peer will track whether", "tokens": [51088, 3157, 11, 293, 3157, 393, 14483, 445, 411, 604, 661, 5021, 3089, 1048, 27943, 13, 440, 15108, 486, 2837, 1968, 51636], "temperature": 0.0, "avg_logprob": -0.10952576123751127, "compression_ratio": 1.5976331360946745, "no_speech_prob": 0.0005192399839870632}, {"id": 98, "seek": 69560, "start": 695.84, "end": 699.36, "text": " or not init has been called and enforce that it's the first function called,", "tokens": [50376, 420, 406, 3157, 575, 668, 1219, 293, 24825, 300, 309, 311, 264, 700, 2445, 1219, 11, 50552], "temperature": 0.0, "avg_logprob": -0.11208174387613933, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.009123499505221844}, {"id": 99, "seek": 69560, "start": 700.64, "end": 706.48, "text": " but I think as people get used to this new decentralized lifecycle,", "tokens": [50616, 457, 286, 519, 382, 561, 483, 1143, 281, 341, 777, 32870, 45722, 11, 50908], "temperature": 0.0, "avg_logprob": -0.11208174387613933, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.009123499505221844}, {"id": 100, "seek": 69560, "start": 709.84, "end": 716.4, "text": " you'll realize more and more that init usually isn't necessary, and it's actually a whole lot", "tokens": [51076, 291, 603, 4325, 544, 293, 544, 300, 3157, 2673, 1943, 380, 4818, 11, 293, 309, 311, 767, 257, 1379, 688, 51404], "temperature": 0.0, "avg_logprob": -0.11208174387613933, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.009123499505221844}, {"id": 101, "seek": 69560, "start": 716.4, "end": 722.48, "text": " easier and more flexible to implement init logic inside the chain code itself if needed.", "tokens": [51404, 3571, 293, 544, 11358, 281, 4445, 3157, 9952, 1854, 264, 5021, 3089, 2564, 498, 2978, 13, 51708], "temperature": 0.0, "avg_logprob": -0.11208174387613933, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.009123499505221844}, {"id": 102, "seek": 72248, "start": 723.44, "end": 731.04, "text": " You know, a couple examples for this could be, first off, if you implement init inside a chain", "tokens": [50412, 509, 458, 11, 257, 1916, 5110, 337, 341, 727, 312, 11, 700, 766, 11, 498, 291, 4445, 3157, 1854, 257, 5021, 50792], "temperature": 0.0, "avg_logprob": -0.12985821624300373, "compression_ratio": 1.6089385474860336, "no_speech_prob": 0.0010648660827428102}, {"id": 103, "seek": 72248, "start": 731.04, "end": 738.48, "text": " code, you can require each org to perform some action before the chain code is initialized,", "tokens": [50792, 3089, 11, 291, 393, 3651, 1184, 14045, 281, 2042, 512, 3069, 949, 264, 5021, 3089, 307, 5883, 1602, 11, 51164], "temperature": 0.0, "avg_logprob": -0.12985821624300373, "compression_ratio": 1.6089385474860336, "no_speech_prob": 0.0010648660827428102}, {"id": 104, "seek": 72248, "start": 739.12, "end": 747.28, "text": " or if you're doing something like upgrading your key schema, you can require a series of transactions", "tokens": [51196, 420, 498, 291, 434, 884, 746, 411, 36249, 428, 2141, 34078, 11, 291, 393, 3651, 257, 2638, 295, 16856, 51604], "temperature": 0.0, "avg_logprob": -0.12985821624300373, "compression_ratio": 1.6089385474860336, "no_speech_prob": 0.0010648660827428102}, {"id": 105, "seek": 74728, "start": 748.0799999999999, "end": 752.64, "text": " that modify your database layout before you allow normal transactions to begin,", "tokens": [50404, 300, 16927, 428, 8149, 13333, 949, 291, 2089, 2710, 16856, 281, 1841, 11, 50632], "temperature": 0.0, "avg_logprob": -0.10407904456643498, "compression_ratio": 1.5608695652173914, "no_speech_prob": 0.014060243964195251}, {"id": 106, "seek": 74728, "start": 753.36, "end": 759.36, "text": " because a single transaction would be too large. And really, to implement init logic,", "tokens": [50668, 570, 257, 2167, 14425, 576, 312, 886, 2416, 13, 400, 534, 11, 281, 4445, 3157, 9952, 11, 50968], "temperature": 0.0, "avg_logprob": -0.10407904456643498, "compression_ratio": 1.5608695652173914, "no_speech_prob": 0.014060243964195251}, {"id": 107, "seek": 74728, "start": 760.0, "end": 766.24, "text": " it's really very simple. You just pick a reserved key, perform a read against that key, and see", "tokens": [51000, 309, 311, 534, 588, 2199, 13, 509, 445, 1888, 257, 24819, 2141, 11, 2042, 257, 1401, 1970, 300, 2141, 11, 293, 536, 51312], "temperature": 0.0, "avg_logprob": -0.10407904456643498, "compression_ratio": 1.5608695652173914, "no_speech_prob": 0.014060243964195251}, {"id": 108, "seek": 74728, "start": 766.24, "end": 772.48, "text": " whether it says the chain code has been initialized or not. If it's not, enforce init, otherwise,", "tokens": [51312, 1968, 309, 1619, 264, 5021, 3089, 575, 668, 5883, 1602, 420, 406, 13, 759, 309, 311, 406, 11, 24825, 3157, 11, 5911, 11, 51624], "temperature": 0.0, "avg_logprob": -0.10407904456643498, "compression_ratio": 1.5608695652173914, "no_speech_prob": 0.014060243964195251}, {"id": 109, "seek": 77248, "start": 773.04, "end": 778.64, "text": " allow things through as usual. And in fact, that's all fabric does for you", "tokens": [50392, 2089, 721, 807, 382, 7713, 13, 400, 294, 1186, 11, 300, 311, 439, 7253, 775, 337, 291, 50672], "temperature": 0.0, "avg_logprob": -0.13424170017242432, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.0021824182476848364}, {"id": 110, "seek": 77248, "start": 779.52, "end": 792.0, "text": " when in your definition you require init. So, with the new lifecycle, not only", "tokens": [50716, 562, 294, 428, 7123, 291, 3651, 3157, 13, 407, 11, 365, 264, 777, 45722, 11, 406, 787, 51340], "temperature": 0.0, "avg_logprob": -0.13424170017242432, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.0021824182476848364}, {"id": 111, "seek": 77248, "start": 794.16, "end": 799.6800000000001, "text": " are the semantics a little different, we had to pick a new name for lifecycle. Now, if you're", "tokens": [51448, 366, 264, 4361, 45298, 257, 707, 819, 11, 321, 632, 281, 1888, 257, 777, 1315, 337, 45722, 13, 823, 11, 498, 291, 434, 51724], "temperature": 0.0, "avg_logprob": -0.13424170017242432, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.0021824182476848364}, {"id": 112, "seek": 80248, "start": 802.48, "end": 809.28, "text": " familiar with operating a fabric v1.x network, you'll know that lifecycle operations were done", "tokens": [50364, 4963, 365, 7447, 257, 7253, 371, 16, 13, 87, 3209, 11, 291, 603, 458, 300, 45722, 7705, 645, 1096, 50704], "temperature": 0.0, "avg_logprob": -0.10953855514526367, "compression_ratio": 1.7391304347826086, "no_speech_prob": 0.002472155960276723}, {"id": 113, "seek": 80248, "start": 809.28, "end": 816.72, "text": " through a system chain code called lscc. So, lscc is no longer the chain code used for", "tokens": [50704, 807, 257, 1185, 5021, 3089, 1219, 287, 4417, 66, 13, 407, 11, 287, 4417, 66, 307, 572, 2854, 264, 5021, 3089, 1143, 337, 51076], "temperature": 0.0, "avg_logprob": -0.10953855514526367, "compression_ratio": 1.7391304347826086, "no_speech_prob": 0.002472155960276723}, {"id": 114, "seek": 80248, "start": 816.72, "end": 823.12, "text": " lifecycle operations. Instead, there's a new system chain code called underscore lifecycle.", "tokens": [51076, 45722, 7705, 13, 7156, 11, 456, 311, 257, 777, 1185, 5021, 3089, 1219, 37556, 45722, 13, 51396], "temperature": 0.0, "avg_logprob": -0.10953855514526367, "compression_ratio": 1.7391304347826086, "no_speech_prob": 0.002472155960276723}, {"id": 115, "seek": 80248, "start": 824.64, "end": 831.9200000000001, "text": " And the underscore in the front is a prefix to indicate that it's a system name space,", "tokens": [51472, 400, 264, 37556, 294, 264, 1868, 307, 257, 46969, 281, 13330, 300, 309, 311, 257, 1185, 1315, 1901, 11, 51836], "temperature": 0.0, "avg_logprob": -0.10953855514526367, "compression_ratio": 1.7391304347826086, "no_speech_prob": 0.002472155960276723}, {"id": 116, "seek": 83248, "start": 832.72, "end": 837.84, "text": " the suffix of ending chain codes in scc to indicate system name spaces was", "tokens": [50376, 264, 3889, 970, 295, 8121, 5021, 14211, 294, 795, 66, 281, 13330, 1185, 1315, 7673, 390, 50632], "temperature": 0.0, "avg_logprob": -0.1024542794083104, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.0005883363774046302}, {"id": 117, "seek": 83248, "start": 839.76, "end": 847.2, "text": " not one of the better ideas in fabric v1.x. So, underscore is now a reserve system name space,", "tokens": [50728, 406, 472, 295, 264, 1101, 3487, 294, 7253, 371, 16, 13, 87, 13, 407, 11, 37556, 307, 586, 257, 17824, 1185, 1315, 1901, 11, 51100], "temperature": 0.0, "avg_logprob": -0.1024542794083104, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.0005883363774046302}, {"id": 118, "seek": 83248, "start": 847.2, "end": 857.2, "text": " underscore lifecycle is the lifecycle system chain code. And in fabric v2, both the underscore", "tokens": [51100, 37556, 45722, 307, 264, 45722, 1185, 5021, 3089, 13, 400, 294, 7253, 371, 17, 11, 1293, 264, 37556, 51600], "temperature": 0.0, "avg_logprob": -0.1024542794083104, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.0005883363774046302}, {"id": 119, "seek": 85720, "start": 857.2, "end": 866.08, "text": " lifecycle and the lscc chain codes exist. Both are functional. And in the event that", "tokens": [50364, 45722, 293, 264, 287, 4417, 66, 5021, 14211, 2514, 13, 6767, 366, 11745, 13, 400, 294, 264, 2280, 300, 50808], "temperature": 0.0, "avg_logprob": -0.07044479521838101, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.012052119709551334}, {"id": 120, "seek": 85720, "start": 866.88, "end": 872.08, "text": " the distributed lifecycle has been enabled, first we'll check definitions done in the new", "tokens": [50848, 264, 12631, 45722, 575, 668, 15172, 11, 700, 321, 603, 1520, 21988, 1096, 294, 264, 777, 51108], "temperature": 0.0, "avg_logprob": -0.07044479521838101, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.012052119709551334}, {"id": 121, "seek": 85720, "start": 872.08, "end": 878.32, "text": " lifecycle. And if there's nothing there, we fall back to the old lifecycle. But it is important", "tokens": [51108, 45722, 13, 400, 498, 456, 311, 1825, 456, 11, 321, 2100, 646, 281, 264, 1331, 45722, 13, 583, 309, 307, 1021, 51420], "temperature": 0.0, "avg_logprob": -0.07044479521838101, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.012052119709551334}, {"id": 122, "seek": 85720, "start": 878.32, "end": 887.0400000000001, "text": " to note that eventually fabric will be removing support for the legacy lscc. So, it's a good", "tokens": [51420, 281, 3637, 300, 4728, 7253, 486, 312, 12720, 1406, 337, 264, 11711, 287, 4417, 66, 13, 407, 11, 309, 311, 257, 665, 51856], "temperature": 0.0, "avg_logprob": -0.07044479521838101, "compression_ratio": 1.6425339366515836, "no_speech_prob": 0.012052119709551334}, {"id": 123, "seek": 88704, "start": 887.04, "end": 891.92, "text": " idea to go ahead and migrate onto this new lifecycle as soon as possible because", "tokens": [50364, 1558, 281, 352, 2286, 293, 31821, 3911, 341, 777, 45722, 382, 2321, 382, 1944, 570, 50608], "temperature": 0.0, "avg_logprob": -0.09238929133261403, "compression_ratio": 1.4450867052023122, "no_speech_prob": 0.0003569014079403132}, {"id": 124, "seek": 88704, "start": 892.88, "end": 901.28, "text": " at a later fabric version, lscc will be removed. And you'll be forced to move there eventually.", "tokens": [50656, 412, 257, 1780, 7253, 3037, 11, 287, 4417, 66, 486, 312, 7261, 13, 400, 291, 603, 312, 7579, 281, 1286, 456, 4728, 13, 51076], "temperature": 0.0, "avg_logprob": -0.09238929133261403, "compression_ratio": 1.4450867052023122, "no_speech_prob": 0.0003569014079403132}, {"id": 125, "seek": 88704, "start": 904.7199999999999, "end": 910.24, "text": " So, let's talk about how lifecycle works sort of from a user perspective.", "tokens": [51248, 407, 11, 718, 311, 751, 466, 577, 45722, 1985, 1333, 295, 490, 257, 4195, 4585, 13, 51524], "temperature": 0.0, "avg_logprob": -0.09238929133261403, "compression_ratio": 1.4450867052023122, "no_speech_prob": 0.0003569014079403132}, {"id": 126, "seek": 91024, "start": 910.96, "end": 918.24, "text": " Let's say you have three organizations, org one, org two, and org three. And everyone wants to", "tokens": [50400, 961, 311, 584, 291, 362, 1045, 6150, 11, 14045, 472, 11, 14045, 732, 11, 293, 14045, 1045, 13, 400, 1518, 2738, 281, 50764], "temperature": 0.0, "avg_logprob": -0.14721163950468363, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.022971274331212044}, {"id": 127, "seek": 91024, "start": 918.88, "end": 927.84, "text": " run chain code mycc. And we've agreed that two out of three orgs must agree that's the endorsement", "tokens": [50796, 1190, 5021, 3089, 452, 1914, 13, 400, 321, 600, 9166, 300, 732, 484, 295, 1045, 14045, 82, 1633, 3986, 300, 311, 264, 29228, 518, 51244], "temperature": 0.0, "avg_logprob": -0.14721163950468363, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.022971274331212044}, {"id": 128, "seek": 91024, "start": 927.84, "end": 936.48, "text": " policy we want to go with. So, what would this look like implemented? Someone's got to take the", "tokens": [51244, 3897, 321, 528, 281, 352, 365, 13, 407, 11, 437, 576, 341, 574, 411, 12270, 30, 8734, 311, 658, 281, 747, 264, 51676], "temperature": 0.0, "avg_logprob": -0.14721163950468363, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.022971274331212044}, {"id": 129, "seek": 93648, "start": 937.04, "end": 943.36, "text": " lead. Someone has to sort of administrate the process. And for here, we've chosen org one,", "tokens": [50392, 1477, 13, 8734, 575, 281, 1333, 295, 4968, 4404, 264, 1399, 13, 400, 337, 510, 11, 321, 600, 8614, 14045, 472, 11, 50708], "temperature": 0.0, "avg_logprob": -0.14240787005183672, "compression_ratio": 1.6431718061674008, "no_speech_prob": 0.011328388936817646}, {"id": 130, "seek": 93648, "start": 943.36, "end": 948.88, "text": " but it could be really any admin. And what they would do is they would package this chain code", "tokens": [50708, 457, 309, 727, 312, 534, 604, 24236, 13, 400, 437, 436, 576, 360, 307, 436, 576, 7372, 341, 5021, 3089, 50984], "temperature": 0.0, "avg_logprob": -0.14240787005183672, "compression_ratio": 1.6431718061674008, "no_speech_prob": 0.011328388936817646}, {"id": 131, "seek": 93648, "start": 949.9200000000001, "end": 959.44, "text": " using the pure CLI into what is now just a standard tar GZ. And disseminate that package to", "tokens": [51036, 1228, 264, 6075, 12855, 40, 666, 437, 307, 586, 445, 257, 3832, 3112, 460, 57, 13, 400, 34585, 473, 300, 7372, 281, 51512], "temperature": 0.0, "avg_logprob": -0.14240787005183672, "compression_ratio": 1.6431718061674008, "no_speech_prob": 0.011328388936817646}, {"id": 132, "seek": 93648, "start": 959.44, "end": 966.08, "text": " the other orgs. Now, the other orgs, they can take a look at this package. And unlike in fabric", "tokens": [51512, 264, 661, 14045, 82, 13, 823, 11, 264, 661, 14045, 82, 11, 436, 393, 747, 257, 574, 412, 341, 7372, 13, 400, 8343, 294, 7253, 51844], "temperature": 0.0, "avg_logprob": -0.14240787005183672, "compression_ratio": 1.6431718061674008, "no_speech_prob": 0.011328388936817646}, {"id": 133, "seek": 96608, "start": 966.1600000000001, "end": 972.64, "text": " v1.x, where the package format was sort of a fabric specific thing, a CDS file,", "tokens": [50368, 371, 16, 13, 87, 11, 689, 264, 7372, 7877, 390, 1333, 295, 257, 7253, 2685, 551, 11, 257, 6743, 50, 3991, 11, 50692], "temperature": 0.0, "avg_logprob": -0.10685970962688487, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.0030747931450605392}, {"id": 134, "seek": 96608, "start": 974.32, "end": 982.08, "text": " in the v2 lifecycle, these packages are standard tar GZs. So, an admin can simply", "tokens": [50776, 294, 264, 371, 17, 45722, 11, 613, 17401, 366, 3832, 3112, 460, 57, 82, 13, 407, 11, 364, 24236, 393, 2935, 51164], "temperature": 0.0, "avg_logprob": -0.10685970962688487, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.0030747931450605392}, {"id": 135, "seek": 96608, "start": 982.08, "end": 986.96, "text": " use whatever commodity tooling they would like to take a look at that package, make sure it is,", "tokens": [51164, 764, 2035, 29125, 46593, 436, 576, 411, 281, 747, 257, 574, 412, 300, 7372, 11, 652, 988, 309, 307, 11, 51408], "temperature": 0.0, "avg_logprob": -0.10685970962688487, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.0030747931450605392}, {"id": 136, "seek": 96608, "start": 986.96, "end": 994.32, "text": " in fact, the chain code that they want to install. Now, everyone goes and installs this", "tokens": [51408, 294, 1186, 11, 264, 5021, 3089, 300, 436, 528, 281, 3625, 13, 823, 11, 1518, 1709, 293, 3625, 82, 341, 51776], "temperature": 0.0, "avg_logprob": -0.10685970962688487, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.0030747931450605392}, {"id": 137, "seek": 99432, "start": 994.32, "end": 1003.2, "text": " chain code package and commits that approval, sends that approve for my org transaction through,", "tokens": [50364, 5021, 3089, 7372, 293, 48311, 300, 13317, 11, 14790, 300, 18827, 337, 452, 14045, 14425, 807, 11, 50808], "temperature": 0.0, "avg_logprob": -0.1790852345211405, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.000804017938207835}, {"id": 138, "seek": 99432, "start": 1004.24, "end": 1011.36, "text": " according to the parameters that we sort of agreed out of band. So, this is my cc, it's version one,", "tokens": [50860, 4650, 281, 264, 9834, 300, 321, 1333, 295, 9166, 484, 295, 4116, 13, 407, 11, 341, 307, 452, 269, 66, 11, 309, 311, 3037, 472, 11, 51216], "temperature": 0.0, "avg_logprob": -0.1790852345211405, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.000804017938207835}, {"id": 139, "seek": 99432, "start": 1012.32, "end": 1017.84, "text": " the endorsement policy is two out of three and so forth. Once everyone's done their approval,", "tokens": [51264, 264, 29228, 518, 3897, 307, 732, 484, 295, 1045, 293, 370, 5220, 13, 3443, 1518, 311, 1096, 641, 13317, 11, 51540], "temperature": 0.0, "avg_logprob": -0.1790852345211405, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.000804017938207835}, {"id": 140, "seek": 101784, "start": 1017.9200000000001, "end": 1023.9200000000001, "text": " and again, typically we would wait for everyone, then the administrative org one", "tokens": [50368, 293, 797, 11, 5850, 321, 576, 1699, 337, 1518, 11, 550, 264, 17900, 14045, 472, 50668], "temperature": 0.0, "avg_logprob": -0.11427105942817584, "compression_ratio": 1.7074468085106382, "no_speech_prob": 0.008314239792525768}, {"id": 141, "seek": 101784, "start": 1024.88, "end": 1028.64, "text": " sends the transaction to commit the chain code definition for that channel,", "tokens": [50716, 14790, 264, 14425, 281, 5599, 264, 5021, 3089, 7123, 337, 300, 2269, 11, 50904], "temperature": 0.0, "avg_logprob": -0.11427105942817584, "compression_ratio": 1.7074468085106382, "no_speech_prob": 0.008314239792525768}, {"id": 142, "seek": 101784, "start": 1029.28, "end": 1038.0, "text": " and the chain code is now operational. So, let's look at this visually. We have three peers.", "tokens": [50936, 293, 264, 5021, 3089, 307, 586, 16607, 13, 407, 11, 718, 311, 574, 412, 341, 19622, 13, 492, 362, 1045, 16739, 13, 51372], "temperature": 0.0, "avg_logprob": -0.11427105942817584, "compression_ratio": 1.7074468085106382, "no_speech_prob": 0.008314239792525768}, {"id": 143, "seek": 101784, "start": 1039.44, "end": 1043.44, "text": " The administrators install the chain code on each of those three peers.", "tokens": [51444, 440, 27754, 3625, 264, 5021, 3089, 322, 1184, 295, 729, 1045, 16739, 13, 51644], "temperature": 0.0, "avg_logprob": -0.11427105942817584, "compression_ratio": 1.7074468085106382, "no_speech_prob": 0.008314239792525768}, {"id": 144, "seek": 104344, "start": 1044.0, "end": 1049.8400000000001, "text": " They approve the chain code with all of the same parameters,", "tokens": [50392, 814, 18827, 264, 5021, 3089, 365, 439, 295, 264, 912, 9834, 11, 50684], "temperature": 0.0, "avg_logprob": -0.1593339654463756, "compression_ratio": 1.671641791044776, "no_speech_prob": 0.0012842400465160608}, {"id": 145, "seek": 104344, "start": 1051.92, "end": 1058.0800000000002, "text": " and then they commit that chain code definition, and now the chain code is defined,", "tokens": [50788, 293, 550, 436, 5599, 300, 5021, 3089, 7123, 11, 293, 586, 264, 5021, 3089, 307, 7642, 11, 51096], "temperature": 0.0, "avg_logprob": -0.1593339654463756, "compression_ratio": 1.671641791044776, "no_speech_prob": 0.0012842400465160608}, {"id": 146, "seek": 104344, "start": 1058.8, "end": 1066.0, "text": " all three peers are ready to execute it. This is the standard workflow and, you know, what you", "tokens": [51132, 439, 1045, 16739, 366, 1919, 281, 14483, 309, 13, 639, 307, 264, 3832, 20993, 293, 11, 291, 458, 11, 437, 291, 51492], "temperature": 0.0, "avg_logprob": -0.1593339654463756, "compression_ratio": 1.671641791044776, "no_speech_prob": 0.0012842400465160608}, {"id": 147, "seek": 104344, "start": 1066.0, "end": 1072.8, "text": " can expect to happen in most production fabric networks. You know, everyone is in sync, everyone", "tokens": [51492, 393, 2066, 281, 1051, 294, 881, 4265, 7253, 9590, 13, 509, 458, 11, 1518, 307, 294, 20271, 11, 1518, 51832], "temperature": 0.0, "avg_logprob": -0.1593339654463756, "compression_ratio": 1.671641791044776, "no_speech_prob": 0.0012842400465160608}, {"id": 148, "seek": 107280, "start": 1072.8799999999999, "end": 1079.2, "text": " is in agreement, everyone does the same approval, and once everyone is ready, the definition commits.", "tokens": [50368, 307, 294, 8106, 11, 1518, 775, 264, 912, 13317, 11, 293, 1564, 1518, 307, 1919, 11, 264, 7123, 48311, 13, 50684], "temperature": 0.0, "avg_logprob": -0.10029308994611104, "compression_ratio": 1.7155963302752293, "no_speech_prob": 0.00041727168718352914}, {"id": 149, "seek": 107280, "start": 1080.1599999999999, "end": 1086.56, "text": " But, you know, we don't want to require unanimous agreement for everything. So,", "tokens": [50732, 583, 11, 291, 458, 11, 321, 500, 380, 528, 281, 3651, 29710, 563, 8106, 337, 1203, 13, 407, 11, 51052], "temperature": 0.0, "avg_logprob": -0.10029308994611104, "compression_ratio": 1.7155963302752293, "no_speech_prob": 0.00041727168718352914}, {"id": 150, "seek": 107280, "start": 1088.72, "end": 1095.44, "text": " here are some permutations. Let's say one of the admins doesn't install the chain code. One of", "tokens": [51160, 510, 366, 512, 4784, 325, 763, 13, 961, 311, 584, 472, 295, 264, 5910, 1292, 1177, 380, 3625, 264, 5021, 3089, 13, 1485, 295, 51496], "temperature": 0.0, "avg_logprob": -0.10029308994611104, "compression_ratio": 1.7155963302752293, "no_speech_prob": 0.00041727168718352914}, {"id": 151, "seek": 107280, "start": 1095.44, "end": 1101.84, "text": " the admins, you know, either they forget to or they simply don't want to execute this chain code.", "tokens": [51496, 264, 5910, 1292, 11, 291, 458, 11, 2139, 436, 2870, 281, 420, 436, 2935, 500, 380, 528, 281, 14483, 341, 5021, 3089, 13, 51816], "temperature": 0.0, "avg_logprob": -0.10029308994611104, "compression_ratio": 1.7155963302752293, "no_speech_prob": 0.00041727168718352914}, {"id": 152, "seek": 110184, "start": 1102.3999999999999, "end": 1109.4399999999998, "text": " Well, things still proceed just fine because all three ORGs have agreed on this chain code", "tokens": [50392, 1042, 11, 721, 920, 8991, 445, 2489, 570, 439, 1045, 19654, 33715, 362, 9166, 322, 341, 5021, 3089, 50744], "temperature": 0.0, "avg_logprob": -0.11158362202260685, "compression_ratio": 1.5890410958904109, "no_speech_prob": 0.0004172834160272032}, {"id": 153, "seek": 110184, "start": 1109.4399999999998, "end": 1117.76, "text": " definition, and that definition commits as normal, but only ORG1 and ORG2's peers", "tokens": [50744, 7123, 11, 293, 300, 7123, 48311, 382, 2710, 11, 457, 787, 19654, 38, 16, 293, 19654, 38, 17, 311, 16739, 51160], "temperature": 0.0, "avg_logprob": -0.11158362202260685, "compression_ratio": 1.5890410958904109, "no_speech_prob": 0.0004172834160272032}, {"id": 154, "seek": 110184, "start": 1118.48, "end": 1124.6399999999999, "text": " will service invocations for that chain code because, of course, the chain code is not installed", "tokens": [51196, 486, 2643, 1048, 905, 763, 337, 300, 5021, 3089, 570, 11, 295, 1164, 11, 264, 5021, 3089, 307, 406, 8899, 51504], "temperature": 0.0, "avg_logprob": -0.11158362202260685, "compression_ratio": 1.5890410958904109, "no_speech_prob": 0.0004172834160272032}, {"id": 155, "seek": 110184, "start": 1124.6399999999999, "end": 1130.72, "text": " on ORG3's peer. Hopefully, that's unsurprising and what everyone would expect.", "tokens": [51504, 322, 19654, 38, 18, 311, 15108, 13, 10429, 11, 300, 311, 2693, 374, 26203, 293, 437, 1518, 576, 2066, 13, 51808], "temperature": 0.0, "avg_logprob": -0.11158362202260685, "compression_ratio": 1.5890410958904109, "no_speech_prob": 0.0004172834160272032}, {"id": 156, "seek": 113184, "start": 1132.1599999999999, "end": 1138.08, "text": " Now, the second one. Now, this is sort of the crux of the difference between", "tokens": [50380, 823, 11, 264, 1150, 472, 13, 823, 11, 341, 307, 1333, 295, 264, 5140, 87, 295, 264, 2649, 1296, 50676], "temperature": 0.0, "avg_logprob": -0.07777638912200928, "compression_ratio": 1.625, "no_speech_prob": 0.0012064814800396562}, {"id": 157, "seek": 113184, "start": 1138.9599999999998, "end": 1147.36, "text": " the v1.x and the decentralized lifecycle, and that's if ORG3's admin does not approve that", "tokens": [50720, 264, 371, 16, 13, 87, 293, 264, 32870, 45722, 11, 293, 300, 311, 498, 19654, 38, 18, 311, 24236, 775, 406, 18827, 300, 51140], "temperature": 0.0, "avg_logprob": -0.07777638912200928, "compression_ratio": 1.625, "no_speech_prob": 0.0012064814800396562}, {"id": 158, "seek": 113184, "start": 1147.36, "end": 1154.6399999999999, "text": " definition. If ORG3's admin does nothing, well, it's still possible for the chain code to get", "tokens": [51140, 7123, 13, 759, 19654, 38, 18, 311, 24236, 775, 1825, 11, 731, 11, 309, 311, 920, 1944, 337, 264, 5021, 3089, 281, 483, 51504], "temperature": 0.0, "avg_logprob": -0.07777638912200928, "compression_ratio": 1.625, "no_speech_prob": 0.0012064814800396562}, {"id": 159, "seek": 113184, "start": 1154.6399999999999, "end": 1160.32, "text": " defined on the channel because ORG1 and ORG2 agree, and we'll talk a little bit more about that later.", "tokens": [51504, 7642, 322, 264, 2269, 570, 19654, 38, 16, 293, 19654, 38, 17, 3986, 11, 293, 321, 603, 751, 257, 707, 857, 544, 466, 300, 1780, 13, 51788], "temperature": 0.0, "avg_logprob": -0.07777638912200928, "compression_ratio": 1.625, "no_speech_prob": 0.0012064814800396562}, {"id": 160, "seek": 116184, "start": 1161.84, "end": 1166.9599999999998, "text": " But here, the chain code gets defined, and even though ORG3's peer has the chain code installed,", "tokens": [50364, 583, 510, 11, 264, 5021, 3089, 2170, 7642, 11, 293, 754, 1673, 19654, 38, 18, 311, 15108, 575, 264, 5021, 3089, 8899, 11, 50620], "temperature": 0.0, "avg_logprob": -0.0830694647396312, "compression_ratio": 1.737556561085973, "no_speech_prob": 0.00015355893992818892}, {"id": 161, "seek": 116184, "start": 1167.6799999999998, "end": 1175.4399999999998, "text": " ORG3's peer will not execute that chain code, and that's because ORG3's admin never agreed to", "tokens": [50656, 19654, 38, 18, 311, 15108, 486, 406, 14483, 300, 5021, 3089, 11, 293, 300, 311, 570, 19654, 38, 18, 311, 24236, 1128, 9166, 281, 51044], "temperature": 0.0, "avg_logprob": -0.0830694647396312, "compression_ratio": 1.737556561085973, "no_speech_prob": 0.00015355893992818892}, {"id": 162, "seek": 116184, "start": 1175.4399999999998, "end": 1183.1999999999998, "text": " this particular definition. Well, what if they did agree that they wanted to run this chain code,", "tokens": [51044, 341, 1729, 7123, 13, 1042, 11, 437, 498, 436, 630, 3986, 300, 436, 1415, 281, 1190, 341, 5021, 3089, 11, 51432], "temperature": 0.0, "avg_logprob": -0.0830694647396312, "compression_ratio": 1.737556561085973, "no_speech_prob": 0.00015355893992818892}, {"id": 163, "seek": 116184, "start": 1183.1999999999998, "end": 1189.12, "text": " but, you know, in a slightly different way? So in this case, you know, you can see in bold here", "tokens": [51432, 457, 11, 291, 458, 11, 294, 257, 4748, 819, 636, 30, 407, 294, 341, 1389, 11, 291, 458, 11, 291, 393, 536, 294, 11928, 510, 51728], "temperature": 0.0, "avg_logprob": -0.0830694647396312, "compression_ratio": 1.737556561085973, "no_speech_prob": 0.00015355893992818892}, {"id": 164, "seek": 118912, "start": 1190.08, "end": 1197.6799999999998, "text": " that for ORG3, their admin said, I want a policy of three out of three for the endorsement policy.", "tokens": [50412, 300, 337, 19654, 38, 18, 11, 641, 24236, 848, 11, 286, 528, 257, 3897, 295, 1045, 484, 295, 1045, 337, 264, 29228, 518, 3897, 13, 50792], "temperature": 0.0, "avg_logprob": -0.06709059928227397, "compression_ratio": 1.6221198156682028, "no_speech_prob": 0.0032729506492614746}, {"id": 165, "seek": 118912, "start": 1197.6799999999998, "end": 1203.6, "text": " All three ORGs must execute. While ORG1 and ORG2 said, no, two out of three is just fine.", "tokens": [50792, 1057, 1045, 19654, 33715, 1633, 14483, 13, 3987, 19654, 38, 16, 293, 19654, 38, 17, 848, 11, 572, 11, 732, 484, 295, 1045, 307, 445, 2489, 13, 51088], "temperature": 0.0, "avg_logprob": -0.06709059928227397, "compression_ratio": 1.6221198156682028, "no_speech_prob": 0.0032729506492614746}, {"id": 166, "seek": 118912, "start": 1204.32, "end": 1208.8799999999999, "text": " Well, in this case, even though ORG3 has said, yes, I want to run this chain code,", "tokens": [51124, 1042, 11, 294, 341, 1389, 11, 754, 1673, 19654, 38, 18, 575, 848, 11, 2086, 11, 286, 528, 281, 1190, 341, 5021, 3089, 11, 51352], "temperature": 0.0, "avg_logprob": -0.06709059928227397, "compression_ratio": 1.6221198156682028, "no_speech_prob": 0.0032729506492614746}, {"id": 167, "seek": 118912, "start": 1209.52, "end": 1214.1599999999999, "text": " because ORG3's agreement doesn't match what's actually committed in the channel,", "tokens": [51384, 570, 19654, 38, 18, 311, 8106, 1177, 380, 2995, 437, 311, 767, 7784, 294, 264, 2269, 11, 51616], "temperature": 0.0, "avg_logprob": -0.06709059928227397, "compression_ratio": 1.6221198156682028, "no_speech_prob": 0.0032729506492614746}, {"id": 168, "seek": 121416, "start": 1214.8000000000002, "end": 1219.92, "text": " ORG3 will still refuse to execute the chain code. So you get the same effect as if the", "tokens": [50396, 19654, 38, 18, 486, 920, 16791, 281, 14483, 264, 5021, 3089, 13, 407, 291, 483, 264, 912, 1802, 382, 498, 264, 50652], "temperature": 0.0, "avg_logprob": -0.11652005237081776, "compression_ratio": 1.3602150537634408, "no_speech_prob": 0.002396626165136695}, {"id": 169, "seek": 121416, "start": 1219.92, "end": 1228.16, "text": " ORG3's admin had done nothing. And so finally, this is sort of the worst case.", "tokens": [50652, 19654, 38, 18, 311, 24236, 632, 1096, 1825, 13, 400, 370, 2721, 11, 341, 307, 1333, 295, 264, 5855, 1389, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11652005237081776, "compression_ratio": 1.3602150537634408, "no_speech_prob": 0.002396626165136695}, {"id": 170, "seek": 121416, "start": 1229.92, "end": 1237.44, "text": " Communications broke down. People couldn't agree on the parameters. Here we have ORG1's", "tokens": [51152, 38998, 6902, 760, 13, 3432, 2809, 380, 3986, 322, 264, 9834, 13, 1692, 321, 362, 19654, 38, 16, 311, 51528], "temperature": 0.0, "avg_logprob": -0.11652005237081776, "compression_ratio": 1.3602150537634408, "no_speech_prob": 0.002396626165136695}, {"id": 171, "seek": 123744, "start": 1238.0, "end": 1245.52, "text": " admin picked version 1.1, ORG3 picked a policy of three out of three. We simply don't have enough", "tokens": [50392, 24236, 6183, 3037, 502, 13, 16, 11, 19654, 38, 18, 6183, 257, 3897, 295, 1045, 484, 295, 1045, 13, 492, 2935, 500, 380, 362, 1547, 50768], "temperature": 0.0, "avg_logprob": -0.0719606847648161, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.014955883845686913}, {"id": 172, "seek": 123744, "start": 1245.52, "end": 1251.76, "text": " agreement here on how this chain code should be instantiated. So in this case, the chain code", "tokens": [50768, 8106, 510, 322, 577, 341, 5021, 3089, 820, 312, 9836, 72, 770, 13, 407, 294, 341, 1389, 11, 264, 5021, 3089, 51080], "temperature": 0.0, "avg_logprob": -0.0719606847648161, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.014955883845686913}, {"id": 173, "seek": 123744, "start": 1251.76, "end": 1255.92, "text": " could not be defined because we wouldn't be able to gather sufficient endorsements", "tokens": [51080, 727, 406, 312, 7642, 570, 321, 2759, 380, 312, 1075, 281, 5448, 11563, 29228, 1117, 51288], "temperature": 0.0, "avg_logprob": -0.0719606847648161, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.014955883845686913}, {"id": 174, "seek": 123744, "start": 1256.72, "end": 1261.44, "text": " from the lifecycle chain code to actually get this definition committed.", "tokens": [51328, 490, 264, 45722, 5021, 3089, 281, 767, 483, 341, 7123, 7784, 13, 51564], "temperature": 0.0, "avg_logprob": -0.0719606847648161, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.014955883845686913}, {"id": 175, "seek": 126144, "start": 1261.44, "end": 1269.04, "text": " So I've been sort of avoiding the topic and alluding to it a little bit,", "tokens": [50364, 407, 286, 600, 668, 1333, 295, 20220, 264, 4829, 293, 439, 33703, 281, 309, 257, 707, 857, 11, 50744], "temperature": 0.0, "avg_logprob": -0.13806497133695161, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.0011694260174408555}, {"id": 176, "seek": 126144, "start": 1269.92, "end": 1280.56, "text": " but lifecycle is governed by endorsement policies. In the v1.x lifecycle, there were", "tokens": [50788, 457, 45722, 307, 35529, 538, 29228, 518, 7657, 13, 682, 264, 371, 16, 13, 87, 45722, 11, 456, 645, 51320], "temperature": 0.0, "avg_logprob": -0.13806497133695161, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.0011694260174408555}, {"id": 177, "seek": 126144, "start": 1280.56, "end": 1289.6000000000001, "text": " a few things going on. There were some sort of hard-coded validation rules in the validation", "tokens": [51320, 257, 1326, 721, 516, 322, 13, 821, 645, 512, 1333, 295, 1152, 12, 66, 12340, 24071, 4474, 294, 264, 24071, 51772], "temperature": 0.0, "avg_logprob": -0.13806497133695161, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.0011694260174408555}, {"id": 178, "seek": 128960, "start": 1289.6, "end": 1296.3999999999999, "text": " plugin logic, or vscc, as it used to be called, that treated lifecycle invocation specially.", "tokens": [50364, 23407, 9952, 11, 420, 371, 4417, 66, 11, 382, 309, 1143, 281, 312, 1219, 11, 300, 8668, 45722, 1048, 27943, 22549, 13, 50704], "temperature": 0.0, "avg_logprob": -0.2183757335581678, "compression_ratio": 1.3484848484848484, "no_speech_prob": 0.0012841372517868876}, {"id": 179, "seek": 128960, "start": 1303.1999999999998, "end": 1310.8799999999999, "text": " The endorsement policy was also hard-coded there. In the new lifecycle, everything is", "tokens": [51044, 440, 29228, 518, 3897, 390, 611, 1152, 12, 66, 12340, 456, 13, 682, 264, 777, 45722, 11, 1203, 307, 51428], "temperature": 0.0, "avg_logprob": -0.2183757335581678, "compression_ratio": 1.3484848484848484, "no_speech_prob": 0.0012841372517868876}, {"id": 180, "seek": 131088, "start": 1310.88, "end": 1322.4, "text": " based off of endorsement policies. In particular, to commit a definition into the lifecycle chain", "tokens": [50364, 2361, 766, 295, 29228, 518, 7657, 13, 682, 1729, 11, 281, 5599, 257, 7123, 666, 264, 45722, 5021, 50940], "temperature": 0.0, "avg_logprob": -0.08295792546765558, "compression_ratio": 1.6706586826347305, "no_speech_prob": 0.06558270007371902}, {"id": 181, "seek": 131088, "start": 1322.4, "end": 1330.24, "text": " code namespace, you need to satisfy the channel application lifecycle endorsement policy.", "tokens": [50940, 3089, 5288, 17940, 11, 291, 643, 281, 19319, 264, 2269, 3861, 45722, 29228, 518, 3897, 13, 51332], "temperature": 0.0, "avg_logprob": -0.08295792546765558, "compression_ratio": 1.6706586826347305, "no_speech_prob": 0.06558270007371902}, {"id": 182, "seek": 131088, "start": 1331.2, "end": 1337.2800000000002, "text": " So this is a channel configuration policy, much like the channel readers or channel writers", "tokens": [51380, 407, 341, 307, 257, 2269, 11694, 3897, 11, 709, 411, 264, 2269, 17147, 420, 2269, 13491, 51684], "temperature": 0.0, "avg_logprob": -0.08295792546765558, "compression_ratio": 1.6706586826347305, "no_speech_prob": 0.06558270007371902}, {"id": 183, "seek": 133728, "start": 1337.28, "end": 1344.72, "text": " policies, but this one defaults to requiring that a majority of the application orgs", "tokens": [50364, 7657, 11, 457, 341, 472, 7576, 82, 281, 24165, 300, 257, 6286, 295, 264, 3861, 14045, 82, 50736], "temperature": 0.0, "avg_logprob": -0.09118113979216545, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.0020504796411842108}, {"id": 184, "seek": 133728, "start": 1345.92, "end": 1353.44, "text": " must endorse. So what this means is in the default configuration, so long as a majority", "tokens": [50796, 1633, 29228, 13, 407, 437, 341, 1355, 307, 294, 264, 7576, 11694, 11, 370, 938, 382, 257, 6286, 51172], "temperature": 0.0, "avg_logprob": -0.09118113979216545, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.0020504796411842108}, {"id": 185, "seek": 133728, "start": 1353.44, "end": 1360.24, "text": " of the organizations in the network can agree on a change, then that change will be permitted.", "tokens": [51172, 295, 264, 6150, 294, 264, 3209, 393, 3986, 322, 257, 1319, 11, 550, 300, 1319, 486, 312, 28658, 13, 51512], "temperature": 0.0, "avg_logprob": -0.09118113979216545, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.0020504796411842108}, {"id": 186, "seek": 136024, "start": 1360.56, "end": 1367.52, "text": " Now, note, just like we saw back here, just because the network agrees on a definition", "tokens": [50380, 823, 11, 3637, 11, 445, 411, 321, 1866, 646, 510, 11, 445, 570, 264, 3209, 26383, 322, 257, 7123, 50728], "temperature": 0.0, "avg_logprob": -0.17195398416092147, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.01363503746688366}, {"id": 187, "seek": 136024, "start": 1368.4, "end": 1375.1200000000001, "text": " doesn't force an org to participate in that chain code, but what it does do is it allows", "tokens": [50772, 1177, 380, 3464, 364, 14045, 281, 8197, 294, 300, 5021, 3089, 11, 457, 437, 309, 775, 360, 307, 309, 4045, 51108], "temperature": 0.0, "avg_logprob": -0.17195398416092147, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.01363503746688366}, {"id": 188, "seek": 136024, "start": 1375.1200000000001, "end": 1384.56, "text": " the network to make changes even if one of the actors is not participating. And so this could be", "tokens": [51108, 264, 3209, 281, 652, 2962, 754, 498, 472, 295, 264, 10037, 307, 406, 13950, 13, 400, 370, 341, 727, 312, 51580], "temperature": 0.0, "avg_logprob": -0.17195398416092147, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.01363503746688366}, {"id": 189, "seek": 138456, "start": 1385.52, "end": 1395.12, "text": " maybe there's an urgent security bug or other reason that the chain code needs to change,", "tokens": [50412, 1310, 456, 311, 364, 19022, 3825, 7426, 420, 661, 1778, 300, 264, 5021, 3089, 2203, 281, 1319, 11, 50892], "temperature": 0.0, "avg_logprob": -0.15485580631944, "compression_ratio": 1.4972375690607735, "no_speech_prob": 0.005553959868848324}, {"id": 190, "seek": 138456, "start": 1395.76, "end": 1401.36, "text": " and one of the organizations, they can't be contacted. They're administrators on vacation,", "tokens": [50924, 293, 472, 295, 264, 6150, 11, 436, 393, 380, 312, 21546, 13, 814, 434, 27754, 322, 12830, 11, 51204], "temperature": 0.0, "avg_logprob": -0.15485580631944, "compression_ratio": 1.4972375690607735, "no_speech_prob": 0.005553959868848324}, {"id": 191, "seek": 138456, "start": 1402.32, "end": 1408.6399999999999, "text": " something like that. We basically didn't want to default to requiring unanimous agreement,", "tokens": [51252, 746, 411, 300, 13, 492, 1936, 994, 380, 528, 281, 7576, 281, 24165, 29710, 563, 8106, 11, 51568], "temperature": 0.0, "avg_logprob": -0.15485580631944, "compression_ratio": 1.4972375690607735, "no_speech_prob": 0.005553959868848324}, {"id": 192, "seek": 140864, "start": 1409.6000000000001, "end": 1418.48, "text": " although, of course, this is a configurable policy in the channel config. So for those users who", "tokens": [50412, 4878, 11, 295, 1164, 11, 341, 307, 257, 22192, 712, 3897, 294, 264, 2269, 6662, 13, 407, 337, 729, 5022, 567, 50856], "temperature": 0.0, "avg_logprob": -0.12033788708673007, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.0066919950768351555}, {"id": 193, "seek": 140864, "start": 1418.48, "end": 1424.16, "text": " don't like the default of a majority, this can be modified to be any policy that you like.", "tokens": [50856, 500, 380, 411, 264, 7576, 295, 257, 6286, 11, 341, 393, 312, 15873, 281, 312, 604, 3897, 300, 291, 411, 13, 51140], "temperature": 0.0, "avg_logprob": -0.12033788708673007, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.0066919950768351555}, {"id": 194, "seek": 140864, "start": 1424.72, "end": 1431.1200000000001, "text": " In a more dictatorial network, you could require that a single specific org is the only org", "tokens": [51168, 682, 257, 544, 42852, 831, 3209, 11, 291, 727, 3651, 300, 257, 2167, 2685, 14045, 307, 264, 787, 14045, 51488], "temperature": 0.0, "avg_logprob": -0.12033788708673007, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.0066919950768351555}, {"id": 195, "seek": 143112, "start": 1431.1999999999998, "end": 1440.8, "text": " authorized to make life cycle changes. Now, secondly, there's another new endorsement", "tokens": [50368, 28312, 281, 652, 993, 6586, 2962, 13, 823, 11, 26246, 11, 456, 311, 1071, 777, 29228, 518, 50848], "temperature": 0.0, "avg_logprob": -0.10410709145628376, "compression_ratio": 1.7336683417085428, "no_speech_prob": 0.04334982857108116}, {"id": 196, "seek": 143112, "start": 1440.8, "end": 1446.8799999999999, "text": " policy, which is simply channel application endorsement, and this serves as the new", "tokens": [50848, 3897, 11, 597, 307, 2935, 2269, 3861, 29228, 518, 11, 293, 341, 13451, 382, 264, 777, 51152], "temperature": 0.0, "avg_logprob": -0.10410709145628376, "compression_ratio": 1.7336683417085428, "no_speech_prob": 0.04334982857108116}, {"id": 197, "seek": 143112, "start": 1447.84, "end": 1455.36, "text": " default endorsement policy for chain codes when users fail to provide one. In v1.x,", "tokens": [51200, 7576, 29228, 518, 3897, 337, 5021, 14211, 562, 5022, 3061, 281, 2893, 472, 13, 682, 371, 16, 13, 87, 11, 51576], "temperature": 0.0, "avg_logprob": -0.10410709145628376, "compression_ratio": 1.7336683417085428, "no_speech_prob": 0.04334982857108116}, {"id": 198, "seek": 143112, "start": 1455.36, "end": 1460.32, "text": " if you failed to provide an endorsement policy for your chain code, the default you got was", "tokens": [51576, 498, 291, 7612, 281, 2893, 364, 29228, 518, 3897, 337, 428, 5021, 3089, 11, 264, 7576, 291, 658, 390, 51824], "temperature": 0.0, "avg_logprob": -0.10410709145628376, "compression_ratio": 1.7336683417085428, "no_speech_prob": 0.04334982857108116}, {"id": 199, "seek": 146112, "start": 1461.52, "end": 1470.7199999999998, "text": " any member of any org is an adequate endorsement, which makes for a very convenient development", "tokens": [50384, 604, 4006, 295, 604, 14045, 307, 364, 20927, 29228, 518, 11, 597, 1669, 337, 257, 588, 10851, 3250, 50844], "temperature": 0.0, "avg_logprob": -0.0976024305119234, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.0005883238627575338}, {"id": 200, "seek": 146112, "start": 1470.7199999999998, "end": 1478.9599999999998, "text": " default. It makes it very easy to get up and going, but we saw confusion from users who maybe", "tokens": [50844, 7576, 13, 467, 1669, 309, 588, 1858, 281, 483, 493, 293, 516, 11, 457, 321, 1866, 15075, 490, 5022, 567, 1310, 51256], "temperature": 0.0, "avg_logprob": -0.0976024305119234, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.0005883238627575338}, {"id": 201, "seek": 146112, "start": 1478.9599999999998, "end": 1486.4799999999998, "text": " they didn't understand what an endorsement policy was, and they ended up with a default that didn't", "tokens": [51256, 436, 994, 380, 1223, 437, 364, 29228, 518, 3897, 390, 11, 293, 436, 4590, 493, 365, 257, 7576, 300, 994, 380, 51632], "temperature": 0.0, "avg_logprob": -0.0976024305119234, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.0005883238627575338}, {"id": 202, "seek": 148648, "start": 1486.48, "end": 1491.68, "text": " give them the security guarantees they were hoping for. So again, we think that this", "tokens": [50364, 976, 552, 264, 3825, 32567, 436, 645, 7159, 337, 13, 407, 797, 11, 321, 519, 300, 341, 50624], "temperature": 0.0, "avg_logprob": -0.082322004364758, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.00884289015084505}, {"id": 203, "seek": 148648, "start": 1492.56, "end": 1498.88, "text": " default of a majority of organizations must endorse, that that's a pretty reasonable default,", "tokens": [50668, 7576, 295, 257, 6286, 295, 6150, 1633, 29228, 11, 300, 300, 311, 257, 1238, 10585, 7576, 11, 50984], "temperature": 0.0, "avg_logprob": -0.082322004364758, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.00884289015084505}, {"id": 204, "seek": 148648, "start": 1498.88, "end": 1507.52, "text": " but it's just a channel policy. It can be changed to whatever the specifics that a channel requires.", "tokens": [50984, 457, 309, 311, 445, 257, 2269, 3897, 13, 467, 393, 312, 3105, 281, 2035, 264, 28454, 300, 257, 2269, 7029, 13, 51416], "temperature": 0.0, "avg_logprob": -0.082322004364758, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.00884289015084505}, {"id": 205, "seek": 148648, "start": 1510.0, "end": 1515.3600000000001, "text": " Now, here's another point that sort of was deliberately omitted in the previous slides.", "tokens": [51540, 823, 11, 510, 311, 1071, 935, 300, 1333, 295, 390, 23506, 3406, 3944, 294, 264, 3894, 9788, 13, 51808], "temperature": 0.0, "avg_logprob": -0.082322004364758, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.00884289015084505}, {"id": 206, "seek": 151648, "start": 1517.1200000000001, "end": 1525.04, "text": " We talk a lot about these sort of sequences of events that org ones admin does something,", "tokens": [50396, 492, 751, 257, 688, 466, 613, 1333, 295, 22978, 295, 3931, 300, 14045, 2306, 24236, 775, 746, 11, 50792], "temperature": 0.0, "avg_logprob": -0.14455215514652311, "compression_ratio": 1.6273291925465838, "no_speech_prob": 0.0014100412372499704}, {"id": 207, "seek": 151648, "start": 1525.04, "end": 1533.76, "text": " and org twos admin does something, and the problem we always have when we have workflows like this", "tokens": [50792, 293, 14045, 683, 329, 24236, 775, 746, 11, 293, 264, 1154, 321, 1009, 362, 562, 321, 362, 43461, 411, 341, 51228], "temperature": 0.0, "avg_logprob": -0.14455215514652311, "compression_ratio": 1.6273291925465838, "no_speech_prob": 0.0014100412372499704}, {"id": 208, "seek": 151648, "start": 1533.76, "end": 1541.2, "text": " is how do we know that what org one agreed to is still valid and current?", "tokens": [51228, 307, 577, 360, 321, 458, 300, 437, 14045, 472, 9166, 281, 307, 920, 7363, 293, 2190, 30, 51600], "temperature": 0.0, "avg_logprob": -0.14455215514652311, "compression_ratio": 1.6273291925465838, "no_speech_prob": 0.0014100412372499704}, {"id": 209, "seek": 154120, "start": 1542.16, "end": 1545.76, "text": " And so you can sort of think of a sequence number as being sort of like", "tokens": [50412, 400, 370, 291, 393, 1333, 295, 519, 295, 257, 8310, 1230, 382, 885, 1333, 295, 411, 50592], "temperature": 0.0, "avg_logprob": -0.1256943643093109, "compression_ratio": 1.6602564102564104, "no_speech_prob": 0.010984666645526886}, {"id": 210, "seek": 154120, "start": 1546.8, "end": 1557.6000000000001, "text": " an election year or something like that, that in sequence one, we're all voting on the definition,", "tokens": [50644, 364, 6618, 1064, 420, 746, 411, 300, 11, 300, 294, 8310, 472, 11, 321, 434, 439, 10419, 322, 264, 7123, 11, 51184], "temperature": 0.0, "avg_logprob": -0.1256943643093109, "compression_ratio": 1.6602564102564104, "no_speech_prob": 0.010984666645526886}, {"id": 211, "seek": 154120, "start": 1557.6000000000001, "end": 1564.0, "text": " on the first definition of a chain code. For sequence two, we're talking about the first", "tokens": [51184, 322, 264, 700, 7123, 295, 257, 5021, 3089, 13, 1171, 8310, 732, 11, 321, 434, 1417, 466, 264, 700, 51504], "temperature": 0.0, "avg_logprob": -0.1256943643093109, "compression_ratio": 1.6602564102564104, "no_speech_prob": 0.010984666645526886}, {"id": 212, "seek": 156400, "start": 1564.0, "end": 1571.44, "text": " change to that definition. For sequence three, we're talking about the change to the changed", "tokens": [50364, 1319, 281, 300, 7123, 13, 1171, 8310, 1045, 11, 321, 434, 1417, 466, 264, 1319, 281, 264, 3105, 50736], "temperature": 0.0, "avg_logprob": -0.07182533632625233, "compression_ratio": 1.8743718592964824, "no_speech_prob": 0.018544666469097137}, {"id": 213, "seek": 156400, "start": 1571.44, "end": 1580.56, "text": " definition and so forth. And so what that allows us to do is we can approve a chain code and commit", "tokens": [50736, 7123, 293, 370, 5220, 13, 400, 370, 437, 300, 4045, 505, 281, 360, 307, 321, 393, 18827, 257, 5021, 3089, 293, 5599, 51192], "temperature": 0.0, "avg_logprob": -0.07182533632625233, "compression_ratio": 1.8743718592964824, "no_speech_prob": 0.018544666469097137}, {"id": 214, "seek": 156400, "start": 1580.56, "end": 1586.48, "text": " its definition at sequence one. And then while that chain code is operating, we can now begin", "tokens": [51192, 1080, 7123, 412, 8310, 472, 13, 400, 550, 1339, 300, 5021, 3089, 307, 7447, 11, 321, 393, 586, 1841, 51488], "temperature": 0.0, "avg_logprob": -0.07182533632625233, "compression_ratio": 1.8743718592964824, "no_speech_prob": 0.018544666469097137}, {"id": 215, "seek": 156400, "start": 1586.48, "end": 1592.24, "text": " approving a new definition at sequence two. And once the entire network has, you know,", "tokens": [51488, 2075, 798, 257, 777, 7123, 412, 8310, 732, 13, 400, 1564, 264, 2302, 3209, 575, 11, 291, 458, 11, 51776], "temperature": 0.0, "avg_logprob": -0.07182533632625233, "compression_ratio": 1.8743718592964824, "no_speech_prob": 0.018544666469097137}, {"id": 216, "seek": 159224, "start": 1592.24, "end": 1597.04, "text": " agreed to that definition, installed that chain code, so on and so forth,", "tokens": [50364, 9166, 281, 300, 7123, 11, 8899, 300, 5021, 3089, 11, 370, 322, 293, 370, 5220, 11, 50604], "temperature": 0.0, "avg_logprob": -0.10589002358793008, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.0010004243813455105}, {"id": 217, "seek": 159224, "start": 1597.04, "end": 1602.32, "text": " then we can sort of atomically move up to sequence two. And then you have a process", "tokens": [50604, 550, 321, 393, 1333, 295, 12018, 984, 1286, 493, 281, 8310, 732, 13, 400, 550, 291, 362, 257, 1399, 50868], "temperature": 0.0, "avg_logprob": -0.10589002358793008, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.0010004243813455105}, {"id": 218, "seek": 159224, "start": 1602.32, "end": 1608.56, "text": " repeats for sequence three, so on and so forth. So this is just a new concept that you need to", "tokens": [50868, 35038, 337, 8310, 1045, 11, 370, 322, 293, 370, 5220, 13, 407, 341, 307, 445, 257, 777, 3410, 300, 291, 643, 281, 51180], "temperature": 0.0, "avg_logprob": -0.10589002358793008, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.0010004243813455105}, {"id": 219, "seek": 159224, "start": 1608.56, "end": 1615.6, "text": " be aware of that each incarnation of the chain code definition is assigned to sequence.", "tokens": [51180, 312, 3650, 295, 300, 1184, 49988, 295, 264, 5021, 3089, 7123, 307, 13279, 281, 8310, 13, 51532], "temperature": 0.0, "avg_logprob": -0.10589002358793008, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.0010004243813455105}, {"id": 220, "seek": 159224, "start": 1616.48, "end": 1619.84, "text": " And when we want to talk about this version or the next version,", "tokens": [51576, 400, 562, 321, 528, 281, 751, 466, 341, 3037, 420, 264, 958, 3037, 11, 51744], "temperature": 0.0, "avg_logprob": -0.10589002358793008, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.0010004243813455105}, {"id": 221, "seek": 161984, "start": 1620.56, "end": 1626.1599999999999, "text": " we talk relative to that sequence number. So let's go ahead and look at how this might,", "tokens": [50400, 321, 751, 4972, 281, 300, 8310, 1230, 13, 407, 718, 311, 352, 2286, 293, 574, 412, 577, 341, 1062, 11, 50680], "temperature": 0.0, "avg_logprob": -0.09943153156953699, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0012447574408724904}, {"id": 222, "seek": 161984, "start": 1626.1599999999999, "end": 1630.72, "text": " you know, actually manifest. If we go back to our three org example,", "tokens": [50680, 291, 458, 11, 767, 10067, 13, 759, 321, 352, 646, 281, 527, 1045, 14045, 1365, 11, 50908], "temperature": 0.0, "avg_logprob": -0.09943153156953699, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0012447574408724904}, {"id": 223, "seek": 161984, "start": 1631.84, "end": 1636.8, "text": " you know, if we have org one and org two, they approve a chain code definition at sequence one.", "tokens": [50964, 291, 458, 11, 498, 321, 362, 14045, 472, 293, 14045, 732, 11, 436, 18827, 257, 5021, 3089, 7123, 412, 8310, 472, 13, 51212], "temperature": 0.0, "avg_logprob": -0.09943153156953699, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0012447574408724904}, {"id": 224, "seek": 161984, "start": 1637.4399999999998, "end": 1643.1999999999998, "text": " And because org threes administrator is on vacation, they go ahead and commit this chain", "tokens": [51244, 400, 570, 14045, 258, 4856, 25529, 307, 322, 12830, 11, 436, 352, 2286, 293, 5599, 341, 5021, 51532], "temperature": 0.0, "avg_logprob": -0.09943153156953699, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.0012447574408724904}, {"id": 225, "seek": 164320, "start": 1643.2, "end": 1649.2, "text": " code definition. And we end up back in that scenario where org one and org two will,", "tokens": [50364, 3089, 7123, 13, 400, 321, 917, 493, 646, 294, 300, 9005, 689, 14045, 472, 293, 14045, 732, 486, 11, 50664], "temperature": 0.0, "avg_logprob": -0.12664147081046268, "compression_ratio": 1.6097560975609757, "no_speech_prob": 0.03209575265645981}, {"id": 226, "seek": 164320, "start": 1650.32, "end": 1654.48, "text": " you know, endorse invocations of that chain code, but org three will not.", "tokens": [50720, 291, 458, 11, 29228, 1048, 905, 763, 295, 300, 5021, 3089, 11, 457, 14045, 1045, 486, 406, 13, 50928], "temperature": 0.0, "avg_logprob": -0.12664147081046268, "compression_ratio": 1.6097560975609757, "no_speech_prob": 0.03209575265645981}, {"id": 227, "seek": 164320, "start": 1655.8400000000001, "end": 1661.3600000000001, "text": " Well, org threes admin gets back from vacation, sees what the network did, says, oh, great,", "tokens": [50996, 1042, 11, 14045, 258, 4856, 24236, 2170, 646, 490, 12830, 11, 8194, 437, 264, 3209, 630, 11, 1619, 11, 1954, 11, 869, 11, 51272], "temperature": 0.0, "avg_logprob": -0.12664147081046268, "compression_ratio": 1.6097560975609757, "no_speech_prob": 0.03209575265645981}, {"id": 228, "seek": 164320, "start": 1661.3600000000001, "end": 1667.04, "text": " I agree. Now org three can go ahead and approve the definition at sequence one.", "tokens": [51272, 286, 3986, 13, 823, 14045, 1045, 393, 352, 2286, 293, 18827, 264, 7123, 412, 8310, 472, 13, 51556], "temperature": 0.0, "avg_logprob": -0.12664147081046268, "compression_ratio": 1.6097560975609757, "no_speech_prob": 0.03209575265645981}, {"id": 229, "seek": 166704, "start": 1668.0, "end": 1672.6399999999999, "text": " And org threes peers will now begin endorsing just like org one and org twos.", "tokens": [50412, 400, 14045, 258, 4856, 16739, 486, 586, 1841, 37676, 278, 445, 411, 14045, 472, 293, 14045, 683, 329, 13, 50644], "temperature": 0.0, "avg_logprob": -0.12818863278343565, "compression_ratio": 1.7033492822966507, "no_speech_prob": 0.022284550592303276}, {"id": 230, "seek": 166704, "start": 1674.1599999999999, "end": 1680.96, "text": " The important thing to note here is that without this sequence number, if org three simply sent", "tokens": [50720, 440, 1021, 551, 281, 3637, 510, 307, 300, 1553, 341, 8310, 1230, 11, 498, 14045, 1045, 2935, 2279, 51060], "temperature": 0.0, "avg_logprob": -0.12818863278343565, "compression_ratio": 1.7033492822966507, "no_speech_prob": 0.022284550592303276}, {"id": 231, "seek": 166704, "start": 1680.96, "end": 1687.68, "text": " a new approval in, it would be unclear whether org three was attempting to, you know, approve", "tokens": [51060, 257, 777, 13317, 294, 11, 309, 576, 312, 25636, 1968, 14045, 1045, 390, 22001, 281, 11, 291, 458, 11, 18827, 51396], "temperature": 0.0, "avg_logprob": -0.12818863278343565, "compression_ratio": 1.7033492822966507, "no_speech_prob": 0.022284550592303276}, {"id": 232, "seek": 166704, "start": 1688.24, "end": 1692.6399999999999, "text": " the current definition or whether org three wanted to, you know, maybe make some changes", "tokens": [51424, 264, 2190, 7123, 420, 1968, 14045, 1045, 1415, 281, 11, 291, 458, 11, 1310, 652, 512, 2962, 51644], "temperature": 0.0, "avg_logprob": -0.12818863278343565, "compression_ratio": 1.7033492822966507, "no_speech_prob": 0.022284550592303276}, {"id": 233, "seek": 169264, "start": 1692.72, "end": 1697.2800000000002, "text": " to the definition. So, and that's what we see in this next step here.", "tokens": [50368, 281, 264, 7123, 13, 407, 11, 293, 300, 311, 437, 321, 536, 294, 341, 958, 1823, 510, 13, 50596], "temperature": 0.0, "avg_logprob": -0.09632169550115412, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.020329440012574196}, {"id": 234, "seek": 169264, "start": 1698.64, "end": 1703.76, "text": " org one, org two and org three, they want some sort of change. So they approve a new definition", "tokens": [50664, 14045, 472, 11, 14045, 732, 293, 14045, 1045, 11, 436, 528, 512, 1333, 295, 1319, 13, 407, 436, 18827, 257, 777, 7123, 50920], "temperature": 0.0, "avg_logprob": -0.09632169550115412, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.020329440012574196}, {"id": 235, "seek": 169264, "start": 1703.76, "end": 1709.92, "text": " at sequence two. Once they've all approved at sequence two, we can commit. And that chain", "tokens": [50920, 412, 8310, 732, 13, 3443, 436, 600, 439, 10826, 412, 8310, 732, 11, 321, 393, 5599, 13, 400, 300, 5021, 51228], "temperature": 0.0, "avg_logprob": -0.09632169550115412, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.020329440012574196}, {"id": 236, "seek": 169264, "start": 1709.92, "end": 1714.64, "text": " code definition now goes to sequence two. Of course, if you wanted to make another change to", "tokens": [51228, 3089, 7123, 586, 1709, 281, 8310, 732, 13, 2720, 1164, 11, 498, 291, 1415, 281, 652, 1071, 1319, 281, 51464], "temperature": 0.0, "avg_logprob": -0.09632169550115412, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.020329440012574196}, {"id": 237, "seek": 169264, "start": 1714.64, "end": 1719.5200000000002, "text": " the chain code, you would make that change at sequence three, so on and so forth.", "tokens": [51464, 264, 5021, 3089, 11, 291, 576, 652, 300, 1319, 412, 8310, 1045, 11, 370, 322, 293, 370, 5220, 13, 51708], "temperature": 0.0, "avg_logprob": -0.09632169550115412, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.020329440012574196}, {"id": 238, "seek": 171952, "start": 1719.6, "end": 1729.6, "text": " Now, all of this has corresponding peer CLI commands, and they're not all listed here, in", "tokens": [50368, 823, 11, 439, 295, 341, 575, 11760, 15108, 12855, 40, 16901, 11, 293, 436, 434, 406, 439, 10052, 510, 11, 294, 50868], "temperature": 0.0, "avg_logprob": -0.22849380091616983, "compression_ratio": 1.5598290598290598, "no_speech_prob": 0.0009398830006830394}, {"id": 239, "seek": 171952, "start": 1729.6, "end": 1737.76, "text": " particular, there's a lot of query ability that you won't see here. But the big, you know, four", "tokens": [50868, 1729, 11, 456, 311, 257, 688, 295, 14581, 3485, 300, 291, 1582, 380, 536, 510, 13, 583, 264, 955, 11, 291, 458, 11, 1451, 51276], "temperature": 0.0, "avg_logprob": -0.22849380091616983, "compression_ratio": 1.5598290598290598, "no_speech_prob": 0.0009398830006830394}, {"id": 240, "seek": 171952, "start": 1737.76, "end": 1743.44, "text": " you want to be aware of, there's a new packaging command, a pure life cycle chain code package.", "tokens": [51276, 291, 528, 281, 312, 3650, 295, 11, 456, 311, 257, 777, 16836, 5622, 11, 257, 6075, 993, 6586, 5021, 3089, 7372, 13, 51560], "temperature": 0.0, "avg_logprob": -0.22849380091616983, "compression_ratio": 1.5598290598290598, "no_speech_prob": 0.0009398830006830394}, {"id": 241, "seek": 171952, "start": 1744.72, "end": 1749.28, "text": " That will generate that tar GZ we talked about earlier. There's an install command,", "tokens": [51624, 663, 486, 8460, 300, 3112, 460, 57, 321, 2825, 466, 3071, 13, 821, 311, 364, 3625, 5622, 11, 51852], "temperature": 0.0, "avg_logprob": -0.22849380091616983, "compression_ratio": 1.5598290598290598, "no_speech_prob": 0.0009398830006830394}, {"id": 242, "seek": 174928, "start": 1749.84, "end": 1757.2, "text": " and install it to the peers, and approve command, which will, you know, approve a particular", "tokens": [50392, 293, 3625, 309, 281, 264, 16739, 11, 293, 18827, 5622, 11, 597, 486, 11, 291, 458, 11, 18827, 257, 1729, 50760], "temperature": 0.0, "avg_logprob": -0.20303699935691943, "compression_ratio": 1.565934065934066, "no_speech_prob": 0.0007095393957570195}, {"id": 243, "seek": 174928, "start": 1758.16, "end": 1764.08, "text": " chain code definition for your org. Note that there is the sequence number attached to this,", "tokens": [50808, 5021, 3089, 7123, 337, 428, 14045, 13, 11633, 300, 456, 307, 264, 8310, 1230, 8570, 281, 341, 11, 51104], "temperature": 0.0, "avg_logprob": -0.20303699935691943, "compression_ratio": 1.565934065934066, "no_speech_prob": 0.0007095393957570195}, {"id": 244, "seek": 174928, "start": 1764.8, "end": 1772.32, "text": " whether an it is required and so on and so forth. And then finally, a way to commit that chain code", "tokens": [51140, 1968, 364, 309, 307, 4739, 293, 370, 322, 293, 370, 5220, 13, 400, 550, 2721, 11, 257, 636, 281, 5599, 300, 5021, 3089, 51516], "temperature": 0.0, "avg_logprob": -0.20303699935691943, "compression_ratio": 1.565934065934066, "no_speech_prob": 0.0007095393957570195}, {"id": 245, "seek": 177232, "start": 1772.32, "end": 1784.56, "text": " definition. So a few other notes and considerations. One thing that is either a feature or a,", "tokens": [50364, 7123, 13, 407, 257, 1326, 661, 5570, 293, 24070, 13, 1485, 551, 300, 307, 2139, 257, 4111, 420, 257, 11, 50976], "temperature": 0.0, "avg_logprob": -0.0944155399615948, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.001064900541678071}, {"id": 246, "seek": 177232, "start": 1787.4399999999998, "end": 1792.08, "text": " I won't say a bug, but a problem for operators that you may have run into", "tokens": [51120, 286, 1582, 380, 584, 257, 7426, 11, 457, 257, 1154, 337, 19077, 300, 291, 815, 362, 1190, 666, 51352], "temperature": 0.0, "avg_logprob": -0.0944155399615948, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.001064900541678071}, {"id": 247, "seek": 177232, "start": 1793.2, "end": 1799.12, "text": " is this notion of chain code fingerprint matching. If you've ever tried to package the same chain", "tokens": [51408, 307, 341, 10710, 295, 5021, 3089, 30715, 14324, 13, 759, 291, 600, 1562, 3031, 281, 7372, 264, 912, 5021, 51704], "temperature": 0.0, "avg_logprob": -0.0944155399615948, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.001064900541678071}, {"id": 248, "seek": 179912, "start": 1799.12, "end": 1807.1999999999998, "text": " code multiple times, and install it on different peers, what you'll often find in your logs is", "tokens": [50364, 3089, 3866, 1413, 11, 293, 3625, 309, 322, 819, 16739, 11, 437, 291, 603, 2049, 915, 294, 428, 20820, 307, 50768], "temperature": 0.0, "avg_logprob": -0.07682969353415749, "compression_ratio": 1.6504424778761062, "no_speech_prob": 0.007344274315983057}, {"id": 249, "seek": 179912, "start": 1807.1999999999998, "end": 1813.28, "text": " this chain code fingerprint mismatch error. And essentially, this comes down to the fact that", "tokens": [50768, 341, 5021, 3089, 30715, 23220, 852, 6713, 13, 400, 4476, 11, 341, 1487, 760, 281, 264, 1186, 300, 51072], "temperature": 0.0, "avg_logprob": -0.07682969353415749, "compression_ratio": 1.6504424778761062, "no_speech_prob": 0.007344274315983057}, {"id": 250, "seek": 179912, "start": 1813.28, "end": 1819.1999999999998, "text": " even if you have the same set of files, getting them to package into exactly the same set of", "tokens": [51072, 754, 498, 291, 362, 264, 912, 992, 295, 7098, 11, 1242, 552, 281, 7372, 666, 2293, 264, 912, 992, 295, 51368], "temperature": 0.0, "avg_logprob": -0.07682969353415749, "compression_ratio": 1.6504424778761062, "no_speech_prob": 0.007344274315983057}, {"id": 251, "seek": 179912, "start": 1819.1999999999998, "end": 1826.0, "text": " bytes is a little tricky. That you have things like file timestamps, you have execute bits,", "tokens": [51368, 36088, 307, 257, 707, 12414, 13, 663, 291, 362, 721, 411, 3991, 49108, 23150, 11, 291, 362, 14483, 9239, 11, 51708], "temperature": 0.0, "avg_logprob": -0.07682969353415749, "compression_ratio": 1.6504424778761062, "no_speech_prob": 0.007344274315983057}, {"id": 252, "seek": 182600, "start": 1826.0, "end": 1831.04, "text": " you have different file systems that support different attributes, and so on and so forth.", "tokens": [50364, 291, 362, 819, 3991, 3652, 300, 1406, 819, 17212, 11, 293, 370, 322, 293, 370, 5220, 13, 50616], "temperature": 0.0, "avg_logprob": -0.10324328444724859, "compression_ratio": 1.75, "no_speech_prob": 0.0008558182744309306}, {"id": 253, "seek": 182600, "start": 1831.84, "end": 1838.16, "text": " So in particular, if you tried to package a chain code with the node SDK, and then you tried to", "tokens": [50656, 407, 294, 1729, 11, 498, 291, 3031, 281, 7372, 257, 5021, 3089, 365, 264, 9984, 37135, 11, 293, 550, 291, 3031, 281, 50972], "temperature": 0.0, "avg_logprob": -0.10324328444724859, "compression_ratio": 1.75, "no_speech_prob": 0.0008558182744309306}, {"id": 254, "seek": 182600, "start": 1838.16, "end": 1844.16, "text": " package that same chain code with the peer CLI, you know, you would basically end up with different", "tokens": [50972, 7372, 300, 912, 5021, 3089, 365, 264, 15108, 12855, 40, 11, 291, 458, 11, 291, 576, 1936, 917, 493, 365, 819, 51272], "temperature": 0.0, "avg_logprob": -0.10324328444724859, "compression_ratio": 1.75, "no_speech_prob": 0.0008558182744309306}, {"id": 255, "seek": 182600, "start": 1844.16, "end": 1851.04, "text": " package fingerprints. And at your execution time, you would encounter this mismatch,", "tokens": [51272, 7372, 42170, 13, 400, 412, 428, 15058, 565, 11, 291, 576, 8593, 341, 23220, 852, 11, 51616], "temperature": 0.0, "avg_logprob": -0.10324328444724859, "compression_ratio": 1.75, "no_speech_prob": 0.0008558182744309306}, {"id": 256, "seek": 185104, "start": 1851.68, "end": 1857.76, "text": " which is not something that you wanted. Your chain code would otherwise execute just fine,", "tokens": [50396, 597, 307, 406, 746, 300, 291, 1415, 13, 2260, 5021, 3089, 576, 5911, 14483, 445, 2489, 11, 50700], "temperature": 0.0, "avg_logprob": -0.08294421831766764, "compression_ratio": 1.5168539325842696, "no_speech_prob": 0.012819137424230576}, {"id": 257, "seek": 185104, "start": 1857.76, "end": 1864.3999999999999, "text": " but you would have these fingerprint mismatches that prevented things from working. So", "tokens": [50700, 457, 291, 576, 362, 613, 30715, 23220, 852, 279, 300, 27314, 721, 490, 1364, 13, 407, 51032], "temperature": 0.0, "avg_logprob": -0.08294421831766764, "compression_ratio": 1.5168539325842696, "no_speech_prob": 0.012819137424230576}, {"id": 258, "seek": 185104, "start": 1865.44, "end": 1874.1599999999999, "text": " that exists no more. That's gone, which means actually that your chain codes can even differ", "tokens": [51084, 300, 8198, 572, 544, 13, 663, 311, 2780, 11, 597, 1355, 767, 300, 428, 5021, 14211, 393, 754, 743, 51520], "temperature": 0.0, "avg_logprob": -0.08294421831766764, "compression_ratio": 1.5168539325842696, "no_speech_prob": 0.012819137424230576}, {"id": 259, "seek": 187416, "start": 1874.88, "end": 1881.8400000000001, "text": " slightly from peer to peer. That if, you know, org one installs a chain code package,", "tokens": [50400, 4748, 490, 15108, 281, 15108, 13, 663, 498, 11, 291, 458, 11, 14045, 472, 3625, 82, 257, 5021, 3089, 7372, 11, 50748], "temperature": 0.0, "avg_logprob": -0.0961892953079738, "compression_ratio": 1.7073170731707317, "no_speech_prob": 0.023685310035943985}, {"id": 260, "seek": 187416, "start": 1882.5600000000002, "end": 1887.6000000000001, "text": " and org two installs a chain code package, those can actually be different chain codes.", "tokens": [50784, 293, 14045, 732, 3625, 82, 257, 5021, 3089, 7372, 11, 729, 393, 767, 312, 819, 5021, 14211, 13, 51036], "temperature": 0.0, "avg_logprob": -0.0961892953079738, "compression_ratio": 1.7073170731707317, "no_speech_prob": 0.023685310035943985}, {"id": 261, "seek": 187416, "start": 1887.6000000000001, "end": 1892.96, "text": " Now, they must implement the same logic. And by and large, you know, we would usually expect", "tokens": [51036, 823, 11, 436, 1633, 4445, 264, 912, 9952, 13, 400, 538, 293, 2416, 11, 291, 458, 11, 321, 576, 2673, 2066, 51304], "temperature": 0.0, "avg_logprob": -0.0961892953079738, "compression_ratio": 1.7073170731707317, "no_speech_prob": 0.023685310035943985}, {"id": 262, "seek": 187416, "start": 1892.96, "end": 1898.0800000000002, "text": " them to be the same chain code. But going back to one of our examples from earlier,", "tokens": [51304, 552, 281, 312, 264, 912, 5021, 3089, 13, 583, 516, 646, 281, 472, 295, 527, 5110, 490, 3071, 11, 51560], "temperature": 0.0, "avg_logprob": -0.0961892953079738, "compression_ratio": 1.7073170731707317, "no_speech_prob": 0.023685310035943985}, {"id": 263, "seek": 189808, "start": 1898.72, "end": 1907.84, "text": " let's say that there's a bug in the chain code that the chain code forgot to check if the third", "tokens": [50396, 718, 311, 584, 300, 456, 311, 257, 7426, 294, 264, 5021, 3089, 300, 264, 5021, 3089, 5298, 281, 1520, 498, 264, 2636, 50852], "temperature": 0.0, "avg_logprob": -0.08944337086011005, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.02032865583896637}, {"id": 264, "seek": 189808, "start": 1907.84, "end": 1914.32, "text": " argument was nil before dereferencing it. So if someone sends in bad input, it can crash the", "tokens": [50852, 6770, 390, 297, 388, 949, 15969, 612, 13644, 309, 13, 407, 498, 1580, 14790, 294, 1578, 4846, 11, 309, 393, 8252, 264, 51176], "temperature": 0.0, "avg_logprob": -0.08944337086011005, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.02032865583896637}, {"id": 265, "seek": 189808, "start": 1914.32, "end": 1919.76, "text": " chain code. Well, you know, this doesn't actually have any impact on the chain code read write", "tokens": [51176, 5021, 3089, 13, 1042, 11, 291, 458, 11, 341, 1177, 380, 767, 362, 604, 2712, 322, 264, 5021, 3089, 1401, 2464, 51448], "temperature": 0.0, "avg_logprob": -0.08944337086011005, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.02032865583896637}, {"id": 266, "seek": 189808, "start": 1919.76, "end": 1925.4399999999998, "text": " set. It just causes the chain code to crash sometimes. So it would be perfectly possible", "tokens": [51448, 992, 13, 467, 445, 7700, 264, 5021, 3089, 281, 8252, 2171, 13, 407, 309, 576, 312, 6239, 1944, 51732], "temperature": 0.0, "avg_logprob": -0.08944337086011005, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.02032865583896637}, {"id": 267, "seek": 192544, "start": 1926.4, "end": 1932.56, "text": " for org one to recognize this bug, fix it and push a patched version of the chain code to their", "tokens": [50412, 337, 14045, 472, 281, 5521, 341, 7426, 11, 3191, 309, 293, 2944, 257, 9972, 292, 3037, 295, 264, 5021, 3089, 281, 641, 50720], "temperature": 0.0, "avg_logprob": -0.09269315889566251, "compression_ratio": 1.7361111111111112, "no_speech_prob": 0.004069745074957609}, {"id": 268, "seek": 192544, "start": 1932.56, "end": 1938.64, "text": " peers. And instantly this chain code will no longer crash on their peers on this bad input.", "tokens": [50720, 16739, 13, 400, 13518, 341, 5021, 3089, 486, 572, 2854, 8252, 322, 641, 16739, 322, 341, 1578, 4846, 13, 51024], "temperature": 0.0, "avg_logprob": -0.09269315889566251, "compression_ratio": 1.7361111111111112, "no_speech_prob": 0.004069745074957609}, {"id": 269, "seek": 192544, "start": 1940.0, "end": 1947.44, "text": " Now, or two, you know, they get the email from org one saying, you know, there's this bug and", "tokens": [51092, 823, 11, 420, 732, 11, 291, 458, 11, 436, 483, 264, 3796, 490, 14045, 472, 1566, 11, 291, 458, 11, 456, 311, 341, 7426, 293, 51464], "temperature": 0.0, "avg_logprob": -0.09269315889566251, "compression_ratio": 1.7361111111111112, "no_speech_prob": 0.004069745074957609}, {"id": 270, "seek": 192544, "start": 1947.44, "end": 1953.2, "text": " we need to fix it. Here's my patch. They can take a look at that patch. They can evaluate it.", "tokens": [51464, 321, 643, 281, 3191, 309, 13, 1692, 311, 452, 9972, 13, 814, 393, 747, 257, 574, 412, 300, 9972, 13, 814, 393, 13059, 309, 13, 51752], "temperature": 0.0, "avg_logprob": -0.09269315889566251, "compression_ratio": 1.7361111111111112, "no_speech_prob": 0.004069745074957609}, {"id": 271, "seek": 195320, "start": 1953.2, "end": 1958.16, "text": " In this case, it should be, you know, an obvious we'll accept it. You know, but basically,", "tokens": [50364, 682, 341, 1389, 11, 309, 820, 312, 11, 291, 458, 11, 364, 6322, 321, 603, 3241, 309, 13, 509, 458, 11, 457, 1936, 11, 50612], "temperature": 0.0, "avg_logprob": -0.13229105783545453, "compression_ratio": 1.6079295154185023, "no_speech_prob": 0.0014548801118507981}, {"id": 272, "seek": 195320, "start": 1959.52, "end": 1965.44, "text": " organizations can roll out minor fixes to the chain codes, independently of each other,", "tokens": [50680, 6150, 393, 3373, 484, 6696, 32539, 281, 264, 5021, 14211, 11, 21761, 295, 1184, 661, 11, 50976], "temperature": 0.0, "avg_logprob": -0.13229105783545453, "compression_ratio": 1.6079295154185023, "no_speech_prob": 0.0014548801118507981}, {"id": 273, "seek": 195320, "start": 1965.44, "end": 1970.88, "text": " and we no longer require that coordination. Of course, if you wanted to change the, you know,", "tokens": [50976, 293, 321, 572, 2854, 3651, 300, 21252, 13, 2720, 1164, 11, 498, 291, 1415, 281, 1319, 264, 11, 291, 458, 11, 51248], "temperature": 0.0, "avg_logprob": -0.13229105783545453, "compression_ratio": 1.6079295154185023, "no_speech_prob": 0.0014548801118507981}, {"id": 274, "seek": 195320, "start": 1970.88, "end": 1978.48, "text": " the DB layout or, you know, what keys functions are accessing, you know, we still have those", "tokens": [51248, 264, 26754, 13333, 420, 11, 291, 458, 11, 437, 9317, 6828, 366, 26440, 11, 291, 458, 11, 321, 920, 362, 729, 51628], "temperature": 0.0, "avg_logprob": -0.13229105783545453, "compression_ratio": 1.6079295154185023, "no_speech_prob": 0.0014548801118507981}, {"id": 275, "seek": 197848, "start": 1978.48, "end": 1984.56, "text": " same chain code execution guarantees via the endorsement policy that basically checks to make", "tokens": [50364, 912, 5021, 3089, 15058, 32567, 5766, 264, 29228, 518, 3897, 300, 1936, 13834, 281, 652, 50668], "temperature": 0.0, "avg_logprob": -0.11168498757444782, "compression_ratio": 1.7571428571428571, "no_speech_prob": 0.0032725767232477665}, {"id": 276, "seek": 197848, "start": 1984.56, "end": 1990.88, "text": " sure that the chain codes read exactly the same thing, the same versions and wrote the same things", "tokens": [50668, 988, 300, 264, 5021, 14211, 1401, 2293, 264, 912, 551, 11, 264, 912, 9606, 293, 4114, 264, 912, 721, 50984], "temperature": 0.0, "avg_logprob": -0.11168498757444782, "compression_ratio": 1.7571428571428571, "no_speech_prob": 0.0032725767232477665}, {"id": 277, "seek": 197848, "start": 1990.88, "end": 1999.2, "text": " at the same versions. But, you know, slight variations in chain code logic, in particular", "tokens": [50984, 412, 264, 912, 9606, 13, 583, 11, 291, 458, 11, 4036, 17840, 294, 5021, 3089, 9952, 11, 294, 1729, 51400], "temperature": 0.0, "avg_logprob": -0.11168498757444782, "compression_ratio": 1.7571428571428571, "no_speech_prob": 0.0032725767232477665}, {"id": 278, "seek": 197848, "start": 1999.2, "end": 2006.32, "text": " around things like air checking, you know, that's something that can differ. Secondly,", "tokens": [51400, 926, 721, 411, 1988, 8568, 11, 291, 458, 11, 300, 311, 746, 300, 393, 743, 13, 19483, 11, 51756], "temperature": 0.0, "avg_logprob": -0.11168498757444782, "compression_ratio": 1.7571428571428571, "no_speech_prob": 0.0032725767232477665}, {"id": 279, "seek": 200632, "start": 2007.28, "end": 2015.2, "text": " using the new life cycle, you must enable the V2 application capability before any of these", "tokens": [50412, 1228, 264, 777, 993, 6586, 11, 291, 1633, 9528, 264, 691, 17, 3861, 13759, 949, 604, 295, 613, 50808], "temperature": 0.0, "avg_logprob": -0.1881631578717913, "compression_ratio": 1.5511363636363635, "no_speech_prob": 0.001597702968865633}, {"id": 280, "seek": 200632, "start": 2015.2, "end": 2022.8, "text": " life cycle commands will work. And this is a bit of a double-edged sword. When you flip that", "tokens": [50808, 993, 6586, 16901, 486, 589, 13, 400, 341, 307, 257, 857, 295, 257, 3834, 12, 292, 3004, 10576, 13, 1133, 291, 7929, 300, 51188], "temperature": 0.0, "avg_logprob": -0.1881631578717913, "compression_ratio": 1.5511363636363635, "no_speech_prob": 0.001597702968865633}, {"id": 281, "seek": 200632, "start": 2022.8, "end": 2029.36, "text": " application capability on, the old life cycle, the old LSEC namespace becomes read-only.", "tokens": [51188, 3861, 13759, 322, 11, 264, 1331, 993, 6586, 11, 264, 1331, 441, 5879, 34, 5288, 17940, 3643, 1401, 12, 25202, 13, 51516], "temperature": 0.0, "avg_logprob": -0.1881631578717913, "compression_ratio": 1.5511363636363635, "no_speech_prob": 0.001597702968865633}, {"id": 282, "seek": 202936, "start": 2030.32, "end": 2037.1999999999998, "text": " So, essentially, if you are using the new life cycle, you know, all of your old chain codes", "tokens": [50412, 407, 11, 4476, 11, 498, 291, 366, 1228, 264, 777, 993, 6586, 11, 291, 458, 11, 439, 295, 428, 1331, 5021, 14211, 50756], "temperature": 0.0, "avg_logprob": -0.11858725229899089, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.024420222267508507}, {"id": 283, "seek": 202936, "start": 2037.1999999999998, "end": 2046.8, "text": " continue working until they've been redefined in the new life cycle. But, you know, basically,", "tokens": [50756, 2354, 1364, 1826, 436, 600, 668, 38818, 2001, 294, 264, 777, 993, 6586, 13, 583, 11, 291, 458, 11, 1936, 11, 51236], "temperature": 0.0, "avg_logprob": -0.11858725229899089, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.024420222267508507}, {"id": 284, "seek": 202936, "start": 2046.8, "end": 2055.2, "text": " you can't change them anymore. So, if you needed to, you know, for some emergency reason, go in", "tokens": [51236, 291, 393, 380, 1319, 552, 3602, 13, 407, 11, 498, 291, 2978, 281, 11, 291, 458, 11, 337, 512, 7473, 1778, 11, 352, 294, 51656], "temperature": 0.0, "avg_logprob": -0.11858725229899089, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.024420222267508507}, {"id": 285, "seek": 205520, "start": 2055.2799999999997, "end": 2060.16, "text": " and upgrade your version of the chain code, you would need to do that in the new life cycle,", "tokens": [50368, 293, 11484, 428, 3037, 295, 264, 5021, 3089, 11, 291, 576, 643, 281, 360, 300, 294, 264, 777, 993, 6586, 11, 50612], "temperature": 0.0, "avg_logprob": -0.0716383999044245, "compression_ratio": 1.6359447004608294, "no_speech_prob": 0.004609106574207544}, {"id": 286, "seek": 205520, "start": 2060.16, "end": 2065.04, "text": " not in the old life cycle. You know, it shouldn't be a problem operationally,", "tokens": [50612, 406, 294, 264, 1331, 993, 6586, 13, 509, 458, 11, 309, 4659, 380, 312, 257, 1154, 6916, 379, 11, 50856], "temperature": 0.0, "avg_logprob": -0.0716383999044245, "compression_ratio": 1.6359447004608294, "no_speech_prob": 0.004609106574207544}, {"id": 287, "seek": 205520, "start": 2066.56, "end": 2073.7599999999998, "text": " but it's just something to be aware of, you know, make sure that you've thoroughly tested and", "tokens": [50932, 457, 309, 311, 445, 746, 281, 312, 3650, 295, 11, 291, 458, 11, 652, 988, 300, 291, 600, 17987, 8246, 293, 51292], "temperature": 0.0, "avg_logprob": -0.0716383999044245, "compression_ratio": 1.6359447004608294, "no_speech_prob": 0.004609106574207544}, {"id": 288, "seek": 205520, "start": 2073.7599999999998, "end": 2079.6, "text": " you're ready to migrate your chain codes as soon as the application capability is enabled.", "tokens": [51292, 291, 434, 1919, 281, 31821, 428, 5021, 14211, 382, 2321, 382, 264, 3861, 13759, 307, 15172, 13, 51584], "temperature": 0.0, "avg_logprob": -0.0716383999044245, "compression_ratio": 1.6359447004608294, "no_speech_prob": 0.004609106574207544}, {"id": 289, "seek": 207960, "start": 2080.3199999999997, "end": 2082.72, "text": " You should be able to do this, essentially, without downtime,", "tokens": [50400, 509, 820, 312, 1075, 281, 360, 341, 11, 4476, 11, 1553, 49648, 11, 50520], "temperature": 0.0, "avg_logprob": -0.09042476268296831, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.010327144525945187}, {"id": 290, "seek": 207960, "start": 2083.8399999999997, "end": 2090.24, "text": " you know, because the old chain codes do continue to work. But, you know, once this capability is on,", "tokens": [50576, 291, 458, 11, 570, 264, 1331, 5021, 14211, 360, 2354, 281, 589, 13, 583, 11, 291, 458, 11, 1564, 341, 13759, 307, 322, 11, 50896], "temperature": 0.0, "avg_logprob": -0.09042476268296831, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.010327144525945187}, {"id": 291, "seek": 207960, "start": 2090.96, "end": 2097.2799999999997, "text": " the old life cycle is no longer an option for modifications. And finally, you know, just in", "tokens": [50932, 264, 1331, 993, 6586, 307, 572, 2854, 364, 3614, 337, 26881, 13, 400, 2721, 11, 291, 458, 11, 445, 294, 51248], "temperature": 0.0, "avg_logprob": -0.09042476268296831, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.010327144525945187}, {"id": 292, "seek": 207960, "start": 2097.2799999999997, "end": 2102.7999999999997, "text": " case, you know, anyone's immediate thought was, oh, let's turn off the capability to get the", "tokens": [51248, 1389, 11, 291, 458, 11, 2878, 311, 11629, 1194, 390, 11, 1954, 11, 718, 311, 1261, 766, 264, 13759, 281, 483, 264, 51524], "temperature": 0.0, "avg_logprob": -0.09042476268296831, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.010327144525945187}, {"id": 293, "seek": 210280, "start": 2102.8, "end": 2110.48, "text": " old life cycle writable again. You know, that might work. But, like all capabilities,", "tokens": [50364, 1331, 993, 6586, 10912, 712, 797, 13, 509, 458, 11, 300, 1062, 589, 13, 583, 11, 411, 439, 10862, 11, 50748], "temperature": 0.0, "avg_logprob": -0.11873491605122884, "compression_ratio": 1.5444444444444445, "no_speech_prob": 0.023686498403549194}, {"id": 294, "seek": 210280, "start": 2111.44, "end": 2120.2400000000002, "text": " once you disable or once you enable a capability, disabling it is not supported. It's simply nothing", "tokens": [50796, 1564, 291, 28362, 420, 1564, 291, 9528, 257, 13759, 11, 717, 20112, 309, 307, 406, 8104, 13, 467, 311, 2935, 1825, 51236], "temperature": 0.0, "avg_logprob": -0.11873491605122884, "compression_ratio": 1.5444444444444445, "no_speech_prob": 0.023686498403549194}, {"id": 295, "seek": 210280, "start": 2120.2400000000002, "end": 2130.1600000000003, "text": " that's tested and things could go wrong in odd ways. So, even if it might work, this is not", "tokens": [51236, 300, 311, 8246, 293, 721, 727, 352, 2085, 294, 7401, 2098, 13, 407, 11, 754, 498, 309, 1062, 589, 11, 341, 307, 406, 51732], "temperature": 0.0, "avg_logprob": -0.11873491605122884, "compression_ratio": 1.5444444444444445, "no_speech_prob": 0.023686498403549194}, {"id": 296, "seek": 213016, "start": 2130.16, "end": 2134.24, "text": " a supported configuration. And there are lots of good reasons for this.", "tokens": [50364, 257, 8104, 11694, 13, 400, 456, 366, 3195, 295, 665, 4112, 337, 341, 13, 50568], "temperature": 0.0, "avg_logprob": -0.09491409974939682, "compression_ratio": 1.5576036866359446, "no_speech_prob": 0.004754065070301294}, {"id": 297, "seek": 213016, "start": 2135.2799999999997, "end": 2140.08, "text": " In particular, once you've upgraded or once you've enabled a channel capability,", "tokens": [50620, 682, 1729, 11, 1564, 291, 600, 24133, 420, 1564, 291, 600, 15172, 257, 2269, 13759, 11, 50860], "temperature": 0.0, "avg_logprob": -0.09491409974939682, "compression_ratio": 1.5576036866359446, "no_speech_prob": 0.004754065070301294}, {"id": 298, "seek": 213016, "start": 2141.68, "end": 2147.44, "text": " that's part of the blockchain, which means other peers need to parse this capability.", "tokens": [50940, 300, 311, 644, 295, 264, 17176, 11, 597, 1355, 661, 16739, 643, 281, 48377, 341, 13759, 13, 51228], "temperature": 0.0, "avg_logprob": -0.09491409974939682, "compression_ratio": 1.5576036866359446, "no_speech_prob": 0.004754065070301294}, {"id": 299, "seek": 213016, "start": 2148.48, "end": 2155.7599999999998, "text": " So, there's really no going back. You know, we have an immutable ledger. And, you know, if you were", "tokens": [51280, 407, 11, 456, 311, 534, 572, 516, 646, 13, 509, 458, 11, 321, 362, 364, 3397, 32148, 4684, 1321, 13, 400, 11, 291, 458, 11, 498, 291, 645, 51644], "temperature": 0.0, "avg_logprob": -0.09491409974939682, "compression_ratio": 1.5576036866359446, "no_speech_prob": 0.004754065070301294}, {"id": 300, "seek": 215576, "start": 2155.76, "end": 2162.1600000000003, "text": " to disable the capability, it's still enabled in that section of the blockchain. So, we really", "tokens": [50364, 281, 28362, 264, 13759, 11, 309, 311, 920, 15172, 294, 300, 3541, 295, 264, 17176, 13, 407, 11, 321, 534, 50684], "temperature": 0.0, "avg_logprob": -0.10771960020065308, "compression_ratio": 1.4972677595628416, "no_speech_prob": 0.0019264096627011895}, {"id": 301, "seek": 215576, "start": 2162.1600000000003, "end": 2174.0, "text": " don't want to deal with disabling capabilities. And that's it. So, hopefully, this has been", "tokens": [50684, 500, 380, 528, 281, 2028, 365, 717, 20112, 10862, 13, 400, 300, 311, 309, 13, 407, 11, 4696, 11, 341, 575, 668, 51276], "temperature": 0.0, "avg_logprob": -0.10771960020065308, "compression_ratio": 1.4972677595628416, "no_speech_prob": 0.0019264096627011895}, {"id": 302, "seek": 215576, "start": 2174.0, "end": 2182.6400000000003, "text": " informative. And, you know, I'm always active out on the paper ledger rocket chat. And,", "tokens": [51276, 27759, 13, 400, 11, 291, 458, 11, 286, 478, 1009, 4967, 484, 322, 264, 3035, 4684, 1321, 13012, 5081, 13, 400, 11, 51708], "temperature": 0.0, "avg_logprob": -0.10771960020065308, "compression_ratio": 1.4972677595628416, "no_speech_prob": 0.0019264096627011895}, {"id": 303, "seek": 218264, "start": 2183.52, "end": 2185.3599999999997, "text": " yeah, thank you.", "tokens": [50408, 1338, 11, 1309, 291, 13, 50500], "temperature": 0.0, "avg_logprob": -0.22873219576748935, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0014765430241823196}, {"id": 304, "seek": 218264, "start": 2188.16, "end": 2193.44, "text": " Great. Thanks, Jason. And there are several questions people might be interested in.", "tokens": [50640, 3769, 13, 2561, 11, 11181, 13, 400, 456, 366, 2940, 1651, 561, 1062, 312, 3102, 294, 13, 50904], "temperature": 0.0, "avg_logprob": -0.22873219576748935, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0014765430241823196}, {"id": 305, "seek": 218264, "start": 2194.0, "end": 2200.48, "text": " As you mentioned, it's currently possible to run different code for the same chain code across", "tokens": [50932, 1018, 291, 2835, 11, 309, 311, 4362, 1944, 281, 1190, 819, 3089, 337, 264, 912, 5021, 3089, 2108, 51256], "temperature": 0.0, "avg_logprob": -0.22873219576748935, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0014765430241823196}, {"id": 306, "seek": 218264, "start": 2200.48, "end": 2206.8799999999997, "text": " different organizations. And could you give some examples like how that could be useful,", "tokens": [51256, 819, 6150, 13, 400, 727, 291, 976, 512, 5110, 411, 577, 300, 727, 312, 4420, 11, 51576], "temperature": 0.0, "avg_logprob": -0.22873219576748935, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0014765430241823196}, {"id": 307, "seek": 220688, "start": 2206.88, "end": 2215.52, "text": " some use cases or scenarios? Sure. So, you know, we, you know, I touched a little bit on this that,", "tokens": [50364, 512, 764, 3331, 420, 15077, 30, 4894, 13, 407, 11, 291, 458, 11, 321, 11, 291, 458, 11, 286, 9828, 257, 707, 857, 322, 341, 300, 11, 50796], "temperature": 0.0, "avg_logprob": -0.11472748455248381, "compression_ratio": 1.6424581005586592, "no_speech_prob": 0.004132382106035948}, {"id": 308, "seek": 220688, "start": 2215.52, "end": 2222.96, "text": " you know, we now have these, for instance, org implicit collections. So, for those org implicit", "tokens": [50796, 291, 458, 11, 321, 586, 362, 613, 11, 337, 5197, 11, 14045, 26947, 16641, 13, 407, 11, 337, 729, 14045, 26947, 51168], "temperature": 0.0, "avg_logprob": -0.11472748455248381, "compression_ratio": 1.6424581005586592, "no_speech_prob": 0.004132382106035948}, {"id": 309, "seek": 220688, "start": 2222.96, "end": 2232.7200000000003, "text": " collections, the rights to them are only performed by my peers, right? I can execute a transaction", "tokens": [51168, 16641, 11, 264, 4601, 281, 552, 366, 787, 10332, 538, 452, 16739, 11, 558, 30, 286, 393, 14483, 257, 14425, 51656], "temperature": 0.0, "avg_logprob": -0.11472748455248381, "compression_ratio": 1.6424581005586592, "no_speech_prob": 0.004132382106035948}, {"id": 310, "seek": 223272, "start": 2232.72, "end": 2238.9599999999996, "text": " only on my peers and write to this, this implicit collection. So, I don't really need agreement", "tokens": [50364, 787, 322, 452, 16739, 293, 2464, 281, 341, 11, 341, 26947, 5765, 13, 407, 11, 286, 500, 380, 534, 643, 8106, 50676], "temperature": 0.0, "avg_logprob": -0.07875272750854492, "compression_ratio": 1.6079545454545454, "no_speech_prob": 0.00406963936984539}, {"id": 311, "seek": 223272, "start": 2238.9599999999996, "end": 2245.9199999999996, "text": " from other organizations. So, you know, let's go ahead and say that I wanted to implement some sort", "tokens": [50676, 490, 661, 6150, 13, 407, 11, 291, 458, 11, 718, 311, 352, 2286, 293, 584, 300, 286, 1415, 281, 4445, 512, 1333, 51024], "temperature": 0.0, "avg_logprob": -0.07875272750854492, "compression_ratio": 1.6079545454545454, "no_speech_prob": 0.00406963936984539}, {"id": 312, "seek": 223272, "start": 2245.9199999999996, "end": 2255.12, "text": " of, you know, a bidding chain code. When, you know, my peer gets this, this invocation,", "tokens": [51024, 295, 11, 291, 458, 11, 257, 39702, 5021, 3089, 13, 1133, 11, 291, 458, 11, 452, 15108, 2170, 341, 11, 341, 1048, 27943, 11, 51484], "temperature": 0.0, "avg_logprob": -0.07875272750854492, "compression_ratio": 1.6079545454545454, "no_speech_prob": 0.00406963936984539}, {"id": 313, "seek": 225512, "start": 2255.52, "end": 2263.04, "text": " my peer is going to, to write the bid into its implicit collection. But it wants to validate", "tokens": [50384, 452, 15108, 307, 516, 281, 11, 281, 2464, 264, 12957, 666, 1080, 26947, 5765, 13, 583, 309, 2738, 281, 29562, 50760], "temperature": 0.0, "avg_logprob": -0.207473404267255, "compression_ratio": 1.5485714285714285, "no_speech_prob": 0.10372643917798996}, {"id": 314, "seek": 225512, "start": 2263.04, "end": 2269.3599999999997, "text": " this bid according to rules that make sense for my organization. So, maybe my chain code", "tokens": [50760, 341, 12957, 4650, 281, 4474, 300, 652, 2020, 337, 452, 4475, 13, 407, 11, 1310, 452, 5021, 3089, 51076], "temperature": 0.0, "avg_logprob": -0.207473404267255, "compression_ratio": 1.5485714285714285, "no_speech_prob": 0.10372643917798996}, {"id": 315, "seek": 225512, "start": 2270.0, "end": 2277.2, "text": " implements some, you know, proprietary logic, or maybe my chain code, you know, looks up,", "tokens": [51108, 704, 17988, 512, 11, 291, 458, 11, 38992, 9952, 11, 420, 1310, 452, 5021, 3089, 11, 291, 458, 11, 1542, 493, 11, 51468], "temperature": 0.0, "avg_logprob": -0.207473404267255, "compression_ratio": 1.5485714285714285, "no_speech_prob": 0.10372643917798996}, {"id": 316, "seek": 227720, "start": 2277.52, "end": 2284.0, "text": " you know, makes an API call to a user database. Basically, something that's specific to my organization", "tokens": [50380, 291, 458, 11, 1669, 364, 9362, 818, 281, 257, 4195, 8149, 13, 8537, 11, 746, 300, 311, 2685, 281, 452, 4475, 50704], "temperature": 0.0, "avg_logprob": -0.20813482861186183, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.010327313095331192}, {"id": 317, "seek": 227720, "start": 2286.0, "end": 2292.3199999999997, "text": " to decide whether or not it's going to endorse or to enforce some validation on parameters.", "tokens": [50804, 281, 4536, 1968, 420, 406, 309, 311, 516, 281, 29228, 420, 281, 24825, 512, 24071, 322, 9834, 13, 51120], "temperature": 0.0, "avg_logprob": -0.20813482861186183, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.010327313095331192}, {"id": 318, "seek": 227720, "start": 2294.56, "end": 2298.96, "text": " So, that's, that's really where, you know, different chain codes start to make sense.", "tokens": [51232, 407, 11, 300, 311, 11, 300, 311, 534, 689, 11, 291, 458, 11, 819, 5021, 14211, 722, 281, 652, 2020, 13, 51452], "temperature": 0.0, "avg_logprob": -0.20813482861186183, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.010327313095331192}, {"id": 319, "seek": 227720, "start": 2299.68, "end": 2307.04, "text": " When different orgs require different logic, specifically around rights that aren't coordinated,", "tokens": [51488, 1133, 819, 14045, 82, 3651, 819, 9952, 11, 4682, 926, 4601, 300, 3212, 380, 29591, 11, 51856], "temperature": 0.0, "avg_logprob": -0.20813482861186183, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.010327313095331192}, {"id": 320, "seek": 230704, "start": 2307.04, "end": 2313.52, "text": " things like implicit collections. Now, you can always do sort of, you know, additional", "tokens": [50364, 721, 411, 26947, 16641, 13, 823, 11, 291, 393, 1009, 360, 1333, 295, 11, 291, 458, 11, 4497, 50688], "temperature": 0.0, "avg_logprob": -0.08315960209021407, "compression_ratio": 1.7635467980295567, "no_speech_prob": 0.00040443718899041414}, {"id": 321, "seek": 230704, "start": 2313.52, "end": 2320.16, "text": " validation and verification, you know, you know, things that, for instance, fail endorsement,", "tokens": [50688, 24071, 293, 30206, 11, 291, 458, 11, 291, 458, 11, 721, 300, 11, 337, 5197, 11, 3061, 29228, 518, 11, 51020], "temperature": 0.0, "avg_logprob": -0.08315960209021407, "compression_ratio": 1.7635467980295567, "no_speech_prob": 0.00040443718899041414}, {"id": 322, "seek": 230704, "start": 2321.12, "end": 2329.12, "text": " you know, maybe, you know, in the official chain code, it allows arbitrary bids. But,", "tokens": [51068, 291, 458, 11, 1310, 11, 291, 458, 11, 294, 264, 4783, 5021, 3089, 11, 309, 4045, 23211, 272, 3742, 13, 583, 11, 51468], "temperature": 0.0, "avg_logprob": -0.08315960209021407, "compression_ratio": 1.7635467980295567, "no_speech_prob": 0.00040443718899041414}, {"id": 323, "seek": 230704, "start": 2329.12, "end": 2335.6, "text": " you know, for you, you want to add some additional air checking saying I will never endorse", "tokens": [51468, 291, 458, 11, 337, 291, 11, 291, 528, 281, 909, 512, 4497, 1988, 8568, 1566, 286, 486, 1128, 29228, 51792], "temperature": 0.0, "avg_logprob": -0.08315960209021407, "compression_ratio": 1.7635467980295567, "no_speech_prob": 0.00040443718899041414}, {"id": 324, "seek": 233560, "start": 2336.56, "end": 2343.7599999999998, "text": " a bid for more than, you know, a hundred million dollars or whatever the limit that makes sense", "tokens": [50412, 257, 12957, 337, 544, 813, 11, 291, 458, 11, 257, 3262, 2459, 3808, 420, 2035, 264, 4948, 300, 1669, 2020, 50772], "temperature": 0.0, "avg_logprob": -0.11592483520507812, "compression_ratio": 1.5164835164835164, "no_speech_prob": 0.00044418455217964947}, {"id": 325, "seek": 233560, "start": 2344.56, "end": 2350.72, "text": " for you is. So, any sort of logic that's going to throw in air and prevent execution", "tokens": [50812, 337, 291, 307, 13, 407, 11, 604, 1333, 295, 9952, 300, 311, 516, 281, 3507, 294, 1988, 293, 4871, 15058, 51120], "temperature": 0.0, "avg_logprob": -0.11592483520507812, "compression_ratio": 1.5164835164835164, "no_speech_prob": 0.00044418455217964947}, {"id": 326, "seek": 233560, "start": 2351.7599999999998, "end": 2357.52, "text": " is also a fair game for sort of a difference in a chain code. The things that you want to avoid", "tokens": [51172, 307, 611, 257, 3143, 1216, 337, 1333, 295, 257, 2649, 294, 257, 5021, 3089, 13, 440, 721, 300, 291, 528, 281, 5042, 51460], "temperature": 0.0, "avg_logprob": -0.11592483520507812, "compression_ratio": 1.5164835164835164, "no_speech_prob": 0.00044418455217964947}, {"id": 327, "seek": 235752, "start": 2358.48, "end": 2367.68, "text": " are things that read from the state or that write to the state that other orgs are not going to", "tokens": [50412, 366, 721, 300, 1401, 490, 264, 1785, 420, 300, 2464, 281, 264, 1785, 300, 661, 14045, 82, 366, 406, 516, 281, 50872], "temperature": 0.0, "avg_logprob": -0.10729974157669965, "compression_ratio": 1.608187134502924, "no_speech_prob": 0.043354667723178864}, {"id": 328, "seek": 235752, "start": 2367.68, "end": 2373.44, "text": " implement. As I mentioned, the important thing is that the chain code must produce the same reads", "tokens": [50872, 4445, 13, 1018, 286, 2835, 11, 264, 1021, 551, 307, 300, 264, 5021, 3089, 1633, 5258, 264, 912, 15700, 51160], "temperature": 0.0, "avg_logprob": -0.10729974157669965, "compression_ratio": 1.608187134502924, "no_speech_prob": 0.043354667723178864}, {"id": 329, "seek": 235752, "start": 2373.44, "end": 2383.84, "text": " and the same rights across all orgs. Okay. The third question is, do you have any", "tokens": [51160, 293, 264, 912, 4601, 2108, 439, 14045, 82, 13, 1033, 13, 440, 2636, 1168, 307, 11, 360, 291, 362, 604, 51680], "temperature": 0.0, "avg_logprob": -0.10729974157669965, "compression_ratio": 1.608187134502924, "no_speech_prob": 0.043354667723178864}, {"id": 330, "seek": 238384, "start": 2383.84, "end": 2389.36, "text": " tips or suggestions like people need to pay attention to while migrating to new life cycle?", "tokens": [50364, 6082, 420, 13396, 411, 561, 643, 281, 1689, 3202, 281, 1339, 6186, 8754, 281, 777, 993, 6586, 30, 50640], "temperature": 0.0, "avg_logprob": -0.09794122400418134, "compression_ratio": 1.598901098901099, "no_speech_prob": 0.001244598301127553}, {"id": 331, "seek": 238384, "start": 2394.08, "end": 2401.1200000000003, "text": " Sure. So, you know, the new life cycle is really meant to be, you know, very compatible with the", "tokens": [50876, 4894, 13, 407, 11, 291, 458, 11, 264, 777, 993, 6586, 307, 534, 4140, 281, 312, 11, 291, 458, 11, 588, 18218, 365, 264, 51228], "temperature": 0.0, "avg_logprob": -0.09794122400418134, "compression_ratio": 1.598901098901099, "no_speech_prob": 0.001244598301127553}, {"id": 332, "seek": 238384, "start": 2401.1200000000003, "end": 2408.6400000000003, "text": " old, you know, the actual instantiation process is a little different, but none of this should require", "tokens": [51228, 1331, 11, 291, 458, 11, 264, 3539, 9836, 6642, 1399, 307, 257, 707, 819, 11, 457, 6022, 295, 341, 820, 3651, 51604], "temperature": 0.0, "avg_logprob": -0.09794122400418134, "compression_ratio": 1.598901098901099, "no_speech_prob": 0.001244598301127553}, {"id": 333, "seek": 240864, "start": 2408.72, "end": 2417.04, "text": " code changes inside your chain code itself. However, you know, as I had mentioned, I would", "tokens": [50368, 3089, 2962, 1854, 428, 5021, 3089, 2564, 13, 2908, 11, 291, 458, 11, 382, 286, 632, 2835, 11, 286, 576, 50784], "temperature": 0.0, "avg_logprob": -0.126436149372774, "compression_ratio": 1.6390532544378698, "no_speech_prob": 0.035137422382831573}, {"id": 334, "seek": 240864, "start": 2417.68, "end": 2425.3599999999997, "text": " encourage everyone to look at their chain codes and, you know, see, is a knit actually being used", "tokens": [50816, 5373, 1518, 281, 574, 412, 641, 5021, 14211, 293, 11, 291, 458, 11, 536, 11, 307, 257, 15594, 767, 885, 1143, 51200], "temperature": 0.0, "avg_logprob": -0.126436149372774, "compression_ratio": 1.6390532544378698, "no_speech_prob": 0.035137422382831573}, {"id": 335, "seek": 240864, "start": 2426.08, "end": 2432.8799999999997, "text": " to accomplish something useful? Could a knit be, you know, removed from your chain code?", "tokens": [51236, 281, 9021, 746, 4420, 30, 7497, 257, 15594, 312, 11, 291, 458, 11, 7261, 490, 428, 5021, 3089, 30, 51576], "temperature": 0.0, "avg_logprob": -0.126436149372774, "compression_ratio": 1.6390532544378698, "no_speech_prob": 0.035137422382831573}, {"id": 336, "seek": 243288, "start": 2433.76, "end": 2441.04, "text": " And if so, you know, during this chain code, life cycle migration, if you can drop the", "tokens": [50408, 400, 498, 370, 11, 291, 458, 11, 1830, 341, 5021, 3089, 11, 993, 6586, 17011, 11, 498, 291, 393, 3270, 264, 50772], "temperature": 0.0, "avg_logprob": -0.09085109427168563, "compression_ratio": 1.5635359116022098, "no_speech_prob": 0.007120590656995773}, {"id": 337, "seek": 243288, "start": 2441.04, "end": 2447.52, "text": " requirement for a knit, you will remove a step from your workflow, which is always a great thing.", "tokens": [50772, 11695, 337, 257, 15594, 11, 291, 486, 4159, 257, 1823, 490, 428, 20993, 11, 597, 307, 1009, 257, 869, 551, 13, 51096], "temperature": 0.0, "avg_logprob": -0.09085109427168563, "compression_ratio": 1.5635359116022098, "no_speech_prob": 0.007120590656995773}, {"id": 338, "seek": 243288, "start": 2449.44, "end": 2457.6, "text": " You know, otherwise, you know, I think the, you know, sort of the big shocks are really the things", "tokens": [51192, 509, 458, 11, 5911, 11, 291, 458, 11, 286, 519, 264, 11, 291, 458, 11, 1333, 295, 264, 955, 37066, 366, 534, 264, 721, 51600], "temperature": 0.0, "avg_logprob": -0.09085109427168563, "compression_ratio": 1.5635359116022098, "no_speech_prob": 0.007120590656995773}, {"id": 339, "seek": 245760, "start": 2457.6, "end": 2467.36, "text": " that we, you know, set out to address that you need, you need to know the peer addresses of,", "tokens": [50364, 300, 321, 11, 291, 458, 11, 992, 484, 281, 2985, 300, 291, 643, 11, 291, 643, 281, 458, 264, 15108, 16862, 295, 11, 50852], "temperature": 0.0, "avg_logprob": -0.09439167609581581, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.0010003210045397282}, {"id": 340, "seek": 245760, "start": 2467.36, "end": 2472.56, "text": " you know, or the addresses of peers and other organizations in order to do your life cycle", "tokens": [50852, 291, 458, 11, 420, 264, 16862, 295, 16739, 293, 661, 6150, 294, 1668, 281, 360, 428, 993, 6586, 51112], "temperature": 0.0, "avg_logprob": -0.09439167609581581, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.0010003210045397282}, {"id": 341, "seek": 245760, "start": 2472.56, "end": 2479.44, "text": " operations. You know, you need to coordinate with the other administrators to perform their", "tokens": [51112, 7705, 13, 509, 458, 11, 291, 643, 281, 15670, 365, 264, 661, 27754, 281, 2042, 641, 51456], "temperature": 0.0, "avg_logprob": -0.09439167609581581, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.0010003210045397282}, {"id": 342, "seek": 245760, "start": 2479.44, "end": 2486.0, "text": " approvals. You know, so there's more coordination. There's more knowledge. But, you know, that's", "tokens": [51456, 2075, 19778, 13, 509, 458, 11, 370, 456, 311, 544, 21252, 13, 821, 311, 544, 3601, 13, 583, 11, 291, 458, 11, 300, 311, 51784], "temperature": 0.0, "avg_logprob": -0.09439167609581581, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.0010003210045397282}, {"id": 343, "seek": 248600, "start": 2486.0, "end": 2492.24, "text": " really what was required to get us to this decentralized point. So I guess if I could", "tokens": [50364, 534, 437, 390, 4739, 281, 483, 505, 281, 341, 32870, 935, 13, 407, 286, 2041, 498, 286, 727, 50676], "temperature": 0.0, "avg_logprob": -0.06223077622670976, "compression_ratio": 1.528735632183908, "no_speech_prob": 0.0005526805180124938}, {"id": 344, "seek": 248600, "start": 2492.24, "end": 2497.92, "text": " leave with a little bit of advice, you know, it would be, you know, sort of to just", "tokens": [50676, 1856, 365, 257, 707, 857, 295, 5192, 11, 291, 458, 11, 309, 576, 312, 11, 291, 458, 11, 1333, 295, 281, 445, 50960], "temperature": 0.0, "avg_logprob": -0.06223077622670976, "compression_ratio": 1.528735632183908, "no_speech_prob": 0.0005526805180124938}, {"id": 345, "seek": 248600, "start": 2500.8, "end": 2507.12, "text": " take whatever coordination existed within your network before, you know, around making decisions", "tokens": [51104, 747, 2035, 21252, 13135, 1951, 428, 3209, 949, 11, 291, 458, 11, 926, 1455, 5327, 51420], "temperature": 0.0, "avg_logprob": -0.06223077622670976, "compression_ratio": 1.528735632183908, "no_speech_prob": 0.0005526805180124938}, {"id": 346, "seek": 250712, "start": 2507.12, "end": 2513.8399999999997, "text": " as to, you know, how and when to upgrade chain codes and sort of just, you know,", "tokens": [50364, 382, 281, 11, 291, 458, 11, 577, 293, 562, 281, 11484, 5021, 14211, 293, 1333, 295, 445, 11, 291, 458, 11, 50700], "temperature": 0.0, "avg_logprob": -0.1120895544687907, "compression_ratio": 1.69375, "no_speech_prob": 0.10371969640254974}, {"id": 347, "seek": 250712, "start": 2515.8399999999997, "end": 2523.8399999999997, "text": " codify that into a sort of more formal procedure that, you know, to explicitly enumerate,", "tokens": [50800, 17656, 2505, 300, 666, 257, 1333, 295, 544, 9860, 10747, 300, 11, 291, 458, 11, 281, 20803, 465, 15583, 473, 11, 51200], "temperature": 0.0, "avg_logprob": -0.1120895544687907, "compression_ratio": 1.69375, "no_speech_prob": 0.10371969640254974}, {"id": 348, "seek": 250712, "start": 2523.8399999999997, "end": 2529.8399999999997, "text": " this will be the new endorsement policy. This will be the new version. This upgrade will or will not", "tokens": [51200, 341, 486, 312, 264, 777, 29228, 518, 3897, 13, 639, 486, 312, 264, 777, 3037, 13, 639, 11484, 486, 420, 486, 406, 51500], "temperature": 0.0, "avg_logprob": -0.1120895544687907, "compression_ratio": 1.69375, "no_speech_prob": 0.10371969640254974}, {"id": 349, "seek": 252984, "start": 2529.84, "end": 2539.52, "text": " require init to be executed. And if you can sort of get this, you know, set of data that's required", "tokens": [50364, 3651, 3157, 281, 312, 17577, 13, 400, 498, 291, 393, 1333, 295, 483, 341, 11, 291, 458, 11, 992, 295, 1412, 300, 311, 4739, 50848], "temperature": 0.0, "avg_logprob": -0.16174968719482422, "compression_ratio": 1.74375, "no_speech_prob": 0.0533905066549778}, {"id": 350, "seek": 252984, "start": 2539.52, "end": 2550.96, "text": " for this approve for my word command, sort of, you know, down and sort of, if you can get this", "tokens": [50848, 337, 341, 18827, 337, 452, 1349, 5622, 11, 1333, 295, 11, 291, 458, 11, 760, 293, 1333, 295, 11, 498, 291, 393, 483, 341, 51420], "temperature": 0.0, "avg_logprob": -0.16174968719482422, "compression_ratio": 1.74375, "no_speech_prob": 0.0533905066549778}, {"id": 351, "seek": 252984, "start": 2551.76, "end": 2557.84, "text": " into a workflow as a concrete item, then this sort of approve step, the define step,", "tokens": [51460, 666, 257, 20993, 382, 257, 9859, 3174, 11, 550, 341, 1333, 295, 18827, 1823, 11, 264, 6964, 1823, 11, 51764], "temperature": 0.0, "avg_logprob": -0.16174968719482422, "compression_ratio": 1.74375, "no_speech_prob": 0.0533905066549778}, {"id": 352, "seek": 255784, "start": 2558.8, "end": 2561.52, "text": " you know, this should all just follow up very naturally from that.", "tokens": [50412, 291, 458, 11, 341, 820, 439, 445, 1524, 493, 588, 8195, 490, 300, 13, 50548], "temperature": 0.0, "avg_logprob": -0.18968549228849865, "compression_ratio": 1.3070866141732282, "no_speech_prob": 0.001244215527549386}, {"id": 353, "seek": 255784, "start": 2565.36, "end": 2577.52, "text": " Okay. Thank you, Jason. Thank you for the great talk. We are now open for questions from audiences.", "tokens": [50740, 1033, 13, 1044, 291, 11, 11181, 13, 1044, 291, 337, 264, 869, 751, 13, 492, 366, 586, 1269, 337, 1651, 490, 15479, 13, 51348], "temperature": 0.0, "avg_logprob": -0.18968549228849865, "compression_ratio": 1.3070866141732282, "no_speech_prob": 0.001244215527549386}], "language": "en"}