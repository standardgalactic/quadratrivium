WEBVTT

00:00.000 --> 00:05.000
Hello, NDC Oslo.

00:05.000 --> 00:17.160
I'm Dylan, I'm going to talk to you about email because email is kind of important, right?

00:17.160 --> 00:19.960
You ever get the thing where you can't remember your password?

00:19.960 --> 00:22.320
So you click forgotten password, they send you an email.

00:22.320 --> 00:25.600
You get locked out of your account, you click the button, they send you an email, you want

00:25.600 --> 00:29.680
to go to sign into Microsoft Azure and they say, hang on, we just need to check, it's

00:29.680 --> 00:30.680
really you.

00:30.680 --> 00:32.240
How do they check it's really you?

00:32.240 --> 00:33.320
They send you an email.

00:33.320 --> 00:36.160
You sign up on a new service, they're like, we want to make sure that you're not a spam

00:36.160 --> 00:40.680
bot or some kind of, you know, evil nefarious internet criminal overload, we're going to

00:40.680 --> 00:43.680
send you an email and you can use the email to verify it.

00:43.680 --> 00:50.080
So email is a really, really important component in the fact that any of the stuff that we

00:50.080 --> 00:55.020
do online ever actually works at all.

00:55.020 --> 00:57.720
So we're going to do a little experiment.

00:57.720 --> 01:01.120
We're going to go here.

01:01.120 --> 01:04.800
Now what I'd like all of you to do, you're going to go to that web address and you are

01:04.800 --> 01:07.120
going to follow the instructions.

01:07.120 --> 01:10.240
Now there is a button that's going to appear on your phone screen that says, don't press

01:10.240 --> 01:11.600
this button yet.

01:11.600 --> 01:16.000
Do you know what that means?

01:16.000 --> 01:19.800
There is a saying that if they wrote on a button, do not press this button or it will

01:19.800 --> 01:23.760
destroy the universe, the paint would not be dry before a human being had slapped the

01:23.760 --> 01:25.240
button.

01:25.240 --> 01:26.840
Do not press the button.

01:26.840 --> 01:29.800
What I want you to do is to follow the instructions on the screen.

01:29.800 --> 01:31.160
There we go.

01:31.160 --> 01:32.760
Let's bring up our live update.

01:32.760 --> 01:33.760
Someone has matched the button.

01:33.760 --> 01:38.080
That little yellow at sign there, that's somebody who can't read the documentation.

01:38.080 --> 01:40.240
And it's written in large, friendly letters.

01:40.240 --> 01:43.160
How evil can it be?

01:43.160 --> 01:45.560
So we're going to just let that rack up a little bit.

01:45.560 --> 01:47.920
Look at that.

01:47.920 --> 01:48.920
Look at that.

01:48.920 --> 01:50.160
Someone has already caused an error message.

01:50.160 --> 01:51.560
Well done.

01:51.560 --> 01:52.560
Congratulations.

01:52.560 --> 01:53.560
There we go.

01:53.560 --> 01:54.560
Look at that.

01:54.560 --> 01:56.000
Let's go through the process.

01:56.000 --> 01:59.840
Most of you, it's good to see every little white dot on that, that's someone who is following

01:59.840 --> 02:00.840
the instructions.

02:00.840 --> 02:02.840
Now we have to press the button.

02:02.840 --> 02:03.840
No.

02:03.840 --> 02:04.840
Wait.

02:04.840 --> 02:05.840
We have to stand up.

02:05.840 --> 02:06.840
Wait.

02:06.840 --> 02:07.840
No.

02:07.840 --> 02:08.840
No.

02:08.840 --> 02:09.840
No.

02:09.840 --> 02:10.840
No.

02:10.840 --> 02:11.840
No.

02:11.840 --> 02:12.840
No.

02:12.840 --> 02:13.840
Stand up.

02:13.840 --> 02:14.840
The instructions say you stand up.

02:14.840 --> 02:15.840
So you stand up.

02:15.840 --> 02:16.840
Stand up.

02:16.840 --> 02:17.840
Stand up.

02:17.840 --> 02:18.840
Stand up.

02:18.840 --> 02:19.840
Stand up.

02:19.840 --> 02:20.840
Stand up.

02:20.840 --> 02:21.840
Stand up.

02:21.840 --> 02:22.840
Everyone standing up.

02:22.840 --> 02:23.840
Standing up.

02:23.840 --> 02:24.840
Right.

02:24.840 --> 02:28.280
So what we're going to do, I'm going to count down from five, and when you get to zero, you're

02:28.280 --> 02:30.960
allowed to press the button.

02:30.960 --> 02:42.720
Five, four, three, two, one, press the button, and we're going to send you an email.

02:42.720 --> 02:47.360
And when we do, you are going to go and check your inbox, and when you get the email, follow

02:47.360 --> 02:56.880
the instructions in the email.

02:56.880 --> 02:57.880
All right.

02:57.880 --> 02:58.880
I see a couple going green.

02:58.880 --> 03:00.120
I see a couple going pink.

03:00.120 --> 03:01.280
Some of the stuff is getting through.

03:01.280 --> 03:03.640
Some of the stuff is going to junk mail.

03:03.640 --> 03:04.800
Some of it is still queued.

03:04.800 --> 03:06.720
Some of it is still sent.

03:06.720 --> 03:10.280
The little black ones there are probably because I've pissed off every email provider on the

03:10.280 --> 03:14.200
planet doing the research for this talk, and some of them have decided that they are just

03:14.200 --> 03:16.680
not going to talk to me anymore.

03:16.680 --> 03:22.080
Are we getting a fair few of those going through?

03:22.080 --> 03:27.400
Now it's around about now that you've been waiting long enough that if this email was

03:27.400 --> 03:31.720
like your two-factor authentication to get into Azure to fix a problem in production

03:31.720 --> 03:35.520
or the password reset so you can get into your Gmail to get your damn plane ticket because

03:35.520 --> 03:38.560
you need to get to the airport, you'd be getting a little like, why does an email work this

03:38.560 --> 03:40.560
should have arrived by now?

03:40.560 --> 03:45.200
Well, friends, I have some very distressing news for you.

03:45.200 --> 03:48.080
Everything is working absolutely fine.

03:48.080 --> 03:51.120
Those of you who are still standing up, bear with me one more second.

03:51.120 --> 03:56.640
This is the SMTP specification, the latest version, October 2008, about how we should

03:56.640 --> 04:01.160
try to deliver email, and what it says is if it doesn't work first time, you should wait

04:01.160 --> 04:09.600
at least 30 minutes, and then you should keep trying for four or five days before you finally

04:09.600 --> 04:11.560
decide that the email didn't work.

04:11.560 --> 04:15.000
Now anyone who didn't get the email, you are welcome to come down the front at the

04:15.000 --> 04:19.740
end and you can get one of these, the sticker that should have been an email that I've got

04:19.740 --> 04:23.400
some of these printed out here, saying take all of those.

04:23.400 --> 04:27.640
These are the special NDC Oslo editions of this, so they won't look like this ever again.

04:27.640 --> 04:31.680
Now I'm going to talk to you about email and I'm going to talk to you about why we have

04:31.680 --> 04:36.520
ended up with this weird situation where the spec says that an email can take five days,

04:36.520 --> 04:39.240
but we built the internet on the fact it takes about 15 seconds.

04:39.240 --> 04:40.600
How did we get here?

04:41.480 --> 04:46.800
My credibility, I guess, my expertise in the field of email, it's something I've been

04:46.800 --> 04:48.360
working with for my entire career.

04:48.360 --> 04:56.800
In 2002, when the internet had a connection wizard, one of my first big professional projects

04:56.800 --> 05:02.200
I ever worked on was a project for this company, Spotlight is a British directory of show business

05:02.200 --> 05:06.840
job opportunities for actors and actresses, all those kinds of things.

05:06.840 --> 05:10.280
I built an email-based job information service.

05:10.360 --> 05:13.760
If you were making a movie and you needed actors to be in your movie, you could go on

05:13.760 --> 05:15.480
Spotlight and you could send out an email.

05:15.480 --> 05:20.120
Now this was built in classic ASP and I had a for loop and what it would do is it would

05:20.120 --> 05:22.920
send an email and then it would response.write a dot.

05:22.920 --> 05:26.440
So you'd get a screen that went dot, dot, dot, dot, dot, dot, dot, and then at the end

05:26.440 --> 05:28.720
we'd response.flash and we'd redirect.

05:28.720 --> 05:32.040
It sent about 200 emails a day, it was clunky as hell, but the system before that was built

05:32.040 --> 05:33.800
on fax machines.

05:33.800 --> 05:36.120
So this was a pretty neat idea.

05:36.120 --> 05:39.920
It was also a spectacularly successful product.

05:39.920 --> 05:45.800
It went from 200 emails a day to 500 to 1,000 to 2,000 to 5,000.

05:45.800 --> 05:51.360
By the time I left Spotlight in 2018, this system was sending a quarter of a million

05:51.360 --> 05:53.360
emails out every day.

05:53.360 --> 05:56.880
And that's not a quarter of a million copies of the same newsletter, it's a quarter of

05:56.880 --> 06:00.320
a million unique individual personalized emails.

06:00.320 --> 06:03.320
Now there was an interesting phenomenon that we noticed.

06:03.320 --> 06:07.280
We catered mainly to the English speaking show business market.

06:07.280 --> 06:12.040
In London, about two o'clock every afternoon, show business would get back from its nice

06:12.040 --> 06:16.320
boozy lunch in the pub, sit down and go, I should probably send out some emails.

06:16.320 --> 06:17.560
What do you think, Brian?

06:17.560 --> 06:20.760
And they'd go on Spotlight, they'd bang in a couple of things, they'd send us out.

06:20.760 --> 06:25.920
This happened at the same time as New York and Broadway had just finished their latte

06:25.920 --> 06:31.360
and were getting ready to get set into a solid day's work, which was the same time that Hollywood

06:31.360 --> 06:35.960
and Los Angeles have finished their power breakfast and started yelling at their assistants.

06:35.960 --> 06:40.160
So when I say a quarter of a million emails a day, most of them went out in a three hour

06:40.160 --> 06:42.040
window every afternoon.

06:42.040 --> 06:47.440
That is a sustained rate of about 10 to 12 emails per second for three hours every week

06:47.440 --> 06:50.000
day for more than a decade.

06:50.000 --> 06:56.280
Now you probably have a picture in your head of what a professional actor looks like.

06:56.280 --> 06:59.400
Most of them don't look like the ones you see on TV.

06:59.400 --> 07:03.720
The ones you see on TV are the ones who have made it because they have a job right now.

07:03.720 --> 07:08.680
The average professional actor looks like this because they're at home waiting for their

07:08.680 --> 07:12.040
next audition and they are sitting there and they're refreshing their email.

07:12.040 --> 07:15.480
Now some of you might have had complaints like companies you worked at where you've sent

07:15.480 --> 07:17.640
email and people have complained that you've sent them email.

07:17.640 --> 07:22.600
Have you ever had someone to phone you to complain that you hadn't sent them email?

07:22.600 --> 07:25.160
Because we used to get people ringing out going, I haven't had any emails for a couple

07:25.160 --> 07:26.160
of hours.

07:26.160 --> 07:27.160
Is everything all right?

07:27.160 --> 07:29.360
And we'd be like, well, we think so.

07:29.360 --> 07:31.360
Maybe there's just no work for you today.

07:31.360 --> 07:35.040
But we had to answer those calls and we had to be able to explain what was going on.

07:35.040 --> 07:41.160
So my team and I got incredibly good at understanding everything there was to know about email delivery.

07:41.160 --> 07:42.160
How does it work?

07:42.160 --> 07:43.160
Why does it work?

07:43.160 --> 07:44.160
Why might it fail?

07:44.160 --> 07:47.800
Now the whole time this is going on, because I'm an idiot, I'm running an open source mail

07:47.800 --> 07:49.640
server for me and all of my friends.

07:49.640 --> 07:53.960
So DylanBT.net, all the email ran on an old Hewlett Packard workstation that was locked

07:53.960 --> 07:57.920
in a server cupboard somewhere for about 10 or 15 years.

07:57.920 --> 08:02.520
Now I eventually stopped doing that and you'll find out why in the course of the talk.

08:02.520 --> 08:06.600
But then at the start of this year, who was at NDC London?

08:06.600 --> 08:08.480
I was, yeah.

08:08.480 --> 08:13.760
Some people who very nearly weren't were people who worked for a company I won't name whose

08:13.760 --> 08:18.400
corporate email provider switched to a new spam filtering service the week before the

08:18.400 --> 08:23.960
conference and that spam filtering service, MimeCast, decided that SendGrid was sending

08:23.960 --> 08:24.960
junk.

08:24.960 --> 08:28.920
And so all of their NDC conference tickets went to junk and we had to kind of jump in

08:28.920 --> 08:33.360
and figure out how did these people not get the tickets they'd paid money for that were

08:33.360 --> 08:35.200
sent directly to them.

08:35.200 --> 08:38.800
And I thought there might be an interesting talk in this, because lots of us build systems

08:38.800 --> 08:44.240
that send email and lots of us don't really understand all the weird quirks of how it

08:44.240 --> 08:45.240
works.

08:45.240 --> 08:49.440
So email is older than networks.

08:49.440 --> 08:54.240
The first computer that kind of really got any kind of traction was this thing, the compatible

08:54.320 --> 08:57.800
time sharing systems, about 1961.

08:57.800 --> 09:01.720
And you could send mail on this thing, but send as a misnomer because when you sent mail,

09:01.720 --> 09:03.640
the mail didn't go anywhere.

09:03.640 --> 09:08.400
It was the equivalent of leaving post-it notes on a really expensive refrigerator because

09:08.400 --> 09:12.240
this computer was shared between 60 or 70 different researchers.

09:12.240 --> 09:16.000
So when your colleague came to work the next morning and logged into their terminal, you'd

09:16.000 --> 09:17.000
left them a note.

09:17.000 --> 09:19.520
That was the first use of electronic mail.

09:19.520 --> 09:24.560
This kind of went on for a couple of years and we're going to skip forward to 1969.

09:24.560 --> 09:30.360
Now if the United States of America was a Netflix show, 1969 would be a season finale.

09:30.360 --> 09:31.360
Big budget.

09:31.360 --> 09:32.360
They pulled out all the stops.

09:32.360 --> 09:34.760
They did lots of really interesting stuff.

09:34.760 --> 09:37.160
69 was the year that people walked on the moon.

09:37.160 --> 09:39.440
It was the year the Boeing 747 first flew.

09:39.440 --> 09:43.000
It was the year the Lockheed SR-71 first flew.

09:43.000 --> 09:47.640
It was the year of Woodstock and the summer of love, all that kind of stuff.

09:47.640 --> 09:52.440
And it was the year that the ARPANET was invented.

09:52.440 --> 09:54.880
Now there were networks before the ARPANET.

09:54.880 --> 10:00.360
The ARPANET was the Advanced Research Projects Agency Network and it looked like this.

10:00.360 --> 10:03.120
This is a hand-drawn sketch of the entire network.

10:03.120 --> 10:06.840
Now before this, there was a network, but it was a kind of ad hoc network of computers

10:06.840 --> 10:11.120
that would dial each other up once or twice a day and they'd swap messages and things.

10:11.120 --> 10:16.040
But when the ARPANET came along, for the first time, there was an idea of being connected

10:16.040 --> 10:17.080
to the net.

10:17.080 --> 10:23.240
This was the network and if you were on it, other people could send messages to you.

10:23.240 --> 10:28.920
Now modern email is a culmination of probably hundreds of people working on solving smart

10:28.920 --> 10:31.960
problems over decades on all kinds of platforms.

10:31.960 --> 10:36.360
But one person whose innovation is still a significant part of the way we work with it

10:36.360 --> 10:37.360
was this guy.

10:37.360 --> 10:39.440
It's Ray Tomlinson.

10:39.440 --> 10:45.960
And he was working on an ARPANET mail system in 1971 and Ray invented AT.

10:45.960 --> 10:51.440
Ray is the person who went, hang on, if we know the user's name and we know the ARPANET

10:51.440 --> 10:55.400
host where they host their email, we could put an AT in the middle because it's Alice

10:55.400 --> 10:56.400
at the machine.

10:56.400 --> 10:59.520
Now you'll notice that the host name there is just MIT Multics.

10:59.520 --> 11:00.680
It's not a dot anything.

11:00.680 --> 11:04.520
It's not MITMultics.com, it's just MIT Multics.

11:04.520 --> 11:07.400
Because the network was so small that computers just had a name.

11:07.400 --> 11:10.920
And if you bought a new computer, you wanted to get on the net, you'd give it a name and

11:10.920 --> 11:12.640
then you'd talk to Jake.

11:12.640 --> 11:17.400
This is Elizabeth Feynler who everyone called Jake for some obscure reason.

11:17.400 --> 11:23.680
She ran the network information center at Stanford from 1972 to 1988 and she maintained

11:23.680 --> 11:25.720
the host's file.

11:25.720 --> 11:31.440
The definitive host's file of the entire internet and every year or two she and her

11:31.440 --> 11:35.880
team would print it because you could buy a print out of the host's file.

11:35.880 --> 11:40.640
And this listed all of the machines connected to the ARPANET along with the person responsible

11:40.640 --> 11:46.880
for maintaining them, telephone numbers, street addresses and email addresses.

11:46.880 --> 11:49.320
Now there are two kinds of people in the world.

11:49.320 --> 11:52.800
There are the people who see technology and go, hey, this is really useful.

11:52.800 --> 11:56.160
And there are the people who go, hey, those people think this is useful, maybe I can use

11:56.160 --> 11:58.680
it to get rich.

11:58.680 --> 12:01.240
Let's meet Gary Turk.

12:01.240 --> 12:05.200
Now Gary Turk, I punched his name in a Google to find a photo.

12:05.200 --> 12:08.280
The guy's still alive, he's still working, this is his LinkedIn page.

12:08.280 --> 12:12.160
You could connect with him after this talk if you really wanted to.

12:12.160 --> 12:17.560
But in 1978, Gary Turk was working for the Digital Equipment Corporation.

12:17.560 --> 12:22.320
He was a sales rep and his job was to sell these, the DEC System 20.

12:22.320 --> 12:25.440
Now this thing had built in ARPANET protocol support.

12:25.440 --> 12:28.080
It was like you didn't have to do anything special, you could plug it into a network

12:28.080 --> 12:29.640
and it would just work.

12:29.640 --> 12:33.760
And rightly or wrongly, Gary thought, well, I reckon people who are on the ARPANET might

12:33.760 --> 12:36.440
be interested in knowing about this computer.

12:36.440 --> 12:39.080
And Digital didn't have a whole lot of sales going on on the US West Coast.

12:39.080 --> 12:43.480
They had a big office on the East Coast, but West Coast, California, Portland, those kind

12:43.480 --> 12:46.400
of places, they didn't really have much of a presence.

12:46.400 --> 12:51.960
So he got his assistant to go through the ARPANET directory and type in the email addresses

12:51.960 --> 12:59.520
of everybody on the American West Coast who had an email address, 393 of them.

12:59.520 --> 13:02.560
And put them, now at this point, they overflowed the header field.

13:02.560 --> 13:08.240
So all the people who got this email got an email which started with about 250 other

13:08.240 --> 13:13.080
people's email addresses and then right down at the end of it, it says, hey, we invite

13:13.080 --> 13:18.560
you to come and see the DEC System 2020 and we'll be giving presentations.

13:18.560 --> 13:21.000
Now has any of you ever gotten trouble at work?

13:21.000 --> 13:23.200
Like maybe your boss said, please don't do that again.

13:23.200 --> 13:25.040
Or maybe your boss shouted at you.

13:25.040 --> 13:27.560
Or maybe the police shouted at you.

13:27.560 --> 13:29.280
Or maybe the police shouted at your boss.

13:29.280 --> 13:33.760
Have us grow up so bad that the United States military yells at your boss?

13:33.760 --> 13:36.440
Because that's what happened.

13:36.440 --> 13:43.040
Major Raymond Chehor, who was the US Air Force major in charge of the ARPANET, because this

13:43.040 --> 13:47.560
was run by the United States Air Force, you know, US military project, basically called

13:47.560 --> 13:50.040
Gary's boss and said, you do not do this ever again.

13:50.040 --> 13:52.200
We're very sorry.

13:52.200 --> 13:57.600
Now there's maybe a little window right about then when we could have fixed the problem.

13:57.600 --> 14:02.520
But everyone just went, yeah, don't send spam or the American Air Force will shout at you.

14:02.520 --> 14:03.520
We're clear.

14:03.520 --> 14:04.880
And everyone went, yeah, we understand.

14:04.880 --> 14:05.880
We'll be good from now on.

14:05.880 --> 14:06.880
We'll be nice.

14:06.880 --> 14:07.880
We'll behave.

14:07.880 --> 14:10.000
We're going to fast forward a little bit now.

14:10.000 --> 14:14.640
Now, you know, that demographic studies of populations kind of, they group people into

14:14.640 --> 14:15.640
generations.

14:15.640 --> 14:16.640
There are the baby boomers.

14:16.640 --> 14:20.040
And then there's, there's Generation X. And then there are the millennials.

14:20.040 --> 14:23.680
And then there's Generation Z. And then there's Gen Alpha or whatever they're called, and

14:23.680 --> 14:24.680
the new one.

14:24.800 --> 14:29.440
And there's this little gap in the middle, the microgeneration.

14:29.440 --> 14:33.320
We're the people who got email at the same time as everyone else in the world got email

14:33.320 --> 14:34.320
for the first time.

14:34.320 --> 14:39.960
Now, if you are Generation X, it means you were born before Star Wars.

14:39.960 --> 14:44.760
And if you are millennial, it means you were born after Return of the Jedi.

14:44.760 --> 14:48.680
And the people in the middle are the millennial Falcons.

14:48.680 --> 14:50.680
Represent.

14:50.680 --> 14:53.680
How many of my fellow Falcons we got out there today?

14:53.680 --> 14:54.680
Awesome.

14:54.680 --> 14:58.080
Now, the millennial, it was kind of this weird microgeneration.

14:58.080 --> 15:01.360
We're the ones who like grew up in a world where we had broadcast TV and our first job

15:01.360 --> 15:02.560
we had email.

15:02.560 --> 15:07.160
So we kind of had the analog childhood and then our adulthood has been completely digital.

15:07.160 --> 15:11.120
But it turns out that the internet is a millennial falcon.

15:11.120 --> 15:15.440
Because when Star Wars came out in 1977, there was the ARPANET.

15:15.440 --> 15:19.320
It used NCP, the network communication protocol.

15:19.320 --> 15:23.040
Everything was managed by the host's file, which you had to go and get a copy of from

15:23.040 --> 15:24.640
Stanford University.

15:24.640 --> 15:25.920
And Junk Mail didn't exist.

15:25.920 --> 15:26.920
No one had done that yet.

15:26.920 --> 15:32.120
When Return of the Jedi came out in May 1983, the ARPANET had become the internet.

15:32.120 --> 15:33.440
NCP was gone.

15:33.440 --> 15:34.920
TCPIP was everywhere.

15:34.920 --> 15:36.160
We're all running on this.

15:36.160 --> 15:37.560
DNS had been invented.

15:37.560 --> 15:40.520
We had a hierarchical domain name addressing system.

15:40.520 --> 15:43.280
And Junk email was very much a thing.

15:43.280 --> 15:47.800
Now, one of the things invented in the early 80s there was SMTP.

15:47.800 --> 15:50.240
It was created by this guy, John Postel.

15:50.600 --> 15:55.920
SMTP was published in 1982 and has been incredibly successful.

15:55.920 --> 16:01.800
Now, the problem with successful systems is you need to maintain an obscene level of backwards

16:01.800 --> 16:02.800
compatibility.

16:02.800 --> 16:07.240
If you bring out an email system at any point in the last 40 years that doesn't talk to

16:07.240 --> 16:11.200
all the other people who are already using email, no one's going to use it.

16:11.200 --> 16:13.520
Because it's useless because you can't communicate.

16:13.520 --> 16:21.040
It is the equivalent of going out and buying a 2022 MacBook M1 or M2 Pro and finding that

16:21.040 --> 16:26.440
it has a cassette player so that you can still load your PowerPoint slides from 1982.

16:26.440 --> 16:30.680
This is how backwards compatible SMTP systems and relays have to be.

16:30.680 --> 16:36.120
And one of the things defined in that request for comments, RFC821, was the format of an

16:36.120 --> 16:37.120
email address.

16:37.120 --> 16:39.000
Now, quick show of hands.

16:39.000 --> 16:42.600
Who's written code to validate email addresses?

16:42.680 --> 16:45.320
Keep your hands up if you used a regular expression.

16:45.320 --> 16:46.320
Yeah.

16:46.320 --> 16:50.560
So, I mean, validating the encoders kind of, but we know an email address when we see

16:50.560 --> 16:51.560
one, right?

16:51.560 --> 16:54.000
Like, we're looking at our friends in the Avengers.

16:54.000 --> 16:55.920
We got IronMan at Avengers.com.

16:55.920 --> 16:58.240
That looks valid, right?

16:58.240 --> 17:01.200
And Spider-Man, well, yeah, that's probably going to work.

17:01.200 --> 17:03.520
T'Challa at the Avengers.com.

17:03.520 --> 17:04.760
That's going to root, obviously.

17:04.760 --> 17:06.640
Nothing wrong with that.

17:06.640 --> 17:07.640
Rocket plus Groot.

17:07.640 --> 17:09.760
I'm not sure now.

17:09.760 --> 17:13.600
What about Bruce the Hulk banner at Avengers.com?

17:13.600 --> 17:17.200
What about, no, Vision doesn't give a shit about DNS, Vision's going to use IPv6, hard

17:17.200 --> 17:23.800
coded literals in square brackets, boom.

17:23.800 --> 17:28.320
How many of these would your email validation routine have accepted?

17:28.320 --> 17:30.520
They are all valid.

17:30.520 --> 17:36.640
These addresses are all completely valid email addresses according to the RFC specification

17:36.640 --> 17:39.440
for internet email addresses.

17:39.440 --> 17:43.720
So maybe validity is not really the question we should be asking ourselves.

17:43.720 --> 17:47.040
We're going to pull some email addresses apart and see how they actually work.

17:47.040 --> 17:52.000
Now, an email address has a domain part, and this controls where it's going.

17:52.000 --> 17:57.440
And it has a local part that controls what happens when it gets there.

17:57.440 --> 18:00.840
So what we're going to do, we're going to walk through the process of actually speaking

18:00.840 --> 18:04.120
the raw protocol that we use to send email addresses.

18:04.120 --> 18:07.160
So I'm going to use a tool called NSLookup here.

18:07.160 --> 18:09.960
All kids use dig, because dig is what runs on Linux and everything.

18:09.960 --> 18:13.480
But dig doesn't come with Windows, so this is NSLookup, which is available on most platforms.

18:13.480 --> 18:18.920
I'm going to do an NSLookup, name server lookup, and I'm going to say, hey, I want to know

18:18.920 --> 18:22.280
Mx, set type equals Mx, mail exchanger records.

18:22.280 --> 18:29.000
I want to know which computers on the internet are the mail exchangers for this domain, funwith.email.

18:29.000 --> 18:33.040
And it's going to say, oh, here you go, look, SMTP1, SMTP2.

18:33.040 --> 18:35.120
There's a number in here called an Mx preference.

18:35.120 --> 18:39.320
Now some people call this priority, that is a stupid name for it, because a low number

18:39.320 --> 18:41.600
is a higher priority.

18:41.600 --> 18:43.440
Preference number 10 means try this one first.

18:43.440 --> 18:45.880
If you can't get through to 10, go to preference number 20.

18:45.880 --> 18:48.480
The bigger number means wait, try that one later.

18:48.480 --> 18:50.120
So that's the computer we need to talk to.

18:50.120 --> 18:55.640
We're going to talk to SMTP1, so I'm going to telnet into that on port 25, and it's going

18:55.640 --> 18:57.680
to say, hey, nice to see you.

18:57.680 --> 19:04.400
And I'm going to say, hello, I'm dylanbt.net, and it's going to say 250, I'm smtp.funwithemail.

19:04.400 --> 19:10.560
And I'm going to say, I have mail from dylanbt.net, and it is going to say 250, OK.

19:10.560 --> 19:14.440
And I am going to say recipient2, hello, atfun.

19:14.440 --> 19:19.120
Now this is where it gets interesting, because that recipient2 is the point where we say

19:19.120 --> 19:23.320
to that system, this is who we want to talk to.

19:23.320 --> 19:27.760
Now I wanted to find out what actually works, like never mind what the instruction manual

19:27.760 --> 19:30.480
says, I don't care what's in the spec, what actually works out here.

19:30.480 --> 19:36.040
So I went on Google, and I Googled the best email providers for doing stupid experiments,

19:36.040 --> 19:38.200
and then I went, no, no, no, let's go with something.

19:38.200 --> 19:42.360
We're going to go with best business email hosting, and I trolled through a bunch of

19:42.360 --> 19:43.360
search results.

19:43.360 --> 19:48.680
Now one that I just want to highlight, because it is the most wonderful piece of hallucinatory

19:48.680 --> 19:55.640
journalism I've ever seen, this article from PC Magazine in 2020, the best hosted email

19:55.640 --> 20:04.920
providers are Salesforce, Microsoft Office 360 users should get their email from GoDaddyWeb

20:04.920 --> 20:11.400
hosting, Zoho Loyalists should use Zoho Mail, and the best email for Microsoft organizations

20:11.400 --> 20:14.560
is Teams.

20:14.560 --> 20:18.920
In case you're not familiar with business email hosting, this is like you go into Cars Magazine,

20:18.920 --> 20:21.960
you say, what are the best economy family cars in 2020?

20:21.960 --> 20:26.440
And it says, well, there's the Hyundai Tucson, there's bicycles, there's a submarine, and

20:26.440 --> 20:32.360
there's penguins, and you're like, yeah, right.

20:32.360 --> 20:36.920
But I also found quite a lot of good solid articles that were recommendations for which

20:36.920 --> 20:42.360
companies people use in 2023 to host email, and so I picked a bunch of those.

20:42.360 --> 20:48.560
Now disclaimer here, this is not a review of business email services.

20:48.560 --> 20:53.760
I do not want anyone here going away and choosing an email platform because of something

20:53.760 --> 20:56.000
that I said in this talk.

20:56.000 --> 21:01.280
What I'm doing here is the equivalent of testing cars by filling them with gravel, setting

21:01.280 --> 21:06.240
them on fire, driving them off a bridge and seeing if they explode before they sink.

21:06.240 --> 21:10.800
It's interesting, every provider I'm going to show you is a rock solid platform.

21:10.800 --> 21:15.360
They all do email really, really well until some idiot like me comes along and tries to

21:15.360 --> 21:18.560
poke them with a stick.

21:18.560 --> 21:22.480
So I identified from looking at all these articles, the big players right now, Office

21:22.480 --> 21:26.240
365 and Google are the ones that really kind of dominate the space.

21:26.240 --> 21:30.000
Zoho have a lot of support from people who don't want to use the big platforms.

21:30.000 --> 21:33.800
Proton mail is very popular because they have really strong commitment to security.

21:33.800 --> 21:37.680
And Fast Mail is a, so disclaimer, Fast Mail is a company I've used to host my mail for

21:37.680 --> 21:38.680
years and years.

21:38.680 --> 21:43.240
Personally, I love them, I have no problems with them, but I'm just a regular paying customer

21:43.240 --> 21:44.240
of all these services.

21:44.320 --> 21:46.880
No, I haven't talked to them, there's no endorsements.

21:46.880 --> 21:51.680
So I set up email domains for every single one of those, set up all the DNS records,

21:51.680 --> 21:53.640
all the anti-spam records, everything.

21:53.640 --> 21:56.360
And then I went through to see how many email addresses I could register.

21:56.360 --> 21:58.920
So let's try to chalera with the apostrophe in it.

21:58.920 --> 22:01.200
Google, yep, no problem.

22:01.200 --> 22:04.400
Office 365, yeah, no problem.

22:04.400 --> 22:09.040
Go on to Zoho Mail, it let me register it.

22:09.040 --> 22:15.120
So then when I click on it, apparently they didn't tell the people who built their front

22:15.120 --> 22:18.080
hand that there might be apostrophes in the JSON and the email addresses.

22:18.080 --> 22:20.840
So we're going to give that one a frowny face.

22:20.840 --> 22:23.600
Proton mail just says, no, you can't have that, not allowed.

22:23.600 --> 22:27.960
And I go on to Fast Mail and I says, please check this, so no, can't do that, not allowed.

22:27.960 --> 22:29.800
Let's try Rocket Plus Groot.

22:29.800 --> 22:33.480
Now I go on to Gmail and I try and create a mailbox and it says you can't contain special

22:33.480 --> 22:34.480
characters.

22:34.480 --> 22:36.280
So it looks like you can't do that.

22:36.680 --> 22:40.600
Google has a weird feature and it's quite a neat feature.

22:40.600 --> 22:43.760
If you have a bunch of email addresses, so we've got Iron Man at Gmail, we've got Iron

22:43.760 --> 22:47.720
Man plus Jarvis, we've got Iron Dot Man, we've got Iron Dot Man plus Jarvis, we've got

22:47.720 --> 22:50.880
I dot r dot dot dot dot dot dot at email dot com.

22:50.880 --> 22:56.880
These all go to the same place because Google decided they don't want some situation where

22:56.880 --> 23:00.440
I'm Dylan Beattie and you're Dylan Dot Beattie and we're different people.

23:00.440 --> 23:04.080
They went, that is too complicated for humans to understand.

23:04.120 --> 23:07.200
The plus thing, the nice thing about that is it's preserved, so when you sign up for

23:07.200 --> 23:12.240
like a mailing list, you could be like Dylan Dot Beattie plus NDC at Gmail dot com.

23:12.240 --> 23:16.040
And then if that shows up in a data breach, I know which company the breach came from.

23:16.040 --> 23:17.760
So this is plus tag tracking.

23:17.760 --> 23:20.680
This is a Google feature, it's not part of an email standard, but it is worth knowing

23:20.680 --> 23:22.960
about if you're working with mail deliverability.

23:22.960 --> 23:26.840
So actually Rocket Plus Groot on Gmail is kind of a smiley face.

23:26.840 --> 23:31.000
Microsoft 365 says no, you can't have that, so it's a cross for them.

23:31.040 --> 23:34.120
Zoho Mail says invalid username, all right, fair enough.

23:34.120 --> 23:36.160
Proton Mail, nope, you can't have that.

23:36.160 --> 23:42.400
And Fast Mail says this name's already taken, which it isn't because I just registered that

23:42.400 --> 23:46.720
domain, it's not taken, but yeah, we're going to give that one a sad face.

23:46.720 --> 23:52.120
Now Bruce Banner in quotes, the email spec says that you can have a quoted local part

23:52.120 --> 23:53.640
containing spaces.

23:53.640 --> 24:00.120
There is not a single provider on the planet that I found which will let you create a mailbox.

24:00.120 --> 24:03.560
So then I thought, all right, well enough fun with the sensible addresses.

24:03.560 --> 24:07.200
What about single apostrophe at?

24:07.200 --> 24:14.320
Google, yeah, Microsoft, yeah, Zoho Mail, no, Proton Mail, no, Fast Mail, no.

24:14.320 --> 24:16.640
What about single hyphen?

24:16.640 --> 24:19.320
Now this is where Google says email cannot be a single hyphen.

24:19.320 --> 24:21.280
I'm like, what about a double hyphen?

24:21.280 --> 24:24.720
And Google goes, oh yeah, you can have that one.

24:24.720 --> 24:26.440
That's fine.

24:26.440 --> 24:30.640
Because 365 minus at is fine, that's legitimate.

24:30.640 --> 24:34.520
Zoho says no, Proton says no, that name is already taken.

24:34.520 --> 24:35.520
Again it's not.

24:35.520 --> 24:38.560
I don't know what the validation thinks is going on here.

24:38.560 --> 24:40.680
Fast Mail says no.

24:40.680 --> 24:43.320
So this is the set of aliases that I managed to create there.

24:43.320 --> 24:46.240
This is the Google admin for gg.funwith.email.

24:46.240 --> 24:50.440
To challenge in, single apostrophe is in, minus, minus is in, underscore is in.

24:50.440 --> 24:53.000
Last one I wanted to try was just underscore at.

24:53.000 --> 24:59.600
Zoho says yes, Outlook says yes, Zoho says, well, Zoho says, I put it in, I click add,

24:59.600 --> 25:04.800
and it says, ass 101, and I'm like, I wonder where that came from, so I open up the Chrome

25:04.800 --> 25:10.120
network inspector, I take the request apart, and it says, status code 200, ass 101.

25:10.120 --> 25:12.920
Now where I come from, 200 means okay, right?

25:12.920 --> 25:16.680
So I don't know why it's red, but we're going to go with, we're not quite sure what happened

25:16.680 --> 25:17.680
there.

25:17.680 --> 25:24.000
Finally, underscore at fm, Fast Mail just says, great choice.

25:24.000 --> 25:27.200
So there we go.

25:27.200 --> 25:31.960
So next I thought, all right, never mind creating mailboxes, I'm going to create a catchall

25:31.960 --> 25:32.960
address.

25:32.960 --> 25:36.040
I'm going to create an address that says anything at this domain should go to that person over

25:36.040 --> 25:39.840
there, anything that's deliverable, because I wanted to see if I could push the limits

25:39.840 --> 25:42.080
of what spec email addresses would actually do.

25:42.080 --> 25:45.680
That's where I hit a little bit of a problem, because I went on a Gmail and I tried to send

25:45.680 --> 25:50.840
an email to, quote, Bruce space banner, quote, and Gmail says no, Gmail says you can't send

25:50.840 --> 25:55.520
mail to that person, it's not recognized, and that's just so it doesn't exist.

25:55.520 --> 25:57.440
Proton mail, their interface said the same thing.

25:57.440 --> 26:01.360
Email address format is not valid, I'm thinking, hmm.

26:01.360 --> 26:06.840
Now what we can conclude from this, is an email address valid?

26:06.840 --> 26:09.920
Does it contain at least one at sign?

26:09.920 --> 26:19.360
Because if it doesn't, no, but if it does, then it depends.

26:19.360 --> 26:23.560
Can an email address be case sensitive?

26:23.560 --> 26:28.960
The answer is yes, if you're evil.

26:28.960 --> 26:34.200
When SMTP was introduced in the early 1980s, the way that it got rolled out was most people

26:34.200 --> 26:39.600
who already had a system that had mail added an SMTP connector to it.

26:39.600 --> 26:45.120
And most of those systems ran on Unix, and Unix has a case sensitive file system, and

26:45.120 --> 26:50.600
it means that your mailbox has the same name as your mailbox file, which has the same name

26:50.600 --> 26:55.240
as your user, which means that Alice with a little a and Alice with a big a could be

26:55.240 --> 26:58.040
different people on the same Unix machine.

26:58.040 --> 27:02.560
And so when you connect an SMTP relay, the spec says that once it gets to where it's

27:02.560 --> 27:07.440
going, if the local administrator of that system has made it case sensitive, that should

27:07.440 --> 27:09.080
be delivered intact.

27:09.080 --> 27:14.160
You should never ever modify the case of somebody else's email address.

27:14.160 --> 27:18.960
Now this is where the airline industry turns up and goes, we have cobalt mainframes.

27:18.960 --> 27:22.480
Your email address will be uppercase, whether you like it or not.

27:22.480 --> 27:27.480
So when Alex goes to Alice here, goes to buy an email ticket and get it sent to her Unix.box.edu

27:27.480 --> 27:29.520
account, she's not going to get anything.

27:29.520 --> 27:34.320
Because big Alice and medium Alice, they've got mailboxes, but capital Alice doesn't exist.

27:34.320 --> 27:36.240
So can email be case sensitive?

27:36.240 --> 27:39.680
It can if you really want it to, but it probably shouldn't be.

27:39.680 --> 27:40.960
So we're going to go back to here.

27:40.960 --> 27:42.480
We're going to do our 1980s flavored.

27:42.480 --> 27:47.760
We got a hello, we got mail from, we got recipient to, it says okay, we're going to say data.

27:47.760 --> 27:51.680
And it's going to say go ahead, end your data with a new line, dot new line, and we're just

27:51.680 --> 27:58.880
going to say hello, dot boom, 250, okay, queued, quit, bye-bye.

27:58.880 --> 27:59.880
And there it is.

27:59.880 --> 28:04.680
We sent an email using 1982 flavored raw SMTP typing into a Windows terminal.

28:04.680 --> 28:07.360
The only challenge with this is finding a network that will allow you to do it.

28:07.360 --> 28:09.960
And we'll find out later why that's interesting.

28:09.960 --> 28:14.900
Now this is where I start thinking, well, hang on, Gmail and Proton won't let me send

28:14.900 --> 28:19.200
emails with spaces in them, but I've just proved that we can hack into the matrix.

28:19.200 --> 28:20.960
We can send code directly.

28:20.960 --> 28:25.440
So I thought, what if I go to Proton mail, look up their mail exchanger, tell that into

28:25.440 --> 28:30.560
it, hello, mail from hello at fun with email recipient to that, it says protocol error,

28:30.560 --> 28:32.280
okay, that's not going to work.

28:32.280 --> 28:33.560
Let's try it again.

28:33.560 --> 28:35.280
So ho, what do they got?

28:35.280 --> 28:42.320
Boom, tell that into that one, hello, mail from recipient to, now I'm not relaying because

28:42.320 --> 28:43.320
that's their domain.

28:43.320 --> 28:47.120
I'm giving them money to host that, but apparently they've decided that that's relaying and they

28:47.120 --> 28:48.960
are not going to let me relay.

28:48.960 --> 28:49.960
Sad face.

28:49.960 --> 28:50.960
Let's try Google.

28:50.960 --> 28:58.640
Tell that, boom, there we go, we're in, hello, mail from, yep, okay, recipient to, that's

28:58.640 --> 29:01.360
not a valid RFC 5321 address.

29:01.360 --> 29:05.640
Also, there's a lie, it is a valid RFC 5321 address.

29:05.640 --> 29:09.560
Google is lying to your face, but they Google, you know, what are you going to do?

29:09.560 --> 29:10.560
So that doesn't work.

29:10.560 --> 29:18.280
Now, I tried to do this with the Microsoft account and I could not find any network anywhere

29:18.280 --> 29:23.720
that Microsoft would let me inject mail from because every single place I tried, I just

29:23.720 --> 29:26.000
got access to night band sending.

29:26.000 --> 29:30.040
So the NDC conference Wi-Fi didn't work, hotel Wi-Fi didn't work, tethered on my phone

29:30.040 --> 29:31.040
didn't work.

29:31.040 --> 29:36.520
On-board Wi-Fi on Norwegian air didn't work, Deutsche Bahn Railway on-board Wi-Fi didn't

29:36.520 --> 29:37.520
work.

29:37.520 --> 29:40.800
Microsoft are really good at working at who might be trying to send spam from a moving

29:40.800 --> 29:44.240
train in Germany and making sure that that doesn't happen.

29:44.240 --> 29:46.760
Did you try Azure?

29:46.760 --> 29:48.960
Yeah, Azure Blocksport 25.

29:48.960 --> 29:52.920
You can't send mail from Azure or AWS or Google Cloud.

29:52.920 --> 29:53.920
We'll talk about that in a bit.

29:53.920 --> 29:56.960
I'll look everyone on that train for sending an email.

29:56.960 --> 29:57.960
Yeah, probably.

29:57.960 --> 29:58.960
Yeah, okay.

29:58.960 --> 29:59.960
And everyone at NDC and everyone in the hotel.

29:59.960 --> 30:00.960
Sorry.

30:00.960 --> 30:01.960
There's research.

30:01.960 --> 30:02.960
You know.

30:02.960 --> 30:03.960
Let's try it with fast mail.

30:03.960 --> 30:04.960
So I got there.

30:04.960 --> 30:05.960
Mail exchanger.

30:05.960 --> 30:06.960
Tell that hello.

30:06.960 --> 30:07.960
Mail from.

30:07.960 --> 30:08.960
Recipient to.

30:08.960 --> 30:09.960
Whoa.

30:09.960 --> 30:10.960
Okay.

30:10.960 --> 30:11.960
Okay.

30:11.960 --> 30:12.960
Data.

30:12.960 --> 30:14.840
There we go.

30:14.840 --> 30:17.720
This was sent to an address with spaces in it and it worked.

30:17.720 --> 30:19.640
Let's see if it worked.

30:19.640 --> 30:20.640
Quit.

30:20.640 --> 30:21.640
Okay.

30:21.640 --> 30:22.640
Bye.

30:22.640 --> 30:24.560
There it is.

30:24.560 --> 30:25.560
It worked.

30:25.560 --> 30:29.560
Delivered to an email address containing spaces because this is what the specification

30:29.560 --> 30:32.400
says email should do.

30:32.400 --> 30:37.880
Now what we've just done there, every one of those services, we have done the digital

30:37.880 --> 30:43.120
equivalent of, let's imagine that we want to email, we want to send a letter, a physical

30:43.120 --> 30:45.920
letter to this, you know who this is, right?

30:45.920 --> 30:47.200
This is Lazarus Trequero.

30:47.200 --> 30:50.320
He's the president of Malawi and he lives here.

30:50.320 --> 30:51.720
And so we want to send a letter to him.

30:51.720 --> 30:54.040
So we're going to write a letter, put it in envelope and we're going to go to Malawi,

30:54.040 --> 30:58.400
get on a plane, fly, land at Le Longue, we're going to go out of town, go up to the presidential

30:58.400 --> 31:03.040
palace at the top of the hill and we're going to go, hello, hello, we have a letter for

31:03.040 --> 31:05.240
his excellency.

31:05.240 --> 31:08.000
Now one, that is not an efficient way to deliver mail.

31:08.000 --> 31:12.600
And two, he might be out in which case we have a deliverability problem.

31:12.600 --> 31:15.160
So what can we do instead?

31:15.160 --> 31:17.120
Well, we do this.

31:17.120 --> 31:21.800
We put a stamp on it and we put it in a mailbox and we assume that we can find any mailbox

31:21.800 --> 31:23.160
anywhere on the planet.

31:23.160 --> 31:28.200
We can put a letter into it and if we put the correct poster, John, it'll go where it

31:28.200 --> 31:29.000
needs to go.

31:29.000 --> 31:35.640
Now mailboxes work because there is a physical and financial cost to sending printed mail.

31:35.640 --> 31:36.640
You got to buy a stamp.

31:36.640 --> 31:37.640
You got to buy printer ink.

31:37.640 --> 31:39.680
Have you seen how much printer ink costs?

31:39.680 --> 31:44.360
Like if you want to sell bad penis enlargement procedures to 100,000 people, you're not going

31:44.360 --> 31:47.040
to do it using a Hewlett Packard inkjet printer.

31:47.040 --> 31:49.000
The business model just doesn't work.

31:49.000 --> 31:54.040
So this kind of mail, it's kind of self-regulating up to a point.

31:54.040 --> 31:58.720
But let's have a look at what we've got in my inbox here.

31:58.720 --> 32:02.240
Now I've got a message here from Lisa Williams.

32:02.240 --> 32:05.400
She's looking for a special friendship.

32:05.400 --> 32:10.200
Web design prices on Google, cross-border payments international, an investment opportunity

32:10.200 --> 32:11.360
for you.

32:11.360 --> 32:13.600
Your subscription has been confirmed.

32:13.600 --> 32:17.840
Important message FedEx International.

32:17.840 --> 32:20.600
I have a new voicemail message.

32:20.600 --> 32:25.600
Spam, spam, spam, spam, spam, lovely spam.

32:25.600 --> 32:35.520
Let's give it up for the NDC Viking spam choir.

32:35.520 --> 32:40.680
You ever wondered why junk mail is called spam?

32:40.680 --> 32:42.040
So spam is spiced ham.

32:42.040 --> 32:43.040
It's this.

32:43.040 --> 32:45.040
It's meat in a tin, which has been around for years.

32:45.040 --> 32:49.720
And Monty Python did a sketch in the 70s where someone's in a cafe and the things on the

32:49.720 --> 32:53.600
menu are egg and spam and egg and bacon and spam and egg and spam and spam and sausage

32:53.600 --> 32:56.160
and spam and spam and spam and spam and spam and spam.

32:56.160 --> 33:00.000
And for reasons I will never understand, in the cafe where the clip said there is a chorus

33:00.000 --> 33:05.200
of Vikings who sing the spam song, and I put the Monty Python clip in the video, and then

33:05.200 --> 33:08.640
I thought, I'm going to be annoyed with a bunch of loud hairy men.

33:08.640 --> 33:09.680
We don't need a video clip.

33:09.680 --> 33:13.480
We can do this one live.

33:13.480 --> 33:17.320
And yeah, so spam email is a reference to that sketch where the noise of the spam, spam,

33:17.320 --> 33:20.040
spam just drowns out everything else that's going because that's what happens with junk

33:20.040 --> 33:21.040
mail.

33:21.040 --> 33:26.440
We have these unsolicited emails, and the reason we're getting them is because email was invented

33:26.440 --> 33:28.720
by hippies.

33:28.720 --> 33:32.480
And hippies suck at security.

33:32.480 --> 33:36.640
Now things just kind of rattled on a little while, you know, 1980s sort of came and went.

33:36.640 --> 33:40.440
And for a long time in the 80s, every mail server on the internet was an open relay because

33:40.440 --> 33:44.800
peace and love, man, and good vibes, and yeah, it will help you relay your mail to anywhere.

33:44.800 --> 33:46.720
Then the 90s comes along.

33:46.720 --> 33:51.440
And what happens in the 90s is a lot of people who've never had email or the internet before,

33:51.440 --> 33:53.680
they get the internet at home.

33:53.680 --> 33:57.880
And the thing you've got to realize about what was happening in the 90s is that stuff

33:57.880 --> 34:00.680
that was impossible is now happening daily.

34:00.680 --> 34:05.160
Someone gets their first email account, and a couple of days in, they get an email from

34:05.160 --> 34:10.760
their granddaughter in Australia with a photo of the new baby, and that was impossible.

34:10.760 --> 34:13.160
Like a year previously, you could not do that.

34:13.160 --> 34:16.480
It took three weeks to send photographs from Australia to Europe.

34:16.480 --> 34:19.200
Usually this thing's happening, they're like, ah, the internet's absolutely magic.

34:19.200 --> 34:20.200
It's brilliant.

34:20.200 --> 34:21.200
It's amazing.

34:21.200 --> 34:24.840
The next thing in their inbox is Bill Gates saying he's going to give them a million dollars

34:24.840 --> 34:27.360
and everyone gets a free trip to Disneyland.

34:27.360 --> 34:30.360
And they're like, well, the last thing was too good to be true, but then it happened.

34:30.360 --> 34:33.080
Maybe this one's too good to be true, but maybe this one will happen as well.

34:33.080 --> 34:37.800
We had no frame of reference as a population for what email could and could not do and

34:37.800 --> 34:39.640
what was possible on the internet.

34:39.640 --> 34:45.240
And so junk mail, scams, spams, bad medication became an absolutely rife problem.

34:45.240 --> 34:48.080
Most of it sent through open email relays.

34:48.080 --> 34:50.840
Now there were four approaches that we took to try and stop this.

34:50.840 --> 34:55.160
One of them was they made it against the law.

34:55.160 --> 35:01.560
The controlling the assault of non-solicited pornography and marketing can spam act of

35:01.560 --> 35:02.560
2003.

35:02.560 --> 35:06.520
Now, as you can tell, this was a resounding success because after 2003, there was no more

35:06.520 --> 35:08.000
junk mail, right?

35:08.000 --> 35:09.000
Yeah.

35:09.000 --> 35:12.920
No, it turns out that quite a lot of people aren't in America, and quite a lot of people

35:12.920 --> 35:14.880
who are in America don't give a crap.

35:14.880 --> 35:19.360
And even the ones who do, it's very, very hard to prosecute them because it's ridiculously

35:19.360 --> 35:23.400
easy to comply with the specifics of the can spam act.

35:23.400 --> 35:26.840
So law enforcement did not deliver a solution.

35:26.840 --> 35:29.280
The second approach we tried was client-side filtering.

35:29.280 --> 35:31.520
You have some software that sorts out your email.

35:31.520 --> 35:32.520
Now most of us use that.

35:32.520 --> 35:33.520
I use that.

35:33.520 --> 35:36.600
You know, I have Gmail and it puts stuff in my inbox and updates and social and that

35:36.600 --> 35:37.600
kind of stuff.

35:37.600 --> 35:41.440
I'm not going to talk about that today because as a developer trying to send you an email,

35:41.440 --> 35:44.600
what you're doing with it after I've delivered it, that is your problem and I don't care

35:44.600 --> 35:45.680
how you've got it set up.

35:45.680 --> 35:47.440
You can filter anything you want.

35:47.440 --> 35:49.160
There's very little consistency.

35:49.160 --> 35:51.560
That's on you to get set up the way you want to do it.

35:51.560 --> 35:55.840
There's maybe some interesting stuff here about training machine learning systems.

35:55.840 --> 35:59.640
But like that email that I sent at the beginning of this session that all of you said, yes,

35:59.640 --> 36:02.120
I want to receive this email, quite a lot of you, it went to junk.

36:02.120 --> 36:05.760
How would you train an algorithm to know that you're in Oslo right now doing a live demo

36:05.760 --> 36:06.760
and this is important?

36:06.760 --> 36:10.320
So we're not going to talk about client-side filtering.

36:10.320 --> 36:11.840
What about verification?

36:11.840 --> 36:15.840
One of the problems with unsolicited email is that you are not accountable.

36:15.840 --> 36:19.240
There's no way of tracing the junk mail back to the person who sent it.

36:19.240 --> 36:23.980
And if there was, it would be easier to find those people and tell them to stop.

36:23.980 --> 36:29.280
What we need is we need peace and love and authentication.

36:29.280 --> 36:31.920
And the problem is they didn't include that because the hippies didn't think we were going

36:31.920 --> 36:32.920
to need it.

36:32.920 --> 36:37.880
So when SMTP was created, it has no support, no user names, no passwords, no security,

36:37.880 --> 36:40.200
no encryption, absolutely nothing.

36:40.200 --> 36:43.720
And so we looked at the SMTP and we went, oh, simple mail.

36:43.720 --> 36:47.000
Now we didn't want to make the complicated mail transfer protocol.

36:47.000 --> 36:48.120
That might have put people off.

36:48.120 --> 36:52.440
So instead, we made the extended simple mail transfer protocol.

36:52.440 --> 36:57.480
Now this was actually invented at Jim Henson's Creature Shop because the difference between

36:57.480 --> 37:04.720
SMTP and ESMTP is the SMTP, you say hello, and ESMTPC, you say, hello, which is close

37:04.720 --> 37:05.720
enough.

37:05.960 --> 37:09.360
So we're going to do an extended ESMTP transcript.

37:09.360 --> 37:11.880
We're going to tell that into my fun with the email server.

37:11.880 --> 37:15.880
And we're going to say hello, DylanBT.net, and it's going to go, oh, cool.

37:15.880 --> 37:17.560
You speak the cool kids language.

37:17.560 --> 37:19.320
Look, this is the stuff that I can do for you.

37:19.320 --> 37:24.440
I support authentication using the plain system or the login system or the cram MD5 system.

37:24.440 --> 37:28.640
I support start TLS, which means we can switch this whole thing to a secure channel, and

37:28.640 --> 37:30.320
I do enhanced status codes.

37:30.320 --> 37:33.480
And we're like, all right, well, before we send our username password, we probably want

37:33.480 --> 37:35.520
to switch to the secure TLS thing.

37:35.520 --> 37:36.960
So we're going to start TLS.

37:36.960 --> 37:40.640
By the way, lots of people still call this SSL because SSL was invented at Netscape in

37:40.640 --> 37:44.120
the 90s, and everyone went, yeah, secure sockets makes the internet secure.

37:44.120 --> 37:48.480
SSL stopped being a good idea in 1999, but by then, we'd all got used to talking about

37:48.480 --> 37:50.120
SSL certificates.

37:50.120 --> 37:52.680
These days, it's actually TLS, transport layer security.

37:52.680 --> 37:56.800
So we're going to send start TLS, and it's going to go, yeah, OK, go ahead.

37:56.800 --> 37:57.800
Now we're secure.

37:57.800 --> 37:59.320
Start again on a secure channel.

37:59.320 --> 38:04.240
Hello, DylanBT.net, there's our SMTP handshake, and now we can say, this is our username and

38:04.240 --> 38:08.760
password, mashed together, base64 encoded, so it's technically not encrypted.

38:08.760 --> 38:09.760
It's just encoded.

38:09.760 --> 38:13.480
But that's going to say, authentication successful, and now we're in.

38:13.480 --> 38:18.040
So we've said, this is us, look, we're a paying customer, please relay email for us.

38:18.040 --> 38:22.640
But the fourth approach is let's stop the bad people being able to get onto the internet

38:22.640 --> 38:24.200
in the first place.

38:24.200 --> 38:26.880
Now, there's a guy called John Gilmore.

38:26.880 --> 38:28.480
John is a very interesting person.

38:28.480 --> 38:31.440
He's one of those people who I agree with everything he does right up to the point where

38:31.440 --> 38:33.680
I think he turns into a bit of a dick.

38:33.680 --> 38:36.280
And then he kind of stops just past that point.

38:36.280 --> 38:39.760
John was employee number five at Sun Microsystems.

38:39.760 --> 38:43.400
He was one of the founders of the Electronic Frontier Foundation.

38:43.400 --> 38:48.840
He is a, I've seen him described as an extreme libertarian cypherpunk activist.

38:48.840 --> 38:52.920
And the most famous quote I've seen from John is this one, the net interprets censorship

38:52.920 --> 38:55.320
as damage and roots around it.

38:55.320 --> 38:59.800
If you start blocking ports because you don't like what people are doing, the internet is

38:59.800 --> 39:02.640
designed to find another way around it.

39:02.640 --> 39:05.480
And you know, he has taken this philosophy to an extreme.

39:05.480 --> 39:07.920
He runs an open mail relay.

39:07.920 --> 39:13.600
If you got a hop.toad.com, it will accept email from anyone on the planet on port 25

39:13.600 --> 39:14.600
and it will deliver it.

39:14.600 --> 39:18.480
Doesn't care who you are, doesn't care where you came from, which is kind of the libertarian

39:18.480 --> 39:19.600
ethos in a nutshell.

39:19.600 --> 39:23.680
Like you shouldn't have to show your ID to be able to take advantage of public services.

39:23.680 --> 39:27.680
Which I kind of agree with except where the internet is concerned, because it becomes

39:27.680 --> 39:29.360
too easy to abuse it.

39:29.360 --> 39:34.560
Now, I really wanted to use toad.com in the demos I put together and in the live demo

39:34.560 --> 39:35.840
we did at the beginning.

39:35.840 --> 39:37.240
I couldn't.

39:37.240 --> 39:42.600
Because none of the networks that I'm able to connect to would let me relay mail through

39:42.600 --> 39:43.600
hop.toad.com.

39:43.600 --> 39:45.040
They just said you can't do it.

39:45.040 --> 39:46.040
I can't connect.

39:46.040 --> 39:50.360
If you put a system in Azure, on an Azure VM or an app service and say, hey, connect

39:50.360 --> 39:54.520
to that system on port 25, it says no, you can't connect to anything on port 25.

39:54.520 --> 39:55.520
Don't send spam.

39:55.520 --> 39:57.280
Google Cloud, same thing.

39:57.280 --> 39:59.080
Amazon Web Services, same thing.

39:59.800 --> 40:06.000
Dial up most connected wi-fi, most public wi-fi, can't connect to anything on port 25.

40:06.000 --> 40:09.200
So we can't use this open relay approach to send mail.

40:09.200 --> 40:13.240
The only way we've got a sending mail is to find someone we have a relationship with and

40:13.240 --> 40:16.080
use our username password to connect to their server.

40:16.080 --> 40:20.640
So that's fine when we want to use our internet provider or our email service to send mail

40:20.640 --> 40:23.000
to the rest of the world.

40:23.000 --> 40:24.880
But what about receiving it?

40:24.880 --> 40:28.680
Because the beautiful thing about email is that anyone on the planet can send me a message

40:28.760 --> 40:30.320
and I should be able to get it.

40:30.320 --> 40:34.160
And this is what sets it apart from things like WhatsApp and Twitter and Telegram.

40:34.160 --> 40:38.160
There is no multinational corporation whose algorithm is showing me things they think

40:38.160 --> 40:39.520
I want to see.

40:39.520 --> 40:44.320
I should be able to guarantee that anyone can send me an email and I will receive that

40:44.320 --> 40:47.520
email, be able to look at it, which means it needs to be wide open.

40:47.520 --> 40:51.640
If I'm hosting my mail on Gmail, I can't expect everyone talking to me to set up a

40:51.640 --> 40:53.600
Google account to be able to do that.

40:53.600 --> 40:54.720
Likewise, Microsoft.

40:54.720 --> 41:00.000
So when a mail arrives, when someone knocks on the door of fun with email and says, hey,

41:00.000 --> 41:03.960
I got an email here for Dylan, what can we do to determine whether that's legitimate?

41:03.960 --> 41:06.920
Well, first, we can look at the envelope.

41:06.920 --> 41:08.280
We can look where did it come from?

41:08.280 --> 41:09.200
Where was this mail sent?

41:09.200 --> 41:11.160
What was the network address it came from?

41:11.160 --> 41:17.240
Does that appear in any of the public databases of known spamming network addresses?

41:17.240 --> 41:20.360
Now, this system kind of works up to a point.

41:20.360 --> 41:21.560
It stops a lot of spam.

41:21.560 --> 41:23.120
I'm not going to pretend it doesn't.

41:23.160 --> 41:24.800
It's also a massive pain in the ass.

41:24.800 --> 41:28.480
Because anyone who wants to give you a bad day can just find your email address and they

41:28.480 --> 41:30.080
can report it for spamming.

41:30.080 --> 41:32.680
And these places, most of them don't verify anything.

41:32.680 --> 41:34.360
They're just like, OK, well, we'll add you to the list.

41:34.360 --> 41:38.360
And if it's a problem, the system administrator can come on and they can request to be taken

41:38.360 --> 41:39.600
off the list again.

41:39.600 --> 41:43.400
Now, one, people will do this just for a laugh.

41:43.400 --> 41:46.240
Two, people will block entire blocks of IP addresses.

41:46.240 --> 41:50.520
If your ISP has given the next address along to someone who's sending junk mail, you could

41:50.520 --> 41:52.640
find you've been blocked through no fault of your own.

41:52.640 --> 41:54.280
You can only de-list from these things.

41:54.280 --> 41:56.200
Most of them say once every 48 hours.

41:56.200 --> 41:57.960
There's about 10 or 12 of these services.

41:57.960 --> 42:00.880
This is why I stopped running my own mail server.

42:00.880 --> 42:05.600
It's because I got fed up of going onto these forms and saying, no, you've blocked the entire

42:05.600 --> 42:07.320
network block again.

42:07.320 --> 42:09.160
And I'm not sending spam.

42:09.160 --> 42:10.240
I'm doing everything right.

42:10.240 --> 42:11.680
Stop cutting me off.

42:11.680 --> 42:13.080
So this system doesn't work.

42:13.080 --> 42:14.520
It's too easy to abuse.

42:14.520 --> 42:17.080
And it kind of relies on your innocent until proven guilty.

42:17.080 --> 42:19.840
But proving you guilty just means someone went, it was them.

42:19.840 --> 42:22.960
And then we're going to block you for the rest of your life unless you beg and grovel

42:22.960 --> 42:24.320
and try and get reinstated.

42:24.320 --> 42:27.680
Let's talk about a better system.

42:27.680 --> 42:32.600
Now there's a thing called SPF, the Sender Policy Framework.

42:32.600 --> 42:36.760
And this is beautiful because it's built on top of the things we had right at the start

42:36.760 --> 42:37.760
of the 80s.

42:37.760 --> 42:39.920
It's built on SMTP and it's built on DNS.

42:39.920 --> 42:45.400
If you've got the Google Admin toolbox and you look up fun with email on their dig toolbox,

42:45.400 --> 42:46.880
you can click through the records.

42:46.880 --> 42:49.160
There's a thing here called TXT records.

42:49.160 --> 42:50.800
And in there, you'll see this record here.

42:50.800 --> 42:56.080
It says TXT, time to live is short lived, and value equals, well, value on this thing

42:56.080 --> 42:57.080
is this.

42:57.080 --> 42:58.320
V equals SPF1.

42:58.320 --> 43:00.840
Version is the Sender Policy Framework version one.

43:00.840 --> 43:05.520
Then I got a rule here that says, OK, this email, that is allowed to send email for that

43:05.520 --> 43:13.360
domain, funwith.email, spf.smtp.com, that's allowed, spf.messagingengine.com, that is allowed.

43:13.360 --> 43:16.720
And anything else, I got a little squiggly thing, says this might be suspicious.

43:16.720 --> 43:17.720
So what the qualifiers there?

43:18.160 --> 43:19.360
Plus means a pass.

43:19.360 --> 43:21.640
This rule matches, you can deliver the email.

43:21.640 --> 43:23.240
Question mark means don't care.

43:23.240 --> 43:26.640
Now, that's not much use in production, but it's really good for testing stuff, because

43:26.640 --> 43:30.800
you can create your SPF records and see what matched without it changing any behavior.

43:30.800 --> 43:33.680
A tilt here is a soft fail, flag it but deliver it.

43:33.680 --> 43:38.040
And a minus, if I put a minus in there, now the plus is the default, so normally you don't

43:38.040 --> 43:40.440
see those, the records actually look like this.

43:40.440 --> 43:44.080
But that minus there, I can put a rule that says, look, if anyone anywhere on the internet

43:44.080 --> 43:48.320
gets an email that says it comes from funwith.email, and it doesn't match that rule, you can just

43:48.320 --> 43:49.320
ditch it.

43:49.320 --> 43:50.320
Like, that's fine with me.

43:50.320 --> 43:51.320
I'm telling you, that's junk.

43:51.320 --> 43:55.120
I guarantee, these are the only people sending email on my behalf.

43:55.120 --> 43:58.640
Now there's a couple of other systems we're not going to go into today, which do public

43:58.640 --> 43:59.640
key cryptography.

43:59.640 --> 44:03.040
There's a thing called a deakim, domain key identified mail, and there's a thing called

44:03.040 --> 44:07.440
demark, which is the same, but it then sends you reports of anyone who's trying to pretend

44:07.440 --> 44:09.600
they are you and spam stuff.

44:09.600 --> 44:13.360
But this idea of building records on top of DNS to manage email, this is getting some

44:13.360 --> 44:14.360
traction.

44:14.360 --> 44:15.960
This is working pretty well.

44:15.960 --> 44:20.720
Now, when we sent that at SMTP transcript earlier, we basically sent a message just

44:20.720 --> 44:21.720
said hello.

44:21.720 --> 44:24.760
Like, once we've thrown the envelope away, we don't know where it came from.

44:24.760 --> 44:25.760
We don't know who sent it.

44:25.760 --> 44:27.040
We don't know who they think they sent it to.

44:27.040 --> 44:28.760
We just know that it said hello.

44:28.760 --> 44:31.960
We want to send messages which are slightly more useful than that.

44:31.960 --> 44:35.520
And so when we connect to our mail server and we get to the point where it says, hey,

44:35.520 --> 44:39.920
data, send us your message, what we're going to do is we're going to send a block of headers.

44:39.920 --> 44:41.120
This is who it's from.

44:41.120 --> 44:42.120
This is who it's to.

44:42.120 --> 44:43.480
This is the subject.

44:43.480 --> 44:44.720
This is the email body.

44:44.720 --> 44:47.360
It's going to say, OK, 250 queued.

44:47.360 --> 44:48.360
We're going to say quit.

44:48.360 --> 44:49.680
It's going to say buy.

44:49.680 --> 44:51.560
And that is going to work brilliantly.

44:51.560 --> 44:55.120
We get nice formatted email, and this works great as long as everything that you have

44:55.120 --> 45:01.600
to say can be expressed in 7-bit ASCII, because SMTP is built on ASCII.

45:01.600 --> 45:06.400
Now 7-bit ASCII was a brilliant idea in the United States of America in 1960s.

45:06.400 --> 45:08.520
So was Richard Nixon and leaded gasoline.

45:08.520 --> 45:13.280
You know, we can do a little better, but backwards compatibility.

45:13.280 --> 45:16.840
You can't ship a mail system which can't send mail to the people who are still in the

45:16.840 --> 45:17.840
old system.

45:17.840 --> 45:25.000
So here in 2023, we are still stuck with 7-bit ASCII as the only way of sending anything

45:25.000 --> 45:27.520
over an email platform.

45:27.520 --> 45:32.920
And so we have to use MIME, the multi-purpose internet mail extensions.

45:32.920 --> 45:37.600
What MIME is, is a way of taking just about any kind of content and turning it into 7-bit

45:37.600 --> 45:41.160
ASCII, sending it over the wire, and rehydrating it at the other end.

45:41.160 --> 45:42.560
Now MIME is actually pretty clever.

45:42.560 --> 45:44.000
It's a very, very elegant system.

45:44.000 --> 45:47.600
So we got our headers from, to, subject, date is this.

45:47.600 --> 45:51.360
Now MIME version 1.0, MIME is supposed to have other versions.

45:51.360 --> 45:56.880
It was supposed to have 1.1, 1.5, 2.0, 3.0, but they never figured out how that was going

45:56.880 --> 45:58.000
to work.

45:58.000 --> 46:03.200
So basically we are stuck with 1.0 being a floating point boolean, that if it's 1.0,

46:03.200 --> 46:06.880
yes, and anything else means this is probably not valid MIME.

46:06.880 --> 46:11.520
Now we're going to throw in a content type here, and say this is a multi-part mixed message

46:11.520 --> 46:13.800
and the boundary string is this.

46:13.800 --> 46:19.400
Now this can be anything you like as long as it doesn't appear in your message anywhere.

46:19.400 --> 46:23.100
We're going to put in a message, now this, this is a multi-part message in MIME format.

46:23.100 --> 46:26.240
This is for old, old email readers that don't know about MIME.

46:26.240 --> 46:29.040
There aren't very many of them around anymore.

46:29.040 --> 46:30.200
Now we get to the good stuff.

46:30.200 --> 46:31.840
So that's the header on our message.

46:31.840 --> 46:35.200
I'm going to put in a boundary, it says we're starting a block here.

46:35.200 --> 46:37.760
And this block is multi-part alternative.

46:37.760 --> 46:41.200
This says we're sending you the same message, but in two or three different ways.

46:41.200 --> 46:43.320
So we've now got a different boundary.

46:43.320 --> 46:47.600
We're going to say, right, this is the text plane version of this email, hello, we're

46:47.600 --> 46:51.960
having fun with email, and then we are going to have the HTML version, hello, we're having

46:51.960 --> 46:54.960
fun with email, this bit is an HTML format.

46:54.960 --> 46:58.000
And then we're going to close out that boundary block, and then we're going to close out the

46:58.000 --> 46:59.000
other one.

46:59.000 --> 47:00.120
So now we've put another container.

47:00.120 --> 47:02.000
So MIME is actually a tree structure.

47:02.000 --> 47:04.880
You can have containers inside, containers inside containers.

47:04.880 --> 47:07.720
And in this one, we're going to say, hey, we're going to do an attachment here.

47:07.720 --> 47:09.320
This is fun with email.png.

47:09.320 --> 47:13.200
It's base64 encoded, because that's seven-bit ASCII safe.

47:13.200 --> 47:14.540
That's the file name.

47:14.540 --> 47:15.980
It should be an attachment.

47:15.980 --> 47:18.960
So this should show up as a little paper clip in your email client.

47:18.960 --> 47:23.000
And then we're going to have this massive, great, big long block of base64 encoded stuff.

47:23.000 --> 47:25.040
Now it's all well and good.

47:25.040 --> 47:26.040
These are standards.

47:26.040 --> 47:28.520
You can go out, you can study them, you can figure out how they work, you can write your

47:28.520 --> 47:30.640
own implementations.

47:30.640 --> 47:34.880
If you are actually building an application that works with any of this stuff, you have

47:34.880 --> 47:40.960
a whole bunch of challenges ahead of you, not least because email is an open standard.

47:40.960 --> 47:46.480
And when you create code to send somebody a message, you have absolutely no idea what

47:46.480 --> 47:48.920
device they are going to be using to look at that.

47:48.920 --> 47:50.800
They might be reading it on Yahoo.

47:50.800 --> 47:53.360
They might be reading it on Outlook or on an Android phone.

47:53.360 --> 47:54.760
They might be using a screen reader.

47:54.760 --> 47:57.640
There is a whole raft of different things out there.

47:57.640 --> 48:02.640
And these days, most email is HTML because HTML looks nice.

48:02.640 --> 48:06.840
And because our marketing teams want us to send HTML emails so we can have buttons and

48:06.840 --> 48:12.160
colors and links and those things in it, HTML email is horrible.

48:12.160 --> 48:16.000
It is one of humankind's terrible, terrible mistakes.

48:16.000 --> 48:20.320
The good news is that there are services out there that mean you don't kind of have to

48:20.320 --> 48:22.960
touch the icky bits quite as much as you used to.

48:22.960 --> 48:27.160
One of these is a thing called the MailJet markup language.

48:27.160 --> 48:33.040
So MailJet is an email marketing and relay company and MJML is their way of writing HTML

48:33.040 --> 48:34.040
emails.

48:34.040 --> 48:36.480
There is another one which is called Foundation, foundation for email.

48:36.480 --> 48:40.560
They don't have a logo but they do have a picture of a squid or a cuttlefish.

48:40.560 --> 48:42.520
So I thought, all right, we will put that in here.

48:42.520 --> 48:46.600
Now fundamentally what these things do is they give you a language which looks a bit

48:46.600 --> 48:48.800
like HTML.

48:48.800 --> 48:51.720
So I am going to write an email and this is MailJet markup language.

48:51.720 --> 48:56.000
So I have got a MailJet head with a preview, I have got a body with a section and a column.

48:56.000 --> 49:00.080
Now this is, it looks like HTML, it is an XML kind of compliant dialect.

49:00.080 --> 49:01.080
It is not HTML.

49:01.080 --> 49:05.440
What we are going to do is we are going to run this through the MailJet compiler because

49:05.440 --> 49:12.920
the HTML that clients actually understand looks like this.

49:12.920 --> 49:16.560
It is a sack of horrors.

49:16.560 --> 49:20.040
If you read this closely, what we have got there is we have got a table inside a table

49:20.040 --> 49:24.360
inside a table and if you are on a Microsoft Outlook or Internet Explorer platform you

49:24.360 --> 49:29.560
get two extra tables for free because the blue comments there are the Microsoft if this

49:29.560 --> 49:33.240
is Microsoft Outlook then include this extra chunk of markup.

49:33.240 --> 49:35.680
Now I know people who used to write this stuff by hand.

49:35.680 --> 49:38.080
I used to write this stuff by hand.

49:38.080 --> 49:41.200
Platforms like MailJet have made the whole thing so much easier to manage.

49:41.200 --> 49:45.280
One of the things that they don't really do is general purpose templating.

49:45.280 --> 49:46.520
They are transpilers.

49:46.520 --> 49:48.280
They have no idea of behavior.

49:48.280 --> 49:50.880
They don't work like a view engine like Razor or something.

49:51.480 --> 49:54.920
What you can do, we are not going to go into the specifics in this talk, but you can have

49:54.920 --> 49:59.760
projects where you take MailJet and when you compile it you turn your MailJet into Razor.

49:59.760 --> 50:04.520
Then at runtime you put a model into your Razor and you get populated HTML with individual

50:04.520 --> 50:06.040
order items and stuff at the other end.

50:06.040 --> 50:09.200
If you want to see how that works, I got some code up on GitHub you can go and poke around

50:09.200 --> 50:10.200
with it.

50:10.200 --> 50:15.200
You get to the end of it and it works on your machine.

50:15.200 --> 50:18.720
Which is kind of pointless because why would you send yourself email?

50:18.720 --> 50:20.000
How do you test this stuff?

50:20.000 --> 50:23.440
If you are developing a system that is going to send emails, there are a couple of rules

50:23.440 --> 50:25.040
that I absolutely live by.

50:25.040 --> 50:31.240
The first one is you want an end point on your website somewhere where you can see what

50:31.240 --> 50:34.000
the email is supposed to look like.

50:34.000 --> 50:39.600
The NDC tickets platform that we use in London and Copenhagen and Porto.

50:39.600 --> 50:42.760
Every single order in that there is a link at the bottom where you can say show me what

50:42.760 --> 50:44.720
that email is supposed to look like.

50:44.720 --> 50:48.320
One this is useful just for being able to check details on something.

50:48.560 --> 50:52.080
When you are designing this stuff, you can just keep refreshing that page because it

50:52.080 --> 50:57.120
is way quicker to reload the page or use a hot reload or web plug-in than to send yourself

50:57.120 --> 51:00.920
an email, wait for it to come through, go to your inbox, open it up, still doesn't look

51:00.920 --> 51:01.920
quite right.

51:01.920 --> 51:02.920
Round we go again.

51:02.920 --> 51:05.200
This gets you to the point where it looks right.

51:05.200 --> 51:07.600
Next tool that I use is the paper cut.

51:07.600 --> 51:11.240
Paper cut is a Windows application that sits in the corner of your screen in your system

51:11.240 --> 51:15.480
notification tray and it is an SMTP server that doesn't send email.

51:15.640 --> 51:20.880
Every email that you send, it intercepts it and it goes, yep, we got it, here it is.

51:20.880 --> 51:23.400
It lets you go through and inspect all the properties.

51:23.400 --> 51:26.520
You can see your message in a browser view there, that's pretty good.

51:26.520 --> 51:28.200
You can see your message headers.

51:28.200 --> 51:32.760
What exactly got filled in by the code that you were using to generate your mail messages?

51:32.760 --> 51:37.760
You can see the body, you can see the individual sections, how the mind format breaks down.

51:37.760 --> 51:40.120
You can see the raw message content for the whole thing.

51:40.120 --> 51:43.520
If something doesn't look right, this is a great tool for diving in and figuring out

51:43.520 --> 51:44.800
how that works.

51:44.800 --> 51:46.800
You got works on my machine in a browser.

51:46.800 --> 51:50.520
You got works on my machine with an SMTP relay.

51:50.520 --> 51:53.320
Let's see if it actually works on the internet.

51:53.320 --> 51:58.720
Mail Trap is a fantastic bit of kit that I've used on dozens of projects over the years.

51:58.720 --> 52:02.800
Mail Trap, again, it pretends to be a mail server, so you send your mail via Mail Trap

52:02.800 --> 52:06.640
and instead of sending it, it intercepts it, gives you some of the same features that paper

52:06.640 --> 52:07.640
cut does.

52:07.640 --> 52:11.120
You can see different representations, but then it's got tools like this.

52:11.120 --> 52:14.000
That's your HTML, that's your HTML source.

52:14.040 --> 52:15.160
That's your raw message body.

52:15.160 --> 52:17.080
This is your spam analysis.

52:17.080 --> 52:20.400
This is all the reasons why that email might get picked up as junk.

52:20.400 --> 52:24.760
Now, if you look at this one real closely, I got a .8 on there, and I got a whole string

52:24.760 --> 52:30.840
of zeros, but the .8 is because the domain name that I sent it from is less than 28 days

52:30.840 --> 52:33.680
old, and this is the kind of thing they pick up on.

52:33.680 --> 52:37.120
If you're warming up a project for a big client who's going to send a lot of email, you need

52:37.120 --> 52:41.720
to start sending email early because it can take a couple of months for their outgoing

52:41.760 --> 52:45.960
relay, that domain name and everything, to be trusted and established by services all

52:45.960 --> 52:46.960
over the internet.

52:46.960 --> 52:48.920
I'm going to do the HTML check on here now.

52:48.920 --> 52:52.080
This is going to say, look, this is the stuff that you ended up using in that email, and

52:52.080 --> 52:54.640
this is where it's not going to work.

52:54.640 --> 52:58.120
You've got a thing in there, so Gmail's mobile webmail has flagged two issues that

52:58.120 --> 52:59.920
won't render properly on that.

52:59.920 --> 53:04.960
All the way down to AOL and IOS and the fastmail, desktop webmail, all these kind of platforms.

53:04.960 --> 53:08.280
Now, let's assume we have done our due diligence.

53:08.280 --> 53:09.760
We've tested all these platforms.

53:09.800 --> 53:14.200
We've designed the email, the client signed it off, and we've tested it on Gmail, IOS,

53:14.200 --> 53:17.840
Android, Outlook, Zoho, Proton, Fastmail, AOL, Yahoo, Thunderbird, Yudora, Vivaldi,

53:17.840 --> 53:21.680
Mail, and Pine, and then we get that WhatsApp from the client going, the email doesn't look

53:21.680 --> 53:23.680
right, and you're like, what?

53:23.680 --> 53:32.560
Just send me a screenshot, and they send you this, and you're, ah.

53:32.560 --> 53:38.880
I absolutely believe that we all have the right to consume digital media in a format

53:38.880 --> 53:46.240
of our choice, using our chosen fonts, color schemes, devices, layout, screen reader accessibility,

53:46.240 --> 53:47.240
whatever.

53:47.240 --> 53:52.760
I also think that dark mode email is an eldritch horror that should never have been allowed

53:52.760 --> 53:53.760
to live.

53:53.760 --> 53:56.560
I want to find a friend of yours who's a graphic designer.

53:56.560 --> 54:02.560
I want you to ask them to design you a book cover or something, and then mention in the

54:02.560 --> 54:05.720
brief, oh, yeah, by the way, we don't know yet if it's going to be on black paper or

54:05.720 --> 54:06.720
white paper.

54:06.720 --> 54:07.720
Is that a problem?

54:07.920 --> 54:10.480
Because they're probably going to slap you.

54:10.480 --> 54:15.200
Because the first thing you think about when you design things like marketing collateral

54:15.200 --> 54:16.520
is what are we going for here?

54:16.520 --> 54:19.800
Is this like dark with light, or is this light with dark?

54:19.800 --> 54:23.280
Giving the client control over that on something like email just opens you.

54:23.280 --> 54:28.280
Now there are CSS rules and selectors that are supposed to let us do multiple versions

54:28.280 --> 54:29.280
of everything.

54:29.280 --> 54:31.080
They don't actually work terribly reliably.

54:31.080 --> 54:35.960
They're getting better, but the situation we have now is if you've got transparent PNGs

54:36.000 --> 54:39.680
in your email, you just need to come up with something that works on both.

54:39.680 --> 54:42.440
Often if it works on both, it doesn't look great on either of them.

54:42.440 --> 54:46.200
You're not having to put little outlines around your logo so they're still visible and they

54:46.200 --> 54:49.200
don't disappear into the background.

54:49.200 --> 54:55.200
This is, you know, I find it immensely frustrating as a developer whose job is to maintain and

54:55.200 --> 54:59.880
support these kinds of things, but I also think it's incredibly healthy.

54:59.920 --> 55:06.120
The reason why so many of these things exist, validating email and is this email address

55:06.120 --> 55:07.120
valid?

55:07.120 --> 55:09.080
Email is a moving target.

55:09.080 --> 55:10.080
It's not fixed.

55:10.080 --> 55:11.080
Nobody controls it.

55:11.080 --> 55:15.840
It isn't like someone says email version two will be active as of today.

55:15.840 --> 55:21.160
It is a distributed federated system where different people are free to implement parts

55:21.160 --> 55:24.240
of that protocol, however works for them.

55:24.240 --> 55:25.760
They do what works for their systems.

55:25.760 --> 55:27.080
An email address is valid.

55:27.080 --> 55:28.080
It worked yesterday.

55:28.080 --> 55:30.480
That doesn't mean it still works today.

55:30.480 --> 55:33.760
Email that rendered properly last week may not render properly this week.

55:33.760 --> 55:36.960
Something that didn't work last week, someone might upgrade their client.

55:36.960 --> 55:38.320
It works suddenly.

55:38.320 --> 55:44.680
And as challenging and frustrating as this is as a developer, I love it because no one

55:44.680 --> 55:46.600
can mess with email.

55:46.600 --> 55:50.360
Zuckerberg and his cronies can't come along and kick you off email the way they can kick

55:50.360 --> 55:55.160
you off WhatsApp or kick you off Instagram or Facebook or get you banned from Twitter

55:55.160 --> 55:57.520
or you're not allowed to use Signal anymore.

55:57.520 --> 56:01.840
I can set up a server and you can set up a server and we can talk to each other.

56:01.840 --> 56:05.680
And we can send each other email using open standards and open protocols.

56:05.680 --> 56:10.400
And it is one of the last systems left which allows us to do that without a multinational

56:10.400 --> 56:14.640
corporation wanting to harvest our data, verify our accounts, make sure we are who

56:14.640 --> 56:19.560
we say we are, use algorithms to sell crap to us and throttle the whole process if it

56:19.560 --> 56:21.440
decides it doesn't like us.

56:21.440 --> 56:26.400
Now that is where we are going to end the version of this talk that is going on to YouTube.

