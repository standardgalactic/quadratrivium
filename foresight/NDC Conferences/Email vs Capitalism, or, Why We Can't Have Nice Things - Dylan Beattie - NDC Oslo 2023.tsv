start	end	text
0	5000	Hello, NDC Oslo.
5000	17160	I'm Dylan, I'm going to talk to you about email because email is kind of important, right?
17160	19960	You ever get the thing where you can't remember your password?
19960	22320	So you click forgotten password, they send you an email.
22320	25600	You get locked out of your account, you click the button, they send you an email, you want
25600	29680	to go to sign into Microsoft Azure and they say, hang on, we just need to check, it's
29680	30680	really you.
30680	32240	How do they check it's really you?
32240	33320	They send you an email.
33320	36160	You sign up on a new service, they're like, we want to make sure that you're not a spam
36160	40680	bot or some kind of, you know, evil nefarious internet criminal overload, we're going to
40680	43680	send you an email and you can use the email to verify it.
43680	50080	So email is a really, really important component in the fact that any of the stuff that we
50080	55020	do online ever actually works at all.
55020	57720	So we're going to do a little experiment.
57720	61120	We're going to go here.
61120	64800	Now what I'd like all of you to do, you're going to go to that web address and you are
64800	67120	going to follow the instructions.
67120	70240	Now there is a button that's going to appear on your phone screen that says, don't press
70240	71600	this button yet.
71600	76000	Do you know what that means?
76000	79800	There is a saying that if they wrote on a button, do not press this button or it will
79800	83760	destroy the universe, the paint would not be dry before a human being had slapped the
83760	85240	button.
85240	86840	Do not press the button.
86840	89800	What I want you to do is to follow the instructions on the screen.
89800	91160	There we go.
91160	92760	Let's bring up our live update.
92760	93760	Someone has matched the button.
93760	98080	That little yellow at sign there, that's somebody who can't read the documentation.
98080	100240	And it's written in large, friendly letters.
100240	103160	How evil can it be?
103160	105560	So we're going to just let that rack up a little bit.
105560	107920	Look at that.
107920	108920	Look at that.
108920	110160	Someone has already caused an error message.
110160	111560	Well done.
111560	112560	Congratulations.
112560	113560	There we go.
113560	114560	Look at that.
114560	116000	Let's go through the process.
116000	119840	Most of you, it's good to see every little white dot on that, that's someone who is following
119840	120840	the instructions.
120840	122840	Now we have to press the button.
122840	123840	No.
123840	124840	Wait.
124840	125840	We have to stand up.
125840	126840	Wait.
126840	127840	No.
127840	128840	No.
128840	129840	No.
129840	130840	No.
130840	131840	No.
131840	132840	No.
132840	133840	Stand up.
133840	134840	The instructions say you stand up.
134840	135840	So you stand up.
135840	136840	Stand up.
136840	137840	Stand up.
137840	138840	Stand up.
138840	139840	Stand up.
139840	140840	Stand up.
140840	141840	Stand up.
141840	142840	Everyone standing up.
142840	143840	Standing up.
143840	144840	Right.
144840	148280	So what we're going to do, I'm going to count down from five, and when you get to zero, you're
148280	150960	allowed to press the button.
150960	162720	Five, four, three, two, one, press the button, and we're going to send you an email.
162720	167360	And when we do, you are going to go and check your inbox, and when you get the email, follow
167360	176880	the instructions in the email.
176880	177880	All right.
177880	178880	I see a couple going green.
178880	180120	I see a couple going pink.
180120	181280	Some of the stuff is getting through.
181280	183640	Some of the stuff is going to junk mail.
183640	184800	Some of it is still queued.
184800	186720	Some of it is still sent.
186720	190280	The little black ones there are probably because I've pissed off every email provider on the
190280	194200	planet doing the research for this talk, and some of them have decided that they are just
194200	196680	not going to talk to me anymore.
196680	202080	Are we getting a fair few of those going through?
202080	207400	Now it's around about now that you've been waiting long enough that if this email was
207400	211720	like your two-factor authentication to get into Azure to fix a problem in production
211720	215520	or the password reset so you can get into your Gmail to get your damn plane ticket because
215520	218560	you need to get to the airport, you'd be getting a little like, why does an email work this
218560	220560	should have arrived by now?
220560	225200	Well, friends, I have some very distressing news for you.
225200	228080	Everything is working absolutely fine.
228080	231120	Those of you who are still standing up, bear with me one more second.
231120	236640	This is the SMTP specification, the latest version, October 2008, about how we should
236640	241160	try to deliver email, and what it says is if it doesn't work first time, you should wait
241160	249600	at least 30 minutes, and then you should keep trying for four or five days before you finally
249600	251560	decide that the email didn't work.
251560	255000	Now anyone who didn't get the email, you are welcome to come down the front at the
255000	259740	end and you can get one of these, the sticker that should have been an email that I've got
259740	263400	some of these printed out here, saying take all of those.
263400	267640	These are the special NDC Oslo editions of this, so they won't look like this ever again.
267640	271680	Now I'm going to talk to you about email and I'm going to talk to you about why we have
271680	276520	ended up with this weird situation where the spec says that an email can take five days,
276520	279240	but we built the internet on the fact it takes about 15 seconds.
279240	280600	How did we get here?
281480	286800	My credibility, I guess, my expertise in the field of email, it's something I've been
286800	288360	working with for my entire career.
288360	296800	In 2002, when the internet had a connection wizard, one of my first big professional projects
296800	302200	I ever worked on was a project for this company, Spotlight is a British directory of show business
302200	306840	job opportunities for actors and actresses, all those kinds of things.
306840	310280	I built an email-based job information service.
310360	313760	If you were making a movie and you needed actors to be in your movie, you could go on
313760	315480	Spotlight and you could send out an email.
315480	320120	Now this was built in classic ASP and I had a for loop and what it would do is it would
320120	322920	send an email and then it would response.write a dot.
322920	326440	So you'd get a screen that went dot, dot, dot, dot, dot, dot, dot, and then at the end
326440	328720	we'd response.flash and we'd redirect.
328720	332040	It sent about 200 emails a day, it was clunky as hell, but the system before that was built
332040	333800	on fax machines.
333800	336120	So this was a pretty neat idea.
336120	339920	It was also a spectacularly successful product.
339920	345800	It went from 200 emails a day to 500 to 1,000 to 2,000 to 5,000.
345800	351360	By the time I left Spotlight in 2018, this system was sending a quarter of a million
351360	353360	emails out every day.
353360	356880	And that's not a quarter of a million copies of the same newsletter, it's a quarter of
356880	360320	a million unique individual personalized emails.
360320	363320	Now there was an interesting phenomenon that we noticed.
363320	367280	We catered mainly to the English speaking show business market.
367280	372040	In London, about two o'clock every afternoon, show business would get back from its nice
372040	376320	boozy lunch in the pub, sit down and go, I should probably send out some emails.
376320	377560	What do you think, Brian?
377560	380760	And they'd go on Spotlight, they'd bang in a couple of things, they'd send us out.
380760	385920	This happened at the same time as New York and Broadway had just finished their latte
385920	391360	and were getting ready to get set into a solid day's work, which was the same time that Hollywood
391360	395960	and Los Angeles have finished their power breakfast and started yelling at their assistants.
395960	400160	So when I say a quarter of a million emails a day, most of them went out in a three hour
400160	402040	window every afternoon.
402040	407440	That is a sustained rate of about 10 to 12 emails per second for three hours every week
407440	410000	day for more than a decade.
410000	416280	Now you probably have a picture in your head of what a professional actor looks like.
416280	419400	Most of them don't look like the ones you see on TV.
419400	423720	The ones you see on TV are the ones who have made it because they have a job right now.
423720	428680	The average professional actor looks like this because they're at home waiting for their
428680	432040	next audition and they are sitting there and they're refreshing their email.
432040	435480	Now some of you might have had complaints like companies you worked at where you've sent
435480	437640	email and people have complained that you've sent them email.
437640	442600	Have you ever had someone to phone you to complain that you hadn't sent them email?
442600	445160	Because we used to get people ringing out going, I haven't had any emails for a couple
445160	446160	of hours.
446160	447160	Is everything all right?
447160	449360	And we'd be like, well, we think so.
449360	451360	Maybe there's just no work for you today.
451360	455040	But we had to answer those calls and we had to be able to explain what was going on.
455040	461160	So my team and I got incredibly good at understanding everything there was to know about email delivery.
461160	462160	How does it work?
462160	463160	Why does it work?
463160	464160	Why might it fail?
464160	467800	Now the whole time this is going on, because I'm an idiot, I'm running an open source mail
467800	469640	server for me and all of my friends.
469640	473960	So DylanBT.net, all the email ran on an old Hewlett Packard workstation that was locked
473960	477920	in a server cupboard somewhere for about 10 or 15 years.
477920	482520	Now I eventually stopped doing that and you'll find out why in the course of the talk.
482520	486600	But then at the start of this year, who was at NDC London?
486600	488480	I was, yeah.
488480	493760	Some people who very nearly weren't were people who worked for a company I won't name whose
493760	498400	corporate email provider switched to a new spam filtering service the week before the
498400	503960	conference and that spam filtering service, MimeCast, decided that SendGrid was sending
503960	504960	junk.
504960	508920	And so all of their NDC conference tickets went to junk and we had to kind of jump in
508920	513360	and figure out how did these people not get the tickets they'd paid money for that were
513360	515200	sent directly to them.
515200	518800	And I thought there might be an interesting talk in this, because lots of us build systems
518800	524240	that send email and lots of us don't really understand all the weird quirks of how it
524240	525240	works.
525240	529440	So email is older than networks.
529440	534240	The first computer that kind of really got any kind of traction was this thing, the compatible
534320	537800	time sharing systems, about 1961.
537800	541720	And you could send mail on this thing, but send as a misnomer because when you sent mail,
541720	543640	the mail didn't go anywhere.
543640	548400	It was the equivalent of leaving post-it notes on a really expensive refrigerator because
548400	552240	this computer was shared between 60 or 70 different researchers.
552240	556000	So when your colleague came to work the next morning and logged into their terminal, you'd
556000	557000	left them a note.
557000	559520	That was the first use of electronic mail.
559520	564560	This kind of went on for a couple of years and we're going to skip forward to 1969.
564560	570360	Now if the United States of America was a Netflix show, 1969 would be a season finale.
570360	571360	Big budget.
571360	572360	They pulled out all the stops.
572360	574760	They did lots of really interesting stuff.
574760	577160	69 was the year that people walked on the moon.
577160	579440	It was the year the Boeing 747 first flew.
579440	583000	It was the year the Lockheed SR-71 first flew.
583000	587640	It was the year of Woodstock and the summer of love, all that kind of stuff.
587640	592440	And it was the year that the ARPANET was invented.
592440	594880	Now there were networks before the ARPANET.
594880	600360	The ARPANET was the Advanced Research Projects Agency Network and it looked like this.
600360	603120	This is a hand-drawn sketch of the entire network.
603120	606840	Now before this, there was a network, but it was a kind of ad hoc network of computers
606840	611120	that would dial each other up once or twice a day and they'd swap messages and things.
611120	616040	But when the ARPANET came along, for the first time, there was an idea of being connected
616040	617080	to the net.
617080	623240	This was the network and if you were on it, other people could send messages to you.
623240	628920	Now modern email is a culmination of probably hundreds of people working on solving smart
628920	631960	problems over decades on all kinds of platforms.
631960	636360	But one person whose innovation is still a significant part of the way we work with it
636360	637360	was this guy.
637360	639440	It's Ray Tomlinson.
639440	645960	And he was working on an ARPANET mail system in 1971 and Ray invented AT.
645960	651440	Ray is the person who went, hang on, if we know the user's name and we know the ARPANET
651440	655400	host where they host their email, we could put an AT in the middle because it's Alice
655400	656400	at the machine.
656400	659520	Now you'll notice that the host name there is just MIT Multics.
659520	660680	It's not a dot anything.
660680	664520	It's not MITMultics.com, it's just MIT Multics.
664520	667400	Because the network was so small that computers just had a name.
667400	670920	And if you bought a new computer, you wanted to get on the net, you'd give it a name and
670920	672640	then you'd talk to Jake.
672640	677400	This is Elizabeth Feynler who everyone called Jake for some obscure reason.
677400	683680	She ran the network information center at Stanford from 1972 to 1988 and she maintained
683680	685720	the host's file.
685720	691440	The definitive host's file of the entire internet and every year or two she and her
691440	695880	team would print it because you could buy a print out of the host's file.
695880	700640	And this listed all of the machines connected to the ARPANET along with the person responsible
700640	706880	for maintaining them, telephone numbers, street addresses and email addresses.
706880	709320	Now there are two kinds of people in the world.
709320	712800	There are the people who see technology and go, hey, this is really useful.
712800	716160	And there are the people who go, hey, those people think this is useful, maybe I can use
716160	718680	it to get rich.
718680	721240	Let's meet Gary Turk.
721240	725200	Now Gary Turk, I punched his name in a Google to find a photo.
725200	728280	The guy's still alive, he's still working, this is his LinkedIn page.
728280	732160	You could connect with him after this talk if you really wanted to.
732160	737560	But in 1978, Gary Turk was working for the Digital Equipment Corporation.
737560	742320	He was a sales rep and his job was to sell these, the DEC System 20.
742320	745440	Now this thing had built in ARPANET protocol support.
745440	748080	It was like you didn't have to do anything special, you could plug it into a network
748080	749640	and it would just work.
749640	753760	And rightly or wrongly, Gary thought, well, I reckon people who are on the ARPANET might
753760	756440	be interested in knowing about this computer.
756440	759080	And Digital didn't have a whole lot of sales going on on the US West Coast.
759080	763480	They had a big office on the East Coast, but West Coast, California, Portland, those kind
763480	766400	of places, they didn't really have much of a presence.
766400	771960	So he got his assistant to go through the ARPANET directory and type in the email addresses
771960	779520	of everybody on the American West Coast who had an email address, 393 of them.
779520	782560	And put them, now at this point, they overflowed the header field.
782560	788240	So all the people who got this email got an email which started with about 250 other
788240	793080	people's email addresses and then right down at the end of it, it says, hey, we invite
793080	798560	you to come and see the DEC System 2020 and we'll be giving presentations.
798560	801000	Now has any of you ever gotten trouble at work?
801000	803200	Like maybe your boss said, please don't do that again.
803200	805040	Or maybe your boss shouted at you.
805040	807560	Or maybe the police shouted at you.
807560	809280	Or maybe the police shouted at your boss.
809280	813760	Have us grow up so bad that the United States military yells at your boss?
813760	816440	Because that's what happened.
816440	823040	Major Raymond Chehor, who was the US Air Force major in charge of the ARPANET, because this
823040	827560	was run by the United States Air Force, you know, US military project, basically called
827560	830040	Gary's boss and said, you do not do this ever again.
830040	832200	We're very sorry.
832200	837600	Now there's maybe a little window right about then when we could have fixed the problem.
837600	842520	But everyone just went, yeah, don't send spam or the American Air Force will shout at you.
842520	843520	We're clear.
843520	844880	And everyone went, yeah, we understand.
844880	845880	We'll be good from now on.
845880	846880	We'll be nice.
846880	847880	We'll behave.
847880	850000	We're going to fast forward a little bit now.
850000	854640	Now, you know, that demographic studies of populations kind of, they group people into
854640	855640	generations.
855640	856640	There are the baby boomers.
856640	860040	And then there's, there's Generation X. And then there are the millennials.
860040	863680	And then there's Generation Z. And then there's Gen Alpha or whatever they're called, and
863680	864680	the new one.
864800	869440	And there's this little gap in the middle, the microgeneration.
869440	873320	We're the people who got email at the same time as everyone else in the world got email
873320	874320	for the first time.
874320	879960	Now, if you are Generation X, it means you were born before Star Wars.
879960	884760	And if you are millennial, it means you were born after Return of the Jedi.
884760	888680	And the people in the middle are the millennial Falcons.
888680	890680	Represent.
890680	893680	How many of my fellow Falcons we got out there today?
893680	894680	Awesome.
894680	898080	Now, the millennial, it was kind of this weird microgeneration.
898080	901360	We're the ones who like grew up in a world where we had broadcast TV and our first job
901360	902560	we had email.
902560	907160	So we kind of had the analog childhood and then our adulthood has been completely digital.
907160	911120	But it turns out that the internet is a millennial falcon.
911120	915440	Because when Star Wars came out in 1977, there was the ARPANET.
915440	919320	It used NCP, the network communication protocol.
919320	923040	Everything was managed by the host's file, which you had to go and get a copy of from
923040	924640	Stanford University.
924640	925920	And Junk Mail didn't exist.
925920	926920	No one had done that yet.
926920	932120	When Return of the Jedi came out in May 1983, the ARPANET had become the internet.
932120	933440	NCP was gone.
933440	934920	TCPIP was everywhere.
934920	936160	We're all running on this.
936160	937560	DNS had been invented.
937560	940520	We had a hierarchical domain name addressing system.
940520	943280	And Junk email was very much a thing.
943280	947800	Now, one of the things invented in the early 80s there was SMTP.
947800	950240	It was created by this guy, John Postel.
950600	955920	SMTP was published in 1982 and has been incredibly successful.
955920	961800	Now, the problem with successful systems is you need to maintain an obscene level of backwards
961800	962800	compatibility.
962800	967240	If you bring out an email system at any point in the last 40 years that doesn't talk to
967240	971200	all the other people who are already using email, no one's going to use it.
971200	973520	Because it's useless because you can't communicate.
973520	981040	It is the equivalent of going out and buying a 2022 MacBook M1 or M2 Pro and finding that
981040	986440	it has a cassette player so that you can still load your PowerPoint slides from 1982.
986440	990680	This is how backwards compatible SMTP systems and relays have to be.
990680	996120	And one of the things defined in that request for comments, RFC821, was the format of an
996120	997120	email address.
997120	999000	Now, quick show of hands.
999000	1002600	Who's written code to validate email addresses?
1002680	1005320	Keep your hands up if you used a regular expression.
1005320	1006320	Yeah.
1006320	1010560	So, I mean, validating the encoders kind of, but we know an email address when we see
1010560	1011560	one, right?
1011560	1014000	Like, we're looking at our friends in the Avengers.
1014000	1015920	We got IronMan at Avengers.com.
1015920	1018240	That looks valid, right?
1018240	1021200	And Spider-Man, well, yeah, that's probably going to work.
1021200	1023520	T'Challa at the Avengers.com.
1023520	1024760	That's going to root, obviously.
1024760	1026640	Nothing wrong with that.
1026640	1027640	Rocket plus Groot.
1027640	1029760	I'm not sure now.
1029760	1033600	What about Bruce the Hulk banner at Avengers.com?
1033600	1037200	What about, no, Vision doesn't give a shit about DNS, Vision's going to use IPv6, hard
1037200	1043800	coded literals in square brackets, boom.
1043800	1048320	How many of these would your email validation routine have accepted?
1048320	1050520	They are all valid.
1050520	1056640	These addresses are all completely valid email addresses according to the RFC specification
1056640	1059440	for internet email addresses.
1059440	1063720	So maybe validity is not really the question we should be asking ourselves.
1063720	1067040	We're going to pull some email addresses apart and see how they actually work.
1067040	1072000	Now, an email address has a domain part, and this controls where it's going.
1072000	1077440	And it has a local part that controls what happens when it gets there.
1077440	1080840	So what we're going to do, we're going to walk through the process of actually speaking
1080840	1084120	the raw protocol that we use to send email addresses.
1084120	1087160	So I'm going to use a tool called NSLookup here.
1087160	1089960	All kids use dig, because dig is what runs on Linux and everything.
1089960	1093480	But dig doesn't come with Windows, so this is NSLookup, which is available on most platforms.
1093480	1098920	I'm going to do an NSLookup, name server lookup, and I'm going to say, hey, I want to know
1098920	1102280	Mx, set type equals Mx, mail exchanger records.
1102280	1109000	I want to know which computers on the internet are the mail exchangers for this domain, funwith.email.
1109000	1113040	And it's going to say, oh, here you go, look, SMTP1, SMTP2.
1113040	1115120	There's a number in here called an Mx preference.
1115120	1119320	Now some people call this priority, that is a stupid name for it, because a low number
1119320	1121600	is a higher priority.
1121600	1123440	Preference number 10 means try this one first.
1123440	1125880	If you can't get through to 10, go to preference number 20.
1125880	1128480	The bigger number means wait, try that one later.
1128480	1130120	So that's the computer we need to talk to.
1130120	1135640	We're going to talk to SMTP1, so I'm going to telnet into that on port 25, and it's going
1135640	1137680	to say, hey, nice to see you.
1137680	1144400	And I'm going to say, hello, I'm dylanbt.net, and it's going to say 250, I'm smtp.funwithemail.
1144400	1150560	And I'm going to say, I have mail from dylanbt.net, and it is going to say 250, OK.
1150560	1154440	And I am going to say recipient2, hello, atfun.
1154440	1159120	Now this is where it gets interesting, because that recipient2 is the point where we say
1159120	1163320	to that system, this is who we want to talk to.
1163320	1167760	Now I wanted to find out what actually works, like never mind what the instruction manual
1167760	1170480	says, I don't care what's in the spec, what actually works out here.
1170480	1176040	So I went on Google, and I Googled the best email providers for doing stupid experiments,
1176040	1178200	and then I went, no, no, no, let's go with something.
1178200	1182360	We're going to go with best business email hosting, and I trolled through a bunch of
1182360	1183360	search results.
1183360	1188680	Now one that I just want to highlight, because it is the most wonderful piece of hallucinatory
1188680	1195640	journalism I've ever seen, this article from PC Magazine in 2020, the best hosted email
1195640	1204920	providers are Salesforce, Microsoft Office 360 users should get their email from GoDaddyWeb
1204920	1211400	hosting, Zoho Loyalists should use Zoho Mail, and the best email for Microsoft organizations
1211400	1214560	is Teams.
1214560	1218920	In case you're not familiar with business email hosting, this is like you go into Cars Magazine,
1218920	1221960	you say, what are the best economy family cars in 2020?
1221960	1226440	And it says, well, there's the Hyundai Tucson, there's bicycles, there's a submarine, and
1226440	1232360	there's penguins, and you're like, yeah, right.
1232360	1236920	But I also found quite a lot of good solid articles that were recommendations for which
1236920	1242360	companies people use in 2023 to host email, and so I picked a bunch of those.
1242360	1248560	Now disclaimer here, this is not a review of business email services.
1248560	1253760	I do not want anyone here going away and choosing an email platform because of something
1253760	1256000	that I said in this talk.
1256000	1261280	What I'm doing here is the equivalent of testing cars by filling them with gravel, setting
1261280	1266240	them on fire, driving them off a bridge and seeing if they explode before they sink.
1266240	1270800	It's interesting, every provider I'm going to show you is a rock solid platform.
1270800	1275360	They all do email really, really well until some idiot like me comes along and tries to
1275360	1278560	poke them with a stick.
1278560	1282480	So I identified from looking at all these articles, the big players right now, Office
1282480	1286240	365 and Google are the ones that really kind of dominate the space.
1286240	1290000	Zoho have a lot of support from people who don't want to use the big platforms.
1290000	1293800	Proton mail is very popular because they have really strong commitment to security.
1293800	1297680	And Fast Mail is a, so disclaimer, Fast Mail is a company I've used to host my mail for
1297680	1298680	years and years.
1298680	1303240	Personally, I love them, I have no problems with them, but I'm just a regular paying customer
1303240	1304240	of all these services.
1304320	1306880	No, I haven't talked to them, there's no endorsements.
1306880	1311680	So I set up email domains for every single one of those, set up all the DNS records,
1311680	1313640	all the anti-spam records, everything.
1313640	1316360	And then I went through to see how many email addresses I could register.
1316360	1318920	So let's try to chalera with the apostrophe in it.
1318920	1321200	Google, yep, no problem.
1321200	1324400	Office 365, yeah, no problem.
1324400	1329040	Go on to Zoho Mail, it let me register it.
1329040	1335120	So then when I click on it, apparently they didn't tell the people who built their front
1335120	1338080	hand that there might be apostrophes in the JSON and the email addresses.
1338080	1340840	So we're going to give that one a frowny face.
1340840	1343600	Proton mail just says, no, you can't have that, not allowed.
1343600	1347960	And I go on to Fast Mail and I says, please check this, so no, can't do that, not allowed.
1347960	1349800	Let's try Rocket Plus Groot.
1349800	1353480	Now I go on to Gmail and I try and create a mailbox and it says you can't contain special
1353480	1354480	characters.
1354480	1356280	So it looks like you can't do that.
1356680	1360600	Google has a weird feature and it's quite a neat feature.
1360600	1363760	If you have a bunch of email addresses, so we've got Iron Man at Gmail, we've got Iron
1363760	1367720	Man plus Jarvis, we've got Iron Dot Man, we've got Iron Dot Man plus Jarvis, we've got
1367720	1370880	I dot r dot dot dot dot dot dot at email dot com.
1370880	1376880	These all go to the same place because Google decided they don't want some situation where
1376880	1380440	I'm Dylan Beattie and you're Dylan Dot Beattie and we're different people.
1380440	1384080	They went, that is too complicated for humans to understand.
1384120	1387200	The plus thing, the nice thing about that is it's preserved, so when you sign up for
1387200	1392240	like a mailing list, you could be like Dylan Dot Beattie plus NDC at Gmail dot com.
1392240	1396040	And then if that shows up in a data breach, I know which company the breach came from.
1396040	1397760	So this is plus tag tracking.
1397760	1400680	This is a Google feature, it's not part of an email standard, but it is worth knowing
1400680	1402960	about if you're working with mail deliverability.
1402960	1406840	So actually Rocket Plus Groot on Gmail is kind of a smiley face.
1406840	1411000	Microsoft 365 says no, you can't have that, so it's a cross for them.
1411040	1414120	Zoho Mail says invalid username, all right, fair enough.
1414120	1416160	Proton Mail, nope, you can't have that.
1416160	1422400	And Fast Mail says this name's already taken, which it isn't because I just registered that
1422400	1426720	domain, it's not taken, but yeah, we're going to give that one a sad face.
1426720	1432120	Now Bruce Banner in quotes, the email spec says that you can have a quoted local part
1432120	1433640	containing spaces.
1433640	1440120	There is not a single provider on the planet that I found which will let you create a mailbox.
1440120	1443560	So then I thought, all right, well enough fun with the sensible addresses.
1443560	1447200	What about single apostrophe at?
1447200	1454320	Google, yeah, Microsoft, yeah, Zoho Mail, no, Proton Mail, no, Fast Mail, no.
1454320	1456640	What about single hyphen?
1456640	1459320	Now this is where Google says email cannot be a single hyphen.
1459320	1461280	I'm like, what about a double hyphen?
1461280	1464720	And Google goes, oh yeah, you can have that one.
1464720	1466440	That's fine.
1466440	1470640	Because 365 minus at is fine, that's legitimate.
1470640	1474520	Zoho says no, Proton says no, that name is already taken.
1474520	1475520	Again it's not.
1475520	1478560	I don't know what the validation thinks is going on here.
1478560	1480680	Fast Mail says no.
1480680	1483320	So this is the set of aliases that I managed to create there.
1483320	1486240	This is the Google admin for gg.funwith.email.
1486240	1490440	To challenge in, single apostrophe is in, minus, minus is in, underscore is in.
1490440	1493000	Last one I wanted to try was just underscore at.
1493000	1499600	Zoho says yes, Outlook says yes, Zoho says, well, Zoho says, I put it in, I click add,
1499600	1504800	and it says, ass 101, and I'm like, I wonder where that came from, so I open up the Chrome
1504800	1510120	network inspector, I take the request apart, and it says, status code 200, ass 101.
1510120	1512920	Now where I come from, 200 means okay, right?
1512920	1516680	So I don't know why it's red, but we're going to go with, we're not quite sure what happened
1516680	1517680	there.
1517680	1524000	Finally, underscore at fm, Fast Mail just says, great choice.
1524000	1527200	So there we go.
1527200	1531960	So next I thought, all right, never mind creating mailboxes, I'm going to create a catchall
1531960	1532960	address.
1532960	1536040	I'm going to create an address that says anything at this domain should go to that person over
1536040	1539840	there, anything that's deliverable, because I wanted to see if I could push the limits
1539840	1542080	of what spec email addresses would actually do.
1542080	1545680	That's where I hit a little bit of a problem, because I went on a Gmail and I tried to send
1545680	1550840	an email to, quote, Bruce space banner, quote, and Gmail says no, Gmail says you can't send
1550840	1555520	mail to that person, it's not recognized, and that's just so it doesn't exist.
1555520	1557440	Proton mail, their interface said the same thing.
1557440	1561360	Email address format is not valid, I'm thinking, hmm.
1561360	1566840	Now what we can conclude from this, is an email address valid?
1566840	1569920	Does it contain at least one at sign?
1569920	1579360	Because if it doesn't, no, but if it does, then it depends.
1579360	1583560	Can an email address be case sensitive?
1583560	1588960	The answer is yes, if you're evil.
1588960	1594200	When SMTP was introduced in the early 1980s, the way that it got rolled out was most people
1594200	1599600	who already had a system that had mail added an SMTP connector to it.
1599600	1605120	And most of those systems ran on Unix, and Unix has a case sensitive file system, and
1605120	1610600	it means that your mailbox has the same name as your mailbox file, which has the same name
1610600	1615240	as your user, which means that Alice with a little a and Alice with a big a could be
1615240	1618040	different people on the same Unix machine.
1618040	1622560	And so when you connect an SMTP relay, the spec says that once it gets to where it's
1622560	1627440	going, if the local administrator of that system has made it case sensitive, that should
1627440	1629080	be delivered intact.
1629080	1634160	You should never ever modify the case of somebody else's email address.
1634160	1638960	Now this is where the airline industry turns up and goes, we have cobalt mainframes.
1638960	1642480	Your email address will be uppercase, whether you like it or not.
1642480	1647480	So when Alex goes to Alice here, goes to buy an email ticket and get it sent to her Unix.box.edu
1647480	1649520	account, she's not going to get anything.
1649520	1654320	Because big Alice and medium Alice, they've got mailboxes, but capital Alice doesn't exist.
1654320	1656240	So can email be case sensitive?
1656240	1659680	It can if you really want it to, but it probably shouldn't be.
1659680	1660960	So we're going to go back to here.
1660960	1662480	We're going to do our 1980s flavored.
1662480	1667760	We got a hello, we got mail from, we got recipient to, it says okay, we're going to say data.
1667760	1671680	And it's going to say go ahead, end your data with a new line, dot new line, and we're just
1671680	1678880	going to say hello, dot boom, 250, okay, queued, quit, bye-bye.
1678880	1679880	And there it is.
1679880	1684680	We sent an email using 1982 flavored raw SMTP typing into a Windows terminal.
1684680	1687360	The only challenge with this is finding a network that will allow you to do it.
1687360	1689960	And we'll find out later why that's interesting.
1689960	1694900	Now this is where I start thinking, well, hang on, Gmail and Proton won't let me send
1694900	1699200	emails with spaces in them, but I've just proved that we can hack into the matrix.
1699200	1700960	We can send code directly.
1700960	1705440	So I thought, what if I go to Proton mail, look up their mail exchanger, tell that into
1705440	1710560	it, hello, mail from hello at fun with email recipient to that, it says protocol error,
1710560	1712280	okay, that's not going to work.
1712280	1713560	Let's try it again.
1713560	1715280	So ho, what do they got?
1715280	1722320	Boom, tell that into that one, hello, mail from recipient to, now I'm not relaying because
1722320	1723320	that's their domain.
1723320	1727120	I'm giving them money to host that, but apparently they've decided that that's relaying and they
1727120	1728960	are not going to let me relay.
1728960	1729960	Sad face.
1729960	1730960	Let's try Google.
1730960	1738640	Tell that, boom, there we go, we're in, hello, mail from, yep, okay, recipient to, that's
1738640	1741360	not a valid RFC 5321 address.
1741360	1745640	Also, there's a lie, it is a valid RFC 5321 address.
1745640	1749560	Google is lying to your face, but they Google, you know, what are you going to do?
1749560	1750560	So that doesn't work.
1750560	1758280	Now, I tried to do this with the Microsoft account and I could not find any network anywhere
1758280	1763720	that Microsoft would let me inject mail from because every single place I tried, I just
1763720	1766000	got access to night band sending.
1766000	1770040	So the NDC conference Wi-Fi didn't work, hotel Wi-Fi didn't work, tethered on my phone
1770040	1771040	didn't work.
1771040	1776520	On-board Wi-Fi on Norwegian air didn't work, Deutsche Bahn Railway on-board Wi-Fi didn't
1776520	1777520	work.
1777520	1780800	Microsoft are really good at working at who might be trying to send spam from a moving
1780800	1784240	train in Germany and making sure that that doesn't happen.
1784240	1786760	Did you try Azure?
1786760	1788960	Yeah, Azure Blocksport 25.
1788960	1792920	You can't send mail from Azure or AWS or Google Cloud.
1792920	1793920	We'll talk about that in a bit.
1793920	1796960	I'll look everyone on that train for sending an email.
1796960	1797960	Yeah, probably.
1797960	1798960	Yeah, okay.
1798960	1799960	And everyone at NDC and everyone in the hotel.
1799960	1800960	Sorry.
1800960	1801960	There's research.
1801960	1802960	You know.
1802960	1803960	Let's try it with fast mail.
1803960	1804960	So I got there.
1804960	1805960	Mail exchanger.
1805960	1806960	Tell that hello.
1806960	1807960	Mail from.
1807960	1808960	Recipient to.
1808960	1809960	Whoa.
1809960	1810960	Okay.
1810960	1811960	Okay.
1811960	1812960	Data.
1812960	1814840	There we go.
1814840	1817720	This was sent to an address with spaces in it and it worked.
1817720	1819640	Let's see if it worked.
1819640	1820640	Quit.
1820640	1821640	Okay.
1821640	1822640	Bye.
1822640	1824560	There it is.
1824560	1825560	It worked.
1825560	1829560	Delivered to an email address containing spaces because this is what the specification
1829560	1832400	says email should do.
1832400	1837880	Now what we've just done there, every one of those services, we have done the digital
1837880	1843120	equivalent of, let's imagine that we want to email, we want to send a letter, a physical
1843120	1845920	letter to this, you know who this is, right?
1845920	1847200	This is Lazarus Trequero.
1847200	1850320	He's the president of Malawi and he lives here.
1850320	1851720	And so we want to send a letter to him.
1851720	1854040	So we're going to write a letter, put it in envelope and we're going to go to Malawi,
1854040	1858400	get on a plane, fly, land at Le Longue, we're going to go out of town, go up to the presidential
1858400	1863040	palace at the top of the hill and we're going to go, hello, hello, we have a letter for
1863040	1865240	his excellency.
1865240	1868000	Now one, that is not an efficient way to deliver mail.
1868000	1872600	And two, he might be out in which case we have a deliverability problem.
1872600	1875160	So what can we do instead?
1875160	1877120	Well, we do this.
1877120	1881800	We put a stamp on it and we put it in a mailbox and we assume that we can find any mailbox
1881800	1883160	anywhere on the planet.
1883160	1888200	We can put a letter into it and if we put the correct poster, John, it'll go where it
1888200	1889000	needs to go.
1889000	1895640	Now mailboxes work because there is a physical and financial cost to sending printed mail.
1895640	1896640	You got to buy a stamp.
1896640	1897640	You got to buy printer ink.
1897640	1899680	Have you seen how much printer ink costs?
1899680	1904360	Like if you want to sell bad penis enlargement procedures to 100,000 people, you're not going
1904360	1907040	to do it using a Hewlett Packard inkjet printer.
1907040	1909000	The business model just doesn't work.
1909000	1914040	So this kind of mail, it's kind of self-regulating up to a point.
1914040	1918720	But let's have a look at what we've got in my inbox here.
1918720	1922240	Now I've got a message here from Lisa Williams.
1922240	1925400	She's looking for a special friendship.
1925400	1930200	Web design prices on Google, cross-border payments international, an investment opportunity
1930200	1931360	for you.
1931360	1933600	Your subscription has been confirmed.
1933600	1937840	Important message FedEx International.
1937840	1940600	I have a new voicemail message.
1940600	1945600	Spam, spam, spam, spam, spam, lovely spam.
1945600	1955520	Let's give it up for the NDC Viking spam choir.
1955520	1960680	You ever wondered why junk mail is called spam?
1960680	1962040	So spam is spiced ham.
1962040	1963040	It's this.
1963040	1965040	It's meat in a tin, which has been around for years.
1965040	1969720	And Monty Python did a sketch in the 70s where someone's in a cafe and the things on the
1969720	1973600	menu are egg and spam and egg and bacon and spam and egg and spam and spam and sausage
1973600	1976160	and spam and spam and spam and spam and spam and spam.
1976160	1980000	And for reasons I will never understand, in the cafe where the clip said there is a chorus
1980000	1985200	of Vikings who sing the spam song, and I put the Monty Python clip in the video, and then
1985200	1988640	I thought, I'm going to be annoyed with a bunch of loud hairy men.
1988640	1989680	We don't need a video clip.
1989680	1993480	We can do this one live.
1993480	1997320	And yeah, so spam email is a reference to that sketch where the noise of the spam, spam,
1997320	2000040	spam just drowns out everything else that's going because that's what happens with junk
2000040	2001040	mail.
2001040	2006440	We have these unsolicited emails, and the reason we're getting them is because email was invented
2006440	2008720	by hippies.
2008720	2012480	And hippies suck at security.
2012480	2016640	Now things just kind of rattled on a little while, you know, 1980s sort of came and went.
2016640	2020440	And for a long time in the 80s, every mail server on the internet was an open relay because
2020440	2024800	peace and love, man, and good vibes, and yeah, it will help you relay your mail to anywhere.
2024800	2026720	Then the 90s comes along.
2026720	2031440	And what happens in the 90s is a lot of people who've never had email or the internet before,
2031440	2033680	they get the internet at home.
2033680	2037880	And the thing you've got to realize about what was happening in the 90s is that stuff
2037880	2040680	that was impossible is now happening daily.
2040680	2045160	Someone gets their first email account, and a couple of days in, they get an email from
2045160	2050760	their granddaughter in Australia with a photo of the new baby, and that was impossible.
2050760	2053160	Like a year previously, you could not do that.
2053160	2056480	It took three weeks to send photographs from Australia to Europe.
2056480	2059200	Usually this thing's happening, they're like, ah, the internet's absolutely magic.
2059200	2060200	It's brilliant.
2060200	2061200	It's amazing.
2061200	2064840	The next thing in their inbox is Bill Gates saying he's going to give them a million dollars
2064840	2067360	and everyone gets a free trip to Disneyland.
2067360	2070360	And they're like, well, the last thing was too good to be true, but then it happened.
2070360	2073080	Maybe this one's too good to be true, but maybe this one will happen as well.
2073080	2077800	We had no frame of reference as a population for what email could and could not do and
2077800	2079640	what was possible on the internet.
2079640	2085240	And so junk mail, scams, spams, bad medication became an absolutely rife problem.
2085240	2088080	Most of it sent through open email relays.
2088080	2090840	Now there were four approaches that we took to try and stop this.
2090840	2095160	One of them was they made it against the law.
2095160	2101560	The controlling the assault of non-solicited pornography and marketing can spam act of
2101560	2102560	2003.
2102560	2106520	Now, as you can tell, this was a resounding success because after 2003, there was no more
2106520	2108000	junk mail, right?
2108000	2109000	Yeah.
2109000	2112920	No, it turns out that quite a lot of people aren't in America, and quite a lot of people
2112920	2114880	who are in America don't give a crap.
2114880	2119360	And even the ones who do, it's very, very hard to prosecute them because it's ridiculously
2119360	2123400	easy to comply with the specifics of the can spam act.
2123400	2126840	So law enforcement did not deliver a solution.
2126840	2129280	The second approach we tried was client-side filtering.
2129280	2131520	You have some software that sorts out your email.
2131520	2132520	Now most of us use that.
2132520	2133520	I use that.
2133520	2136600	You know, I have Gmail and it puts stuff in my inbox and updates and social and that
2136600	2137600	kind of stuff.
2137600	2141440	I'm not going to talk about that today because as a developer trying to send you an email,
2141440	2144600	what you're doing with it after I've delivered it, that is your problem and I don't care
2144600	2145680	how you've got it set up.
2145680	2147440	You can filter anything you want.
2147440	2149160	There's very little consistency.
2149160	2151560	That's on you to get set up the way you want to do it.
2151560	2155840	There's maybe some interesting stuff here about training machine learning systems.
2155840	2159640	But like that email that I sent at the beginning of this session that all of you said, yes,
2159640	2162120	I want to receive this email, quite a lot of you, it went to junk.
2162120	2165760	How would you train an algorithm to know that you're in Oslo right now doing a live demo
2165760	2166760	and this is important?
2166760	2170320	So we're not going to talk about client-side filtering.
2170320	2171840	What about verification?
2171840	2175840	One of the problems with unsolicited email is that you are not accountable.
2175840	2179240	There's no way of tracing the junk mail back to the person who sent it.
2179240	2183980	And if there was, it would be easier to find those people and tell them to stop.
2183980	2189280	What we need is we need peace and love and authentication.
2189280	2191920	And the problem is they didn't include that because the hippies didn't think we were going
2191920	2192920	to need it.
2192920	2197880	So when SMTP was created, it has no support, no user names, no passwords, no security,
2197880	2200200	no encryption, absolutely nothing.
2200200	2203720	And so we looked at the SMTP and we went, oh, simple mail.
2203720	2207000	Now we didn't want to make the complicated mail transfer protocol.
2207000	2208120	That might have put people off.
2208120	2212440	So instead, we made the extended simple mail transfer protocol.
2212440	2217480	Now this was actually invented at Jim Henson's Creature Shop because the difference between
2217480	2224720	SMTP and ESMTP is the SMTP, you say hello, and ESMTPC, you say, hello, which is close
2224720	2225720	enough.
2225960	2229360	So we're going to do an extended ESMTP transcript.
2229360	2231880	We're going to tell that into my fun with the email server.
2231880	2235880	And we're going to say hello, DylanBT.net, and it's going to go, oh, cool.
2235880	2237560	You speak the cool kids language.
2237560	2239320	Look, this is the stuff that I can do for you.
2239320	2244440	I support authentication using the plain system or the login system or the cram MD5 system.
2244440	2248640	I support start TLS, which means we can switch this whole thing to a secure channel, and
2248640	2250320	I do enhanced status codes.
2250320	2253480	And we're like, all right, well, before we send our username password, we probably want
2253480	2255520	to switch to the secure TLS thing.
2255520	2256960	So we're going to start TLS.
2256960	2260640	By the way, lots of people still call this SSL because SSL was invented at Netscape in
2260640	2264120	the 90s, and everyone went, yeah, secure sockets makes the internet secure.
2264120	2268480	SSL stopped being a good idea in 1999, but by then, we'd all got used to talking about
2268480	2270120	SSL certificates.
2270120	2272680	These days, it's actually TLS, transport layer security.
2272680	2276800	So we're going to send start TLS, and it's going to go, yeah, OK, go ahead.
2276800	2277800	Now we're secure.
2277800	2279320	Start again on a secure channel.
2279320	2284240	Hello, DylanBT.net, there's our SMTP handshake, and now we can say, this is our username and
2284240	2288760	password, mashed together, base64 encoded, so it's technically not encrypted.
2288760	2289760	It's just encoded.
2289760	2293480	But that's going to say, authentication successful, and now we're in.
2293480	2298040	So we've said, this is us, look, we're a paying customer, please relay email for us.
2298040	2302640	But the fourth approach is let's stop the bad people being able to get onto the internet
2302640	2304200	in the first place.
2304200	2306880	Now, there's a guy called John Gilmore.
2306880	2308480	John is a very interesting person.
2308480	2311440	He's one of those people who I agree with everything he does right up to the point where
2311440	2313680	I think he turns into a bit of a dick.
2313680	2316280	And then he kind of stops just past that point.
2316280	2319760	John was employee number five at Sun Microsystems.
2319760	2323400	He was one of the founders of the Electronic Frontier Foundation.
2323400	2328840	He is a, I've seen him described as an extreme libertarian cypherpunk activist.
2328840	2332920	And the most famous quote I've seen from John is this one, the net interprets censorship
2332920	2335320	as damage and roots around it.
2335320	2339800	If you start blocking ports because you don't like what people are doing, the internet is
2339800	2342640	designed to find another way around it.
2342640	2345480	And you know, he has taken this philosophy to an extreme.
2345480	2347920	He runs an open mail relay.
2347920	2353600	If you got a hop.toad.com, it will accept email from anyone on the planet on port 25
2353600	2354600	and it will deliver it.
2354600	2358480	Doesn't care who you are, doesn't care where you came from, which is kind of the libertarian
2358480	2359600	ethos in a nutshell.
2359600	2363680	Like you shouldn't have to show your ID to be able to take advantage of public services.
2363680	2367680	Which I kind of agree with except where the internet is concerned, because it becomes
2367680	2369360	too easy to abuse it.
2369360	2374560	Now, I really wanted to use toad.com in the demos I put together and in the live demo
2374560	2375840	we did at the beginning.
2375840	2377240	I couldn't.
2377240	2382600	Because none of the networks that I'm able to connect to would let me relay mail through
2382600	2383600	hop.toad.com.
2383600	2385040	They just said you can't do it.
2385040	2386040	I can't connect.
2386040	2390360	If you put a system in Azure, on an Azure VM or an app service and say, hey, connect
2390360	2394520	to that system on port 25, it says no, you can't connect to anything on port 25.
2394520	2395520	Don't send spam.
2395520	2397280	Google Cloud, same thing.
2397280	2399080	Amazon Web Services, same thing.
2399800	2406000	Dial up most connected wi-fi, most public wi-fi, can't connect to anything on port 25.
2406000	2409200	So we can't use this open relay approach to send mail.
2409200	2413240	The only way we've got a sending mail is to find someone we have a relationship with and
2413240	2416080	use our username password to connect to their server.
2416080	2420640	So that's fine when we want to use our internet provider or our email service to send mail
2420640	2423000	to the rest of the world.
2423000	2424880	But what about receiving it?
2424880	2428680	Because the beautiful thing about email is that anyone on the planet can send me a message
2428760	2430320	and I should be able to get it.
2430320	2434160	And this is what sets it apart from things like WhatsApp and Twitter and Telegram.
2434160	2438160	There is no multinational corporation whose algorithm is showing me things they think
2438160	2439520	I want to see.
2439520	2444320	I should be able to guarantee that anyone can send me an email and I will receive that
2444320	2447520	email, be able to look at it, which means it needs to be wide open.
2447520	2451640	If I'm hosting my mail on Gmail, I can't expect everyone talking to me to set up a
2451640	2453600	Google account to be able to do that.
2453600	2454720	Likewise, Microsoft.
2454720	2460000	So when a mail arrives, when someone knocks on the door of fun with email and says, hey,
2460000	2463960	I got an email here for Dylan, what can we do to determine whether that's legitimate?
2463960	2466920	Well, first, we can look at the envelope.
2466920	2468280	We can look where did it come from?
2468280	2469200	Where was this mail sent?
2469200	2471160	What was the network address it came from?
2471160	2477240	Does that appear in any of the public databases of known spamming network addresses?
2477240	2480360	Now, this system kind of works up to a point.
2480360	2481560	It stops a lot of spam.
2481560	2483120	I'm not going to pretend it doesn't.
2483160	2484800	It's also a massive pain in the ass.
2484800	2488480	Because anyone who wants to give you a bad day can just find your email address and they
2488480	2490080	can report it for spamming.
2490080	2492680	And these places, most of them don't verify anything.
2492680	2494360	They're just like, OK, well, we'll add you to the list.
2494360	2498360	And if it's a problem, the system administrator can come on and they can request to be taken
2498360	2499600	off the list again.
2499600	2503400	Now, one, people will do this just for a laugh.
2503400	2506240	Two, people will block entire blocks of IP addresses.
2506240	2510520	If your ISP has given the next address along to someone who's sending junk mail, you could
2510520	2512640	find you've been blocked through no fault of your own.
2512640	2514280	You can only de-list from these things.
2514280	2516200	Most of them say once every 48 hours.
2516200	2517960	There's about 10 or 12 of these services.
2517960	2520880	This is why I stopped running my own mail server.
2520880	2525600	It's because I got fed up of going onto these forms and saying, no, you've blocked the entire
2525600	2527320	network block again.
2527320	2529160	And I'm not sending spam.
2529160	2530240	I'm doing everything right.
2530240	2531680	Stop cutting me off.
2531680	2533080	So this system doesn't work.
2533080	2534520	It's too easy to abuse.
2534520	2537080	And it kind of relies on your innocent until proven guilty.
2537080	2539840	But proving you guilty just means someone went, it was them.
2539840	2542960	And then we're going to block you for the rest of your life unless you beg and grovel
2542960	2544320	and try and get reinstated.
2544320	2547680	Let's talk about a better system.
2547680	2552600	Now there's a thing called SPF, the Sender Policy Framework.
2552600	2556760	And this is beautiful because it's built on top of the things we had right at the start
2556760	2557760	of the 80s.
2557760	2559920	It's built on SMTP and it's built on DNS.
2559920	2565400	If you've got the Google Admin toolbox and you look up fun with email on their dig toolbox,
2565400	2566880	you can click through the records.
2566880	2569160	There's a thing here called TXT records.
2569160	2570800	And in there, you'll see this record here.
2570800	2576080	It says TXT, time to live is short lived, and value equals, well, value on this thing
2576080	2577080	is this.
2577080	2578320	V equals SPF1.
2578320	2580840	Version is the Sender Policy Framework version one.
2580840	2585520	Then I got a rule here that says, OK, this email, that is allowed to send email for that
2585520	2593360	domain, funwith.email, spf.smtp.com, that's allowed, spf.messagingengine.com, that is allowed.
2593360	2596720	And anything else, I got a little squiggly thing, says this might be suspicious.
2596720	2597720	So what the qualifiers there?
2598160	2599360	Plus means a pass.
2599360	2601640	This rule matches, you can deliver the email.
2601640	2603240	Question mark means don't care.
2603240	2606640	Now, that's not much use in production, but it's really good for testing stuff, because
2606640	2610800	you can create your SPF records and see what matched without it changing any behavior.
2610800	2613680	A tilt here is a soft fail, flag it but deliver it.
2613680	2618040	And a minus, if I put a minus in there, now the plus is the default, so normally you don't
2618040	2620440	see those, the records actually look like this.
2620440	2624080	But that minus there, I can put a rule that says, look, if anyone anywhere on the internet
2624080	2628320	gets an email that says it comes from funwith.email, and it doesn't match that rule, you can just
2628320	2629320	ditch it.
2629320	2630320	Like, that's fine with me.
2630320	2631320	I'm telling you, that's junk.
2631320	2635120	I guarantee, these are the only people sending email on my behalf.
2635120	2638640	Now there's a couple of other systems we're not going to go into today, which do public
2638640	2639640	key cryptography.
2639640	2643040	There's a thing called a deakim, domain key identified mail, and there's a thing called
2643040	2647440	demark, which is the same, but it then sends you reports of anyone who's trying to pretend
2647440	2649600	they are you and spam stuff.
2649600	2653360	But this idea of building records on top of DNS to manage email, this is getting some
2653360	2654360	traction.
2654360	2655960	This is working pretty well.
2655960	2660720	Now, when we sent that at SMTP transcript earlier, we basically sent a message just
2660720	2661720	said hello.
2661720	2664760	Like, once we've thrown the envelope away, we don't know where it came from.
2664760	2665760	We don't know who sent it.
2665760	2667040	We don't know who they think they sent it to.
2667040	2668760	We just know that it said hello.
2668760	2671960	We want to send messages which are slightly more useful than that.
2671960	2675520	And so when we connect to our mail server and we get to the point where it says, hey,
2675520	2679920	data, send us your message, what we're going to do is we're going to send a block of headers.
2679920	2681120	This is who it's from.
2681120	2682120	This is who it's to.
2682120	2683480	This is the subject.
2683480	2684720	This is the email body.
2684720	2687360	It's going to say, OK, 250 queued.
2687360	2688360	We're going to say quit.
2688360	2689680	It's going to say buy.
2689680	2691560	And that is going to work brilliantly.
2691560	2695120	We get nice formatted email, and this works great as long as everything that you have
2695120	2701600	to say can be expressed in 7-bit ASCII, because SMTP is built on ASCII.
2701600	2706400	Now 7-bit ASCII was a brilliant idea in the United States of America in 1960s.
2706400	2708520	So was Richard Nixon and leaded gasoline.
2708520	2713280	You know, we can do a little better, but backwards compatibility.
2713280	2716840	You can't ship a mail system which can't send mail to the people who are still in the
2716840	2717840	old system.
2717840	2725000	So here in 2023, we are still stuck with 7-bit ASCII as the only way of sending anything
2725000	2727520	over an email platform.
2727520	2732920	And so we have to use MIME, the multi-purpose internet mail extensions.
2732920	2737600	What MIME is, is a way of taking just about any kind of content and turning it into 7-bit
2737600	2741160	ASCII, sending it over the wire, and rehydrating it at the other end.
2741160	2742560	Now MIME is actually pretty clever.
2742560	2744000	It's a very, very elegant system.
2744000	2747600	So we got our headers from, to, subject, date is this.
2747600	2751360	Now MIME version 1.0, MIME is supposed to have other versions.
2751360	2756880	It was supposed to have 1.1, 1.5, 2.0, 3.0, but they never figured out how that was going
2756880	2758000	to work.
2758000	2763200	So basically we are stuck with 1.0 being a floating point boolean, that if it's 1.0,
2763200	2766880	yes, and anything else means this is probably not valid MIME.
2766880	2771520	Now we're going to throw in a content type here, and say this is a multi-part mixed message
2771520	2773800	and the boundary string is this.
2773800	2779400	Now this can be anything you like as long as it doesn't appear in your message anywhere.
2779400	2783100	We're going to put in a message, now this, this is a multi-part message in MIME format.
2783100	2786240	This is for old, old email readers that don't know about MIME.
2786240	2789040	There aren't very many of them around anymore.
2789040	2790200	Now we get to the good stuff.
2790200	2791840	So that's the header on our message.
2791840	2795200	I'm going to put in a boundary, it says we're starting a block here.
2795200	2797760	And this block is multi-part alternative.
2797760	2801200	This says we're sending you the same message, but in two or three different ways.
2801200	2803320	So we've now got a different boundary.
2803320	2807600	We're going to say, right, this is the text plane version of this email, hello, we're
2807600	2811960	having fun with email, and then we are going to have the HTML version, hello, we're having
2811960	2814960	fun with email, this bit is an HTML format.
2814960	2818000	And then we're going to close out that boundary block, and then we're going to close out the
2818000	2819000	other one.
2819000	2820120	So now we've put another container.
2820120	2822000	So MIME is actually a tree structure.
2822000	2824880	You can have containers inside, containers inside containers.
2824880	2827720	And in this one, we're going to say, hey, we're going to do an attachment here.
2827720	2829320	This is fun with email.png.
2829320	2833200	It's base64 encoded, because that's seven-bit ASCII safe.
2833200	2834540	That's the file name.
2834540	2835980	It should be an attachment.
2835980	2838960	So this should show up as a little paper clip in your email client.
2838960	2843000	And then we're going to have this massive, great, big long block of base64 encoded stuff.
2843000	2845040	Now it's all well and good.
2845040	2846040	These are standards.
2846040	2848520	You can go out, you can study them, you can figure out how they work, you can write your
2848520	2850640	own implementations.
2850640	2854880	If you are actually building an application that works with any of this stuff, you have
2854880	2860960	a whole bunch of challenges ahead of you, not least because email is an open standard.
2860960	2866480	And when you create code to send somebody a message, you have absolutely no idea what
2866480	2868920	device they are going to be using to look at that.
2868920	2870800	They might be reading it on Yahoo.
2870800	2873360	They might be reading it on Outlook or on an Android phone.
2873360	2874760	They might be using a screen reader.
2874760	2877640	There is a whole raft of different things out there.
2877640	2882640	And these days, most email is HTML because HTML looks nice.
2882640	2886840	And because our marketing teams want us to send HTML emails so we can have buttons and
2886840	2892160	colors and links and those things in it, HTML email is horrible.
2892160	2896000	It is one of humankind's terrible, terrible mistakes.
2896000	2900320	The good news is that there are services out there that mean you don't kind of have to
2900320	2902960	touch the icky bits quite as much as you used to.
2902960	2907160	One of these is a thing called the MailJet markup language.
2907160	2913040	So MailJet is an email marketing and relay company and MJML is their way of writing HTML
2913040	2914040	emails.
2914040	2916480	There is another one which is called Foundation, foundation for email.
2916480	2920560	They don't have a logo but they do have a picture of a squid or a cuttlefish.
2920560	2922520	So I thought, all right, we will put that in here.
2922520	2926600	Now fundamentally what these things do is they give you a language which looks a bit
2926600	2928800	like HTML.
2928800	2931720	So I am going to write an email and this is MailJet markup language.
2931720	2936000	So I have got a MailJet head with a preview, I have got a body with a section and a column.
2936000	2940080	Now this is, it looks like HTML, it is an XML kind of compliant dialect.
2940080	2941080	It is not HTML.
2941080	2945440	What we are going to do is we are going to run this through the MailJet compiler because
2945440	2952920	the HTML that clients actually understand looks like this.
2952920	2956560	It is a sack of horrors.
2956560	2960040	If you read this closely, what we have got there is we have got a table inside a table
2960040	2964360	inside a table and if you are on a Microsoft Outlook or Internet Explorer platform you
2964360	2969560	get two extra tables for free because the blue comments there are the Microsoft if this
2969560	2973240	is Microsoft Outlook then include this extra chunk of markup.
2973240	2975680	Now I know people who used to write this stuff by hand.
2975680	2978080	I used to write this stuff by hand.
2978080	2981200	Platforms like MailJet have made the whole thing so much easier to manage.
2981200	2985280	One of the things that they don't really do is general purpose templating.
2985280	2986520	They are transpilers.
2986520	2988280	They have no idea of behavior.
2988280	2990880	They don't work like a view engine like Razor or something.
2991480	2994920	What you can do, we are not going to go into the specifics in this talk, but you can have
2994920	2999760	projects where you take MailJet and when you compile it you turn your MailJet into Razor.
2999760	3004520	Then at runtime you put a model into your Razor and you get populated HTML with individual
3004520	3006040	order items and stuff at the other end.
3006040	3009200	If you want to see how that works, I got some code up on GitHub you can go and poke around
3009200	3010200	with it.
3010200	3015200	You get to the end of it and it works on your machine.
3015200	3018720	Which is kind of pointless because why would you send yourself email?
3018720	3020000	How do you test this stuff?
3020000	3023440	If you are developing a system that is going to send emails, there are a couple of rules
3023440	3025040	that I absolutely live by.
3025040	3031240	The first one is you want an end point on your website somewhere where you can see what
3031240	3034000	the email is supposed to look like.
3034000	3039600	The NDC tickets platform that we use in London and Copenhagen and Porto.
3039600	3042760	Every single order in that there is a link at the bottom where you can say show me what
3042760	3044720	that email is supposed to look like.
3044720	3048320	One this is useful just for being able to check details on something.
3048560	3052080	When you are designing this stuff, you can just keep refreshing that page because it
3052080	3057120	is way quicker to reload the page or use a hot reload or web plug-in than to send yourself
3057120	3060920	an email, wait for it to come through, go to your inbox, open it up, still doesn't look
3060920	3061920	quite right.
3061920	3062920	Round we go again.
3062920	3065200	This gets you to the point where it looks right.
3065200	3067600	Next tool that I use is the paper cut.
3067600	3071240	Paper cut is a Windows application that sits in the corner of your screen in your system
3071240	3075480	notification tray and it is an SMTP server that doesn't send email.
3075640	3080880	Every email that you send, it intercepts it and it goes, yep, we got it, here it is.
3080880	3083400	It lets you go through and inspect all the properties.
3083400	3086520	You can see your message in a browser view there, that's pretty good.
3086520	3088200	You can see your message headers.
3088200	3092760	What exactly got filled in by the code that you were using to generate your mail messages?
3092760	3097760	You can see the body, you can see the individual sections, how the mind format breaks down.
3097760	3100120	You can see the raw message content for the whole thing.
3100120	3103520	If something doesn't look right, this is a great tool for diving in and figuring out
3103520	3104800	how that works.
3104800	3106800	You got works on my machine in a browser.
3106800	3110520	You got works on my machine with an SMTP relay.
3110520	3113320	Let's see if it actually works on the internet.
3113320	3118720	Mail Trap is a fantastic bit of kit that I've used on dozens of projects over the years.
3118720	3122800	Mail Trap, again, it pretends to be a mail server, so you send your mail via Mail Trap
3122800	3126640	and instead of sending it, it intercepts it, gives you some of the same features that paper
3126640	3127640	cut does.
3127640	3131120	You can see different representations, but then it's got tools like this.
3131120	3134000	That's your HTML, that's your HTML source.
3134040	3135160	That's your raw message body.
3135160	3137080	This is your spam analysis.
3137080	3140400	This is all the reasons why that email might get picked up as junk.
3140400	3144760	Now, if you look at this one real closely, I got a .8 on there, and I got a whole string
3144760	3150840	of zeros, but the .8 is because the domain name that I sent it from is less than 28 days
3150840	3153680	old, and this is the kind of thing they pick up on.
3153680	3157120	If you're warming up a project for a big client who's going to send a lot of email, you need
3157120	3161720	to start sending email early because it can take a couple of months for their outgoing
3161760	3165960	relay, that domain name and everything, to be trusted and established by services all
3165960	3166960	over the internet.
3166960	3168920	I'm going to do the HTML check on here now.
3168920	3172080	This is going to say, look, this is the stuff that you ended up using in that email, and
3172080	3174640	this is where it's not going to work.
3174640	3178120	You've got a thing in there, so Gmail's mobile webmail has flagged two issues that
3178120	3179920	won't render properly on that.
3179920	3184960	All the way down to AOL and IOS and the fastmail, desktop webmail, all these kind of platforms.
3184960	3188280	Now, let's assume we have done our due diligence.
3188280	3189760	We've tested all these platforms.
3189800	3194200	We've designed the email, the client signed it off, and we've tested it on Gmail, IOS,
3194200	3197840	Android, Outlook, Zoho, Proton, Fastmail, AOL, Yahoo, Thunderbird, Yudora, Vivaldi,
3197840	3201680	Mail, and Pine, and then we get that WhatsApp from the client going, the email doesn't look
3201680	3203680	right, and you're like, what?
3203680	3212560	Just send me a screenshot, and they send you this, and you're, ah.
3212560	3218880	I absolutely believe that we all have the right to consume digital media in a format
3218880	3226240	of our choice, using our chosen fonts, color schemes, devices, layout, screen reader accessibility,
3226240	3227240	whatever.
3227240	3232760	I also think that dark mode email is an eldritch horror that should never have been allowed
3232760	3233760	to live.
3233760	3236560	I want to find a friend of yours who's a graphic designer.
3236560	3242560	I want you to ask them to design you a book cover or something, and then mention in the
3242560	3245720	brief, oh, yeah, by the way, we don't know yet if it's going to be on black paper or
3245720	3246720	white paper.
3246720	3247720	Is that a problem?
3247920	3250480	Because they're probably going to slap you.
3250480	3255200	Because the first thing you think about when you design things like marketing collateral
3255200	3256520	is what are we going for here?
3256520	3259800	Is this like dark with light, or is this light with dark?
3259800	3263280	Giving the client control over that on something like email just opens you.
3263280	3268280	Now there are CSS rules and selectors that are supposed to let us do multiple versions
3268280	3269280	of everything.
3269280	3271080	They don't actually work terribly reliably.
3271080	3275960	They're getting better, but the situation we have now is if you've got transparent PNGs
3276000	3279680	in your email, you just need to come up with something that works on both.
3279680	3282440	Often if it works on both, it doesn't look great on either of them.
3282440	3286200	You're not having to put little outlines around your logo so they're still visible and they
3286200	3289200	don't disappear into the background.
3289200	3295200	This is, you know, I find it immensely frustrating as a developer whose job is to maintain and
3295200	3299880	support these kinds of things, but I also think it's incredibly healthy.
3299920	3306120	The reason why so many of these things exist, validating email and is this email address
3306120	3307120	valid?
3307120	3309080	Email is a moving target.
3309080	3310080	It's not fixed.
3310080	3311080	Nobody controls it.
3311080	3315840	It isn't like someone says email version two will be active as of today.
3315840	3321160	It is a distributed federated system where different people are free to implement parts
3321160	3324240	of that protocol, however works for them.
3324240	3325760	They do what works for their systems.
3325760	3327080	An email address is valid.
3327080	3328080	It worked yesterday.
3328080	3330480	That doesn't mean it still works today.
3330480	3333760	Email that rendered properly last week may not render properly this week.
3333760	3336960	Something that didn't work last week, someone might upgrade their client.
3336960	3338320	It works suddenly.
3338320	3344680	And as challenging and frustrating as this is as a developer, I love it because no one
3344680	3346600	can mess with email.
3346600	3350360	Zuckerberg and his cronies can't come along and kick you off email the way they can kick
3350360	3355160	you off WhatsApp or kick you off Instagram or Facebook or get you banned from Twitter
3355160	3357520	or you're not allowed to use Signal anymore.
3357520	3361840	I can set up a server and you can set up a server and we can talk to each other.
3361840	3365680	And we can send each other email using open standards and open protocols.
3365680	3370400	And it is one of the last systems left which allows us to do that without a multinational
3370400	3374640	corporation wanting to harvest our data, verify our accounts, make sure we are who
3374640	3379560	we say we are, use algorithms to sell crap to us and throttle the whole process if it
3379560	3381440	decides it doesn't like us.
3381440	3386400	Now that is where we are going to end the version of this talk that is going on to YouTube.
