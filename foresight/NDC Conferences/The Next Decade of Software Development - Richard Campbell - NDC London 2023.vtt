WEBVTT

00:00.000 --> 00:06.920
I found out like yesterday afternoon that I had to do this talk, so I was preparing so I didn't get a chance to see the keynote

00:06.920 --> 00:13.360
I look forward to watching the video of it. Hi, my name is Richard Campbell. I am an old geek. I've been doing this stuff for a long time

00:13.360 --> 00:14.760
I'm for British Columbia

00:14.760 --> 00:21.440
This is a picture of my house on the left and my neighbor's house on the right. We call this the animal highway

00:21.440 --> 00:26.480
I didn't realize until I put this camera in that we get bears every week

00:27.480 --> 00:30.760
It's this is about six in the morning in the summertime

00:31.480 --> 00:34.920
On a Wednesday because Wednesday in my neighborhood is garbage day

00:35.400 --> 00:38.720
So he's just coming to see if I put out my garbage early or not

00:39.720 --> 00:44.920
And there are consequences if I do so and actually we get fine if we put out the garbage early

00:44.920 --> 00:48.640
It's quite against the rules, but it that's what it's like living British Columbia

00:48.640 --> 00:49.720
It's just forest behind me

00:49.720 --> 00:53.480
It's like a big old buffet for bears and they come through and check on it

00:53.480 --> 00:57.920
He sees actually at the at the top of the driveway right now surveying his domain

00:58.160 --> 01:00.320
Anybody got the garbage out before he moves on I

01:01.080 --> 01:03.720
Make a lot of podcasts any done at rocks listeners

01:04.480 --> 01:07.880
Awesome Carl's not here. I won't be recording it out in a rocks this week

01:07.880 --> 01:14.960
I'm gonna be doing some run as Carl started down at rocks back in 2002 which predates the word podcast by a couple of years

01:14.960 --> 01:22.720
I came on board with show 100 in 2005 where it 18 will do 18 30 this week

01:23.480 --> 01:25.640
It's already in the can and this

01:27.160 --> 01:31.240
And yeah, a lot of the stuff that I do is based on down to rocks this talk definitely is

01:31.760 --> 01:35.240
Coming from all these interviews we get to do we get to talk to really smart people

01:35.240 --> 01:40.840
And so you get to decide to synthesize the sort of vision of what's going on. I do an IT show as well

01:41.480 --> 01:45.400
Call run as radio and I think a episode 863 went up today

01:45.400 --> 01:50.760
And for a brief period between 2011 and 2014 we made a show called the tablet show

01:51.520 --> 01:56.720
Back when we didn't know what to do about tablets and now we know tablet development. It's just development. It's not a big deal

01:57.360 --> 01:59.400
All right, so we're gonna do a little future prediction

01:59.400 --> 02:05.720
So let's refer to Niels Bohr's prediction is very difficult, especially about the future although. I don't know what else you would predict

02:07.280 --> 02:14.600
So let's go through the obvious things that are happening today that are gonna shape the way we build software for the next few years

02:14.600 --> 02:19.720
I wrote the first version is talking 2019 thinking one of the 2020 is gonna be like and now it's 2023

02:19.760 --> 02:22.320
And it's not exactly what I thought but

02:22.920 --> 02:26.360
Did anybody plan up for a pandemic in 2019? I don't think so

02:26.840 --> 02:31.040
But obviously the cloud has come to dominate in the past few years. It was true

02:31.200 --> 02:34.360
It was less true in 2018 2019

02:34.360 --> 02:39.520
But today if you don't have a cloud plan you kind of don't have a plan your your employer is probably gonna ask you

02:39.520 --> 02:41.520
well, how does the cloud fit into this equation and

02:42.280 --> 02:47.040
Same for mobile devices mobile devices are now the most common computing device in the world

02:47.160 --> 02:52.560
They are the majority of compute the reason iPhone and Android dominates just because there's so many of them

02:52.560 --> 02:58.200
We figure this four billion smartphones operating in the world which pretty much is one for every adult human and

02:59.000 --> 03:01.000
We've transformed society for that

03:01.640 --> 03:06.760
Fundamentally we are all cyborgs right we have digital extensions to ourselves now

03:06.760 --> 03:12.760
We tend to because of science fiction think about cyborgs as the digital stuff is inside you, but a yuck

03:13.880 --> 03:15.880
And B impairs upgrades

03:16.880 --> 03:21.200
But if we don't think of our phone as an extension of ourselves try losing it for a day

03:21.720 --> 03:25.400
Like we're pretty agitated when we don't have that device around it's our communication device

03:25.400 --> 03:30.440
We would just take it for granted that we could talk to anybody anywhere if they'll answer which they won't

03:31.400 --> 03:37.960
Or we at least message them and whatever messaging constraint you currently have the Venn diagram of messaging systems is continued to be messy

03:37.960 --> 03:41.880
But that's because it's so all-encompassing and so we can't talk about

03:42.880 --> 03:48.480
Future of compute and and the kind of work we're going to be doing if we don't include these devices and how they're going to evolve as well

03:48.640 --> 03:50.640
We know how to make an awful lot of data

03:51.640 --> 03:55.960
That's just a byproduct of having a lot of devices feeding into common reservoirs, right?

03:55.960 --> 03:59.440
The you know ultimately a lot of what's made the modern machine land

04:00.000 --> 04:05.480
Machine learning models exist is because of this is tremendous feed of data that we're generating on the behalf of others

04:06.600 --> 04:11.560
And all of these are obvious trends more compute more cloud more devices

04:11.880 --> 04:16.640
More data nothing surprising here. It's all expected. What are the unexpected things?

04:16.640 --> 04:19.400
We're we're we're going to hit limits in the next ten years

04:20.000 --> 04:23.480
For me the big one is we are finally going to run Moore's law to the ground

04:24.000 --> 04:28.360
So Gordon Moore is a person. He was one of the founders of Intel

04:28.800 --> 04:32.040
They were one of the first companies to make micro processors

04:32.040 --> 04:36.960
Well, actually they first made Ram that was their original product when when Intel started up

04:37.160 --> 04:44.520
Ram was still largely core Ram little ferrous coils wound with copper to store bits sounds as reliable as you think it would be

04:45.160 --> 04:47.160
And so the idea of building

04:47.760 --> 04:53.280
Silicon substrate Ram was a big deal and that was an Intel's original product and it was while they're making Ram

04:53.800 --> 04:58.640
That Gordon Moore observed that for roughly the same amount of cost

04:59.640 --> 05:06.040
Every 18 to 24 months. We could double the number of circuits on the piece of silicon

05:06.960 --> 05:09.560
Now they only were able to do that by working very hard at it

05:10.440 --> 05:13.560
Later that would be called Moore's law. It's not a law

05:14.440 --> 05:17.880
Right a law is something that happens whether you work hard at it or not

05:18.840 --> 05:22.080
Like gravity you don't have to do much gravity is going to apply

05:22.800 --> 05:30.440
But for Moore's law to be a law companies work extremely diligently to increase the density of electronics and it's worked if you'd

05:30.760 --> 05:35.720
So pull this data from Wikipedia. This is a sort of chart of the processor

05:36.200 --> 05:39.480
The density of transistors in processors from the original

05:39.840 --> 05:46.200
4004 in 1970 up till around now and you see how clean that line is and that's because we have an

05:46.520 --> 05:52.360
Exponential number on the left of the number of transistors if I didn't use an exponent on the left and go up orders of magnitude

05:52.600 --> 05:57.360
We get the hockey stick the dumb graph where nothing is meaningful and then it shoots up at the end

05:59.080 --> 06:03.000
It's a bad way to explain this honestly, I mean and we're technical people

06:03.680 --> 06:09.640
Getting our heads around an exponential function is hard when I'm explaining it simpler. I talk about things like this

06:10.720 --> 06:14.040
What is that warp drive for the enterprise? No, that's this

06:14.760 --> 06:16.760
This is a cray

06:17.080 --> 06:19.080
XMP supercomputer circa 1985

06:19.920 --> 06:25.800
They've only they only made a couple of hundred of these that at in 1985. This was the most powerful computer

06:25.800 --> 06:27.800
You could buy they were millions of dollars

06:28.440 --> 06:33.560
They ran on on 200 kilowatts of power. So you kind of need to bring your own generator

06:34.800 --> 06:41.640
They're cooled with mineral oil because they're running so hot without mineral oil pumping through it all the time that it will melt

06:42.120 --> 06:43.560
You notice it's kind of curved

06:43.560 --> 06:46.120
They're trying their best to keep the wires as short as possible

06:46.560 --> 06:49.640
So the speed of light doesn't impair the performance of the computer

06:49.720 --> 06:55.640
This is leading edge technology in 1985 and it's knocking out about 1.9

06:56.480 --> 06:57.880
Gigaflops

06:57.880 --> 07:04.480
per second so just about two billion floating point operations per second in 1985 they modeled

07:04.640 --> 07:11.720
Nuclear explosions on this the Voyager missions were computed on computers like this doing the orbital calculations

07:12.520 --> 07:14.520
fast forward a few years say

07:14.920 --> 07:16.920
2011 the iPad 2

07:17.440 --> 07:19.440
About 800 bucks

07:19.680 --> 07:21.840
Don't put it in any liquids. That's a mistake

07:22.840 --> 07:28.520
It runs, you know on its built-in battery for about 20 hours and it's got about

07:29.760 --> 07:31.760
1.9 gigaflops of processing power

07:31.880 --> 07:39.000
So 26 years later the most powerful computer in the world is now a device you give to children and

07:39.640 --> 07:41.640
They play candy crush on it

07:42.800 --> 07:45.240
That's the advancement of society and

07:45.720 --> 07:47.160
This face it that's not fast

07:47.200 --> 07:50.840
That's a 20 at 2011 device and a consumer device at that

07:51.360 --> 07:57.320
Today if you're a consumer you want a high-performance compute device you buy a very expensive video card, right?

07:57.320 --> 08:02.760
An RTX 4090 these days if you can find one, they're a couple of grand

08:03.640 --> 08:05.640
You know, they're not cheap

08:05.640 --> 08:06.600
but

08:06.600 --> 08:08.600
16,000 cores in it

08:09.080 --> 08:13.320
currently pulls down about 82 teraflops at full bore so

08:13.400 --> 08:18.240
40,000 times faster than the iPad 2

08:19.000 --> 08:22.640
So 11 years later, you know, and that's this is also

08:23.520 --> 08:25.280
450 watts

08:25.280 --> 08:30.560
So, you know, you can heat the room with it if you like like I hope you bought a big power supply because you're gonna need it

08:30.560 --> 08:34.440
And if you want you can run too. I don't know why you would

08:35.240 --> 08:37.400
Nobody's mining Bitcoin anymore. That's done

08:38.840 --> 08:41.280
And it's still a consumer device today

08:41.320 --> 08:44.120
There's a today the fastest computer in the world the supercomputers of the world

08:44.120 --> 08:51.960
There's a race going on between the Chinese the Americans and the Japanese and the current leader like literally this past fall

08:52.200 --> 08:58.880
Was the frontier supercomputer in Oak Ridge labs? So that's in Tennessee in the US. That's based on the HP architecture

08:58.880 --> 09:01.840
so this is a massive multi-processor machine and

09:04.920 --> 09:08.480
1100 petaflops or 1.1 exa flops

09:09.480 --> 09:11.480
For about six hundred million dollars

09:12.440 --> 09:15.800
Needs about 20 megawatts of power. So bring your own nuclear reactor

09:16.800 --> 09:18.800
and takes up about

09:19.440 --> 09:22.880
700 square meters. So clear out the basement

09:25.280 --> 09:27.880
13,000 times faster than the 4090 or

09:29.280 --> 09:32.920
600 million times faster than the iPad 2 or the cray XMP

09:34.280 --> 09:36.120
Moore's law

09:36.560 --> 09:42.560
That's what we're talking about is our ability to continue to extend compute and I like that comparison where the cray

09:42.960 --> 09:48.840
Compute power became our consumer device like are we going to have an exa flop device in our hands?

09:49.200 --> 09:51.840
It's possible. I don't know what you'd do with it

09:52.160 --> 09:56.600
But then we didn't know we needed to play candy crush in the first place right it just emerged that way

09:57.520 --> 10:03.040
And Moore's law is ending this graph cannot continue. Why why are we running into the limit?

10:03.280 --> 10:07.640
Well, we're getting better and better at packing transistors into smaller and smaller space

10:07.640 --> 10:15.280
And you'll hear these terms like the 10 nanometer process and the seven nanometer process and the five nanometer process

10:16.400 --> 10:19.400
Scientists have built a one nanometer transistor, but only one of them

10:21.480 --> 10:27.920
Those are all rough measurements, they're not realistic in the actual circuits are more complicated that we have good

10:29.080 --> 10:32.880
Sensors now this is an electron tunneling image of the

10:33.040 --> 10:38.160
IBM five nanometer process. So this is doped silicon layered together

10:39.640 --> 10:46.320
It's hard to measure what we talk about nano things all the time is compute people the billionth of something a billionth of meter

10:46.320 --> 10:50.760
Is really really small people can't understand a billion right same problem is that exponential function?

10:50.760 --> 10:57.720
And I always describe this as if I want to wait get you to wait for a million seconds a million seconds about 11 days

10:58.800 --> 11:01.320
But a billion seconds is 33 years

11:02.080 --> 11:07.280
So the idea that a nanometer is to a meter as a second is the 33 years

11:07.920 --> 11:14.600
And we're making stuff at that scale today. That's how dense we're getting this is kind of this is stanling

11:14.920 --> 11:16.920
scanning tunneling microscopy of a

11:17.640 --> 11:20.560
Silicon substrate the yellow dots are

11:21.320 --> 11:25.760
Silicon atoms the blue holes are phosphorus atoms

11:26.120 --> 11:29.040
We talk about doping silicon when we make

11:29.520 --> 11:34.720
Integrated circuits so that they change their voltage behavior so that you can apply voltage and pass it through a semiconductor

11:35.040 --> 11:38.920
This is literally the structure of it. It is a crystal

11:40.040 --> 11:42.040
And when you get down into those

11:42.560 --> 11:45.040
nanometer scales, we're running out of atoms

11:45.840 --> 11:51.680
A silicon atom is 111 picometers across like point one nanometers

11:51.840 --> 11:53.840
so when you start talking about a

11:54.720 --> 12:02.120
Transistor layered together. That's only a couple of dozen nanomies across. It's only hundreds not even hundreds of atoms

12:03.640 --> 12:08.240
Strictly right quantum effects start to apply like we're just getting as dense as we physically

12:08.760 --> 12:15.140
Can get and that's going to be the limit and not only that we can make these things at all that that we can make

12:15.880 --> 12:18.400
Billions of transistors on a given die

12:19.120 --> 12:21.120
for about a thousand dollars

12:22.120 --> 12:26.720
Right keep the prices stayed consistent the manufacturing process has to keep improving

12:27.120 --> 12:30.680
Without really raising the price so that we'll continue to buy them

12:31.520 --> 12:35.720
And again, we get debate like how fast did you need to go and how density need to be?

12:35.800 --> 12:41.200
But we've built our entire industry of on the fact that we're going to have more compute in about two years

12:41.680 --> 12:43.680
for the same amount of money and

12:43.920 --> 12:45.920
That ends in the next decade

12:46.920 --> 12:49.920
Now there's a bunch of things that we're doing or

12:50.680 --> 12:54.320
Haven't been doing because of Moore's law one is we have not really improved

12:54.760 --> 12:57.080
Architectures for the most part especially if you're talking about Intel

12:58.000 --> 13:01.320
They've more or less sold the same core chip design

13:01.880 --> 13:05.440
For 40 years because every time they try to change it we got very angry

13:05.960 --> 13:12.040
Because it wasn't compatible with what we've done before and we like compatibility more and so at this point that perpetually

13:12.280 --> 13:20.760
Evolving x64 and x86 architecture has gotten fairly convoluted the amount of steps involved in a given work cycle

13:20.960 --> 13:23.320
even if it's going at multiple gigahertz is

13:24.000 --> 13:29.120
Complex now we do have simpler architectures the arm architecture came along quite a few years ago and

13:29.640 --> 13:33.680
It was built for more power efficiency more compute efficiency

13:33.680 --> 13:37.840
It just didn't have the legacy that the other systems have but arms pretty mature today

13:37.880 --> 13:45.560
It's one of the reasons you're seeing more and more interest in arm in general for compute because the amount of energy necessary for a given unit of work is

13:45.560 --> 13:47.560
lower in those architectures

13:48.320 --> 13:52.360
You can expect as we lose the ability to get more compute

13:52.600 --> 13:58.520
For free by buying the next generation processor that optimizations in architecture become much more important

13:59.000 --> 14:03.720
Now for us as programmers for the large part. We're insulated from that our modern programming environment

14:04.320 --> 14:10.560
Almost completely abstracts us from the actual underlying hardware if you're living in a dot in dot net land

14:10.960 --> 14:14.760
It's Microsoft's responsibility to make sure that the common language runtime

14:15.160 --> 14:20.480
Compiles and optimizes to the processor you have they do that all of the time. We don't even think that it happens

14:20.480 --> 14:26.200
It's kind of magic. It just works in that brief period where they thought arm was a really good idea now

14:26.200 --> 14:30.000
They're coming back to that idea again. You could compile dot net to arm

14:30.640 --> 14:34.760
It went away, it'll be back because it's nothing that we have to do

14:34.840 --> 14:39.360
It's their responsibility to do implementations against the hardware. That's the power of abstraction for us

14:39.360 --> 14:45.880
I would argue that today the M1 and the M2 made by Apple are the most advanced

14:46.720 --> 14:48.720
processors out there architecturally

14:49.560 --> 14:54.880
They're arm-based, but they've also added they've condensed a lot of things. Most of the memory is here

14:55.680 --> 15:01.520
They have a tensor compute units or basically units optimized to do neural neural net calculations

15:01.520 --> 15:05.040
They have the GPU integrated in putting all those things in a single die

15:05.720 --> 15:11.440
Putting 40 billion transistors together all working and playing happily has some benefits

15:11.440 --> 15:15.160
And so, you know, those are some of the nicest computers we can buy today

15:15.160 --> 15:19.680
And it sort of speaks to what the future looks like and I'm I'm an advocate of William Gibson

15:20.120 --> 15:24.680
The guy who coined the term cyberspace while typing it on a Wedgewood typewriter

15:25.280 --> 15:29.800
But his quote is the future is here. It's just not evenly distributed

15:30.720 --> 15:36.040
So if you want to understand the future one of the easy ways to go is go look at where the concentrations of real rare

15:36.200 --> 15:39.840
Innovation are and what's happening in Cupertino with processors like this is pretty profound

15:40.040 --> 15:48.000
It speaks to what phones should look like in the future and what our other compute devices can be deeply integrated circuits the modern

15:48.840 --> 15:50.840
manufacturing foundry

15:51.320 --> 15:54.040
Allows us to build very customized

15:54.560 --> 16:01.120
Circuits that are as close together as possible to run as fast as possible with the least amount of heat and the least amount of battery waste

16:02.040 --> 16:03.400
All right

16:03.400 --> 16:09.440
Let's stop talking about the underlying hardware the net real constraint these days is the network

16:10.160 --> 16:16.560
5g was wonderful. It was heavily advertised a few years ago. Now it's here and nobody can tell works perfect

16:17.600 --> 16:19.600
I mean the

16:21.000 --> 16:23.000
It's a good question

16:23.320 --> 16:28.480
In theory these standards for wireless are about

16:29.080 --> 16:30.200
increasing

16:30.200 --> 16:36.560
Frequency to intensify more data so more people can communicate simultaneously the downside is as you move up in spectrum

16:36.720 --> 16:38.720
You decrease the penetration

16:39.080 --> 16:46.320
So our old 2g phones which were living down in the 900 megahertz range worked beautifully in basements

16:46.520 --> 16:50.640
When we got up to 3g and 4g phones and we moved up to the 2 gigahertz band range

16:50.840 --> 16:55.760
We had trouble communicating into in closed areas, right? Some buildings work some not so much

16:55.760 --> 16:57.840
It was easy to get into a Faraday cage rear phone wouldn't work

16:58.600 --> 17:05.800
5g bumps this up into the 20 gigahertz range big increase in data density, but the penetration goes down a fair bit

17:05.800 --> 17:07.800
It's blocked by things like

17:07.800 --> 17:09.800
trees

17:10.000 --> 17:15.000
Bodies, you know, I've stood in front of a 5g tower doing a speed test with my phone and going wow

17:15.000 --> 17:17.000
That's smoking fast and then I turned around

17:17.880 --> 17:21.040
And then 20 gigahertz apparently doesn't go through me

17:22.200 --> 17:26.840
So there's challenges for these higher frequencies. There was the 6g specification underway

17:27.600 --> 17:32.480
But there's no simple solutions here network is going to be our constraining resource as

17:33.240 --> 17:38.240
Developers we have to think hard about how we move data between points of compute

17:38.720 --> 17:42.600
That's always going to be a limitation. There are no workarounds largely for

17:43.000 --> 17:47.320
For the laws of physics the speed of light. That's a law

17:48.720 --> 17:55.640
This the modern is a the the the satellite networks that are going up now are very interesting

17:56.480 --> 18:04.000
For certain applications what we've really reached is a point where much of the parts of the globe that don't have good cellular coverage

18:04.360 --> 18:07.600
Can have sufficient satellite coverage?

18:08.160 --> 18:12.840
So more and more we're reinforcing ester Dyson's belief that it was easy

18:12.840 --> 18:16.760
It was easier to put networking everywhere than it was to build a good disconnected client

18:17.880 --> 18:20.680
So if you just keep presuming we're gonna have them with everywhere

18:20.680 --> 18:27.200
I got I got on the early Starlink beta because I have a place sort of up in the wilderness in BC where the bears are even more common and

18:27.880 --> 18:32.040
It's an insuppressive like that's just a pizza box size antenna

18:32.080 --> 18:34.960
You need a clear shot of the sky. That's the hard part

18:35.160 --> 18:36.960
And if you've got a clear shot of the sky

18:36.960 --> 18:43.560
You've got about 400 megabits down and 100 up at 29 at 20 milliseconds you can game from there

18:43.560 --> 18:49.880
It's not as fast as your your your synchronous fiber, but it's faster than you would get in most isolated areas

18:51.160 --> 18:56.560
So that ubiquitous connectivity and huge amounts of compute available in very small devices

18:56.560 --> 18:59.080
You know the other side of Moore's law is the old hardware gets very cheap

18:59.080 --> 19:04.200
And so we're seeing things like automobiles where they won't spend money on compute. They still have it

19:05.120 --> 19:07.320
They're still they're now starting to put 3g

19:07.760 --> 19:12.800
Cell services into all cars so that all cars have telemetry back to the factory whether you want it or not

19:13.360 --> 19:17.360
Because it's more important for the factory to know about what how you're using the car

19:17.840 --> 19:23.520
So this model of the ubiquitous computing is emerging more and more where every device has an IP address and

19:24.360 --> 19:29.840
Can connect to the network and and is communicating perhaps not for your benefit before the vendors benefit

19:30.040 --> 19:34.440
But it's always communicating and we have options there. We're gonna be responsible for a lot of it

19:35.080 --> 19:39.680
I'd be remiss in just setting the stage for all this to not talk a little bit about the pandemic

19:39.680 --> 19:43.840
Well again when I wrote the original version it wasn't the thing, but we've continued to deal with this

19:43.840 --> 19:45.840
That's obviously in the later stages

19:46.360 --> 19:54.160
Our friend Sachin Adele said was famously quoted by May of 2020 saying two years of cloud migration happened in two months as

19:54.600 --> 19:56.560
We've as everyone discovered yes

19:56.560 --> 20:02.920
You can work at home and we tore apart our perimeter networks and shoved and expanded our VPNs and

20:03.400 --> 20:09.320
Quickly shuffled whatever we could into the cloud. We changed the landscape of work. We changed the landscape of compute

20:09.320 --> 20:15.120
I mean for most of us in our industry working from was just not a big deal. We've been doing it anyway

20:15.120 --> 20:21.640
I do hope one day to make either a video series or a talk just on how video

20:21.880 --> 20:24.280
Conferencing evolved over those two years

20:25.000 --> 20:27.280
Remember that period where everybody thought all of those

20:27.800 --> 20:31.280
Inlaid graphics with the hats and in the horns and things was a good idea

20:31.280 --> 20:34.040
It lasted like three months for three months everybody had fun with that

20:34.040 --> 20:39.480
They're like, okay, that's really dumb and they turn that off, but that's the evil evolution of etiquette perception

20:40.240 --> 20:44.800
And today it's really interesting to see how everybody comes on with a face initially says hi

20:44.800 --> 20:47.280
Then when somebody actually starts to talk most cameras go off

20:47.720 --> 20:53.680
To not distract like that. We're developing an etiquette for that model. We were rushed to do it

20:54.400 --> 20:56.360
But we're also seeing the other side of the pandemic

20:56.360 --> 21:03.200
We're starting to see the economic impacts we the side effect of mass layoffs was a loss of expertise that in general all

21:03.880 --> 21:09.400
Workchains are less efficient today as we tried to gear them back up and you have a 20 or 30 or 40 percent

21:10.560 --> 21:14.120
Inexperienced worker role in across those chains of work

21:14.120 --> 21:17.120
You have a lot more mistakes and they cascade on top of each other

21:17.600 --> 21:25.480
We had the supply chain deeply disruptive ports that were had had too many empty containers and not and not enough full ones

21:25.480 --> 21:29.280
Not enough space to move things around and literally going to take years to straighten it out

21:29.280 --> 21:35.240
And then the byproduct of all of that friction and supply was an increase in demand for certain goods

21:35.240 --> 21:40.120
Which then got interpreted as inflation and here we are it's 2023. I hope you're having fun

21:41.120 --> 21:46.680
Now what does this mean for us in our industry specifically because for the most part

21:47.680 --> 21:49.960
We've had 20 years as developers

21:50.720 --> 21:52.720
Just in a growth mindset

21:53.480 --> 21:58.640
2008 2009 not withstanding the sort of great recession because I think for the most part technical industry was insulated from that

21:58.640 --> 22:00.640
We were not as impacted as much as many others

22:01.200 --> 22:05.480
So I've talked to folks that have been working since after the dot-com bus

22:06.400 --> 22:10.240
2002 and it's just been build what you want go faster build more

22:10.680 --> 22:14.960
You know explore great ideas now. I'm older than that

22:14.960 --> 22:22.480
I started writing code in the 80s when economics are a lot tougher and we focused really hard on this contact of return on investment

22:25.360 --> 22:30.480
The problem is that when we're software developers we rarely are directly responsible making money for the company

22:31.160 --> 22:37.160
Typically the things that we make are tools that allow those that make money for the company to work more efficiently

22:39.120 --> 22:43.120
If the things we're making don't do that, they're really not that important

22:43.880 --> 22:49.720
You know this capitalist model has always functioned on the idea of rapid relatively inefficient growth

22:50.120 --> 22:56.920
Followed by a period of sort of cleanup shaking out the weak stuff a bit of a recessionary period for a year or so

22:56.960 --> 23:00.160
We cut the sort of fat off and then we'll grow again

23:00.800 --> 23:06.440
Except that we've gotten good enough with our economic models to avoid that whole cleanup phase for 20 years

23:06.960 --> 23:10.600
and now that we're looking at one in a very serious way and

23:11.120 --> 23:15.520
Folks are seeing that you know what it's like to have a five or six percent interest rate and

23:16.160 --> 23:19.520
They you know new costs of things the pressure on energy and so forth

23:20.640 --> 23:24.080
Companies are being more reflective. They're sort of looking back and going are we doing the right things?

23:24.080 --> 23:25.280
Are we focused on the important stuff?

23:25.280 --> 23:29.960
And it's in our best interests with our skills and the main nose and the companies that we're working in

23:30.160 --> 23:32.160
Make sure you know how your company makes money

23:32.720 --> 23:34.720
Make sure the things you're building

23:35.200 --> 23:38.680
Help that because we are productivity amplifiers

23:39.160 --> 23:44.600
We're incredibly good at building tools that allow the rest to work faster to do more

23:44.880 --> 23:49.040
We can help companies survive in difficult times if we work on the right things

23:50.360 --> 23:56.560
All right, we wanted to talk about technology. We've kind of set the stage. Here is the landscape we live in today

23:57.440 --> 24:02.240
So now that we know we're living in a cloud and living in a cloud world mostly smartphones

24:02.480 --> 24:10.040
We're not going to count on you compute going much faster and in general our employers and our customers are really tighter with their cash

24:10.640 --> 24:12.640
What should we do?

24:13.400 --> 24:16.560
Start with the browser market because the browser market is

24:17.120 --> 24:19.120
Kind of stable now

24:19.120 --> 24:21.600
If you really want to use up a lot of memory in your computer

24:21.600 --> 24:27.400
There's chrome if you want to be frustrated with how well your websites work you've safari if you want to use a browser

24:27.400 --> 24:34.120
Nobody else cares about there's edge and if you want to be an angry anarchist. There's Firefox like you have choices, right?

24:35.680 --> 24:40.520
There's no perfect solution any of these there nobody's utterly dominating the market

24:40.520 --> 24:44.440
I mean chrome is still a big player especially for your typical employer

24:45.480 --> 24:50.320
That's likely the browser using you tend to build to that and we're clearly seeing the rough edges

24:50.360 --> 24:54.480
We're not all the same same things work together, but we have the tooling sets and

24:56.600 --> 25:00.560
You know in on Donna rocks we made fun of the rapid rates like hey

25:00.560 --> 25:03.720
We've got an hour-long show here. There'll be at least two more framers before this is done

25:04.440 --> 25:08.520
That I feel like that pace is eased off a little. I think people want a certain level of stability

25:09.080 --> 25:12.160
you know angular is not the new sexy anymore, but it's

25:12.840 --> 25:18.920
It's utilization level inside of larger companies is massive and those top three across the board seem to be

25:19.120 --> 25:26.640
that you know majority of web development and we're still doing mostly browser development especially for companies because it's also deployment issue and

25:26.840 --> 25:30.760
They're always running latest version and that's things we want from that

25:30.760 --> 25:37.680
Even if we have to constrain the feature set someone and getting and all of these libraries have some degree advantages for

25:37.920 --> 25:39.720
working in the

25:39.720 --> 25:45.680
heterogeneous client world that we have that people are expected to be able to use those pages on a phone and on a tablet not a

25:45.680 --> 25:48.920
PC and have a reasonable experience on all of them. It's still not easy

25:50.440 --> 25:56.040
Development for us has all the easiest time of development was when the device you were writing the code on was the device

25:56.040 --> 25:59.440
It would normally run on that just hasn't been true for 20 years

25:59.760 --> 26:06.160
Whether we acknowledged it or not now we typically are writing on a desktop PC or a robust laptop

26:06.160 --> 26:11.000
But we're running it on smaller form factor devices and that's a way more difficult thing to develop for it

26:11.120 --> 26:16.840
More complicated model. It's a longer cycle, but if you're not respecting that cycle you struggle with what you're making

26:17.920 --> 26:23.040
The progressive web app movement has helped us at the minimum to give us an icon

26:23.040 --> 26:27.320
For regular users to be able to get to that web page because goodness knows they couldn't figure bookmarks out

26:27.800 --> 26:31.240
All right, so now we have an icon. It starts up a frameless browser

26:31.920 --> 26:37.600
We're that's good enough. There's a bunch of other great stuff in PWA and the three guys to use it think it's great

26:38.600 --> 26:46.840
And then there's our friend Steve Sanderson who brought us web assembly in the form of what would eventually be known as blazer

26:47.560 --> 26:48.760
now

26:48.760 --> 26:52.120
He didn't invent it. You know, he wasn't first, but he

26:52.680 --> 26:58.320
Definitely brought it for us in the dot-net community back in 2016 at the NDC conference in Oslo

26:58.360 --> 27:01.960
He showed it off for the first time with a very bizarro version of C sharp

27:02.240 --> 27:09.800
That allowed us to run C sharp on the browser and really what web assembly is evolved into is a kind of container strategy

27:10.160 --> 27:15.120
Where the inside service of the container is this browser environment a sandbox

27:15.120 --> 27:19.000
That's relatively safe to operate within and you can introduce almost any kind of code

27:19.560 --> 27:21.280
Microsoft took their time

27:21.280 --> 27:25.040
Committing to blazer Microsoft doesn't like being first. It seems these days

27:25.080 --> 27:30.000
They kind of sat on that project as an experimental project until go lang for web

27:30.000 --> 27:33.480
W a shipped as soon as that happened well then blazer came out

27:33.480 --> 27:37.800
But it was like when nobody wants to attack Javascript, but we do want to program in the languages

27:37.800 --> 27:43.480
We want to program the devices we want to program in and w a gives us this ability to program in the languages of choice

27:43.640 --> 27:48.400
Down on the client device still in the browser. So I still have my deployment issue solved

27:48.400 --> 27:51.200
I still have continuous update models or every time you click on it

27:51.200 --> 27:55.920
You get the latest version like all of the benefits of working in web development, but now I get the language that I want to use

27:56.600 --> 28:02.800
And if you've listened to the show, you know, we've been talking about other places that this container could run

28:02.800 --> 28:06.760
I mean blazer made it absolutely obvious to us that we can run it on the server

28:06.760 --> 28:12.440
We can run it on the client, but now it's interesting to start thinking about different points of compute. I

28:13.200 --> 28:18.840
Don't want this code to necessarily run on the client device, but I wanted to run close to the client

28:19.000 --> 28:21.000
So could I define a

28:21.360 --> 28:27.400
Set of parameters for where this X block of code could execute that it could run in a CDN an edge point of some kind

28:28.160 --> 28:30.160
No, and this is all

28:30.520 --> 28:37.160
Experimental, but I'm hearing it more and more often that the web assembly is a another kind of container

28:37.760 --> 28:41.760
And what the potential of that offers to us long term

28:41.880 --> 28:48.000
So if you haven't explored this world and sort of poking around what's possible there just understand this is an area of growth

28:48.600 --> 28:52.820
Extremely smart people are looking at where they can take web assembly to

28:54.440 --> 28:57.040
Now if you want dumber areas we could talk about web 3

28:58.960 --> 29:03.240
It's easy to make fun of mostly because it's pretty silly I

29:04.600 --> 29:06.960
See it coming down to three central ideas

29:08.600 --> 29:13.320
Decentralized web is I think the most reasonable aspect of web 3

29:13.880 --> 29:16.200
We

29:16.200 --> 29:21.280
If you think about web 1 late 90s early aughts the whole dot-com boom

29:21.920 --> 29:25.800
Dot-com from Microsoft perspective for the idea of the internet becoming a popular thing

29:27.000 --> 29:32.060
That was very decentralized people ran web servers on machines under their desks

29:32.600 --> 29:36.200
Connected to the internet. It wasn't a good idea, but it's something we did and

29:37.000 --> 29:43.120
It was powerful and flexible except it wasn't reliable right sometimes that machine sometimes you trip over the power cord

29:43.640 --> 29:49.600
Sometimes the cat barfs into the CD drive right like stuff happens and that machine was actually on the internet

29:50.840 --> 29:55.800
Web 2 was far more centralized right we gave up our ownership of those

29:56.400 --> 30:02.200
Devices in on the internet for a service provider. It's just that we chose folks like Facebook

30:03.000 --> 30:06.320
But you can still put geocities in that can as well if you want

30:06.520 --> 30:11.560
But we now we're getting into more interesting compute models with distributed execution

30:11.760 --> 30:17.520
And the problem of course is that those products turned into other kinds of exploitation of us

30:18.160 --> 30:19.400
And

30:19.400 --> 30:23.280
That's not controlling the value we're actually making and now everyone's a little bit sick of it

30:23.280 --> 30:26.840
And so decentralized web is becoming hip again. Just trying to do it in a better way

30:28.280 --> 30:33.280
Me running on the cloud you could still be largely decentralized because it's all about ownership of data

30:33.360 --> 30:36.600
So can you run your own services through a provider?

30:36.880 --> 30:41.440
Who's not really running competing services directly, but rather having other people compete in that space

30:41.440 --> 30:44.280
I look more to stuff like the Shopify model

30:44.760 --> 30:51.680
Where there's no reason for you to employ your own e-commerce engine anymore when you can go to a Shopify and run their engine

30:52.280 --> 30:58.720
For a set fee with many thousands of other people running their the same engine for their products

30:58.720 --> 31:05.120
The one person not running an e-commerce engine is Shopify themselves, right? They're not a competitor in your own space

31:05.520 --> 31:07.520
That's fairly decentralized. I can live with that

31:07.880 --> 31:15.120
This only parts when we get into web 3. I mean blockchain is not inherently stupid. It's just wildly

31:15.240 --> 31:19.640
Misapplied right the idea of a distributed data engine is pretty compelling

31:20.520 --> 31:25.680
It's just that people don't think about it. Well, you know when I have a customer asking me about well

31:25.680 --> 31:28.400
We got to use blockchain. It's like why because he saw it in a magazine

31:28.880 --> 31:30.880
Like what do you want from it?

31:30.960 --> 31:35.040
What what's the difference and often with most companies they still want to be central point of control

31:35.040 --> 31:42.120
It's like so you don't want blockchain the idea that other entities can introduce transactions on into this data

31:42.960 --> 31:44.960
independent of you is

31:45.320 --> 31:49.760
The basic stepping point like if you're not going to do that then what are you talking about?

31:50.680 --> 31:55.800
Why do you need this? But blockchain's got the problem that BitTorrent has

31:56.040 --> 32:00.520
BitTorrent's problem was that it came out of Napster about a stealing music

32:00.520 --> 32:06.200
It was a good protocol used for where its initial use was a nefarious use that was ultimately illegal and

32:06.760 --> 32:12.040
Blockchain has the same problem. It's bound to crypto and as we're seeing pretty clearly these days

32:13.040 --> 32:15.520
Crypto is pretty much a Ponzi scheme and so

32:16.040 --> 32:21.480
Are we gonna get something from it eventually? Maybe our most people just gonna lose their money here seems like it

32:21.480 --> 32:25.840
It's easier to see that now than it then we saw it before but that's the part that's really

32:26.360 --> 32:28.360
contaminating web3 is

32:28.360 --> 32:34.680
These fairly good ideas bound up with an idea that was very easy to exploit to fairly destructive purposes

32:34.680 --> 32:39.000
And so I think most of us these days who are a little more serious about stuff are going

32:39.000 --> 32:41.840
You know, I think I'm just gonna stay back from that

32:42.960 --> 32:46.840
Rodeo and let it wind down and then we'll see what pieces are left in the end

32:47.840 --> 32:54.600
Web2 didn't happen overnight either this exploration of new ways to use the internet. It's is an exploration

32:54.600 --> 32:55.200
It takes time

32:55.200 --> 32:56.400
There's no other way to do it

32:56.400 --> 33:03.160
And so it's a question of are you gonna jump in and be part of that exploration or are you gonna witness it and then make your

33:03.160 --> 33:04.920
move later on?

33:04.920 --> 33:11.440
If you think like an engineer you're pretty conservative and you're not the first you're big on the IT mantra of change is good

33:11.800 --> 33:13.800
You go first

33:14.200 --> 33:16.200
Not a bad way to look at crypto these days

33:17.560 --> 33:19.320
Dotnet's in a good place

33:19.320 --> 33:24.520
It just knows I'm glad about that I make a podcast called dotnet rocks and back in 2011

33:24.520 --> 33:31.080
We thought maybe dotnet doesn't rock and things were pretty hard by 11 years on 12 years on dotnet's rocking pretty hard

33:31.480 --> 33:37.160
They've done a remarkable thing. They've rewritten the entire thing to be a cloud-centric

33:38.000 --> 33:43.640
heterogeneous client platform with some limitations without having to replace all the tooling in the process. I

33:44.640 --> 33:47.600
Mean if you learned how to develop against dotnet in

33:47.880 --> 33:51.520
2010 with studio 2010 I can drop you on to studio

33:51.880 --> 33:55.120
2022 and dotnet core and you won't be confused

33:55.640 --> 34:01.960
You'll more or less get it. There's a bunch of new stuff and there's some edges to things and we focus on some other elements

34:02.360 --> 34:03.560
but

34:03.560 --> 34:05.560
Really we've had a complete

34:06.440 --> 34:11.280
overhaul of this 20 year old stack over the past six seven years and

34:12.160 --> 34:15.000
Yet we don't have to relearn we don't have to start over

34:15.280 --> 34:20.600
We get to move most of our code on on to it and the new things you write we use familiar skills

34:21.120 --> 34:25.520
If anything the biggest problem Microsoft has right now with this is that it's so calm

34:25.520 --> 34:30.120
It's so similar. We still have our old practices. We're not using the new language features

34:30.120 --> 34:34.440
We're not taking advantage of the new stuff that's been brought to it and the only way they're gonna fix that is tooling

34:35.480 --> 34:37.280
Because compatibility is so important

34:37.280 --> 34:42.640
They're not going to take stuff away if you're using C sharp to constructs. They're going to keep working

34:43.440 --> 34:45.520
But you probably want to use a new one

34:45.520 --> 34:50.040
So I think you're gonna start having more clippy events where pops it goes. Wow, you're coding like it's

34:50.480 --> 34:52.480
2007 can I help you?

34:52.600 --> 34:54.600
Because you clean help and

34:55.320 --> 34:58.120
The big new tool in this space is Maui

34:58.400 --> 35:05.880
So this is the culmination of a tremendous effort inside of Microsoft to consolidate a client development solution

35:06.080 --> 35:11.920
That's deals with the heterogeneous client and multiple platforms. It's still pretty raw

35:13.120 --> 35:16.320
Again the conservative engineering type of look at that you go, you know

35:16.320 --> 35:19.880
I'll let you guys iterate on that a couple of times you guys you kind of get it right at the third version

35:20.240 --> 35:22.480
You're kind of like an aversion a half right now

35:22.480 --> 35:28.240
So we'll give you a little more time, but the goal is challenging the idea of this

35:28.600 --> 35:35.720
Magical unified client development model works for all the devices something we want our customers couldn't care less about

35:35.880 --> 35:40.640
The customer only cares that it runs on their device. They don't care if it runs on anybody else's device

35:41.200 --> 35:46.360
We're the ones who want to write one code base that runs on all of those devices because otherwise

35:46.360 --> 35:50.760
We can't keep them in sync or we're leaving somebody out and they're angry with us and that's never fun

35:51.120 --> 35:56.600
So this is Microsoft's client side attempt on this and I mean, I'm I'm excited for them

35:56.600 --> 36:03.280
This said the seven version is substantially better. I think this will be almost sexy by November of this year with dotnet eight

36:03.960 --> 36:07.480
It just takes time for them to get this many features and this many teams

36:08.640 --> 36:11.920
Co-operating across the stacks and if you're sticking with web development

36:11.920 --> 36:15.920
I don't blame you because it does it solves this problem with its own set of limitations

36:15.920 --> 36:24.040
I've yet to see a Maui implementation of a cross prop platform client solution where I said wow you couldn't do that with web

36:25.600 --> 36:27.600
We're not there yet

36:28.320 --> 36:30.320
We might be I don't know the answer to that

36:33.640 --> 36:38.220
We've talked about this a few times on the show and it doesn't seem to be going away the power platform

36:38.720 --> 36:43.840
So here's the other reality is that we kind of know what the client space landscape looks like

36:43.840 --> 36:46.400
We know there's phones and tablets and PCs an

36:47.360 --> 36:52.760
awful lot of our data over forms problem space and in work is all dependent on

36:53.040 --> 36:56.080
The cloud tenant that our employer has anyway

36:56.080 --> 37:02.240
And so the fact that we can essentially run this set of tools that builds a bulk of that for us

37:02.240 --> 37:03.960
It's pretty compelling

37:03.960 --> 37:05.960
But even more importantly

37:07.320 --> 37:15.400
These tools are simple are straightforward enough that a domain expert can take a pretty good shot at an 80% solution

37:15.840 --> 37:21.400
For a workflow for a company and then it needs to be cleaned up by some of the bit more experience

37:22.200 --> 37:27.480
But a lot of you x development can be done by the person who's going to use it

37:28.120 --> 37:33.320
Now this has happened before this is access and visual basic in the middle 90s

37:33.600 --> 37:38.840
Where most people who grab those tools were domain experts not developers

37:39.360 --> 37:43.280
They became developers later, and I think we're seeing another wave of this

37:44.560 --> 37:50.960
But the parts that we find the least pleasant as professional developers that you I multi-platform you I problem

37:51.280 --> 37:53.280
this thing kind of knocks out and

37:53.960 --> 38:00.040
Then it has a set of hooks back to back-end services with some limitations. They're all customizable

38:00.560 --> 38:04.640
We as professional developers can build additional endpoints for the power platform

38:04.640 --> 38:10.240
And if you're good at the UX side you can build custom components on the UX side for these domain experts to use too

38:10.520 --> 38:15.880
But I'm looking at our to-do list, and we're not getting to the bottom of it

38:16.240 --> 38:21.520
So there's a group of people out there that want to move things along by taking on some of that work

38:22.400 --> 38:23.640
Do it

38:23.640 --> 38:31.160
The way Microsoft's licensed the thing it's for internal apps only you pretty much cannot put a power app into public

38:31.160 --> 38:34.360
It has to be authenticated members of the tenant

38:35.000 --> 38:38.080
So it's for internal apps

38:39.080 --> 38:41.080
They weren't fun to build in the first place

38:41.360 --> 38:45.600
So anything we can do to get more of those off the table and modernize them, right?

38:45.600 --> 38:49.720
You're looking at that web forms app that the CIO wants to run on their iPad

38:49.720 --> 38:56.400
And suddenly the fact that power platform could get you a prototype of that in pretty short order. It's pretty compelling

38:58.600 --> 39:04.520
I've mentioned web WA in the context of containerization containerization is an ongoing evolving thing

39:04.520 --> 39:09.720
It's only getting bigger. I got a recent show up where we're talking about Azure application

39:10.280 --> 39:12.280
identities and

39:12.760 --> 39:16.520
That ties into giving a security context to an application

39:16.520 --> 39:19.640
It's going to run in the cloud in a lot of ways containers do that too, right?

39:19.640 --> 39:23.360
We're demanding a manifest saying this is what the app. This is the resources the app needs

39:23.360 --> 39:26.040
This is the operating contents that needs to operate in here

39:26.040 --> 39:31.240
The rights that it needs the access points that it needs and more importantly if it tries to do anything isn't in that kill it

39:32.960 --> 39:34.960
Containers are just the evolution of that

39:35.840 --> 39:43.400
In the next few years, I think we're see containerization of software in general on desktop machines because of the security problems

39:44.400 --> 39:49.400
That when a given piece of software gets exploited and it tries to do anything outside of its normal set of behaviors

39:49.520 --> 39:53.640
The operating system recognizes that it's exceeding its container limits and stops it

39:54.720 --> 39:59.400
Now that was always a good idea and Microsoft's tried to implement this in a few different ways for a long time

39:59.720 --> 40:02.120
But I think the security context is going to win. I

40:02.880 --> 40:06.880
Look at what's happened in cyber insurance in the past couple of years

40:07.320 --> 40:14.080
Today if you want to get cyber insurance not least it more expensive, but even multi they and they require

40:14.520 --> 40:15.880
multi-factor authentication

40:15.880 --> 40:20.640
But more and more I'm seeing things like you're required to do a privileged access audit. I

40:22.120 --> 40:27.800
Wouldn't surprise me at all if the insurers at some point say if the apps if your apps aren't running containers, you're not insured

40:28.520 --> 40:33.640
Because they see them as ways to avoid the exploits that the black hats are using

40:34.280 --> 40:38.120
So that might be what pushes this technology over the top as it becomes a

40:38.880 --> 40:44.320
consistent industry-wide way to resist the ransomware and other security attacks

40:45.320 --> 40:48.040
And if you're feeling a little overwhelmed with all the stuff

40:48.040 --> 40:52.280
I'm rattling through because I get to just tell stories for a living. I don't have to implement any of it

40:52.280 --> 40:54.280
Which is why it's all easy for me

40:56.280 --> 40:58.280
That's okay

40:58.880 --> 41:01.440
There are a bunch of ways to have a great development career

41:01.880 --> 41:05.920
Staying on the leading edge is really fun. If it's fun for you

41:06.000 --> 41:10.520
You know the upside the downside to the leading edge is also the bleeding edge and sometimes you bleed

41:11.480 --> 41:17.920
You can also have a great career and many people do by becoming an expert in a stack that your company values and staying

41:18.040 --> 41:21.400
That expert it may not be the newest technology anymore

41:21.400 --> 41:23.400
but it's the one the company relies on and

41:23.600 --> 41:29.440
They need those experts and they need you to continue to grow and to be good at that technology

41:29.480 --> 41:34.640
And to keep it functional for the organization to keep you into things it needs to don't jump because the thing is new

41:34.720 --> 41:37.960
You jump because it can no longer solve the business problems that it needs to solve

41:38.680 --> 41:45.520
I've talked to folks that started doing web forms develop in 2005 and their company still uses a ton of it there

41:45.520 --> 41:50.120
And it works. It's reliable. It's known set of problem spaces

41:50.120 --> 41:56.000
They have a you know, they're 15 years into this or plus and they do I really need to to jump to a new stack

41:56.000 --> 41:58.000
It's like no those apps aren't going away

41:58.240 --> 42:03.400
And in fact even when they are they're going to technologies that are orthogonal to web forms anyway

42:03.400 --> 42:06.960
That's why blazer got so hip if you're a web forms developer and you look at blazer

42:06.960 --> 42:12.800
You're just not that surprised this looks like something you've done. It's not that hard to jump on to the new stack

42:13.800 --> 42:14.880
So

42:14.880 --> 42:17.040
The question is what did you want to do?

42:17.040 --> 42:21.640
Do you want to be part of the group of folks that are always learning and pushing on a new thing?

42:21.640 --> 42:23.880
Or are you going to be the expert in a given set?

42:23.880 --> 42:30.200
You find a space that you like and you stay in that space and you get really good at space and now you're an expert in a

42:30.640 --> 42:32.120
diminishing pool

42:32.120 --> 42:34.120
Like you're pace still going to be good

42:34.800 --> 42:37.400
But you need to maintain your expertise

42:37.400 --> 42:41.880
You need to keep figuring out where the limits are and what's possible like it doesn't mean you ever stop learning

42:41.880 --> 42:43.880
We don't get to do that in this industry

42:43.880 --> 42:45.720
But it's a question of what you focus on

42:45.720 --> 42:52.120
Do you really want to learn the new bits where we're all just trying to figure it out or you continue to expand on the space that you're

42:52.280 --> 42:54.280
There's not one way to do a great career

42:55.520 --> 42:57.520
Let's talk about artificial intelligence

42:57.840 --> 43:03.800
And I use this image for the simple reason that it's it is the reason that we think about AI the way we think about it

43:03.800 --> 43:05.160
It's terrible term

43:05.160 --> 43:09.840
It was coined in the 1950s by a guy named Marvin Minsky when he's trying to sell stuff to the US military

43:10.280 --> 43:15.560
The first time regular humans heard the phrase artificial intelligence. It was in the movie

43:16.040 --> 43:20.120
2001 a space Odyssey and Hal and then he tried to kill everybody and

43:21.080 --> 43:25.080
Set up our relationship with artificial intelligence going forward

43:25.800 --> 43:31.440
It's an umbrella term the one thing I know for sure about artificial intelligence is as long as somebody's calling something artificial intelligence

43:31.440 --> 43:36.120
It's because it doesn't work as soon as it does work. It gets a new name

43:37.400 --> 43:40.720
right it becomes deep learning a predictive analytics or

43:41.320 --> 43:45.560
You know to speech tech systems as long as it doesn't work. It's AI and

43:46.520 --> 43:51.080
And so when folks talk to me about hey, you know, I'm working on this AI problem

43:51.080 --> 43:56.920
It's like, what are you really working on? Like is it a machine learning model? That's the new thing, right?

43:56.920 --> 43:58.920
Like really what really came out of

43:59.120 --> 44:04.960
Jeff Hinton's papers in 2011 that led to stuff like Siri and all the voice recognition and ultimately these vision

44:05.640 --> 44:10.280
Interpretation models is all deep learning models based on machine learning, right?

44:10.280 --> 44:13.160
Then this particular graphic I like because the short lines are

44:13.920 --> 44:18.480
The oldest technologies that those planning schedule optimization. Those are back in the 50s

44:19.000 --> 44:25.720
experts and robotics from the 1970s original speech recognition systems go back to the 80s and then in the 2010s

44:25.720 --> 44:31.680
We get this current crop of image recognition vision systems language interpretation

44:32.160 --> 44:37.080
And we can incorporate that is our software today. There are good libraries. You don't have to invent stuff

44:37.080 --> 44:42.600
It isn't research anymore. You want an image recognition module? It's a module. You load it into your software

44:42.600 --> 44:45.600
You have an image to be recognized and it can recognize it

44:48.080 --> 44:54.000
This is a real thing the software was doing what you told it to do said, oh, no, no three dogs

44:56.120 --> 44:59.080
And you've run into the chatbots, right? They're out there

44:59.600 --> 45:06.120
You they're first-line tech support for almost everything today. You're gonna get a chat bot for us and sometimes they're speech bots

45:07.080 --> 45:14.760
And they're they are getting better. There's mean. They're good. We all learned to say agent very early on if we want to get out of that loop

45:15.720 --> 45:24.020
These are again tooling sets that we can work with the area that I I'm really fascinated by right now that Microsoft's working on are these form

45:24.520 --> 45:26.520
recognizers

45:26.520 --> 45:31.160
So the idea that I can I can use an image recognition system look at a form and it recognizes

45:31.160 --> 45:35.120
What is form and what is data and then associates the two together into?

45:35.520 --> 45:37.520
Value pairs

45:38.040 --> 45:44.000
That's pretty cool, right that we had a different strategy to digitizing a form rather than building it by hand in

45:44.800 --> 45:48.440
In code that now the tool would actually recognize before you generate for you

45:48.440 --> 45:49.480
I

45:49.480 --> 45:53.480
This was really about using initially paper because they call it a form recognizer

45:53.480 --> 45:56.160
Like can I parse a page and have it pull the data out of it?

45:56.200 --> 46:02.200
But I immediately thought hey aim that in a at a web forms page and re reimparse it for me

46:03.040 --> 46:05.040
And make it into power platform stuff

46:05.960 --> 46:11.480
Like can you could I just have a tool thumb through all of the different views and an application and regenerate it in the new language?

46:12.120 --> 46:15.080
Why not we have machine learning models that are capable of parsing the data

46:16.360 --> 46:22.400
The final area in the machine learning spaces that has gotten powerful actually has been powerful a while and when people are asking about

46:22.400 --> 46:28.040
Hey, my kids getting into technology like where's the big career opportunity? It's analyzing data

46:28.360 --> 46:30.800
We have more data than ever before we're analyzing it

46:31.160 --> 46:35.800
Less and less effectively because we're just outnumbered. There's so much data and only so much time

46:35.800 --> 46:39.800
The good news is the cloud is making things simpler for us in the 90s

46:39.800 --> 46:43.000
We had most of these predictive analytic models

46:43.000 --> 46:46.000
It's just that each one of them represented a huge amount of compute

46:46.000 --> 46:49.600
And so you'd do a bunch of pre-work to figure out what the most likely

46:50.080 --> 46:56.440
Analytic model will be effective on this given data, and then you'd build out a system and run it once and it would take weeks

46:57.440 --> 47:01.240
Today, this is a couple of hours in Azure load the date

47:01.240 --> 47:05.080
You'll spend more time loading the data up then you'll run all of the predicted analytic models

47:05.080 --> 47:09.280
And then you'll run model analysis against the models to figure out the one that fits the data set best

47:10.120 --> 47:12.120
For $20 for the computer

47:12.880 --> 47:21.160
So we have better tools than ever for doing advanced analytics and as we go and when we talk about as advanced analytics, you know the predictive model

47:21.960 --> 47:24.720
Is really what's the next number that's going to come from this?

47:24.720 --> 47:27.480
What's the trend on these is just going up as it's going down, right?

47:27.480 --> 47:32.440
We have plenty of tools and those sorts of forms as we start adding in machine learning we do it in bulk

47:32.440 --> 47:38.480
We're able to do more of them faster and compare them so that we can select models more efficiently

47:38.480 --> 47:44.240
It's less time or your space and more just hammer it with compute, but you can go to a more advanced stage

47:45.080 --> 47:48.400
Given you take a predictive model, and it says this is the most likely outcome

47:48.760 --> 47:52.800
Now you can actually run a scenario beyond that you're getting into prescriptive analytics

47:52.800 --> 47:55.400
So you're cycling the predictive model with actions

47:56.040 --> 47:59.240
You've been experienced. This is where you know it or not. Have you lately?

47:59.920 --> 48:04.040
thrown a bunch of stuff in a shopping cart and abandoned it and then you get an email from someone saying hey

48:04.040 --> 48:06.040
You put this stuff in your cart

48:06.040 --> 48:08.480
Like can I give you a 10% off so you'll go buy it?

48:09.360 --> 48:15.760
You're seeing a prescriptive model saying how often do I tickle this person now that they've shown some interest to increase the

48:15.760 --> 48:19.880
Likelihood of completing a sale. There's no humans involved. It's all software

48:20.440 --> 48:25.320
But they're now running these prescriptive explorers to say how often should I hit them?

48:25.320 --> 48:31.560
But given a thousand people did that and I emailed them this way. What was the response rate?

48:31.560 --> 48:37.240
Whatever you mail in this way. What's the response rate? That's automated now that is prescriptive analytic models

48:38.160 --> 48:44.240
Now obviously in the e-commerce sale is one side, but you're also seeing the same models used for things like when should you?

48:44.520 --> 48:46.760
Evacuate a town for a forest fire

48:47.400 --> 48:51.320
If I wait till it's obvious that the fire is going to hit the town now

48:51.320 --> 48:54.920
I risk people's health in the crisis of trying to get them out

48:54.920 --> 48:58.880
Or is it better at a low stress level to say let's move them early?

48:58.880 --> 49:02.880
It'll cost us less the chance of them being injured killed is lower and

49:03.640 --> 49:06.480
Then if the fire goes the other way, it's not that big of a deal, right?

49:06.480 --> 49:11.920
We're still building prescriptive models to explore the psychological effects of emergencies and

49:12.560 --> 49:14.960
Being able to act more effectively to protect people

49:17.240 --> 49:19.240
We can also make video games

49:20.440 --> 49:22.720
So this is one of the open AI models

49:23.560 --> 49:26.320
In the early days where you would describe a game

49:26.520 --> 49:30.240
This is someone making a bad version of asteroids and it would spit out code for you

49:30.280 --> 49:36.280
This is not that exciting anymore. Most people have played hopefully with co-pilot now a whole other way to pull up code

49:36.280 --> 49:38.920
You don't understand you so have to use stackover flow for this

49:38.920 --> 49:42.840
But now you can do a machine learning model. So there's fewer people saying that's a dumb question

49:45.800 --> 49:47.640
I'm concerned with the training set

49:47.640 --> 49:53.480
We've done a couple of great shows around this with folks like Michelle Manning where we you know

49:53.480 --> 49:59.120
It's maybe generating code that works, but isn't secure or isn't you know reliable

49:59.880 --> 50:05.320
They've trained it against all of the open libraries on GitHub and that doesn't mean that means it's only as good as the code

50:05.320 --> 50:08.760
That we put into GitHub some of the code I put in the GitHub. I'm not proud of

50:09.720 --> 50:15.080
So it is interesting to say how can they improve this to say hey, I only want highly secure code

50:15.280 --> 50:20.320
That's thoughtful of all of those kinds of things. They're now starting to stick language onto this

50:20.320 --> 50:23.400
So now you're gonna talk about what code you want to write and

50:24.200 --> 50:30.560
The VP of the power platform Charles Lamanna announced they've not made a version of co-pilot for power platform

50:31.560 --> 50:38.440
So, oh you had a no-code solution where you're draggy dropping the form too much work. Just say make me a form

50:39.200 --> 50:43.920
All right now use the image recognizer show them a copy of the paper version before and it comes up

50:44.920 --> 50:53.840
So those are machine learning models for programming. There are tools for us to use the whole we will all be replaced by this is

50:54.200 --> 50:58.800
Silly it always was silly. It's only getting sillier the longer we use these things

50:58.800 --> 51:03.600
But if you don't use them in your routine work, you kind of miss it out. It's an accelerant

51:03.840 --> 51:07.080
There's no excuse for not understanding the code. You're putting your system

51:07.080 --> 51:12.440
So the idea that this is an you're already you were using Google sometimes you're using stack overflow

51:12.440 --> 51:17.720
Why wouldn't you use co-pilot to pull up code and then evaluate that code? It's easier than a blank screen

51:17.720 --> 51:24.200
It's at all anything we can do to get ourselves moving on a given problem space, but it's still our discrimination

51:25.200 --> 51:31.720
The tool does not know that this code is right all it knows it is it fit the criteria you described to it at the time

51:32.080 --> 51:35.000
That's as much as know with some percentage of probability

51:35.720 --> 51:38.360
hopefully in the high 90s, but not always and

51:40.120 --> 51:46.240
Chat GPT about the same thing right there. I call it a Dunning Kruger accelerator

51:46.920 --> 51:50.440
If you know nothing about a topic chat GPT is awesome

51:50.840 --> 51:55.040
As soon as you know something about a topic and ask chat GDP it's not that awesome

51:55.880 --> 51:57.880
Not actually concerned with facts

51:58.960 --> 52:00.960
What replaces the smartphone?

52:01.240 --> 52:05.240
I mean the smartphone is dominated. It's not the primary computer device, but it's kind of mature

52:05.720 --> 52:07.160
you know

52:07.160 --> 52:11.600
The phones get bigger they get smaller they have one camera two cameras three cameras way too many cameras

52:12.160 --> 52:14.800
But they're kind of the same. They're a slab of black glass

52:14.800 --> 52:19.880
We're kind of ripe for disintermediation the obvious devices some kind of AR headset

52:20.440 --> 52:24.400
Right is some pair of glasses that we can put on that puts the data directly to our eyes

52:24.520 --> 52:27.320
It does everything the phone does without having to pull it out

52:27.840 --> 52:31.840
All right, and actually gives us a bunch of other capabilities because now we have instrumentation on our heads

52:31.840 --> 52:35.280
so that it can observe the world around us because we're not paying attention and

52:36.240 --> 52:41.960
That offers a bunch of possibilities that being said 2023 not a good year for AR

52:43.200 --> 52:46.520
Apple's just announced. This is a mock-up of what we thought Apple was going to make

52:46.520 --> 52:50.400
It's all a lie and it currently Apple says they're not making anything they've backed off

52:50.400 --> 52:54.100
So whatever prototypes they were working on internally, they're not happy with them right now

52:54.160 --> 52:57.760
There are commercial products that are glasses with devices on it

52:57.760 --> 53:02.760
This is a Qualcomm device called the XR1 you can buy this today. It's about thousand bucks tethered to an Android phone

53:02.840 --> 53:07.800
And it's just a USB headset that has microphones and speakers and cameras and and

53:08.360 --> 53:13.440
And screens integrated into it and you're seeing these used in certain commercial applications

53:13.440 --> 53:17.200
If you want to look more like Google Glass, you can do this with the Toshiba devices. This is the Dyna edge

53:17.320 --> 53:20.420
So I want one eye a little more industrial looking

53:21.000 --> 53:26.600
Okay, this hardware exists. There is HoloLens, but HoloLens is not in a good place

53:26.600 --> 53:29.600
If I was this is the tremble version of HoloLens 2

53:29.640 --> 53:34.720
This is the one they wanted to put on all construction workers because construction workers are good with equipment

53:35.520 --> 53:36.800
at

53:36.800 --> 53:41.120
3000 bucks a piece plus about a thousand dollars a month in operating costs

53:42.120 --> 53:46.960
When I when we started doing some case studies on implied HoloLens products

53:46.960 --> 53:51.340
I was stunned at how much Azure eats to operate it properly like

53:52.280 --> 53:56.000
Now for certain markets that makes perfect sense construction site not so much

53:57.360 --> 54:02.680
But if you've been paying attention to the recent round of layoffs, you know, they've pretty much laid off the entire HoloLens team

54:03.440 --> 54:07.480
The leader of the HoloLens team a guy named Alex Kipman left Microsoft back in July

54:07.800 --> 54:12.040
So they've been a little bit leaderless for the past few years and the army announced they shut down there

54:12.040 --> 54:16.680
They were gonna shut down a project. They want to do more research on it and then these round of layoffs came

54:16.680 --> 54:19.440
So it looks like the HoloLens is an orphan for the moment

54:19.440 --> 54:25.680
I mean the the opportunity in certain verticals is really interesting the you know industrial applications where

54:26.120 --> 54:29.280
Basically equipment becomes transparent checklists are live

54:29.600 --> 54:35.640
You're making continuous video record of the maintenance that you're doing. These are all interesting applied cases

54:35.640 --> 54:37.640
I looked at this very much as the

54:38.160 --> 54:43.800
That the AR glasses were in the same place that the BlackBerry phone was in like the 1990s

54:44.840 --> 54:49.320
In the 90s if you want an email on your phone, I know crazy

54:50.480 --> 54:54.400
You had to buy these a thousand dollar phones in the 90s

54:55.120 --> 55:01.320
From from rim called the BlackBerry and had a little keyboard on it and you had to run a custom version of exchange server

55:02.360 --> 55:04.360
inside of your organization to make it work

55:04.840 --> 55:06.960
So you need a couple of guys in lab coats and

55:07.640 --> 55:14.560
A whole ton of licenses and you too could have email on your phone and it was so popular in the 90s

55:14.560 --> 55:16.560
They called them crackberries

55:16.880 --> 55:22.800
But it needed to be the right vertical it needed that cost had to be worthwhile that continuous access that person was important enough

55:22.800 --> 55:28.400
Right, you saw it on like the West Wing right the politicians and bureaucrats needed this sort of thing

55:29.320 --> 55:31.320
And of course today emails been completely

55:31.600 --> 55:33.680
Commercialized it's in every device. It's not a big deal

55:33.680 --> 55:39.320
But I look at HoloLens and the AR devices that way for the right vertical where you can afford that

55:39.400 --> 55:44.560
Expend is trivial to its value totally makes sense consumer device. No, not there yet

55:45.240 --> 55:51.440
And we don't know when we will be it's an insanely complex device now the HoloLens 2 is six years old

55:51.600 --> 55:57.320
We never saw the HoloLens 3 so the tick tock of Moore's law still applying

55:57.320 --> 56:02.200
We should be able to get dramatically better headset. We're just struggling for the applications for it

56:04.040 --> 56:10.680
I'll make fun of meta very briefly. It's not hard to do anymore. It was funnier a couple of years ago. I

56:11.640 --> 56:16.240
We would have said hey Zuckerberg created the largest loss of value in all time

56:16.240 --> 56:19.960
He burned through ten billion dollars in a year, but then I

56:20.080 --> 56:29.000
Mean Facebook was a trillion dollar company now. It's a 300 billion dollar company well done

56:30.240 --> 56:34.200
But then you know, let's look at Twitter or Tesla

56:34.720 --> 56:40.800
My billionaires messing up their companies seems to be a style. I presume it will pass

56:42.320 --> 56:44.240
These headsets are compelling

56:44.240 --> 56:51.120
This was really John Carmack the guy behind Oculus that got acquired by Facebook who has now put down his his laptop

56:51.120 --> 56:55.160
I go, okay, I've had enough you people and he's left now to so any sense

56:55.680 --> 57:01.960
That Facebook's along between Cheryl Samberg leaving and Asia and and and Carmack leaving

57:02.320 --> 57:05.760
Zucks by himself and I think fairly far off the rails

57:06.120 --> 57:07.720
Microsoft seemed to be playing ball

57:07.720 --> 57:14.240
They they wanted a team's version of this with the new the quest pro the $1,500 headset in the horizon workspace

57:14.240 --> 57:19.040
They've now backed away from this. So this is kind of a dark time in general

57:19.040 --> 57:23.440
We're kind of it for AR and VR if you are interested in developing in the space

57:23.960 --> 57:30.280
The obvious tool is unity like the bulk of development being done in the space is done in unity. It's C sharp centric

57:30.440 --> 57:34.880
It's its own custom build essentially if you've never played with this is it's an experience

57:35.080 --> 57:38.640
And I recommend the tool often to kids who think they want to make games

57:39.000 --> 57:43.560
Because you can do a few watch a few videos use the free version of unity and you can do a lot

57:43.720 --> 57:50.840
You can make a pretty basic straightforward side scroll and have an experience and then start to think more profoundly about the challenges of writing games

57:51.680 --> 57:55.960
But a lot they but unity has going forward is a really good set of 3d libraries

57:56.480 --> 57:58.680
For making it easy to do all of that three-dimensional work

57:59.400 --> 58:01.400
Okay, one last topic and then we'll wrap up

58:01.960 --> 58:08.080
Quantum computing because people love it. So quantum computing is a kind of super computing

58:08.080 --> 58:13.720
It's not likely to be a regular general-purpose compute. It's for super compute problems

58:13.720 --> 58:19.160
So the same way that we build these titanic supercomputers for modeling weather and things these are the kinds of problems basis

58:19.160 --> 58:20.880
The quantum computers good for that

58:20.880 --> 58:26.320
There are a number of companies that are building a variety of different styles of quantum computers

58:26.560 --> 58:31.720
This to me likens very much to the late 40s early 50s in

58:33.080 --> 58:38.000
General computing before the development of the of silicon

58:38.160 --> 58:45.000
So every computer is kind of bespoke. This the sycamore computer built by Google. It has 54 qubits

58:45.000 --> 58:50.000
It was the first to achieve quantum supremacy where it worked on a particular problem

58:50.000 --> 58:54.640
That was considered thousands of years of compute in traditional computing

58:55.240 --> 59:00.800
That's questionable. My favorite part of that story was it's a 54 bit computer quantum computer

59:00.800 --> 59:05.040
Except one of the bits was broken on performance day. So it was a 53 cubit cubit run

59:05.920 --> 59:10.080
this particular design of quantum computers is what they call

59:11.000 --> 59:16.680
Transmon quantum processing. So this is kind of this is a way of doing quantum entanglement with ultra-cooled

59:17.640 --> 59:19.640
Material they cool in the liquid helium

59:20.480 --> 59:22.480
Which is dangerous

59:22.480 --> 59:29.480
The Chinese have a photonic quantum computer. They had up and running in about 2020 with a hundred and 13 entangled qubits

59:29.640 --> 59:36.200
They did a Bose's sampling compute in 200 seconds. That would have been multi-billion years of traditional compute

59:36.720 --> 59:41.160
It was a known problem. It's kind of a proof point. But again, these are

59:41.800 --> 59:47.960
Getting there and then IBM's Eagle and Osprey and Condor architectures

59:48.840 --> 59:50.840
in the hundred to

59:51.280 --> 59:56.440
120 or so qubits that one was in benchmarking in 20 late 2021 2022

59:56.440 --> 01:00:02.840
We haven't seen the results from it yet. They were promising by last year to have a 400 qubit

01:00:03.600 --> 01:00:09.920
Processor that hasn't materialized yet and this was supposed to be the year they produced a thousand qubits that hasn't happened either

01:00:10.360 --> 01:00:13.480
The real question is what the hell are you going to do with this thing?

01:00:13.760 --> 01:00:15.560
Like the only thing ever here on the news

01:00:15.560 --> 01:00:19.800
This is the end of security that we're going to be able to break our say encryption

01:00:19.800 --> 01:00:21.440
Which is true?

01:00:21.440 --> 01:00:26.640
Kinda in the end encryption strategies that use prime number very these very large prime numbers are

01:00:27.240 --> 01:00:33.080
susceptible to the compute strengths of quantum computer if you have four or five thousand entangled qubits

01:00:33.080 --> 01:00:38.080
You should be able to crush through 128 digit primes in a matter of seconds

01:00:39.400 --> 01:00:41.080
We don't have to use

01:00:41.120 --> 01:00:46.720
Prime based encryption there are other kinds of encryption in fact and the NSA is currently recommending that we switch to a lattice based

01:00:47.080 --> 01:00:51.720
Encryption, it's just not as efficient to encrypt with other kinds of encryption strategies

01:00:51.720 --> 01:00:56.960
It turns out the computers are good at prime numbers as a cost effective ways to do encryption as well as decryption

01:00:57.120 --> 01:01:01.720
So forget the encryption problem solvable not interesting

01:01:02.040 --> 01:01:08.040
The most interesting problems in the quantum computing space are actually chemistry problems and the classic one for me is in agriculture

01:01:08.280 --> 01:01:15.960
So in the pre technological era if you wanted to grow crops routinely if you were planting wheat

01:01:16.600 --> 01:01:19.680
If you kept growing wheat in the same chunk of land year over year

01:01:19.680 --> 01:01:25.640
You got less and less wheat because you depleted the soil you had to rejuvenate the soil now today in an industrial world

01:01:25.800 --> 01:01:31.600
We have the Hayrabash process where we make industrial fertilizers and after you have a season of growing wheat

01:01:31.600 --> 01:01:37.120
You then fertilize the stod out of that land and repopulate that replenish the soil to grow wheat again

01:01:37.160 --> 01:01:44.960
But before we had that we rotated crops and there are bean plants typically that has a rhizome on it

01:01:45.280 --> 01:01:51.200
That lives on the roots and inside of that is an enzyme called nitrogenase and nitrogenase

01:01:52.360 --> 01:01:59.360
Naturally affixes nitrogen it takes water and night from and what and nitrogen from the air and in a catalytic reaction

01:01:59.640 --> 01:02:03.920
Turns it into ammonia so in the normal crop rotation you would grow a crop of beans

01:02:03.920 --> 01:02:09.840
You would harvest the beans you plow the plants under and then you let the land go fallow for a year

01:02:09.840 --> 01:02:17.080
You let those roots rot and they were to release fertilizers back into the soil and then the third year you can plant wheat again

01:02:17.160 --> 01:02:23.440
That's the traditional non-technical way to do it chemical fertilizers avoided that but chemical fertilizers have their own cost

01:02:24.000 --> 01:02:28.960
They're about 1% of the energy consumption of this planet is based on making and distributing fertilizers

01:02:28.960 --> 01:02:33.200
So if we could utilize this thing that a bean plant could do

01:02:33.640 --> 01:02:36.240
We could have a significant impact on agriculture

01:02:37.000 --> 01:02:41.160
The problem is that the catalytic reaction that goes on inside of that enzyme

01:02:42.000 --> 01:02:46.840
involves atoms of molybdenum and iron and it's a 2 to the

01:02:47.360 --> 01:02:54.280
170th complex problem to understand the electron interaction, which is like more atoms that are on the than they're on the earth a

01:02:56.560 --> 01:03:02.920
Midsize quantum computer something in the 400 qubit range should be able to solve this should give us an example

01:03:03.200 --> 01:03:06.640
Of the correct catalytic reaction that doesn't mean we'll immediately be able to implement it

01:03:06.640 --> 01:03:11.560
But once you know what the reaction looks like you have a chance of now engineering and implementation of it

01:03:11.560 --> 01:03:17.960
So that we could be making fertilizer directly from air at low power plant power

01:03:18.680 --> 01:03:23.080
And be able to grow food more routinely. It's an interesting quantum problem

01:03:23.080 --> 01:03:27.840
There are other quantum chemistry problems like that battery design is largely based on experimentation

01:03:28.120 --> 01:03:33.160
Not on our actual understanding of the interactions of the compounds what we have done in battery

01:03:33.280 --> 01:03:39.120
Development today has gotten really good at iterating on trying different combinations not actually understanding the optimal combination

01:03:39.120 --> 01:03:41.120
It's a quantum computing problem

01:03:41.280 --> 01:03:48.080
Modern superconductors the Rebco superconductors, which are made from rare earth materials and barium cupric oxide are

01:03:48.760 --> 01:03:56.240
ceramics that are superconductive at liquid nitrogen temperatures as opposed to niobium Tim, which is superconducting at helium temperatures

01:03:56.240 --> 01:04:00.680
Which is way harder to deal with we've had these superconductors for about 40 years

01:04:01.040 --> 01:04:03.040
We just don't really understand how they work and

01:04:04.000 --> 01:04:08.280
So it's hard to make better ones and again quantum computer quantum chemistry problem

01:04:11.160 --> 01:04:15.240
These are all deterministic problems so the real question is how many quantum computers do we need?

01:04:15.680 --> 01:04:18.440
Because once you've solved it you kind of need to solve it again, right?

01:04:18.440 --> 01:04:21.760
It's not a non deterministic problem where you need to do it every time like a weather problem

01:04:21.760 --> 01:04:24.920
It's just a deterministic problem and it reminds me of of

01:04:25.800 --> 01:04:27.080
of

01:04:27.080 --> 01:04:33.280
Thomas Watson's statement when they were first building mechanical mainframes for the original version of IBM where he told his board

01:04:33.280 --> 01:04:38.040
I think there's only a market for like five of these and then they went out selling and they sold like 25

01:04:38.040 --> 01:04:42.240
And it was a revelation, but that was because back then the computer looked like this

01:04:43.520 --> 01:04:45.520
Right, this is before

01:04:45.840 --> 01:04:47.840
Intel this is before

01:04:47.840 --> 01:04:51.240
The silicon transistor you've your computer looks like this

01:04:51.720 --> 01:04:56.840
You can't envision a smartphone like you can't see it from there. It's it's too hard

01:04:57.400 --> 01:05:02.360
The first transistor ever made may in Bell Labs the geranium transistor looked like this

01:05:03.520 --> 01:05:08.240
It's pretty hard to look at that and mink M1 chip

01:05:09.760 --> 01:05:11.760
All right, it's a big jump

01:05:12.560 --> 01:05:14.560
So going back to that mainframe

01:05:14.760 --> 01:05:16.760
What made

01:05:18.360 --> 01:05:24.440
Traditional computing useful was the integrated circuit. We suddenly had a stable reliable way to make bits

01:05:24.840 --> 01:05:30.120
We made RAM and then we made processes for them. They were consistent and we could scale them and Moore's law took over

01:05:30.120 --> 01:05:35.560
We got more and more potential compute. I described to you three different kinds of quantum computers today

01:05:35.560 --> 01:05:39.000
They were all radically different because there's not a good qubit yet

01:05:39.440 --> 01:05:44.520
Everybody's trying to make the right qubit. They're exploring their quantum computers are very

01:05:44.560 --> 01:05:48.960
Much like these bespoke general computers from the 40s and 50s

01:05:49.600 --> 01:05:55.040
And maybe that's what it's gonna take the my favorite story of this whole thing is the guy one of the guys who made this transistor

01:05:55.040 --> 01:05:57.040
Guy named William Shockley

01:05:57.240 --> 01:06:01.680
He was also the guy who who then created a company called Fairchild summer conductor

01:06:01.680 --> 01:06:04.280
And he tried to make and he made the first integrated circuits

01:06:04.280 --> 01:06:10.760
And when he was trying to figure out the chemo the chemistry was gonna need to dope it properly and what the ratio should be and so

01:06:10.760 --> 01:06:15.760
forth he used an old-style mechanical mainframe to do the computation and

01:06:16.600 --> 01:06:21.960
That gave him the models to be able to build the first integrated circuits that made far more reliable general-purpose computers

01:06:21.960 --> 01:06:25.400
I wonder if these flaky goofy

01:06:26.280 --> 01:06:31.720
Unreliable quantum computers are building today or the compute devices will need to find the reliable qubit. I

01:06:32.640 --> 01:06:36.960
Don't know the answer to that, but I like how the history rhymes. I do know this

01:06:37.320 --> 01:06:44.480
We're trying to predict the future the best way to do it is to make it and that's us we do this

01:06:44.920 --> 01:06:46.920
We're going to go out and do some work

01:06:47.760 --> 01:06:49.080
We're these next couple of days

01:06:49.080 --> 01:06:54.280
We're gonna do a bunch of learning and we're gonna create the future and I can't wait to see what we make. Thank you for your time

