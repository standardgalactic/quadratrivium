WEBVTT

00:00.000 --> 00:30.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n g

00:30.000 --> 01:00.000
gweithio, mae'n gweithio, mae'n gweithio.

01:00.000 --> 01:02.000
Y Llywodraeth Y Llywodraeth

01:30.000 --> 01:32.000
Y Llywodraeth Y Llywodraeth

02:00.000 --> 02:02.000
Y Llywodraeth Y Llywodraeth

02:30.000 --> 02:32.000
Y Llywodraeth Y Llywodraeth

03:00.000 --> 03:02.000
Y Llywodraeth Y Llywodraeth

03:02.000 --> 03:04.000
Y Llywodraeth Y Llywodraeth

03:04.000 --> 03:06.000
Y Llywodraeth Y Llywodraeth

03:06.000 --> 03:08.000
Y Llywodraeth Y Llywodraeth

03:08.000 --> 03:10.000
Y Llywodraeth Y Llywodraeth

03:10.000 --> 03:12.000
Y Llywodraeth Y Llywodraeth

03:12.000 --> 03:14.000
Y Llywodraeth Y Llywodraeth

03:14.000 --> 03:16.000
Y Llywodraeth Y Llywodraeth

03:16.000 --> 03:18.000
Y Llywodraeth Y Llywodraeth

03:20.000 --> 03:22.000
Y Llywodraeth Y Llywodraeth

03:22.000 --> 03:24.000
Y Llywodraeth Y Llywodraeth

03:24.000 --> 03:26.000
Y Llywodraeth Y Llywodraeth

03:26.000 --> 03:28.000
Y Llywodraeth Y Llywodraeth

03:28.000 --> 03:30.000
Y Llywodraeth Y Llywodraeth

03:31.000 --> 03:33.000
Y Llywodraeth Y Llywodraeth

03:33.000 --> 03:35.000
Y Llywodraeth Y Llywodraeth

03:35.000 --> 03:37.000
Y Llywodraeth Y Llywodraeth

03:38.000 --> 03:40.000
Y Llywodraeth Y Llywodraeth

03:40.000 --> 03:42.000
Y Llywodraeth Y Llywodraeth

03:44.000 --> 03:46.000
Y Llywodraeth Y Llywodraeth

03:46.000 --> 03:48.000
Y Llywodraeth Y Llywodraeth

03:48.000 --> 03:50.000
Y Llywodraeth Y Llywodraeth

03:50.000 --> 03:52.000
Y Llywodraeth Y Llywodraeth

03:52.000 --> 03:54.000
Y Llywodraeth Y Llywodraeth

03:54.000 --> 03:56.000
Y Llywodraeth Y Llywodraeth

03:56.000 --> 04:06.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio.

04:26.000 --> 04:42.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio.

04:56.000 --> 05:04.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio.

05:26.000 --> 05:34.000
Felly, mae'n gweithio, mae'n gweithio.

05:56.000 --> 06:06.000
Felly, mae'n gweithio, mae'n gweithio.

06:26.000 --> 06:42.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio.

06:42.000 --> 06:58.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio.

06:58.000 --> 07:14.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio, mae'n gweithio.

07:14.000 --> 07:30.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio.

07:30.000 --> 07:46.000
Felly, mae'n gweithio, mae'n gweithio, mae'n gweithio.

07:46.000 --> 08:02.000
Felly, mae'n gweithio, mae'n gweithio.

08:02.000 --> 08:18.000
Felly, mae'n gweithio, mae'n gweithio.

08:18.000 --> 08:34.000
Felly, mae'n gweithio, mae'n gweithio.

08:34.000 --> 08:50.000
Felly, mae'n gweithio, mae'n gweithio.

08:50.000 --> 09:06.000
Felly, mae'n gweithio, mae'n gweithio.

09:06.000 --> 09:22.000
Felly, mae'n gweithio, mae'n gweithio.

09:22.000 --> 09:38.000
Felly, mae'n gweithio, mae'n gweithio.

09:38.000 --> 09:54.000
Felly, mae'n gweithio, mae'n gweithio.

09:54.000 --> 10:10.000
Felly, mae'n gweithio, mae'n gweithio.

10:10.000 --> 10:26.000
Felly, mae'n gweithio, mae'n gweithio.

10:26.000 --> 10:42.000
Felly, mae'n gweithio, mae'n gweithio.

10:42.000 --> 10:58.000
Felly, mae'n gweithio, mae'n gweithio.

10:58.000 --> 11:14.000
Felly, mae'n gweithio, mae'n gweithio.

11:14.000 --> 11:30.000
Felly, mae'n gweithio, mae'n gweithio.

11:30.000 --> 11:46.000
Felly, mae'n gweithio, mae'n gweithio.

11:46.000 --> 12:02.000
Felly, mae'n gweithio, mae'n gweithio.

12:02.000 --> 12:18.000
Felly, mae'n gweithio, mae'n gweithio.

12:18.000 --> 12:34.000
Felly, mae'n gweithio, mae'n gweithio.

12:34.000 --> 12:50.000
Felly, mae'n gweithio, mae'n gweithio.

12:50.000 --> 13:06.000
Felly, mae'n gweithio, mae'n gweithio.

13:06.000 --> 13:22.000
Felly, mae'n gweithio, mae'n gweithio.

13:22.000 --> 13:38.000
Felly, mae'n gweithio, mae'n gweithio.

13:38.000 --> 13:54.000
Felly, mae'n gweithio, mae'n gweithio.

13:54.000 --> 14:20.000
Felly, mae'n gweithio, mae'n gweithio.

14:20.000 --> 14:22.000
Felly, mae'n gweithio.

14:22.000 --> 14:24.000
Mae'n gweithio.

14:24.000 --> 14:26.000
Mae'n gweithio.

14:26.000 --> 14:28.000
Mae'n gweithio.

14:28.000 --> 14:30.000
Mae'n gweithio.

14:30.000 --> 14:32.000
Mae'n gweithio.

14:32.000 --> 14:34.000
Mae'n gweithio.

14:34.000 --> 14:36.000
Mae'n gweithio.

14:36.000 --> 14:38.000
Mae'n gweithio.

14:38.000 --> 14:40.000
Mae'n gweithio.

14:40.000 --> 14:42.000
Mae'n gweithio.

14:42.000 --> 14:44.000
Mae'n gweithio.

14:44.000 --> 14:46.000
Mae'n gweithio.

14:46.000 --> 14:48.000
Mae'n gweithio.

14:48.000 --> 14:50.000
Mae'n gweithio.

14:50.000 --> 14:52.000
Mae'n gweithio.

14:52.000 --> 14:54.000
Mae'n gweithio.

14:54.000 --> 14:56.000
Mae'n gweithio.

14:56.000 --> 14:58.000
Mae'n gweithio.

14:58.000 --> 15:00.000
Mae'n gweithio.

15:00.000 --> 15:02.000
Mae'n gweithio.

15:02.000 --> 15:04.000
Mae'n gweithio.

15:04.000 --> 15:06.000
Mae'n gweithio.

15:06.000 --> 15:08.000
Mae'n gweithio.

15:08.000 --> 15:10.000
Mae'n gweithio.

15:10.000 --> 15:12.000
Mae'n gweithio.

15:12.000 --> 15:14.000
Mae'n gweithio.

15:14.000 --> 15:16.000
Mae'n gweithio.

15:16.000 --> 15:18.000
Mae'n gweithio.

15:18.000 --> 15:20.000
Mae'n gweithio.

15:20.000 --> 15:22.000
Mae'n gweithio.

15:22.000 --> 15:24.000
Mae'n gweithio.

15:24.000 --> 15:26.000
Mae'n gweithio.

15:26.000 --> 15:28.000
Mae'n gweithio.

15:28.000 --> 15:30.000
Mae'n gweithio.

15:30.000 --> 15:32.000
Mae'n gweithio.

15:32.000 --> 15:34.000
Mae'n gweithio.

15:34.000 --> 15:36.000
Mae'n gweithio.

15:36.000 --> 15:38.000
Mae'n gweithio.

15:38.000 --> 15:40.000
Mae'n gweithio.

15:40.000 --> 15:42.000
Mae'n gweithio.

15:42.000 --> 15:44.000
Mae'n gweithio.

15:44.000 --> 15:46.000
Mae'n gweithio.

15:46.000 --> 15:48.000
Mae'n gweithio.

15:48.000 --> 15:50.000
Mae'n gweithio.

15:50.000 --> 15:52.000
Mae'n gweithio.

15:52.000 --> 15:54.000
Mae'n gweithio.

15:54.000 --> 15:56.000
Mae'n gweithio.

15:56.000 --> 15:58.000
Mae'n gweithio.

15:58.000 --> 16:00.000
Mae'n gweithio.

16:00.000 --> 16:02.000
Mae'n gweithio.

16:02.000 --> 16:04.000
Mae'n gweithio.

16:04.000 --> 16:06.000
Mae'n gweithio.

16:06.000 --> 16:08.000
Mae'n gweithio.

16:08.000 --> 16:10.000
Mae'n gweithio.

16:10.000 --> 16:12.000
Mae'n gweithio.

16:12.000 --> 16:14.000
Mae'n gweithio.

16:14.000 --> 16:16.000
Mae'n gweithio.

16:16.000 --> 16:18.000
Mae'n gweithio.

16:18.000 --> 16:20.000
Mae'n gweithio.

16:20.000 --> 16:22.000
Mae'n gweithio.

16:22.000 --> 16:24.000
Mae'n gweithio.

16:24.000 --> 16:26.000
Mae'n gweithio.

16:26.000 --> 16:28.000
Mae'n gweithio.

16:28.000 --> 16:30.000
Mae'n gweithio.

16:30.000 --> 16:32.000
Mae'n gweithio.

16:32.000 --> 16:34.000
Mae'n gweithio.

16:34.000 --> 16:36.000
Mae'n gweithio.

16:36.000 --> 16:38.000
Mae'n gweithio.

16:38.000 --> 16:40.000
Mae'n gweithio.

16:40.000 --> 16:42.000
Mae'n gweithio.

16:42.000 --> 16:44.000
Mae'n gweithio.

16:44.000 --> 16:46.000
Mae'n gweithio.

16:46.000 --> 16:48.000
Mae'n gweithio.

16:48.000 --> 16:50.000
Mae'n gweithio.

16:50.000 --> 16:52.000
Mae'n gweithio.

16:52.000 --> 16:54.000
Mae'n gweithio.

16:54.000 --> 16:56.000
Mae'n gweithio.

16:56.000 --> 16:58.000
Mae'n gweithio.

16:58.000 --> 17:00.000
Mae'n gweithio.

17:00.000 --> 17:02.000
Mae'n gweithio.

17:02.000 --> 17:04.000
Mae'n gweithio.

17:04.000 --> 17:06.000
Mae'n gweithio.

17:06.000 --> 17:08.000
Mae'n gweithio.

17:08.000 --> 17:10.000
Mae'n gweithio.

17:10.000 --> 17:12.000
Mae'n gweithio.

17:12.000 --> 17:14.000
Mae'n gweithio.

17:14.000 --> 17:16.000
Mae'n gweithio.

17:16.000 --> 17:18.000
Mae'n gweithio.

17:18.000 --> 17:20.000
Mae'n gweithio.

17:20.000 --> 17:22.000
Mae'n gweithio.

17:22.000 --> 17:24.000
Mae'n gweithio.

17:24.000 --> 17:26.000
Mae'n gweithio.

17:26.000 --> 17:28.000
Mae'n gweithio.

17:28.000 --> 17:30.000
Mae'n gweithio.

17:30.000 --> 17:32.000
Mae'n gweithio.

17:32.000 --> 17:34.000
Mae'n gweithio.

17:34.000 --> 17:36.000
Mae'n gweithio.

17:38.000 --> 17:40.000
Mae'n gweithio.

17:40.000 --> 17:42.000
Mae'n gweithio.

17:42.000 --> 17:44.000
Mae'n gweithio.

17:44.000 --> 17:46.000
Mae'n gweithio.

17:46.000 --> 17:48.000
Mae'n gweithio.

17:48.000 --> 17:50.000
Mae'n gweithio.

17:50.000 --> 17:52.000
Mae'n gweithio.

17:52.000 --> 17:54.000
Mae'n gweithio.

17:54.000 --> 17:56.000
Mae'n gweithio.

17:56.000 --> 17:58.000
Mae'n gweithio.

17:58.000 --> 18:00.000
Mae'n gweithio.

18:00.000 --> 18:02.000
Mae'n gweithio.

18:02.000 --> 18:04.000
Mae Mae'n gweithio.

18:04.000 --> 18:06.000
Mae'n gweithio.

18:06.000 --> 18:08.000
Mae'n gweithio.

18:08.000 --> 18:10.000
Mae'n gweithio.

18:10.000 --> 18:16.000
Mae'n gweithio.

18:16.000 --> 18:18.000
Mae'n gweithio.

18:18.000 --> 18:20.000
Mae'n gweithio.

18:20.000 --> 18:22.780
a brwd nu yn ymwneud,

18:22.780 --> 18:25.000
a gallwn sandwyd fel ei plac i'n gwyld iawn hwnnw,

18:25.280 --> 18:27.400
neu yn y ddweud y ddaw fyddi,

18:27.400 --> 18:28.400
ond iawn uchddianiaeth.

18:28.860 --> 18:30.640
A hyngornau pa gydajiadau poddyn nhw,

18:30.640 --> 18:32.280
fe oedd datズwn i mewn 들thysgwydau,

18:32.280 --> 18:34.360
ond yw'r gabbwn wedi tyw'r hyn fel hyn.

18:34.360 --> 18:35.960
Roedd eich bod yn byth storiedd Ni,

18:35.960 --> 18:36.840
gallwn gweffordd Llanțiol,

18:36.840 --> 18:38.660
yn annoto argyn adeg y dyn nhw,

18:38.660 --> 18:40.560
jydw i chi'n gweld dau ei Vaugh Cymru

18:40.560 --> 18:42.060
pan wedi'i mewn ddwy чувствio'r uradora

18:42.060 --> 18:45.660
a chi ei i wneud nhw, contractorio dod yn besyaig unig....

18:45.660 --> 18:49.400
Yn ran gran stan o armwyhan gael y cyfre Ac i am Ym mhwyl un menos wedi radi.

18:49.400 --> 18:53.380
얘� yn reduction, ar达, ac yn twrishna oedd—

18:53.380 --> 18:55.500
Foc lwy, rhaid i ni ddech durum sy'n gwneud hyn wediair?

18:55.500 --> 18:58.680
F חos mae'n ym mwyng ym hefyd aran, lly, gan lly,

18:58.680 --> 19:00.540
ein le incorrectolaeth ac mae geniat yn gyflwyfonol.

19:00.540 --> 19:03.700
Wrth byd storaheg ychydig hyn yn tw rhagol.

19:03.700 --> 19:05.500
Dw i roedd y cyflwybarth sydd pobl yn ysgrif,

19:05.500 --> 19:06.980
additive knowyne.

19:06.980 --> 19:08.540
Yャ, fan eich rhaid iddo i chi'n wneud?

19:08.540 --> 19:09.860
ac rongsydd.

19:09.860 --> 19:11.240
Should we flip back?

19:11.240 --> 19:13.740
The answer is actually a trick question.

19:13.740 --> 19:15.100
Sydd sydd ydych yn rhaglenau.

19:15.100 --> 19:18.120
Most of you were in fact right.

19:18.120 --> 19:22.140
But if you take a glance at this, this is getting really, really good.

19:22.140 --> 19:27.460
This is just a taste of the images that we might see down the line.

19:27.460 --> 19:32.540
In fact, that video with which we began, Tom Cruise,

19:32.540 --> 19:34.660
as you might have gleaned, was not in fact Tom Cruise.

19:34.660 --> 19:36.340
That was an example of a deep fake.

19:36.340 --> 19:49.500
y pwysig yn cynllunio ni awdd dependydd yr animal ar

19:49.500 --> 19:57.080
dd pawn hych Cymru i wneud o ddeallurio ysgol yn ymwinell, iddyn nhw senseid gyntaf,

19:57.080 --> 20:03.780
acredwch chi'n ymdd样di mats, ac ymatebai hawdd a gw Spin chefiau ar gyfer y cympael tyfan,

20:03.780 --> 20:05.820
C' webcam cyf Suzuki yn go iawn gyfo'r ffonduddau.

20:05.820 --> 20:09.640
Mae'n cyfattifiwch ar gyfyrdd glansian iawn sou ар fyrdd gan gyfodd yn teitl

20:09.660 --> 20:12.020
a'r cyffredin siarad hen yn bod расwylol ein scrydd.

20:12.040 --> 20:15.600
A o ran dod dyn ni'n mynd i, wr hefyd yr un oed fel oedd hyn sy'n mynd

20:15.600 --> 20:17.340
hun yma dy Grant-G跑.

20:17.340 --> 20:21.200
Gbi ddangosubbyd ddod ei bod pob dw'i s�� o ф pas ac rwy'r psychologist

20:21.220 --> 20:26.040
e'n mynd i glawethe ledd yn credu drwy wideg a threatensie gyda history.

20:26.040 --> 20:29.920
Felly mae'i dde'i arferwad iddyn ni'n gemddol advertisements neu traddндau summar.

20:29.920 --> 20:34.280
beth ddechrau hyn èl aen ni f夜nwyr gallwch chi wedi

20:34.280 --> 20:38.220
derbyn rhwun arna Diolch i dda'r rywun ynhlulu.

20:38.220 --> 20:40.940
Panyluk …

20:40.940 --> 20:43.160
associate

20:43.160 --> 20:46.020
Si haf pa tro dda pa sy'n fawr, y cymdeilydd hearr.

20:46.020 --> 20:48.180
Mae mae'r sgiliau hynny, darn byn heb.

20:48.180 --> 20:50.780
Dyna, a'igusach,

20:52.080 --> 20:55.540
I pan c Intelligence leader C rond zatblade cych studio.

20:55.540 --> 20:59.540
As we eat, we chat and laugh and catch up on each other's day, dot, dot, dot.

20:59.540 --> 21:00.540
SA2.

21:00.540 --> 21:03.540
My mother packs me a sandwich, a drink, fruit, and a treat.

21:03.540 --> 21:06.540
When I get in the lunchroom, I find an empty table and sit there and I eat my lunch.

21:06.540 --> 21:09.540
My friends come and sit down with me, dot, dot, dot.

21:09.540 --> 21:11.540
Runkshin, should we see what folks think?

21:11.540 --> 21:16.540
It looks like most of you think that SA1 was generated by AI.

21:16.540 --> 21:22.540
And in fact, if we flip back to the answer here, it was in fact SA1.

21:23.540 --> 21:27.540
So it's great that we now already have seemingly this discerning eye,

21:27.540 --> 21:32.540
but let me perhaps deflate that enthusiasm by saying it's only going to get harder

21:32.540 --> 21:34.540
to discern one from the other.

21:34.540 --> 21:37.540
And we're really now on the bleeding edge of what's soon to be possible.

21:37.540 --> 21:41.540
But most everyone in this room has probably by now seen, tried,

21:41.540 --> 21:45.540
certainly heard of ChatGPT, which is all about textual generation.

21:45.540 --> 21:48.540
Within CS50 and within academia more generally,

21:48.540 --> 21:51.540
have we been thinking about, talking about, how, whether to use

21:51.540 --> 21:53.540
or not use these kinds of technologies.

21:53.540 --> 21:56.540
And if the students in the room haven't told the family members in the room already,

21:56.540 --> 21:59.540
this here is an excerpt from CS50's own syllabus this year,

21:59.540 --> 22:04.540
whereby we have deemed tools like ChatGPT in their current form just too helpful.

22:04.540 --> 22:06.540
Sort of like an overzealous friend who, in school,

22:06.540 --> 22:09.540
just wants to give you all of the answers instead of leading you to them.

22:09.540 --> 22:16.540
And so we simply prohibit by policy using AI-based software such as ChatGPT,

22:16.540 --> 22:19.540
third-party tools like GitHub Co-Pilot, Bing Chat, and others,

22:19.540 --> 22:23.540
that suggests or completes answers to questions or lines of code.

22:23.540 --> 22:27.540
But it would seem reactionary to take away what technology surely has

22:27.540 --> 22:29.540
some potential upsides for education.

22:29.540 --> 22:32.540
And so within CS50 this semester, as well as this past summer,

22:32.540 --> 22:36.540
have we allowed students to use CS50's own AI-based software,

22:36.540 --> 22:39.540
which are in effect, as we'll discuss, built on top of these third-party tools,

22:39.540 --> 22:43.540
ChatGPT from open AI, companies like Microsoft and beyond.

22:43.540 --> 22:47.540
And in fact, what students can now use is this brought-to-life CS50 duck,

22:47.540 --> 22:52.540
or DDB, duck debugger within a website of our own, CS50.ai,

22:52.540 --> 22:55.540
and another that your students know known as CS50.dev.

22:55.540 --> 22:59.540
So students are using it, but in a way where we have tempered the enthusiasm

22:59.540 --> 23:01.540
of what might otherwise be an overly helpful duck

23:01.540 --> 23:03.540
to model it more akin to a good teacher,

23:03.540 --> 23:06.540
a good teaching fellow who might guide you to the answers,

23:06.540 --> 23:08.540
but not simply hand them outright.

23:08.540 --> 23:09.540
So what does that actually mean?

23:09.540 --> 23:11.540
And in what form does this duck come?

23:11.540 --> 23:14.540
Well, architecturally, for those of you with engineering backgrounds,

23:14.540 --> 23:16.540
they might be curious as to how this is actually implemented.

23:16.540 --> 23:20.540
If a student here in the class has a question virtually in this case,

23:20.540 --> 23:25.540
they somehow ask these questions of this central web application, CS50.ai.

23:25.540 --> 23:29.540
But we, in turn, have built much of our own logic on top of third-party services

23:29.540 --> 23:33.540
known as APIs, application programming interfaces,

23:33.540 --> 23:36.540
features that other companies provide that people like us can use

23:36.540 --> 23:39.540
so as they are doing really a lot of the heavy lifting.

23:39.540 --> 23:41.540
The so-called large language models are there.

23:41.540 --> 23:44.540
But we, too, have information that is not in these models yet.

23:44.540 --> 23:47.540
For instance, the words that came out of my mouth just last week

23:47.540 --> 23:49.540
when we had a lecture on some other topic,

23:49.540 --> 23:53.540
not to mention all of the past lectures and homework assignments from this year.

23:53.540 --> 23:57.540
So we have our own vector database locally via which we can search

23:57.540 --> 24:01.540
for more recent information and then hand some of that information into these models,

24:01.540 --> 24:03.540
which you might recall, at least for open AI,

24:03.540 --> 24:08.540
is cut off as of 2021, as of now, to make the information even more current.

24:08.540 --> 24:10.540
So architecturally, that's sort of the flow.

24:10.540 --> 24:15.540
But for now, I thought I'd share at a higher level what it is your students are already familiar with

24:15.540 --> 24:19.540
and what will soon be more broadly available to our own students online as well.

24:19.540 --> 24:23.540
So what we've focused on is what's generally now known as prompt engineering,

24:23.540 --> 24:27.540
which isn't really a technical phrase because it's not so much engineering

24:27.540 --> 24:28.540
in the traditional sense.

24:28.540 --> 24:33.540
It really is just English, what we are largely doing when it comes to giving the AI

24:33.540 --> 24:36.540
the personality of a good teacher or a good duck.

24:36.540 --> 24:40.540
So what we're doing is giving it what's known as a system prompt nowadays,

24:40.540 --> 24:44.540
whereby we write some English sentences, send those English sentences to open AI

24:44.540 --> 24:48.540
or Microsoft that sort of teaches it how to behave,

24:48.540 --> 24:50.540
not just using its own knowledge out of the box,

24:50.540 --> 24:54.540
but coercing it to behave a little more educationally constructively.

24:54.540 --> 24:58.540
And so, for instance, a representative snippet of English that we provide to these services

24:58.540 --> 25:00.540
looks a little something like this, quote unquote.

25:00.540 --> 25:04.540
You are a friendly and supportive teaching assistant for CS50.

25:04.540 --> 25:06.540
You are also a rubber duck.

25:06.540 --> 25:10.540
You answer student questions only about CS50 in the field of computer science.

25:10.540 --> 25:13.540
Do not answer questions about unrelated topics.

25:13.540 --> 25:17.540
Do not provide full answers to problem sets as this would violate academic honesty.

25:17.540 --> 25:21.540
And so, in essence, and you can sort of do this manually with ChatGPT,

25:21.540 --> 25:23.540
you can tell it or ask it how to behave.

25:23.540 --> 25:27.540
We essentially are doing this automatically so that it doesn't just hand answers

25:27.540 --> 25:30.540
out of the box and knows a little something more about us.

25:30.540 --> 25:33.540
There's also in this world of AI right now the notion of a user prompt,

25:33.540 --> 25:35.540
versus that system prompt.

25:35.540 --> 25:39.540
And the user prompt, in our case, is essentially the student's own question.

25:39.540 --> 25:43.540
I have a question about X, or I have a problem with my code here in Y.

25:43.540 --> 25:46.540
So we pass to those same API students' own questions

25:46.540 --> 25:48.540
as part of this so-called user prompt,

25:48.540 --> 25:51.540
just so you're familiar now with some of the vernacular of late.

25:51.540 --> 25:54.540
Now, the programming environment that students have been using this whole year

25:54.540 --> 25:57.540
is known as Visual Studio Code, a popular open source free product

25:57.540 --> 26:01.540
that so many engineers around the world now use.

26:01.540 --> 26:04.540
But we've instrumented it to be a little more course specific,

26:04.540 --> 26:09.540
with some course specific features that make learning within this environment

26:09.540 --> 26:11.540
all the easier.

26:11.540 --> 26:13.540
It lives at cs50.dev.

26:13.540 --> 26:17.540
And as students in this room know that, as of now, the virtual duck lives

26:17.540 --> 26:21.540
within this environment and can do things like explain highlighted lines of code.

26:21.540 --> 26:24.540
So here, for instance, is a screenshot of this programming environment.

26:24.540 --> 26:27.540
Here is some arcane looking code in a language called C

26:27.540 --> 26:29.540
that we've just left behind us in the class.

26:30.540 --> 26:33.540
And suppose that you don't understand what one or more of these lines of code do,

26:33.540 --> 26:37.540
students can now highlight those lines, right click or control click on it,

26:37.540 --> 26:40.540
select explain highlighted code, and voila,

26:40.540 --> 26:45.540
they see a chat GPT-like explanation of that very code within a second or so

26:45.540 --> 26:50.540
that no human has typed out but that's been dynamically generated based on this code.

26:50.540 --> 26:53.540
Other things that the duck can now do for students

26:53.540 --> 26:56.540
is advise students on how to improve their code's style,

26:56.540 --> 26:58.540
the aesthetics, the formatting thereof.

26:58.540 --> 27:01.540
And so, for instance, here is similar code in a language called C

27:01.540 --> 27:03.540
and I'll stipulate that it's very messy.

27:03.540 --> 27:07.540
Everything is left aligned instead of nicely indented so it looks a little more structured.

27:07.540 --> 27:09.540
Students can now click a button.

27:09.540 --> 27:12.540
They'll see at the right hand side in green how their code should ideally look

27:12.540 --> 27:15.540
and if they're not quite sure what those changes are or why,

27:15.540 --> 27:17.540
they can click on explain changes.

27:17.540 --> 27:20.540
And similarly, the duck advises them on how and why

27:20.540 --> 27:25.540
to turn their not great code into greater code from left to right respectively.

27:25.540 --> 27:28.540
More compellingly and more generalizable beyond CS50

27:28.540 --> 27:31.540
and beyond computer science is AI's ability to answer

27:31.540 --> 27:34.540
most of the questions that students might now ask online.

27:34.540 --> 27:36.540
And we've been doing asynchronous Q&A for years

27:36.540 --> 27:39.540
via various mobile or web applications and the like,

27:39.540 --> 27:41.540
but to date it has been humans,

27:41.540 --> 27:44.540
myself included responding to all of those questions.

27:44.540 --> 27:48.540
Now the duck has an opportunity to chime in generally within three seconds

27:48.540 --> 27:52.540
because we've integrated into an online Q&A tool that students in CS50

27:52.540 --> 27:54.540
and elsewhere across Harvard have long used.

27:54.540 --> 27:58.540
So here's an anonymized screenshot of a question from an actual student

27:58.540 --> 28:01.540
but written here as John Harvard who asked this summer

28:01.540 --> 28:04.540
in the summer version of CS50, what is flask exactly?

28:04.540 --> 28:07.540
So fairly definitional question and here is what the duck spit out

28:07.540 --> 28:10.540
thanks to that architecture I described before.

28:10.540 --> 28:12.540
I'll stipulate that this is correct,

28:12.540 --> 28:16.540
but it is mostly a definition akin to what Google or Bing could already give you last year,

28:16.540 --> 28:20.540
but here's a more nuanced question for instance from another anonymized students.

28:20.540 --> 28:24.540
In this question here the students including an error message that they're seeing,

28:24.540 --> 28:29.540
they're asking about that and they're asking a little more broadly and qualitatively

28:29.540 --> 28:32.540
is there a more efficient way to write this code?

28:32.540 --> 28:35.540
A question that really is best answered based on experience.

28:35.540 --> 28:38.540
Here I'll stipulate that the duck responded with this answer

28:38.540 --> 28:40.540
which is actually pretty darn good,

28:40.540 --> 28:43.540
not only responding in English but with some sample starter code

28:43.540 --> 28:45.540
that would make sense in this context

28:45.540 --> 28:49.540
and at the bottom it's worth noting because none of this technology is perfect

28:49.540 --> 28:52.540
just yet, it's still indeed very bleeding edge

28:52.540 --> 28:56.540
and so what we have chosen to do within CS50 is include disclaimers like this.

28:56.540 --> 28:58.540
I am an experimental bot, quack.

28:58.540 --> 29:04.540
Do not assume that my reply is accurate unless you see that it's been endorsed by humans staff, quack.

29:04.540 --> 29:07.540
And in fact at top right the mechanism we've been using in this tool

29:07.540 --> 29:10.540
is usually within minutes a human whether it's a teaching fellow,

29:10.540 --> 29:13.540
course assistant or myself, we'll click on a button like this

29:13.540 --> 29:17.540
to signal to our human students that yes, like the duck is spot on here

29:17.540 --> 29:21.540
or we have an opportunity as always to chime in with our own responses.

29:21.540 --> 29:24.540
Frankly that disclaimer, that button will soon I do think go away

29:24.540 --> 29:26.540
as the software gets better and better,

29:26.540 --> 29:30.540
but for now that's how we're modulating exactly what students' expectations might be

29:30.540 --> 29:33.540
when it comes to correctness or incorrectness.

29:33.540 --> 29:36.540
It's common to in programming to see a lot of error messages

29:36.540 --> 29:38.540
certainly when you're learning first hand.

29:38.540 --> 29:42.540
A lot of these error messages are cane, confusing certainly to students

29:42.540 --> 29:44.540
versus the people who wrote them.

29:44.540 --> 29:48.540
We'll see a box like this whenever one of their terminal window programs airs,

29:48.540 --> 29:53.540
they'll be assisted to with English like TF like support

29:53.540 --> 29:56.540
when it comes to explaining what it is that went wrong with that command.

29:56.540 --> 30:00.540
And ultimately what this is really doing for students in our own experience already

30:00.540 --> 30:04.540
is providing them really with virtual office hours and 24 seven,

30:04.540 --> 30:07.540
which is actually quite compelling in a university environment

30:07.540 --> 30:09.540
where students schedules are already tightly packed,

30:09.540 --> 30:12.540
be it with academics, the curriculars, athletics and the like,

30:12.540 --> 30:15.540
and they might have enough time to dive into a homework assignment,

30:15.540 --> 30:17.540
maybe eight hours even for something sizable,

30:17.540 --> 30:20.540
but if they hit that wall a couple of hours in,

30:20.540 --> 30:23.540
yeah, they can go to office hours or they can ask a question

30:23.540 --> 30:27.540
asynchronously online, but it's really not optimal in the moment support

30:27.540 --> 30:31.540
that we can now provide all the more effectively we hope through software as well.

30:31.540 --> 30:34.540
So if you're curious, even if you're not a technophile yourself,

30:34.540 --> 30:38.540
anyone on the internet can go to cs50.ai and experiment with this user interface.

30:38.540 --> 30:41.540
This one here actually resembles chat GPT itself,

30:41.540 --> 30:44.540
but it's specific to cs50.

30:44.540 --> 30:48.540
And here again is just a sequence of screenshots that I'll stipulate for today's purposes

30:48.540 --> 30:52.540
are pretty darn good and akin to what I myself or a teaching fellow would reply to

30:52.540 --> 30:57.540
and answer to a student's question in this case about their particular code.

30:57.540 --> 30:59.540
And ultimately it's really aspirational.

30:59.540 --> 31:04.540
The goal here ultimately is to really approximate a one to one teacher to student ratio,

31:04.540 --> 31:08.540
which despite all of the resources we within cs50, we within Harvard

31:08.540 --> 31:12.540
and places like Yale have, we certainly have never had enough resources

31:12.540 --> 31:16.540
to approximate what might really be ideal, which is more of an apprenticeship model,

31:16.540 --> 31:20.540
a mentorship whereby it's just you and that teacher working one on one.

31:20.540 --> 31:23.540
Now we still have humans and the goal is not to reduce that human support,

31:23.540 --> 31:28.540
but to focus it all the more consciously on the students who would benefit most

31:28.540 --> 31:32.540
from some impersonal one-on-one support versus students who would happily take it

31:32.540 --> 31:35.540
at any hour of the day more digitally via online.

31:35.540 --> 31:39.540
And in fact, we're still in the process of evaluating just how well or not well all of this works,

31:39.540 --> 31:43.540
but based on our summer experiment alone with about 70 students a few months back,

31:43.540 --> 31:47.540
one student wrote us at term's end, it felt like having a personal tutor.

31:47.540 --> 31:51.540
I love how AI bots will answer questions without ego and without judgment,

31:51.540 --> 31:56.540
generally entertaining even the stupidest of questions without treating them like they're stupid.

31:56.540 --> 32:02.540
It has an, as one could expect, ironically, an inhuman level of patience.

32:02.540 --> 32:08.540
And so I thought that's telling as to how even one student is perceiving these new possibilities.

32:08.540 --> 32:12.540
So let's consider now more academically what it is that's enabling those kinds of tools,

32:12.540 --> 32:16.540
not just within CS50, within computer science, but really the world more generally.

32:16.540 --> 32:20.540
What the whole world's been talking about is generative artificial intelligence,

32:20.540 --> 32:26.540
AI that can generate images, generate text and sort of mimic the behavior of what we think of as human.

32:26.540 --> 32:28.540
So what does that really mean?

32:28.540 --> 32:30.540
Well, let's start really at the beginning.

32:30.540 --> 32:33.540
Artificial intelligence is actually a technique, a technology,

32:33.540 --> 32:35.540
a subject that's actually been with us for some time,

32:35.540 --> 32:42.540
but it really was the introduction of this very user-friendly interface known as chatGPT

32:42.540 --> 32:46.540
and some of the more recent academic work over really just the past five or six years

32:46.540 --> 32:49.540
that really allowed us to take a massive leap forward,

32:49.540 --> 32:52.540
it would seem technologically, as to what these things can now do.

32:52.540 --> 32:54.540
So what is artificial intelligence?

32:54.540 --> 32:57.540
It's been with us for some time and it's honestly so omnipresent

32:57.540 --> 32:59.540
that we sort of take it for granted nowadays.

32:59.540 --> 33:02.540
Gmail outlook have gotten really good at spam detection.

33:02.540 --> 33:04.540
If you haven't checked your spam folder in a while,

33:04.540 --> 33:08.540
that's testament to just how good they seem to be at getting it out of your inbox.

33:08.540 --> 33:11.540
Handwriting recognition has been with us for some time.

33:11.540 --> 33:15.540
I daresay it too is only getting better and better the more the software is able to adapt

33:15.540 --> 33:18.540
to different handwriting styles such as this.

33:18.540 --> 33:22.540
Recommendation histories and the like, whether using Netflix or any other service,

33:22.540 --> 33:26.540
have gotten better and better at recommending things you might like based on things

33:26.540 --> 33:30.540
you have liked and maybe based on things other people who like the same thing

33:30.540 --> 33:32.540
as you might have liked.

33:32.540 --> 33:34.540
And suffice it to say, there's no one at Netflix,

33:34.540 --> 33:36.540
akin to the old like VHS stores of yesteryear,

33:36.540 --> 33:40.540
who are recommending to you specifically what movie you might like

33:40.540 --> 33:45.540
and there's no code, no algorithm that says if they like X, then recommend Y.

33:45.540 --> 33:48.540
Elts recommend Z because there's just too many movies, too many people,

33:48.540 --> 33:50.540
too many different tastes in the world.

33:50.540 --> 33:54.540
So AI is increasingly sort of looking for patterns that might not even be obvious

33:54.540 --> 33:57.540
to us humans and dynamically figuring out what might be good for me,

33:57.540 --> 34:00.540
for you, or you, or anyone else.

34:00.540 --> 34:04.540
Siri, Google Assistant, Alexa, any of these voice recognition tools

34:04.540 --> 34:09.540
that are answering questions that too suffice it to say is all powered by AI.

34:09.540 --> 34:12.540
But let's start with something a little simpler than any of those applications

34:12.540 --> 34:15.540
and this is one of the first arcade games from yesteryear known as Pong

34:15.540 --> 34:19.540
and it's sort of like table tennis and person on the left can move their paddle up and down.

34:19.540 --> 34:23.540
Personal on the right can do the same and the goal is to get the ball past the other person.

34:23.540 --> 34:27.540
Or conversely, make sure it hits your paddle and bounces back.

34:27.540 --> 34:32.540
Well, somewhat simpler than this and so far as it can be one player is another Atari game

34:32.540 --> 34:35.540
from yesteryear known as Breakout whereby you're essentially just trying to bang the ball

34:35.540 --> 34:40.540
against the bricks to get more and more points and get rid of all of those bricks.

34:40.540 --> 34:44.540
But all of us in this room probably have a human instinct for how to win this game

34:44.540 --> 34:46.540
or at least how to play this game.

34:46.540 --> 34:51.540
For instance, if the ball pictured here back in the 80s as a single red dot

34:51.540 --> 34:55.540
just left the paddle pictured here is a red line,

34:55.540 --> 34:58.540
where is the ball presumably going to go next?

34:58.540 --> 35:03.540
And in turn, which direction should I slide my paddle to the left or to the right?

35:03.540 --> 35:08.540
So presumably to the left and we all have an eye for what seem to be the digital physics of that

35:08.540 --> 35:12.540
and indeed that would then be an algorithm sort of step by step instructions

35:12.540 --> 35:14.540
for solving some problem.

35:14.540 --> 35:18.540
So how can we now translate that human intuition to what we describe more as artificial intelligence

35:18.540 --> 35:21.540
not nearly as sophisticated as those other applications,

35:21.540 --> 35:23.540
but will indeed start with some basics?

35:23.540 --> 35:27.540
You might know from economics or strategic thinking or computer science

35:27.540 --> 35:31.540
this idea of a decision tree that allows you to decide should I go this way or this way

35:31.540 --> 35:33.540
when it comes to making a decision.

35:33.540 --> 35:38.540
So let's consider how we could draw a picture to represent even something simplistic like Breakout.

35:38.540 --> 35:42.540
Well, if the ball is left of the paddle is a question or a boolean expression

35:42.540 --> 35:44.540
I might ask myself in code.

35:44.540 --> 35:48.540
If yes, then I should move my paddle left as most everyone just said.

35:48.540 --> 35:52.540
Else, if the ball is not left of paddle, what do I want to do?

35:52.540 --> 35:54.540
Well, I want to ask a question.

35:54.540 --> 35:56.540
I don't want to just instinctively go right.

35:56.540 --> 35:58.540
I want to check is the ball to the right of the paddle.

35:58.540 --> 36:02.540
And if yes, well then yes, go ahead and move the paddle right.

36:02.540 --> 36:06.540
But there is a third situation which is right.

36:06.540 --> 36:07.540
Like don't move.

36:07.540 --> 36:08.540
It's coming right at you.

36:08.540 --> 36:09.540
So that would be the third scenario here.

36:09.540 --> 36:11.540
No, it's not to the right or to the left.

36:11.540 --> 36:12.540
So just don't move the paddle.

36:12.540 --> 36:14.540
You got lucky and it's coming, for instance, straight down.

36:14.540 --> 36:18.540
So Breakout is fairly straightforward when it comes to an algorithm.

36:18.540 --> 36:23.540
And we can actually translate this as any CS50 student now could to code or pseudocode,

36:23.540 --> 36:27.540
sort of English like code that's independent of Java, C, C++,

36:27.540 --> 36:29.540
and all of the programming languages of today.

36:29.540 --> 36:34.540
So in English, pseudocode, while a game is ongoing, if the ball is left of paddle,

36:34.540 --> 36:36.540
I should move paddle left.

36:36.540 --> 36:41.540
Else, if ball is right of the paddle, I should say paddle, that's a bug, not intended today,

36:41.540 --> 36:43.540
move paddle right.

36:43.540 --> 36:45.540
Else, don't move the paddle.

36:45.540 --> 36:51.540
So that too represents a translation of this intuition to code that's very deterministic.

36:51.540 --> 36:54.540
You can sort of anticipate all possible scenarios, capture it in code.

36:54.540 --> 36:57.540
And frankly, this should be the most boring game of Breakout

36:57.540 --> 37:01.540
because the paddle should just perfectly play this game assuming there's no variables

37:01.540 --> 37:04.540
or randomness when it comes to speed or angles or the like,

37:04.540 --> 37:07.540
which real world games certainly try to introduce.

37:07.540 --> 37:10.540
But let's consider another game from yesteryear that you might play with your kids today

37:10.540 --> 37:12.540
or you did yourself growing up.

37:12.540 --> 37:13.540
Here's Tic Tac Toe.

37:13.540 --> 37:17.540
And for those unfamiliar, the goal is to get three O's in a row or three X's in a row,

37:17.540 --> 37:20.540
vertically, horizontally, or diagonally.

37:20.540 --> 37:23.540
So suppose it's now X's turn.

37:23.540 --> 37:27.540
If you've played Tic Tac Toe, most of you probably just have an immediate instinct

37:27.540 --> 37:32.540
as to where X should probably go so that it doesn't lose instantaneously.

37:32.540 --> 37:36.540
But let's consider, in the more general case, how do you solve Tic Tac Toe?

37:36.540 --> 37:40.540
Frankly, if you're in the habit of losing Tic Tac Toe, but you're not trying to lose Tic Toe,

37:40.540 --> 37:42.540
you're actually playing it wrong.

37:42.540 --> 37:45.540
Like you should minimally be able to always force a tie in Tic Tac Toe,

37:45.540 --> 37:48.540
and better yet, you should be able to beat the other person.

37:48.540 --> 37:51.540
So hopefully, everyone now will soon walk away with this strategy.

37:51.540 --> 37:54.540
So how can we borrow inspiration from those same decision trees

37:54.540 --> 37:56.540
and do something similar here?

37:56.540 --> 38:01.540
So if you, the player, ask yourself, can I get three in a row on this turn?

38:01.540 --> 38:05.540
Well, if yes, then you should do that and play the X in that position.

38:05.540 --> 38:07.540
Play in the square to get three in a row.

38:07.540 --> 38:08.540
Straight forward.

38:08.540 --> 38:11.540
If you can't get three in a row in this turn, you should ask another question.

38:11.540 --> 38:14.540
Can my opponent get three in a row in their next turn?

38:14.540 --> 38:19.540
Because then you better preempt that by moving into that position.

38:19.540 --> 38:24.540
Play in the square to block opponent three's three in a row.

38:24.540 --> 38:26.540
What if, though, that's not the case?

38:26.540 --> 38:29.540
What if there aren't even that many X's and O's on the board?

38:29.540 --> 38:31.540
If you're in the habit of just kind of playing randomly,

38:31.540 --> 38:35.540
like your mate might not be playing optimally as a good AI could.

38:35.540 --> 38:37.540
So if no, it's kind of a question mark.

38:37.540 --> 38:41.540
In fact, there's probably more to this tree because we could think through,

38:41.540 --> 38:42.540
what if I go there?

38:42.540 --> 38:44.540
Wait a minute, what if I go there or there or there?

38:44.540 --> 38:47.540
You can start to think a few steps ahead as a computer could do much better

38:47.540 --> 38:48.540
even than us humans.

38:48.540 --> 38:50.540
So suppose, for instance, it's O's turn.

38:50.540 --> 38:54.540
Now, those of you who are very good at Tecto might have an instinct for where to go,

38:54.540 --> 38:56.540
but this is an even harder problem, it would seem.

38:56.540 --> 39:00.540
I could go in eight possible places if I'm O, but let's try to break that down

39:00.540 --> 39:03.540
more algorithmically as an AI would.

39:03.540 --> 39:06.540
And let's recognize, too, that with games in particular,

39:06.540 --> 39:10.540
one of the reasons that AI was so early adopted in these games,

39:10.540 --> 39:15.540
playing the CPU, is that games really lend themselves to defining them

39:15.540 --> 39:19.540
if taking the fun out of it mathematically, defining them in terms of inputs

39:19.540 --> 39:23.540
and outputs, maybe paddle moving left or right, ball moving up or down.

39:23.540 --> 39:26.540
You can really quantize it at a very boring low level,

39:26.540 --> 39:29.540
but that lends itself then to solving it optimally.

39:29.540 --> 39:35.540
And in fact, with most games, the goal is to maximize or maybe minimize some math function.

39:35.540 --> 39:38.540
Most games, if you have scores, the goal is to maximize your score

39:38.540 --> 39:40.540
and indeed get a high score.

39:40.540 --> 39:45.540
So games lend themselves to a nice translation to mathematics

39:45.540 --> 39:47.540
and in turn hear AI solutions.

39:47.540 --> 39:51.540
So one of the first algorithms one might learn in the class on algorithms

39:51.540 --> 39:54.540
and on artificial intelligence is something called Minimax,

39:54.540 --> 39:58.540
which alludes to this idea of trying to minimize and or maximize something

39:58.540 --> 40:00.540
as your function, your goal.

40:00.540 --> 40:04.540
And it actually derives inspiration from these same decision trees

40:04.540 --> 40:05.540
that we've been talking about.

40:05.540 --> 40:06.540
But first, a definition.

40:06.540 --> 40:09.540
Here are three representative Tic Tac Toe boards.

40:09.540 --> 40:12.540
Here is one in which O has clearly won per the green.

40:12.540 --> 40:15.540
Here is one in which X has clearly won per the green.

40:15.540 --> 40:17.540
And this one in the middle just represents a draw.

40:17.540 --> 40:20.540
Now, there's a bunch of other ways that Tic Tac Toe could end,

40:20.540 --> 40:22.540
but here's just three representative ones.

40:22.540 --> 40:26.540
But let's make Tic Tac Toe even more boring than it might have always struck you as.

40:26.540 --> 40:31.540
Let's propose that this kind of configuration should have a score of negative one.

40:31.540 --> 40:33.540
If O wins, it's a negative one.

40:33.540 --> 40:35.540
If X wins, it's a positive one.

40:35.540 --> 40:37.540
And if no one wins, we'll call it a zero.

40:37.540 --> 40:41.540
We need some way of talking about and reasoning about which of these outcomes

40:41.540 --> 40:45.540
is better than the other and what's simpler than zero, one, and negative one.

40:45.540 --> 40:49.540
So the goal, though, of X, it would seem, is to maximize its score.

40:49.540 --> 40:52.540
But the goal of O is to minimize its score.

40:52.540 --> 40:54.540
So X is really trying to get positive one.

40:54.540 --> 40:56.540
O is really trying to get negative one.

40:56.540 --> 41:00.540
And no one really wants zero, but that's better than losing to the other person.

41:00.540 --> 41:03.540
So we have now a way to define what it means to win or lose.

41:03.540 --> 41:06.540
Well, now we can employ a strategy here.

41:06.540 --> 41:10.540
Here, just as a quick check, what would the score be of this board?

41:10.540 --> 41:12.540
Just so everyone's on the same page?

41:12.540 --> 41:16.540
Or so one, because X has won and we just stipulated arbitrarily,

41:16.540 --> 41:18.540
this means that this board has a value of one.

41:18.540 --> 41:20.540
Now let's put it into one more interesting context.

41:20.540 --> 41:23.540
Here, a game has been played for a few moves already.

41:23.540 --> 41:24.540
There's two spots left.

41:24.540 --> 41:26.540
No one has won just yet.

41:26.540 --> 41:29.540
And suppose that it's O's turn now.

41:29.540 --> 41:31.540
Now everyone probably has an instinct already as to where to go,

41:31.540 --> 41:34.540
but let's try to break this down more algorithmically.

41:34.540 --> 41:36.540
So what is the value of this board?

41:36.540 --> 41:39.540
Well, we don't know yet because no one has won.

41:39.540 --> 41:42.540
So let's consider what could happen next.

41:42.540 --> 41:45.540
So we can draw this actually as a tree as before.

41:45.540 --> 41:49.540
Here, for instance, is what might happen if O goes into the top left-hand corner.

41:49.540 --> 41:54.540
And here's what might happen if O goes into the bottom middle spot instead.

41:54.540 --> 41:56.540
We should ask ourselves, what's the value of this board?

41:56.540 --> 41:57.540
What's the value of this board?

41:57.540 --> 42:00.540
Because if O's purpose in life is to minimize its score,

42:00.540 --> 42:05.540
it's going to go left or right based on whichever yields the smallest number, negative one, ideally.

42:05.540 --> 42:10.540
But we're still not sure yet because we don't have definitions for boards with holes in them like this.

42:10.540 --> 42:12.540
So what could happen next here?

42:12.540 --> 42:14.540
Well, it's obviously going to be X's turn next.

42:14.540 --> 42:18.540
So if X moves, unfortunately, X has won in this configuration.

42:18.540 --> 42:23.540
We can now conclude that the value of this board is what number?

42:23.540 --> 42:28.540
So one, and because there's only one way to reach this board by transitivity,

42:28.540 --> 42:32.540
you might as well think of the value of this previous board as also one,

42:32.540 --> 42:35.540
because no matter what, it's going to lead to that same outcome.

42:35.540 --> 42:39.540
And so the value of this board is actually still to be determined

42:39.540 --> 42:42.540
because we don't know if O's going to want to go with the one,

42:42.540 --> 42:44.540
and probably not because that means X wins.

42:44.540 --> 42:46.540
But let's see what the value of this board is.

42:46.540 --> 42:50.540
Well, suppose that indeed X goes in that top left corner here.

42:50.540 --> 42:53.540
What's the value of this board here?

42:53.540 --> 42:55.540
Zero because no one has won.

42:55.540 --> 42:57.540
There's no X's or O's three in a row.

42:57.540 --> 42:59.540
So the value of this board is zero.

42:59.540 --> 43:01.540
There's only one way logically to get there.

43:01.540 --> 43:04.540
So we might as well think of the value of this board as also zero.

43:04.540 --> 43:07.540
And so now what's the value of this board?

43:07.540 --> 43:10.540
Well, if we started the story by thinking about O's turn,

43:10.540 --> 43:15.540
O's purpose is the min in minimax, then which move is O going to make?

43:15.540 --> 43:18.540
Go to the left or go to the right?

43:18.540 --> 43:24.540
O's probably going to go to the right and make the move that leads to this board

43:24.540 --> 43:29.540
because even though O can't win in this configuration, at least X didn't win.

43:29.540 --> 43:33.540
So it's minimized its score relatively, even though it's not a clean win.

43:33.540 --> 43:37.540
Now, this is all fine and good for a configuration of the board that's almost done.

43:37.540 --> 43:39.540
There's only two moves left. The game's about to end.

43:39.540 --> 43:44.540
But if you kind of expand in your mind's eye, how did we get to this branch of the decision tree?

43:44.540 --> 43:48.540
If we rewind one step where there's three possible moves,

43:48.540 --> 43:50.540
frankly, the decision tree is a lot bigger.

43:50.540 --> 43:55.540
If we run further in your mind's eye and have four moves left or five moves or all nine moves left,

43:55.540 --> 43:57.540
imagine just zooming out, out, and out.

43:57.540 --> 44:00.540
This is becoming a massive, massive tree of decisions.

44:00.540 --> 44:05.540
Now, even so, here is that same sub tree, the same decision tree we just looked at.

44:05.540 --> 44:09.540
This is the exact same thing, but I shrunk the font so that it appears here on the screen here.

44:09.540 --> 44:14.540
But over here, we have what could happen if instead, it's actually X's turn

44:14.540 --> 44:20.540
because we're once moved prior, there's a bunch of different moves X could now make too.

44:20.540 --> 44:21.540
So what is the implication of this?

44:21.540 --> 44:26.540
Well, most humans are not thinking through tic-tac-toe to this extreme.

44:26.540 --> 44:29.540
And frankly, most of us probably just don't have the mental capacity to think about,

44:29.540 --> 44:32.540
like, going left and then right and then left and then right.

44:32.540 --> 44:34.540
This is not how people play tic-tac-toe.

44:34.540 --> 44:37.540
Like, we're not using that much memory, so to speak.

44:37.540 --> 44:39.540
But a computer can handle that.

44:39.540 --> 44:41.540
And computers can play tic-tac-toe optimally.

44:41.540 --> 44:45.540
So if you're beating a computer at tic-tac-toe, like, it's not implemented very well.

44:45.540 --> 44:50.540
It's not following this very logical deterministic minimax algorithm.

44:50.540 --> 44:56.540
But this is where now AI is no longer as simple as just doing what these decision trees say.

44:56.540 --> 45:00.540
In the context of tic-tac-toe, here's how we might translate this to code, for instance.

45:00.540 --> 45:04.540
If player is x, for each possible move, calculate a score for the board,

45:04.540 --> 45:08.540
as we were doing verbally, and then choose the move with the highest score,

45:08.540 --> 45:11.540
because x's goal is to maximize its score.

45:11.540 --> 45:15.540
If the player is O, though, for each possible move, calculate a score for the board

45:15.540 --> 45:18.540
and then choose the move with the lowest score.

45:18.540 --> 45:22.540
So that's a distillation of that verbal walkthrough into what CS50 students know now as code,

45:22.540 --> 45:24.540
or at least pseudocode.

45:24.540 --> 45:28.540
But the problem with games, not so much tic-tac-toe,

45:28.540 --> 45:30.540
but other more sophisticated games is this.

45:30.540 --> 45:36.540
Does anyone want to ballpark how many possible ways there are to play tic-tac-toe?

45:36.540 --> 45:41.540
Paper pencil, two human children, how long could you keep them occupied

45:41.540 --> 45:45.540
playing tic-tac-toe in different ways?

45:45.540 --> 45:47.540
If you actually think through how big does this tree get,

45:47.540 --> 45:51.540
how many leaves are there on this decision tree, like how many different directions?

45:51.540 --> 45:56.540
Well, if you're thinking 255,168, you are correct.

45:56.540 --> 46:01.540
And now most of us in our lifetime have probably not played tic-tac-toe that many times.

46:01.540 --> 46:03.540
So think about how many games you've been missing out on.

46:03.540 --> 46:07.540
There are different decisions you could have been making all these years.

46:07.540 --> 46:11.540
Now that's a big number, but honestly, like that's not a big number for a computer.

46:11.540 --> 46:15.540
That's a few megabytes of memory maybe to sort of keep all of that in mind

46:15.540 --> 46:20.540
and sort of implement that kind of code in C or Java or C++ or something else.

46:20.540 --> 46:23.540
But other games are much more complicated.

46:23.540 --> 46:27.540
And the games that you and I might play as we get older include maybe chess.

46:27.540 --> 46:32.540
And if you think about chess with only the first four moves back and forth four times,

46:32.540 --> 46:35.540
so only four moves, that's not even a very long game.

46:35.540 --> 46:40.540
Anyone want to ballpark how many different ways there are to begin a game of chess

46:40.540 --> 46:45.540
with four moves back and forth?

46:45.540 --> 46:48.540
This is evidence as to why chess is apparently so hard.

46:48.540 --> 46:54.540
288 million ways, which is why when you are really good at chess,

46:54.540 --> 46:58.540
you are really good at chess, because apparently you either have an intuition for

46:58.540 --> 47:02.540
or a mind for thinking it would seem so many more steps ahead than your opponent.

47:02.540 --> 47:04.540
And don't get us started on something like Go.

47:04.540 --> 47:09.540
266 quintillion ways to play Go's first four moves.

47:09.540 --> 47:13.540
So at this point, we just can't pull out our Mac, our PC,

47:13.540 --> 47:17.540
certainly not our phone to solve optimally games like chess and Go

47:17.540 --> 47:19.540
because we don't have big enough CPUs.

47:19.540 --> 47:20.540
We don't have enough memory.

47:20.540 --> 47:25.540
We don't have enough years in our lifetimes for the computers to crunch all of those numbers.

47:25.540 --> 47:32.540
And thus was born a different form of AI that's more inspired by finding patterns more dynamically.

47:32.540 --> 47:36.540
Learning from data as opposed to being told by humans,

47:36.540 --> 47:39.540
here is the code via which to solve this problem.

47:39.540 --> 47:42.540
So machine learning is a subset of artificial intelligence

47:42.540 --> 47:46.540
that tries instead to get machines to learn what they should do

47:46.540 --> 47:50.540
without being so coached step by step by step by humans here.

47:50.540 --> 47:53.540
Reinforcement learning, for instance, is one such example thereof,

47:53.540 --> 47:57.540
wherein reinforcement learning, you sort of wait for the computer or maybe a robot

47:57.540 --> 48:00.540
to maybe just get better and better and better at things.

48:00.540 --> 48:02.540
And as it does, you reward it with a reward function.

48:02.540 --> 48:05.540
Give it plus one every time it does something well and maybe minus one.

48:05.540 --> 48:08.540
You punish it any time it does something poorly.

48:08.540 --> 48:13.540
And if you simply program this AI or this robot to maximize its score,

48:13.540 --> 48:15.540
never mind minimizing, maximize its score.

48:15.540 --> 48:18.540
Ideally, it should repeat behaviors that got it plus one.

48:18.540 --> 48:22.540
It should decrease the frequency with which it does bad behaviors that got it negative one.

48:22.540 --> 48:25.540
And you can reinforce this kind of learning.

48:25.540 --> 48:28.540
In fact, I have here one demonstration.

48:28.540 --> 48:34.540
Could a student come on up who does not think they are particularly coordinated?

48:34.540 --> 48:37.540
OK, wow, you're being nominated by your friends.

48:37.540 --> 48:39.540
Come on up, come on up.

48:39.540 --> 48:44.540
Their hands went up instantly for you.

48:44.540 --> 48:49.540
OK, what is your name?

48:49.540 --> 48:51.540
My name is Amaka.

48:51.540 --> 48:53.540
Amaka, do you want to introduce yourself to the world?

48:53.540 --> 48:54.540
Hi, my name is Amaka.

48:54.540 --> 48:58.540
I am a first year in Hallworthy, planning to concentrate in CS.

48:58.540 --> 48:59.540
Wonderful, nice to see you.

48:59.540 --> 49:00.540
Come on over here.

49:00.540 --> 49:06.540
So, yes, oh no, it's sort of like a game show here.

49:06.540 --> 49:11.540
We have a pan here with what appears to be something pancake-like.

49:11.540 --> 49:16.540
And we'd like to teach you how to flip a pancake so that when you gesture upward,

49:16.540 --> 49:19.540
the pancake should flip around so you cook the other side.

49:19.540 --> 49:25.540
So we're going to reward you verbally with plus one or minus one.

49:25.540 --> 49:29.540
Minus one, minus one.

49:29.540 --> 49:31.540
OK, plus one, plus one.

49:31.540 --> 49:33.540
So do more of that.

49:33.540 --> 49:35.540
Minus one, minus one.

49:35.540 --> 49:38.540
Minus one, minus one.

49:38.540 --> 49:43.540
Do less of that.

49:43.540 --> 49:47.540
All right, a big round of applause.

49:47.540 --> 49:48.540
Thank you.

49:48.540 --> 49:51.540
We've been in the habit of handing out Super Mario Brothers Oreos this year.

49:51.540 --> 49:57.540
So thank you for participating.

49:57.540 --> 50:02.540
So this is actually a good example of an opportunity for reinforcement learning

50:02.540 --> 50:05.540
and wonderfully a researcher has posted a video that we thought we'd share.

50:05.540 --> 50:09.540
It's about a minute and a half long where you can watch a robot now do exactly

50:09.540 --> 50:13.540
what our wonderful human volunteer here just attempted as well.

50:13.540 --> 50:17.540
So let me go ahead and play this on the screen and give you a sense of what

50:17.540 --> 50:19.540
the human and the robot are doing together.

50:19.540 --> 50:23.540
So their pancake looks a little similar there.

50:23.540 --> 50:28.540
The human here is going to first sort of train the robot what to do by showing it some gestures.

50:28.540 --> 50:30.540
But there's no one right way to do this.

50:30.540 --> 50:33.540
But the human seems to know how to do it pretty well in this case.

50:33.540 --> 50:39.540
And so it's trying to give the machine examples of how to flip a pancake successfully.

50:39.540 --> 50:41.540
But now this is the very first trial.

50:41.540 --> 50:42.540
OK, look from that.

50:42.540 --> 50:44.540
You're in good company.

50:44.540 --> 50:48.540
After three trials.

50:48.540 --> 50:51.540
OK.

50:51.540 --> 50:53.540
OK.

50:53.540 --> 50:57.540
Now 10 tries.

50:57.540 --> 51:00.540
There's the human picking up the pancake.

51:00.540 --> 51:06.540
After 11 trials.

51:06.540 --> 51:09.540
And meanwhile there's presumably a human coding this in the sense that

51:09.540 --> 51:15.540
someone is saying good job or bad job plus one or minus one.

51:15.540 --> 51:18.540
20 trials.

51:18.540 --> 51:21.540
Here now we'll see how the computer knows what it's even doing.

51:21.540 --> 51:24.540
There's just a mapping to some kind of like XYZ coordinate system.

51:24.540 --> 51:27.540
So the robot can quantize what is it's doing.

51:27.540 --> 51:30.540
Nice to do more of one thing less of another.

51:30.540 --> 51:35.540
And you're just seeing a visualization in the background of those digitized movements.

51:35.540 --> 51:39.540
And so now after 50 some odd trials.

51:39.540 --> 51:46.540
The robot to has got its spot on and it should be able to repeat this again and again and again in order to keep flipping this pancake.

51:46.540 --> 51:50.540
So our human volunteer wonderfully took you even fewer trials.

51:50.540 --> 52:00.540
But this is an example then to be clear of what we'd call reinforcement learning whereby you're reinforcing a behavior you want or negatively reinforcing that is punishing a behavior that you don't.

52:00.540 --> 52:04.540
Here's another example that brings us back into the realm of games a little bit.

52:04.540 --> 52:14.540
But in a very abstract way if we were playing a game like the floor is lava where you're only supposed to step certain places so that you don't fall through in the lava pit or something like that and lose a point or lose a life.

52:14.540 --> 52:16.540
Each of these squares might represent a position.

52:16.540 --> 52:21.540
This yellow dot might represent the human player that can go up down left or right within this world.

52:21.540 --> 52:24.540
I'm revealing to the whole audience where the lava pits are.

52:24.540 --> 52:27.540
But the goal for this yellow dot is to get to green.

52:27.540 --> 52:33.540
But the yellow dot as in any good game does not have this bird's eye view and knows from the get go exactly where to go.

52:33.540 --> 52:35.540
It's going to have to try some trial and error.

52:35.540 --> 52:40.540
But if we the programmers maybe reinforce good behavior or punish bad behavior,

52:40.540 --> 52:50.540
we can sort of teach this yellow dot without giving it step by step up down left right instructions what behaviors to repeat and what behaviors not to repeat.

52:50.540 --> 52:54.540
So for instance suppose the robot moves right that was bad you fell in the lava already.

52:54.540 --> 52:59.540
So we'll use a bit of computer memory to sort of draw a thicker red line there.

52:59.540 --> 53:00.540
Don't do that again.

53:00.540 --> 53:01.540
So negative one so to speak.

53:01.540 --> 53:08.540
Maybe the yellow dot moves up next time we can reward that behavior by not drawing any walls and allowing it to go again.

53:08.540 --> 53:10.540
It's making pretty good progress, but oh darn it.

53:10.540 --> 53:13.540
It took a right turn and now fell into the lava.

53:13.540 --> 53:16.540
But let's use a bit more of the computer's memory and keep track of that.

53:16.540 --> 53:18.540
Okay, do not do that thing anymore.

53:18.540 --> 53:21.540
Maybe the next time the human dot goes this way.

53:21.540 --> 53:25.540
We want to punish that behavior so we'll remember as much with that red line.

53:25.540 --> 53:29.540
But now we're starting to make progress until now we hit this one.

53:29.540 --> 53:36.540
And eventually even though the yellow dot much like our human much like our pancake flipping robot had to try again and again and again.

53:36.540 --> 53:42.540
After enough trials, it's going to start to realize what behaviors it should repeat and which ones it shouldn't.

53:42.540 --> 53:46.540
And so in this case, maybe it finally makes its way up to the green dot.

53:46.540 --> 53:52.540
And just to recap, once it finds that path, now we can sort of remember it forever as with these green thicker lines.

53:52.540 --> 54:00.540
Anytime you want to leave this map, anytime you get really good at the Nintendo game, you'll follow that same path again and again so you don't fall into the lava.

54:00.540 --> 54:05.540
But an astute human observer might realize that yes, this is correct.

54:05.540 --> 54:07.540
It's getting out of this so-called maze.

54:07.540 --> 54:10.540
But what is suboptimal or bad about this solution?

54:10.540 --> 54:11.540
Sure.

54:14.540 --> 54:15.540
Exactly.

54:15.540 --> 54:21.540
It's taking a really long time and inefficient way to get there because I dare say if we just try to different path occasionally,

54:21.540 --> 54:27.540
maybe we could get lucky and get to the out the exit quicker and maybe that means we get a higher score.

54:27.540 --> 54:29.540
We get rewarded even more.

54:29.540 --> 54:35.540
So within a lot of artificial intelligence algorithms, there's this idea of exploring versus exploiting,

54:35.540 --> 54:40.540
whereby you should occasionally, yes, exploit the knowledge you already have.

54:40.540 --> 54:45.540
In fact, frequently exploit that knowledge, but occasionally you know what you should probably do is explore just a little bit.

54:45.540 --> 54:51.540
Take a left instead of a right and see if it leads you to the solution even more quickly and you might find a better and better solution.

54:51.540 --> 54:54.540
So here mathematically is how we might think of this.

54:54.540 --> 54:58.540
10% of the time, we might say that epsilon, just some variable,

54:58.540 --> 55:03.540
sort of a sprinkling of salt into the algorithm here, epsilon will be like 10% of the time.

55:03.540 --> 55:08.540
So if my robot or my player picks a random number that's less than 10%,

55:08.540 --> 55:10.540
that's going to make a random move.

55:10.540 --> 55:13.540
Go left instead of right, even if you really typically go right.

55:13.540 --> 55:17.540
Otherwise, make the move with the highest value as we've learned over time.

55:17.540 --> 55:24.540
And what the robot might learn then is that we could actually go via this path which gets us to the output faster.

55:24.540 --> 55:25.540
We get a higher score.

55:25.540 --> 55:26.540
We do it in less time.

55:26.540 --> 55:27.540
It's a win-win.

55:27.540 --> 55:31.540
Frankly, this really resonates with me because I've been in the habit as maybe some of you are.

55:31.540 --> 55:35.540
When you go to a restaurant, maybe that you really like, you find a dish you really like,

55:35.540 --> 55:42.540
I will never again know what other dishes that restaurant offers because I'm sort of locally, optimally happy with the dish I've chosen.

55:42.540 --> 55:48.540
And I will never know if there's an even better dish at that restaurant unless again I sort of sprinkle a little bit of epsilon,

55:48.540 --> 55:52.540
a little bit of randomness into my game playing, my dining out.

55:52.540 --> 55:55.540
The catch, of course, though, is that I might be punished.

55:55.540 --> 55:59.540
I might therefore sort of be less happy if I pick something and I don't like it.

55:59.540 --> 56:04.540
So there's this tension between exploring and exploiting, but in general in computer science and especially in AI,

56:04.540 --> 56:10.540
adding a little bit of randomness, especially over time, can in fact yield better and better outcomes.

56:10.540 --> 56:16.540
But now there's this notion all the more of deep learning whereby you're trying to infer to detect patterns,

56:16.540 --> 56:21.540
figure out how to solve problems, even if the AI has never seen those problems before.

56:21.540 --> 56:26.540
And even if there's no human there to reinforce positive or negatively behavior,

56:26.540 --> 56:32.540
maybe it's just too complex of a problem for a human to stand alongside the robot and say good or bad job.

56:32.540 --> 56:38.540
So with deep learning, they're actually very much related to what you might know as neural networks inspired by human physiology,

56:38.540 --> 56:43.540
whereby inside of our brains and elsewhere in our brain, there's lots of these neurons here that can send electrical signals

56:43.540 --> 56:46.540
to sort of make movements happen from brain to extremities.

56:46.540 --> 56:51.540
You might have two of these via which signals can be transmitted over larger distance.

56:51.540 --> 57:00.540
And so computer scientists for some time have drawn inspiration from these neurons to create in software what we call neural networks,

57:00.540 --> 57:08.540
whereby there's inputs to these networks and there's outputs from these networks that represents inputs to problems and solutions there too.

57:08.540 --> 57:14.540
So let me abstract away the more biological diagrams with just circles that represent nodes or neurons in this case.

57:14.540 --> 57:19.540
This would be, we'd call in CS50, the input. This is what we would call the output,

57:19.540 --> 57:22.540
but this is very simplistic, very simple neural network.

57:22.540 --> 57:29.540
This might be more common whereby the network, the AI takes two inputs to a problem and tries to give you one solution.

57:29.540 --> 57:31.540
Well, let's make this more real.

57:31.540 --> 57:36.540
For instance, suppose that just for the sake of discussion,

57:36.540 --> 57:42.540
here is like a grid that you might see in math class with a y-axis and an x-axis vertically and horizontally respectively.

57:42.540 --> 57:45.540
Suppose there's a couple of blue and red dots in that world,

57:45.540 --> 57:56.540
and suppose that our goal computationally is to predict whether a dot is going to be blue or red based on its position within that coordinate system.

57:56.540 --> 57:59.540
And maybe this represents some real world notion.

57:59.540 --> 58:01.540
Maybe it's something like rain that we're trying to predict,

58:01.540 --> 58:03.540
but we're doing it more simply with colors right now.

58:03.540 --> 58:09.540
So here's my y-axis, here's my x-axis, and effectively my neural network you can think of conceptually as this.

58:09.540 --> 58:13.540
It's some kind of implementation of software where there's two inputs to the problem.

58:13.540 --> 58:20.540
Give me an x, give me a y value, and this neural network will output red or blue as its prediction.

58:20.540 --> 58:22.540
Well, how does it know whether to predict red or blue,

58:22.540 --> 58:29.540
especially if no human has painstakingly written code to say when you see a dot here, conclude that it's red?

58:29.540 --> 58:34.540
When you see a dot here conclude that it's blue, how can an AI just learn dynamically to solve problems?

58:34.540 --> 58:37.540
Well, what might be a reasonable heuristic here?

58:37.540 --> 58:40.540
Honestly, this is probably a first approximation that's pretty good.

58:40.540 --> 58:44.540
If anything's to the left of that line, let the neural network conclude that it's going to be blue.

58:44.540 --> 58:47.540
And if it's to the right of the line, let it conclude that it's going to be red.

58:47.540 --> 58:54.540
Until such time as there's more training data, more real world data that gets us to rethink our assumptions.

58:54.540 --> 58:58.540
So for instance, if there's a third dot there, oh, clearly a straight line is not sufficient.

58:58.540 --> 59:03.540
So maybe it's more of a diagonal line that splits the blue from the red world here.

59:03.540 --> 59:05.540
Meanwhile, here's even more dots.

59:05.540 --> 59:07.540
And it's actually getting harder now.

59:07.540 --> 59:09.540
Like this line is still pretty good.

59:09.540 --> 59:10.540
Most of the blue is up here.

59:10.540 --> 59:12.540
Most of the red is down here.

59:12.540 --> 59:18.540
And this is why if we fast forward to today, AI is often very good but not perfect at solving problems.

59:18.540 --> 59:20.540
But what is it we're looking at here?

59:20.540 --> 59:23.540
And what is this neural network really trying to figure out?

59:23.540 --> 59:26.540
Well, again, at the risk of taking some fun out of red and blue dots,

59:26.540 --> 59:30.540
you can think of this neural network as indeed having these neurons,

59:30.540 --> 59:33.540
which represent inputs here and outputs here.

59:33.540 --> 59:40.540
And then what's happening inside of the computer's memory is that it's trying to figure out what the weight of this arrow or edge should be.

59:40.540 --> 59:43.540
What the weight of this arrow or edge should be.

59:43.540 --> 59:47.540
And maybe there's another variable there like plus or minus C that just tweaks the prediction.

59:47.540 --> 59:51.540
So x and y are literally going to be numbers in this scenario.

59:51.540 --> 59:54.540
And the output of this neural network ideally is just true or false.

59:54.540 --> 59:56.540
Is it red or blue?

59:56.540 --> 59:59.540
So it's sort of a binary state as we discuss a lot in CS50.

59:59.540 --> 01:00:02.540
So here, too, to take the sort of fun out of the pretty picture,

01:00:02.540 --> 01:00:04.540
it's really just like a high school math function.

01:00:04.540 --> 01:00:13.540
What the neural network in this example is trying to figure out is what formula of the form AX plus BY plus C is going to be arbitrarily greater than zero.

01:00:13.540 --> 01:00:18.540
And if so, let's conclude that the dot is red if you get back a positive result.

01:00:18.540 --> 01:00:22.540
If you don't, let's conclude that the dot is going to be blue instead.

01:00:22.540 --> 01:00:28.540
So really what you're trying to do is figure out dynamically what numbers do we have to tweak these parameters inside of the neural network?

01:00:28.540 --> 01:00:32.540
That just give us the answer we want based on all of this data.

01:00:32.540 --> 01:00:36.540
More generally, though, this would be really representative of deep learning.

01:00:36.540 --> 01:00:38.540
It's not as simple as input, input, output.

01:00:38.540 --> 01:00:41.540
There's actually a lot of these nodes, these neurons.

01:00:41.540 --> 01:00:42.540
There's a lot of these edges.

01:00:42.540 --> 01:00:50.540
There's a lot of numbers and math are going on that, frankly, even the computer scientists using these neural networks don't necessarily know what they even mean or represent.

01:00:50.540 --> 01:00:56.540
It just happens to be that when you crunch the numbers with all of these parameters in place,

01:00:56.540 --> 01:01:00.540
you get the answer that you want, at least most of the time.

01:01:00.540 --> 01:01:02.540
So that's essentially the intuition behind that.

01:01:02.540 --> 01:01:10.540
And you can apply it to a very real world if mundane applications, given today's humidity, given today's pressure, yes or no should there be rainfall.

01:01:10.540 --> 01:01:14.540
And maybe there is some mathematical function that based on years of training data,

01:01:14.540 --> 01:01:17.540
we can infer what that prediction should be.

01:01:17.540 --> 01:01:23.540
Another one, given this amount of advertising in this month, what should our sales be for that year?

01:01:23.540 --> 01:01:25.540
Should they be up or should they be down?

01:01:25.540 --> 01:01:27.540
Sorry for that particular month.

01:01:27.540 --> 01:01:40.540
So real world problems map readily when you can break them down into inputs and a binary output often or some kind of output where you want the thing to figure out based on past data what its prediction should be.

01:01:40.540 --> 01:01:46.540
So that brings us back to generative artificial intelligence, which isn't just about solving problems,

01:01:46.540 --> 01:01:56.540
but really generating literally images, texts, even videos that again increasingly resemble what we humans might otherwise output ourselves.

01:01:56.540 --> 01:02:04.540
And within the world of generative artificial intelligence, do we have, of course, the same images that we saw before, the same text that we saw before,

01:02:04.540 --> 01:02:10.540
and more generally things like chat GPT, which are really examples of what we now call large language models,

01:02:10.540 --> 01:02:21.540
these sort of massive neural networks that have so many inputs and so many neurons implemented in software that essentially represent all of the patterns that the software has discovered

01:02:21.540 --> 01:02:23.540
by being fed massive amounts of input.

01:02:23.540 --> 01:02:27.540
Think of it as like the entire textual content of the internet.

01:02:27.540 --> 01:02:32.540
Think of it as the entire content of courses like CS50 that may very well be out there on the internet.

01:02:32.540 --> 01:02:45.540
And even though these AIs, these large language models, haven't been told how to behave, they're really inferring from all of these examples for better or for worse how to make predictions.

01:02:45.540 --> 01:02:54.540
So here, for instance, from 2017, just a few years back, is a seminal paper from Google that introduced what we now know as a transformer architecture.

01:02:54.540 --> 01:03:03.540
And this introduced this idea of attention values, whereby they propose that given an English sentence, for instance, or really any human sentence, you try to assign numbers,

01:03:03.540 --> 01:03:10.540
not unlike our past exercises, to each of the words, each of the inputs that speaks to its relationship with other words.

01:03:10.540 --> 01:03:15.540
So if there's a high relationship between two words and a sentence, they would have high attention values.

01:03:15.540 --> 01:03:20.540
And if maybe it's a preposition or an article like the or the like, maybe those attention values are lower.

01:03:21.540 --> 01:03:28.540
And by encoding the world in that way, do we begin to detect patterns that allow us to predict things like words?

01:03:28.540 --> 01:03:29.540
That is generate text.

01:03:29.540 --> 01:03:35.540
So for instance, up until a few years ago, completing this sentence was actually pretty hard for a lot of AI.

01:03:35.540 --> 01:03:40.540
So for instance here, Massachusetts is a state in the New England region of the northeastern United States.

01:03:40.540 --> 01:03:43.540
It borders on the Atlantic Ocean to the east.

01:03:43.540 --> 01:03:46.540
The state's capital is dot dot dot.

01:03:46.540 --> 01:03:48.540
Now you should think that this is relatively straightforward.

01:03:48.540 --> 01:03:51.540
It's like just handing you a softball type question.

01:03:51.540 --> 01:04:00.540
But historically within the world of AI, this word state was so relatively far away from the proper noun that it's actually referring back to,

01:04:00.540 --> 01:04:06.540
that we just didn't have computational models that sort of took in that holistic picture that frankly we humans are much better at.

01:04:06.540 --> 01:04:11.540
If you would ask this question a little more quickly, a little more immediately, you might have gotten a better response.

01:04:11.540 --> 01:04:15.540
But this is dare say why chatbots in the past have been so bad in the form of customer service and the like,

01:04:15.540 --> 01:04:21.540
because they're not really taking all of the context into account that we humans might be inclined to provide.

01:04:21.540 --> 01:04:25.540
What's going on underneath the hood without escalating things too quickly?

01:04:25.540 --> 01:04:30.540
What an artificial intelligence nowadays, these large language models might do,

01:04:30.540 --> 01:04:36.540
is sort of break down the user's input, your input, into chatupiti, into the individual words.

01:04:36.540 --> 01:04:40.540
We might then take into account the order of those words.

01:04:40.540 --> 01:04:43.540
Massachusetts is first, is, is last.

01:04:43.540 --> 01:04:47.540
We might further encode each of those words using a standard way.

01:04:47.540 --> 01:04:51.540
And there's different algorithms for this, but you come up with what are called embeddings.

01:04:51.540 --> 01:04:55.540
That is to say, you can use one of those APIs I talked about earlier,

01:04:55.540 --> 01:05:02.540
or even software running on your own computers to come up with a mathematical representation of the word Massachusetts.

01:05:02.540 --> 01:05:04.540
And Rang Shin kindly did this for us last night.

01:05:04.540 --> 01:05:14.540
This is the 1536 floating point values that open AI uses to represent the word Massachusetts.

01:05:14.540 --> 01:05:18.540
And this is to say, and you should not understand anything you are looking at on the screen nor do I,

01:05:18.540 --> 01:05:24.540
but this is now a mathematical representation of the input that can be compared against

01:05:24.540 --> 01:05:29.540
the mathematical representations of other inputs in order to find proximity semantically.

01:05:29.540 --> 01:05:34.540
Words that somehow have relationships or correlations with each other

01:05:34.540 --> 01:05:40.540
that helps the AI ultimately predict what should the next word out of its mouth be, so to speak.

01:05:40.540 --> 01:05:44.540
So in a case like this, these values represent, these lines represent all of those attention values

01:05:44.540 --> 01:05:48.540
and thicker lines means there's more attention given from one word to another.

01:05:48.540 --> 01:05:50.540
Thinner lines mean the opposite.

01:05:50.540 --> 01:05:56.540
And those inputs are ultimately fed into a large neural network where you have inputs on the left,

01:05:56.540 --> 01:05:58.540
outputs on the right.

01:05:58.540 --> 01:06:04.540
And in this particular case, the hope is to get out a single word, which is the capital of Boston itself,

01:06:04.540 --> 01:06:10.540
whereby somehow the neural network and the humans behind it at OpenAI, Microsoft, Google, or elsewhere

01:06:10.540 --> 01:06:14.540
have sort of crunched so many numbers by training these models on so much data

01:06:14.540 --> 01:06:18.540
that it figured out what all of those weights are, what the biases are,

01:06:18.540 --> 01:06:22.540
so as to influence mathematically the output therefrom.

01:06:23.540 --> 01:06:29.540
So that is all underneath the hood of what students now perceive as this adorable rubber duck,

01:06:29.540 --> 01:06:35.540
but underneath it all is certainly a lot of domain knowledge and CS50 by nature

01:06:35.540 --> 01:06:37.540
of being open courseware for the past many years.

01:06:37.540 --> 01:06:41.540
CS50 is fortunate to actually be part of the model, as might be any other content

01:06:41.540 --> 01:06:45.540
that's freely available online, and so that certainly helps benefit the answers

01:06:45.540 --> 01:06:48.540
when it comes to asking CS50 specific questions.

01:06:48.540 --> 01:06:53.540
That said, it's not perfect, and you might have heard of what are currently called hallucinations,

01:06:53.540 --> 01:06:59.540
where chatGPT and similar tools just make stuff up, and it sounds very confident,

01:06:59.540 --> 01:07:03.540
and you can sometimes call it on it, whereby you can say, no, that's not right,

01:07:03.540 --> 01:07:08.540
and it will playfully apologize and say, oh, I'm sorry, but it made up some statement

01:07:08.540 --> 01:07:13.540
because it was probabilistically something that could be said even if it's just not correct.

01:07:13.540 --> 01:07:18.540
Now, I'll allow me to propose that this kind of problem is going to get less and less frequent,

01:07:18.540 --> 01:07:22.540
and so as the models evolve and our techniques evolve, this will be less of an issue,

01:07:22.540 --> 01:07:26.540
but I thought it would be fun to end on a note that a former colleague shared just the other day,

01:07:26.540 --> 01:07:32.540
which was this old poem by Shel Silverstein, another something from our past childhood perhaps,

01:07:32.540 --> 01:07:36.540
and this was from 1981, a poem called Homework Machine,

01:07:36.540 --> 01:07:40.540
which is perhaps foretold where we are now in 2023.

01:07:41.540 --> 01:07:46.540
The Homework Machine, oh, the Homework Machine, most perfect contraption that's ever been seen.

01:07:46.540 --> 01:07:49.540
Just put in your homework, then drop in a dime, snap on the switch,

01:07:49.540 --> 01:07:55.540
and in ten seconds time, your homework comes out quick and clean as can be.

01:07:55.540 --> 01:08:00.540
Here it is, nine plus four, and the answer is three.

01:08:00.540 --> 01:08:01.540
Three?

01:08:01.540 --> 01:08:02.540
Oh, me.

01:08:02.540 --> 01:08:06.540
I guess it's not as perfect as I thought it would be.

01:08:06.540 --> 01:08:09.540
So, quite foretelling, sure.

01:08:12.540 --> 01:08:17.540
Quite foretelling indeed, though for all this and more,

01:08:17.540 --> 01:08:22.540
the family members in the audience are welcome to take CS50 yourself online at cs50.edex.org.

01:08:22.540 --> 01:08:29.540
For all of today and so much more, allow me to thank Brian, Rung Shin, Sophie, Andrew, Patrick, Charlie, CS50's whole team.

01:08:29.540 --> 01:08:32.540
If you are a family member here headed to lunch with CS50's team,

01:08:32.540 --> 01:08:36.540
please look for Cameron holding a rubber duck above her head.

01:08:36.540 --> 01:08:38.540
Thank you so much for joining us today.

01:08:38.540 --> 01:08:40.540
This was CS50.

01:09:02.540 --> 01:09:04.540
Thank you.

