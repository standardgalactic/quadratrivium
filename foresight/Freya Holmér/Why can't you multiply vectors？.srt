1
00:00:00,000 --> 00:00:07,920
All right. So, math and cats. Enough said, right? A little bit first sight.

2
00:00:07,920 --> 00:00:14,160
So, just kidding. Freya is an independent game developer and educator, and today she's

3
00:00:14,160 --> 00:00:19,560
going to talk about a topic that to some is the stuff of nightmares and to others, like

4
00:00:19,560 --> 00:00:25,200
myself, is perhaps a little bit more the stuff of dreams and all the squiggly lines in between.

5
00:00:25,200 --> 00:00:30,520
So in her talk, she's going to hopefully inspire you all to consider the math underlying

6
00:00:30,520 --> 00:00:34,840
our games a little bit more magical. Thank you.

7
00:00:34,840 --> 00:00:44,880
Okay. Hello, everyone, to probably the most technical talk. I'm going to teach you all

8
00:00:44,880 --> 00:00:54,520
about set theory and quaternions. This talk is called, why can't you multiply vectors?

9
00:00:54,520 --> 00:00:59,720
And so, I've been doing a lot of things within game development and math for a long time

10
00:00:59,720 --> 00:01:05,800
now. I started out as an environment artist, and then I moved into level design, and then

11
00:01:05,800 --> 00:01:09,360
I eventually learned programming, and I got really excited about that, and then I got

12
00:01:09,400 --> 00:01:17,320
into math, like, very heavily the past, like, two years or so. And now I've sort of, like,

13
00:01:17,320 --> 00:01:22,280
dived so deep into math that sometimes the stuff that I talk about, game developers

14
00:01:22,280 --> 00:01:26,640
are like, oh, this just seems like useless abstract nonsense. Like, why are you even

15
00:01:26,640 --> 00:01:30,280
doing this? Like, I just want to make a game. I just want to copy-paste my math from the

16
00:01:30,280 --> 00:01:33,520
internet and just, like, paste it into my game so that it works. I don't care about

17
00:01:33,520 --> 00:01:38,680
the underlying stuff. But today I want to talk about that underlying stuff anyway, so you're

18
00:01:38,720 --> 00:01:46,400
going to have to suffer through that. So, there's a bit of a schism sometimes between math and

19
00:01:46,400 --> 00:01:54,800
programming. So, I sent this tweet at some point on 9-11 of all days, so this is my personal

20
00:01:54,800 --> 00:02:01,360
9-11, because this started a war between programmers and math people, which was really

21
00:02:01,360 --> 00:02:06,040
weird, but, like, all the math people were like, what are those for loops? That makes

22
00:02:06,120 --> 00:02:10,520
no sense. Like, all of these symbols that look so complicated and weird, and then you had all of

23
00:02:10,520 --> 00:02:15,400
these programmers that were like, what are those weird symbols? Like, there's no context for

24
00:02:15,400 --> 00:02:21,640
this. There's nothing describing what that does. You just have to know what that does, right? But

25
00:02:21,640 --> 00:02:25,240
so all I really wanted to do was kind of, like, draw this, like, simple analogy for people who

26
00:02:25,240 --> 00:02:30,440
might not know that much math to just be like, okay, so these summation symbols is just adding

27
00:02:30,440 --> 00:02:35,960
things up in a for loop, and the capital pi is just a product. You're just multiplying

28
00:02:35,960 --> 00:02:42,040
things together. So, those interesting, because it kind of illuminated to me that there's this

29
00:02:42,040 --> 00:02:47,880
big schism, or like, big divide, that I kind of want to merge, and I see that as sort of my job

30
00:02:47,880 --> 00:02:54,840
in a way of trying to bridge that gap. A little bit about me. I probably don't care that much.

31
00:02:54,840 --> 00:02:59,000
Co-founder of the studio called Neat Corp, made a game called Budget Cuts and Budget Cuts 2,

32
00:02:59,000 --> 00:03:06,520
where a studio of like, seven, very awkward size, made some plugins for Unity, one called Shader Forge,

33
00:03:06,520 --> 00:03:11,960
and one called Shapes. I want to say shader, editor, and the other one is a vector graphics

34
00:03:11,960 --> 00:03:15,960
plugin that I'm also working on a spline plugin right now that is not released yet.

35
00:03:17,560 --> 00:03:23,160
I also make YouTube videos, so I made some videos about tech art, math, and tool development,

36
00:03:23,160 --> 00:03:28,600
mostly within Unity, and then I also made some YouTube videos about Bezia curves and splines.

37
00:03:29,480 --> 00:03:35,800
All right. So, I'm a tech artist. That's kind of the center of what I do. It's kind of the

38
00:03:35,800 --> 00:03:41,160
intersection of art, and programming, and math kind of comes in there to do all of these kinds of

39
00:03:41,160 --> 00:03:46,920
weird funky, techy visual solutions to problems in games. So, a lot of the stuff I do is just

40
00:03:46,920 --> 00:03:51,800
like trying to work out things like, how do you render lines in a way that looks nice?

41
00:03:51,800 --> 00:03:55,400
Because, you know, you have like a naive implementation, might look like garbage,

42
00:03:55,400 --> 00:03:59,480
but if you spend some time thinking about it, you can make something that looks much, much prettier.

43
00:04:01,480 --> 00:04:05,800
And so, a lot of the work I'm doing as of late has to do with splines. This is an excerpt from my

44
00:04:05,800 --> 00:04:13,000
video. It's just a lot of splines. I've just had splines in my head for the past three years,

45
00:04:13,000 --> 00:04:18,040
and I can't get them out, and so here I am. Recently, I've been getting into like quaternionic

46
00:04:18,120 --> 00:04:22,600
splines, or just like splines in quaternion space to interpolate orientations,

47
00:04:23,800 --> 00:04:30,200
and some torsion visualizations. I don't know. I have a bunch of things related to this that I do.

48
00:04:31,400 --> 00:04:38,280
That's a dodecahedron. Anyway, so, in this talk, we're going to explore, why can't you multiply

49
00:04:38,280 --> 00:04:45,080
vectors? And I think, as with any other talk, I think you should always start on the second slide

50
00:04:45,080 --> 00:04:50,520
with some common criticisms of the title of the talk. And so, some common criticisms might be,

51
00:04:51,080 --> 00:04:55,720
yes, you can. It's called a dot product. Like, what are you talking about? Or you might say,

52
00:04:55,720 --> 00:04:59,960
well, yes, you can. It's called a cross product. Like, why do you mean you can't multiply vectors?

53
00:05:00,840 --> 00:05:07,720
Or you might say, what do you mean? I multiply vectors all the time. This could be early signs

54
00:05:07,720 --> 00:05:14,840
that you might be a shader programmer, and no, you're actually not really multiplying vectors.

55
00:05:14,920 --> 00:05:21,880
You're going to find out why. So, the anatomy of a vector, just to go through what we're actually

56
00:05:21,880 --> 00:05:28,200
talking about. We usually write it in bold letters, and that's a vector v, and it has three components

57
00:05:28,200 --> 00:05:35,080
if it's a 3D vector. Realizing I'm forgetting to breathe, because I have so much to talk about.

58
00:05:37,480 --> 00:05:41,320
So, we have three components, x component, the y component, and the z component, usually written

59
00:05:41,320 --> 00:05:46,360
in parenthesis, right? And you can also write it as a column matrix if you want to, which can be

60
00:05:46,360 --> 00:05:50,920
useful sometimes, because you can write longer lines for each component. It's kind of useful.

61
00:05:52,280 --> 00:05:57,960
And this kind of presumes a basis, as in the basis vectors of our coordinate system, right?

62
00:05:57,960 --> 00:06:03,400
We have an x-axis, we have a y-axis, and a z-axis, and they're all orthogonal to each other,

63
00:06:03,400 --> 00:06:08,600
and they have a length of one. So, they're orthonormal, is what we call it in the industry.

64
00:06:09,400 --> 00:06:14,600
All right. So, products. We obviously know about the dot product. Everybody's heard about that,

65
00:06:14,600 --> 00:06:20,840
and it's some kind of multiplication, right? You have your vector a, your vector b, and then you

66
00:06:20,840 --> 00:06:25,400
write little dot in between, and then the dot product is basically multiplying each of the

67
00:06:25,400 --> 00:06:29,800
components, and then adding them all up into a single scalar value. So, it's sometimes called

68
00:06:29,800 --> 00:06:35,320
a scalar product. You can also write it using these summation notations. So, it's like dimension

69
00:06:35,320 --> 00:06:38,840
independent. So, if you want to do the dot product in any dimension, you can use that formula.

70
00:06:39,800 --> 00:06:45,480
I hope it's readable and not too small. And then we have the cross products. The cross products

71
00:06:45,480 --> 00:06:51,000
does not return a scalar, it returns a vector. So, the cross products, we have this kind of

72
00:06:51,000 --> 00:06:56,280
complicated formula. We've just taken out very specific components for each of the x, y, and z

73
00:06:56,280 --> 00:07:01,880
components of the final output vector. That's the cross products. And then we have the 2D

74
00:07:02,600 --> 00:07:06,920
cross products, which is illegal. Don't tell your math teacher that you've been using a 2D cross

75
00:07:06,920 --> 00:07:12,440
product, because it doesn't really exist, but it's a very useful thing in games to have. And

76
00:07:12,440 --> 00:07:18,280
that's basically a cross product where you just set z to zero, and then whatever is left is your

77
00:07:18,280 --> 00:07:24,600
2D cross product. It's also sometimes known as the perpendicular dot product, or the exterior

78
00:07:24,600 --> 00:07:29,640
product, or the determinant, or the wedge product, or the anti-symmetric product. It has many names.

79
00:07:30,200 --> 00:07:35,960
It's annoying. And then finally, we have the Hadamard product, which is the shader programmer

80
00:07:35,960 --> 00:07:43,640
product, where you just say, well, just multiply the components. Like, just do that. Like, why not?

81
00:07:43,640 --> 00:07:49,480
Just take every component, multiply them together, that's your new vector. So, that's a component-wise

82
00:07:49,480 --> 00:07:56,920
product. Okay. So, we have the dot product, we have the cross product, and we have the Hadamard

83
00:07:57,000 --> 00:08:05,240
product. But what about the product? Like, just smash them together. No goddamn symbols in between,

84
00:08:05,240 --> 00:08:11,000
just a canonical product, right? Because usually, you don't write anything in between. If you want

85
00:08:11,000 --> 00:08:17,320
to write 5x, you don't have to write a symbol there. In math, you just have no symbol, because

86
00:08:17,320 --> 00:08:23,720
multiplication is kind of the canonical main operation, right? So, I think a lot of people,

87
00:08:23,800 --> 00:08:29,400
me included a few years ago, I was just like, just do it component-wise. Why are you overthinking

88
00:08:29,400 --> 00:08:36,040
this? Like, if you multiply a vector by a scalar, like a vector, like two times a vector A, you just

89
00:08:36,040 --> 00:08:41,560
multiply each component by two, right? So, that's component-wise. If you divide it by two, that's

90
00:08:41,560 --> 00:08:48,040
also component-wise. If you add two vectors, that's also component-wise. We add the x-axis together,

91
00:08:48,040 --> 00:08:52,680
we add the y-components together, and the z-components together, also component-wise.

92
00:08:53,560 --> 00:09:00,200
Subtraction works exactly the same way. So, why would multiply not just be the Hadamard product?

93
00:09:00,200 --> 00:09:04,920
You just take each component and multiply them together, right? Just don't worry about it. Just

94
00:09:04,920 --> 00:09:09,160
go ham. Just multiply all of your vectors and don't care about the rest. It's going to be fine.

95
00:09:11,640 --> 00:09:17,320
But it's not that simple, unfortunately. So, I'm going to take you all back to elementary school.

96
00:09:18,120 --> 00:09:24,040
We're going to talk about the natural numbers. So, the integers starting from zero and up,

97
00:09:24,040 --> 00:09:29,480
so all of the positive integers and usually zero as well. That's when you count things.

98
00:09:30,600 --> 00:09:38,680
So, we're going to count snail cats. So, here's a snail cat. So, let's say you have two snail cats,

99
00:09:39,640 --> 00:09:46,360
and then you add three snail cats. How many do we get? We get five snail cats. Isn't that amazing?

100
00:09:47,320 --> 00:09:54,200
So, two, three, and five are all natural numbers. We can count items using natural numbers, right?

101
00:09:55,640 --> 00:10:01,480
So, let's try multiplying. So, two snail cats multiplied by three snail cats is six snail cats.

102
00:10:01,480 --> 00:10:08,680
Great. That's perfectly fine. Just one more. So, we have two snail cats, minus three snail cats,

103
00:10:08,680 --> 00:10:15,320
and then we get... Well, that's not actually a natural number anymore, right? Like, two minus three.

104
00:10:16,040 --> 00:10:21,560
Now, we get something negative, and that's not within the realm of natural numbers. Like, negative

105
00:10:21,560 --> 00:10:27,880
is not a natural number, right? And so, in a very technical sense in math, we usually say that

106
00:10:28,520 --> 00:10:35,080
natural numbers are closed under addition and multiplication, but it's not closed under subtraction,

107
00:10:35,080 --> 00:10:41,640
because it's possible to leave the realm of natural numbers if you subtract, right? Because two minus

108
00:10:42,280 --> 00:10:48,920
three, not a natural number. Okay. So, we can talk about numbers of different kinds, right?

109
00:10:49,560 --> 00:10:54,360
Natural numbers, we can add them, but it's closed under addition. We get a natural number if we

110
00:10:54,360 --> 00:10:59,560
add two natural numbers, same with multiplication, but not subtraction, because then we need the

111
00:10:59,560 --> 00:11:06,680
integers. The integers, they have these technical symbols, the blackboard bold. So, natural numbers

112
00:11:06,760 --> 00:11:13,400
are n, integers are z, for some German reasons, I think. I don't know what it is. So, then we

113
00:11:13,400 --> 00:11:19,000
need integers, and that includes the negative numbers, right? The negative integers. Okay. So,

114
00:11:19,000 --> 00:11:23,080
integers are closed... Right. So, subtraction of natural numbers gives you integers.

115
00:11:24,440 --> 00:11:31,160
Integers are closed under addition, multiplication, and subtraction, but not under division, right?

116
00:11:31,160 --> 00:11:37,400
Because if you do one divided by three, that's not an integer. Again, we've left the realm of

117
00:11:37,400 --> 00:11:43,000
integers, and we've gone into the realm of rational numbers. So, rational numbers is an integer

118
00:11:43,000 --> 00:11:49,880
divided by another integer. So, with division, with natural numbers and integers, we get a

119
00:11:49,880 --> 00:11:56,120
rational number. We can also do exponentiation. So, if you take like a natural number, like two

120
00:11:56,120 --> 00:12:01,080
to the power of three, that is also a natural number. So, we stay with the natural numbers

121
00:12:01,080 --> 00:12:07,960
there. So, it's also closed under exponentiation. But integers are... Again, if you do integers,

122
00:12:07,960 --> 00:12:13,240
and you do powers on those, so, like three to the power of negative one would also give you a

123
00:12:13,240 --> 00:12:19,480
rational number. All right. Rational numbers, closed under addition, multiplication, subtraction,

124
00:12:19,480 --> 00:12:23,320
division, you get a rational number out of that. You don't change the kind of number.

125
00:12:24,280 --> 00:12:31,240
Exponentiation gets a little bit more complicated. Because you could do to the power of 0.5,

126
00:12:31,240 --> 00:12:37,560
which is a square root, because 0.5 is just one over two. And then we need the real numbers.

127
00:12:38,120 --> 00:12:43,480
So, the square root of five can't be expressed as an integer divided by an integer. But the

128
00:12:43,480 --> 00:12:48,760
real numbers are closed under all of these four operations. But then we might want to go to the

129
00:12:48,760 --> 00:12:55,160
next step. Like, what about exponentiation? And here's where we enter complex numbers. Because

130
00:12:55,160 --> 00:13:00,520
now it's getting a little bit weird here. Because that's just an entirely different type. Because

131
00:13:00,520 --> 00:13:06,840
a real number is just all the usual numbers we're familiar with. But the complex numbers can express

132
00:13:06,840 --> 00:13:12,440
things like the square root of negative five. In real numbers, we usually say that you just

133
00:13:12,440 --> 00:13:17,480
can't do the square root of a real number. But with complex numbers, we have a way to express that.

134
00:13:18,360 --> 00:13:25,480
And complex numbers are algebraically... Sorry. So, complex numbers. How many of you

135
00:13:25,480 --> 00:13:30,680
know what complex numbers are? Raise your hand. Quite a few. Okay. So, I can sort of speed around

136
00:13:30,680 --> 00:13:39,080
this one. Okay. So, let's say we have a thing called i. And if you square i, you get negative one.

137
00:13:40,600 --> 00:13:44,840
It's just an algebraic symbol. It's a variable like any other. But the only thing we know about

138
00:13:44,840 --> 00:13:49,320
it, we don't know its contents or its value. The only thing we know is that it squares to negative

139
00:13:49,320 --> 00:13:55,640
one. In other words, if you multiply it by itself, we get negative one. And this is called the imaginary

140
00:13:55,640 --> 00:14:03,080
unit. And this is just axiomatically true. Which is math speak for, because I told you so, it is true.

141
00:14:03,080 --> 00:14:08,680
And we just have to accept that, right? Okay. So, how do we do math with this? Well, if we have three

142
00:14:09,240 --> 00:14:16,520
i times two i, that would be six i squared. And since i squared is negative one, this is equal,

143
00:14:17,160 --> 00:14:22,680
because we can apply this rule of i squared equals negative one, then this becomes negative six.

144
00:14:24,600 --> 00:14:30,200
Okay. Another example, two i times four i minus three. We just distribute that. And then we get

145
00:14:30,200 --> 00:14:36,360
eight i squared minus six i. Again, i squared is negative one. So, we get negative eight minus six i.

146
00:14:37,240 --> 00:14:44,280
And we can sort of think of these numbers as having two parts to them. The first part here is the real

147
00:14:44,280 --> 00:14:50,600
number. This is just a regularized number that we use all the time. And then we have a coefficient

148
00:14:50,600 --> 00:14:56,200
of i. So, this is called the imaginary part. And you can kind of divide these up into these two

149
00:14:56,200 --> 00:15:01,160
separate categories. And that's what's called a complex number. So, that's when you have a

150
00:15:02,120 --> 00:15:05,800
regular number, a real number, and then some coefficient of i.

151
00:15:08,120 --> 00:15:15,080
Okay. So, let's say we have a complex number z. Then we can interpret it similar to a vector,

152
00:15:15,080 --> 00:15:20,200
because a vector also has two parts, right? If you have a 2D vector, you have an x component

153
00:15:20,200 --> 00:15:26,120
and a y component. Similarly, we can write complex numbers the way we write vectors, just in

154
00:15:26,120 --> 00:15:32,760
parentheses, right? Where we have the real part and the imaginary part. And now, the basis is just

155
00:15:32,760 --> 00:15:38,600
the value one and i. Because those are the things we multiply each of the components by

156
00:15:38,600 --> 00:15:43,800
in order to get the final results, right? So, you can kind of see the similarity between complex

157
00:15:43,800 --> 00:15:51,080
numbers and vectors. Like, they both have two components, well, for 2D vectors. And so, you

158
00:15:51,080 --> 00:15:55,640
can define a coordinate space using vectors. You have an x-axis and a y-axis. You can also just

159
00:15:55,720 --> 00:16:01,320
do the same with imaginary units. So, you can have a real axis for the real numbers and a vertical

160
00:16:01,320 --> 00:16:06,360
axis that's the imaginary axis. And then, for writing coordinates, we just do exactly the same

161
00:16:06,360 --> 00:16:11,480
thing we do for vectors. So, for 2D vectors, we have maybe this coordinate would be one and two.

162
00:16:11,480 --> 00:16:17,800
So, one on the x-axis, two on the y-axis. Can do the same for the complex numbers. So, this is

163
00:16:17,800 --> 00:16:23,320
called a complex plane. And it's just the same. It's just one and two. It's just that we're using

164
00:16:23,320 --> 00:16:28,840
a different basis. The cool thing about complex numbers is that we can actually just write them

165
00:16:28,840 --> 00:16:35,080
as a formula, like the way we did before, just one plus two i. That's what this represents, right?

166
00:16:37,480 --> 00:16:45,400
And so, this is really useful. What's useful about this one is that we can do algebra with this.

167
00:16:45,400 --> 00:16:50,840
We can, if we have this formula, we can just add them together or multiply them and just see what

168
00:16:50,840 --> 00:16:56,760
happens, right? And so, if we wanted to find out, like, okay, what happens when you multiply two

169
00:16:56,760 --> 00:17:03,000
vectors? Well, if complex numbers are vector-like, we can figure out what happens when you multiply

170
00:17:03,000 --> 00:17:07,800
two complex numbers. And maybe that's going to give us, like, some answers along the way for how to

171
00:17:07,800 --> 00:17:14,280
multiply vectors together. So, we can just try to go through that process. So, like, let's say we have

172
00:17:14,280 --> 00:17:19,800
two complex numbers, a complex number a and b. We multiply those together. So, we just write them

173
00:17:19,800 --> 00:17:26,440
out as equations. And as usual, we just distribute or, like, expand the whole thing, and then we

174
00:17:26,440 --> 00:17:33,000
might notice that, oh, this part has two i's in it, right? So, it's i squared, which means that it's

175
00:17:33,000 --> 00:17:38,600
equal to negative one. So, we multiply that whole thing by negative one. And so, now, we can see

176
00:17:38,600 --> 00:17:43,800
that this part, they share a common factor of i, so we can factor that out. And now, we get a complex

177
00:17:43,800 --> 00:17:49,240
number in the end. So, we have two complex numbers. We multiply them together, just regular

178
00:17:49,240 --> 00:17:53,640
multiplying, no dot products or cross products or anything. We're just multiplying them together.

179
00:17:53,640 --> 00:17:58,440
And in the end, we get another complex number, because we can express this as a coefficient of

180
00:17:58,440 --> 00:18:04,440
just a real number and a coefficient of i. So, what we can say is, again, complex numbers are

181
00:18:04,440 --> 00:18:09,560
closed under multiplication, because we give two complex numbers and we get a complex numbers out

182
00:18:09,560 --> 00:18:15,800
of it. So, if you want to implement this in code, like, this is how you would write that. The actual

183
00:18:15,800 --> 00:18:22,760
symbol of i is never in your code. It's just completely not there. The i is only there to, like,

184
00:18:22,760 --> 00:18:29,960
help us define the algebraic operations that we do using this. And so, we had our formula here,

185
00:18:29,960 --> 00:18:35,800
right? So, we're calculating some sort of real part from two complex numbers. And then, we get

186
00:18:35,800 --> 00:18:40,600
the real part here. And then, we calculate the imaginary part. We get the imaginary part. And

187
00:18:40,600 --> 00:18:46,760
then, we'll return a complex number. So, we only ever store the coefficients. We don't ever store,

188
00:18:46,760 --> 00:18:55,720
like, the weird i symbol, right? So, the reason we can do this is because it's closed under

189
00:18:55,720 --> 00:19:01,160
multiplication. That's why it returns a complex number. Okay. So, what does this look like? Because

190
00:19:01,160 --> 00:19:06,760
now, if we interpret this as a vector, we should be able to visualize this, because we can interpret

191
00:19:06,760 --> 00:19:12,920
complex numbers as 2D vectors. And this is what it would look like. So, here we have two vectors,

192
00:19:12,920 --> 00:19:17,880
the red one and the blue one. And we multiply them as complex numbers in the complex plane.

193
00:19:17,880 --> 00:19:23,640
And the green vector is the result. And you might be able to tell that it has something to do with,

194
00:19:23,640 --> 00:19:29,560
like, sort of adding the angles up, right? It's kind of like taking the angle of one of the vectors,

195
00:19:29,560 --> 00:19:33,640
adding it to the other angle. And when it's normalized, you can see that the vectors

196
00:19:33,640 --> 00:19:37,960
have the same length. Like, the green one doesn't get longer or shorter than the red one or the blue

197
00:19:37,960 --> 00:19:44,360
one. And so, this one, while it's not a vector multiplication, it's still complex number

198
00:19:44,360 --> 00:19:48,360
multiplication, we might be able to apply some of the same strategies for figuring out, like,

199
00:19:48,360 --> 00:19:54,600
what happens when you multiply vectors? Okay. So, now, we figured out that complex numbers

200
00:19:54,680 --> 00:20:00,520
are closed under multiplication. And, in fact, they are closed under all of these operations.

201
00:20:01,080 --> 00:20:06,280
And it's the only, I think it's called a complete algebra. I think it's actually the only complete

202
00:20:06,280 --> 00:20:10,680
algebra within math, which I think is kind of cool, that it's closed under all of these operations.

203
00:20:12,280 --> 00:20:15,880
All right. But what we really want to figure out is vectors, right? That was the whole point

204
00:20:15,880 --> 00:20:20,520
of this talk. Like, why can't we multiply vectors? Like, this should be possible. I really want to

205
00:20:20,520 --> 00:20:27,080
try to do it, you know? So, if we go back to this, we could write our complex numbers as a real part

206
00:20:27,080 --> 00:20:36,040
plus an imaginary part times i. So, why can't we do that with vectors? We have an x component,

207
00:20:36,040 --> 00:20:43,400
we multiply it by a symbol representing our x axis, and then we add the y component multiplied by

208
00:20:43,480 --> 00:20:51,000
a symbol representing the y axis. So, now, if we use this, again, we can do algebra with this,

209
00:20:51,000 --> 00:20:55,560
right? Like, now we can actually just do it ourselves. Instead of just listening to

210
00:20:55,560 --> 00:20:59,240
our math teacher or me, you can just, like, actually do it yourself, right?

211
00:21:00,600 --> 00:21:05,480
So, now we have another way of writing vectors. In other words, like this, if we have a 3D vector,

212
00:21:05,480 --> 00:21:10,680
we just take each of the components and multiply them by the symbol representing

213
00:21:10,680 --> 00:21:17,960
each of the three basis vectors of our coordinate system. Okay. So, if we have two vectors, A and B,

214
00:21:17,960 --> 00:21:23,000
these are 3D vectors, we can write them like this. So, these, again, we have the components,

215
00:21:23,000 --> 00:21:28,920
we have the axes, and then we can do some algebra with this. So, let's do something simple, like,

216
00:21:28,920 --> 00:21:34,280
multiplying a scalar by a vector, just a number times a vector. Well, we have a number s, we

217
00:21:34,280 --> 00:21:39,960
multiply that by our vector, and that just distributes to all the terms in there, and we

218
00:21:39,960 --> 00:21:45,560
can see that that's a component-wise multiplication, which is what we would expect, right? Because we've

219
00:21:45,560 --> 00:21:51,160
been told that that's component-wise. And it seems to be, right? All right. Let's try one more. So,

220
00:21:51,160 --> 00:21:55,240
addition. So, we want to add these two vectors together, and we can remove the parentheses,

221
00:21:55,240 --> 00:22:00,280
because they're useless. And then we can find some common factors here. There's a common factor of

222
00:22:00,280 --> 00:22:07,320
the x-axis. Again, the red x is just referring to the abstract concept of the x-axis. And so,

223
00:22:07,320 --> 00:22:13,160
we just factor out those axes, and we end up with this. And now, again, we have a clean, like,

224
00:22:13,160 --> 00:22:20,280
factor of x, y, and z separately. And so, we can say that addition is component-wise, which is what

225
00:22:20,280 --> 00:22:26,040
we were told before, too. So, I guess they were right. So, that's component-wise. Fine. And if we

226
00:22:26,040 --> 00:22:30,760
do this with all of these operations, we can find that both addition and subtraction is component-wise.

227
00:22:30,760 --> 00:22:36,120
But we haven't multiplied two separate vectors yet, right? We've only done a scalar times the

228
00:22:36,120 --> 00:22:39,960
vector, but not a vector times a vector. And so, what's that going to be? Like, are we going to

229
00:22:39,960 --> 00:22:44,200
stay within the realm of 3D vectors? Like, kind of like the cross product. The cross product,

230
00:22:44,200 --> 00:22:49,320
you know, has a stay in there, right? Or maybe we're kind of like the dot product, where we just

231
00:22:49,320 --> 00:22:56,520
get a real number out of it, instead of a vector, right? Okay. So, let's find out. We have the tools,

232
00:22:56,520 --> 00:23:01,880
right? We can just have our two vectors, a and b, multiplying them together. No goddamn symbols

233
00:23:01,880 --> 00:23:07,960
in between. Just a pure multiplication. We write it out. This is the equation we just have to solve

234
00:23:07,960 --> 00:23:13,080
for, right? Like a straight-up multiplication. There's a lot of terms here, because you need to

235
00:23:13,080 --> 00:23:18,760
multiply these together. And you get this, which is ax, bx, xx, which is a little bit abstract.

236
00:23:18,760 --> 00:23:24,360
We don't quite know what that is yet. And then we just keep on doing this. And we end up with

237
00:23:24,360 --> 00:23:31,560
a lot of terms. And so, there we go. There we have it. So, this is what happens when you multiply

238
00:23:32,360 --> 00:23:39,800
two vectors, I guess. But now we have a little bit of a problem. Like, it's like, this is not a

239
00:23:39,800 --> 00:23:45,720
vector anymore. Like, we can't write this as a factor of x plus a factor of y plus a factor of z.

240
00:23:45,720 --> 00:23:52,120
Like, this is just a pile of nonsense, right? And so, we can see that vectors are just not

241
00:23:52,120 --> 00:23:59,240
closed under multiplication. We don't get a vector out of this, it seems. And so, that's why you can't

242
00:23:59,240 --> 00:24:09,800
multiply vectors. And so, thanks for coming to my talk. I hope this was useful. And so, obviously,

243
00:24:10,840 --> 00:24:16,120
that doesn't feel enough, right? Like, okay, we found out that it had this weird solution,

244
00:24:16,120 --> 00:24:21,880
but like, but what is it? Like, I need to find out. Like, we have to solve this. We haven't

245
00:24:21,880 --> 00:24:26,760
solved it yet. Like, it obviously gave us some sort of algebraic structure, and we need to investigate

246
00:24:26,760 --> 00:24:31,240
this and actually, like, decode this whole thing, because there has to be answers in there, right?

247
00:24:31,240 --> 00:24:35,240
Like, I'm willing to go to the ends of the earth to just, like, approach this whole problem and

248
00:24:35,240 --> 00:24:41,720
just figure out everything. And maybe we need to take a little bit of a leap of faith as a treat.

249
00:24:43,320 --> 00:24:49,000
And so, we're going to ask an oracle, a divine being of incomprehensible wisdom.

250
00:24:49,720 --> 00:24:57,320
Oh, great oracle, Salad. His name is Salad. We made a feeble attempt at multiplying vectors,

251
00:24:57,320 --> 00:25:03,800
and we seem to have reached an impasse. Can you illuminate us? The divine being contemplates for

252
00:25:03,800 --> 00:25:11,240
a second and says, I see. A tricky conundrum indeed, but fear not. The answers you seek are

253
00:25:11,240 --> 00:25:18,840
closer than you think. Don't worry. You are safe now, my child. I bestow upon you a key to

254
00:25:18,840 --> 00:25:25,480
understanding. Venture forth, and the answers you seek will be revealed to you. Now, I must nap.

255
00:25:26,040 --> 00:25:30,360
Leave me be. And the divine being turns into a non-Euclidean manifold.

256
00:25:33,960 --> 00:25:39,240
Okay. So, this is some sort of divine axiomatic truth we were given.

257
00:25:39,960 --> 00:25:45,400
And so, what does this say? So, it's a vector. It's in bold. So, if you multiply a vector by

258
00:25:45,400 --> 00:25:51,640
itself, in other words, square it, you get the length squared. Like, the length of that vector

259
00:25:51,640 --> 00:25:56,120
multiplied by itself. But this is not the full answer, right? This is just what happens when

260
00:25:56,120 --> 00:26:00,280
you multiply a vector by itself, but we want to know what happens when you multiply two arbitrary

261
00:26:00,280 --> 00:26:06,200
vectors. Okay. But let's experiment with this. So, let's say we have a vector with the values

262
00:26:06,200 --> 00:26:10,040
one, two, and three, and we want to square this. In other words, multiply it by itself.

263
00:26:10,680 --> 00:26:17,080
According to our divine axiom, it is the length squared. And the length, we can just use the

264
00:26:17,080 --> 00:26:22,840
Pythagorean theorem, right? We've learned that in school. And then we square that. The square root

265
00:26:22,840 --> 00:26:27,720
and the square cancel out. And so, we're left with one squared plus two squared plus three squared.

266
00:26:27,720 --> 00:26:35,080
And we get 14. Okay. So, if we square a vector, we get just a real number. And in this case,

267
00:26:35,160 --> 00:26:43,320
it's 14. Okay. So, let's explore this some more. So, what about our basis vectors? Because we have

268
00:26:43,320 --> 00:26:50,920
an x-axis, a y-axis, and a z-axis. They all have a length of one, right? So, what happens when

269
00:26:50,920 --> 00:26:55,800
you multiply those two together? Well, following our axiom, that should be equal to the length

270
00:26:55,800 --> 00:27:03,320
squared, which is just one squared, right? And so, that's just one. So, if you take our x-axis

271
00:27:03,320 --> 00:27:11,000
and multiply it by the x-axis, we get one out of that. And all of a sudden, we've gotten one key

272
00:27:11,000 --> 00:27:16,600
to the solution here. Because all of these terms that are crossed out, they just evaluate to one.

273
00:27:16,600 --> 00:27:22,600
So, those three terms are just multiplied by one, right? Okay. So, now we've started to unravel

274
00:27:22,600 --> 00:27:28,760
this a little bit. So, now we can separate out those terms. We have, like, that's just a real

275
00:27:28,760 --> 00:27:34,200
number, because those are no longer multiplied by a vector, right? All right. But we still have a

276
00:27:34,200 --> 00:27:40,360
bit of a mess on the lower part. Like, what the heck is yz and xz and yx? That's still nonsense

277
00:27:40,360 --> 00:27:47,160
to us, right? There's actually one more thing that our divine axiomatic rule gives us. So,

278
00:27:47,160 --> 00:27:50,600
if you consider the basis vectors, again, mutually orthogonal, they have a length of one,

279
00:27:51,880 --> 00:27:57,640
if you consider the diagonal between x and y, just x plus y gives you this white vector,

280
00:27:57,640 --> 00:28:02,840
right? And we know that the length of that one is a square root of two, because we can use the

281
00:28:02,840 --> 00:28:08,360
Pythagorean theorem for that, right? And so, then we can actually make use of our axiom to

282
00:28:08,360 --> 00:28:12,760
find out some more about this, because we can plug in the length that is the square root of two.

283
00:28:14,120 --> 00:28:18,840
So, if we take our vector, the white vector is just x plus y, and we square that, we should get

284
00:28:18,840 --> 00:28:24,200
something that is the square root of two squared. So, the left-hand side, we can expand. The right

285
00:28:24,200 --> 00:28:29,720
hand side, we can just cancel out the square root. And so, we get the expanded form of xx plus xy

286
00:28:29,720 --> 00:28:36,200
plus yx plus yy, and that's equal to two. All right, but we know that x times x is one, and y

287
00:28:36,200 --> 00:28:42,840
times y is one, right? We already figured that out. So, now we have this. We can subtract two

288
00:28:42,840 --> 00:28:49,480
from both sides. So, we end up with xy plus yx equals zero. And if we subtract yx from both sides,

289
00:28:49,480 --> 00:28:57,240
we get this. And this might seem kind of innocent. Like, okay, sure. Like, we have xy equals negative

290
00:28:57,240 --> 00:29:04,120
yx. So, the components are swapped and negated. But it means that they're equal. So, we can swap

291
00:29:04,120 --> 00:29:10,520
components at will, because if they're basis vectors, then we can do this. Okay, so, going back

292
00:29:10,520 --> 00:29:16,040
to our equation here, we can see that in the top one, we have yz on the first term, but then we have

293
00:29:16,040 --> 00:29:21,640
zy on the other one. So, what we can do is that we can swap these two terms and then negate that term.

294
00:29:22,600 --> 00:29:28,840
Because we now have this rule of xy equals negative yx. So, we swap them, and now we have

295
00:29:28,840 --> 00:29:34,120
subtraction symbols there instead of addition. And then we can factor those out.

296
00:29:36,440 --> 00:29:42,920
Do any of you recognize these? Do these formulas seem familiar? Like, something seems to have kind

297
00:29:43,000 --> 00:29:50,280
of jumped out at us, right? Like, this is the dot product. And we never set out to define the dot

298
00:29:50,280 --> 00:29:55,480
product. We just followed the divine command we were given of, like, the square of a vector is the

299
00:29:55,480 --> 00:30:01,160
magnitude squared. And somehow we got the dot product out of it as a complete, like, side effect.

300
00:30:01,160 --> 00:30:07,240
And this is the cross product. The cross product somehow also jumped out of us. So, we just somehow

301
00:30:07,240 --> 00:30:11,480
invented both the dot product and the cross product without ever intending to do so. We just

302
00:30:11,480 --> 00:30:17,480
wanted to know what happens when you multiply two vectors, right? And so, everything stems from this

303
00:30:17,480 --> 00:30:24,200
one rule. But we still have a mystery of, like, what the heck are these, anyway? Like, yz, zx, xy

304
00:30:24,200 --> 00:30:30,200
are just kind of confusing constructs. We know nothing about them, right? So, let's explore

305
00:30:30,200 --> 00:30:34,680
those a little further and see what happens with those. So, for example, maybe we can try seeing

306
00:30:34,680 --> 00:30:42,920
what happens if we square them. We take xy squared. That equals xy, xy. And we know that we can swap

307
00:30:42,920 --> 00:30:47,080
two of these and negate, and that's going to be the same thing. So, if we swap the middle two

308
00:30:47,080 --> 00:30:55,240
components, we get negative xxyy. We know what xx is. We know what yy is, right? So, we get negative

309
00:30:55,240 --> 00:31:03,160
one times one. So, we know that that's equal to negative one. So, we have a thing that we can

310
00:31:03,160 --> 00:31:11,960
square that gives us a negative one. That's the imaginary unit. We didn't set out to invent the

311
00:31:11,960 --> 00:31:18,360
imaginary unit either. This is all just still stemming from that one axiomatic rule. And this

312
00:31:18,360 --> 00:31:25,160
actually applies to the other combinations as well of zx and yz. And so, if you mash them together

313
00:31:25,240 --> 00:31:33,960
like this, all of that equals negative one. And you might have seen this in a different form before.

314
00:31:35,240 --> 00:31:42,200
So, i squared equals j squared equals k squared equals ijk equals negative one is the definition

315
00:31:42,200 --> 00:31:50,360
of quaternions. That's the way quaternions are defined right now. And so, what seems to have

316
00:31:50,360 --> 00:31:57,320
happened is that when we multiply two vectors together, two 3D vectors together, we get a

317
00:31:57,320 --> 00:32:04,840
quaternion which is written with an h for Hamilton. And so, that's kind of weird, isn't it?

318
00:32:06,520 --> 00:32:15,160
And so, this thing that we have here has a basis of one, yz, zx and xy. And that has the exact

319
00:32:15,240 --> 00:32:20,920
algebraic behavior of quaternions. And each component, obviously, it's a factor of each of

320
00:32:20,920 --> 00:32:28,200
these. So, it's a multiple of each of those bases. And so, that's our quaternions. And so,

321
00:32:28,200 --> 00:32:33,400
what about 2D? Like, we haven't looked at 2D vectors now. So, we should try 2D as well. That's

322
00:32:33,400 --> 00:32:41,000
just setting z to zero. And if we multiply two 2D vectors together, we get this. And this has a basis

323
00:32:41,240 --> 00:32:48,840
of one and xy, which that's the complex numbers. That still just has the same algebraic behavior

324
00:32:48,840 --> 00:32:56,280
as complex numbers. But so, this is fascinating and kind of weird that we just went through

325
00:32:56,280 --> 00:33:00,840
this algebraic journey and somehow, like, multiplying vectors gives us quaternions and complex

326
00:33:00,840 --> 00:33:09,240
numbers. But again, like, what are these things? Like, what is yz and zx and xy? And like,

327
00:33:09,240 --> 00:33:16,520
we still don't know. Like, we kind of want to find that out, too. So, if we consider the basis

328
00:33:16,520 --> 00:33:24,440
vectors of a coordinate system, our xy axes, or in 3D, our xyz axes, they all have a length of one.

329
00:33:25,000 --> 00:33:30,600
And they're all mutually orthogonal. So, that's our basis vectors. The things we're trying to

330
00:33:30,600 --> 00:33:36,360
figure out now are these, like, yz and zx and all of that, right? And these look suspiciously

331
00:33:36,360 --> 00:33:41,480
similar to the cross product, don't they? And the cross product has this behavior of, if you have

332
00:33:41,480 --> 00:33:46,840
two vectors, a and b, and you do the cross product, you get something that's perpendicular to both of

333
00:33:46,840 --> 00:33:52,760
them. In other words, it's normal to the plane formed by those two vectors. And it also just so

334
00:33:52,760 --> 00:33:59,080
happens that the magnitude, the length of this green vector, is the area formed by the parallelogram

335
00:33:59,080 --> 00:34:05,960
between those two vectors, both in 2D and in 3D. So, maybe this has something to do with planes.

336
00:34:06,440 --> 00:34:17,240
Rather than, like, points in space, right? All right. So, if we have our xy component,

337
00:34:17,240 --> 00:34:21,320
that's the only one we have in 2D. That was the one that was equal to the imaginary unit.

338
00:34:21,960 --> 00:34:31,160
And in 3D, we have yz, zx and xy. So, what if we conceptualize these bases as planes? So, maybe our

339
00:34:32,120 --> 00:34:39,080
xy refers to the plane formed by x and y, and specifically the unit plane, like a plane with

340
00:34:39,080 --> 00:34:45,640
an area of 1. And if we extend this to 3D, there's obviously three planes now that are the basis

341
00:34:45,640 --> 00:34:53,320
planes of our coordinate system. And so, maybe we can call these bases bi-vectors. So, that's what

342
00:34:53,320 --> 00:34:58,280
we're going to name these. They're not quite vectors, but they're sort of like two vectors

343
00:34:58,360 --> 00:35:05,240
forming a plane. So, let's call them bi-vectors. They have an area of 1, and they are mutually

344
00:35:05,240 --> 00:35:10,760
orthogonal. So, the way to think about this is that if you have a regular vector, like a point

345
00:35:10,760 --> 00:35:17,880
in space, then it's kind of like casting a shadow onto each of the axes, right? The three components

346
00:35:17,880 --> 00:35:26,760
of a vector is just how far along each axis is this point. And so, for bi-vectors, it's the same

347
00:35:27,400 --> 00:35:33,080
thing, but instead of points along axes, maybe we can interpret this as an oriented area,

348
00:35:33,640 --> 00:35:39,960
casting shadows on each of those three bases bi-vectors, the three bases planes. And so,

349
00:35:39,960 --> 00:35:44,840
a bi-vector has those three numbers. It looks very similar to a vector if you just look at those

350
00:35:44,840 --> 00:35:51,800
numbers, right? But we interpret it as a bi-vector. So, it's an oriented plane with an area, and

351
00:35:51,800 --> 00:35:56,360
that's it. It has no position or anything like that. And if we manipulate it, you can see that

352
00:35:56,440 --> 00:36:03,080
the numbers change as well. So, this is just me turning it around in unity. And so, again, we get

353
00:36:03,080 --> 00:36:09,160
kind of the shadow on each of those three planes. And it can be negative. So, we get a signed area

354
00:36:09,160 --> 00:36:15,880
on each of those three planes. And obviously, it has an area, so we can scale it up as well. It can

355
00:36:15,880 --> 00:36:23,160
be larger, and it can be smaller, and so forth. And so, this is what a bi-vector would look like

356
00:36:23,160 --> 00:36:27,720
if you just write it in code. You have, like, just three components. It looks awfully similar to a

357
00:36:27,720 --> 00:36:36,440
vector, but algebraically, it's entirely different because the basis is YZ, ZX, and XY. It's not XYZ.

358
00:36:37,480 --> 00:36:44,040
And in fact, these bi-vectors, they represent the minimum information required in any given

359
00:36:44,040 --> 00:36:53,000
dimension to store both a plane and a magnitude. And this is why it shows up quite a lot when

360
00:36:53,000 --> 00:36:58,920
dealing with rotations, because rotations happen in a plane, right? Like, they don't really happen

361
00:36:58,920 --> 00:37:05,000
around an axis. Like, if you have rotations in 2D, there's no third axis to speak of, but there is a

362
00:37:05,000 --> 00:37:13,560
plane you can rotate in, right? And so, if we look back at the cross product, the cross product,

363
00:37:13,560 --> 00:37:20,280
again, gave us a vector. So, it has an XYZ component, which is a regular vector. But the thing about

364
00:37:20,280 --> 00:37:24,440
the cross product is that in math and physics, we talk about something called a pseudo vector,

365
00:37:25,400 --> 00:37:30,360
which is it has, like, these weird transformation rules. Like, if you mirror the result of a cross

366
00:37:30,360 --> 00:37:39,240
product, it doesn't have the expected behavior. And it only works in 3D and 70. Don't ask me why.

367
00:37:39,240 --> 00:37:44,920
It's just the way it is. And it has all of these hidden transformation rules. The thing we were

368
00:37:44,920 --> 00:37:51,560
doing now, where we returned a bi-vector instead, is called a wedge product. And usually, you write it

369
00:37:51,560 --> 00:37:59,000
with this little hat thing. And so, algebraically, it's exactly the same in terms of the coefficients,

370
00:37:59,000 --> 00:38:04,360
but the bases we use are completely different, because we have YZ, ZX, and XY instead. So,

371
00:38:04,360 --> 00:38:09,560
this returns a bi-vector. It generalizes to any dimension. It doesn't have to be only 3D and 70

372
00:38:09,640 --> 00:38:15,800
or whatever. And it's a little harder to understand, though, because we were never really taught about

373
00:38:15,800 --> 00:38:25,640
bi-vectors in school, right? Or at least I wasn't. And so, here we have the 3D and the 2D vector

374
00:38:25,640 --> 00:38:30,680
multiplication. We can write it a little bit more generalized by saying that multiplying two vectors

375
00:38:30,680 --> 00:38:36,440
together is the dot product plus the wedge product of those two vectors together. Because the wedge

376
00:38:36,520 --> 00:38:43,880
product gives us the bi-vector part of that multiplication. Let's see. Does this work? Oh,

377
00:38:43,880 --> 00:38:47,960
shit, it works. Hell yeah. I thought internet wouldn't work. And another place where this

378
00:38:47,960 --> 00:38:54,840
actually shows up that I ran into is when talking about a thing called curvature. So, here you can

379
00:38:54,840 --> 00:39:00,840
see something called the oscillating circle. So, this is kind of the circle that matches the curvature

380
00:39:00,920 --> 00:39:08,600
of this spline that it's moving along. And the radius of that is 1 divided by the curvature.

381
00:39:09,480 --> 00:39:14,840
So, if instead of thinking about the radius, you think about the inverse of the radius,

382
00:39:14,840 --> 00:39:20,840
and that's curvature. So, a curvature of 0 is a straight line, a curvature of 1 turns in one

383
00:39:20,840 --> 00:39:25,560
direction, a curvature of negative 1 turns in the other direction. Anyway, it's a useful concept.

384
00:39:26,280 --> 00:39:32,040
And so, if we want to measure curvature of a parametric function, say, this is how you would

385
00:39:32,040 --> 00:39:36,440
do curvature in 2D. This is straight up from Wikipedia. If you want to see how to measure

386
00:39:36,440 --> 00:39:43,000
curvature. This is a scalar, and it's signed. In other words, it can be both negative and positive.

387
00:39:44,200 --> 00:39:50,440
And then we have curvature in 3D. And here, we have the magnitude of the cross-products

388
00:39:50,440 --> 00:39:58,840
between the velocity and the acceleration divided by the speed cubed. And so, these look very

389
00:39:58,840 --> 00:40:04,760
different if you're not familiar with everything that we just talked about. But this one is always

390
00:40:04,760 --> 00:40:08,760
positive because we're getting the magnitude of a vector. So, all of a sudden, it's no longer

391
00:40:08,760 --> 00:40:14,920
signed. There's no negative curvature or positive curvature. And what about the axis? If curvature

392
00:40:14,920 --> 00:40:21,960
turns kind of around an axis in 3D, right? And so, these two, that's looking a little sus.

393
00:40:21,960 --> 00:40:28,920
Like, now we can kind of recognize these patterns, right? And so, this is just a wedge product. So,

394
00:40:28,920 --> 00:40:33,560
we've kind of been mistaken in thinking about the curvature and thinking of them as either a scalar

395
00:40:33,560 --> 00:40:37,960
or the cross-product or the magnitude of the cross-product. But if we just do the wedge product

396
00:40:37,960 --> 00:40:44,120
instead, that is much more simple. And it generalizes to any dimension again. And so, instead of

397
00:40:44,120 --> 00:40:50,760
returning to the scalar or a vector, we get a bi-vector out of that. Yes, I'm going to go a

398
00:40:50,760 --> 00:40:56,760
little bit over time. Are you all okay with that? Okay. I'm almost done. So, this is kind of a

399
00:40:56,760 --> 00:41:02,280
generalized curvature. Anyway, so, what I think is cool about this is that throughout math, we've

400
00:41:02,280 --> 00:41:09,400
had this thing of, like, mental gymnastics of, like, you can't really multiply vectors, but here's

401
00:41:09,400 --> 00:41:13,400
eight different products. Just use those instead. And also, the cross-product doesn't work at all

402
00:41:13,480 --> 00:41:18,520
in all dimension, but it works in 3D and, like, 5D or 7D, maybe, like, one of those,

403
00:41:18,520 --> 00:41:22,600
one of those. And also, cross-product returns a pseudo-vector with, like, special transformation

404
00:41:22,600 --> 00:41:27,960
rules. So, it's not really a vector. And complex numbers, they're, like, 2D vectors, but also,

405
00:41:27,960 --> 00:41:32,040
not at all, but they can, like, rotate. And quaternions are, like, an extension of complex

406
00:41:32,040 --> 00:41:37,000
numbers with rules i squared equals j squared equals k squared equals ijk equals negative one.

407
00:41:37,000 --> 00:41:46,040
It's just, like, Jesus Christ, right? Or we can just say that if you square a vector, you get the

408
00:41:46,040 --> 00:41:51,480
length squared. That seems a little bit more simple. And then everything else, all of those things we

409
00:41:51,480 --> 00:41:57,160
talked about, just naturally emerge from that definition. What we've been talking about is

410
00:41:57,160 --> 00:42:02,040
called geometric algebra. More specifically, it's a Clifford algebra. And if you take all of these

411
00:42:02,040 --> 00:42:07,240
components and, like, combine them into a big multi-vector, and 2D, they will look like this.

412
00:42:07,240 --> 00:42:13,080
We have a scalar. We have a real number. We have a vector and a bi-vector. Vector has two components.

413
00:42:13,080 --> 00:42:20,360
Bi-vector only has one component. That's a full 2D VGA multi-vector. So, VGA is either vanilla

414
00:42:20,360 --> 00:42:25,960
geometric algebra or vector geometric algebra. People haven't agreed on this. Then the 3D

415
00:42:25,960 --> 00:42:31,560
multi-vector looks like this. So, the vector has three components now, and the bi-vector also has

416
00:42:31,560 --> 00:42:37,880
three components. This is why we probably mixed up vectors, pseudo-vectors together, because they

417
00:42:37,880 --> 00:42:43,640
both have three components in 3D. But it's actually much better to express the results of the cross

418
00:42:43,640 --> 00:42:49,080
product as a bi-vector instead. There's also a thing called a tri-vector, which is the unit

419
00:42:49,080 --> 00:42:55,880
volume formed by the three basis vectors. We're not going to get into that. So, basically, all of

420
00:42:55,880 --> 00:43:00,760
these concepts that we've kind of juggled around with all these special rules, they can actually

421
00:43:00,760 --> 00:43:07,880
generalize in a really clean way using this framework. So, instead of separating complex

422
00:43:07,880 --> 00:43:14,120
numbers and quaternions as separate things, we can just call them rotors, and that's a real number

423
00:43:14,120 --> 00:43:22,280
plus a bi-vector of that given dimension. And so, finally, after this whole journey,

424
00:43:23,000 --> 00:43:29,320
you might be wondering, well, if multiplying two 3D vectors gives us a quaternion

425
00:43:30,040 --> 00:43:36,600
and in games, we use quaternions for rotations. What rotation does that represent? Like, what

426
00:43:36,600 --> 00:43:42,440
happens when we do that? And this is what it represents. So, we're multiplying these two

427
00:43:42,440 --> 00:43:47,560
vectors together, and the orientation that we get, we're orienting this cube based on it,

428
00:43:47,560 --> 00:43:53,480
is twice the angle between those two vectors in the plane formed by those two vectors.

429
00:43:54,360 --> 00:43:58,600
And so, that applies to 3D as well. So, if we, like, separate these two vectors out, you can

430
00:43:58,600 --> 00:44:03,960
see that the cube rotates after that. And it's, like, twice the angle between those two. If you

431
00:44:03,960 --> 00:44:09,000
want to read up more on that, look up quaternions and double cover that talks about why it's twice

432
00:44:09,000 --> 00:44:17,080
the angle. And so, why couldn't you multiply vectors? Well, probably because your teacher

433
00:44:17,080 --> 00:44:26,200
didn't explain geometric algebra to you, right? But, now you can. And that's my talk. Thank you

434
00:44:26,200 --> 00:44:39,240
very much for coming. All right. Thank you so much. So, if anything, your talk was both a question

435
00:44:39,240 --> 00:44:44,360
and an answer to the multiplication of kath, maths, and rainbows. So, there's that. You have

436
00:44:44,360 --> 00:44:50,520
produced at least an answer to that very tricky multiplication. And with that, I would love to

437
00:44:50,520 --> 00:44:57,000
open it up for a couple of questions. Has any? Yeah, there's a really weird cube that they pass

438
00:44:57,000 --> 00:45:02,360
around. It's very strange. I probably should have mentioned that there was going to be questions

439
00:45:02,360 --> 00:45:08,920
at the end. I forgot. What are you exploring next while people think of questions? Sorry,

440
00:45:08,920 --> 00:45:14,440
what? What area are you exploring next that you want to break your brain over? I'm still stuck

441
00:45:14,440 --> 00:45:22,600
in quaternions. So, I've been making a spline library where, like, a spline library for unity

442
00:45:22,600 --> 00:45:27,880
that has, like, quaternionic splines. And I want to, like, implement a bunch of different types of

443
00:45:27,880 --> 00:45:32,440
splines in quaternion space, which is really fascinating and weird. So, that's been kind of a

444
00:45:32,440 --> 00:45:41,560
recent obsession. Yes? Is it working? Yeah. All right. There we go. First of all, I want to say I

445
00:45:41,560 --> 00:45:45,400
love the talk that you've been giving and also your YouTube channel that you have. Oh, can you

446
00:45:45,400 --> 00:45:49,800
talk a little closer? Yeah. That I really like your YouTube channel and the talk that you've just

447
00:45:49,800 --> 00:45:55,880
been giving. Oh, thank you. What type of, what different type of problems could,

448
00:45:57,160 --> 00:46:04,680
do you have that could help with where you would have a benefit for using the wedge

449
00:46:05,000 --> 00:46:12,280
factor or these operations in? So, most of it is useless. Like, this whole talk,

450
00:46:12,280 --> 00:46:19,800
waste of time. But, it's like, again, this is kind of more, like, reframing things you already knew.

451
00:46:19,800 --> 00:46:23,160
Like, if you looked up how quaternions worked or how complex numbers worked,

452
00:46:23,160 --> 00:46:26,920
they would just be separate systems, kind of, but now they're kind of unified in a way that

453
00:46:26,920 --> 00:46:32,040
makes more sense. Like, for example, one thing that, like, I think a lot of people, if you want to

454
00:46:32,040 --> 00:46:37,080
implement quaternions, most people, even engine developers, probably just, like, copy some code,

455
00:46:37,080 --> 00:46:41,560
paste it into their engine and then call it a day, and now you have quaternion for rotations, right?

456
00:46:42,360 --> 00:46:47,080
But, one thing that I learned after, like, reading up on how they actually work is, like,

457
00:46:47,080 --> 00:46:51,320
you can learn all sorts of, like, tricks with them. So, for example, I had a use case of,

458
00:46:52,200 --> 00:46:56,040
I wanted to, like, interpolate and, I don't know which cordon system we should use,

459
00:46:56,040 --> 00:47:00,600
I wanted to interpolate an orientation along a spline, and then I wanted to add a feature of

460
00:47:00,680 --> 00:47:05,880
reversing that spline. So, this should turn 180 degrees in order to reverse that whole spline.

461
00:47:06,760 --> 00:47:12,760
And when I did the math for that, like, did you know that, like, reversing a quaternion

462
00:47:12,760 --> 00:47:19,480
is a swizzle? You just shuffle the components. Like, you can just, and in any of these three axes,

463
00:47:19,480 --> 00:47:25,080
or the world space axes, it's literally just shuffling the components. It's a free operation

464
00:47:25,080 --> 00:47:30,040
in terms of, like, computational power. You don't have to do a full, like, 180-degree angle axis

465
00:47:30,040 --> 00:47:34,840
multiplication, right? And stuff like that is, like, all of these little, like, mathematical

466
00:47:34,840 --> 00:47:40,200
tricks that kind of pop out. But if you don't really care that much about that, you don't have

467
00:47:40,200 --> 00:47:45,320
to learn all of this. It's just a useful framework to me, at least. And also, if you want to make

468
00:47:45,320 --> 00:47:51,560
a game in any other dimension than 2D or 3D, this is also very useful. Then you really need this.

469
00:47:54,040 --> 00:47:55,960
All right. Any other questions?

470
00:47:56,280 --> 00:48:05,480
People are really hungry. I'm sorry I kept you all this long. Oh, over there.

471
00:48:08,680 --> 00:48:15,000
You get a cube. Thank you. And does your math library support geometric algebra?

472
00:48:16,680 --> 00:48:22,680
So, yeah, I do have a math library on GitHub. I have some geometric algebra components. It's not,

473
00:48:22,760 --> 00:48:28,040
like, fully fleshed out. So, I've only been, like, adding things there as I need them. I haven't,

474
00:48:28,040 --> 00:48:32,840
like, made it into a library that has literally everything. But I do have a library on my GitHub

475
00:48:32,840 --> 00:48:40,600
with, like, there's a bi-vector 3 type there. And there's a, like, rotor 3 type, which is just a

476
00:48:40,600 --> 00:48:45,560
quaternion, right? But I do have that in my math library. So, if you do want to look into the code

477
00:48:45,560 --> 00:48:50,680
of, like, how this might look, my website is up there. These days, there are too many social

478
00:48:50,680 --> 00:48:55,160
media. So, just everything's there. Just go there. And then you can find all of the links to that.

479
00:48:55,800 --> 00:48:59,960
Thanks. Oh, actually, I don't think I have a link to my GitHub there. That's the only link I don't

480
00:48:59,960 --> 00:49:07,720
have on my website. You can probably find it if you Google, I think. All right. Any other questions?

481
00:49:08,360 --> 00:49:13,080
And also, you can, if you have other questions, like, later, you can just come up to me and talk

482
00:49:13,080 --> 00:49:17,880
to me. That makes me feel important and happy that I could provide value to all of you. So,

483
00:49:17,880 --> 00:49:24,200
please validate my feelings by talking to me later. Hi. I was just wondering, do you still plan to

484
00:49:25,480 --> 00:49:30,680
do, like, your tools on other engines, too? Like, on Unreal Engine, for example, your Spline

485
00:49:30,680 --> 00:49:35,480
upcoming tool? I've considered it, like, obviously, with all of the Unity disaster.

486
00:49:36,680 --> 00:49:41,000
I've considered it. Although I looked into Godot and I looked into Unreal, but they're just,

487
00:49:41,000 --> 00:49:46,120
they're very different tools. Like, Unreal is, like, it's a level designer and level artist tool

488
00:49:46,120 --> 00:49:52,120
that turned into a game engine. And Godot is, like, it's just engineers making an engine for

489
00:49:52,120 --> 00:49:58,280
engineers, and it's very engineer. And I feel it's not very artist-focused. And then any time I try to

490
00:49:58,280 --> 00:50:02,520
do something that I do in Unity of, like, making, like, quick editor scripts and just, like, have

491
00:50:02,520 --> 00:50:07,880
that really fast iteration, that is just destroyed in Unreal. And Godot, I think it's a bit more

492
00:50:07,880 --> 00:50:11,560
balanced because they have, like, a more, like, easy-to-use scripting language and whatnot.

493
00:50:12,520 --> 00:50:20,680
But I don't know. Like, if I, like, I make, like, 70% of my income is from selling plugins in Unity.

494
00:50:21,720 --> 00:50:25,720
And so, like, could I really support that in Godot, which is, like, very, like, open-source,

495
00:50:25,720 --> 00:50:30,280
free software-driven? And I'm, like, I don't know. I think that community is not, like, quite,

496
00:50:30,280 --> 00:50:35,160
like, big enough yet to, like, support something like the tools that I do. And so, like, if anything,

497
00:50:35,160 --> 00:50:40,840
I might, like, transition to doing, like, standalone tools, just separate EXEs that you open,

498
00:50:40,920 --> 00:50:46,120
rather than, like, tying it to any specific engine. Or I'm just going to go back to making games

499
00:50:46,120 --> 00:50:56,200
again. Because, yeah, I kind of want to do that. But, yeah. Yep. All right. I think we got a sign

500
00:50:56,200 --> 00:51:01,080
that we should cut. Yes. A stoic nod of, like, all right. Thank you all so much for coming.

501
00:51:01,080 --> 00:51:03,320
Or did you want to close out? Or... No, we're good. Oh, okay.

502
00:51:07,720 --> 00:51:09,880
All right. Thank you all. Time for lunch.

