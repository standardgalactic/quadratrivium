{"text": " So our first speaker for the afternoon session is Jacob Steinhardt. Jacob is a remarkable researcher who kind of combines like crazy creativity and technical know-how. And he's gotten me to think very differently about a lot of problems both technically and I guess societally. So I predict it will be a very interesting talk. Thank you, Sasha. So I decided that I wanted to talk about something new kind of in the spirit of the Simon's workshop. So these slides are actually prepared totally from scratch. No one has seen them before except me on my laptop. So hopefully it will be interesting. So the kind of overall motivation here is, you know, at least I really want to understand what, you know, these ML systems that we're deploying all over the world are doing, how they behave, what's going on under the hood. But I find this very challenging because there's so many new ones, you know, maybe like every month some new model is released and they get bigger and more capable and more complex. And so how kind of understanding of what these models are doing keep up, especially given that we often get kind of new capabilities or qualitative behaviors just kind of emerging every time we scale up. And so I think, you know, there's maybe more than one answer to this, but something that will be the focus of this talk is the idea that, well, if we can somehow use LLMs to understand LLMs, then maybe we're in better shape because then every time a new better LLM is released, well, there's a new thing to understand, but we've also gotten better at understanding things. So, you know, that's kind of the idea, can we get this virtuous cycle? And then, you know, hopefully as models get better, understanding will as well. So this is going to be based on work with actually a lot of different collaborators, but three that I wanted to highlight are my students, Rachie, Eric, and Colin, in particular, a lot of the kind of LLM as statistician perspective in this talk was developed by Rachie. So what do I mean by LLMs as statisticians? So what I want to argue is that many forms of understanding that we could care about essentially reduce to some sort of statistical or data science problem, right? So maybe we're given a model, we just see what it outputs on some huge number of inputs, right? We could easily do that by just taking all of the data sets we have and seeing what the model does. And then maybe we want to kind of identify patterns, right? Are there some things that the model is good at, some things it's bad at, cases where there's something surprising, and then, you know, you could try to formalize that as some statistical hypothesis and test it. So that's kind of a statistical problem. Maybe we want to understand the training set and understand, you know, what are the important sources of variation? You know, if it turns out that large fractions of the data set are in some weird language called base 64, maybe we want to know about that. And then you could also have kind of more active learning or active sampling problems where we want to, say, generate new inputs that elicit problematic behaviors so that we can identify and fix it, right? So I think of these all as on some level kind of statistics or data problems. And so if we can, in some sort of general sense, get large language models to do statistics, then they can help us tackle all of these problems, and of course, many other useful problems as well. So to do that, what would we need to do? So I'm going to kind of take a very high level view of, you know, what is, like, the pipeline of doing statistics? And I'd say it kind of has four steps. The first is we look at some initial data. Maybe we want to think of this as training data, but, you know, just some sort of data that kind of helps us get our bearings. From this data, we maybe want to form some hypothesis, you know, and maybe, like, the hypothesis that models do worse on long inputs than short inputs, right? And then formalize that quantitatively and then test this on new data. This data could just be, you know, a held out set from the same distribution. We might care about kind of, you know, generalization to new domains, or maybe if, maybe we want to even, like, actively collect data to really stress test our hypothesis. And so I'm going to go over a couple of case studies where we'll have problems that kind of follow this structure and will automate each step with LLMs. The kind of key difference from maybe traditional ways of looking at statistics is going to be in this hypothesis H. So a key difference is, you know, often H is, like, maybe expressed as some mathematical function, like, you know, patients with this future in a data set are more likely to get this disease. I can write this as, like, expectation of some feature function. But here, because we're working with language models, H is going to be a natural language string. And so this third step, which maybe is often almost trivial, it's just, like, taking the average of your feature over the data set, now actually becomes kind of non-trivial because we have to formalize what it means for, say, a natural language string to be true about a data set or not. So if that's kind of abstract, don't worry because we're going to go into some case studies very soon. In fact, right now. Okay. So the first case study I want to talk about is finding failures in a model called Clip. So for those who aren't familiar with it, Clip is an encoder model. So it takes in inputs and kind of embeds them as some feature vector. And it's kind of used as the backbone of many later models, right? So it's often useful to have good embeddings. So many models kind of use these embeddings and then do something with them. And the thing that is kind of special about Clip is that it embeds both images and text into a kind of shared space. So it was one of the most early multimodal models that kind of did this effectively. And as sort of shown here, lots of models use it. So mid-journey uses it as its kind of first embedding step. Dolly does, stable diffusion does, and lots of like 3D and video models do as well. And you can kind of get pretty amazing results using these embeddings. Often they're used to kind of do text to image generation. So you have some text description of what you want, and then these models kind of try to generate an image that matches this description in some way. So you can see here, these are maybe a little bit small, but this is an empty glass. And then you get this glass, a family of five members. And then you get this, a man descending a mountain. You get this. So these are all amazing, except for the problem that they're also all completely wrong. This is a full glass. This is a family of six members. This is somewhat us sending a mountain. This says there's no star in the night sky, and it shows the Milky Way. And so you get these amazing images, but you often get these kind of like very semantically obvious failures. So the kind of plot twist here, aside from the fact that here's a bunch of failures that we can find, is actually that we didn't find these failures, and LLM found these failures. So these are all automatically generated by actually not a single LLM, but a kind of pipeline of several LLMs working together on kind of complimentary tasks that played to their individual strengths. So we'll talk about how could we actually build a system that, just given Clip, could kind of automatically generate all of these failures at a large scale. So are there any questions so far before I go into the details of this? Yes? One quick question. Why do you say Dolly, new being, what does that mean in this context? I think different versions of Dolly, and one of them, I'm not totally sure of the details here, but I believe that Dolly was developed by OpenAI, but then Microsoft served some version of Dolly as part of their being product. And so this is that, which we use because we can actually query it kind of publicly. Yes? Are there any new type of errors that pop up from this process? For example, like the counting error or the direction error, those are already kind of known, right? So are there any new hypothesized forms in this process? Yes, that's a good question. So I'll get to kind of numbers later. We generated 14 categories of errors. We looked for papers that kind of described these errors. I think there were a handful that had already been described in the literature. The others were not in the literature. I would probably guess that someone whose day job was to play around with these models would be familiar with these errors. But the nice thing is even without spending lots and lots of time, you can do this. In fact, I think there were cases where reviewers asked us to add a new system to this pipeline and in a half hour we just got all of the new errors that that system had. So I think right now that's the advantage is that it's much quicker. I think as models become better, I'm hoping that we'll also get things that even an expert who spent lots and lots of time might not necessarily find. Yeah, great question. Any other questions? Okay, so how do we do this? So first maybe let me give a kind of overview of the key ideas here. So again, remember, Clip is a feature encoder that is encoding both text and images. So the kind of main key idea in terms of like where we get off the ground is there's going to be a sort of notion of what I'll call a hash collision in the encoder. And we'll come up with a sort of automated way of identifying lots of hash collisions in the encoder. So this is going to give us a lot of kind of like individual examples where if you have a collision, you don't know which of those two is wrong, but you know at least one of them has to be wrong. Then kind of given those failures, we're going to use LLMs to kind of categorize them into coherent patterns and test that those patterns are actually correct by generating new examples from those patterns and making sure that they actually in fact induce failures consistently both in the encoder and on downstream tasks and even kind of also generalizing to new domains that are kind of different from what we found these patterns on. So that's kind of the high level. Let me kind of step through these all one by one. So again, remember we had this statistical pipeline of get some data, generate a hypothesis, test it on new data. So let's just go through these one by one. So first let's just talk about where are we getting this initial data? What is this kind of hash collision idea? So to talk about this, I need to give you a little bit more background on Clip. So as I said before, Clip embeds either an image I or text T, but what is it actually designed to do or what was it sort of trained on? So it's actually trained on a bunch of pairs of images and their captions. And in general, the idea is that if there's text that describes an image, then that text in that image should have similar embeddings, ideally more similar embeddings to each other than to anything else. So the training process was basically you got a bunch of images, you got a bunch of captions, and then you want to make sure that under this embedding, the cosine similarity between an image and its caption is higher than between that image and any other captions. So you kind of want, if we form this matrix of dot products, you want the diagonal to be really big and everything else to be really small. And so the kind of point here is that if T is the description of I, they should have similar embeddings. Now how can I use this to find problems? Well, if T and T prime describe different images, but have the same embedding or have very similar embeddings, then at least one of them has to be wrong in some sense, right? Because they, you know, like whatever images these corresponded to, they kind of can't both be, they can't both be right. Ah, yes, Aliosha. That's the subjection between images and text, and we know that, you know, pictures weren't a thousand words. Right, so the examples I have in mind would be something like an empty cup and a full cup. And if those, like if those sentences had the same embedding. But those are, that's, that's a very small subset of all the, like there is a lot of synonyms, right, visual synonyms. That's right. So you have to worry about visual synonyms. So we need, we need some way of measuring kind of semantic difference that hopefully implies that things are actually visually different. So I'll get to that on the next slide. Other questions though? So one thing here also is the nice thing is that I can do this only looking at text, right? I mean, I have to use the clip encoder, but I'm only encoding text. And why do I want to only look at text? Well, basically, because language models work really well and image models don't. Sorry, Aliyosha. But you know, according to Aliyosha, image models will work really well soon. Even better. But right now, right now, we want to stick with language. So, so what do we do? We're going to collect some initial corpus of text inputs, and we want these inputs to be inputs that have some visual significance. So we'll often take them from some, say, captioning data set or other kind of data set that has visual descriptions. And then we're going to embed them all under clip. And we're also going to embed them under another model called Distill Roberta, which is a very good text model, especially for embeddings. So it's a text-only model. And it also has a higher-dimensional embedding space than clip. And so for both of these reasons, it's kind of, you know, has a better understanding of text than clip does, because it gets to only focus on text and it has more parameters. And so the basic idea is, you know, so we have all these clip embeddings. And if there's two inputs that are very close in clip space, but actually have low Roberta similarity, right? So that means they're kind of different, like Roberta thinks that they're semantically different sentences, but clip says they're the same, then we're going to say, OK, that's a hash collision, probably something is wrong there. Now, I agree with you that we also want to check that these really are semantically different in a way that matters visually. Empirically, it turns out that that's the case about 90% of the time. So this is kind of good enough, and this is something we kind of verified with human subject studies. Jacob, how do you find these things? Because aren't the clip vectors like 2048 dimensional or something? Yeah, so we're just taking the cosine similarity. So this is like, this is an n squared algorithm. Oh, yeah, but OK, but I mean, if we imagine that you were just looking for collisions in this 2048 dimensional space, we would say a priori that could take astronomical time. You're saying like in practice, it takes much less time because, you know, there's something about these text inputs that makes the collisions likelier. So yeah, a couple of things. I guess first we don't need exact collisions. If the cosine similarity is large enough, I guess empirically, if it's larger than 0.88, it turns out that it's pretty likely to create a problem. So you don't need them to be exactly the same. That kind of helped you somewhat. And yeah, so somehow this... But I mean, two unit vectors having an inner product of 0.88 in a 2048 dimensional space, we might as well call that a collision, right, at that point. But he's assuming n squared time for u n with the exponential, right? So, okay, right. So Scott's claiming we would need an exponential large data set, but this is not... Yeah, yeah, yeah, but okay, but it happens that... So basically the reason why there are collisions is not... has nothing to do with like the pigeonhole principle with the space, right? It's just that, you know, the way that it's something special about this mapping that causes there to be collisions, even though a priori there could have been no collisions. Yeah, that's right. Okay, and if you care, couldn't you do it much faster by using the same kind of h and s, w in the cities with all of the embeddings? Yeah, you could do this much faster than n squared. It just turned out that this is not the bottleneck, like the bottleneck is running the forward passes of all the models and kind of looping over a bunch of pairs of, you know, thousand dimensional vectors is pretty cheap compared to running an LLM. Yeah, so we tried two different corpora. One is Cocoa and the other is, what's the other one, SNLI, yeah. These are both kind of text data sets that have visual significance. And yeah, I mean, basically the point is that there's enough, yeah, there's enough structure in text that you actually do get collisions. I don't care about the n squared. Okay, okay, got it, got it. Okay, so this is the first step, right? This is going to give us a bunch of pairs where we kind of know that like one of the two things in the pair is wrong. And so now we want to do something with that. So this is kind of the next stage is we want to generate some hypotheses based on these pairs, right? So this is where we're going to use the fact that we have text and not images, right? So the individual pair fillers are text inputs, they can feed them to GPT4. And so, you know, here's the magical prompt, it says I'll provide a series of data for you to remember. Subsequently, I'll ask you some questions to test your performance. Here's some pairs of prompts to memorize, and then you give it all of, well, you give it as many of these failures as you can fit in the context window. And then you tell it, hey, I'm trying to find failures as an embedding model. These are pairs of sentences that are encoded very similarly using the specific examples. Are there any general types of failures you notice the embedding is making? And then, you know, you kind of give it some more context and you'd say, okay, what does it generate, right? So you're basically saying, here's some data, please look at it, please tell me some patterns. And so then it, you know, it does a pretty good job of coming up with things. It says, okay, there's negation, temporal differences, quantifiers, and the nice thing is actually it doesn't just say negation, but it gives a bunch of elaborations. So it says embedding models may not correctly capture the negative context in a sentence leading to similarities between sentences with and without negation. This can result in incorrect visual representations if the presence or absence of an action is significant in video generation. And it kind of keeps going. And you get, I guess in this case, you get kind of 14 distinct failures in total on this list. And the other thing is empirically, GPD4 just kind of always uses this consistent list format so you can automatically just parse out the individual hypotheses. Yeah, Lisa. Have you tried just like asking GPT without these like inputs, like what are common failure cases of image embedding models or something? Yes. So that's a baseline that I will show results on later. And yeah, it works a lot less well. So this kind of gives us hypotheses. So this was step two. But now we're running into this problem of, OK, usually in statistics a hypothesis is like actually some mathematical function, but here these are just sentences. So now we need to formalize this hypothesis. So we have this list of hypotheses, h1 through hk, that are all natural language descriptions. So how can we test if one of these hypotheses is actually any good? So I think this is a pretty interesting conceptual question to think about. So maybe I'll pose it to the audience if anyone has ideas for how we could formalize this. Hi, Chris. Good afternoon. Two or more about pairs as to whether they match this hypothesis and then see if the images are wrong. OK. In this analysis of DPT4, if you have access. Good. Yes. So that is Yan Yi. I mean, if we think about research hypothesis, there are a few dimensions that you can use to categorize whether some say it's a hypothesis. So for example, it should be testable, right? There should be a clear scope. There are a few dimensions I think that you can come up with based on experts. Right. So you can kind of ask experts or DPT4 if it had those properties. So it turns out we're going to do something pretty similar to what Chris said, although we're going to look at generation rather than classification. So we're going to say H is a good hypothesis if when you hand that description to some intelligent agent, in this case not humans, because humans are expensive, but DPT4, they do a better job of generating new failures than they would otherwise. So this is the way we're going to quantify this. So we'll say H is a good hypothesis if it can be used to generate new failures better than some just baseline method of generating failures. And this is where we're going to get to your question, Lisa. So we can either hand DPT4 these hypotheses or we could just ask DPT4 to brainstorm without any data ways in which vision models might be bad and kind of test those against each other and see which one does better. So we're going to test this by prompting an LLM with H as a context. And so again, what is the magical prompt? The magical prompt is to say write down 41 pairs of prompts that an embedding model with the following failure mode might encode similarly, even though they would correspond to different images if used as captions. Use the following format so you give it kind of a format so that we can extract things programmatically. And then we say some other stuff to motivate it, saying that it will be evaluated based on how well it performs. And then you give the failure mode and as kind of the description that we extracted before. Y41, that's the length, basically the length of the output context window that can be fit. So if you want more than 41, you just have to ask it a couple of times. So this is what we did. Yeah, Nicholas. How much does this be creative and cautious and these kinds of things like actually help? Or is this just like black magic that you sort of sprinkle on top? We didn't do careful ablations on the prompt. I think, yeah, we added a bunch of stuff until it worked. I don't think we tried removing things to see what was actually necessary. So it seems totally like I would guess that if you tried to distill this to its bare essentials, you could get something simpler. But we didn't try to do that. But yeah, great question. OK, so then we want to quantify by measuring the success rate. So we get all these pairs of prompts that are supposedly supposed to be new failures. So we can do this in two ways. We can look at the fraction of things generated that are hash collisions in the same sense as before. So that's kind of an easy thing to do. At some point, we want to make sure that the system is actually doing something and that the something doesn't involve trusting that LLMs are good at their job. So we also do a human evaluation where we look at downstream systems that rely on clip and ask humans if there's a failure to make sure that these actually are failures and not just happen to have high cosine similarity. So those are the two things we do. So let's kind of go over the results. So first, just kind of looking at hash collisions, but testing on these new inputs that were generated. So we say an input has a success if these similarities are above some threshold. And what is this table saying? So these rows are kind of the different failures generated by the system. And actually, we considered six different systems. So you can ask different models to look at the data and propose hypotheses. So these are different kind of proposal models, GPT-4-Claude or GPT-3.5. And then you can also vary the data set that you used to actually get these failures out. So these are the two data sets that people asked about before, COCO and SNLI. So I guess a couple interesting things. One is that, oh, and a check mark means that the model generated the failure at all in its list. And then the color is kind of the success rate of generating new inputs conditional on that failure description. So a couple interesting things. First of all, the data set seems to actually matter. So kind of for both GPT-4 and Claude, action, well, OK, maybe let's pick a more intuitive one. OK, so for both GPT-4 and Claude and GPT-3.5, SNLI elicits granularity as a failure, whereas COCO never does. And sometimes it's kind of not quite so systematic. But in general, it sort of seems like these data sets actually do kind of like elicit different failures. So there is at least some dependence on the data, which is somewhat reassuring. The other thing is maybe as expected, GPT-4 and Claude in general find many more failures than GPT-3.5 does. So these better models actually generate more distinct hypotheses. And then a final thing that is interesting is actually even for the same failure, bigger models often are giving you higher success rates. So you can see this in a couple places like for granularity. The description of the granularity failure that GPT-4 generated was apparently better in terms of if you then hand that back to GPT-4, it more successfully generates novel failure instances compared to the kind of description that GPT-3.5 gave. In all of these cases, we're fixing GPT-4 as kind of the thing that's generating new failures. So there's no effect from that. So this kind of difference is just coming from the actual text description output by them all. So are there any questions about this data? What more is left about when GPT-4 does better than GPT-3.5, is it because it better understood the instruction versus maybe GPT-3.5 also understood the description, but somehow the examples were very just curious what sort of qualitative differences are there between different models. So I haven't thought about this a ton. I think my two main hypotheses here would be, I believe GPT-4 has a larger context window so it can see more examples, which might be useful. But I think probably the more important thing is actually just that the task of proposing hypotheses from a data set is actually a pretty challenging task. And so even kind of frontier models are not that good at it. So then once you drop down from GPT-4 to GPT-3.5, you're kind of losing, probably just losing too much capability for it to be super consistent. That would be my hypothesis. I don't know. Yeah, Richie. Yeah, so in practice, we found that GPT-3.5 doesn't really condition on the data very well, while GPT-4 actually does condition on the data. And then describe the same thing that they do. Yes? If I have the samples that the model generated actually fall into those categories, so maybe they overlap with some other categories. So I don't think we did a systematic evaluation of whether all of the examples fall into those categories. Yeah, I can give some orders on the next slide that get at least implicitly at that. It looked like maybe someone else had a question. OK, so maybe let's go to the human evaluation, which will at least partially answer your question. So we wanted to not just stick with saying that you actually get these hash collisions, but show that these actually lead to images that humans say are wrong. So, OK, darn, the text here is a little bit small, but this is kind of the human annotator interface that we gave. So we had prompt one, a city skyline with a bridge, prompt two, a city skyline without a bridge. So this is this kind of collision pair. This is an image that came from one of these two prompts chosen at random. And so the annotator has to say either that this corresponds to prompt one, it corresponds to prompt two, it corresponds to neither of them, or these prompts are described visually identical situations. So this kind of gets at your earlier question, Alyosha, on whether these are actually semantically different. And so we're kind of measuring what counts as a successful failure, either if the annotator says that it's wrong, or if they say it's prompt two, but it was actually generated by prompt one, or vice versa. And so then you can look at the kind of rate at which mistakes are made conditional on different levels of clip similarity in the two prompts. So this is kind of testing that high similarity actually leads to failures. And you can kind of see there's this like inflection point at like 0.88. So this is kind of one verifying that actually we do get pretty high rates of failure, and two that this magical threshold I told you about earlier is actually kind of reasonable threshold. And then finally, to get at this question of whether these descriptions are actually doing anything. So I guess this doesn't test whether the failures correspond to the descriptions, but it tests that the descriptions are actually needed to get high failure rates. If you have a baseline system where you just ask it to like brainstorm possible failures images might have, and then condition on those, you only get about 20% failure rate, whereas you get an 80% failure rate if you use this data conditioned system. So these are the human evaluated rather than model evaluated equals. So are there questions about this? This is a talk where high failure rate is better. Yes, yeah, you want high failure because we're trying to find failures so that we can fix them. Okay, and then I guess a final cool thing is, you know, a kind of really big bonus of having this come from language models is language models are kind of automatically steerable. Right, so I have this way of generating failures, but I can then just ask the model to give me failures that are relevant to some new domain. And so in this case, we kind of asked it to generate failures that are relevant to self-driving. The data sets are still cocoa and SNLI so we didn't give it data that would specialize to self-driving, but it can still kind of generate these failures in this novel domain and still have a good success rate. And so these are just kind of examples. Stable diffusion, you have the cars on the right side of the lane, but it's on the left side. This is not a green light, gives you a green light. A yield sign gives you something that is at least not shaped like a yield sign, probably a stop sign. And then a car stops for a red light. This is actually a text to video model and the light is green. What data from cocoa and SNLI are you passing in? No, no, so you're passing in the text from... So this is for the very first stage where you're giving it a bunch of just text inputs and embedding them to check for hash collisions. So those hash collisions were from embedding text sentences from cocoa and SNLI. So there's actually no images anywhere here except in the output of the systems. I'm kind of curious about the hypothesis part of this and whether that's kind of necessary. So we had a paper a couple years ago and just tried finding these collisions. And I kind of wonder if you could just give it a sentence and like search for a collision and just cut out the language model. What is it adding in the process? Well, finding the initial... Oh, I see. So I think one thing is this steerability I think would be challenging in some cases if you were doing that because you would need a large data set of text in whatever new domain you were looking at. We don't need a bunch of sentences about self-driving cars to do this, but if you were looking for collisions manually, then you would have to do that. I see. Yeah, cool. Okay, so to summarize this, right, we had these four stages of, you know, first we want to get initial data, which we did by scraping hash collisions from this text data set. This kind of invoked these two models clipped into still Roberta. Then we generate hypotheses by prompting GPT-4. Then we kind of formalize these hypotheses by looking at the success rate of generating new failures. So we use GPT-4 to generate the failures and clip to evaluate them. And then we can also do this active steering, again, prompting GPT-4. So I think one thing I want to highlight here is that, you know, often we think about just having this one language model and we just come up with our super clever prompt that solves everything and maybe do chain of thoughts. And this sort of thing. But I think you can actually get a lot further if you're willing to kind of use this kind of, you know, ecosystem of models together in creative ways. And I think statistics is a particularly kind of good use case for this because there are these different stages of the pipeline that require kind of different skills. And statistics also has some nice properties, right? Like many parts of it are kind of automatically measurable and verifiable. And so you get a lot of the same strengths as Adam was talking about yesterday with computer programming where, you know, you can... We haven't done much of this, but like you can, you know, maybe do this self-training. And maybe if you get models that were really, really, really good at statistics, like superhuman at statistics, because there's so much automatically-generatable data. Okay. So that was the first case study. Let me go over the second one. We'll go a bit more quickly now that we've kind of built up a lot of these conceptual ideas. So here I'm actually going to talk about a kind of meta task that is then going to be useful for lots of individual ways in which we would want to understand language models. So this meta task is classifying with natural language predicates. So the task here is we're going to be given two text data sets, D1 and D2. We want to find out what's different between them. And this difference, again, should be some natural language string H. And so we can kind of think about this as isomorphic to binary classification, right? We're kind of trying to classify between D1 and D2, but where the function is described in natural language. So let me just give you an example of what this task might look like, right? So maybe these are my two data sets, D1 and D2. We want to come up with a natural language description of how they're different. So can anyone figure this one out? Okay, yes. So the left is French and the right is English. So our H would be D1 contains more French sentences compared to D2. Okay, so here's a harder example. Maybe partly hard due to text size. So I claim that even if you looked at this for a while, it would be hard to tell what the difference was. And in fact, the difference is that sentences in D1 contain at least two female characters in them, whereas sentences in D2 do not. This is actually pretty challenging because there's things like she carried a total of eight torpedoes where she refers to a ship, which is not in fact a female character. And you also have to know that Professor McKeown is female. And so there's kind of a lot of world knowledge and kind of non-trivial stuff in solving a problem like this. So I guess that's the kind of meta task. Why should we care about this? So first, I'll give you three use cases that would help us better understand LLMs. So we could want to understand distribution shift. So especially if a model is doing poorly out of distribution, maybe we want to diagnose what's different. And so we might find out that the test distribution involves more formal writing than the training distribution. And that might help us diagnose failures or tell us what we should fine tune on. The positive class contains more URLs than the negative class. If this were a spam classification data set, this would tell us that there was this potential spurious queue. That maybe the model just looks at the presence or absence of URLs and we should make sure that that's not just what it's doing. We could do error analysis. I could give you two models and I could look at the difference between inputs where one of them versus the other one makes mistakes. And then we could also go beyond just trying to understand LLMs. You know, you could start trying to do, you know, for like say like social science, right? I look at a bunch of tweets from one year versus another year and it turns out and say, okay, public opinion from this year is more optimistic about the pandemic than last year, right? We can kind of generate at least descriptive hypotheses like this. Of course, you would then want to carefully do all of the causal inference and other stuff to validate these, but this at least can generate hypotheses for you. Okay, so how will we do this? Well, yes, D. So, if you go back to the examples you have, it feels like the hypothesized space is huge, right? So there seems to be a recall precision issue here, and it seems your ground truth only has some of them. Like for them, the very easy example, my hypothesis could be there is no relation between those two sentences. I mean, you have like, it has more French versus the second sentence. The space seems huge. How do you locate it to the final ones we want? So we're not going to have ground truth in most cases. There are a couple of cases where we did create a ground truth so that we could kind of test in the traditional setting with kind of gold labels, but we're going to kind of take a similar perspective to how you'd evaluate any other classifier, right? So we're going to come up with a way to quantify these in terms of some classification error rate, and then we'll say that one hypothesis is better than another if it has a lower error rate in distinguishing D1 and D2. And so rather than having a fixed ground truth, we can just talk about which systems are better or worse, and maybe we could also say compare to humans to get some like overall benchmark. Some of the hypothesis might be very true, and others may be more usable, right? Okay, right. So there's, right, so you might also want to evaluate if there's some like goal, you might want to evaluate like relevance to the goal and some notion of novelty. These become, start to become subjective. So we have done some of this where we get human ratings of novelty and relevance. Reviewers didn't like it actually because it's too hard to define novelty, but anyways, like you can do this and like I think, but I do agree it's kind of a tricky problem. So just building on these questions, are you constraining some complexity of your hypothesis? Are you looking for short hypotheses? So we'll implicitly have short hypotheses here, although that kind of just comes from the fact that these are going to be generated by an LLM, and LLMs will only output things that are so long. But yeah, we like, for usability reasons, you would want this to be kind of short and interpretable. So yeah, how are we going to do this? We're basically just going to use LLMs somewhat similar to before, right? So I won't give you the full magical prompt that Rachel came up with, but just kind of schematically, give it a bunch of examples from the first distribution and label them as A, a bunch from the second label them as B. And then we say, you know, compared to group B, each sentence from group A, and then we ask it to complete it. This was done at a point where we were using GBD3. So we needed it to be in this completion format. Once you have instruction tuned models, there's maybe nicer prompts you can have. But this is kind of the basic idea. And then you sample this a bunch of times with different, you know, sub-samples of the data, right? So keep in mind that we can only fit maybe like 30 or so examples into the context window. So we have a data set with thousands of examples is like a very tiny fraction. So we kind of keep sub-sampling to generate different hypotheses. And then, you know, you'll get things like is more positive, contains the word chapter, is longer. Some of them actually kind of have, yeah, some of them end up being kind of trivial. So you might want ways of filtering them out. But you kind of get this set of candidate hypotheses. So this is kind of telling us how we do the first two steps of this statistics pipeline, right? We look at this initial data. We prompt GPTN for some N with examples from D1 and D2. And then we ask how they're different in this form of the hypothesis. But now we need to somehow formalize each quantitatively and test it on new data. So I guess, again, maybe I'll pose the question, you know, how could we formalize this each quantitatively? How could we sort of say quantitatively how good is it? Sorry, what do you say first? Okay, good. So we can say, you know, good hypothesis is something that helps tell D1 and D2 apart. So we'll, you know, take a sample from D1, a sample from D2, mix them up randomly so you don't know which is which. Tell either a human or an LLM the hypothesis and ask them to say which is which. So, you know, as an example, say H is involves more formal writing, we can interpret this as basically a two argument predicate, right? So if I have sentences X1 and X2, H of X1, X2 is some binary predicate that is the truth value of, you know, the utterance X1 involves more formal writing than X2. And so this should be true or false. And so then we just ask a human or a language model if it's true or false. And so then we'll say H is a correct hypothesis about D1 versus D2 if in expectation over samples X1 from D1 and X2 from D2, this is much less than 0.5, right? So 0.5 would be chance if this is sort of the, like some measure of the classification error, if it's much less than 0.5, then we've, we figured out something non-trivial about D1 and D2. And so yeah, how to implement this, I guess you could ask humans or you could just query an LLM. And so what does this look like, right? So just to illustrate this, if H is samples from D1 or more positive than those from D2, we, you know, we give, in this case, Charlie Snell, who was an undergrad at Berkeley at the time and is now a PhD student at Berkeley, this paper proposes an impactful task or the approach of this paper is too trivial, and ask him which of these it's true about, and then he says something, and then, you know, maybe Charlie's time is pretty valuable, so you can hire crowd workers to do this instead. But the problem is, you know, even if we just wanted to average over, say, like 100 samples from this distribution to get some notion of accuracy, this would cost $10 per text description, and this is very expensive. You don't want to do this. And so the nice thing is LLMs kind of reduce the cost of this pipeline by about a factor of 1000. You can do this 100 samples for only seven cents with GP3.5 turbo. And so then this gives you a kind of automatic, quantifiable measure of how successful this hypothesis is. And the nice thing is also that it's somewhat more reproducible than humans, like you don't have to worry about getting back the same human label errors again, because, you know, the model, well, the model's not actually fixed, open AI keeps updating it, that's kind of annoying. But if they were to serve a stable version of the model, then this would be reproducible. Right, so now we've kind of gotten this whole pipeline, right, so the overall system as we have this proposal, which at the time we initially wrote this paper was a fine tune to GP3 that generates these candidate hypotheses. Then we have a verifier that kind of, you know, does this check on each of the hypotheses. And at the time it was fine tune unified QA. Now you can kind of replace with newer models. And then you kind of, you know, re rank the hypotheses based on their actual success rate at this classification task. And, you know, why is this decomposition useful. Well, from an engineering perspective, and I think this is actually very important. The proposer only sees 30 examples, because that's length of its context window. So it's in that sense fairly limited, even though it's this very smart, like GPT three or four system, whereas the verifier can see thousands of examples and so you can get much better tests of statistical significance. How am I doing on time. I think we have about five minutes left. Okay, cool. So maybe I'll just say, you know, you can use this for a bunch of things. So for describing distribution shifts. There's these two data sets MNLI and SNLI where SNLI is often used as like an OD version of MNLI. Here's four samples to which are from SNLI and to which are from MNLI. It's not immediately obvious what distinguishes them. But if I say that SNLI describes a picture, then it's very clear that the green ones are SNLI because it says the church choir sings to the masses and old man with the packages poses in front of an advertisement. And the other two are not about pictures. So you kind of immediately see what the distribution shift is here. There's two paraphrase data sets, Twitter, PPTV and QQP, which stands for core question pairs. It says Twitter talks about a news story and core contains a question. These are just kind of sanity checks like these would be kind of totally obvious to anyone who was familiar with these data sets. But you can do more interesting things. So this was one that I think to our knowledge was novel at the time we discovered it detecting spurious cues in a data set. So we handed it this data set called SUBJ, which is a data set for subjectivity analysis. And it said the objective class was a plot summary of a film. The subjective class is a quote from a film review, which seems like it should be wrong for a data set that's about subjectivity analysis. But if you actually go back and read the paper, it says, to gather subjective sentences, we collected 5000 movie reviews snippets from Rotten Tomatoes to obtain mostly objective data. We took 5000 sentences from plot summaries available from IMDB. So actually, if you did well in this data set, you were basically learning this rather than stuff about subjectivity. There's like other shortcuts we found somewhere new somewhere old, but you can sort of find all these various cues. You can use this for error analysis and so on. So maybe just to summarize, right, we have these four steps of this pipeline. Initial data was just the two text distributions, generate the hypothesis by prompting GPT-3, formalize the hypothesis by measuring the success rate, and then you kind of test on new held out samples. The final thing I'll just leave up is we have ongoing work that is kind of taking this far beyond classification to just sort of like generally using natural language predicates as features in statistical models. So this example here is trying to describe temporal drift in news headlines from the Australian Broadcasting Company, and it kind of identifies these five features that kind of vary. And you could think of as maybe the top five principal components explain the variation in this data set. Although the percent of variance explained is actually still pretty low here. So I think you should think of this as just like a initial result. So maybe I'll end there and take questions. So for the proposal, there can be just like do prompt optimization like overtime, you keep selecting like an example and then see where it fails and then show it again. And then after a while you have like this good hypothesis and that you can somehow guarantee that is correct in a set of checking things. So you could. So is the idea like basically like fine tune the proposal to get better and better? Yeah, fine tune the prompt. You do that prompt optimization. Oh, prompt optimization. So I think so my general sense is if you just use the proposal, I mean, we didn't try to do like the full prompt optimization, but we do do ablations of like just using the proposal and that generally does a lot worse. I think that there's a couple issues. What one is just that the proposal gets much less data than the verifier. So, you know, even like if you do prompt optimization. Oh, no, what's your I thought that your proposal like get like a few number of data. That's why you should do the checking. Yes. And then I was just saying that can you make the proposal more strong by just to prompt. I see everything and then you can guarantee that these hypothesis is correct. Yeah, so that's that's an interesting idea. So you're basically saying, okay, like do prompt optimization to find a prompt that gets this feel like we discussed this. What was your claim is that you don't get semantically. The point that you do gradient is gradient is that you find the prompts and you are you very easily get like a readable prompt that is not natural. I would stream because what you typically find with adversarial examples. They are relatively possible. Yeah. So I think the issue is at least right now. If you do this, it's hard to get kind of like natural language out right now. Right now you asked you for to give the gradients but Thank you for this amazing talk. The quick question maybe this is not so you're asking you're asking for hypotheses that separate the two data set. And when you were testing them, they were like, okay, let me pick two examples and say one is more positive than the other. But could you tweak this to possibly look for hypotheses that certainly answer yes in one case and no in the other case that you don't have to look at two comparative examples. Like, okay, this one talks of a female character. The other one talks of a male character. So what would be just so I can understand like what would be an example. So as an example, the second data, the second example you showed was that this statement talks of two female characters. That's a statement you can answer in yes or no without looking at two different samples from the two data sets. Yeah. So could you tweak this to possibly just look for hypotheses that could be answered on a single data point rather than a comparison between data points from different data sets. Yeah, so we actually, I think, worked with both versions of the system, one that is kind of unary predicates and one that's binary predicates. I think in practice, a lot of the interesting things you want out are kind of binary predicates. So you can get like you can get somewhere with this unary thing, but you're kind of losing something if you don't consider comparatives. Okay, let's thank the speaker.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 14.32, "text": " So our first speaker for the afternoon session is Jacob Steinhardt.", "tokens": [50364, 407, 527, 700, 8145, 337, 264, 6499, 5481, 307, 14117, 3592, 10085, 515, 83, 13, 51080], "temperature": 0.0, "avg_logprob": -0.24993036754095732, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.04390469938516617}, {"id": 1, "seek": 0, "start": 14.32, "end": 21.400000000000002, "text": " Jacob is a remarkable researcher who kind of combines like crazy creativity and technical", "tokens": [51080, 14117, 307, 257, 12802, 21751, 567, 733, 295, 29520, 411, 3219, 12915, 293, 6191, 51434], "temperature": 0.0, "avg_logprob": -0.24993036754095732, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.04390469938516617}, {"id": 2, "seek": 0, "start": 21.400000000000002, "end": 22.400000000000002, "text": " know-how.", "tokens": [51434, 458, 12, 4286, 13, 51484], "temperature": 0.0, "avg_logprob": -0.24993036754095732, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.04390469938516617}, {"id": 3, "seek": 0, "start": 22.400000000000002, "end": 26.3, "text": " And he's gotten me to think very differently about a lot of problems both technically", "tokens": [51484, 400, 415, 311, 5768, 385, 281, 519, 588, 7614, 466, 257, 688, 295, 2740, 1293, 12120, 51679], "temperature": 0.0, "avg_logprob": -0.24993036754095732, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.04390469938516617}, {"id": 4, "seek": 0, "start": 26.3, "end": 29.2, "text": " and I guess societally.", "tokens": [51679, 293, 286, 2041, 14051, 379, 13, 51824], "temperature": 0.0, "avg_logprob": -0.24993036754095732, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.04390469938516617}, {"id": 5, "seek": 2920, "start": 29.2, "end": 36.2, "text": " So I predict it will be a very interesting talk.", "tokens": [50364, 407, 286, 6069, 309, 486, 312, 257, 588, 1880, 751, 13, 50714], "temperature": 0.0, "avg_logprob": -0.25093515235257435, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.002627256792038679}, {"id": 6, "seek": 2920, "start": 36.2, "end": 37.76, "text": " Thank you, Sasha.", "tokens": [50714, 1044, 291, 11, 29276, 13, 50792], "temperature": 0.0, "avg_logprob": -0.25093515235257435, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.002627256792038679}, {"id": 7, "seek": 2920, "start": 37.76, "end": 45.32, "text": " So I decided that I wanted to talk about something new kind of in the spirit of the Simon's", "tokens": [50792, 407, 286, 3047, 300, 286, 1415, 281, 751, 466, 746, 777, 733, 295, 294, 264, 3797, 295, 264, 13193, 311, 51170], "temperature": 0.0, "avg_logprob": -0.25093515235257435, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.002627256792038679}, {"id": 8, "seek": 2920, "start": 45.32, "end": 46.32, "text": " workshop.", "tokens": [51170, 13541, 13, 51220], "temperature": 0.0, "avg_logprob": -0.25093515235257435, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.002627256792038679}, {"id": 9, "seek": 2920, "start": 46.32, "end": 49.120000000000005, "text": " So these slides are actually prepared totally from scratch.", "tokens": [51220, 407, 613, 9788, 366, 767, 4927, 3879, 490, 8459, 13, 51360], "temperature": 0.0, "avg_logprob": -0.25093515235257435, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.002627256792038679}, {"id": 10, "seek": 2920, "start": 49.120000000000005, "end": 52.9, "text": " No one has seen them before except me on my laptop.", "tokens": [51360, 883, 472, 575, 1612, 552, 949, 3993, 385, 322, 452, 10732, 13, 51549], "temperature": 0.0, "avg_logprob": -0.25093515235257435, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.002627256792038679}, {"id": 11, "seek": 2920, "start": 52.9, "end": 55.239999999999995, "text": " So hopefully it will be interesting.", "tokens": [51549, 407, 4696, 309, 486, 312, 1880, 13, 51666], "temperature": 0.0, "avg_logprob": -0.25093515235257435, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.002627256792038679}, {"id": 12, "seek": 5524, "start": 55.24, "end": 61.72, "text": " So the kind of overall motivation here is, you know, at least I really want to understand", "tokens": [50364, 407, 264, 733, 295, 4787, 12335, 510, 307, 11, 291, 458, 11, 412, 1935, 286, 534, 528, 281, 1223, 50688], "temperature": 0.0, "avg_logprob": -0.13537562977183948, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.008574538864195347}, {"id": 13, "seek": 5524, "start": 61.72, "end": 67.48, "text": " what, you know, these ML systems that we're deploying all over the world are doing, how", "tokens": [50688, 437, 11, 291, 458, 11, 613, 21601, 3652, 300, 321, 434, 34198, 439, 670, 264, 1002, 366, 884, 11, 577, 50976], "temperature": 0.0, "avg_logprob": -0.13537562977183948, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.008574538864195347}, {"id": 14, "seek": 5524, "start": 67.48, "end": 71.48, "text": " they behave, what's going on under the hood.", "tokens": [50976, 436, 15158, 11, 437, 311, 516, 322, 833, 264, 13376, 13, 51176], "temperature": 0.0, "avg_logprob": -0.13537562977183948, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.008574538864195347}, {"id": 15, "seek": 5524, "start": 71.48, "end": 75.96000000000001, "text": " But I find this very challenging because there's so many new ones, you know, maybe like every", "tokens": [51176, 583, 286, 915, 341, 588, 7595, 570, 456, 311, 370, 867, 777, 2306, 11, 291, 458, 11, 1310, 411, 633, 51400], "temperature": 0.0, "avg_logprob": -0.13537562977183948, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.008574538864195347}, {"id": 16, "seek": 5524, "start": 75.96000000000001, "end": 81.88, "text": " month some new model is released and they get bigger and more capable and more complex.", "tokens": [51400, 1618, 512, 777, 2316, 307, 4736, 293, 436, 483, 3801, 293, 544, 8189, 293, 544, 3997, 13, 51696], "temperature": 0.0, "avg_logprob": -0.13537562977183948, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.008574538864195347}, {"id": 17, "seek": 8188, "start": 81.88, "end": 86.96, "text": " And so how kind of understanding of what these models are doing keep up, especially given", "tokens": [50364, 400, 370, 577, 733, 295, 3701, 295, 437, 613, 5245, 366, 884, 1066, 493, 11, 2318, 2212, 50618], "temperature": 0.0, "avg_logprob": -0.12491510269489695, "compression_ratio": 1.5708333333333333, "no_speech_prob": 0.002182499971240759}, {"id": 18, "seek": 8188, "start": 86.96, "end": 92.24, "text": " that we often get kind of new capabilities or qualitative behaviors just kind of emerging", "tokens": [50618, 300, 321, 2049, 483, 733, 295, 777, 10862, 420, 31312, 15501, 445, 733, 295, 14989, 50882], "temperature": 0.0, "avg_logprob": -0.12491510269489695, "compression_ratio": 1.5708333333333333, "no_speech_prob": 0.002182499971240759}, {"id": 19, "seek": 8188, "start": 92.24, "end": 94.11999999999999, "text": " every time we scale up.", "tokens": [50882, 633, 565, 321, 4373, 493, 13, 50976], "temperature": 0.0, "avg_logprob": -0.12491510269489695, "compression_ratio": 1.5708333333333333, "no_speech_prob": 0.002182499971240759}, {"id": 20, "seek": 8188, "start": 94.11999999999999, "end": 102.19999999999999, "text": " And so I think, you know, there's maybe more than one answer to this, but something that", "tokens": [50976, 400, 370, 286, 519, 11, 291, 458, 11, 456, 311, 1310, 544, 813, 472, 1867, 281, 341, 11, 457, 746, 300, 51380], "temperature": 0.0, "avg_logprob": -0.12491510269489695, "compression_ratio": 1.5708333333333333, "no_speech_prob": 0.002182499971240759}, {"id": 21, "seek": 8188, "start": 102.19999999999999, "end": 108.32, "text": " will be the focus of this talk is the idea that, well, if we can somehow use LLMs to", "tokens": [51380, 486, 312, 264, 1879, 295, 341, 751, 307, 264, 1558, 300, 11, 731, 11, 498, 321, 393, 6063, 764, 441, 43, 26386, 281, 51686], "temperature": 0.0, "avg_logprob": -0.12491510269489695, "compression_ratio": 1.5708333333333333, "no_speech_prob": 0.002182499971240759}, {"id": 22, "seek": 10832, "start": 108.32, "end": 114.63999999999999, "text": " understand LLMs, then maybe we're in better shape because then every time a new better", "tokens": [50364, 1223, 441, 43, 26386, 11, 550, 1310, 321, 434, 294, 1101, 3909, 570, 550, 633, 565, 257, 777, 1101, 50680], "temperature": 0.0, "avg_logprob": -0.1467409474509103, "compression_ratio": 1.7290836653386454, "no_speech_prob": 0.003074987092986703}, {"id": 23, "seek": 10832, "start": 114.63999999999999, "end": 118.32, "text": " LLM is released, well, there's a new thing to understand, but we've also gotten better", "tokens": [50680, 441, 43, 44, 307, 4736, 11, 731, 11, 456, 311, 257, 777, 551, 281, 1223, 11, 457, 321, 600, 611, 5768, 1101, 50864], "temperature": 0.0, "avg_logprob": -0.1467409474509103, "compression_ratio": 1.7290836653386454, "no_speech_prob": 0.003074987092986703}, {"id": 24, "seek": 10832, "start": 118.32, "end": 119.75999999999999, "text": " at understanding things.", "tokens": [50864, 412, 3701, 721, 13, 50936], "temperature": 0.0, "avg_logprob": -0.1467409474509103, "compression_ratio": 1.7290836653386454, "no_speech_prob": 0.003074987092986703}, {"id": 25, "seek": 10832, "start": 119.75999999999999, "end": 127.0, "text": " So, you know, that's kind of the idea, can we get this virtuous cycle?", "tokens": [50936, 407, 11, 291, 458, 11, 300, 311, 733, 295, 264, 1558, 11, 393, 321, 483, 341, 48918, 6586, 30, 51298], "temperature": 0.0, "avg_logprob": -0.1467409474509103, "compression_ratio": 1.7290836653386454, "no_speech_prob": 0.003074987092986703}, {"id": 26, "seek": 10832, "start": 127.0, "end": 130.12, "text": " And then, you know, hopefully as models get better, understanding will as well.", "tokens": [51298, 400, 550, 11, 291, 458, 11, 4696, 382, 5245, 483, 1101, 11, 3701, 486, 382, 731, 13, 51454], "temperature": 0.0, "avg_logprob": -0.1467409474509103, "compression_ratio": 1.7290836653386454, "no_speech_prob": 0.003074987092986703}, {"id": 27, "seek": 10832, "start": 130.12, "end": 135.4, "text": " So this is going to be based on work with actually a lot of different collaborators,", "tokens": [51454, 407, 341, 307, 516, 281, 312, 2361, 322, 589, 365, 767, 257, 688, 295, 819, 39789, 11, 51718], "temperature": 0.0, "avg_logprob": -0.1467409474509103, "compression_ratio": 1.7290836653386454, "no_speech_prob": 0.003074987092986703}, {"id": 28, "seek": 13540, "start": 135.4, "end": 142.08, "text": " but three that I wanted to highlight are my students, Rachie, Eric, and Colin, in particular,", "tokens": [50364, 457, 1045, 300, 286, 1415, 281, 5078, 366, 452, 1731, 11, 40793, 414, 11, 9336, 11, 293, 29253, 11, 294, 1729, 11, 50698], "temperature": 0.0, "avg_logprob": -0.17708633422851563, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.003944848198443651}, {"id": 29, "seek": 13540, "start": 142.08, "end": 149.96, "text": " a lot of the kind of LLM as statistician perspective in this talk was developed by Rachie.", "tokens": [50698, 257, 688, 295, 264, 733, 295, 441, 43, 44, 382, 29588, 952, 4585, 294, 341, 751, 390, 4743, 538, 40793, 414, 13, 51092], "temperature": 0.0, "avg_logprob": -0.17708633422851563, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.003944848198443651}, {"id": 30, "seek": 13540, "start": 149.96, "end": 154.36, "text": " So what do I mean by LLMs as statisticians?", "tokens": [51092, 407, 437, 360, 286, 914, 538, 441, 43, 26386, 382, 29588, 2567, 30, 51312], "temperature": 0.0, "avg_logprob": -0.17708633422851563, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.003944848198443651}, {"id": 31, "seek": 13540, "start": 154.36, "end": 160.0, "text": " So what I want to argue is that many forms of understanding that we could care about", "tokens": [51312, 407, 437, 286, 528, 281, 9695, 307, 300, 867, 6422, 295, 3701, 300, 321, 727, 1127, 466, 51594], "temperature": 0.0, "avg_logprob": -0.17708633422851563, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.003944848198443651}, {"id": 32, "seek": 13540, "start": 160.0, "end": 165.12, "text": " essentially reduce to some sort of statistical or data science problem, right?", "tokens": [51594, 4476, 5407, 281, 512, 1333, 295, 22820, 420, 1412, 3497, 1154, 11, 558, 30, 51850], "temperature": 0.0, "avg_logprob": -0.17708633422851563, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.003944848198443651}, {"id": 33, "seek": 16512, "start": 165.12, "end": 172.88, "text": " So maybe we're given a model, we just see what it outputs on some huge number of inputs,", "tokens": [50364, 407, 1310, 321, 434, 2212, 257, 2316, 11, 321, 445, 536, 437, 309, 23930, 322, 512, 2603, 1230, 295, 15743, 11, 50752], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 34, "seek": 16512, "start": 172.88, "end": 173.88, "text": " right?", "tokens": [50752, 558, 30, 50802], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 35, "seek": 16512, "start": 173.88, "end": 176.72, "text": " We could easily do that by just taking all of the data sets we have and seeing what", "tokens": [50802, 492, 727, 3612, 360, 300, 538, 445, 1940, 439, 295, 264, 1412, 6352, 321, 362, 293, 2577, 437, 50944], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 36, "seek": 16512, "start": 176.72, "end": 177.84, "text": " the model does.", "tokens": [50944, 264, 2316, 775, 13, 51000], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 37, "seek": 16512, "start": 177.84, "end": 179.92000000000002, "text": " And then maybe we want to kind of identify patterns, right?", "tokens": [51000, 400, 550, 1310, 321, 528, 281, 733, 295, 5876, 8294, 11, 558, 30, 51104], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 38, "seek": 16512, "start": 179.92000000000002, "end": 184.4, "text": " Are there some things that the model is good at, some things it's bad at, cases where there's", "tokens": [51104, 2014, 456, 512, 721, 300, 264, 2316, 307, 665, 412, 11, 512, 721, 309, 311, 1578, 412, 11, 3331, 689, 456, 311, 51328], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 39, "seek": 16512, "start": 184.4, "end": 189.8, "text": " something surprising, and then, you know, you could try to formalize that as some statistical", "tokens": [51328, 746, 8830, 11, 293, 550, 11, 291, 458, 11, 291, 727, 853, 281, 9860, 1125, 300, 382, 512, 22820, 51598], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 40, "seek": 16512, "start": 189.8, "end": 191.52, "text": " hypothesis and test it.", "tokens": [51598, 17291, 293, 1500, 309, 13, 51684], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 41, "seek": 16512, "start": 191.52, "end": 194.48000000000002, "text": " So that's kind of a statistical problem.", "tokens": [51684, 407, 300, 311, 733, 295, 257, 22820, 1154, 13, 51832], "temperature": 0.0, "avg_logprob": -0.16483256691380552, "compression_ratio": 1.7887323943661972, "no_speech_prob": 0.0010321051813662052}, {"id": 42, "seek": 19448, "start": 194.48, "end": 199.48, "text": " Maybe we want to understand the training set and understand, you know, what are the important", "tokens": [50364, 2704, 321, 528, 281, 1223, 264, 3097, 992, 293, 1223, 11, 291, 458, 11, 437, 366, 264, 1021, 50614], "temperature": 0.0, "avg_logprob": -0.1400752154263583, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.009409373626112938}, {"id": 43, "seek": 19448, "start": 199.48, "end": 203.04, "text": " sources of variation?", "tokens": [50614, 7139, 295, 12990, 30, 50792], "temperature": 0.0, "avg_logprob": -0.1400752154263583, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.009409373626112938}, {"id": 44, "seek": 19448, "start": 203.04, "end": 207.95999999999998, "text": " You know, if it turns out that large fractions of the data set are in some weird language", "tokens": [50792, 509, 458, 11, 498, 309, 4523, 484, 300, 2416, 36058, 295, 264, 1412, 992, 366, 294, 512, 3657, 2856, 51038], "temperature": 0.0, "avg_logprob": -0.1400752154263583, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.009409373626112938}, {"id": 45, "seek": 19448, "start": 207.95999999999998, "end": 212.83999999999997, "text": " called base 64, maybe we want to know about that.", "tokens": [51038, 1219, 3096, 12145, 11, 1310, 321, 528, 281, 458, 466, 300, 13, 51282], "temperature": 0.0, "avg_logprob": -0.1400752154263583, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.009409373626112938}, {"id": 46, "seek": 19448, "start": 212.83999999999997, "end": 216.72, "text": " And then you could also have kind of more active learning or active sampling problems", "tokens": [51282, 400, 550, 291, 727, 611, 362, 733, 295, 544, 4967, 2539, 420, 4967, 21179, 2740, 51476], "temperature": 0.0, "avg_logprob": -0.1400752154263583, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.009409373626112938}, {"id": 47, "seek": 19448, "start": 216.72, "end": 221.64, "text": " where we want to, say, generate new inputs that elicit problematic behaviors so that", "tokens": [51476, 689, 321, 528, 281, 11, 584, 11, 8460, 777, 15743, 300, 806, 8876, 19011, 15501, 370, 300, 51722], "temperature": 0.0, "avg_logprob": -0.1400752154263583, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.009409373626112938}, {"id": 48, "seek": 19448, "start": 221.64, "end": 223.44, "text": " we can identify and fix it, right?", "tokens": [51722, 321, 393, 5876, 293, 3191, 309, 11, 558, 30, 51812], "temperature": 0.0, "avg_logprob": -0.1400752154263583, "compression_ratio": 1.7137546468401488, "no_speech_prob": 0.009409373626112938}, {"id": 49, "seek": 22344, "start": 223.44, "end": 229.28, "text": " So I think of these all as on some level kind of statistics or data problems.", "tokens": [50364, 407, 286, 519, 295, 613, 439, 382, 322, 512, 1496, 733, 295, 12523, 420, 1412, 2740, 13, 50656], "temperature": 0.0, "avg_logprob": -0.14331802955040565, "compression_ratio": 1.7228915662650603, "no_speech_prob": 0.0004582581459544599}, {"id": 50, "seek": 22344, "start": 229.28, "end": 235.68, "text": " And so if we can, in some sort of general sense, get large language models to do statistics,", "tokens": [50656, 400, 370, 498, 321, 393, 11, 294, 512, 1333, 295, 2674, 2020, 11, 483, 2416, 2856, 5245, 281, 360, 12523, 11, 50976], "temperature": 0.0, "avg_logprob": -0.14331802955040565, "compression_ratio": 1.7228915662650603, "no_speech_prob": 0.0004582581459544599}, {"id": 51, "seek": 22344, "start": 235.68, "end": 240.72, "text": " then they can help us tackle all of these problems, and of course, many other useful", "tokens": [50976, 550, 436, 393, 854, 505, 14896, 439, 295, 613, 2740, 11, 293, 295, 1164, 11, 867, 661, 4420, 51228], "temperature": 0.0, "avg_logprob": -0.14331802955040565, "compression_ratio": 1.7228915662650603, "no_speech_prob": 0.0004582581459544599}, {"id": 52, "seek": 22344, "start": 240.72, "end": 242.44, "text": " problems as well.", "tokens": [51228, 2740, 382, 731, 13, 51314], "temperature": 0.0, "avg_logprob": -0.14331802955040565, "compression_ratio": 1.7228915662650603, "no_speech_prob": 0.0004582581459544599}, {"id": 53, "seek": 22344, "start": 242.44, "end": 245.64, "text": " So to do that, what would we need to do?", "tokens": [51314, 407, 281, 360, 300, 11, 437, 576, 321, 643, 281, 360, 30, 51474], "temperature": 0.0, "avg_logprob": -0.14331802955040565, "compression_ratio": 1.7228915662650603, "no_speech_prob": 0.0004582581459544599}, {"id": 54, "seek": 22344, "start": 245.64, "end": 250.12, "text": " So I'm going to kind of take a very high level view of, you know, what is, like, the", "tokens": [51474, 407, 286, 478, 516, 281, 733, 295, 747, 257, 588, 1090, 1496, 1910, 295, 11, 291, 458, 11, 437, 307, 11, 411, 11, 264, 51698], "temperature": 0.0, "avg_logprob": -0.14331802955040565, "compression_ratio": 1.7228915662650603, "no_speech_prob": 0.0004582581459544599}, {"id": 55, "seek": 22344, "start": 250.12, "end": 252.88, "text": " pipeline of doing statistics?", "tokens": [51698, 15517, 295, 884, 12523, 30, 51836], "temperature": 0.0, "avg_logprob": -0.14331802955040565, "compression_ratio": 1.7228915662650603, "no_speech_prob": 0.0004582581459544599}, {"id": 56, "seek": 25288, "start": 252.88, "end": 256.15999999999997, "text": " And I'd say it kind of has four steps.", "tokens": [50364, 400, 286, 1116, 584, 309, 733, 295, 575, 1451, 4439, 13, 50528], "temperature": 0.0, "avg_logprob": -0.13401513221936348, "compression_ratio": 1.7176470588235293, "no_speech_prob": 0.0023964608553797007}, {"id": 57, "seek": 25288, "start": 256.15999999999997, "end": 259.28, "text": " The first is we look at some initial data.", "tokens": [50528, 440, 700, 307, 321, 574, 412, 512, 5883, 1412, 13, 50684], "temperature": 0.0, "avg_logprob": -0.13401513221936348, "compression_ratio": 1.7176470588235293, "no_speech_prob": 0.0023964608553797007}, {"id": 58, "seek": 25288, "start": 259.28, "end": 263.04, "text": " Maybe we want to think of this as training data, but, you know, just some sort of data", "tokens": [50684, 2704, 321, 528, 281, 519, 295, 341, 382, 3097, 1412, 11, 457, 11, 291, 458, 11, 445, 512, 1333, 295, 1412, 50872], "temperature": 0.0, "avg_logprob": -0.13401513221936348, "compression_ratio": 1.7176470588235293, "no_speech_prob": 0.0023964608553797007}, {"id": 59, "seek": 25288, "start": 263.04, "end": 265.56, "text": " that kind of helps us get our bearings.", "tokens": [50872, 300, 733, 295, 3665, 505, 483, 527, 36297, 13, 50998], "temperature": 0.0, "avg_logprob": -0.13401513221936348, "compression_ratio": 1.7176470588235293, "no_speech_prob": 0.0023964608553797007}, {"id": 60, "seek": 25288, "start": 265.56, "end": 271.12, "text": " From this data, we maybe want to form some hypothesis, you know, and maybe, like, the", "tokens": [50998, 3358, 341, 1412, 11, 321, 1310, 528, 281, 1254, 512, 17291, 11, 291, 458, 11, 293, 1310, 11, 411, 11, 264, 51276], "temperature": 0.0, "avg_logprob": -0.13401513221936348, "compression_ratio": 1.7176470588235293, "no_speech_prob": 0.0023964608553797007}, {"id": 61, "seek": 25288, "start": 271.12, "end": 278.15999999999997, "text": " hypothesis that models do worse on long inputs than short inputs, right?", "tokens": [51276, 17291, 300, 5245, 360, 5324, 322, 938, 15743, 813, 2099, 15743, 11, 558, 30, 51628], "temperature": 0.0, "avg_logprob": -0.13401513221936348, "compression_ratio": 1.7176470588235293, "no_speech_prob": 0.0023964608553797007}, {"id": 62, "seek": 25288, "start": 278.15999999999997, "end": 282.71999999999997, "text": " And then formalize that quantitatively and then test this on new data.", "tokens": [51628, 400, 550, 9860, 1125, 300, 27778, 356, 293, 550, 1500, 341, 322, 777, 1412, 13, 51856], "temperature": 0.0, "avg_logprob": -0.13401513221936348, "compression_ratio": 1.7176470588235293, "no_speech_prob": 0.0023964608553797007}, {"id": 63, "seek": 28272, "start": 282.72, "end": 286.12, "text": " This data could just be, you know, a held out set from the same distribution.", "tokens": [50364, 639, 1412, 727, 445, 312, 11, 291, 458, 11, 257, 5167, 484, 992, 490, 264, 912, 7316, 13, 50534], "temperature": 0.0, "avg_logprob": -0.14349563916524252, "compression_ratio": 1.619672131147541, "no_speech_prob": 0.000755301327444613}, {"id": 64, "seek": 28272, "start": 286.12, "end": 292.28000000000003, "text": " We might care about kind of, you know, generalization to new domains, or maybe if, maybe we want", "tokens": [50534, 492, 1062, 1127, 466, 733, 295, 11, 291, 458, 11, 2674, 2144, 281, 777, 25514, 11, 420, 1310, 498, 11, 1310, 321, 528, 50842], "temperature": 0.0, "avg_logprob": -0.14349563916524252, "compression_ratio": 1.619672131147541, "no_speech_prob": 0.000755301327444613}, {"id": 65, "seek": 28272, "start": 292.28000000000003, "end": 296.88000000000005, "text": " to even, like, actively collect data to really stress test our hypothesis.", "tokens": [50842, 281, 754, 11, 411, 11, 13022, 2500, 1412, 281, 534, 4244, 1500, 527, 17291, 13, 51072], "temperature": 0.0, "avg_logprob": -0.14349563916524252, "compression_ratio": 1.619672131147541, "no_speech_prob": 0.000755301327444613}, {"id": 66, "seek": 28272, "start": 296.88000000000005, "end": 302.56, "text": " And so I'm going to go over a couple of case studies where we'll have problems that kind", "tokens": [51072, 400, 370, 286, 478, 516, 281, 352, 670, 257, 1916, 295, 1389, 5313, 689, 321, 603, 362, 2740, 300, 733, 51356], "temperature": 0.0, "avg_logprob": -0.14349563916524252, "compression_ratio": 1.619672131147541, "no_speech_prob": 0.000755301327444613}, {"id": 67, "seek": 28272, "start": 302.56, "end": 306.8, "text": " of follow this structure and will automate each step with LLMs.", "tokens": [51356, 295, 1524, 341, 3877, 293, 486, 31605, 1184, 1823, 365, 441, 43, 26386, 13, 51568], "temperature": 0.0, "avg_logprob": -0.14349563916524252, "compression_ratio": 1.619672131147541, "no_speech_prob": 0.000755301327444613}, {"id": 68, "seek": 28272, "start": 306.8, "end": 312.6, "text": " The kind of key difference from maybe traditional ways of looking at statistics is going to", "tokens": [51568, 440, 733, 295, 2141, 2649, 490, 1310, 5164, 2098, 295, 1237, 412, 12523, 307, 516, 281, 51858], "temperature": 0.0, "avg_logprob": -0.14349563916524252, "compression_ratio": 1.619672131147541, "no_speech_prob": 0.000755301327444613}, {"id": 69, "seek": 31260, "start": 312.6, "end": 319.44, "text": " be in this hypothesis H. So a key difference is, you know, often H is, like, maybe expressed", "tokens": [50364, 312, 294, 341, 17291, 389, 13, 407, 257, 2141, 2649, 307, 11, 291, 458, 11, 2049, 389, 307, 11, 411, 11, 1310, 12675, 50706], "temperature": 0.0, "avg_logprob": -0.143535897751485, "compression_ratio": 1.7080291970802919, "no_speech_prob": 0.014951647259294987}, {"id": 70, "seek": 31260, "start": 319.44, "end": 325.96000000000004, "text": " as some mathematical function, like, you know, patients with this future in a data set are", "tokens": [50706, 382, 512, 18894, 2445, 11, 411, 11, 291, 458, 11, 4209, 365, 341, 2027, 294, 257, 1412, 992, 366, 51032], "temperature": 0.0, "avg_logprob": -0.143535897751485, "compression_ratio": 1.7080291970802919, "no_speech_prob": 0.014951647259294987}, {"id": 71, "seek": 31260, "start": 325.96000000000004, "end": 327.24, "text": " more likely to get this disease.", "tokens": [51032, 544, 3700, 281, 483, 341, 4752, 13, 51096], "temperature": 0.0, "avg_logprob": -0.143535897751485, "compression_ratio": 1.7080291970802919, "no_speech_prob": 0.014951647259294987}, {"id": 72, "seek": 31260, "start": 327.24, "end": 331.36, "text": " I can write this as, like, expectation of some feature function.", "tokens": [51096, 286, 393, 2464, 341, 382, 11, 411, 11, 14334, 295, 512, 4111, 2445, 13, 51302], "temperature": 0.0, "avg_logprob": -0.143535897751485, "compression_ratio": 1.7080291970802919, "no_speech_prob": 0.014951647259294987}, {"id": 73, "seek": 31260, "start": 331.36, "end": 335.72, "text": " But here, because we're working with language models, H is going to be a natural language", "tokens": [51302, 583, 510, 11, 570, 321, 434, 1364, 365, 2856, 5245, 11, 389, 307, 516, 281, 312, 257, 3303, 2856, 51520], "temperature": 0.0, "avg_logprob": -0.143535897751485, "compression_ratio": 1.7080291970802919, "no_speech_prob": 0.014951647259294987}, {"id": 74, "seek": 31260, "start": 335.72, "end": 336.84000000000003, "text": " string.", "tokens": [51520, 6798, 13, 51576], "temperature": 0.0, "avg_logprob": -0.143535897751485, "compression_ratio": 1.7080291970802919, "no_speech_prob": 0.014951647259294987}, {"id": 75, "seek": 31260, "start": 336.84000000000003, "end": 341.92, "text": " And so this third step, which maybe is often almost trivial, it's just, like, taking the", "tokens": [51576, 400, 370, 341, 2636, 1823, 11, 597, 1310, 307, 2049, 1920, 26703, 11, 309, 311, 445, 11, 411, 11, 1940, 264, 51830], "temperature": 0.0, "avg_logprob": -0.143535897751485, "compression_ratio": 1.7080291970802919, "no_speech_prob": 0.014951647259294987}, {"id": 76, "seek": 34192, "start": 341.92, "end": 347.52000000000004, "text": " average of your feature over the data set, now actually becomes kind of non-trivial because", "tokens": [50364, 4274, 295, 428, 4111, 670, 264, 1412, 992, 11, 586, 767, 3643, 733, 295, 2107, 12, 83, 470, 22640, 570, 50644], "temperature": 0.0, "avg_logprob": -0.15410630456332503, "compression_ratio": 1.6313725490196078, "no_speech_prob": 0.00048781870282255113}, {"id": 77, "seek": 34192, "start": 347.52000000000004, "end": 351.88, "text": " we have to formalize what it means for, say, a natural language string to be true about", "tokens": [50644, 321, 362, 281, 9860, 1125, 437, 309, 1355, 337, 11, 584, 11, 257, 3303, 2856, 6798, 281, 312, 2074, 466, 50862], "temperature": 0.0, "avg_logprob": -0.15410630456332503, "compression_ratio": 1.6313725490196078, "no_speech_prob": 0.00048781870282255113}, {"id": 78, "seek": 34192, "start": 351.88, "end": 354.28000000000003, "text": " a data set or not.", "tokens": [50862, 257, 1412, 992, 420, 406, 13, 50982], "temperature": 0.0, "avg_logprob": -0.15410630456332503, "compression_ratio": 1.6313725490196078, "no_speech_prob": 0.00048781870282255113}, {"id": 79, "seek": 34192, "start": 354.28000000000003, "end": 358.6, "text": " So if that's kind of abstract, don't worry because we're going to go into some case studies", "tokens": [50982, 407, 498, 300, 311, 733, 295, 12649, 11, 500, 380, 3292, 570, 321, 434, 516, 281, 352, 666, 512, 1389, 5313, 51198], "temperature": 0.0, "avg_logprob": -0.15410630456332503, "compression_ratio": 1.6313725490196078, "no_speech_prob": 0.00048781870282255113}, {"id": 80, "seek": 34192, "start": 358.6, "end": 359.6, "text": " very soon.", "tokens": [51198, 588, 2321, 13, 51248], "temperature": 0.0, "avg_logprob": -0.15410630456332503, "compression_ratio": 1.6313725490196078, "no_speech_prob": 0.00048781870282255113}, {"id": 81, "seek": 34192, "start": 359.6, "end": 360.92, "text": " In fact, right now.", "tokens": [51248, 682, 1186, 11, 558, 586, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15410630456332503, "compression_ratio": 1.6313725490196078, "no_speech_prob": 0.00048781870282255113}, {"id": 82, "seek": 34192, "start": 360.92, "end": 361.92, "text": " Okay.", "tokens": [51314, 1033, 13, 51364], "temperature": 0.0, "avg_logprob": -0.15410630456332503, "compression_ratio": 1.6313725490196078, "no_speech_prob": 0.00048781870282255113}, {"id": 83, "seek": 34192, "start": 361.92, "end": 368.96000000000004, "text": " So the first case study I want to talk about is finding failures in a model called Clip.", "tokens": [51364, 407, 264, 700, 1389, 2979, 286, 528, 281, 751, 466, 307, 5006, 20774, 294, 257, 2316, 1219, 2033, 647, 13, 51716], "temperature": 0.0, "avg_logprob": -0.15410630456332503, "compression_ratio": 1.6313725490196078, "no_speech_prob": 0.00048781870282255113}, {"id": 84, "seek": 36896, "start": 368.96, "end": 374.41999999999996, "text": " So for those who aren't familiar with it, Clip is an encoder model.", "tokens": [50364, 407, 337, 729, 567, 3212, 380, 4963, 365, 309, 11, 2033, 647, 307, 364, 2058, 19866, 2316, 13, 50637], "temperature": 0.0, "avg_logprob": -0.10052420641924883, "compression_ratio": 1.7584745762711864, "no_speech_prob": 0.0013669212348759174}, {"id": 85, "seek": 36896, "start": 374.41999999999996, "end": 380.84, "text": " So it takes in inputs and kind of embeds them as some feature vector.", "tokens": [50637, 407, 309, 2516, 294, 15743, 293, 733, 295, 12240, 82, 552, 382, 512, 4111, 8062, 13, 50958], "temperature": 0.0, "avg_logprob": -0.10052420641924883, "compression_ratio": 1.7584745762711864, "no_speech_prob": 0.0013669212348759174}, {"id": 86, "seek": 36896, "start": 380.84, "end": 384.76, "text": " And it's kind of used as the backbone of many later models, right?", "tokens": [50958, 400, 309, 311, 733, 295, 1143, 382, 264, 34889, 295, 867, 1780, 5245, 11, 558, 30, 51154], "temperature": 0.0, "avg_logprob": -0.10052420641924883, "compression_ratio": 1.7584745762711864, "no_speech_prob": 0.0013669212348759174}, {"id": 87, "seek": 36896, "start": 384.76, "end": 387.44, "text": " So it's often useful to have good embeddings.", "tokens": [51154, 407, 309, 311, 2049, 4420, 281, 362, 665, 12240, 29432, 13, 51288], "temperature": 0.0, "avg_logprob": -0.10052420641924883, "compression_ratio": 1.7584745762711864, "no_speech_prob": 0.0013669212348759174}, {"id": 88, "seek": 36896, "start": 387.44, "end": 391.56, "text": " So many models kind of use these embeddings and then do something with them.", "tokens": [51288, 407, 867, 5245, 733, 295, 764, 613, 12240, 29432, 293, 550, 360, 746, 365, 552, 13, 51494], "temperature": 0.0, "avg_logprob": -0.10052420641924883, "compression_ratio": 1.7584745762711864, "no_speech_prob": 0.0013669212348759174}, {"id": 89, "seek": 36896, "start": 391.56, "end": 398.71999999999997, "text": " And the thing that is kind of special about Clip is that it embeds both images and text", "tokens": [51494, 400, 264, 551, 300, 307, 733, 295, 2121, 466, 2033, 647, 307, 300, 309, 12240, 82, 1293, 5267, 293, 2487, 51852], "temperature": 0.0, "avg_logprob": -0.10052420641924883, "compression_ratio": 1.7584745762711864, "no_speech_prob": 0.0013669212348759174}, {"id": 90, "seek": 39872, "start": 398.72, "end": 401.88000000000005, "text": " into a kind of shared space.", "tokens": [50364, 666, 257, 733, 295, 5507, 1901, 13, 50522], "temperature": 0.0, "avg_logprob": -0.15298796617067778, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.005218393635004759}, {"id": 91, "seek": 39872, "start": 401.88000000000005, "end": 408.88000000000005, "text": " So it was one of the most early multimodal models that kind of did this effectively.", "tokens": [50522, 407, 309, 390, 472, 295, 264, 881, 2440, 32972, 378, 304, 5245, 300, 733, 295, 630, 341, 8659, 13, 50872], "temperature": 0.0, "avg_logprob": -0.15298796617067778, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.005218393635004759}, {"id": 92, "seek": 39872, "start": 408.88000000000005, "end": 412.08000000000004, "text": " And as sort of shown here, lots of models use it.", "tokens": [50872, 400, 382, 1333, 295, 4898, 510, 11, 3195, 295, 5245, 764, 309, 13, 51032], "temperature": 0.0, "avg_logprob": -0.15298796617067778, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.005218393635004759}, {"id": 93, "seek": 39872, "start": 412.08000000000004, "end": 415.32000000000005, "text": " So mid-journey uses it as its kind of first embedding step.", "tokens": [51032, 407, 2062, 12, 8696, 2397, 4960, 309, 382, 1080, 733, 295, 700, 12240, 3584, 1823, 13, 51194], "temperature": 0.0, "avg_logprob": -0.15298796617067778, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.005218393635004759}, {"id": 94, "seek": 39872, "start": 415.32000000000005, "end": 421.88000000000005, "text": " Dolly does, stable diffusion does, and lots of like 3D and video models do as well.", "tokens": [51194, 1144, 13020, 775, 11, 8351, 25242, 775, 11, 293, 3195, 295, 411, 805, 35, 293, 960, 5245, 360, 382, 731, 13, 51522], "temperature": 0.0, "avg_logprob": -0.15298796617067778, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.005218393635004759}, {"id": 95, "seek": 39872, "start": 421.88000000000005, "end": 426.16, "text": " And you can kind of get pretty amazing results using these embeddings.", "tokens": [51522, 400, 291, 393, 733, 295, 483, 1238, 2243, 3542, 1228, 613, 12240, 29432, 13, 51736], "temperature": 0.0, "avg_logprob": -0.15298796617067778, "compression_ratio": 1.6651982378854626, "no_speech_prob": 0.005218393635004759}, {"id": 96, "seek": 42616, "start": 426.16, "end": 430.08000000000004, "text": " Often they're used to kind of do text to image generation.", "tokens": [50364, 20043, 436, 434, 1143, 281, 733, 295, 360, 2487, 281, 3256, 5125, 13, 50560], "temperature": 0.0, "avg_logprob": -0.14300981574102278, "compression_ratio": 1.7922077922077921, "no_speech_prob": 0.008845426142215729}, {"id": 97, "seek": 42616, "start": 430.08000000000004, "end": 434.72, "text": " So you have some text description of what you want, and then these models kind of try", "tokens": [50560, 407, 291, 362, 512, 2487, 3855, 295, 437, 291, 528, 11, 293, 550, 613, 5245, 733, 295, 853, 50792], "temperature": 0.0, "avg_logprob": -0.14300981574102278, "compression_ratio": 1.7922077922077921, "no_speech_prob": 0.008845426142215729}, {"id": 98, "seek": 42616, "start": 434.72, "end": 440.72, "text": " to generate an image that matches this description in some way.", "tokens": [50792, 281, 8460, 364, 3256, 300, 10676, 341, 3855, 294, 512, 636, 13, 51092], "temperature": 0.0, "avg_logprob": -0.14300981574102278, "compression_ratio": 1.7922077922077921, "no_speech_prob": 0.008845426142215729}, {"id": 99, "seek": 42616, "start": 440.72, "end": 446.44000000000005, "text": " So you can see here, these are maybe a little bit small, but this is an empty glass.", "tokens": [51092, 407, 291, 393, 536, 510, 11, 613, 366, 1310, 257, 707, 857, 1359, 11, 457, 341, 307, 364, 6707, 4276, 13, 51378], "temperature": 0.0, "avg_logprob": -0.14300981574102278, "compression_ratio": 1.7922077922077921, "no_speech_prob": 0.008845426142215729}, {"id": 100, "seek": 42616, "start": 446.44000000000005, "end": 449.64000000000004, "text": " And then you get this glass, a family of five members.", "tokens": [51378, 400, 550, 291, 483, 341, 4276, 11, 257, 1605, 295, 1732, 2679, 13, 51538], "temperature": 0.0, "avg_logprob": -0.14300981574102278, "compression_ratio": 1.7922077922077921, "no_speech_prob": 0.008845426142215729}, {"id": 101, "seek": 42616, "start": 449.64000000000004, "end": 452.56, "text": " And then you get this, a man descending a mountain.", "tokens": [51538, 400, 550, 291, 483, 341, 11, 257, 587, 40182, 257, 6937, 13, 51684], "temperature": 0.0, "avg_logprob": -0.14300981574102278, "compression_ratio": 1.7922077922077921, "no_speech_prob": 0.008845426142215729}, {"id": 102, "seek": 42616, "start": 452.56, "end": 453.56, "text": " You get this.", "tokens": [51684, 509, 483, 341, 13, 51734], "temperature": 0.0, "avg_logprob": -0.14300981574102278, "compression_ratio": 1.7922077922077921, "no_speech_prob": 0.008845426142215729}, {"id": 103, "seek": 45356, "start": 453.68, "end": 457.84, "text": " So these are all amazing, except for the problem that they're also all completely wrong.", "tokens": [50370, 407, 613, 366, 439, 2243, 11, 3993, 337, 264, 1154, 300, 436, 434, 611, 439, 2584, 2085, 13, 50578], "temperature": 0.0, "avg_logprob": -0.16780962546666464, "compression_ratio": 1.5938864628820961, "no_speech_prob": 0.00022338439885061234}, {"id": 104, "seek": 45356, "start": 457.84, "end": 459.84, "text": " This is a full glass.", "tokens": [50578, 639, 307, 257, 1577, 4276, 13, 50678], "temperature": 0.0, "avg_logprob": -0.16780962546666464, "compression_ratio": 1.5938864628820961, "no_speech_prob": 0.00022338439885061234}, {"id": 105, "seek": 45356, "start": 459.84, "end": 461.92, "text": " This is a family of six members.", "tokens": [50678, 639, 307, 257, 1605, 295, 2309, 2679, 13, 50782], "temperature": 0.0, "avg_logprob": -0.16780962546666464, "compression_ratio": 1.5938864628820961, "no_speech_prob": 0.00022338439885061234}, {"id": 106, "seek": 45356, "start": 461.92, "end": 463.96, "text": " This is somewhat us sending a mountain.", "tokens": [50782, 639, 307, 8344, 505, 7750, 257, 6937, 13, 50884], "temperature": 0.0, "avg_logprob": -0.16780962546666464, "compression_ratio": 1.5938864628820961, "no_speech_prob": 0.00022338439885061234}, {"id": 107, "seek": 45356, "start": 463.96, "end": 468.68, "text": " This says there's no star in the night sky, and it shows the Milky Way.", "tokens": [50884, 639, 1619, 456, 311, 572, 3543, 294, 264, 1818, 5443, 11, 293, 309, 3110, 264, 38465, 9558, 13, 51120], "temperature": 0.0, "avg_logprob": -0.16780962546666464, "compression_ratio": 1.5938864628820961, "no_speech_prob": 0.00022338439885061234}, {"id": 108, "seek": 45356, "start": 468.68, "end": 473.52, "text": " And so you get these amazing images, but you often get these kind of like very semantically", "tokens": [51120, 400, 370, 291, 483, 613, 2243, 5267, 11, 457, 291, 2049, 483, 613, 733, 295, 411, 588, 4361, 49505, 51362], "temperature": 0.0, "avg_logprob": -0.16780962546666464, "compression_ratio": 1.5938864628820961, "no_speech_prob": 0.00022338439885061234}, {"id": 109, "seek": 45356, "start": 473.52, "end": 477.4, "text": " obvious failures.", "tokens": [51362, 6322, 20774, 13, 51556], "temperature": 0.0, "avg_logprob": -0.16780962546666464, "compression_ratio": 1.5938864628820961, "no_speech_prob": 0.00022338439885061234}, {"id": 110, "seek": 47740, "start": 477.4, "end": 483.56, "text": " So the kind of plot twist here, aside from the fact that here's a bunch of failures that", "tokens": [50364, 407, 264, 733, 295, 7542, 8203, 510, 11, 7359, 490, 264, 1186, 300, 510, 311, 257, 3840, 295, 20774, 300, 50672], "temperature": 0.0, "avg_logprob": -0.1431469250750798, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0005192870157770813}, {"id": 111, "seek": 47740, "start": 483.56, "end": 489.0, "text": " we can find, is actually that we didn't find these failures, and LLM found these failures.", "tokens": [50672, 321, 393, 915, 11, 307, 767, 300, 321, 994, 380, 915, 613, 20774, 11, 293, 441, 43, 44, 1352, 613, 20774, 13, 50944], "temperature": 0.0, "avg_logprob": -0.1431469250750798, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0005192870157770813}, {"id": 112, "seek": 47740, "start": 489.0, "end": 493.91999999999996, "text": " So these are all automatically generated by actually not a single LLM, but a kind of", "tokens": [50944, 407, 613, 366, 439, 6772, 10833, 538, 767, 406, 257, 2167, 441, 43, 44, 11, 457, 257, 733, 295, 51190], "temperature": 0.0, "avg_logprob": -0.1431469250750798, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0005192870157770813}, {"id": 113, "seek": 47740, "start": 493.91999999999996, "end": 500.15999999999997, "text": " pipeline of several LLMs working together on kind of complimentary tasks that played", "tokens": [51190, 15517, 295, 2940, 441, 43, 26386, 1364, 1214, 322, 733, 295, 47162, 9608, 300, 3737, 51502], "temperature": 0.0, "avg_logprob": -0.1431469250750798, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0005192870157770813}, {"id": 114, "seek": 47740, "start": 500.15999999999997, "end": 502.59999999999997, "text": " to their individual strengths.", "tokens": [51502, 281, 641, 2609, 16986, 13, 51624], "temperature": 0.0, "avg_logprob": -0.1431469250750798, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.0005192870157770813}, {"id": 115, "seek": 50260, "start": 502.6, "end": 508.20000000000005, "text": " So we'll talk about how could we actually build a system that, just given Clip, could", "tokens": [50364, 407, 321, 603, 751, 466, 577, 727, 321, 767, 1322, 257, 1185, 300, 11, 445, 2212, 2033, 647, 11, 727, 50644], "temperature": 0.0, "avg_logprob": -0.3183739760826374, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0002780171053018421}, {"id": 116, "seek": 50260, "start": 508.20000000000005, "end": 513.12, "text": " kind of automatically generate all of these failures at a large scale.", "tokens": [50644, 733, 295, 6772, 8460, 439, 295, 613, 20774, 412, 257, 2416, 4373, 13, 50890], "temperature": 0.0, "avg_logprob": -0.3183739760826374, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0002780171053018421}, {"id": 117, "seek": 50260, "start": 513.12, "end": 516.48, "text": " So are there any questions so far before I go into the details of this?", "tokens": [50890, 407, 366, 456, 604, 1651, 370, 1400, 949, 286, 352, 666, 264, 4365, 295, 341, 30, 51058], "temperature": 0.0, "avg_logprob": -0.3183739760826374, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0002780171053018421}, {"id": 118, "seek": 50260, "start": 516.48, "end": 517.48, "text": " Yes?", "tokens": [51058, 1079, 30, 51108], "temperature": 0.0, "avg_logprob": -0.3183739760826374, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0002780171053018421}, {"id": 119, "seek": 50260, "start": 517.48, "end": 518.48, "text": " One quick question.", "tokens": [51108, 1485, 1702, 1168, 13, 51158], "temperature": 0.0, "avg_logprob": -0.3183739760826374, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0002780171053018421}, {"id": 120, "seek": 50260, "start": 518.48, "end": 525.52, "text": " Why do you say Dolly, new being, what does that mean in this context?", "tokens": [51158, 1545, 360, 291, 584, 1144, 13020, 11, 777, 885, 11, 437, 775, 300, 914, 294, 341, 4319, 30, 51510], "temperature": 0.0, "avg_logprob": -0.3183739760826374, "compression_ratio": 1.481651376146789, "no_speech_prob": 0.0002780171053018421}, {"id": 121, "seek": 52552, "start": 525.52, "end": 532.8, "text": " I think different versions of Dolly, and one of them, I'm not totally sure of the details", "tokens": [50364, 286, 519, 819, 9606, 295, 1144, 13020, 11, 293, 472, 295, 552, 11, 286, 478, 406, 3879, 988, 295, 264, 4365, 50728], "temperature": 0.0, "avg_logprob": -0.17733965601239884, "compression_ratio": 1.4928909952606635, "no_speech_prob": 0.19643718004226685}, {"id": 122, "seek": 52552, "start": 532.8, "end": 539.28, "text": " here, but I believe that Dolly was developed by OpenAI, but then Microsoft served some", "tokens": [50728, 510, 11, 457, 286, 1697, 300, 1144, 13020, 390, 4743, 538, 7238, 48698, 11, 457, 550, 8116, 7584, 512, 51052], "temperature": 0.0, "avg_logprob": -0.17733965601239884, "compression_ratio": 1.4928909952606635, "no_speech_prob": 0.19643718004226685}, {"id": 123, "seek": 52552, "start": 539.28, "end": 542.12, "text": " version of Dolly as part of their being product.", "tokens": [51052, 3037, 295, 1144, 13020, 382, 644, 295, 641, 885, 1674, 13, 51194], "temperature": 0.0, "avg_logprob": -0.17733965601239884, "compression_ratio": 1.4928909952606635, "no_speech_prob": 0.19643718004226685}, {"id": 124, "seek": 52552, "start": 542.12, "end": 550.56, "text": " And so this is that, which we use because we can actually query it kind of publicly.", "tokens": [51194, 400, 370, 341, 307, 300, 11, 597, 321, 764, 570, 321, 393, 767, 14581, 309, 733, 295, 14843, 13, 51616], "temperature": 0.0, "avg_logprob": -0.17733965601239884, "compression_ratio": 1.4928909952606635, "no_speech_prob": 0.19643718004226685}, {"id": 125, "seek": 52552, "start": 550.56, "end": 551.56, "text": " Yes?", "tokens": [51616, 1079, 30, 51666], "temperature": 0.0, "avg_logprob": -0.17733965601239884, "compression_ratio": 1.4928909952606635, "no_speech_prob": 0.19643718004226685}, {"id": 126, "seek": 55156, "start": 551.56, "end": 558.64, "text": " Are there any new type of errors that pop up from this process?", "tokens": [50364, 2014, 456, 604, 777, 2010, 295, 13603, 300, 1665, 493, 490, 341, 1399, 30, 50718], "temperature": 0.0, "avg_logprob": -0.1873555833643133, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.007933851331472397}, {"id": 127, "seek": 55156, "start": 558.64, "end": 564.1199999999999, "text": " For example, like the counting error or the direction error, those are already kind of", "tokens": [50718, 1171, 1365, 11, 411, 264, 13251, 6713, 420, 264, 3513, 6713, 11, 729, 366, 1217, 733, 295, 50992], "temperature": 0.0, "avg_logprob": -0.1873555833643133, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.007933851331472397}, {"id": 128, "seek": 55156, "start": 564.1199999999999, "end": 565.1199999999999, "text": " known, right?", "tokens": [50992, 2570, 11, 558, 30, 51042], "temperature": 0.0, "avg_logprob": -0.1873555833643133, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.007933851331472397}, {"id": 129, "seek": 55156, "start": 565.1199999999999, "end": 568.0799999999999, "text": " So are there any new hypothesized forms in this process?", "tokens": [51042, 407, 366, 456, 604, 777, 14276, 1602, 6422, 294, 341, 1399, 30, 51190], "temperature": 0.0, "avg_logprob": -0.1873555833643133, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.007933851331472397}, {"id": 130, "seek": 55156, "start": 568.0799999999999, "end": 569.8, "text": " Yes, that's a good question.", "tokens": [51190, 1079, 11, 300, 311, 257, 665, 1168, 13, 51276], "temperature": 0.0, "avg_logprob": -0.1873555833643133, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.007933851331472397}, {"id": 131, "seek": 55156, "start": 569.8, "end": 573.28, "text": " So I'll get to kind of numbers later.", "tokens": [51276, 407, 286, 603, 483, 281, 733, 295, 3547, 1780, 13, 51450], "temperature": 0.0, "avg_logprob": -0.1873555833643133, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.007933851331472397}, {"id": 132, "seek": 55156, "start": 573.28, "end": 578.16, "text": " We generated 14 categories of errors.", "tokens": [51450, 492, 10833, 3499, 10479, 295, 13603, 13, 51694], "temperature": 0.0, "avg_logprob": -0.1873555833643133, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.007933851331472397}, {"id": 133, "seek": 57816, "start": 578.16, "end": 582.48, "text": " We looked for papers that kind of described these errors.", "tokens": [50364, 492, 2956, 337, 10577, 300, 733, 295, 7619, 613, 13603, 13, 50580], "temperature": 0.0, "avg_logprob": -0.11021610895792643, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.07802684605121613}, {"id": 134, "seek": 57816, "start": 582.48, "end": 587.68, "text": " I think there were a handful that had already been described in the literature.", "tokens": [50580, 286, 519, 456, 645, 257, 16458, 300, 632, 1217, 668, 7619, 294, 264, 10394, 13, 50840], "temperature": 0.0, "avg_logprob": -0.11021610895792643, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.07802684605121613}, {"id": 135, "seek": 57816, "start": 587.68, "end": 589.12, "text": " The others were not in the literature.", "tokens": [50840, 440, 2357, 645, 406, 294, 264, 10394, 13, 50912], "temperature": 0.0, "avg_logprob": -0.11021610895792643, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.07802684605121613}, {"id": 136, "seek": 57816, "start": 589.12, "end": 594.64, "text": " I would probably guess that someone whose day job was to play around with these models", "tokens": [50912, 286, 576, 1391, 2041, 300, 1580, 6104, 786, 1691, 390, 281, 862, 926, 365, 613, 5245, 51188], "temperature": 0.0, "avg_logprob": -0.11021610895792643, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.07802684605121613}, {"id": 137, "seek": 57816, "start": 594.64, "end": 597.24, "text": " would be familiar with these errors.", "tokens": [51188, 576, 312, 4963, 365, 613, 13603, 13, 51318], "temperature": 0.0, "avg_logprob": -0.11021610895792643, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.07802684605121613}, {"id": 138, "seek": 57816, "start": 597.24, "end": 604.3199999999999, "text": " But the nice thing is even without spending lots and lots of time, you can do this.", "tokens": [51318, 583, 264, 1481, 551, 307, 754, 1553, 6434, 3195, 293, 3195, 295, 565, 11, 291, 393, 360, 341, 13, 51672], "temperature": 0.0, "avg_logprob": -0.11021610895792643, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.07802684605121613}, {"id": 139, "seek": 60432, "start": 604.32, "end": 612.24, "text": " In fact, I think there were cases where reviewers asked us to add a new system to this pipeline", "tokens": [50364, 682, 1186, 11, 286, 519, 456, 645, 3331, 689, 45837, 2351, 505, 281, 909, 257, 777, 1185, 281, 341, 15517, 50760], "temperature": 0.0, "avg_logprob": -0.1576936910818289, "compression_ratio": 1.6590038314176245, "no_speech_prob": 0.0018099918961524963}, {"id": 140, "seek": 60432, "start": 612.24, "end": 617.7600000000001, "text": " and in a half hour we just got all of the new errors that that system had.", "tokens": [50760, 293, 294, 257, 1922, 1773, 321, 445, 658, 439, 295, 264, 777, 13603, 300, 300, 1185, 632, 13, 51036], "temperature": 0.0, "avg_logprob": -0.1576936910818289, "compression_ratio": 1.6590038314176245, "no_speech_prob": 0.0018099918961524963}, {"id": 141, "seek": 60432, "start": 617.7600000000001, "end": 622.8000000000001, "text": " So I think right now that's the advantage is that it's much quicker.", "tokens": [51036, 407, 286, 519, 558, 586, 300, 311, 264, 5002, 307, 300, 309, 311, 709, 16255, 13, 51288], "temperature": 0.0, "avg_logprob": -0.1576936910818289, "compression_ratio": 1.6590038314176245, "no_speech_prob": 0.0018099918961524963}, {"id": 142, "seek": 60432, "start": 622.8000000000001, "end": 627.0400000000001, "text": " I think as models become better, I'm hoping that we'll also get things that even an expert", "tokens": [51288, 286, 519, 382, 5245, 1813, 1101, 11, 286, 478, 7159, 300, 321, 603, 611, 483, 721, 300, 754, 364, 5844, 51500], "temperature": 0.0, "avg_logprob": -0.1576936910818289, "compression_ratio": 1.6590038314176245, "no_speech_prob": 0.0018099918961524963}, {"id": 143, "seek": 60432, "start": 627.0400000000001, "end": 630.0400000000001, "text": " who spent lots and lots of time might not necessarily find.", "tokens": [51500, 567, 4418, 3195, 293, 3195, 295, 565, 1062, 406, 4725, 915, 13, 51650], "temperature": 0.0, "avg_logprob": -0.1576936910818289, "compression_ratio": 1.6590038314176245, "no_speech_prob": 0.0018099918961524963}, {"id": 144, "seek": 60432, "start": 630.0400000000001, "end": 632.2, "text": " Yeah, great question.", "tokens": [51650, 865, 11, 869, 1168, 13, 51758], "temperature": 0.0, "avg_logprob": -0.1576936910818289, "compression_ratio": 1.6590038314176245, "no_speech_prob": 0.0018099918961524963}, {"id": 145, "seek": 60432, "start": 632.2, "end": 633.2, "text": " Any other questions?", "tokens": [51758, 2639, 661, 1651, 30, 51808], "temperature": 0.0, "avg_logprob": -0.1576936910818289, "compression_ratio": 1.6590038314176245, "no_speech_prob": 0.0018099918961524963}, {"id": 146, "seek": 63320, "start": 633.2, "end": 638.76, "text": " Okay, so how do we do this?", "tokens": [50364, 1033, 11, 370, 577, 360, 321, 360, 341, 30, 50642], "temperature": 0.0, "avg_logprob": -0.18258574574264055, "compression_ratio": 1.5871559633027523, "no_speech_prob": 0.000687750056385994}, {"id": 147, "seek": 63320, "start": 638.76, "end": 645.32, "text": " So first maybe let me give a kind of overview of the key ideas here.", "tokens": [50642, 407, 700, 1310, 718, 385, 976, 257, 733, 295, 12492, 295, 264, 2141, 3487, 510, 13, 50970], "temperature": 0.0, "avg_logprob": -0.18258574574264055, "compression_ratio": 1.5871559633027523, "no_speech_prob": 0.000687750056385994}, {"id": 148, "seek": 63320, "start": 645.32, "end": 650.24, "text": " So again, remember, Clip is a feature encoder that is encoding both text and images.", "tokens": [50970, 407, 797, 11, 1604, 11, 2033, 647, 307, 257, 4111, 2058, 19866, 300, 307, 43430, 1293, 2487, 293, 5267, 13, 51216], "temperature": 0.0, "avg_logprob": -0.18258574574264055, "compression_ratio": 1.5871559633027523, "no_speech_prob": 0.000687750056385994}, {"id": 149, "seek": 63320, "start": 650.24, "end": 655.8000000000001, "text": " So the kind of main key idea in terms of like where we get off the ground is there's going", "tokens": [51216, 407, 264, 733, 295, 2135, 2141, 1558, 294, 2115, 295, 411, 689, 321, 483, 766, 264, 2727, 307, 456, 311, 516, 51494], "temperature": 0.0, "avg_logprob": -0.18258574574264055, "compression_ratio": 1.5871559633027523, "no_speech_prob": 0.000687750056385994}, {"id": 150, "seek": 63320, "start": 655.8000000000001, "end": 659.6, "text": " to be a sort of notion of what I'll call a hash collision in the encoder.", "tokens": [51494, 281, 312, 257, 1333, 295, 10710, 295, 437, 286, 603, 818, 257, 22019, 24644, 294, 264, 2058, 19866, 13, 51684], "temperature": 0.0, "avg_logprob": -0.18258574574264055, "compression_ratio": 1.5871559633027523, "no_speech_prob": 0.000687750056385994}, {"id": 151, "seek": 65960, "start": 659.6, "end": 663.5600000000001, "text": " And we'll come up with a sort of automated way of identifying lots of hash collisions", "tokens": [50364, 400, 321, 603, 808, 493, 365, 257, 1333, 295, 18473, 636, 295, 16696, 3195, 295, 22019, 46537, 50562], "temperature": 0.0, "avg_logprob": -0.11529169877370199, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.07155971974134445}, {"id": 152, "seek": 65960, "start": 663.5600000000001, "end": 664.5600000000001, "text": " in the encoder.", "tokens": [50562, 294, 264, 2058, 19866, 13, 50612], "temperature": 0.0, "avg_logprob": -0.11529169877370199, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.07155971974134445}, {"id": 153, "seek": 65960, "start": 664.5600000000001, "end": 669.6, "text": " So this is going to give us a lot of kind of like individual examples where if you have", "tokens": [50612, 407, 341, 307, 516, 281, 976, 505, 257, 688, 295, 733, 295, 411, 2609, 5110, 689, 498, 291, 362, 50864], "temperature": 0.0, "avg_logprob": -0.11529169877370199, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.07155971974134445}, {"id": 154, "seek": 65960, "start": 669.6, "end": 672.9200000000001, "text": " a collision, you don't know which of those two is wrong, but you know at least one of", "tokens": [50864, 257, 24644, 11, 291, 500, 380, 458, 597, 295, 729, 732, 307, 2085, 11, 457, 291, 458, 412, 1935, 472, 295, 51030], "temperature": 0.0, "avg_logprob": -0.11529169877370199, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.07155971974134445}, {"id": 155, "seek": 65960, "start": 672.9200000000001, "end": 676.76, "text": " them has to be wrong.", "tokens": [51030, 552, 575, 281, 312, 2085, 13, 51222], "temperature": 0.0, "avg_logprob": -0.11529169877370199, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.07155971974134445}, {"id": 156, "seek": 65960, "start": 676.76, "end": 681.6800000000001, "text": " Then kind of given those failures, we're going to use LLMs to kind of categorize them into", "tokens": [51222, 1396, 733, 295, 2212, 729, 20774, 11, 321, 434, 516, 281, 764, 441, 43, 26386, 281, 733, 295, 19250, 1125, 552, 666, 51468], "temperature": 0.0, "avg_logprob": -0.11529169877370199, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.07155971974134445}, {"id": 157, "seek": 65960, "start": 681.6800000000001, "end": 687.28, "text": " coherent patterns and test that those patterns are actually correct by generating new examples", "tokens": [51468, 36239, 8294, 293, 1500, 300, 729, 8294, 366, 767, 3006, 538, 17746, 777, 5110, 51748], "temperature": 0.0, "avg_logprob": -0.11529169877370199, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.07155971974134445}, {"id": 158, "seek": 68728, "start": 687.76, "end": 693.52, "text": " from those patterns and making sure that they actually in fact induce failures consistently", "tokens": [50388, 490, 729, 8294, 293, 1455, 988, 300, 436, 767, 294, 1186, 41263, 20774, 14961, 50676], "temperature": 0.0, "avg_logprob": -0.1366857181895863, "compression_ratio": 1.6811023622047243, "no_speech_prob": 0.0009398874826729298}, {"id": 159, "seek": 68728, "start": 693.52, "end": 699.4399999999999, "text": " both in the encoder and on downstream tasks and even kind of also generalizing to new", "tokens": [50676, 1293, 294, 264, 2058, 19866, 293, 322, 30621, 9608, 293, 754, 733, 295, 611, 2674, 3319, 281, 777, 50972], "temperature": 0.0, "avg_logprob": -0.1366857181895863, "compression_ratio": 1.6811023622047243, "no_speech_prob": 0.0009398874826729298}, {"id": 160, "seek": 68728, "start": 699.4399999999999, "end": 704.6, "text": " domains that are kind of different from what we found these patterns on.", "tokens": [50972, 25514, 300, 366, 733, 295, 819, 490, 437, 321, 1352, 613, 8294, 322, 13, 51230], "temperature": 0.0, "avg_logprob": -0.1366857181895863, "compression_ratio": 1.6811023622047243, "no_speech_prob": 0.0009398874826729298}, {"id": 161, "seek": 68728, "start": 704.6, "end": 706.72, "text": " So that's kind of the high level.", "tokens": [51230, 407, 300, 311, 733, 295, 264, 1090, 1496, 13, 51336], "temperature": 0.0, "avg_logprob": -0.1366857181895863, "compression_ratio": 1.6811023622047243, "no_speech_prob": 0.0009398874826729298}, {"id": 162, "seek": 68728, "start": 706.72, "end": 710.16, "text": " Let me kind of step through these all one by one.", "tokens": [51336, 961, 385, 733, 295, 1823, 807, 613, 439, 472, 538, 472, 13, 51508], "temperature": 0.0, "avg_logprob": -0.1366857181895863, "compression_ratio": 1.6811023622047243, "no_speech_prob": 0.0009398874826729298}, {"id": 163, "seek": 68728, "start": 710.16, "end": 715.4399999999999, "text": " So again, remember we had this statistical pipeline of get some data, generate a hypothesis,", "tokens": [51508, 407, 797, 11, 1604, 321, 632, 341, 22820, 15517, 295, 483, 512, 1412, 11, 8460, 257, 17291, 11, 51772], "temperature": 0.0, "avg_logprob": -0.1366857181895863, "compression_ratio": 1.6811023622047243, "no_speech_prob": 0.0009398874826729298}, {"id": 164, "seek": 71544, "start": 716.44, "end": 717.8800000000001, "text": " test it on new data.", "tokens": [50414, 1500, 309, 322, 777, 1412, 13, 50486], "temperature": 0.0, "avg_logprob": -0.16263399857741137, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.0008829958387650549}, {"id": 165, "seek": 71544, "start": 717.8800000000001, "end": 719.9200000000001, "text": " So let's just go through these one by one.", "tokens": [50486, 407, 718, 311, 445, 352, 807, 613, 472, 538, 472, 13, 50588], "temperature": 0.0, "avg_logprob": -0.16263399857741137, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.0008829958387650549}, {"id": 166, "seek": 71544, "start": 719.9200000000001, "end": 723.96, "text": " So first let's just talk about where are we getting this initial data?", "tokens": [50588, 407, 700, 718, 311, 445, 751, 466, 689, 366, 321, 1242, 341, 5883, 1412, 30, 50790], "temperature": 0.0, "avg_logprob": -0.16263399857741137, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.0008829958387650549}, {"id": 167, "seek": 71544, "start": 723.96, "end": 726.24, "text": " What is this kind of hash collision idea?", "tokens": [50790, 708, 307, 341, 733, 295, 22019, 24644, 1558, 30, 50904], "temperature": 0.0, "avg_logprob": -0.16263399857741137, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.0008829958387650549}, {"id": 168, "seek": 71544, "start": 726.24, "end": 731.1600000000001, "text": " So to talk about this, I need to give you a little bit more background on Clip.", "tokens": [50904, 407, 281, 751, 466, 341, 11, 286, 643, 281, 976, 291, 257, 707, 857, 544, 3678, 322, 2033, 647, 13, 51150], "temperature": 0.0, "avg_logprob": -0.16263399857741137, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.0008829958387650549}, {"id": 169, "seek": 71544, "start": 731.1600000000001, "end": 738.1600000000001, "text": " So as I said before, Clip embeds either an image I or text T, but what is it actually", "tokens": [51150, 407, 382, 286, 848, 949, 11, 2033, 647, 12240, 82, 2139, 364, 3256, 286, 420, 2487, 314, 11, 457, 437, 307, 309, 767, 51500], "temperature": 0.0, "avg_logprob": -0.16263399857741137, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.0008829958387650549}, {"id": 170, "seek": 71544, "start": 738.1600000000001, "end": 740.6800000000001, "text": " designed to do or what was it sort of trained on?", "tokens": [51500, 4761, 281, 360, 420, 437, 390, 309, 1333, 295, 8895, 322, 30, 51626], "temperature": 0.0, "avg_logprob": -0.16263399857741137, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.0008829958387650549}, {"id": 171, "seek": 71544, "start": 740.6800000000001, "end": 744.1600000000001, "text": " So it's actually trained on a bunch of pairs of images and their captions.", "tokens": [51626, 407, 309, 311, 767, 8895, 322, 257, 3840, 295, 15494, 295, 5267, 293, 641, 44832, 13, 51800], "temperature": 0.0, "avg_logprob": -0.16263399857741137, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.0008829958387650549}, {"id": 172, "seek": 74416, "start": 744.88, "end": 751.88, "text": " And in general, the idea is that if there's text that describes an image, then that text", "tokens": [50400, 400, 294, 2674, 11, 264, 1558, 307, 300, 498, 456, 311, 2487, 300, 15626, 364, 3256, 11, 550, 300, 2487, 50750], "temperature": 0.0, "avg_logprob": -0.13897757000393338, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.0006666115950793028}, {"id": 173, "seek": 74416, "start": 751.88, "end": 757.7199999999999, "text": " in that image should have similar embeddings, ideally more similar embeddings to each other", "tokens": [50750, 294, 300, 3256, 820, 362, 2531, 12240, 29432, 11, 22915, 544, 2531, 12240, 29432, 281, 1184, 661, 51042], "temperature": 0.0, "avg_logprob": -0.13897757000393338, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.0006666115950793028}, {"id": 174, "seek": 74416, "start": 757.7199999999999, "end": 759.12, "text": " than to anything else.", "tokens": [51042, 813, 281, 1340, 1646, 13, 51112], "temperature": 0.0, "avg_logprob": -0.13897757000393338, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.0006666115950793028}, {"id": 175, "seek": 74416, "start": 759.12, "end": 764.3199999999999, "text": " So the training process was basically you got a bunch of images, you got a bunch of", "tokens": [51112, 407, 264, 3097, 1399, 390, 1936, 291, 658, 257, 3840, 295, 5267, 11, 291, 658, 257, 3840, 295, 51372], "temperature": 0.0, "avg_logprob": -0.13897757000393338, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.0006666115950793028}, {"id": 176, "seek": 74416, "start": 764.3199999999999, "end": 770.28, "text": " captions, and then you want to make sure that under this embedding, the cosine similarity", "tokens": [51372, 44832, 11, 293, 550, 291, 528, 281, 652, 988, 300, 833, 341, 12240, 3584, 11, 264, 23565, 32194, 51670], "temperature": 0.0, "avg_logprob": -0.13897757000393338, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.0006666115950793028}, {"id": 177, "seek": 77028, "start": 770.3199999999999, "end": 776.1999999999999, "text": " between an image and its caption is higher than between that image and any other captions.", "tokens": [50366, 1296, 364, 3256, 293, 1080, 31974, 307, 2946, 813, 1296, 300, 3256, 293, 604, 661, 44832, 13, 50660], "temperature": 0.0, "avg_logprob": -0.1623936394850413, "compression_ratio": 1.6347826086956523, "no_speech_prob": 0.0005033058696426451}, {"id": 178, "seek": 77028, "start": 776.1999999999999, "end": 779.76, "text": " So you kind of want, if we form this matrix of dot products, you want the diagonal to", "tokens": [50660, 407, 291, 733, 295, 528, 11, 498, 321, 1254, 341, 8141, 295, 5893, 3383, 11, 291, 528, 264, 21539, 281, 50838], "temperature": 0.0, "avg_logprob": -0.1623936394850413, "compression_ratio": 1.6347826086956523, "no_speech_prob": 0.0005033058696426451}, {"id": 179, "seek": 77028, "start": 779.76, "end": 783.1999999999999, "text": " be really big and everything else to be really small.", "tokens": [50838, 312, 534, 955, 293, 1203, 1646, 281, 312, 534, 1359, 13, 51010], "temperature": 0.0, "avg_logprob": -0.1623936394850413, "compression_ratio": 1.6347826086956523, "no_speech_prob": 0.0005033058696426451}, {"id": 180, "seek": 77028, "start": 783.1999999999999, "end": 788.16, "text": " And so the kind of point here is that if T is the description of I, they should have", "tokens": [51010, 400, 370, 264, 733, 295, 935, 510, 307, 300, 498, 314, 307, 264, 3855, 295, 286, 11, 436, 820, 362, 51258], "temperature": 0.0, "avg_logprob": -0.1623936394850413, "compression_ratio": 1.6347826086956523, "no_speech_prob": 0.0005033058696426451}, {"id": 181, "seek": 77028, "start": 788.16, "end": 791.52, "text": " similar embeddings.", "tokens": [51258, 2531, 12240, 29432, 13, 51426], "temperature": 0.0, "avg_logprob": -0.1623936394850413, "compression_ratio": 1.6347826086956523, "no_speech_prob": 0.0005033058696426451}, {"id": 182, "seek": 77028, "start": 791.52, "end": 795.68, "text": " Now how can I use this to find problems?", "tokens": [51426, 823, 577, 393, 286, 764, 341, 281, 915, 2740, 30, 51634], "temperature": 0.0, "avg_logprob": -0.1623936394850413, "compression_ratio": 1.6347826086956523, "no_speech_prob": 0.0005033058696426451}, {"id": 183, "seek": 79568, "start": 795.8, "end": 802.0, "text": " Well, if T and T prime describe different images, but have the same embedding or have", "tokens": [50370, 1042, 11, 498, 314, 293, 314, 5835, 6786, 819, 5267, 11, 457, 362, 264, 912, 12240, 3584, 420, 362, 50680], "temperature": 0.0, "avg_logprob": -0.29105874393763165, "compression_ratio": 1.5467980295566504, "no_speech_prob": 0.06179884821176529}, {"id": 184, "seek": 79568, "start": 802.0, "end": 808.0, "text": " very similar embeddings, then at least one of them has to be wrong in some sense, right?", "tokens": [50680, 588, 2531, 12240, 29432, 11, 550, 412, 1935, 472, 295, 552, 575, 281, 312, 2085, 294, 512, 2020, 11, 558, 30, 50980], "temperature": 0.0, "avg_logprob": -0.29105874393763165, "compression_ratio": 1.5467980295566504, "no_speech_prob": 0.06179884821176529}, {"id": 185, "seek": 79568, "start": 808.0, "end": 813.76, "text": " Because they, you know, like whatever images these corresponded to, they kind of can't", "tokens": [50980, 1436, 436, 11, 291, 458, 11, 411, 2035, 5267, 613, 6805, 292, 281, 11, 436, 733, 295, 393, 380, 51268], "temperature": 0.0, "avg_logprob": -0.29105874393763165, "compression_ratio": 1.5467980295566504, "no_speech_prob": 0.06179884821176529}, {"id": 186, "seek": 79568, "start": 813.76, "end": 817.16, "text": " both be, they can't both be right.", "tokens": [51268, 1293, 312, 11, 436, 393, 380, 1293, 312, 558, 13, 51438], "temperature": 0.0, "avg_logprob": -0.29105874393763165, "compression_ratio": 1.5467980295566504, "no_speech_prob": 0.06179884821176529}, {"id": 187, "seek": 79568, "start": 817.16, "end": 818.16, "text": " Ah, yes, Aliosha.", "tokens": [51438, 2438, 11, 2086, 11, 967, 2717, 1641, 13, 51488], "temperature": 0.0, "avg_logprob": -0.29105874393763165, "compression_ratio": 1.5467980295566504, "no_speech_prob": 0.06179884821176529}, {"id": 188, "seek": 81816, "start": 818.16, "end": 823.48, "text": " That's the subjection between images and text, and we know that, you know, pictures", "tokens": [50364, 663, 311, 264, 3983, 313, 1296, 5267, 293, 2487, 11, 293, 321, 458, 300, 11, 291, 458, 11, 5242, 50630], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 189, "seek": 81816, "start": 823.48, "end": 825.68, "text": " weren't a thousand words.", "tokens": [50630, 4999, 380, 257, 4714, 2283, 13, 50740], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 190, "seek": 81816, "start": 825.68, "end": 832.1999999999999, "text": " Right, so the examples I have in mind would be something like an empty cup and a full", "tokens": [50740, 1779, 11, 370, 264, 5110, 286, 362, 294, 1575, 576, 312, 746, 411, 364, 6707, 4414, 293, 257, 1577, 51066], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 191, "seek": 81816, "start": 832.1999999999999, "end": 833.1999999999999, "text": " cup.", "tokens": [51066, 4414, 13, 51116], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 192, "seek": 81816, "start": 833.1999999999999, "end": 836.68, "text": " And if those, like if those sentences had the same embedding.", "tokens": [51116, 400, 498, 729, 11, 411, 498, 729, 16579, 632, 264, 912, 12240, 3584, 13, 51290], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 193, "seek": 81816, "start": 836.68, "end": 840.48, "text": " But those are, that's, that's a very small subset of all the, like there is a lot of", "tokens": [51290, 583, 729, 366, 11, 300, 311, 11, 300, 311, 257, 588, 1359, 25993, 295, 439, 264, 11, 411, 456, 307, 257, 688, 295, 51480], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 194, "seek": 81816, "start": 840.48, "end": 844.4399999999999, "text": " synonyms, right, visual synonyms.", "tokens": [51480, 5451, 2526, 2592, 11, 558, 11, 5056, 5451, 2526, 2592, 13, 51678], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 195, "seek": 81816, "start": 844.4399999999999, "end": 845.4399999999999, "text": " That's right.", "tokens": [51678, 663, 311, 558, 13, 51728], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 196, "seek": 81816, "start": 845.4399999999999, "end": 847.48, "text": " So you have to worry about visual synonyms.", "tokens": [51728, 407, 291, 362, 281, 3292, 466, 5056, 5451, 2526, 2592, 13, 51830], "temperature": 0.0, "avg_logprob": -0.2990444390348686, "compression_ratio": 1.7081712062256809, "no_speech_prob": 0.0414135679602623}, {"id": 197, "seek": 84748, "start": 847.48, "end": 853.32, "text": " So we need, we need some way of measuring kind of semantic difference that hopefully", "tokens": [50364, 407, 321, 643, 11, 321, 643, 512, 636, 295, 13389, 733, 295, 47982, 2649, 300, 4696, 50656], "temperature": 0.0, "avg_logprob": -0.1805816899950259, "compression_ratio": 1.680672268907563, "no_speech_prob": 8.348763367393985e-05}, {"id": 198, "seek": 84748, "start": 853.32, "end": 856.2, "text": " implies that things are actually visually different.", "tokens": [50656, 18779, 300, 721, 366, 767, 19622, 819, 13, 50800], "temperature": 0.0, "avg_logprob": -0.1805816899950259, "compression_ratio": 1.680672268907563, "no_speech_prob": 8.348763367393985e-05}, {"id": 199, "seek": 84748, "start": 856.2, "end": 859.04, "text": " So I'll get to that on the next slide.", "tokens": [50800, 407, 286, 603, 483, 281, 300, 322, 264, 958, 4137, 13, 50942], "temperature": 0.0, "avg_logprob": -0.1805816899950259, "compression_ratio": 1.680672268907563, "no_speech_prob": 8.348763367393985e-05}, {"id": 200, "seek": 84748, "start": 859.04, "end": 860.8000000000001, "text": " Other questions though?", "tokens": [50942, 5358, 1651, 1673, 30, 51030], "temperature": 0.0, "avg_logprob": -0.1805816899950259, "compression_ratio": 1.680672268907563, "no_speech_prob": 8.348763367393985e-05}, {"id": 201, "seek": 84748, "start": 860.8000000000001, "end": 868.72, "text": " So one thing here also is the nice thing is that I can do this only looking at text, right?", "tokens": [51030, 407, 472, 551, 510, 611, 307, 264, 1481, 551, 307, 300, 286, 393, 360, 341, 787, 1237, 412, 2487, 11, 558, 30, 51426], "temperature": 0.0, "avg_logprob": -0.1805816899950259, "compression_ratio": 1.680672268907563, "no_speech_prob": 8.348763367393985e-05}, {"id": 202, "seek": 84748, "start": 868.72, "end": 872.24, "text": " I mean, I have to use the clip encoder, but I'm only encoding text.", "tokens": [51426, 286, 914, 11, 286, 362, 281, 764, 264, 7353, 2058, 19866, 11, 457, 286, 478, 787, 43430, 2487, 13, 51602], "temperature": 0.0, "avg_logprob": -0.1805816899950259, "compression_ratio": 1.680672268907563, "no_speech_prob": 8.348763367393985e-05}, {"id": 203, "seek": 84748, "start": 872.24, "end": 873.8000000000001, "text": " And why do I want to only look at text?", "tokens": [51602, 400, 983, 360, 286, 528, 281, 787, 574, 412, 2487, 30, 51680], "temperature": 0.0, "avg_logprob": -0.1805816899950259, "compression_ratio": 1.680672268907563, "no_speech_prob": 8.348763367393985e-05}, {"id": 204, "seek": 87380, "start": 873.8, "end": 877.68, "text": " Well, basically, because language models work really well and image models don't.", "tokens": [50364, 1042, 11, 1936, 11, 570, 2856, 5245, 589, 534, 731, 293, 3256, 5245, 500, 380, 13, 50558], "temperature": 0.0, "avg_logprob": -0.23845274107796804, "compression_ratio": 1.7253218884120172, "no_speech_prob": 0.004069323651492596}, {"id": 205, "seek": 87380, "start": 877.68, "end": 882.92, "text": " Sorry, Aliyosha.", "tokens": [50558, 4919, 11, 967, 4727, 329, 1641, 13, 50820], "temperature": 0.0, "avg_logprob": -0.23845274107796804, "compression_ratio": 1.7253218884120172, "no_speech_prob": 0.004069323651492596}, {"id": 206, "seek": 87380, "start": 882.92, "end": 887.28, "text": " But you know, according to Aliyosha, image models will work really well soon.", "tokens": [50820, 583, 291, 458, 11, 4650, 281, 967, 4727, 329, 1641, 11, 3256, 5245, 486, 589, 534, 731, 2321, 13, 51038], "temperature": 0.0, "avg_logprob": -0.23845274107796804, "compression_ratio": 1.7253218884120172, "no_speech_prob": 0.004069323651492596}, {"id": 207, "seek": 87380, "start": 887.28, "end": 888.28, "text": " Even better.", "tokens": [51038, 2754, 1101, 13, 51088], "temperature": 0.0, "avg_logprob": -0.23845274107796804, "compression_ratio": 1.7253218884120172, "no_speech_prob": 0.004069323651492596}, {"id": 208, "seek": 87380, "start": 888.28, "end": 890.9599999999999, "text": " But right now, right now, we want to stick with language.", "tokens": [51088, 583, 558, 586, 11, 558, 586, 11, 321, 528, 281, 2897, 365, 2856, 13, 51222], "temperature": 0.0, "avg_logprob": -0.23845274107796804, "compression_ratio": 1.7253218884120172, "no_speech_prob": 0.004069323651492596}, {"id": 209, "seek": 87380, "start": 890.9599999999999, "end": 893.16, "text": " So, so what do we do?", "tokens": [51222, 407, 11, 370, 437, 360, 321, 360, 30, 51332], "temperature": 0.0, "avg_logprob": -0.23845274107796804, "compression_ratio": 1.7253218884120172, "no_speech_prob": 0.004069323651492596}, {"id": 210, "seek": 87380, "start": 893.16, "end": 897.16, "text": " We're going to collect some initial corpus of text inputs, and we want these inputs to", "tokens": [51332, 492, 434, 516, 281, 2500, 512, 5883, 1181, 31624, 295, 2487, 15743, 11, 293, 321, 528, 613, 15743, 281, 51532], "temperature": 0.0, "avg_logprob": -0.23845274107796804, "compression_ratio": 1.7253218884120172, "no_speech_prob": 0.004069323651492596}, {"id": 211, "seek": 87380, "start": 897.16, "end": 900.88, "text": " be inputs that have some visual significance.", "tokens": [51532, 312, 15743, 300, 362, 512, 5056, 17687, 13, 51718], "temperature": 0.0, "avg_logprob": -0.23845274107796804, "compression_ratio": 1.7253218884120172, "no_speech_prob": 0.004069323651492596}, {"id": 212, "seek": 90088, "start": 900.88, "end": 906.92, "text": " So we'll often take them from some, say, captioning data set or other kind of data", "tokens": [50364, 407, 321, 603, 2049, 747, 552, 490, 512, 11, 584, 11, 31974, 278, 1412, 992, 420, 661, 733, 295, 1412, 50666], "temperature": 0.0, "avg_logprob": -0.1366436682014822, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.004467878956347704}, {"id": 213, "seek": 90088, "start": 906.92, "end": 910.12, "text": " set that has visual descriptions.", "tokens": [50666, 992, 300, 575, 5056, 24406, 13, 50826], "temperature": 0.0, "avg_logprob": -0.1366436682014822, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.004467878956347704}, {"id": 214, "seek": 90088, "start": 910.12, "end": 912.76, "text": " And then we're going to embed them all under clip.", "tokens": [50826, 400, 550, 321, 434, 516, 281, 12240, 552, 439, 833, 7353, 13, 50958], "temperature": 0.0, "avg_logprob": -0.1366436682014822, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.004467878956347704}, {"id": 215, "seek": 90088, "start": 912.76, "end": 916.8, "text": " And we're also going to embed them under another model called Distill Roberta, which", "tokens": [50958, 400, 321, 434, 611, 516, 281, 12240, 552, 833, 1071, 2316, 1219, 9840, 373, 15800, 1328, 11, 597, 51160], "temperature": 0.0, "avg_logprob": -0.1366436682014822, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.004467878956347704}, {"id": 216, "seek": 90088, "start": 916.8, "end": 922.32, "text": " is a very good text model, especially for embeddings.", "tokens": [51160, 307, 257, 588, 665, 2487, 2316, 11, 2318, 337, 12240, 29432, 13, 51436], "temperature": 0.0, "avg_logprob": -0.1366436682014822, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.004467878956347704}, {"id": 217, "seek": 90088, "start": 922.32, "end": 924.72, "text": " So it's a text-only model.", "tokens": [51436, 407, 309, 311, 257, 2487, 12, 25202, 2316, 13, 51556], "temperature": 0.0, "avg_logprob": -0.1366436682014822, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.004467878956347704}, {"id": 218, "seek": 90088, "start": 924.72, "end": 928.56, "text": " And it also has a higher-dimensional embedding space than clip.", "tokens": [51556, 400, 309, 611, 575, 257, 2946, 12, 18759, 12240, 3584, 1901, 813, 7353, 13, 51748], "temperature": 0.0, "avg_logprob": -0.1366436682014822, "compression_ratio": 1.7186147186147187, "no_speech_prob": 0.004467878956347704}, {"id": 219, "seek": 92856, "start": 928.56, "end": 931.92, "text": " And so for both of these reasons, it's kind of, you know, has a better understanding of", "tokens": [50364, 400, 370, 337, 1293, 295, 613, 4112, 11, 309, 311, 733, 295, 11, 291, 458, 11, 575, 257, 1101, 3701, 295, 50532], "temperature": 0.0, "avg_logprob": -0.13152861344186884, "compression_ratio": 1.5982142857142858, "no_speech_prob": 0.0005357250338420272}, {"id": 220, "seek": 92856, "start": 931.92, "end": 937.0, "text": " text than clip does, because it gets to only focus on text and it has more parameters.", "tokens": [50532, 2487, 813, 7353, 775, 11, 570, 309, 2170, 281, 787, 1879, 322, 2487, 293, 309, 575, 544, 9834, 13, 50786], "temperature": 0.0, "avg_logprob": -0.13152861344186884, "compression_ratio": 1.5982142857142858, "no_speech_prob": 0.0005357250338420272}, {"id": 221, "seek": 92856, "start": 937.0, "end": 945.0799999999999, "text": " And so the basic idea is, you know, so we have all these clip embeddings.", "tokens": [50786, 400, 370, 264, 3875, 1558, 307, 11, 291, 458, 11, 370, 321, 362, 439, 613, 7353, 12240, 29432, 13, 51190], "temperature": 0.0, "avg_logprob": -0.13152861344186884, "compression_ratio": 1.5982142857142858, "no_speech_prob": 0.0005357250338420272}, {"id": 222, "seek": 92856, "start": 945.0799999999999, "end": 952.64, "text": " And if there's two inputs that are very close in clip space, but actually have low Roberta", "tokens": [51190, 400, 498, 456, 311, 732, 15743, 300, 366, 588, 1998, 294, 7353, 1901, 11, 457, 767, 362, 2295, 15800, 1328, 51568], "temperature": 0.0, "avg_logprob": -0.13152861344186884, "compression_ratio": 1.5982142857142858, "no_speech_prob": 0.0005357250338420272}, {"id": 223, "seek": 92856, "start": 952.64, "end": 954.56, "text": " similarity, right?", "tokens": [51568, 32194, 11, 558, 30, 51664], "temperature": 0.0, "avg_logprob": -0.13152861344186884, "compression_ratio": 1.5982142857142858, "no_speech_prob": 0.0005357250338420272}, {"id": 224, "seek": 95456, "start": 954.56, "end": 958.76, "text": " So that means they're kind of different, like Roberta thinks that they're semantically", "tokens": [50364, 407, 300, 1355, 436, 434, 733, 295, 819, 11, 411, 15800, 1328, 7309, 300, 436, 434, 4361, 49505, 50574], "temperature": 0.0, "avg_logprob": -0.16406309495278454, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.008313875645399094}, {"id": 225, "seek": 95456, "start": 958.76, "end": 963.1999999999999, "text": " different sentences, but clip says they're the same, then we're going to say, OK, that's", "tokens": [50574, 819, 16579, 11, 457, 7353, 1619, 436, 434, 264, 912, 11, 550, 321, 434, 516, 281, 584, 11, 2264, 11, 300, 311, 50796], "temperature": 0.0, "avg_logprob": -0.16406309495278454, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.008313875645399094}, {"id": 226, "seek": 95456, "start": 963.1999999999999, "end": 966.7199999999999, "text": " a hash collision, probably something is wrong there.", "tokens": [50796, 257, 22019, 24644, 11, 1391, 746, 307, 2085, 456, 13, 50972], "temperature": 0.0, "avg_logprob": -0.16406309495278454, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.008313875645399094}, {"id": 227, "seek": 95456, "start": 966.7199999999999, "end": 972.88, "text": " Now, I agree with you that we also want to check that these really are semantically different", "tokens": [50972, 823, 11, 286, 3986, 365, 291, 300, 321, 611, 528, 281, 1520, 300, 613, 534, 366, 4361, 49505, 819, 51280], "temperature": 0.0, "avg_logprob": -0.16406309495278454, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.008313875645399094}, {"id": 228, "seek": 95456, "start": 972.88, "end": 974.92, "text": " in a way that matters visually.", "tokens": [51280, 294, 257, 636, 300, 7001, 19622, 13, 51382], "temperature": 0.0, "avg_logprob": -0.16406309495278454, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.008313875645399094}, {"id": 229, "seek": 95456, "start": 974.92, "end": 979.9599999999999, "text": " Empirically, it turns out that that's the case about 90% of the time.", "tokens": [51382, 8599, 347, 984, 11, 309, 4523, 484, 300, 300, 311, 264, 1389, 466, 4289, 4, 295, 264, 565, 13, 51634], "temperature": 0.0, "avg_logprob": -0.16406309495278454, "compression_ratio": 1.6825396825396826, "no_speech_prob": 0.008313875645399094}, {"id": 230, "seek": 97996, "start": 979.96, "end": 984.8000000000001, "text": " So this is kind of good enough, and this is something we kind of verified with human", "tokens": [50364, 407, 341, 307, 733, 295, 665, 1547, 11, 293, 341, 307, 746, 321, 733, 295, 31197, 365, 1952, 50606], "temperature": 0.0, "avg_logprob": -0.2558260612117434, "compression_ratio": 1.5577689243027888, "no_speech_prob": 0.08504632115364075}, {"id": 231, "seek": 97996, "start": 984.8000000000001, "end": 985.8000000000001, "text": " subject studies.", "tokens": [50606, 3983, 5313, 13, 50656], "temperature": 0.0, "avg_logprob": -0.2558260612117434, "compression_ratio": 1.5577689243027888, "no_speech_prob": 0.08504632115364075}, {"id": 232, "seek": 97996, "start": 985.8000000000001, "end": 988.08, "text": " Jacob, how do you find these things?", "tokens": [50656, 14117, 11, 577, 360, 291, 915, 613, 721, 30, 50770], "temperature": 0.0, "avg_logprob": -0.2558260612117434, "compression_ratio": 1.5577689243027888, "no_speech_prob": 0.08504632115364075}, {"id": 233, "seek": 97996, "start": 988.08, "end": 992.64, "text": " Because aren't the clip vectors like 2048 dimensional or something?", "tokens": [50770, 1436, 3212, 380, 264, 7353, 18875, 411, 945, 13318, 18795, 420, 746, 30, 50998], "temperature": 0.0, "avg_logprob": -0.2558260612117434, "compression_ratio": 1.5577689243027888, "no_speech_prob": 0.08504632115364075}, {"id": 234, "seek": 97996, "start": 992.64, "end": 999.88, "text": " Yeah, so we're just taking the cosine similarity.", "tokens": [50998, 865, 11, 370, 321, 434, 445, 1940, 264, 23565, 32194, 13, 51360], "temperature": 0.0, "avg_logprob": -0.2558260612117434, "compression_ratio": 1.5577689243027888, "no_speech_prob": 0.08504632115364075}, {"id": 235, "seek": 97996, "start": 999.88, "end": 1002.8000000000001, "text": " So this is like, this is an n squared algorithm.", "tokens": [51360, 407, 341, 307, 411, 11, 341, 307, 364, 297, 8889, 9284, 13, 51506], "temperature": 0.0, "avg_logprob": -0.2558260612117434, "compression_ratio": 1.5577689243027888, "no_speech_prob": 0.08504632115364075}, {"id": 236, "seek": 97996, "start": 1002.8000000000001, "end": 1007.44, "text": " Oh, yeah, but OK, but I mean, if we imagine that you were just looking for collisions", "tokens": [51506, 876, 11, 1338, 11, 457, 2264, 11, 457, 286, 914, 11, 498, 321, 3811, 300, 291, 645, 445, 1237, 337, 46537, 51738], "temperature": 0.0, "avg_logprob": -0.2558260612117434, "compression_ratio": 1.5577689243027888, "no_speech_prob": 0.08504632115364075}, {"id": 237, "seek": 100744, "start": 1007.44, "end": 1013.12, "text": " in this 2048 dimensional space, we would say a priori that could take astronomical time.", "tokens": [50364, 294, 341, 945, 13318, 18795, 1901, 11, 321, 576, 584, 257, 4059, 72, 300, 727, 747, 49035, 565, 13, 50648], "temperature": 0.0, "avg_logprob": -0.23900600580068734, "compression_ratio": 1.575875486381323, "no_speech_prob": 0.011329004541039467}, {"id": 238, "seek": 100744, "start": 1013.12, "end": 1017.84, "text": " You're saying like in practice, it takes much less time because, you know, there's something", "tokens": [50648, 509, 434, 1566, 411, 294, 3124, 11, 309, 2516, 709, 1570, 565, 570, 11, 291, 458, 11, 456, 311, 746, 50884], "temperature": 0.0, "avg_logprob": -0.23900600580068734, "compression_ratio": 1.575875486381323, "no_speech_prob": 0.011329004541039467}, {"id": 239, "seek": 100744, "start": 1017.84, "end": 1023.4000000000001, "text": " about these text inputs that makes the collisions likelier.", "tokens": [50884, 466, 613, 2487, 15743, 300, 1669, 264, 46537, 411, 2753, 13, 51162], "temperature": 0.0, "avg_logprob": -0.23900600580068734, "compression_ratio": 1.575875486381323, "no_speech_prob": 0.011329004541039467}, {"id": 240, "seek": 100744, "start": 1023.4000000000001, "end": 1024.76, "text": " So yeah, a couple of things.", "tokens": [51162, 407, 1338, 11, 257, 1916, 295, 721, 13, 51230], "temperature": 0.0, "avg_logprob": -0.23900600580068734, "compression_ratio": 1.575875486381323, "no_speech_prob": 0.011329004541039467}, {"id": 241, "seek": 100744, "start": 1024.76, "end": 1028.24, "text": " I guess first we don't need exact collisions.", "tokens": [51230, 286, 2041, 700, 321, 500, 380, 643, 1900, 46537, 13, 51404], "temperature": 0.0, "avg_logprob": -0.23900600580068734, "compression_ratio": 1.575875486381323, "no_speech_prob": 0.011329004541039467}, {"id": 242, "seek": 100744, "start": 1028.24, "end": 1033.92, "text": " If the cosine similarity is large enough, I guess empirically, if it's larger than 0.88,", "tokens": [51404, 759, 264, 23565, 32194, 307, 2416, 1547, 11, 286, 2041, 25790, 984, 11, 498, 309, 311, 4833, 813, 1958, 13, 16919, 11, 51688], "temperature": 0.0, "avg_logprob": -0.23900600580068734, "compression_ratio": 1.575875486381323, "no_speech_prob": 0.011329004541039467}, {"id": 243, "seek": 103392, "start": 1033.92, "end": 1039.72, "text": " it turns out that it's pretty likely to create a problem.", "tokens": [50364, 309, 4523, 484, 300, 309, 311, 1238, 3700, 281, 1884, 257, 1154, 13, 50654], "temperature": 0.0, "avg_logprob": -0.308961515073423, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.008846425451338291}, {"id": 244, "seek": 103392, "start": 1039.72, "end": 1041.44, "text": " So you don't need them to be exactly the same.", "tokens": [50654, 407, 291, 500, 380, 643, 552, 281, 312, 2293, 264, 912, 13, 50740], "temperature": 0.0, "avg_logprob": -0.308961515073423, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.008846425451338291}, {"id": 245, "seek": 103392, "start": 1041.44, "end": 1043.4, "text": " That kind of helped you somewhat.", "tokens": [50740, 663, 733, 295, 4254, 291, 8344, 13, 50838], "temperature": 0.0, "avg_logprob": -0.308961515073423, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.008846425451338291}, {"id": 246, "seek": 103392, "start": 1043.4, "end": 1045.4, "text": " And yeah, so somehow this...", "tokens": [50838, 400, 1338, 11, 370, 6063, 341, 485, 50938], "temperature": 0.0, "avg_logprob": -0.308961515073423, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.008846425451338291}, {"id": 247, "seek": 103392, "start": 1045.4, "end": 1053.04, "text": " But I mean, two unit vectors having an inner product of 0.88 in a 2048 dimensional space,", "tokens": [50938, 583, 286, 914, 11, 732, 4985, 18875, 1419, 364, 7284, 1674, 295, 1958, 13, 16919, 294, 257, 945, 13318, 18795, 1901, 11, 51320], "temperature": 0.0, "avg_logprob": -0.308961515073423, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.008846425451338291}, {"id": 248, "seek": 103392, "start": 1053.04, "end": 1056.4, "text": " we might as well call that a collision, right, at that point.", "tokens": [51320, 321, 1062, 382, 731, 818, 300, 257, 24644, 11, 558, 11, 412, 300, 935, 13, 51488], "temperature": 0.0, "avg_logprob": -0.308961515073423, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.008846425451338291}, {"id": 249, "seek": 103392, "start": 1056.4, "end": 1061.1200000000001, "text": " But he's assuming n squared time for u n with the exponential, right?", "tokens": [51488, 583, 415, 311, 11926, 297, 8889, 565, 337, 344, 297, 365, 264, 21510, 11, 558, 30, 51724], "temperature": 0.0, "avg_logprob": -0.308961515073423, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.008846425451338291}, {"id": 250, "seek": 106112, "start": 1061.8, "end": 1062.8, "text": " So, okay, right.", "tokens": [50398, 407, 11, 1392, 11, 558, 13, 50448], "temperature": 0.0, "avg_logprob": -0.32043702261788504, "compression_ratio": 1.7749077490774907, "no_speech_prob": 0.004981519654393196}, {"id": 251, "seek": 106112, "start": 1062.8, "end": 1066.04, "text": " So Scott's claiming we would need an exponential large data set, but this is not...", "tokens": [50448, 407, 6659, 311, 19232, 321, 576, 643, 364, 21510, 2416, 1412, 992, 11, 457, 341, 307, 406, 485, 50610], "temperature": 0.0, "avg_logprob": -0.32043702261788504, "compression_ratio": 1.7749077490774907, "no_speech_prob": 0.004981519654393196}, {"id": 252, "seek": 106112, "start": 1066.04, "end": 1071.32, "text": " Yeah, yeah, yeah, but okay, but it happens that...", "tokens": [50610, 865, 11, 1338, 11, 1338, 11, 457, 1392, 11, 457, 309, 2314, 300, 485, 50874], "temperature": 0.0, "avg_logprob": -0.32043702261788504, "compression_ratio": 1.7749077490774907, "no_speech_prob": 0.004981519654393196}, {"id": 253, "seek": 106112, "start": 1071.32, "end": 1074.84, "text": " So basically the reason why there are collisions is not...", "tokens": [50874, 407, 1936, 264, 1778, 983, 456, 366, 46537, 307, 406, 485, 51050], "temperature": 0.0, "avg_logprob": -0.32043702261788504, "compression_ratio": 1.7749077490774907, "no_speech_prob": 0.004981519654393196}, {"id": 254, "seek": 106112, "start": 1074.84, "end": 1079.04, "text": " has nothing to do with like the pigeonhole principle with the space, right?", "tokens": [51050, 575, 1825, 281, 360, 365, 411, 264, 37886, 14094, 8665, 365, 264, 1901, 11, 558, 30, 51260], "temperature": 0.0, "avg_logprob": -0.32043702261788504, "compression_ratio": 1.7749077490774907, "no_speech_prob": 0.004981519654393196}, {"id": 255, "seek": 106112, "start": 1079.04, "end": 1084.32, "text": " It's just that, you know, the way that it's something special about this mapping that", "tokens": [51260, 467, 311, 445, 300, 11, 291, 458, 11, 264, 636, 300, 309, 311, 746, 2121, 466, 341, 18350, 300, 51524], "temperature": 0.0, "avg_logprob": -0.32043702261788504, "compression_ratio": 1.7749077490774907, "no_speech_prob": 0.004981519654393196}, {"id": 256, "seek": 106112, "start": 1084.32, "end": 1089.8799999999999, "text": " causes there to be collisions, even though a priori there could have been no collisions.", "tokens": [51524, 7700, 456, 281, 312, 46537, 11, 754, 1673, 257, 4059, 72, 456, 727, 362, 668, 572, 46537, 13, 51802], "temperature": 0.0, "avg_logprob": -0.32043702261788504, "compression_ratio": 1.7749077490774907, "no_speech_prob": 0.004981519654393196}, {"id": 257, "seek": 106112, "start": 1089.8799999999999, "end": 1090.8799999999999, "text": " Yeah, that's right.", "tokens": [51802, 865, 11, 300, 311, 558, 13, 51852], "temperature": 0.0, "avg_logprob": -0.32043702261788504, "compression_ratio": 1.7749077490774907, "no_speech_prob": 0.004981519654393196}, {"id": 258, "seek": 109088, "start": 1090.88, "end": 1095.24, "text": " Okay, and if you care, couldn't you do it much faster by using the same kind of h and", "tokens": [50364, 1033, 11, 293, 498, 291, 1127, 11, 2809, 380, 291, 360, 309, 709, 4663, 538, 1228, 264, 912, 733, 295, 276, 293, 50582], "temperature": 0.0, "avg_logprob": -0.23452413807744565, "compression_ratio": 1.6718146718146718, "no_speech_prob": 0.0006260970258153975}, {"id": 259, "seek": 109088, "start": 1095.24, "end": 1100.3200000000002, "text": " s, w in the cities with all of the embeddings?", "tokens": [50582, 262, 11, 261, 294, 264, 6486, 365, 439, 295, 264, 12240, 29432, 30, 50836], "temperature": 0.0, "avg_logprob": -0.23452413807744565, "compression_ratio": 1.6718146718146718, "no_speech_prob": 0.0006260970258153975}, {"id": 260, "seek": 109088, "start": 1100.3200000000002, "end": 1103.0, "text": " Yeah, you could do this much faster than n squared.", "tokens": [50836, 865, 11, 291, 727, 360, 341, 709, 4663, 813, 297, 8889, 13, 50970], "temperature": 0.0, "avg_logprob": -0.23452413807744565, "compression_ratio": 1.6718146718146718, "no_speech_prob": 0.0006260970258153975}, {"id": 261, "seek": 109088, "start": 1103.0, "end": 1108.2800000000002, "text": " It just turned out that this is not the bottleneck, like the bottleneck is running the forward", "tokens": [50970, 467, 445, 3574, 484, 300, 341, 307, 406, 264, 44641, 547, 11, 411, 264, 44641, 547, 307, 2614, 264, 2128, 51234], "temperature": 0.0, "avg_logprob": -0.23452413807744565, "compression_ratio": 1.6718146718146718, "no_speech_prob": 0.0006260970258153975}, {"id": 262, "seek": 109088, "start": 1108.2800000000002, "end": 1115.0800000000002, "text": " passes of all the models and kind of looping over a bunch of pairs of, you know, thousand", "tokens": [51234, 11335, 295, 439, 264, 5245, 293, 733, 295, 6367, 278, 670, 257, 3840, 295, 15494, 295, 11, 291, 458, 11, 4714, 51574], "temperature": 0.0, "avg_logprob": -0.23452413807744565, "compression_ratio": 1.6718146718146718, "no_speech_prob": 0.0006260970258153975}, {"id": 263, "seek": 109088, "start": 1115.0800000000002, "end": 1119.44, "text": " dimensional vectors is pretty cheap compared to running an LLM.", "tokens": [51574, 18795, 18875, 307, 1238, 7084, 5347, 281, 2614, 364, 441, 43, 44, 13, 51792], "temperature": 0.0, "avg_logprob": -0.23452413807744565, "compression_ratio": 1.6718146718146718, "no_speech_prob": 0.0006260970258153975}, {"id": 264, "seek": 111944, "start": 1120.16, "end": 1124.24, "text": " Yeah, so we tried two different corpora.", "tokens": [50400, 865, 11, 370, 321, 3031, 732, 819, 6804, 64, 13, 50604], "temperature": 0.0, "avg_logprob": -0.2952112445124873, "compression_ratio": 1.5847457627118644, "no_speech_prob": 0.002550634555518627}, {"id": 265, "seek": 111944, "start": 1124.24, "end": 1132.28, "text": " One is Cocoa and the other is, what's the other one, SNLI, yeah.", "tokens": [50604, 1485, 307, 29787, 64, 293, 264, 661, 307, 11, 437, 311, 264, 661, 472, 11, 13955, 48718, 11, 1338, 13, 51006], "temperature": 0.0, "avg_logprob": -0.2952112445124873, "compression_ratio": 1.5847457627118644, "no_speech_prob": 0.002550634555518627}, {"id": 266, "seek": 111944, "start": 1132.28, "end": 1138.0, "text": " These are both kind of text data sets that have visual significance.", "tokens": [51006, 1981, 366, 1293, 733, 295, 2487, 1412, 6352, 300, 362, 5056, 17687, 13, 51292], "temperature": 0.0, "avg_logprob": -0.2952112445124873, "compression_ratio": 1.5847457627118644, "no_speech_prob": 0.002550634555518627}, {"id": 267, "seek": 111944, "start": 1138.0, "end": 1141.72, "text": " And yeah, I mean, basically the point is that there's enough, yeah, there's enough structure", "tokens": [51292, 400, 1338, 11, 286, 914, 11, 1936, 264, 935, 307, 300, 456, 311, 1547, 11, 1338, 11, 456, 311, 1547, 3877, 51478], "temperature": 0.0, "avg_logprob": -0.2952112445124873, "compression_ratio": 1.5847457627118644, "no_speech_prob": 0.002550634555518627}, {"id": 268, "seek": 111944, "start": 1141.72, "end": 1144.1200000000001, "text": " in text that you actually do get collisions.", "tokens": [51478, 294, 2487, 300, 291, 767, 360, 483, 46537, 13, 51598], "temperature": 0.0, "avg_logprob": -0.2952112445124873, "compression_ratio": 1.5847457627118644, "no_speech_prob": 0.002550634555518627}, {"id": 269, "seek": 111944, "start": 1144.1200000000001, "end": 1146.88, "text": " I don't care about the n squared.", "tokens": [51598, 286, 500, 380, 1127, 466, 264, 297, 8889, 13, 51736], "temperature": 0.0, "avg_logprob": -0.2952112445124873, "compression_ratio": 1.5847457627118644, "no_speech_prob": 0.002550634555518627}, {"id": 270, "seek": 111944, "start": 1146.88, "end": 1149.04, "text": " Okay, okay, got it, got it.", "tokens": [51736, 1033, 11, 1392, 11, 658, 309, 11, 658, 309, 13, 51844], "temperature": 0.0, "avg_logprob": -0.2952112445124873, "compression_ratio": 1.5847457627118644, "no_speech_prob": 0.002550634555518627}, {"id": 271, "seek": 114904, "start": 1149.24, "end": 1150.92, "text": " Okay, so this is the first step, right?", "tokens": [50374, 1033, 11, 370, 341, 307, 264, 700, 1823, 11, 558, 30, 50458], "temperature": 0.0, "avg_logprob": -0.1731529969435472, "compression_ratio": 1.768939393939394, "no_speech_prob": 0.00026944276760332286}, {"id": 272, "seek": 114904, "start": 1150.92, "end": 1154.52, "text": " This is going to give us a bunch of pairs where we kind of know that like one of the", "tokens": [50458, 639, 307, 516, 281, 976, 505, 257, 3840, 295, 15494, 689, 321, 733, 295, 458, 300, 411, 472, 295, 264, 50638], "temperature": 0.0, "avg_logprob": -0.1731529969435472, "compression_ratio": 1.768939393939394, "no_speech_prob": 0.00026944276760332286}, {"id": 273, "seek": 114904, "start": 1154.52, "end": 1158.48, "text": " two things in the pair is wrong.", "tokens": [50638, 732, 721, 294, 264, 6119, 307, 2085, 13, 50836], "temperature": 0.0, "avg_logprob": -0.1731529969435472, "compression_ratio": 1.768939393939394, "no_speech_prob": 0.00026944276760332286}, {"id": 274, "seek": 114904, "start": 1158.48, "end": 1161.56, "text": " And so now we want to do something with that.", "tokens": [50836, 400, 370, 586, 321, 528, 281, 360, 746, 365, 300, 13, 50990], "temperature": 0.0, "avg_logprob": -0.1731529969435472, "compression_ratio": 1.768939393939394, "no_speech_prob": 0.00026944276760332286}, {"id": 275, "seek": 114904, "start": 1161.56, "end": 1166.52, "text": " So this is kind of the next stage is we want to generate some hypotheses based on these", "tokens": [50990, 407, 341, 307, 733, 295, 264, 958, 3233, 307, 321, 528, 281, 8460, 512, 49969, 2361, 322, 613, 51238], "temperature": 0.0, "avg_logprob": -0.1731529969435472, "compression_ratio": 1.768939393939394, "no_speech_prob": 0.00026944276760332286}, {"id": 276, "seek": 114904, "start": 1166.52, "end": 1167.72, "text": " pairs, right?", "tokens": [51238, 15494, 11, 558, 30, 51298], "temperature": 0.0, "avg_logprob": -0.1731529969435472, "compression_ratio": 1.768939393939394, "no_speech_prob": 0.00026944276760332286}, {"id": 277, "seek": 114904, "start": 1167.72, "end": 1172.6, "text": " So this is where we're going to use the fact that we have text and not images, right?", "tokens": [51298, 407, 341, 307, 689, 321, 434, 516, 281, 764, 264, 1186, 300, 321, 362, 2487, 293, 406, 5267, 11, 558, 30, 51542], "temperature": 0.0, "avg_logprob": -0.1731529969435472, "compression_ratio": 1.768939393939394, "no_speech_prob": 0.00026944276760332286}, {"id": 278, "seek": 114904, "start": 1172.6, "end": 1177.24, "text": " So the individual pair fillers are text inputs, they can feed them to GPT4.", "tokens": [51542, 407, 264, 2609, 6119, 2836, 433, 366, 2487, 15743, 11, 436, 393, 3154, 552, 281, 26039, 51, 19, 13, 51774], "temperature": 0.0, "avg_logprob": -0.1731529969435472, "compression_ratio": 1.768939393939394, "no_speech_prob": 0.00026944276760332286}, {"id": 279, "seek": 117724, "start": 1177.24, "end": 1182.16, "text": " And so, you know, here's the magical prompt, it says I'll provide a series of data for", "tokens": [50364, 400, 370, 11, 291, 458, 11, 510, 311, 264, 12066, 12391, 11, 309, 1619, 286, 603, 2893, 257, 2638, 295, 1412, 337, 50610], "temperature": 0.0, "avg_logprob": -0.14760031864560882, "compression_ratio": 1.7861635220125787, "no_speech_prob": 0.00019714525842573494}, {"id": 280, "seek": 117724, "start": 1182.16, "end": 1183.16, "text": " you to remember.", "tokens": [50610, 291, 281, 1604, 13, 50660], "temperature": 0.0, "avg_logprob": -0.14760031864560882, "compression_ratio": 1.7861635220125787, "no_speech_prob": 0.00019714525842573494}, {"id": 281, "seek": 117724, "start": 1183.16, "end": 1186.6, "text": " Subsequently, I'll ask you some questions to test your performance.", "tokens": [50660, 8511, 46027, 11, 286, 603, 1029, 291, 512, 1651, 281, 1500, 428, 3389, 13, 50832], "temperature": 0.0, "avg_logprob": -0.14760031864560882, "compression_ratio": 1.7861635220125787, "no_speech_prob": 0.00019714525842573494}, {"id": 282, "seek": 117724, "start": 1186.6, "end": 1191.4, "text": " Here's some pairs of prompts to memorize, and then you give it all of, well, you give", "tokens": [50832, 1692, 311, 512, 15494, 295, 41095, 281, 27478, 11, 293, 550, 291, 976, 309, 439, 295, 11, 731, 11, 291, 976, 51072], "temperature": 0.0, "avg_logprob": -0.14760031864560882, "compression_ratio": 1.7861635220125787, "no_speech_prob": 0.00019714525842573494}, {"id": 283, "seek": 117724, "start": 1191.4, "end": 1195.04, "text": " it as many of these failures as you can fit in the context window.", "tokens": [51072, 309, 382, 867, 295, 613, 20774, 382, 291, 393, 3318, 294, 264, 4319, 4910, 13, 51254], "temperature": 0.0, "avg_logprob": -0.14760031864560882, "compression_ratio": 1.7861635220125787, "no_speech_prob": 0.00019714525842573494}, {"id": 284, "seek": 117724, "start": 1195.04, "end": 1199.0, "text": " And then you tell it, hey, I'm trying to find failures as an embedding model.", "tokens": [51254, 400, 550, 291, 980, 309, 11, 4177, 11, 286, 478, 1382, 281, 915, 20774, 382, 364, 12240, 3584, 2316, 13, 51452], "temperature": 0.0, "avg_logprob": -0.14760031864560882, "compression_ratio": 1.7861635220125787, "no_speech_prob": 0.00019714525842573494}, {"id": 285, "seek": 117724, "start": 1199.0, "end": 1203.84, "text": " These are pairs of sentences that are encoded very similarly using the specific examples.", "tokens": [51452, 1981, 366, 15494, 295, 16579, 300, 366, 2058, 12340, 588, 14138, 1228, 264, 2685, 5110, 13, 51694], "temperature": 0.0, "avg_logprob": -0.14760031864560882, "compression_ratio": 1.7861635220125787, "no_speech_prob": 0.00019714525842573494}, {"id": 286, "seek": 117724, "start": 1203.84, "end": 1207.16, "text": " Are there any general types of failures you notice the embedding is making?", "tokens": [51694, 2014, 456, 604, 2674, 3467, 295, 20774, 291, 3449, 264, 12240, 3584, 307, 1455, 30, 51860], "temperature": 0.0, "avg_logprob": -0.14760031864560882, "compression_ratio": 1.7861635220125787, "no_speech_prob": 0.00019714525842573494}, {"id": 287, "seek": 120716, "start": 1207.16, "end": 1211.76, "text": " And then, you know, you kind of give it some more context and you'd say, okay, what does", "tokens": [50364, 400, 550, 11, 291, 458, 11, 291, 733, 295, 976, 309, 512, 544, 4319, 293, 291, 1116, 584, 11, 1392, 11, 437, 775, 50594], "temperature": 0.0, "avg_logprob": -0.13204724737938414, "compression_ratio": 1.749185667752443, "no_speech_prob": 0.0010648147435858846}, {"id": 288, "seek": 120716, "start": 1211.76, "end": 1212.76, "text": " it generate, right?", "tokens": [50594, 309, 8460, 11, 558, 30, 50644], "temperature": 0.0, "avg_logprob": -0.13204724737938414, "compression_ratio": 1.749185667752443, "no_speech_prob": 0.0010648147435858846}, {"id": 289, "seek": 120716, "start": 1212.76, "end": 1218.1200000000001, "text": " So you're basically saying, here's some data, please look at it, please tell me some patterns.", "tokens": [50644, 407, 291, 434, 1936, 1566, 11, 510, 311, 512, 1412, 11, 1767, 574, 412, 309, 11, 1767, 980, 385, 512, 8294, 13, 50912], "temperature": 0.0, "avg_logprob": -0.13204724737938414, "compression_ratio": 1.749185667752443, "no_speech_prob": 0.0010648147435858846}, {"id": 290, "seek": 120716, "start": 1218.1200000000001, "end": 1223.0800000000002, "text": " And so then it, you know, it does a pretty good job of coming up with things.", "tokens": [50912, 400, 370, 550, 309, 11, 291, 458, 11, 309, 775, 257, 1238, 665, 1691, 295, 1348, 493, 365, 721, 13, 51160], "temperature": 0.0, "avg_logprob": -0.13204724737938414, "compression_ratio": 1.749185667752443, "no_speech_prob": 0.0010648147435858846}, {"id": 291, "seek": 120716, "start": 1223.0800000000002, "end": 1228.8400000000001, "text": " It says, okay, there's negation, temporal differences, quantifiers, and the nice thing", "tokens": [51160, 467, 1619, 11, 1392, 11, 456, 311, 2485, 399, 11, 30881, 7300, 11, 4426, 23463, 11, 293, 264, 1481, 551, 51448], "temperature": 0.0, "avg_logprob": -0.13204724737938414, "compression_ratio": 1.749185667752443, "no_speech_prob": 0.0010648147435858846}, {"id": 292, "seek": 120716, "start": 1228.8400000000001, "end": 1233.0800000000002, "text": " is actually it doesn't just say negation, but it gives a bunch of elaborations.", "tokens": [51448, 307, 767, 309, 1177, 380, 445, 584, 2485, 399, 11, 457, 309, 2709, 257, 3840, 295, 16298, 763, 13, 51660], "temperature": 0.0, "avg_logprob": -0.13204724737938414, "compression_ratio": 1.749185667752443, "no_speech_prob": 0.0010648147435858846}, {"id": 293, "seek": 120716, "start": 1233.0800000000002, "end": 1236.88, "text": " So it says embedding models may not correctly capture the negative context in a sentence", "tokens": [51660, 407, 309, 1619, 12240, 3584, 5245, 815, 406, 8944, 7983, 264, 3671, 4319, 294, 257, 8174, 51850], "temperature": 0.0, "avg_logprob": -0.13204724737938414, "compression_ratio": 1.749185667752443, "no_speech_prob": 0.0010648147435858846}, {"id": 294, "seek": 123688, "start": 1236.88, "end": 1241.92, "text": " leading to similarities between sentences with and without negation.", "tokens": [50364, 5775, 281, 24197, 1296, 16579, 365, 293, 1553, 2485, 399, 13, 50616], "temperature": 0.0, "avg_logprob": -0.2358682573456125, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.009703954681754112}, {"id": 295, "seek": 123688, "start": 1241.92, "end": 1245.96, "text": " This can result in incorrect visual representations if the presence or absence of an action is", "tokens": [50616, 639, 393, 1874, 294, 18424, 5056, 33358, 498, 264, 6814, 420, 17145, 295, 364, 3069, 307, 50818], "temperature": 0.0, "avg_logprob": -0.2358682573456125, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.009703954681754112}, {"id": 296, "seek": 123688, "start": 1245.96, "end": 1249.2, "text": " significant in video generation.", "tokens": [50818, 4776, 294, 960, 5125, 13, 50980], "temperature": 0.0, "avg_logprob": -0.2358682573456125, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.009703954681754112}, {"id": 297, "seek": 123688, "start": 1249.2, "end": 1253.1200000000001, "text": " And it kind of keeps going.", "tokens": [50980, 400, 309, 733, 295, 5965, 516, 13, 51176], "temperature": 0.0, "avg_logprob": -0.2358682573456125, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.009703954681754112}, {"id": 298, "seek": 123688, "start": 1253.1200000000001, "end": 1259.24, "text": " And you get, I guess in this case, you get kind of 14 distinct failures in total on this", "tokens": [51176, 400, 291, 483, 11, 286, 2041, 294, 341, 1389, 11, 291, 483, 733, 295, 3499, 10644, 20774, 294, 3217, 322, 341, 51482], "temperature": 0.0, "avg_logprob": -0.2358682573456125, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.009703954681754112}, {"id": 299, "seek": 123688, "start": 1259.24, "end": 1262.4, "text": " list.", "tokens": [51482, 1329, 13, 51640], "temperature": 0.0, "avg_logprob": -0.2358682573456125, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.009703954681754112}, {"id": 300, "seek": 123688, "start": 1262.4, "end": 1265.88, "text": " And the other thing is empirically, GPD4 just kind of always uses this consistent list", "tokens": [51640, 400, 264, 661, 551, 307, 25790, 984, 11, 460, 17349, 19, 445, 733, 295, 1009, 4960, 341, 8398, 1329, 51814], "temperature": 0.0, "avg_logprob": -0.2358682573456125, "compression_ratio": 1.6571428571428573, "no_speech_prob": 0.009703954681754112}, {"id": 301, "seek": 126588, "start": 1265.88, "end": 1269.6000000000001, "text": " format so you can automatically just parse out the individual hypotheses.", "tokens": [50364, 7877, 370, 291, 393, 6772, 445, 48377, 484, 264, 2609, 49969, 13, 50550], "temperature": 0.0, "avg_logprob": -0.3183471815926688, "compression_ratio": 1.461187214611872, "no_speech_prob": 0.05337943509221077}, {"id": 302, "seek": 126588, "start": 1269.6000000000001, "end": 1270.6000000000001, "text": " Yeah, Lisa.", "tokens": [50550, 865, 11, 12252, 13, 50600], "temperature": 0.0, "avg_logprob": -0.3183471815926688, "compression_ratio": 1.461187214611872, "no_speech_prob": 0.05337943509221077}, {"id": 303, "seek": 126588, "start": 1270.6000000000001, "end": 1278.0800000000002, "text": " Have you tried just like asking GPT without these like inputs, like what are common failure", "tokens": [50600, 3560, 291, 3031, 445, 411, 3365, 26039, 51, 1553, 613, 411, 15743, 11, 411, 437, 366, 2689, 7763, 50974], "temperature": 0.0, "avg_logprob": -0.3183471815926688, "compression_ratio": 1.461187214611872, "no_speech_prob": 0.05337943509221077}, {"id": 304, "seek": 126588, "start": 1278.0800000000002, "end": 1281.1200000000001, "text": " cases of image embedding models or something?", "tokens": [50974, 3331, 295, 3256, 12240, 3584, 5245, 420, 746, 30, 51126], "temperature": 0.0, "avg_logprob": -0.3183471815926688, "compression_ratio": 1.461187214611872, "no_speech_prob": 0.05337943509221077}, {"id": 305, "seek": 126588, "start": 1281.1200000000001, "end": 1282.1200000000001, "text": " Yes.", "tokens": [51126, 1079, 13, 51176], "temperature": 0.0, "avg_logprob": -0.3183471815926688, "compression_ratio": 1.461187214611872, "no_speech_prob": 0.05337943509221077}, {"id": 306, "seek": 126588, "start": 1282.1200000000001, "end": 1287.24, "text": " So that's a baseline that I will show results on later.", "tokens": [51176, 407, 300, 311, 257, 20518, 300, 286, 486, 855, 3542, 322, 1780, 13, 51432], "temperature": 0.0, "avg_logprob": -0.3183471815926688, "compression_ratio": 1.461187214611872, "no_speech_prob": 0.05337943509221077}, {"id": 307, "seek": 126588, "start": 1287.24, "end": 1292.5600000000002, "text": " And yeah, it works a lot less well.", "tokens": [51432, 400, 1338, 11, 309, 1985, 257, 688, 1570, 731, 13, 51698], "temperature": 0.0, "avg_logprob": -0.3183471815926688, "compression_ratio": 1.461187214611872, "no_speech_prob": 0.05337943509221077}, {"id": 308, "seek": 129256, "start": 1293.2, "end": 1298.28, "text": " So this kind of gives us hypotheses.", "tokens": [50396, 407, 341, 733, 295, 2709, 505, 49969, 13, 50650], "temperature": 0.0, "avg_logprob": -0.19586060841878256, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.013219647109508514}, {"id": 309, "seek": 129256, "start": 1298.28, "end": 1300.08, "text": " So this was step two.", "tokens": [50650, 407, 341, 390, 1823, 732, 13, 50740], "temperature": 0.0, "avg_logprob": -0.19586060841878256, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.013219647109508514}, {"id": 310, "seek": 129256, "start": 1300.08, "end": 1304.52, "text": " But now we're running into this problem of, OK, usually in statistics a hypothesis is", "tokens": [50740, 583, 586, 321, 434, 2614, 666, 341, 1154, 295, 11, 2264, 11, 2673, 294, 12523, 257, 17291, 307, 50962], "temperature": 0.0, "avg_logprob": -0.19586060841878256, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.013219647109508514}, {"id": 311, "seek": 129256, "start": 1304.52, "end": 1309.84, "text": " like actually some mathematical function, but here these are just sentences.", "tokens": [50962, 411, 767, 512, 18894, 2445, 11, 457, 510, 613, 366, 445, 16579, 13, 51228], "temperature": 0.0, "avg_logprob": -0.19586060841878256, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.013219647109508514}, {"id": 312, "seek": 129256, "start": 1309.84, "end": 1312.3999999999999, "text": " So now we need to formalize this hypothesis.", "tokens": [51228, 407, 586, 321, 643, 281, 9860, 1125, 341, 17291, 13, 51356], "temperature": 0.0, "avg_logprob": -0.19586060841878256, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.013219647109508514}, {"id": 313, "seek": 129256, "start": 1312.3999999999999, "end": 1317.9199999999998, "text": " So we have this list of hypotheses, h1 through hk, that are all natural language descriptions.", "tokens": [51356, 407, 321, 362, 341, 1329, 295, 49969, 11, 276, 16, 807, 276, 74, 11, 300, 366, 439, 3303, 2856, 24406, 13, 51632], "temperature": 0.0, "avg_logprob": -0.19586060841878256, "compression_ratio": 1.6044444444444443, "no_speech_prob": 0.013219647109508514}, {"id": 314, "seek": 131792, "start": 1317.92, "end": 1323.44, "text": " So how can we test if one of these hypotheses is actually any good?", "tokens": [50364, 407, 577, 393, 321, 1500, 498, 472, 295, 613, 49969, 307, 767, 604, 665, 30, 50640], "temperature": 0.0, "avg_logprob": -0.2663010030552961, "compression_ratio": 1.458100558659218, "no_speech_prob": 0.0011876033386215568}, {"id": 315, "seek": 131792, "start": 1323.44, "end": 1327.44, "text": " So I think this is a pretty interesting conceptual question to think about.", "tokens": [50640, 407, 286, 519, 341, 307, 257, 1238, 1880, 24106, 1168, 281, 519, 466, 13, 50840], "temperature": 0.0, "avg_logprob": -0.2663010030552961, "compression_ratio": 1.458100558659218, "no_speech_prob": 0.0011876033386215568}, {"id": 316, "seek": 131792, "start": 1327.44, "end": 1334.4, "text": " So maybe I'll pose it to the audience if anyone has ideas for how we could formalize this.", "tokens": [50840, 407, 1310, 286, 603, 10774, 309, 281, 264, 4034, 498, 2878, 575, 3487, 337, 577, 321, 727, 9860, 1125, 341, 13, 51188], "temperature": 0.0, "avg_logprob": -0.2663010030552961, "compression_ratio": 1.458100558659218, "no_speech_prob": 0.0011876033386215568}, {"id": 317, "seek": 131792, "start": 1334.4, "end": 1336.4, "text": " Hi, Chris.", "tokens": [51188, 2421, 11, 6688, 13, 51288], "temperature": 0.0, "avg_logprob": -0.2663010030552961, "compression_ratio": 1.458100558659218, "no_speech_prob": 0.0011876033386215568}, {"id": 318, "seek": 131792, "start": 1336.4, "end": 1338.4, "text": " Good afternoon.", "tokens": [51288, 2205, 6499, 13, 51388], "temperature": 0.0, "avg_logprob": -0.2663010030552961, "compression_ratio": 1.458100558659218, "no_speech_prob": 0.0011876033386215568}, {"id": 319, "seek": 133840, "start": 1338.4, "end": 1345.52, "text": " Two or more about pairs as to whether they match this hypothesis and then see if the", "tokens": [50364, 4453, 420, 544, 466, 15494, 382, 281, 1968, 436, 2995, 341, 17291, 293, 550, 536, 498, 264, 50720], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 320, "seek": 133840, "start": 1345.52, "end": 1346.52, "text": " images are wrong.", "tokens": [50720, 5267, 366, 2085, 13, 50770], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 321, "seek": 133840, "start": 1346.52, "end": 1347.52, "text": " OK.", "tokens": [50770, 2264, 13, 50820], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 322, "seek": 133840, "start": 1347.52, "end": 1351.52, "text": " In this analysis of DPT4, if you have access.", "tokens": [50820, 682, 341, 5215, 295, 42796, 51, 19, 11, 498, 291, 362, 2105, 13, 51020], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 323, "seek": 133840, "start": 1351.52, "end": 1352.52, "text": " Good.", "tokens": [51020, 2205, 13, 51070], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 324, "seek": 133840, "start": 1352.52, "end": 1353.52, "text": " Yes.", "tokens": [51070, 1079, 13, 51120], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 325, "seek": 133840, "start": 1353.52, "end": 1354.52, "text": " So that is Yan Yi.", "tokens": [51120, 407, 300, 307, 13633, 16747, 13, 51170], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 326, "seek": 133840, "start": 1354.52, "end": 1361.68, "text": " I mean, if we think about research hypothesis, there are a few dimensions that you can use", "tokens": [51170, 286, 914, 11, 498, 321, 519, 466, 2132, 17291, 11, 456, 366, 257, 1326, 12819, 300, 291, 393, 764, 51528], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 327, "seek": 133840, "start": 1361.68, "end": 1364.16, "text": " to categorize whether some say it's a hypothesis.", "tokens": [51528, 281, 19250, 1125, 1968, 512, 584, 309, 311, 257, 17291, 13, 51652], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 328, "seek": 133840, "start": 1364.16, "end": 1367.16, "text": " So for example, it should be testable, right?", "tokens": [51652, 407, 337, 1365, 11, 309, 820, 312, 1500, 712, 11, 558, 30, 51802], "temperature": 0.0, "avg_logprob": -0.3376036904074929, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.010316360741853714}, {"id": 329, "seek": 136716, "start": 1367.28, "end": 1369.28, "text": " There should be a clear scope.", "tokens": [50370, 821, 820, 312, 257, 1850, 11923, 13, 50470], "temperature": 0.0, "avg_logprob": -0.23004631663477698, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.009405863471329212}, {"id": 330, "seek": 136716, "start": 1369.28, "end": 1373.28, "text": " There are a few dimensions I think that you can come up with based on experts.", "tokens": [50470, 821, 366, 257, 1326, 12819, 286, 519, 300, 291, 393, 808, 493, 365, 2361, 322, 8572, 13, 50670], "temperature": 0.0, "avg_logprob": -0.23004631663477698, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.009405863471329212}, {"id": 331, "seek": 136716, "start": 1373.28, "end": 1374.28, "text": " Right.", "tokens": [50670, 1779, 13, 50720], "temperature": 0.0, "avg_logprob": -0.23004631663477698, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.009405863471329212}, {"id": 332, "seek": 136716, "start": 1374.28, "end": 1381.0, "text": " So you can kind of ask experts or DPT4 if it had those properties.", "tokens": [50720, 407, 291, 393, 733, 295, 1029, 8572, 420, 42796, 51, 19, 498, 309, 632, 729, 7221, 13, 51056], "temperature": 0.0, "avg_logprob": -0.23004631663477698, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.009405863471329212}, {"id": 333, "seek": 136716, "start": 1381.0, "end": 1385.96, "text": " So it turns out we're going to do something pretty similar to what Chris said, although", "tokens": [51056, 407, 309, 4523, 484, 321, 434, 516, 281, 360, 746, 1238, 2531, 281, 437, 6688, 848, 11, 4878, 51304], "temperature": 0.0, "avg_logprob": -0.23004631663477698, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.009405863471329212}, {"id": 334, "seek": 136716, "start": 1385.96, "end": 1389.1200000000001, "text": " we're going to look at generation rather than classification.", "tokens": [51304, 321, 434, 516, 281, 574, 412, 5125, 2831, 813, 21538, 13, 51462], "temperature": 0.0, "avg_logprob": -0.23004631663477698, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.009405863471329212}, {"id": 335, "seek": 138912, "start": 1389.12, "end": 1397.8799999999999, "text": " So we're going to say H is a good hypothesis if when you hand that description to some", "tokens": [50364, 407, 321, 434, 516, 281, 584, 389, 307, 257, 665, 17291, 498, 562, 291, 1011, 300, 3855, 281, 512, 50802], "temperature": 0.0, "avg_logprob": -0.17326165534354546, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.02368590608239174}, {"id": 336, "seek": 138912, "start": 1397.8799999999999, "end": 1404.3999999999999, "text": " intelligent agent, in this case not humans, because humans are expensive, but DPT4, they", "tokens": [50802, 13232, 9461, 11, 294, 341, 1389, 406, 6255, 11, 570, 6255, 366, 5124, 11, 457, 42796, 51, 19, 11, 436, 51128], "temperature": 0.0, "avg_logprob": -0.17326165534354546, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.02368590608239174}, {"id": 337, "seek": 138912, "start": 1404.3999999999999, "end": 1411.4399999999998, "text": " do a better job of generating new failures than they would otherwise.", "tokens": [51128, 360, 257, 1101, 1691, 295, 17746, 777, 20774, 813, 436, 576, 5911, 13, 51480], "temperature": 0.0, "avg_logprob": -0.17326165534354546, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.02368590608239174}, {"id": 338, "seek": 138912, "start": 1411.4399999999998, "end": 1416.36, "text": " So this is the way we're going to quantify this.", "tokens": [51480, 407, 341, 307, 264, 636, 321, 434, 516, 281, 40421, 341, 13, 51726], "temperature": 0.0, "avg_logprob": -0.17326165534354546, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.02368590608239174}, {"id": 339, "seek": 141636, "start": 1416.36, "end": 1423.04, "text": " So we'll say H is a good hypothesis if it can be used to generate new failures better", "tokens": [50364, 407, 321, 603, 584, 389, 307, 257, 665, 17291, 498, 309, 393, 312, 1143, 281, 8460, 777, 20774, 1101, 50698], "temperature": 0.0, "avg_logprob": -0.13517813528737715, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.0012842238647863269}, {"id": 340, "seek": 141636, "start": 1423.04, "end": 1426.7199999999998, "text": " than some just baseline method of generating failures.", "tokens": [50698, 813, 512, 445, 20518, 3170, 295, 17746, 20774, 13, 50882], "temperature": 0.0, "avg_logprob": -0.13517813528737715, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.0012842238647863269}, {"id": 341, "seek": 141636, "start": 1426.7199999999998, "end": 1430.08, "text": " And this is where we're going to get to your question, Lisa.", "tokens": [50882, 400, 341, 307, 689, 321, 434, 516, 281, 483, 281, 428, 1168, 11, 12252, 13, 51050], "temperature": 0.0, "avg_logprob": -0.13517813528737715, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.0012842238647863269}, {"id": 342, "seek": 141636, "start": 1430.08, "end": 1437.4799999999998, "text": " So we can either hand DPT4 these hypotheses or we could just ask DPT4 to brainstorm without", "tokens": [51050, 407, 321, 393, 2139, 1011, 42796, 51, 19, 613, 49969, 420, 321, 727, 445, 1029, 42796, 51, 19, 281, 35245, 1553, 51420], "temperature": 0.0, "avg_logprob": -0.13517813528737715, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.0012842238647863269}, {"id": 343, "seek": 141636, "start": 1437.4799999999998, "end": 1443.52, "text": " any data ways in which vision models might be bad and kind of test those against each", "tokens": [51420, 604, 1412, 2098, 294, 597, 5201, 5245, 1062, 312, 1578, 293, 733, 295, 1500, 729, 1970, 1184, 51722], "temperature": 0.0, "avg_logprob": -0.13517813528737715, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.0012842238647863269}, {"id": 344, "seek": 144352, "start": 1443.52, "end": 1446.2, "text": " other and see which one does better.", "tokens": [50364, 661, 293, 536, 597, 472, 775, 1101, 13, 50498], "temperature": 0.0, "avg_logprob": -0.16911432017450748, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.044661253690719604}, {"id": 345, "seek": 144352, "start": 1446.2, "end": 1449.92, "text": " So we're going to test this by prompting an LLM with H as a context.", "tokens": [50498, 407, 321, 434, 516, 281, 1500, 341, 538, 12391, 278, 364, 441, 43, 44, 365, 389, 382, 257, 4319, 13, 50684], "temperature": 0.0, "avg_logprob": -0.16911432017450748, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.044661253690719604}, {"id": 346, "seek": 144352, "start": 1449.92, "end": 1452.68, "text": " And so again, what is the magical prompt?", "tokens": [50684, 400, 370, 797, 11, 437, 307, 264, 12066, 12391, 30, 50822], "temperature": 0.0, "avg_logprob": -0.16911432017450748, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.044661253690719604}, {"id": 347, "seek": 144352, "start": 1452.68, "end": 1458.0, "text": " The magical prompt is to say write down 41 pairs of prompts that an embedding model with", "tokens": [50822, 440, 12066, 12391, 307, 281, 584, 2464, 760, 18173, 15494, 295, 41095, 300, 364, 12240, 3584, 2316, 365, 51088], "temperature": 0.0, "avg_logprob": -0.16911432017450748, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.044661253690719604}, {"id": 348, "seek": 144352, "start": 1458.0, "end": 1462.24, "text": " the following failure mode might encode similarly, even though they would correspond to different", "tokens": [51088, 264, 3480, 7763, 4391, 1062, 2058, 1429, 14138, 11, 754, 1673, 436, 576, 6805, 281, 819, 51300], "temperature": 0.0, "avg_logprob": -0.16911432017450748, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.044661253690719604}, {"id": 349, "seek": 144352, "start": 1462.24, "end": 1464.28, "text": " images if used as captions.", "tokens": [51300, 5267, 498, 1143, 382, 44832, 13, 51402], "temperature": 0.0, "avg_logprob": -0.16911432017450748, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.044661253690719604}, {"id": 350, "seek": 144352, "start": 1464.28, "end": 1470.24, "text": " Use the following format so you give it kind of a format so that we can extract things programmatically.", "tokens": [51402, 8278, 264, 3480, 7877, 370, 291, 976, 309, 733, 295, 257, 7877, 370, 300, 321, 393, 8947, 721, 37648, 5030, 13, 51700], "temperature": 0.0, "avg_logprob": -0.16911432017450748, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.044661253690719604}, {"id": 351, "seek": 147024, "start": 1470.24, "end": 1474.68, "text": " And then we say some other stuff to motivate it, saying that it will be evaluated based", "tokens": [50364, 400, 550, 321, 584, 512, 661, 1507, 281, 28497, 309, 11, 1566, 300, 309, 486, 312, 25509, 2361, 50586], "temperature": 0.0, "avg_logprob": -0.1592111790433843, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.029305141419172287}, {"id": 352, "seek": 147024, "start": 1474.68, "end": 1477.68, "text": " on how well it performs.", "tokens": [50586, 322, 577, 731, 309, 26213, 13, 50736], "temperature": 0.0, "avg_logprob": -0.1592111790433843, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.029305141419172287}, {"id": 353, "seek": 147024, "start": 1477.68, "end": 1484.84, "text": " And then you give the failure mode and as kind of the description that we extracted before.", "tokens": [50736, 400, 550, 291, 976, 264, 7763, 4391, 293, 382, 733, 295, 264, 3855, 300, 321, 34086, 949, 13, 51094], "temperature": 0.0, "avg_logprob": -0.1592111790433843, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.029305141419172287}, {"id": 354, "seek": 147024, "start": 1484.84, "end": 1494.08, "text": " Y41, that's the length, basically the length of the output context window that can be fit.", "tokens": [51094, 398, 17344, 11, 300, 311, 264, 4641, 11, 1936, 264, 4641, 295, 264, 5598, 4319, 4910, 300, 393, 312, 3318, 13, 51556], "temperature": 0.0, "avg_logprob": -0.1592111790433843, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.029305141419172287}, {"id": 355, "seek": 147024, "start": 1494.08, "end": 1499.16, "text": " So if you want more than 41, you just have to ask it a couple of times.", "tokens": [51556, 407, 498, 291, 528, 544, 813, 18173, 11, 291, 445, 362, 281, 1029, 309, 257, 1916, 295, 1413, 13, 51810], "temperature": 0.0, "avg_logprob": -0.1592111790433843, "compression_ratio": 1.5887445887445888, "no_speech_prob": 0.029305141419172287}, {"id": 356, "seek": 149916, "start": 1499.2, "end": 1501.6000000000001, "text": " So this is what we did.", "tokens": [50366, 407, 341, 307, 437, 321, 630, 13, 50486], "temperature": 0.0, "avg_logprob": -0.24078734715779623, "compression_ratio": 1.4354066985645932, "no_speech_prob": 0.019709357991814613}, {"id": 357, "seek": 149916, "start": 1501.6000000000001, "end": 1504.6000000000001, "text": " Yeah, Nicholas.", "tokens": [50486, 865, 11, 22924, 13, 50636], "temperature": 0.0, "avg_logprob": -0.24078734715779623, "compression_ratio": 1.4354066985645932, "no_speech_prob": 0.019709357991814613}, {"id": 358, "seek": 149916, "start": 1504.6000000000001, "end": 1510.24, "text": " How much does this be creative and cautious and these kinds of things like actually help?", "tokens": [50636, 1012, 709, 775, 341, 312, 5880, 293, 25278, 293, 613, 3685, 295, 721, 411, 767, 854, 30, 50918], "temperature": 0.0, "avg_logprob": -0.24078734715779623, "compression_ratio": 1.4354066985645932, "no_speech_prob": 0.019709357991814613}, {"id": 359, "seek": 149916, "start": 1510.24, "end": 1515.44, "text": " Or is this just like black magic that you sort of sprinkle on top?", "tokens": [50918, 1610, 307, 341, 445, 411, 2211, 5585, 300, 291, 1333, 295, 24745, 322, 1192, 30, 51178], "temperature": 0.0, "avg_logprob": -0.24078734715779623, "compression_ratio": 1.4354066985645932, "no_speech_prob": 0.019709357991814613}, {"id": 360, "seek": 149916, "start": 1515.44, "end": 1520.24, "text": " We didn't do careful ablations on the prompt.", "tokens": [51178, 492, 994, 380, 360, 5026, 410, 75, 763, 322, 264, 12391, 13, 51418], "temperature": 0.0, "avg_logprob": -0.24078734715779623, "compression_ratio": 1.4354066985645932, "no_speech_prob": 0.019709357991814613}, {"id": 361, "seek": 149916, "start": 1520.24, "end": 1526.2, "text": " I think, yeah, we added a bunch of stuff until it worked.", "tokens": [51418, 286, 519, 11, 1338, 11, 321, 3869, 257, 3840, 295, 1507, 1826, 309, 2732, 13, 51716], "temperature": 0.0, "avg_logprob": -0.24078734715779623, "compression_ratio": 1.4354066985645932, "no_speech_prob": 0.019709357991814613}, {"id": 362, "seek": 152620, "start": 1526.6000000000001, "end": 1529.96, "text": " I don't think we tried removing things to see what was actually necessary.", "tokens": [50384, 286, 500, 380, 519, 321, 3031, 12720, 721, 281, 536, 437, 390, 767, 4818, 13, 50552], "temperature": 0.0, "avg_logprob": -0.21701360906212075, "compression_ratio": 1.642570281124498, "no_speech_prob": 0.0014548636972904205}, {"id": 363, "seek": 152620, "start": 1529.96, "end": 1536.48, "text": " So it seems totally like I would guess that if you tried to distill this to its bare essentials,", "tokens": [50552, 407, 309, 2544, 3879, 411, 286, 576, 2041, 300, 498, 291, 3031, 281, 42923, 341, 281, 1080, 6949, 46884, 11, 50878], "temperature": 0.0, "avg_logprob": -0.21701360906212075, "compression_ratio": 1.642570281124498, "no_speech_prob": 0.0014548636972904205}, {"id": 364, "seek": 152620, "start": 1536.48, "end": 1539.0800000000002, "text": " you could get something simpler.", "tokens": [50878, 291, 727, 483, 746, 18587, 13, 51008], "temperature": 0.0, "avg_logprob": -0.21701360906212075, "compression_ratio": 1.642570281124498, "no_speech_prob": 0.0014548636972904205}, {"id": 365, "seek": 152620, "start": 1539.0800000000002, "end": 1541.32, "text": " But we didn't try to do that.", "tokens": [51008, 583, 321, 994, 380, 853, 281, 360, 300, 13, 51120], "temperature": 0.0, "avg_logprob": -0.21701360906212075, "compression_ratio": 1.642570281124498, "no_speech_prob": 0.0014548636972904205}, {"id": 366, "seek": 152620, "start": 1541.32, "end": 1544.1200000000001, "text": " But yeah, great question.", "tokens": [51120, 583, 1338, 11, 869, 1168, 13, 51260], "temperature": 0.0, "avg_logprob": -0.21701360906212075, "compression_ratio": 1.642570281124498, "no_speech_prob": 0.0014548636972904205}, {"id": 367, "seek": 152620, "start": 1544.1200000000001, "end": 1548.24, "text": " OK, so then we want to quantify by measuring the success rate.", "tokens": [51260, 2264, 11, 370, 550, 321, 528, 281, 40421, 538, 13389, 264, 2245, 3314, 13, 51466], "temperature": 0.0, "avg_logprob": -0.21701360906212075, "compression_ratio": 1.642570281124498, "no_speech_prob": 0.0014548636972904205}, {"id": 368, "seek": 152620, "start": 1548.24, "end": 1554.6000000000001, "text": " So we get all these pairs of prompts that are supposedly supposed to be new failures.", "tokens": [51466, 407, 321, 483, 439, 613, 15494, 295, 41095, 300, 366, 20581, 3442, 281, 312, 777, 20774, 13, 51784], "temperature": 0.0, "avg_logprob": -0.21701360906212075, "compression_ratio": 1.642570281124498, "no_speech_prob": 0.0014548636972904205}, {"id": 369, "seek": 155460, "start": 1554.6, "end": 1556.9599999999998, "text": " So we can do this in two ways.", "tokens": [50364, 407, 321, 393, 360, 341, 294, 732, 2098, 13, 50482], "temperature": 0.0, "avg_logprob": -0.1250392096383231, "compression_ratio": 1.6827309236947792, "no_speech_prob": 0.00016344280447810888}, {"id": 370, "seek": 155460, "start": 1556.9599999999998, "end": 1564.6399999999999, "text": " We can look at the fraction of things generated that are hash collisions in the same sense as before.", "tokens": [50482, 492, 393, 574, 412, 264, 14135, 295, 721, 10833, 300, 366, 22019, 46537, 294, 264, 912, 2020, 382, 949, 13, 50866], "temperature": 0.0, "avg_logprob": -0.1250392096383231, "compression_ratio": 1.6827309236947792, "no_speech_prob": 0.00016344280447810888}, {"id": 371, "seek": 155460, "start": 1564.6399999999999, "end": 1567.6799999999998, "text": " So that's kind of an easy thing to do.", "tokens": [50866, 407, 300, 311, 733, 295, 364, 1858, 551, 281, 360, 13, 51018], "temperature": 0.0, "avg_logprob": -0.1250392096383231, "compression_ratio": 1.6827309236947792, "no_speech_prob": 0.00016344280447810888}, {"id": 372, "seek": 155460, "start": 1567.6799999999998, "end": 1571.12, "text": " At some point, we want to make sure that the system is actually doing something", "tokens": [51018, 1711, 512, 935, 11, 321, 528, 281, 652, 988, 300, 264, 1185, 307, 767, 884, 746, 51190], "temperature": 0.0, "avg_logprob": -0.1250392096383231, "compression_ratio": 1.6827309236947792, "no_speech_prob": 0.00016344280447810888}, {"id": 373, "seek": 155460, "start": 1571.12, "end": 1576.4399999999998, "text": " and that the something doesn't involve trusting that LLMs are good at their job.", "tokens": [51190, 293, 300, 264, 746, 1177, 380, 9494, 28235, 300, 441, 43, 26386, 366, 665, 412, 641, 1691, 13, 51456], "temperature": 0.0, "avg_logprob": -0.1250392096383231, "compression_ratio": 1.6827309236947792, "no_speech_prob": 0.00016344280447810888}, {"id": 374, "seek": 155460, "start": 1576.4399999999998, "end": 1583.8799999999999, "text": " So we also do a human evaluation where we look at downstream systems that rely on clip", "tokens": [51456, 407, 321, 611, 360, 257, 1952, 13344, 689, 321, 574, 412, 30621, 3652, 300, 10687, 322, 7353, 51828], "temperature": 0.0, "avg_logprob": -0.1250392096383231, "compression_ratio": 1.6827309236947792, "no_speech_prob": 0.00016344280447810888}, {"id": 375, "seek": 158388, "start": 1583.96, "end": 1589.44, "text": " and ask humans if there's a failure to make sure that these actually are failures", "tokens": [50368, 293, 1029, 6255, 498, 456, 311, 257, 7763, 281, 652, 988, 300, 613, 767, 366, 20774, 50642], "temperature": 0.0, "avg_logprob": -0.1345853328704834, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.00023048034927342087}, {"id": 376, "seek": 158388, "start": 1589.44, "end": 1593.5600000000002, "text": " and not just happen to have high cosine similarity.", "tokens": [50642, 293, 406, 445, 1051, 281, 362, 1090, 23565, 32194, 13, 50848], "temperature": 0.0, "avg_logprob": -0.1345853328704834, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.00023048034927342087}, {"id": 377, "seek": 158388, "start": 1593.5600000000002, "end": 1596.0400000000002, "text": " So those are the two things we do.", "tokens": [50848, 407, 729, 366, 264, 732, 721, 321, 360, 13, 50972], "temperature": 0.0, "avg_logprob": -0.1345853328704834, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.00023048034927342087}, {"id": 378, "seek": 158388, "start": 1596.0400000000002, "end": 1599.0, "text": " So let's kind of go over the results.", "tokens": [50972, 407, 718, 311, 733, 295, 352, 670, 264, 3542, 13, 51120], "temperature": 0.0, "avg_logprob": -0.1345853328704834, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.00023048034927342087}, {"id": 379, "seek": 158388, "start": 1599.0, "end": 1605.24, "text": " So first, just kind of looking at hash collisions,", "tokens": [51120, 407, 700, 11, 445, 733, 295, 1237, 412, 22019, 46537, 11, 51432], "temperature": 0.0, "avg_logprob": -0.1345853328704834, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.00023048034927342087}, {"id": 380, "seek": 158388, "start": 1605.24, "end": 1610.4, "text": " but testing on these new inputs that were generated.", "tokens": [51432, 457, 4997, 322, 613, 777, 15743, 300, 645, 10833, 13, 51690], "temperature": 0.0, "avg_logprob": -0.1345853328704834, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.00023048034927342087}, {"id": 381, "seek": 161040, "start": 1610.4, "end": 1618.48, "text": " So we say an input has a success if these similarities are above some threshold.", "tokens": [50364, 407, 321, 584, 364, 4846, 575, 257, 2245, 498, 613, 24197, 366, 3673, 512, 14678, 13, 50768], "temperature": 0.0, "avg_logprob": -0.12935856597064294, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.00012730206071864814}, {"id": 382, "seek": 161040, "start": 1618.48, "end": 1620.76, "text": " And what is this table saying?", "tokens": [50768, 400, 437, 307, 341, 3199, 1566, 30, 50882], "temperature": 0.0, "avg_logprob": -0.12935856597064294, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.00012730206071864814}, {"id": 383, "seek": 161040, "start": 1620.76, "end": 1626.92, "text": " So these rows are kind of the different failures generated by the system.", "tokens": [50882, 407, 613, 13241, 366, 733, 295, 264, 819, 20774, 10833, 538, 264, 1185, 13, 51190], "temperature": 0.0, "avg_logprob": -0.12935856597064294, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.00012730206071864814}, {"id": 384, "seek": 161040, "start": 1626.92, "end": 1630.48, "text": " And actually, we considered six different systems.", "tokens": [51190, 400, 767, 11, 321, 4888, 2309, 819, 3652, 13, 51368], "temperature": 0.0, "avg_logprob": -0.12935856597064294, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.00012730206071864814}, {"id": 385, "seek": 161040, "start": 1630.48, "end": 1636.6000000000001, "text": " So you can ask different models to look at the data and propose hypotheses.", "tokens": [51368, 407, 291, 393, 1029, 819, 5245, 281, 574, 412, 264, 1412, 293, 17421, 49969, 13, 51674], "temperature": 0.0, "avg_logprob": -0.12935856597064294, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.00012730206071864814}, {"id": 386, "seek": 163660, "start": 1636.6, "end": 1641.8, "text": " So these are different kind of proposal models, GPT-4-Claude or GPT-3.5.", "tokens": [50364, 407, 613, 366, 819, 733, 295, 11494, 5245, 11, 26039, 51, 12, 19, 12, 34, 875, 2303, 420, 26039, 51, 12, 18, 13, 20, 13, 50624], "temperature": 0.0, "avg_logprob": -0.18232257411165056, "compression_ratio": 1.5578512396694215, "no_speech_prob": 0.00013550969015341252}, {"id": 387, "seek": 163660, "start": 1641.8, "end": 1648.6799999999998, "text": " And then you can also vary the data set that you used to actually get these failures out.", "tokens": [50624, 400, 550, 291, 393, 611, 10559, 264, 1412, 992, 300, 291, 1143, 281, 767, 483, 613, 20774, 484, 13, 50968], "temperature": 0.0, "avg_logprob": -0.18232257411165056, "compression_ratio": 1.5578512396694215, "no_speech_prob": 0.00013550969015341252}, {"id": 388, "seek": 163660, "start": 1648.6799999999998, "end": 1654.1599999999999, "text": " So these are the two data sets that people asked about before, COCO and SNLI.", "tokens": [50968, 407, 613, 366, 264, 732, 1412, 6352, 300, 561, 2351, 466, 949, 11, 3002, 12322, 293, 13955, 48718, 13, 51242], "temperature": 0.0, "avg_logprob": -0.18232257411165056, "compression_ratio": 1.5578512396694215, "no_speech_prob": 0.00013550969015341252}, {"id": 389, "seek": 163660, "start": 1654.1599999999999, "end": 1656.84, "text": " So I guess a couple interesting things.", "tokens": [51242, 407, 286, 2041, 257, 1916, 1880, 721, 13, 51376], "temperature": 0.0, "avg_logprob": -0.18232257411165056, "compression_ratio": 1.5578512396694215, "no_speech_prob": 0.00013550969015341252}, {"id": 390, "seek": 163660, "start": 1656.84, "end": 1666.32, "text": " One is that, oh, and a check mark means that the model generated the failure at all in its list.", "tokens": [51376, 1485, 307, 300, 11, 1954, 11, 293, 257, 1520, 1491, 1355, 300, 264, 2316, 10833, 264, 7763, 412, 439, 294, 1080, 1329, 13, 51850], "temperature": 0.0, "avg_logprob": -0.18232257411165056, "compression_ratio": 1.5578512396694215, "no_speech_prob": 0.00013550969015341252}, {"id": 391, "seek": 166632, "start": 1666.36, "end": 1675.6799999999998, "text": " And then the color is kind of the success rate of generating new inputs conditional on that failure description.", "tokens": [50366, 400, 550, 264, 2017, 307, 733, 295, 264, 2245, 3314, 295, 17746, 777, 15743, 27708, 322, 300, 7763, 3855, 13, 50832], "temperature": 0.0, "avg_logprob": -0.17081410006472939, "compression_ratio": 1.4313725490196079, "no_speech_prob": 7.030669075902551e-05}, {"id": 392, "seek": 166632, "start": 1675.6799999999998, "end": 1678.08, "text": " So a couple interesting things.", "tokens": [50832, 407, 257, 1916, 1880, 721, 13, 50952], "temperature": 0.0, "avg_logprob": -0.17081410006472939, "compression_ratio": 1.4313725490196079, "no_speech_prob": 7.030669075902551e-05}, {"id": 393, "seek": 166632, "start": 1678.08, "end": 1681.36, "text": " First of all, the data set seems to actually matter.", "tokens": [50952, 2386, 295, 439, 11, 264, 1412, 992, 2544, 281, 767, 1871, 13, 51116], "temperature": 0.0, "avg_logprob": -0.17081410006472939, "compression_ratio": 1.4313725490196079, "no_speech_prob": 7.030669075902551e-05}, {"id": 394, "seek": 166632, "start": 1681.36, "end": 1693.6399999999999, "text": " So kind of for both GPT-4 and Claude, action, well, OK, maybe let's pick a more intuitive one.", "tokens": [51116, 407, 733, 295, 337, 1293, 26039, 51, 12, 19, 293, 12947, 2303, 11, 3069, 11, 731, 11, 2264, 11, 1310, 718, 311, 1888, 257, 544, 21769, 472, 13, 51730], "temperature": 0.0, "avg_logprob": -0.17081410006472939, "compression_ratio": 1.4313725490196079, "no_speech_prob": 7.030669075902551e-05}, {"id": 395, "seek": 169364, "start": 1693.64, "end": 1706.16, "text": " OK, so for both GPT-4 and Claude and GPT-3.5, SNLI elicits granularity as a failure, whereas COCO never does.", "tokens": [50364, 2264, 11, 370, 337, 1293, 26039, 51, 12, 19, 293, 12947, 2303, 293, 26039, 51, 12, 18, 13, 20, 11, 13955, 48718, 806, 299, 1208, 39962, 507, 382, 257, 7763, 11, 9735, 3002, 12322, 1128, 775, 13, 50990], "temperature": 0.0, "avg_logprob": -0.1067192529894642, "compression_ratio": 1.482905982905983, "no_speech_prob": 0.0021824403665959835}, {"id": 396, "seek": 169364, "start": 1706.16, "end": 1708.96, "text": " And sometimes it's kind of not quite so systematic.", "tokens": [50990, 400, 2171, 309, 311, 733, 295, 406, 1596, 370, 27249, 13, 51130], "temperature": 0.0, "avg_logprob": -0.1067192529894642, "compression_ratio": 1.482905982905983, "no_speech_prob": 0.0021824403665959835}, {"id": 397, "seek": 169364, "start": 1708.96, "end": 1715.1200000000001, "text": " But in general, it sort of seems like these data sets actually do kind of like elicit different failures.", "tokens": [51130, 583, 294, 2674, 11, 309, 1333, 295, 2544, 411, 613, 1412, 6352, 767, 360, 733, 295, 411, 806, 8876, 819, 20774, 13, 51438], "temperature": 0.0, "avg_logprob": -0.1067192529894642, "compression_ratio": 1.482905982905983, "no_speech_prob": 0.0021824403665959835}, {"id": 398, "seek": 169364, "start": 1715.1200000000001, "end": 1721.4, "text": " So there is at least some dependence on the data, which is somewhat reassuring.", "tokens": [51438, 407, 456, 307, 412, 1935, 512, 31704, 322, 264, 1412, 11, 597, 307, 8344, 19486, 1345, 13, 51752], "temperature": 0.0, "avg_logprob": -0.1067192529894642, "compression_ratio": 1.482905982905983, "no_speech_prob": 0.0021824403665959835}, {"id": 399, "seek": 172140, "start": 1721.4, "end": 1728.2800000000002, "text": " The other thing is maybe as expected, GPT-4 and Claude in general find many more failures than GPT-3.5 does.", "tokens": [50364, 440, 661, 551, 307, 1310, 382, 5176, 11, 26039, 51, 12, 19, 293, 12947, 2303, 294, 2674, 915, 867, 544, 20774, 813, 26039, 51, 12, 18, 13, 20, 775, 13, 50708], "temperature": 0.0, "avg_logprob": -0.10707725060952676, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.00020341514027677476}, {"id": 400, "seek": 172140, "start": 1728.2800000000002, "end": 1734.0400000000002, "text": " So these better models actually generate more distinct hypotheses.", "tokens": [50708, 407, 613, 1101, 5245, 767, 8460, 544, 10644, 49969, 13, 50996], "temperature": 0.0, "avg_logprob": -0.10707725060952676, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.00020341514027677476}, {"id": 401, "seek": 172140, "start": 1734.0400000000002, "end": 1747.5600000000002, "text": " And then a final thing that is interesting is actually even for the same failure, bigger models often are giving you higher success rates.", "tokens": [50996, 400, 550, 257, 2572, 551, 300, 307, 1880, 307, 767, 754, 337, 264, 912, 7763, 11, 3801, 5245, 2049, 366, 2902, 291, 2946, 2245, 6846, 13, 51672], "temperature": 0.0, "avg_logprob": -0.10707725060952676, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.00020341514027677476}, {"id": 402, "seek": 174756, "start": 1747.56, "end": 1752.48, "text": " So you can see this in a couple places like for granularity.", "tokens": [50364, 407, 291, 393, 536, 341, 294, 257, 1916, 3190, 411, 337, 39962, 507, 13, 50610], "temperature": 0.0, "avg_logprob": -0.10427850723266602, "compression_ratio": 1.5803108808290156, "no_speech_prob": 0.020953170955181122}, {"id": 403, "seek": 174756, "start": 1752.48, "end": 1762.2, "text": " The description of the granularity failure that GPT-4 generated was apparently better in terms of if you then hand that back to GPT-4,", "tokens": [50610, 440, 3855, 295, 264, 39962, 507, 7763, 300, 26039, 51, 12, 19, 10833, 390, 7970, 1101, 294, 2115, 295, 498, 291, 550, 1011, 300, 646, 281, 26039, 51, 12, 19, 11, 51096], "temperature": 0.0, "avg_logprob": -0.10427850723266602, "compression_ratio": 1.5803108808290156, "no_speech_prob": 0.020953170955181122}, {"id": 404, "seek": 174756, "start": 1762.2, "end": 1772.28, "text": " it more successfully generates novel failure instances compared to the kind of description that GPT-3.5 gave.", "tokens": [51096, 309, 544, 10727, 23815, 7613, 7763, 14519, 5347, 281, 264, 733, 295, 3855, 300, 26039, 51, 12, 18, 13, 20, 2729, 13, 51600], "temperature": 0.0, "avg_logprob": -0.10427850723266602, "compression_ratio": 1.5803108808290156, "no_speech_prob": 0.020953170955181122}, {"id": 405, "seek": 177228, "start": 1772.28, "end": 1777.36, "text": " In all of these cases, we're fixing GPT-4 as kind of the thing that's generating new failures.", "tokens": [50364, 682, 439, 295, 613, 3331, 11, 321, 434, 19442, 26039, 51, 12, 19, 382, 733, 295, 264, 551, 300, 311, 17746, 777, 20774, 13, 50618], "temperature": 0.0, "avg_logprob": -0.19458266272061114, "compression_ratio": 1.497175141242938, "no_speech_prob": 0.0019873715937137604}, {"id": 406, "seek": 177228, "start": 1777.36, "end": 1780.48, "text": " So there's no effect from that.", "tokens": [50618, 407, 456, 311, 572, 1802, 490, 300, 13, 50774], "temperature": 0.0, "avg_logprob": -0.19458266272061114, "compression_ratio": 1.497175141242938, "no_speech_prob": 0.0019873715937137604}, {"id": 407, "seek": 177228, "start": 1780.48, "end": 1787.0, "text": " So this kind of difference is just coming from the actual text description output by them all.", "tokens": [50774, 407, 341, 733, 295, 2649, 307, 445, 1348, 490, 264, 3539, 2487, 3855, 5598, 538, 552, 439, 13, 51100], "temperature": 0.0, "avg_logprob": -0.19458266272061114, "compression_ratio": 1.497175141242938, "no_speech_prob": 0.0019873715937137604}, {"id": 408, "seek": 177228, "start": 1787.0, "end": 1796.72, "text": " So are there any questions about this data?", "tokens": [51100, 407, 366, 456, 604, 1651, 466, 341, 1412, 30, 51586], "temperature": 0.0, "avg_logprob": -0.19458266272061114, "compression_ratio": 1.497175141242938, "no_speech_prob": 0.0019873715937137604}, {"id": 409, "seek": 179672, "start": 1796.72, "end": 1811.64, "text": " What more is left about when GPT-4 does better than GPT-3.5, is it because it better understood the instruction versus maybe GPT-3.5 also understood the description,", "tokens": [50364, 708, 544, 307, 1411, 466, 562, 26039, 51, 12, 19, 775, 1101, 813, 26039, 51, 12, 18, 13, 20, 11, 307, 309, 570, 309, 1101, 7320, 264, 10951, 5717, 1310, 26039, 51, 12, 18, 13, 20, 611, 7320, 264, 3855, 11, 51110], "temperature": 0.0, "avg_logprob": -0.3557843872995088, "compression_ratio": 1.5212765957446808, "no_speech_prob": 0.17210236191749573}, {"id": 410, "seek": 179672, "start": 1811.64, "end": 1824.16, "text": " but somehow the examples were very just curious what sort of qualitative differences are there between different models.", "tokens": [51110, 457, 6063, 264, 5110, 645, 588, 445, 6369, 437, 1333, 295, 31312, 7300, 366, 456, 1296, 819, 5245, 13, 51736], "temperature": 0.0, "avg_logprob": -0.3557843872995088, "compression_ratio": 1.5212765957446808, "no_speech_prob": 0.17210236191749573}, {"id": 411, "seek": 182416, "start": 1825.0800000000002, "end": 1829.72, "text": " So I haven't thought about this a ton.", "tokens": [50410, 407, 286, 2378, 380, 1194, 466, 341, 257, 2952, 13, 50642], "temperature": 0.0, "avg_logprob": -0.1600752842577198, "compression_ratio": 1.5272727272727273, "no_speech_prob": 0.015898214653134346}, {"id": 412, "seek": 182416, "start": 1829.72, "end": 1841.28, "text": " I think my two main hypotheses here would be, I believe GPT-4 has a larger context window so it can see more examples, which might be useful.", "tokens": [50642, 286, 519, 452, 732, 2135, 49969, 510, 576, 312, 11, 286, 1697, 26039, 51, 12, 19, 575, 257, 4833, 4319, 4910, 370, 309, 393, 536, 544, 5110, 11, 597, 1062, 312, 4420, 13, 51220], "temperature": 0.0, "avg_logprob": -0.1600752842577198, "compression_ratio": 1.5272727272727273, "no_speech_prob": 0.015898214653134346}, {"id": 413, "seek": 182416, "start": 1841.28, "end": 1854.0400000000002, "text": " But I think probably the more important thing is actually just that the task of proposing hypotheses from a data set is actually a pretty challenging task.", "tokens": [51220, 583, 286, 519, 1391, 264, 544, 1021, 551, 307, 767, 445, 300, 264, 5633, 295, 29939, 49969, 490, 257, 1412, 992, 307, 767, 257, 1238, 7595, 5633, 13, 51858], "temperature": 0.0, "avg_logprob": -0.1600752842577198, "compression_ratio": 1.5272727272727273, "no_speech_prob": 0.015898214653134346}, {"id": 414, "seek": 185404, "start": 1854.04, "end": 1860.24, "text": " And so even kind of frontier models are not that good at it.", "tokens": [50364, 400, 370, 754, 733, 295, 35853, 5245, 366, 406, 300, 665, 412, 309, 13, 50674], "temperature": 0.0, "avg_logprob": -0.19266250353901326, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.0008289701072499156}, {"id": 415, "seek": 185404, "start": 1860.24, "end": 1871.52, "text": " So then once you drop down from GPT-4 to GPT-3.5, you're kind of losing, probably just losing too much capability for it to be super consistent.", "tokens": [50674, 407, 550, 1564, 291, 3270, 760, 490, 26039, 51, 12, 19, 281, 26039, 51, 12, 18, 13, 20, 11, 291, 434, 733, 295, 7027, 11, 1391, 445, 7027, 886, 709, 13759, 337, 309, 281, 312, 1687, 8398, 13, 51238], "temperature": 0.0, "avg_logprob": -0.19266250353901326, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.0008289701072499156}, {"id": 416, "seek": 185404, "start": 1871.52, "end": 1873.08, "text": " That would be my hypothesis.", "tokens": [51238, 663, 576, 312, 452, 17291, 13, 51316], "temperature": 0.0, "avg_logprob": -0.19266250353901326, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.0008289701072499156}, {"id": 417, "seek": 185404, "start": 1873.08, "end": 1873.8799999999999, "text": " I don't know.", "tokens": [51316, 286, 500, 380, 458, 13, 51356], "temperature": 0.0, "avg_logprob": -0.19266250353901326, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.0008289701072499156}, {"id": 418, "seek": 185404, "start": 1873.8799999999999, "end": 1874.56, "text": " Yeah, Richie.", "tokens": [51356, 865, 11, 6781, 414, 13, 51390], "temperature": 0.0, "avg_logprob": -0.19266250353901326, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.0008289701072499156}, {"id": 419, "seek": 185404, "start": 1874.56, "end": 1883.04, "text": " Yeah, so in practice, we found that GPT-3.5 doesn't really condition on the data very well, while GPT-4 actually does condition on the data.", "tokens": [51390, 865, 11, 370, 294, 3124, 11, 321, 1352, 300, 26039, 51, 12, 18, 13, 20, 1177, 380, 534, 4188, 322, 264, 1412, 588, 731, 11, 1339, 26039, 51, 12, 19, 767, 775, 4188, 322, 264, 1412, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19266250353901326, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.0008289701072499156}, {"id": 420, "seek": 188304, "start": 1883.04, "end": 1885.04, "text": " And then describe the same thing that they do.", "tokens": [50364, 400, 550, 6786, 264, 912, 551, 300, 436, 360, 13, 50464], "temperature": 0.0, "avg_logprob": -0.4298393192575939, "compression_ratio": 1.6222222222222222, "no_speech_prob": 0.0033220467157661915}, {"id": 421, "seek": 188304, "start": 1888.04, "end": 1889.04, "text": " Yes?", "tokens": [50614, 1079, 30, 50664], "temperature": 0.0, "avg_logprob": -0.4298393192575939, "compression_ratio": 1.6222222222222222, "no_speech_prob": 0.0033220467157661915}, {"id": 422, "seek": 188304, "start": 1889.04, "end": 1898.6, "text": " If I have the samples that the model generated actually fall into those categories, so maybe they overlap with some other categories.", "tokens": [50664, 759, 286, 362, 264, 10938, 300, 264, 2316, 10833, 767, 2100, 666, 729, 10479, 11, 370, 1310, 436, 19959, 365, 512, 661, 10479, 13, 51142], "temperature": 0.0, "avg_logprob": -0.4298393192575939, "compression_ratio": 1.6222222222222222, "no_speech_prob": 0.0033220467157661915}, {"id": 423, "seek": 188304, "start": 1898.6, "end": 1908.8, "text": " So I don't think we did a systematic evaluation of whether all of the examples fall into those categories.", "tokens": [51142, 407, 286, 500, 380, 519, 321, 630, 257, 27249, 13344, 295, 1968, 439, 295, 264, 5110, 2100, 666, 729, 10479, 13, 51652], "temperature": 0.0, "avg_logprob": -0.4298393192575939, "compression_ratio": 1.6222222222222222, "no_speech_prob": 0.0033220467157661915}, {"id": 424, "seek": 190880, "start": 1909.56, "end": 1916.56, "text": " Yeah, I can give some orders on the next slide that get at least implicitly at that.", "tokens": [50402, 865, 11, 286, 393, 976, 512, 9470, 322, 264, 958, 4137, 300, 483, 412, 1935, 26947, 356, 412, 300, 13, 50752], "temperature": 0.0, "avg_logprob": -0.18615374357804007, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0032727729994803667}, {"id": 425, "seek": 190880, "start": 1916.56, "end": 1920.56, "text": " It looked like maybe someone else had a question.", "tokens": [50752, 467, 2956, 411, 1310, 1580, 1646, 632, 257, 1168, 13, 50952], "temperature": 0.0, "avg_logprob": -0.18615374357804007, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0032727729994803667}, {"id": 426, "seek": 190880, "start": 1920.56, "end": 1928.56, "text": " OK, so maybe let's go to the human evaluation, which will at least partially answer your question.", "tokens": [50952, 2264, 11, 370, 1310, 718, 311, 352, 281, 264, 1952, 13344, 11, 597, 486, 412, 1935, 18886, 1867, 428, 1168, 13, 51352], "temperature": 0.0, "avg_logprob": -0.18615374357804007, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0032727729994803667}, {"id": 427, "seek": 190880, "start": 1928.56, "end": 1938.56, "text": " So we wanted to not just stick with saying that you actually get these hash collisions, but show that these actually lead to images that humans say are wrong.", "tokens": [51352, 407, 321, 1415, 281, 406, 445, 2897, 365, 1566, 300, 291, 767, 483, 613, 22019, 46537, 11, 457, 855, 300, 613, 767, 1477, 281, 5267, 300, 6255, 584, 366, 2085, 13, 51852], "temperature": 0.0, "avg_logprob": -0.18615374357804007, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0032727729994803667}, {"id": 428, "seek": 193856, "start": 1939.32, "end": 1950.32, "text": " So, OK, darn, the text here is a little bit small, but this is kind of the human annotator interface that we gave.", "tokens": [50402, 407, 11, 2264, 11, 29063, 11, 264, 2487, 510, 307, 257, 707, 857, 1359, 11, 457, 341, 307, 733, 295, 264, 1952, 25339, 1639, 9226, 300, 321, 2729, 13, 50952], "temperature": 0.0, "avg_logprob": -0.1818457992983536, "compression_ratio": 1.56875, "no_speech_prob": 0.0024718863423913717}, {"id": 429, "seek": 193856, "start": 1950.32, "end": 1959.32, "text": " So we had prompt one, a city skyline with a bridge, prompt two, a city skyline without a bridge.", "tokens": [50952, 407, 321, 632, 12391, 472, 11, 257, 2307, 5443, 1889, 365, 257, 7283, 11, 12391, 732, 11, 257, 2307, 5443, 1889, 1553, 257, 7283, 13, 51402], "temperature": 0.0, "avg_logprob": -0.1818457992983536, "compression_ratio": 1.56875, "no_speech_prob": 0.0024718863423913717}, {"id": 430, "seek": 193856, "start": 1959.32, "end": 1962.32, "text": " So this is this kind of collision pair.", "tokens": [51402, 407, 341, 307, 341, 733, 295, 24644, 6119, 13, 51552], "temperature": 0.0, "avg_logprob": -0.1818457992983536, "compression_ratio": 1.56875, "no_speech_prob": 0.0024718863423913717}, {"id": 431, "seek": 196232, "start": 1962.32, "end": 1972.32, "text": " This is an image that came from one of these two prompts chosen at random.", "tokens": [50364, 639, 307, 364, 3256, 300, 1361, 490, 472, 295, 613, 732, 41095, 8614, 412, 4974, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10022225099451401, "compression_ratio": 1.7063492063492063, "no_speech_prob": 0.008059724234044552}, {"id": 432, "seek": 196232, "start": 1972.32, "end": 1984.32, "text": " And so the annotator has to say either that this corresponds to prompt one, it corresponds to prompt two, it corresponds to neither of them,", "tokens": [50864, 400, 370, 264, 25339, 1639, 575, 281, 584, 2139, 300, 341, 23249, 281, 12391, 472, 11, 309, 23249, 281, 12391, 732, 11, 309, 23249, 281, 9662, 295, 552, 11, 51464], "temperature": 0.0, "avg_logprob": -0.10022225099451401, "compression_ratio": 1.7063492063492063, "no_speech_prob": 0.008059724234044552}, {"id": 433, "seek": 198432, "start": 1985.32, "end": 1990.32, "text": " or these prompts are described visually identical situations.", "tokens": [50414, 420, 613, 41095, 366, 7619, 19622, 14800, 6851, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11485687402578501, "compression_ratio": 1.5159574468085106, "no_speech_prob": 0.017436208203434944}, {"id": 434, "seek": 198432, "start": 1990.32, "end": 1997.32, "text": " So this kind of gets at your earlier question, Alyosha, on whether these are actually semantically different.", "tokens": [50664, 407, 341, 733, 295, 2170, 412, 428, 3071, 1168, 11, 27008, 329, 1641, 11, 322, 1968, 613, 366, 767, 4361, 49505, 819, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11485687402578501, "compression_ratio": 1.5159574468085106, "no_speech_prob": 0.017436208203434944}, {"id": 435, "seek": 198432, "start": 1997.32, "end": 2009.32, "text": " And so we're kind of measuring what counts as a successful failure, either if the annotator says that it's wrong,", "tokens": [51014, 400, 370, 321, 434, 733, 295, 13389, 437, 14893, 382, 257, 4406, 7763, 11, 2139, 498, 264, 25339, 1639, 1619, 300, 309, 311, 2085, 11, 51614], "temperature": 0.0, "avg_logprob": -0.11485687402578501, "compression_ratio": 1.5159574468085106, "no_speech_prob": 0.017436208203434944}, {"id": 436, "seek": 200932, "start": 2009.32, "end": 2015.32, "text": " or if they say it's prompt two, but it was actually generated by prompt one, or vice versa.", "tokens": [50364, 420, 498, 436, 584, 309, 311, 12391, 732, 11, 457, 309, 390, 767, 10833, 538, 12391, 472, 11, 420, 11964, 25650, 13, 50664], "temperature": 0.0, "avg_logprob": -0.08491608926228114, "compression_ratio": 1.4625, "no_speech_prob": 0.00232279347255826}, {"id": 437, "seek": 200932, "start": 2015.32, "end": 2029.32, "text": " And so then you can look at the kind of rate at which mistakes are made conditional on different levels of clip similarity in the two prompts.", "tokens": [50664, 400, 370, 550, 291, 393, 574, 412, 264, 733, 295, 3314, 412, 597, 8038, 366, 1027, 27708, 322, 819, 4358, 295, 7353, 32194, 294, 264, 732, 41095, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08491608926228114, "compression_ratio": 1.4625, "no_speech_prob": 0.00232279347255826}, {"id": 438, "seek": 202932, "start": 2029.32, "end": 2033.32, "text": " So this is kind of testing that high similarity actually leads to failures.", "tokens": [50364, 407, 341, 307, 733, 295, 4997, 300, 1090, 32194, 767, 6689, 281, 20774, 13, 50564], "temperature": 0.0, "avg_logprob": -0.12409859895706177, "compression_ratio": 1.69, "no_speech_prob": 0.07367286086082458}, {"id": 439, "seek": 202932, "start": 2033.32, "end": 2039.32, "text": " And you can kind of see there's this like inflection point at like 0.88.", "tokens": [50564, 400, 291, 393, 733, 295, 536, 456, 311, 341, 411, 1536, 5450, 935, 412, 411, 1958, 13, 16919, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12409859895706177, "compression_ratio": 1.69, "no_speech_prob": 0.07367286086082458}, {"id": 440, "seek": 202932, "start": 2039.32, "end": 2047.32, "text": " So this is kind of one verifying that actually we do get pretty high rates of failure,", "tokens": [50864, 407, 341, 307, 733, 295, 472, 1306, 5489, 300, 767, 321, 360, 483, 1238, 1090, 6846, 295, 7763, 11, 51264], "temperature": 0.0, "avg_logprob": -0.12409859895706177, "compression_ratio": 1.69, "no_speech_prob": 0.07367286086082458}, {"id": 441, "seek": 202932, "start": 2047.32, "end": 2053.3199999999997, "text": " and two that this magical threshold I told you about earlier is actually kind of reasonable threshold.", "tokens": [51264, 293, 732, 300, 341, 12066, 14678, 286, 1907, 291, 466, 3071, 307, 767, 733, 295, 10585, 14678, 13, 51564], "temperature": 0.0, "avg_logprob": -0.12409859895706177, "compression_ratio": 1.69, "no_speech_prob": 0.07367286086082458}, {"id": 442, "seek": 205332, "start": 2053.32, "end": 2060.32, "text": " And then finally, to get at this question of whether these descriptions are actually doing anything.", "tokens": [50364, 400, 550, 2721, 11, 281, 483, 412, 341, 1168, 295, 1968, 613, 24406, 366, 767, 884, 1340, 13, 50714], "temperature": 0.0, "avg_logprob": -0.05534764436575083, "compression_ratio": 1.7630331753554502, "no_speech_prob": 0.0006070527015253901}, {"id": 443, "seek": 205332, "start": 2060.32, "end": 2064.32, "text": " So I guess this doesn't test whether the failures correspond to the descriptions,", "tokens": [50714, 407, 286, 2041, 341, 1177, 380, 1500, 1968, 264, 20774, 6805, 281, 264, 24406, 11, 50914], "temperature": 0.0, "avg_logprob": -0.05534764436575083, "compression_ratio": 1.7630331753554502, "no_speech_prob": 0.0006070527015253901}, {"id": 444, "seek": 205332, "start": 2064.32, "end": 2069.32, "text": " but it tests that the descriptions are actually needed to get high failure rates.", "tokens": [50914, 457, 309, 6921, 300, 264, 24406, 366, 767, 2978, 281, 483, 1090, 7763, 6846, 13, 51164], "temperature": 0.0, "avg_logprob": -0.05534764436575083, "compression_ratio": 1.7630331753554502, "no_speech_prob": 0.0006070527015253901}, {"id": 445, "seek": 205332, "start": 2069.32, "end": 2075.32, "text": " If you have a baseline system where you just ask it to like brainstorm possible failures images might have,", "tokens": [51164, 759, 291, 362, 257, 20518, 1185, 689, 291, 445, 1029, 309, 281, 411, 35245, 1944, 20774, 5267, 1062, 362, 11, 51464], "temperature": 0.0, "avg_logprob": -0.05534764436575083, "compression_ratio": 1.7630331753554502, "no_speech_prob": 0.0006070527015253901}, {"id": 446, "seek": 207532, "start": 2075.32, "end": 2082.32, "text": " and then condition on those, you only get about 20% failure rate,", "tokens": [50364, 293, 550, 4188, 322, 729, 11, 291, 787, 483, 466, 945, 4, 7763, 3314, 11, 50714], "temperature": 0.0, "avg_logprob": -0.10607842604319255, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.03307954967021942}, {"id": 447, "seek": 207532, "start": 2082.32, "end": 2087.32, "text": " whereas you get an 80% failure rate if you use this data conditioned system.", "tokens": [50714, 9735, 291, 483, 364, 4688, 4, 7763, 3314, 498, 291, 764, 341, 1412, 35833, 1185, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10607842604319255, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.03307954967021942}, {"id": 448, "seek": 207532, "start": 2087.32, "end": 2095.32, "text": " So these are the human evaluated rather than model evaluated equals.", "tokens": [50964, 407, 613, 366, 264, 1952, 25509, 2831, 813, 2316, 25509, 6915, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10607842604319255, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.03307954967021942}, {"id": 449, "seek": 207532, "start": 2095.32, "end": 2102.32, "text": " So are there questions about this?", "tokens": [51364, 407, 366, 456, 1651, 466, 341, 30, 51714], "temperature": 0.0, "avg_logprob": -0.10607842604319255, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.03307954967021942}, {"id": 450, "seek": 210232, "start": 2102.32, "end": 2105.32, "text": " This is a talk where high failure rate is better.", "tokens": [50364, 639, 307, 257, 751, 689, 1090, 7763, 3314, 307, 1101, 13, 50514], "temperature": 0.0, "avg_logprob": -0.11781477420888048, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.005553402006626129}, {"id": 451, "seek": 210232, "start": 2105.32, "end": 2112.32, "text": " Yes, yeah, you want high failure because we're trying to find failures so that we can fix them.", "tokens": [50514, 1079, 11, 1338, 11, 291, 528, 1090, 7763, 570, 321, 434, 1382, 281, 915, 20774, 370, 300, 321, 393, 3191, 552, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11781477420888048, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.005553402006626129}, {"id": 452, "seek": 210232, "start": 2112.32, "end": 2121.32, "text": " Okay, and then I guess a final cool thing is, you know, a kind of really big bonus of having this come from language models", "tokens": [50864, 1033, 11, 293, 550, 286, 2041, 257, 2572, 1627, 551, 307, 11, 291, 458, 11, 257, 733, 295, 534, 955, 10882, 295, 1419, 341, 808, 490, 2856, 5245, 51314], "temperature": 0.0, "avg_logprob": -0.11781477420888048, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.005553402006626129}, {"id": 453, "seek": 210232, "start": 2121.32, "end": 2124.32, "text": " is language models are kind of automatically steerable.", "tokens": [51314, 307, 2856, 5245, 366, 733, 295, 6772, 30814, 712, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11781477420888048, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.005553402006626129}, {"id": 454, "seek": 210232, "start": 2124.32, "end": 2126.32, "text": " Right, so I have this way of generating failures,", "tokens": [51464, 1779, 11, 370, 286, 362, 341, 636, 295, 17746, 20774, 11, 51564], "temperature": 0.0, "avg_logprob": -0.11781477420888048, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.005553402006626129}, {"id": 455, "seek": 212632, "start": 2126.32, "end": 2133.32, "text": " but I can then just ask the model to give me failures that are relevant to some new domain.", "tokens": [50364, 457, 286, 393, 550, 445, 1029, 264, 2316, 281, 976, 385, 20774, 300, 366, 7340, 281, 512, 777, 9274, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10193692040197629, "compression_ratio": 1.768888888888889, "no_speech_prob": 0.04740826413035393}, {"id": 456, "seek": 212632, "start": 2133.32, "end": 2140.32, "text": " And so in this case, we kind of asked it to generate failures that are relevant to self-driving.", "tokens": [50714, 400, 370, 294, 341, 1389, 11, 321, 733, 295, 2351, 309, 281, 8460, 20774, 300, 366, 7340, 281, 2698, 12, 47094, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10193692040197629, "compression_ratio": 1.768888888888889, "no_speech_prob": 0.04740826413035393}, {"id": 457, "seek": 212632, "start": 2140.32, "end": 2146.32, "text": " The data sets are still cocoa and SNLI so we didn't give it data that would specialize to self-driving,", "tokens": [51064, 440, 1412, 6352, 366, 920, 30634, 293, 13955, 48718, 370, 321, 994, 380, 976, 309, 1412, 300, 576, 37938, 281, 2698, 12, 47094, 11, 51364], "temperature": 0.0, "avg_logprob": -0.10193692040197629, "compression_ratio": 1.768888888888889, "no_speech_prob": 0.04740826413035393}, {"id": 458, "seek": 212632, "start": 2146.32, "end": 2154.32, "text": " but it can still kind of generate these failures in this novel domain and still have a good success rate.", "tokens": [51364, 457, 309, 393, 920, 733, 295, 8460, 613, 20774, 294, 341, 7613, 9274, 293, 920, 362, 257, 665, 2245, 3314, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10193692040197629, "compression_ratio": 1.768888888888889, "no_speech_prob": 0.04740826413035393}, {"id": 459, "seek": 215432, "start": 2154.32, "end": 2157.32, "text": " And so these are just kind of examples.", "tokens": [50364, 400, 370, 613, 366, 445, 733, 295, 5110, 13, 50514], "temperature": 0.0, "avg_logprob": -0.09538060314250442, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.001867343788035214}, {"id": 460, "seek": 215432, "start": 2157.32, "end": 2161.32, "text": " Stable diffusion, you have the cars on the right side of the lane, but it's on the left side.", "tokens": [50514, 745, 712, 25242, 11, 291, 362, 264, 5163, 322, 264, 558, 1252, 295, 264, 12705, 11, 457, 309, 311, 322, 264, 1411, 1252, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09538060314250442, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.001867343788035214}, {"id": 461, "seek": 215432, "start": 2161.32, "end": 2164.32, "text": " This is not a green light, gives you a green light.", "tokens": [50714, 639, 307, 406, 257, 3092, 1442, 11, 2709, 291, 257, 3092, 1442, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09538060314250442, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.001867343788035214}, {"id": 462, "seek": 215432, "start": 2164.32, "end": 2173.32, "text": " A yield sign gives you something that is at least not shaped like a yield sign, probably a stop sign.", "tokens": [50864, 316, 11257, 1465, 2709, 291, 746, 300, 307, 412, 1935, 406, 13475, 411, 257, 11257, 1465, 11, 1391, 257, 1590, 1465, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09538060314250442, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.001867343788035214}, {"id": 463, "seek": 215432, "start": 2173.32, "end": 2175.32, "text": " And then a car stops for a red light.", "tokens": [51314, 400, 550, 257, 1032, 10094, 337, 257, 2182, 1442, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09538060314250442, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.001867343788035214}, {"id": 464, "seek": 215432, "start": 2175.32, "end": 2180.32, "text": " This is actually a text to video model and the light is green.", "tokens": [51414, 639, 307, 767, 257, 2487, 281, 960, 2316, 293, 264, 1442, 307, 3092, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09538060314250442, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.001867343788035214}, {"id": 465, "seek": 218032, "start": 2181.32, "end": 2188.32, "text": " What data from cocoa and SNLI are you passing in?", "tokens": [50414, 708, 1412, 490, 30634, 293, 13955, 48718, 366, 291, 8437, 294, 30, 50764], "temperature": 0.0, "avg_logprob": -0.15723876953125, "compression_ratio": 1.6684491978609626, "no_speech_prob": 0.027158521115779877}, {"id": 466, "seek": 218032, "start": 2188.32, "end": 2191.32, "text": " No, no, so you're passing in the text from...", "tokens": [50764, 883, 11, 572, 11, 370, 291, 434, 8437, 294, 264, 2487, 490, 485, 50914], "temperature": 0.0, "avg_logprob": -0.15723876953125, "compression_ratio": 1.6684491978609626, "no_speech_prob": 0.027158521115779877}, {"id": 467, "seek": 218032, "start": 2191.32, "end": 2199.32, "text": " So this is for the very first stage where you're giving it a bunch of just text inputs and embedding them to check for hash collisions.", "tokens": [50914, 407, 341, 307, 337, 264, 588, 700, 3233, 689, 291, 434, 2902, 309, 257, 3840, 295, 445, 2487, 15743, 293, 12240, 3584, 552, 281, 1520, 337, 22019, 46537, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15723876953125, "compression_ratio": 1.6684491978609626, "no_speech_prob": 0.027158521115779877}, {"id": 468, "seek": 218032, "start": 2199.32, "end": 2206.32, "text": " So those hash collisions were from embedding text sentences from cocoa and SNLI.", "tokens": [51314, 407, 729, 22019, 46537, 645, 490, 12240, 3584, 2487, 16579, 490, 30634, 293, 13955, 48718, 13, 51664], "temperature": 0.0, "avg_logprob": -0.15723876953125, "compression_ratio": 1.6684491978609626, "no_speech_prob": 0.027158521115779877}, {"id": 469, "seek": 220632, "start": 2206.32, "end": 2214.32, "text": " So there's actually no images anywhere here except in the output of the systems.", "tokens": [50364, 407, 456, 311, 767, 572, 5267, 4992, 510, 3993, 294, 264, 5598, 295, 264, 3652, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09699748486888651, "compression_ratio": 1.6775510204081632, "no_speech_prob": 0.008441640064120293}, {"id": 470, "seek": 220632, "start": 2214.32, "end": 2220.32, "text": " I'm kind of curious about the hypothesis part of this and whether that's kind of necessary.", "tokens": [50764, 286, 478, 733, 295, 6369, 466, 264, 17291, 644, 295, 341, 293, 1968, 300, 311, 733, 295, 4818, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09699748486888651, "compression_ratio": 1.6775510204081632, "no_speech_prob": 0.008441640064120293}, {"id": 471, "seek": 220632, "start": 2220.32, "end": 2225.32, "text": " So we had a paper a couple years ago and just tried finding these collisions.", "tokens": [51064, 407, 321, 632, 257, 3035, 257, 1916, 924, 2057, 293, 445, 3031, 5006, 613, 46537, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09699748486888651, "compression_ratio": 1.6775510204081632, "no_speech_prob": 0.008441640064120293}, {"id": 472, "seek": 220632, "start": 2225.32, "end": 2231.32, "text": " And I kind of wonder if you could just give it a sentence and like search for a collision and just cut out the language model.", "tokens": [51314, 400, 286, 733, 295, 2441, 498, 291, 727, 445, 976, 309, 257, 8174, 293, 411, 3164, 337, 257, 24644, 293, 445, 1723, 484, 264, 2856, 2316, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09699748486888651, "compression_ratio": 1.6775510204081632, "no_speech_prob": 0.008441640064120293}, {"id": 473, "seek": 220632, "start": 2231.32, "end": 2235.32, "text": " What is it adding in the process?", "tokens": [51614, 708, 307, 309, 5127, 294, 264, 1399, 30, 51814], "temperature": 0.0, "avg_logprob": -0.09699748486888651, "compression_ratio": 1.6775510204081632, "no_speech_prob": 0.008441640064120293}, {"id": 474, "seek": 223532, "start": 2235.32, "end": 2239.32, "text": " Well, finding the initial... Oh, I see.", "tokens": [50364, 1042, 11, 5006, 264, 5883, 485, 876, 11, 286, 536, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13506798034018658, "compression_ratio": 1.6853448275862069, "no_speech_prob": 0.001150995260104537}, {"id": 475, "seek": 223532, "start": 2239.32, "end": 2254.32, "text": " So I think one thing is this steerability I think would be challenging in some cases if you were doing that because you would need a large data set of text in whatever new domain you were looking at.", "tokens": [50564, 407, 286, 519, 472, 551, 307, 341, 30814, 2310, 286, 519, 576, 312, 7595, 294, 512, 3331, 498, 291, 645, 884, 300, 570, 291, 576, 643, 257, 2416, 1412, 992, 295, 2487, 294, 2035, 777, 9274, 291, 645, 1237, 412, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13506798034018658, "compression_ratio": 1.6853448275862069, "no_speech_prob": 0.001150995260104537}, {"id": 476, "seek": 223532, "start": 2254.32, "end": 2262.32, "text": " We don't need a bunch of sentences about self-driving cars to do this, but if you were looking for collisions manually, then you would have to do that.", "tokens": [51314, 492, 500, 380, 643, 257, 3840, 295, 16579, 466, 2698, 12, 47094, 5163, 281, 360, 341, 11, 457, 498, 291, 645, 1237, 337, 46537, 16945, 11, 550, 291, 576, 362, 281, 360, 300, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13506798034018658, "compression_ratio": 1.6853448275862069, "no_speech_prob": 0.001150995260104537}, {"id": 477, "seek": 226232, "start": 2262.32, "end": 2265.32, "text": " I see.", "tokens": [50364, 286, 536, 13, 50514], "temperature": 0.0, "avg_logprob": -0.15174861286961755, "compression_ratio": 1.4481132075471699, "no_speech_prob": 0.0035363591741770506}, {"id": 478, "seek": 226232, "start": 2265.32, "end": 2268.32, "text": " Yeah, cool.", "tokens": [50514, 865, 11, 1627, 13, 50664], "temperature": 0.0, "avg_logprob": -0.15174861286961755, "compression_ratio": 1.4481132075471699, "no_speech_prob": 0.0035363591741770506}, {"id": 479, "seek": 226232, "start": 2268.32, "end": 2277.32, "text": " Okay, so to summarize this, right, we had these four stages of, you know, first we want to get initial data, which we did by scraping hash collisions from this text data set.", "tokens": [50664, 1033, 11, 370, 281, 20858, 341, 11, 558, 11, 321, 632, 613, 1451, 10232, 295, 11, 291, 458, 11, 700, 321, 528, 281, 483, 5883, 1412, 11, 597, 321, 630, 538, 43738, 22019, 46537, 490, 341, 2487, 1412, 992, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15174861286961755, "compression_ratio": 1.4481132075471699, "no_speech_prob": 0.0035363591741770506}, {"id": 480, "seek": 226232, "start": 2277.32, "end": 2282.32, "text": " This kind of invoked these two models clipped into still Roberta.", "tokens": [51114, 639, 733, 295, 1048, 9511, 613, 732, 5245, 596, 5529, 666, 920, 15800, 1328, 13, 51364], "temperature": 0.0, "avg_logprob": -0.15174861286961755, "compression_ratio": 1.4481132075471699, "no_speech_prob": 0.0035363591741770506}, {"id": 481, "seek": 226232, "start": 2282.32, "end": 2286.32, "text": " Then we generate hypotheses by prompting GPT-4.", "tokens": [51364, 1396, 321, 8460, 49969, 538, 12391, 278, 26039, 51, 12, 19, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15174861286961755, "compression_ratio": 1.4481132075471699, "no_speech_prob": 0.0035363591741770506}, {"id": 482, "seek": 228632, "start": 2286.32, "end": 2291.32, "text": " Then we kind of formalize these hypotheses by looking at the success rate of generating new failures.", "tokens": [50364, 1396, 321, 733, 295, 9860, 1125, 613, 49969, 538, 1237, 412, 264, 2245, 3314, 295, 17746, 777, 20774, 13, 50614], "temperature": 0.0, "avg_logprob": -0.0914884343877569, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.025170065462589264}, {"id": 483, "seek": 228632, "start": 2291.32, "end": 2296.32, "text": " So we use GPT-4 to generate the failures and clip to evaluate them.", "tokens": [50614, 407, 321, 764, 26039, 51, 12, 19, 281, 8460, 264, 20774, 293, 7353, 281, 13059, 552, 13, 50864], "temperature": 0.0, "avg_logprob": -0.0914884343877569, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.025170065462589264}, {"id": 484, "seek": 228632, "start": 2296.32, "end": 2301.32, "text": " And then we can also do this active steering, again, prompting GPT-4.", "tokens": [50864, 400, 550, 321, 393, 611, 360, 341, 4967, 14823, 11, 797, 11, 12391, 278, 26039, 51, 12, 19, 13, 51114], "temperature": 0.0, "avg_logprob": -0.0914884343877569, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.025170065462589264}, {"id": 485, "seek": 228632, "start": 2301.32, "end": 2315.32, "text": " So I think one thing I want to highlight here is that, you know, often we think about just having this one language model and we just come up with our super clever prompt that solves everything and maybe do chain of thoughts.", "tokens": [51114, 407, 286, 519, 472, 551, 286, 528, 281, 5078, 510, 307, 300, 11, 291, 458, 11, 2049, 321, 519, 466, 445, 1419, 341, 472, 2856, 2316, 293, 321, 445, 808, 493, 365, 527, 1687, 13494, 12391, 300, 39890, 1203, 293, 1310, 360, 5021, 295, 4598, 13, 51814], "temperature": 0.0, "avg_logprob": -0.0914884343877569, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.025170065462589264}, {"id": 486, "seek": 231532, "start": 2315.32, "end": 2317.32, "text": " And this sort of thing.", "tokens": [50364, 400, 341, 1333, 295, 551, 13, 50464], "temperature": 0.0, "avg_logprob": -0.07397926627815544, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.008844996802508831}, {"id": 487, "seek": 231532, "start": 2317.32, "end": 2332.32, "text": " But I think you can actually get a lot further if you're willing to kind of use this kind of, you know, ecosystem of models together in creative ways.", "tokens": [50464, 583, 286, 519, 291, 393, 767, 483, 257, 688, 3052, 498, 291, 434, 4950, 281, 733, 295, 764, 341, 733, 295, 11, 291, 458, 11, 11311, 295, 5245, 1214, 294, 5880, 2098, 13, 51214], "temperature": 0.0, "avg_logprob": -0.07397926627815544, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.008844996802508831}, {"id": 488, "seek": 231532, "start": 2332.32, "end": 2342.32, "text": " And I think statistics is a particularly kind of good use case for this because there are these different stages of the pipeline that require kind of different skills.", "tokens": [51214, 400, 286, 519, 12523, 307, 257, 4098, 733, 295, 665, 764, 1389, 337, 341, 570, 456, 366, 613, 819, 10232, 295, 264, 15517, 300, 3651, 733, 295, 819, 3942, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07397926627815544, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.008844996802508831}, {"id": 489, "seek": 234232, "start": 2342.32, "end": 2344.32, "text": " And statistics also has some nice properties, right?", "tokens": [50364, 400, 12523, 611, 575, 512, 1481, 7221, 11, 558, 30, 50464], "temperature": 0.0, "avg_logprob": -0.11699897541719324, "compression_ratio": 1.5422222222222222, "no_speech_prob": 0.027578063309192657}, {"id": 490, "seek": 234232, "start": 2344.32, "end": 2350.32, "text": " Like many parts of it are kind of automatically measurable and verifiable.", "tokens": [50464, 1743, 867, 3166, 295, 309, 366, 733, 295, 6772, 43615, 293, 1306, 30876, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11699897541719324, "compression_ratio": 1.5422222222222222, "no_speech_prob": 0.027578063309192657}, {"id": 491, "seek": 234232, "start": 2350.32, "end": 2361.32, "text": " And so you get a lot of the same strengths as Adam was talking about yesterday with computer programming where, you know, you can...", "tokens": [50764, 400, 370, 291, 483, 257, 688, 295, 264, 912, 16986, 382, 7938, 390, 1417, 466, 5186, 365, 3820, 9410, 689, 11, 291, 458, 11, 291, 393, 485, 51314], "temperature": 0.0, "avg_logprob": -0.11699897541719324, "compression_ratio": 1.5422222222222222, "no_speech_prob": 0.027578063309192657}, {"id": 492, "seek": 234232, "start": 2361.32, "end": 2365.32, "text": " We haven't done much of this, but like you can, you know, maybe do this self-training.", "tokens": [51314, 492, 2378, 380, 1096, 709, 295, 341, 11, 457, 411, 291, 393, 11, 291, 458, 11, 1310, 360, 341, 2698, 12, 17227, 1760, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11699897541719324, "compression_ratio": 1.5422222222222222, "no_speech_prob": 0.027578063309192657}, {"id": 493, "seek": 236532, "start": 2365.32, "end": 2375.32, "text": " And maybe if you get models that were really, really, really good at statistics, like superhuman at statistics, because there's so much automatically-generatable data.", "tokens": [50364, 400, 1310, 498, 291, 483, 5245, 300, 645, 534, 11, 534, 11, 534, 665, 412, 12523, 11, 411, 1687, 18796, 412, 12523, 11, 570, 456, 311, 370, 709, 6772, 12, 21848, 31415, 1412, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11269240046656409, "compression_ratio": 1.5613207547169812, "no_speech_prob": 0.08387145400047302}, {"id": 494, "seek": 236532, "start": 2375.32, "end": 2376.32, "text": " Okay.", "tokens": [50864, 1033, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11269240046656409, "compression_ratio": 1.5613207547169812, "no_speech_prob": 0.08387145400047302}, {"id": 495, "seek": 236532, "start": 2376.32, "end": 2380.32, "text": " So that was the first case study.", "tokens": [50914, 407, 300, 390, 264, 700, 1389, 2979, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11269240046656409, "compression_ratio": 1.5613207547169812, "no_speech_prob": 0.08387145400047302}, {"id": 496, "seek": 236532, "start": 2380.32, "end": 2382.32, "text": " Let me go over the second one.", "tokens": [51114, 961, 385, 352, 670, 264, 1150, 472, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11269240046656409, "compression_ratio": 1.5613207547169812, "no_speech_prob": 0.08387145400047302}, {"id": 497, "seek": 236532, "start": 2382.32, "end": 2388.32, "text": " We'll go a bit more quickly now that we've kind of built up a lot of these conceptual ideas.", "tokens": [51214, 492, 603, 352, 257, 857, 544, 2661, 586, 300, 321, 600, 733, 295, 3094, 493, 257, 688, 295, 613, 24106, 3487, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11269240046656409, "compression_ratio": 1.5613207547169812, "no_speech_prob": 0.08387145400047302}, {"id": 498, "seek": 238832, "start": 2388.32, "end": 2400.32, "text": " So here I'm actually going to talk about a kind of meta task that is then going to be useful for lots of individual ways in which we would want to understand language models.", "tokens": [50364, 407, 510, 286, 478, 767, 516, 281, 751, 466, 257, 733, 295, 19616, 5633, 300, 307, 550, 516, 281, 312, 4420, 337, 3195, 295, 2609, 2098, 294, 597, 321, 576, 528, 281, 1223, 2856, 5245, 13, 50964], "temperature": 0.0, "avg_logprob": -0.07769060134887695, "compression_ratio": 1.693798449612403, "no_speech_prob": 0.010985300876200199}, {"id": 499, "seek": 238832, "start": 2400.32, "end": 2404.32, "text": " So this meta task is classifying with natural language predicates.", "tokens": [50964, 407, 341, 19616, 5633, 307, 1508, 5489, 365, 3303, 2856, 47336, 1024, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07769060134887695, "compression_ratio": 1.693798449612403, "no_speech_prob": 0.010985300876200199}, {"id": 500, "seek": 238832, "start": 2404.32, "end": 2408.32, "text": " So the task here is we're going to be given two text data sets, D1 and D2.", "tokens": [51164, 407, 264, 5633, 510, 307, 321, 434, 516, 281, 312, 2212, 732, 2487, 1412, 6352, 11, 413, 16, 293, 413, 17, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07769060134887695, "compression_ratio": 1.693798449612403, "no_speech_prob": 0.010985300876200199}, {"id": 501, "seek": 238832, "start": 2408.32, "end": 2411.32, "text": " We want to find out what's different between them.", "tokens": [51364, 492, 528, 281, 915, 484, 437, 311, 819, 1296, 552, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07769060134887695, "compression_ratio": 1.693798449612403, "no_speech_prob": 0.010985300876200199}, {"id": 502, "seek": 238832, "start": 2411.32, "end": 2415.32, "text": " And this difference, again, should be some natural language string H.", "tokens": [51514, 400, 341, 2649, 11, 797, 11, 820, 312, 512, 3303, 2856, 6798, 389, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07769060134887695, "compression_ratio": 1.693798449612403, "no_speech_prob": 0.010985300876200199}, {"id": 503, "seek": 241532, "start": 2415.32, "end": 2420.32, "text": " And so we can kind of think about this as isomorphic to binary classification, right?", "tokens": [50364, 400, 370, 321, 393, 733, 295, 519, 466, 341, 382, 307, 32702, 299, 281, 17434, 21538, 11, 558, 30, 50614], "temperature": 0.0, "avg_logprob": -0.06034618093256365, "compression_ratio": 1.6292134831460674, "no_speech_prob": 0.004069068934768438}, {"id": 504, "seek": 241532, "start": 2420.32, "end": 2426.32, "text": " We're kind of trying to classify between D1 and D2, but where the function is described in natural language.", "tokens": [50614, 492, 434, 733, 295, 1382, 281, 33872, 1296, 413, 16, 293, 413, 17, 11, 457, 689, 264, 2445, 307, 7619, 294, 3303, 2856, 13, 50914], "temperature": 0.0, "avg_logprob": -0.06034618093256365, "compression_ratio": 1.6292134831460674, "no_speech_prob": 0.004069068934768438}, {"id": 505, "seek": 241532, "start": 2426.32, "end": 2430.32, "text": " So let me just give you an example of what this task might look like, right?", "tokens": [50914, 407, 718, 385, 445, 976, 291, 364, 1365, 295, 437, 341, 5633, 1062, 574, 411, 11, 558, 30, 51114], "temperature": 0.0, "avg_logprob": -0.06034618093256365, "compression_ratio": 1.6292134831460674, "no_speech_prob": 0.004069068934768438}, {"id": 506, "seek": 241532, "start": 2430.32, "end": 2434.32, "text": " So maybe these are my two data sets, D1 and D2.", "tokens": [51114, 407, 1310, 613, 366, 452, 732, 1412, 6352, 11, 413, 16, 293, 413, 17, 13, 51314], "temperature": 0.0, "avg_logprob": -0.06034618093256365, "compression_ratio": 1.6292134831460674, "no_speech_prob": 0.004069068934768438}, {"id": 507, "seek": 241532, "start": 2434.32, "end": 2439.32, "text": " We want to come up with a natural language description of how they're different.", "tokens": [51314, 492, 528, 281, 808, 493, 365, 257, 3303, 2856, 3855, 295, 577, 436, 434, 819, 13, 51564], "temperature": 0.0, "avg_logprob": -0.06034618093256365, "compression_ratio": 1.6292134831460674, "no_speech_prob": 0.004069068934768438}, {"id": 508, "seek": 241532, "start": 2439.32, "end": 2444.32, "text": " So can anyone figure this one out?", "tokens": [51564, 407, 393, 2878, 2573, 341, 472, 484, 30, 51814], "temperature": 0.0, "avg_logprob": -0.06034618093256365, "compression_ratio": 1.6292134831460674, "no_speech_prob": 0.004069068934768438}, {"id": 509, "seek": 244432, "start": 2445.32, "end": 2447.32, "text": " Okay, yes.", "tokens": [50414, 1033, 11, 2086, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16637393633524578, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.002843629801645875}, {"id": 510, "seek": 244432, "start": 2447.32, "end": 2450.32, "text": " So the left is French and the right is English.", "tokens": [50514, 407, 264, 1411, 307, 5522, 293, 264, 558, 307, 3669, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16637393633524578, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.002843629801645875}, {"id": 511, "seek": 244432, "start": 2450.32, "end": 2456.32, "text": " So our H would be D1 contains more French sentences compared to D2.", "tokens": [50664, 407, 527, 389, 576, 312, 413, 16, 8306, 544, 5522, 16579, 5347, 281, 413, 17, 13, 50964], "temperature": 0.0, "avg_logprob": -0.16637393633524578, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.002843629801645875}, {"id": 512, "seek": 244432, "start": 2456.32, "end": 2460.32, "text": " Okay, so here's a harder example.", "tokens": [50964, 1033, 11, 370, 510, 311, 257, 6081, 1365, 13, 51164], "temperature": 0.0, "avg_logprob": -0.16637393633524578, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.002843629801645875}, {"id": 513, "seek": 244432, "start": 2460.32, "end": 2466.32, "text": " Maybe partly hard due to text size.", "tokens": [51164, 2704, 17031, 1152, 3462, 281, 2487, 2744, 13, 51464], "temperature": 0.0, "avg_logprob": -0.16637393633524578, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.002843629801645875}, {"id": 514, "seek": 246632, "start": 2466.32, "end": 2474.32, "text": " So I claim that even if you looked at this for a while, it would be hard to tell what the difference was.", "tokens": [50364, 407, 286, 3932, 300, 754, 498, 291, 2956, 412, 341, 337, 257, 1339, 11, 309, 576, 312, 1152, 281, 980, 437, 264, 2649, 390, 13, 50764], "temperature": 0.0, "avg_logprob": -0.08271784685095962, "compression_ratio": 1.683127572016461, "no_speech_prob": 0.004753174260258675}, {"id": 515, "seek": 246632, "start": 2474.32, "end": 2483.32, "text": " And in fact, the difference is that sentences in D1 contain at least two female characters in them, whereas sentences in D2 do not.", "tokens": [50764, 400, 294, 1186, 11, 264, 2649, 307, 300, 16579, 294, 413, 16, 5304, 412, 1935, 732, 6556, 4342, 294, 552, 11, 9735, 16579, 294, 413, 17, 360, 406, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08271784685095962, "compression_ratio": 1.683127572016461, "no_speech_prob": 0.004753174260258675}, {"id": 516, "seek": 246632, "start": 2483.32, "end": 2492.32, "text": " This is actually pretty challenging because there's things like she carried a total of eight torpedoes where she refers to a ship,", "tokens": [51214, 639, 307, 767, 1238, 7595, 570, 456, 311, 721, 411, 750, 9094, 257, 3217, 295, 3180, 46764, 279, 689, 750, 14942, 281, 257, 5374, 11, 51664], "temperature": 0.0, "avg_logprob": -0.08271784685095962, "compression_ratio": 1.683127572016461, "no_speech_prob": 0.004753174260258675}, {"id": 517, "seek": 246632, "start": 2492.32, "end": 2495.32, "text": " which is not in fact a female character.", "tokens": [51664, 597, 307, 406, 294, 1186, 257, 6556, 2517, 13, 51814], "temperature": 0.0, "avg_logprob": -0.08271784685095962, "compression_ratio": 1.683127572016461, "no_speech_prob": 0.004753174260258675}, {"id": 518, "seek": 249532, "start": 2495.32, "end": 2500.32, "text": " And you also have to know that Professor McKeown is female.", "tokens": [50364, 400, 291, 611, 362, 281, 458, 300, 8419, 4050, 18570, 648, 307, 6556, 13, 50614], "temperature": 0.0, "avg_logprob": -0.09954861232212611, "compression_ratio": 1.4660633484162895, "no_speech_prob": 0.0004727260966319591}, {"id": 519, "seek": 249532, "start": 2500.32, "end": 2509.32, "text": " And so there's kind of a lot of world knowledge and kind of non-trivial stuff in solving a problem like this.", "tokens": [50614, 400, 370, 456, 311, 733, 295, 257, 688, 295, 1002, 3601, 293, 733, 295, 2107, 12, 83, 470, 22640, 1507, 294, 12606, 257, 1154, 411, 341, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09954861232212611, "compression_ratio": 1.4660633484162895, "no_speech_prob": 0.0004727260966319591}, {"id": 520, "seek": 249532, "start": 2509.32, "end": 2512.32, "text": " So I guess that's the kind of meta task.", "tokens": [51064, 407, 286, 2041, 300, 311, 264, 733, 295, 19616, 5633, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09954861232212611, "compression_ratio": 1.4660633484162895, "no_speech_prob": 0.0004727260966319591}, {"id": 521, "seek": 249532, "start": 2512.32, "end": 2514.32, "text": " Why should we care about this?", "tokens": [51214, 1545, 820, 321, 1127, 466, 341, 30, 51314], "temperature": 0.0, "avg_logprob": -0.09954861232212611, "compression_ratio": 1.4660633484162895, "no_speech_prob": 0.0004727260966319591}, {"id": 522, "seek": 249532, "start": 2514.32, "end": 2520.32, "text": " So first, I'll give you three use cases that would help us better understand LLMs.", "tokens": [51314, 407, 700, 11, 286, 603, 976, 291, 1045, 764, 3331, 300, 576, 854, 505, 1101, 1223, 441, 43, 26386, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09954861232212611, "compression_ratio": 1.4660633484162895, "no_speech_prob": 0.0004727260966319591}, {"id": 523, "seek": 252032, "start": 2520.32, "end": 2525.32, "text": " So we could want to understand distribution shift.", "tokens": [50364, 407, 321, 727, 528, 281, 1223, 7316, 5513, 13, 50614], "temperature": 0.0, "avg_logprob": -0.07829012495748112, "compression_ratio": 1.7574468085106383, "no_speech_prob": 0.012050691060721874}, {"id": 524, "seek": 252032, "start": 2525.32, "end": 2530.32, "text": " So especially if a model is doing poorly out of distribution, maybe we want to diagnose what's different.", "tokens": [50614, 407, 2318, 498, 257, 2316, 307, 884, 22271, 484, 295, 7316, 11, 1310, 321, 528, 281, 36238, 437, 311, 819, 13, 50864], "temperature": 0.0, "avg_logprob": -0.07829012495748112, "compression_ratio": 1.7574468085106383, "no_speech_prob": 0.012050691060721874}, {"id": 525, "seek": 252032, "start": 2530.32, "end": 2536.32, "text": " And so we might find out that the test distribution involves more formal writing than the training distribution.", "tokens": [50864, 400, 370, 321, 1062, 915, 484, 300, 264, 1500, 7316, 11626, 544, 9860, 3579, 813, 264, 3097, 7316, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07829012495748112, "compression_ratio": 1.7574468085106383, "no_speech_prob": 0.012050691060721874}, {"id": 526, "seek": 252032, "start": 2536.32, "end": 2540.32, "text": " And that might help us diagnose failures or tell us what we should fine tune on.", "tokens": [51164, 400, 300, 1062, 854, 505, 36238, 20774, 420, 980, 505, 437, 321, 820, 2489, 10864, 322, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07829012495748112, "compression_ratio": 1.7574468085106383, "no_speech_prob": 0.012050691060721874}, {"id": 527, "seek": 252032, "start": 2540.32, "end": 2544.32, "text": " The positive class contains more URLs than the negative class.", "tokens": [51364, 440, 3353, 1508, 8306, 544, 43267, 813, 264, 3671, 1508, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07829012495748112, "compression_ratio": 1.7574468085106383, "no_speech_prob": 0.012050691060721874}, {"id": 528, "seek": 254432, "start": 2544.32, "end": 2550.32, "text": " If this were a spam classification data set, this would tell us that there was this potential spurious queue.", "tokens": [50364, 759, 341, 645, 257, 24028, 21538, 1412, 992, 11, 341, 576, 980, 505, 300, 456, 390, 341, 3995, 637, 24274, 18639, 13, 50664], "temperature": 0.0, "avg_logprob": -0.07934404950623118, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.047408703714609146}, {"id": 529, "seek": 254432, "start": 2550.32, "end": 2557.32, "text": " That maybe the model just looks at the presence or absence of URLs and we should make sure that that's not just what it's doing.", "tokens": [50664, 663, 1310, 264, 2316, 445, 1542, 412, 264, 6814, 420, 17145, 295, 43267, 293, 321, 820, 652, 988, 300, 300, 311, 406, 445, 437, 309, 311, 884, 13, 51014], "temperature": 0.0, "avg_logprob": -0.07934404950623118, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.047408703714609146}, {"id": 530, "seek": 254432, "start": 2557.32, "end": 2559.32, "text": " We could do error analysis.", "tokens": [51014, 492, 727, 360, 6713, 5215, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07934404950623118, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.047408703714609146}, {"id": 531, "seek": 254432, "start": 2559.32, "end": 2567.32, "text": " I could give you two models and I could look at the difference between inputs where one of them versus the other one makes mistakes.", "tokens": [51114, 286, 727, 976, 291, 732, 5245, 293, 286, 727, 574, 412, 264, 2649, 1296, 15743, 689, 472, 295, 552, 5717, 264, 661, 472, 1669, 8038, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07934404950623118, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.047408703714609146}, {"id": 532, "seek": 254432, "start": 2567.32, "end": 2571.32, "text": " And then we could also go beyond just trying to understand LLMs.", "tokens": [51514, 400, 550, 321, 727, 611, 352, 4399, 445, 1382, 281, 1223, 441, 43, 26386, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07934404950623118, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.047408703714609146}, {"id": 533, "seek": 257132, "start": 2571.32, "end": 2577.32, "text": " You know, you could start trying to do, you know, for like say like social science, right?", "tokens": [50364, 509, 458, 11, 291, 727, 722, 1382, 281, 360, 11, 291, 458, 11, 337, 411, 584, 411, 2093, 3497, 11, 558, 30, 50664], "temperature": 0.0, "avg_logprob": -0.125353365768621, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.0244041346013546}, {"id": 534, "seek": 257132, "start": 2577.32, "end": 2587.32, "text": " I look at a bunch of tweets from one year versus another year and it turns out and say, okay, public opinion from this year is more optimistic about the pandemic than last year, right?", "tokens": [50664, 286, 574, 412, 257, 3840, 295, 25671, 490, 472, 1064, 5717, 1071, 1064, 293, 309, 4523, 484, 293, 584, 11, 1392, 11, 1908, 4800, 490, 341, 1064, 307, 544, 19397, 466, 264, 5388, 813, 1036, 1064, 11, 558, 30, 51164], "temperature": 0.0, "avg_logprob": -0.125353365768621, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.0244041346013546}, {"id": 535, "seek": 257132, "start": 2587.32, "end": 2592.32, "text": " We can kind of generate at least descriptive hypotheses like this.", "tokens": [51164, 492, 393, 733, 295, 8460, 412, 1935, 42585, 49969, 411, 341, 13, 51414], "temperature": 0.0, "avg_logprob": -0.125353365768621, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.0244041346013546}, {"id": 536, "seek": 259232, "start": 2592.32, "end": 2605.32, "text": " Of course, you would then want to carefully do all of the causal inference and other stuff to validate these, but this at least can generate hypotheses for you.", "tokens": [50364, 2720, 1164, 11, 291, 576, 550, 528, 281, 7500, 360, 439, 295, 264, 38755, 38253, 293, 661, 1507, 281, 29562, 613, 11, 457, 341, 412, 1935, 393, 8460, 49969, 337, 291, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13708262973361546, "compression_ratio": 1.495049504950495, "no_speech_prob": 0.019705742597579956}, {"id": 537, "seek": 259232, "start": 2605.32, "end": 2607.32, "text": " Okay, so how will we do this?", "tokens": [51014, 1033, 11, 370, 577, 486, 321, 360, 341, 30, 51114], "temperature": 0.0, "avg_logprob": -0.13708262973361546, "compression_ratio": 1.495049504950495, "no_speech_prob": 0.019705742597579956}, {"id": 538, "seek": 259232, "start": 2607.32, "end": 2610.32, "text": " Well, yes, D.", "tokens": [51114, 1042, 11, 2086, 11, 413, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13708262973361546, "compression_ratio": 1.495049504950495, "no_speech_prob": 0.019705742597579956}, {"id": 539, "seek": 259232, "start": 2610.32, "end": 2618.32, "text": " So, if you go back to the examples you have, it feels like the hypothesized space is huge, right?", "tokens": [51264, 407, 11, 498, 291, 352, 646, 281, 264, 5110, 291, 362, 11, 309, 3417, 411, 264, 14276, 1602, 1901, 307, 2603, 11, 558, 30, 51664], "temperature": 0.0, "avg_logprob": -0.13708262973361546, "compression_ratio": 1.495049504950495, "no_speech_prob": 0.019705742597579956}, {"id": 540, "seek": 261832, "start": 2618.32, "end": 2625.32, "text": " So there seems to be a recall precision issue here, and it seems your ground truth only has some of them.", "tokens": [50364, 407, 456, 2544, 281, 312, 257, 9901, 18356, 2734, 510, 11, 293, 309, 2544, 428, 2727, 3494, 787, 575, 512, 295, 552, 13, 50714], "temperature": 0.0, "avg_logprob": -0.16472442263648623, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.03355850279331207}, {"id": 541, "seek": 261832, "start": 2625.32, "end": 2631.32, "text": " Like for them, the very easy example, my hypothesis could be there is no relation between those two sentences.", "tokens": [50714, 1743, 337, 552, 11, 264, 588, 1858, 1365, 11, 452, 17291, 727, 312, 456, 307, 572, 9721, 1296, 729, 732, 16579, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16472442263648623, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.03355850279331207}, {"id": 542, "seek": 261832, "start": 2631.32, "end": 2635.32, "text": " I mean, you have like, it has more French versus the second sentence.", "tokens": [51014, 286, 914, 11, 291, 362, 411, 11, 309, 575, 544, 5522, 5717, 264, 1150, 8174, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16472442263648623, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.03355850279331207}, {"id": 543, "seek": 261832, "start": 2635.32, "end": 2637.32, "text": " The space seems huge.", "tokens": [51214, 440, 1901, 2544, 2603, 13, 51314], "temperature": 0.0, "avg_logprob": -0.16472442263648623, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.03355850279331207}, {"id": 544, "seek": 261832, "start": 2637.32, "end": 2640.32, "text": " How do you locate it to the final ones we want?", "tokens": [51314, 1012, 360, 291, 22370, 309, 281, 264, 2572, 2306, 321, 528, 30, 51464], "temperature": 0.0, "avg_logprob": -0.16472442263648623, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.03355850279331207}, {"id": 545, "seek": 261832, "start": 2640.32, "end": 2644.32, "text": " So we're not going to have ground truth in most cases.", "tokens": [51464, 407, 321, 434, 406, 516, 281, 362, 2727, 3494, 294, 881, 3331, 13, 51664], "temperature": 0.0, "avg_logprob": -0.16472442263648623, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.03355850279331207}, {"id": 546, "seek": 264432, "start": 2644.32, "end": 2653.32, "text": " There are a couple of cases where we did create a ground truth so that we could kind of test in the traditional setting with kind of gold labels,", "tokens": [50364, 821, 366, 257, 1916, 295, 3331, 689, 321, 630, 1884, 257, 2727, 3494, 370, 300, 321, 727, 733, 295, 1500, 294, 264, 5164, 3287, 365, 733, 295, 3821, 16949, 11, 50814], "temperature": 0.0, "avg_logprob": -0.05824249131338937, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.014952002093195915}, {"id": 547, "seek": 264432, "start": 2653.32, "end": 2660.32, "text": " but we're going to kind of take a similar perspective to how you'd evaluate any other classifier, right?", "tokens": [50814, 457, 321, 434, 516, 281, 733, 295, 747, 257, 2531, 4585, 281, 577, 291, 1116, 13059, 604, 661, 1508, 9902, 11, 558, 30, 51164], "temperature": 0.0, "avg_logprob": -0.05824249131338937, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.014952002093195915}, {"id": 548, "seek": 264432, "start": 2660.32, "end": 2665.32, "text": " So we're going to come up with a way to quantify these in terms of some classification error rate,", "tokens": [51164, 407, 321, 434, 516, 281, 808, 493, 365, 257, 636, 281, 40421, 613, 294, 2115, 295, 512, 21538, 6713, 3314, 11, 51414], "temperature": 0.0, "avg_logprob": -0.05824249131338937, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.014952002093195915}, {"id": 549, "seek": 264432, "start": 2665.32, "end": 2673.32, "text": " and then we'll say that one hypothesis is better than another if it has a lower error rate in distinguishing D1 and D2.", "tokens": [51414, 293, 550, 321, 603, 584, 300, 472, 17291, 307, 1101, 813, 1071, 498, 309, 575, 257, 3126, 6713, 3314, 294, 11365, 3807, 413, 16, 293, 413, 17, 13, 51814], "temperature": 0.0, "avg_logprob": -0.05824249131338937, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.014952002093195915}, {"id": 550, "seek": 267332, "start": 2673.32, "end": 2678.32, "text": " And so rather than having a fixed ground truth, we can just talk about which systems are better or worse,", "tokens": [50364, 400, 370, 2831, 813, 1419, 257, 6806, 2727, 3494, 11, 321, 393, 445, 751, 466, 597, 3652, 366, 1101, 420, 5324, 11, 50614], "temperature": 0.0, "avg_logprob": -0.1452430020207944, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.002322747139260173}, {"id": 551, "seek": 267332, "start": 2678.32, "end": 2684.32, "text": " and maybe we could also say compare to humans to get some like overall benchmark.", "tokens": [50614, 293, 1310, 321, 727, 611, 584, 6794, 281, 6255, 281, 483, 512, 411, 4787, 18927, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1452430020207944, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.002322747139260173}, {"id": 552, "seek": 267332, "start": 2684.32, "end": 2690.32, "text": " Some of the hypothesis might be very true, and others may be more usable, right?", "tokens": [50914, 2188, 295, 264, 17291, 1062, 312, 588, 2074, 11, 293, 2357, 815, 312, 544, 29975, 11, 558, 30, 51214], "temperature": 0.0, "avg_logprob": -0.1452430020207944, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.002322747139260173}, {"id": 553, "seek": 267332, "start": 2690.32, "end": 2691.32, "text": " Okay, right.", "tokens": [51214, 1033, 11, 558, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1452430020207944, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.002322747139260173}, {"id": 554, "seek": 267332, "start": 2691.32, "end": 2698.32, "text": " So there's, right, so you might also want to evaluate if there's some like goal,", "tokens": [51264, 407, 456, 311, 11, 558, 11, 370, 291, 1062, 611, 528, 281, 13059, 498, 456, 311, 512, 411, 3387, 11, 51614], "temperature": 0.0, "avg_logprob": -0.1452430020207944, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.002322747139260173}, {"id": 555, "seek": 269832, "start": 2698.32, "end": 2703.32, "text": " you might want to evaluate like relevance to the goal and some notion of novelty.", "tokens": [50364, 291, 1062, 528, 281, 13059, 411, 32684, 281, 264, 3387, 293, 512, 10710, 295, 44805, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11303552668145363, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.017437873408198357}, {"id": 556, "seek": 269832, "start": 2703.32, "end": 2705.32, "text": " These become, start to become subjective.", "tokens": [50614, 1981, 1813, 11, 722, 281, 1813, 25972, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11303552668145363, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.017437873408198357}, {"id": 557, "seek": 269832, "start": 2705.32, "end": 2715.32, "text": " So we have done some of this where we get human ratings of novelty and relevance.", "tokens": [50714, 407, 321, 362, 1096, 512, 295, 341, 689, 321, 483, 1952, 24603, 295, 44805, 293, 32684, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11303552668145363, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.017437873408198357}, {"id": 558, "seek": 269832, "start": 2715.32, "end": 2724.32, "text": " Reviewers didn't like it actually because it's too hard to define novelty, but anyways, like you can do this and like I think,", "tokens": [51214, 19954, 433, 994, 380, 411, 309, 767, 570, 309, 311, 886, 1152, 281, 6964, 44805, 11, 457, 13448, 11, 411, 291, 393, 360, 341, 293, 411, 286, 519, 11, 51664], "temperature": 0.0, "avg_logprob": -0.11303552668145363, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.017437873408198357}, {"id": 559, "seek": 269832, "start": 2724.32, "end": 2727.32, "text": " but I do agree it's kind of a tricky problem.", "tokens": [51664, 457, 286, 360, 3986, 309, 311, 733, 295, 257, 12414, 1154, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11303552668145363, "compression_ratio": 1.6434782608695653, "no_speech_prob": 0.017437873408198357}, {"id": 560, "seek": 272732, "start": 2727.32, "end": 2737.32, "text": " So just building on these questions, are you constraining some complexity of your hypothesis?", "tokens": [50364, 407, 445, 2390, 322, 613, 1651, 11, 366, 291, 11525, 1760, 512, 14024, 295, 428, 17291, 30, 50864], "temperature": 0.0, "avg_logprob": -0.1525471482095839, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.027564547955989838}, {"id": 561, "seek": 272732, "start": 2737.32, "end": 2740.32, "text": " Are you looking for short hypotheses?", "tokens": [50864, 2014, 291, 1237, 337, 2099, 49969, 30, 51014], "temperature": 0.0, "avg_logprob": -0.1525471482095839, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.027564547955989838}, {"id": 562, "seek": 272732, "start": 2740.32, "end": 2751.32, "text": " So we'll implicitly have short hypotheses here, although that kind of just comes from the fact that these are going to be generated by an LLM,", "tokens": [51014, 407, 321, 603, 26947, 356, 362, 2099, 49969, 510, 11, 4878, 300, 733, 295, 445, 1487, 490, 264, 1186, 300, 613, 366, 516, 281, 312, 10833, 538, 364, 441, 43, 44, 11, 51564], "temperature": 0.0, "avg_logprob": -0.1525471482095839, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.027564547955989838}, {"id": 563, "seek": 272732, "start": 2751.32, "end": 2756.32, "text": " and LLMs will only output things that are so long.", "tokens": [51564, 293, 441, 43, 26386, 486, 787, 5598, 721, 300, 366, 370, 938, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1525471482095839, "compression_ratio": 1.5931372549019607, "no_speech_prob": 0.027564547955989838}, {"id": 564, "seek": 275632, "start": 2756.32, "end": 2766.32, "text": " But yeah, we like, for usability reasons, you would want this to be kind of short and interpretable.", "tokens": [50364, 583, 1338, 11, 321, 411, 11, 337, 46878, 4112, 11, 291, 576, 528, 341, 281, 312, 733, 295, 2099, 293, 7302, 712, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1296196665082659, "compression_ratio": 1.4811320754716981, "no_speech_prob": 0.003073314903303981}, {"id": 565, "seek": 275632, "start": 2766.32, "end": 2768.32, "text": " So yeah, how are we going to do this?", "tokens": [50864, 407, 1338, 11, 577, 366, 321, 516, 281, 360, 341, 30, 50964], "temperature": 0.0, "avg_logprob": -0.1296196665082659, "compression_ratio": 1.4811320754716981, "no_speech_prob": 0.003073314903303981}, {"id": 566, "seek": 275632, "start": 2768.32, "end": 2774.32, "text": " We're basically just going to use LLMs somewhat similar to before, right?", "tokens": [50964, 492, 434, 1936, 445, 516, 281, 764, 441, 43, 26386, 8344, 2531, 281, 949, 11, 558, 30, 51264], "temperature": 0.0, "avg_logprob": -0.1296196665082659, "compression_ratio": 1.4811320754716981, "no_speech_prob": 0.003073314903303981}, {"id": 567, "seek": 275632, "start": 2774.32, "end": 2782.32, "text": " So I won't give you the full magical prompt that Rachel came up with, but just kind of schematically,", "tokens": [51264, 407, 286, 1582, 380, 976, 291, 264, 1577, 12066, 12391, 300, 14246, 1361, 493, 365, 11, 457, 445, 733, 295, 22627, 5030, 11, 51664], "temperature": 0.0, "avg_logprob": -0.1296196665082659, "compression_ratio": 1.4811320754716981, "no_speech_prob": 0.003073314903303981}, {"id": 568, "seek": 278232, "start": 2782.32, "end": 2790.32, "text": " give it a bunch of examples from the first distribution and label them as A, a bunch from the second label them as B.", "tokens": [50364, 976, 309, 257, 3840, 295, 5110, 490, 264, 700, 7316, 293, 7645, 552, 382, 316, 11, 257, 3840, 490, 264, 1150, 7645, 552, 382, 363, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11479108578690858, "compression_ratio": 1.64, "no_speech_prob": 0.05031256377696991}, {"id": 569, "seek": 278232, "start": 2790.32, "end": 2796.32, "text": " And then we say, you know, compared to group B, each sentence from group A, and then we ask it to complete it.", "tokens": [50764, 400, 550, 321, 584, 11, 291, 458, 11, 5347, 281, 1594, 363, 11, 1184, 8174, 490, 1594, 316, 11, 293, 550, 321, 1029, 309, 281, 3566, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11479108578690858, "compression_ratio": 1.64, "no_speech_prob": 0.05031256377696991}, {"id": 570, "seek": 278232, "start": 2796.32, "end": 2800.32, "text": " This was done at a point where we were using GBD3.", "tokens": [51064, 639, 390, 1096, 412, 257, 935, 689, 321, 645, 1228, 26809, 35, 18, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11479108578690858, "compression_ratio": 1.64, "no_speech_prob": 0.05031256377696991}, {"id": 571, "seek": 278232, "start": 2800.32, "end": 2803.32, "text": " So we needed it to be in this completion format.", "tokens": [51264, 407, 321, 2978, 309, 281, 312, 294, 341, 19372, 7877, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11479108578690858, "compression_ratio": 1.64, "no_speech_prob": 0.05031256377696991}, {"id": 572, "seek": 278232, "start": 2803.32, "end": 2811.32, "text": " Once you have instruction tuned models, there's maybe nicer prompts you can have.", "tokens": [51414, 3443, 291, 362, 10951, 10870, 5245, 11, 456, 311, 1310, 22842, 41095, 291, 393, 362, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11479108578690858, "compression_ratio": 1.64, "no_speech_prob": 0.05031256377696991}, {"id": 573, "seek": 281132, "start": 2811.32, "end": 2813.32, "text": " But this is kind of the basic idea.", "tokens": [50364, 583, 341, 307, 733, 295, 264, 3875, 1558, 13, 50464], "temperature": 0.0, "avg_logprob": -0.0828236204678895, "compression_ratio": 1.7472118959107807, "no_speech_prob": 0.004467458929866552}, {"id": 574, "seek": 281132, "start": 2813.32, "end": 2819.32, "text": " And then you sample this a bunch of times with different, you know, sub-samples of the data, right?", "tokens": [50464, 400, 550, 291, 6889, 341, 257, 3840, 295, 1413, 365, 819, 11, 291, 458, 11, 1422, 12, 19988, 2622, 295, 264, 1412, 11, 558, 30, 50764], "temperature": 0.0, "avg_logprob": -0.0828236204678895, "compression_ratio": 1.7472118959107807, "no_speech_prob": 0.004467458929866552}, {"id": 575, "seek": 281132, "start": 2819.32, "end": 2823.32, "text": " So keep in mind that we can only fit maybe like 30 or so examples into the context window.", "tokens": [50764, 407, 1066, 294, 1575, 300, 321, 393, 787, 3318, 1310, 411, 2217, 420, 370, 5110, 666, 264, 4319, 4910, 13, 50964], "temperature": 0.0, "avg_logprob": -0.0828236204678895, "compression_ratio": 1.7472118959107807, "no_speech_prob": 0.004467458929866552}, {"id": 576, "seek": 281132, "start": 2823.32, "end": 2828.32, "text": " So we have a data set with thousands of examples is like a very tiny fraction.", "tokens": [50964, 407, 321, 362, 257, 1412, 992, 365, 5383, 295, 5110, 307, 411, 257, 588, 5870, 14135, 13, 51214], "temperature": 0.0, "avg_logprob": -0.0828236204678895, "compression_ratio": 1.7472118959107807, "no_speech_prob": 0.004467458929866552}, {"id": 577, "seek": 281132, "start": 2828.32, "end": 2833.32, "text": " So we kind of keep sub-sampling to generate different hypotheses.", "tokens": [51214, 407, 321, 733, 295, 1066, 1422, 12, 19988, 11970, 281, 8460, 819, 49969, 13, 51464], "temperature": 0.0, "avg_logprob": -0.0828236204678895, "compression_ratio": 1.7472118959107807, "no_speech_prob": 0.004467458929866552}, {"id": 578, "seek": 281132, "start": 2833.32, "end": 2840.32, "text": " And then, you know, you'll get things like is more positive, contains the word chapter, is longer.", "tokens": [51464, 400, 550, 11, 291, 458, 11, 291, 603, 483, 721, 411, 307, 544, 3353, 11, 8306, 264, 1349, 7187, 11, 307, 2854, 13, 51814], "temperature": 0.0, "avg_logprob": -0.0828236204678895, "compression_ratio": 1.7472118959107807, "no_speech_prob": 0.004467458929866552}, {"id": 579, "seek": 284032, "start": 2840.32, "end": 2846.32, "text": " Some of them actually kind of have, yeah, some of them end up being kind of trivial.", "tokens": [50364, 2188, 295, 552, 767, 733, 295, 362, 11, 1338, 11, 512, 295, 552, 917, 493, 885, 733, 295, 26703, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09997546195983886, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0004582685942295939}, {"id": 580, "seek": 284032, "start": 2846.32, "end": 2848.32, "text": " So you might want ways of filtering them out.", "tokens": [50664, 407, 291, 1062, 528, 2098, 295, 30822, 552, 484, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09997546195983886, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0004582685942295939}, {"id": 581, "seek": 284032, "start": 2848.32, "end": 2852.32, "text": " But you kind of get this set of candidate hypotheses.", "tokens": [50764, 583, 291, 733, 295, 483, 341, 992, 295, 11532, 49969, 13, 50964], "temperature": 0.0, "avg_logprob": -0.09997546195983886, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0004582685942295939}, {"id": 582, "seek": 284032, "start": 2852.32, "end": 2858.32, "text": " So this is kind of telling us how we do the first two steps of this statistics pipeline, right?", "tokens": [50964, 407, 341, 307, 733, 295, 3585, 505, 577, 321, 360, 264, 700, 732, 4439, 295, 341, 12523, 15517, 11, 558, 30, 51264], "temperature": 0.0, "avg_logprob": -0.09997546195983886, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0004582685942295939}, {"id": 583, "seek": 284032, "start": 2858.32, "end": 2860.32, "text": " We look at this initial data.", "tokens": [51264, 492, 574, 412, 341, 5883, 1412, 13, 51364], "temperature": 0.0, "avg_logprob": -0.09997546195983886, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0004582685942295939}, {"id": 584, "seek": 284032, "start": 2860.32, "end": 2867.32, "text": " We prompt GPTN for some N with examples from D1 and D2.", "tokens": [51364, 492, 12391, 26039, 51, 45, 337, 512, 426, 365, 5110, 490, 413, 16, 293, 413, 17, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09997546195983886, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0004582685942295939}, {"id": 585, "seek": 286732, "start": 2867.32, "end": 2870.32, "text": " And then we ask how they're different in this form of the hypothesis.", "tokens": [50364, 400, 550, 321, 1029, 577, 436, 434, 819, 294, 341, 1254, 295, 264, 17291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1599017585196146, "compression_ratio": 1.6071428571428572, "no_speech_prob": 0.005819281097501516}, {"id": 586, "seek": 286732, "start": 2870.32, "end": 2875.32, "text": " But now we need to somehow formalize each quantitatively and test it on new data.", "tokens": [50514, 583, 586, 321, 643, 281, 6063, 9860, 1125, 1184, 27778, 356, 293, 1500, 309, 322, 777, 1412, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1599017585196146, "compression_ratio": 1.6071428571428572, "no_speech_prob": 0.005819281097501516}, {"id": 587, "seek": 286732, "start": 2875.32, "end": 2887.32, "text": " So I guess, again, maybe I'll pose the question, you know, how could we formalize this each quantitatively?", "tokens": [50764, 407, 286, 2041, 11, 797, 11, 1310, 286, 603, 10774, 264, 1168, 11, 291, 458, 11, 577, 727, 321, 9860, 1125, 341, 1184, 27778, 356, 30, 51364], "temperature": 0.0, "avg_logprob": -0.1599017585196146, "compression_ratio": 1.6071428571428572, "no_speech_prob": 0.005819281097501516}, {"id": 588, "seek": 286732, "start": 2887.32, "end": 2894.32, "text": " How could we sort of say quantitatively how good is it?", "tokens": [51364, 1012, 727, 321, 1333, 295, 584, 27778, 356, 577, 665, 307, 309, 30, 51714], "temperature": 0.0, "avg_logprob": -0.1599017585196146, "compression_ratio": 1.6071428571428572, "no_speech_prob": 0.005819281097501516}, {"id": 589, "seek": 289432, "start": 2894.32, "end": 2896.32, "text": " Sorry, what do you say first?", "tokens": [50364, 4919, 11, 437, 360, 291, 584, 700, 30, 50464], "temperature": 0.0, "avg_logprob": -0.13227782311377587, "compression_ratio": 1.4698795180722892, "no_speech_prob": 0.0038240833673626184}, {"id": 590, "seek": 289432, "start": 2896.32, "end": 2898.32, "text": " Okay, good.", "tokens": [50464, 1033, 11, 665, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13227782311377587, "compression_ratio": 1.4698795180722892, "no_speech_prob": 0.0038240833673626184}, {"id": 591, "seek": 289432, "start": 2898.32, "end": 2906.32, "text": " So we can say, you know, good hypothesis is something that helps tell D1 and D2 apart.", "tokens": [50564, 407, 321, 393, 584, 11, 291, 458, 11, 665, 17291, 307, 746, 300, 3665, 980, 413, 16, 293, 413, 17, 4936, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13227782311377587, "compression_ratio": 1.4698795180722892, "no_speech_prob": 0.0038240833673626184}, {"id": 592, "seek": 289432, "start": 2906.32, "end": 2916.32, "text": " So we'll, you know, take a sample from D1, a sample from D2, mix them up randomly so you don't know which is which.", "tokens": [50964, 407, 321, 603, 11, 291, 458, 11, 747, 257, 6889, 490, 413, 16, 11, 257, 6889, 490, 413, 17, 11, 2890, 552, 493, 16979, 370, 291, 500, 380, 458, 597, 307, 597, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13227782311377587, "compression_ratio": 1.4698795180722892, "no_speech_prob": 0.0038240833673626184}, {"id": 593, "seek": 291632, "start": 2916.32, "end": 2925.32, "text": " Tell either a human or an LLM the hypothesis and ask them to say which is which.", "tokens": [50364, 5115, 2139, 257, 1952, 420, 364, 441, 43, 44, 264, 17291, 293, 1029, 552, 281, 584, 597, 307, 597, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09809918176560174, "compression_ratio": 1.6170212765957446, "no_speech_prob": 0.010986167937517166}, {"id": 594, "seek": 291632, "start": 2925.32, "end": 2933.32, "text": " So, you know, as an example, say H is involves more formal writing, we can interpret this as basically a two argument predicate, right?", "tokens": [50814, 407, 11, 291, 458, 11, 382, 364, 1365, 11, 584, 389, 307, 11626, 544, 9860, 3579, 11, 321, 393, 7302, 341, 382, 1936, 257, 732, 6770, 3852, 8700, 11, 558, 30, 51214], "temperature": 0.0, "avg_logprob": -0.09809918176560174, "compression_ratio": 1.6170212765957446, "no_speech_prob": 0.010986167937517166}, {"id": 595, "seek": 291632, "start": 2933.32, "end": 2945.32, "text": " So if I have sentences X1 and X2, H of X1, X2 is some binary predicate that is the truth value of, you know, the utterance X1 involves more formal writing than X2.", "tokens": [51214, 407, 498, 286, 362, 16579, 1783, 16, 293, 1783, 17, 11, 389, 295, 1783, 16, 11, 1783, 17, 307, 512, 17434, 3852, 8700, 300, 307, 264, 3494, 2158, 295, 11, 291, 458, 11, 264, 17567, 719, 1783, 16, 11626, 544, 9860, 3579, 813, 1783, 17, 13, 51814], "temperature": 0.0, "avg_logprob": -0.09809918176560174, "compression_ratio": 1.6170212765957446, "no_speech_prob": 0.010986167937517166}, {"id": 596, "seek": 294532, "start": 2946.32, "end": 2950.32, "text": " And so this should be true or false.", "tokens": [50414, 400, 370, 341, 820, 312, 2074, 420, 7908, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08059344468293367, "compression_ratio": 1.5055555555555555, "no_speech_prob": 0.01205020397901535}, {"id": 597, "seek": 294532, "start": 2950.32, "end": 2956.32, "text": " And so then we just ask a human or a language model if it's true or false.", "tokens": [50614, 400, 370, 550, 321, 445, 1029, 257, 1952, 420, 257, 2856, 2316, 498, 309, 311, 2074, 420, 7908, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08059344468293367, "compression_ratio": 1.5055555555555555, "no_speech_prob": 0.01205020397901535}, {"id": 598, "seek": 294532, "start": 2956.32, "end": 2970.32, "text": " And so then we'll say H is a correct hypothesis about D1 versus D2 if in expectation over samples X1 from D1 and X2 from D2, this is much less than 0.5, right?", "tokens": [50914, 400, 370, 550, 321, 603, 584, 389, 307, 257, 3006, 17291, 466, 413, 16, 5717, 413, 17, 498, 294, 14334, 670, 10938, 1783, 16, 490, 413, 16, 293, 1783, 17, 490, 413, 17, 11, 341, 307, 709, 1570, 813, 1958, 13, 20, 11, 558, 30, 51614], "temperature": 0.0, "avg_logprob": -0.08059344468293367, "compression_ratio": 1.5055555555555555, "no_speech_prob": 0.01205020397901535}, {"id": 599, "seek": 297032, "start": 2970.32, "end": 2984.32, "text": " So 0.5 would be chance if this is sort of the, like some measure of the classification error, if it's much less than 0.5, then we've, we figured out something non-trivial about D1 and D2.", "tokens": [50364, 407, 1958, 13, 20, 576, 312, 2931, 498, 341, 307, 1333, 295, 264, 11, 411, 512, 3481, 295, 264, 21538, 6713, 11, 498, 309, 311, 709, 1570, 813, 1958, 13, 20, 11, 550, 321, 600, 11, 321, 8932, 484, 746, 2107, 12, 83, 470, 22640, 466, 413, 16, 293, 413, 17, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13885584222265038, "compression_ratio": 1.3990147783251232, "no_speech_prob": 0.006902698427438736}, {"id": 600, "seek": 297032, "start": 2984.32, "end": 2994.32, "text": " And so yeah, how to implement this, I guess you could ask humans or you could just query an LLM.", "tokens": [51064, 400, 370, 1338, 11, 577, 281, 4445, 341, 11, 286, 2041, 291, 727, 1029, 6255, 420, 291, 727, 445, 14581, 364, 441, 43, 44, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13885584222265038, "compression_ratio": 1.3990147783251232, "no_speech_prob": 0.006902698427438736}, {"id": 601, "seek": 299432, "start": 2995.32, "end": 3011.32, "text": " And so what does this look like, right? So just to illustrate this, if H is samples from D1 or more positive than those from D2, we, you know, we give, in this case, Charlie Snell, who was an undergrad at Berkeley at the time and is now a PhD student at Berkeley,", "tokens": [50414, 400, 370, 437, 775, 341, 574, 411, 11, 558, 30, 407, 445, 281, 23221, 341, 11, 498, 389, 307, 10938, 490, 413, 16, 420, 544, 3353, 813, 729, 490, 413, 17, 11, 321, 11, 291, 458, 11, 321, 976, 11, 294, 341, 1389, 11, 13754, 318, 8903, 11, 567, 390, 364, 14295, 412, 23684, 412, 264, 565, 293, 307, 586, 257, 14476, 3107, 412, 23684, 11, 51214], "temperature": 0.0, "avg_logprob": -0.10816843850272043, "compression_ratio": 1.4293478260869565, "no_speech_prob": 0.014500560238957405}, {"id": 602, "seek": 301132, "start": 3012.32, "end": 3030.32, "text": " this paper proposes an impactful task or the approach of this paper is too trivial, and ask him which of these it's true about, and then he says something, and then, you know, maybe Charlie's time is pretty valuable, so you can hire crowd workers to do this instead.", "tokens": [50414, 341, 3035, 2365, 4201, 364, 30842, 5633, 420, 264, 3109, 295, 341, 3035, 307, 886, 26703, 11, 293, 1029, 796, 597, 295, 613, 309, 311, 2074, 466, 11, 293, 550, 415, 1619, 746, 11, 293, 550, 11, 291, 458, 11, 1310, 13754, 311, 565, 307, 1238, 8263, 11, 370, 291, 393, 11158, 6919, 5600, 281, 360, 341, 2602, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1221548943292527, "compression_ratio": 1.528735632183908, "no_speech_prob": 0.4724957346916199}, {"id": 603, "seek": 303032, "start": 3030.32, "end": 3048.32, "text": " But the problem is, you know, even if we just wanted to average over, say, like 100 samples from this distribution to get some notion of accuracy, this would cost $10 per text description, and this is very expensive.", "tokens": [50364, 583, 264, 1154, 307, 11, 291, 458, 11, 754, 498, 321, 445, 1415, 281, 4274, 670, 11, 584, 11, 411, 2319, 10938, 490, 341, 7316, 281, 483, 512, 10710, 295, 14170, 11, 341, 576, 2063, 1848, 3279, 680, 2487, 3855, 11, 293, 341, 307, 588, 5124, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13164986157026448, "compression_ratio": 1.4046242774566473, "no_speech_prob": 0.35202744603157043}, {"id": 604, "seek": 303032, "start": 3048.32, "end": 3050.32, "text": " You don't want to do this.", "tokens": [51264, 509, 500, 380, 528, 281, 360, 341, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13164986157026448, "compression_ratio": 1.4046242774566473, "no_speech_prob": 0.35202744603157043}, {"id": 605, "seek": 305032, "start": 3050.32, "end": 3062.32, "text": " And so the nice thing is LLMs kind of reduce the cost of this pipeline by about a factor of 1000. You can do this 100 samples for only seven cents with GP3.5 turbo.", "tokens": [50364, 400, 370, 264, 1481, 551, 307, 441, 43, 26386, 733, 295, 5407, 264, 2063, 295, 341, 15517, 538, 466, 257, 5952, 295, 9714, 13, 509, 393, 360, 341, 2319, 10938, 337, 787, 3407, 14941, 365, 26039, 18, 13, 20, 20902, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13399051217471852, "compression_ratio": 1.433862433862434, "no_speech_prob": 0.05183056741952896}, {"id": 606, "seek": 305032, "start": 3062.32, "end": 3071.32, "text": " And so then this gives you a kind of automatic, quantifiable measure of how successful this hypothesis is.", "tokens": [50964, 400, 370, 550, 341, 2709, 291, 257, 733, 295, 12509, 11, 4426, 30876, 3481, 295, 577, 4406, 341, 17291, 307, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13399051217471852, "compression_ratio": 1.433862433862434, "no_speech_prob": 0.05183056741952896}, {"id": 607, "seek": 307132, "start": 3071.32, "end": 3085.32, "text": " And the nice thing is also that it's somewhat more reproducible than humans, like you don't have to worry about getting back the same human label errors again, because, you know, the model, well, the model's not actually fixed, open AI keeps updating it, that's kind of annoying.", "tokens": [50364, 400, 264, 1481, 551, 307, 611, 300, 309, 311, 8344, 544, 11408, 32128, 813, 6255, 11, 411, 291, 500, 380, 362, 281, 3292, 466, 1242, 646, 264, 912, 1952, 7645, 13603, 797, 11, 570, 11, 291, 458, 11, 264, 2316, 11, 731, 11, 264, 2316, 311, 406, 767, 6806, 11, 1269, 7318, 5965, 25113, 309, 11, 300, 311, 733, 295, 11304, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09560394287109375, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.017984606325626373}, {"id": 608, "seek": 307132, "start": 3085.32, "end": 3093.32, "text": " But if they were to serve a stable version of the model, then this would be reproducible.", "tokens": [51064, 583, 498, 436, 645, 281, 4596, 257, 8351, 3037, 295, 264, 2316, 11, 550, 341, 576, 312, 11408, 32128, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09560394287109375, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.017984606325626373}, {"id": 609, "seek": 309332, "start": 3094.32, "end": 3111.32, "text": " Right, so now we've kind of gotten this whole pipeline, right, so the overall system as we have this proposal, which at the time we initially wrote this paper was a fine tune to GP3 that generates these candidate hypotheses.", "tokens": [50414, 1779, 11, 370, 586, 321, 600, 733, 295, 5768, 341, 1379, 15517, 11, 558, 11, 370, 264, 4787, 1185, 382, 321, 362, 341, 11494, 11, 597, 412, 264, 565, 321, 9105, 4114, 341, 3035, 390, 257, 2489, 10864, 281, 26039, 18, 300, 23815, 613, 11532, 49969, 13, 51264], "temperature": 0.0, "avg_logprob": -0.15720136006673177, "compression_ratio": 1.575, "no_speech_prob": 0.06752249598503113}, {"id": 610, "seek": 309332, "start": 3111.32, "end": 3117.32, "text": " Then we have a verifier that kind of, you know, does this check on each of the hypotheses.", "tokens": [51264, 1396, 321, 362, 257, 1306, 9902, 300, 733, 295, 11, 291, 458, 11, 775, 341, 1520, 322, 1184, 295, 264, 49969, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15720136006673177, "compression_ratio": 1.575, "no_speech_prob": 0.06752249598503113}, {"id": 611, "seek": 311732, "start": 3117.32, "end": 3124.32, "text": " And at the time it was fine tune unified QA. Now you can kind of replace with newer models.", "tokens": [50364, 400, 412, 264, 565, 309, 390, 2489, 10864, 26787, 1249, 32, 13, 823, 291, 393, 733, 295, 7406, 365, 17628, 5245, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11280423623544199, "compression_ratio": 1.573394495412844, "no_speech_prob": 0.04883621633052826}, {"id": 612, "seek": 311732, "start": 3124.32, "end": 3131.32, "text": " And then you kind of, you know, re rank the hypotheses based on their actual success rate at this classification task.", "tokens": [50714, 400, 550, 291, 733, 295, 11, 291, 458, 11, 319, 6181, 264, 49969, 2361, 322, 641, 3539, 2245, 3314, 412, 341, 21538, 5633, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11280423623544199, "compression_ratio": 1.573394495412844, "no_speech_prob": 0.04883621633052826}, {"id": 613, "seek": 311732, "start": 3131.32, "end": 3138.32, "text": " And, you know, why is this decomposition useful. Well, from an engineering perspective, and I think this is actually very important.", "tokens": [51064, 400, 11, 291, 458, 11, 983, 307, 341, 48356, 4420, 13, 1042, 11, 490, 364, 7043, 4585, 11, 293, 286, 519, 341, 307, 767, 588, 1021, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11280423623544199, "compression_ratio": 1.573394495412844, "no_speech_prob": 0.04883621633052826}, {"id": 614, "seek": 313832, "start": 3138.32, "end": 3144.32, "text": " The proposer only sees 30 examples, because that's length of its context window.", "tokens": [50364, 440, 7532, 260, 787, 8194, 2217, 5110, 11, 570, 300, 311, 4641, 295, 1080, 4319, 4910, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12933299480340418, "compression_ratio": 1.4930875576036866, "no_speech_prob": 0.0574738085269928}, {"id": 615, "seek": 313832, "start": 3144.32, "end": 3161.32, "text": " So it's in that sense fairly limited, even though it's this very smart, like GPT three or four system, whereas the verifier can see thousands of examples and so you can get much better tests of statistical significance.", "tokens": [50664, 407, 309, 311, 294, 300, 2020, 6457, 5567, 11, 754, 1673, 309, 311, 341, 588, 4069, 11, 411, 26039, 51, 1045, 420, 1451, 1185, 11, 9735, 264, 1306, 9902, 393, 536, 5383, 295, 5110, 293, 370, 291, 393, 483, 709, 1101, 6921, 295, 22820, 17687, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12933299480340418, "compression_ratio": 1.4930875576036866, "no_speech_prob": 0.0574738085269928}, {"id": 616, "seek": 313832, "start": 3161.32, "end": 3163.32, "text": " How am I doing on time.", "tokens": [51514, 1012, 669, 286, 884, 322, 565, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12933299480340418, "compression_ratio": 1.4930875576036866, "no_speech_prob": 0.0574738085269928}, {"id": 617, "seek": 316332, "start": 3163.32, "end": 3166.32, "text": " I think we have about five minutes left.", "tokens": [50364, 286, 519, 321, 362, 466, 1732, 2077, 1411, 13, 50514], "temperature": 0.0, "avg_logprob": -0.17874433556381536, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.051052045077085495}, {"id": 618, "seek": 316332, "start": 3166.32, "end": 3168.32, "text": " Okay, cool.", "tokens": [50514, 1033, 11, 1627, 13, 50614], "temperature": 0.0, "avg_logprob": -0.17874433556381536, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.051052045077085495}, {"id": 619, "seek": 316332, "start": 3168.32, "end": 3174.32, "text": " So maybe I'll just say, you know, you can use this for a bunch of things. So for describing distribution shifts.", "tokens": [50614, 407, 1310, 286, 603, 445, 584, 11, 291, 458, 11, 291, 393, 764, 341, 337, 257, 3840, 295, 721, 13, 407, 337, 16141, 7316, 19201, 13, 50914], "temperature": 0.0, "avg_logprob": -0.17874433556381536, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.051052045077085495}, {"id": 620, "seek": 316332, "start": 3174.32, "end": 3183.32, "text": " There's these two data sets MNLI and SNLI where SNLI is often used as like an OD version of MNLI.", "tokens": [50914, 821, 311, 613, 732, 1412, 6352, 376, 45, 48718, 293, 13955, 48718, 689, 13955, 48718, 307, 2049, 1143, 382, 411, 364, 48447, 3037, 295, 376, 45, 48718, 13, 51364], "temperature": 0.0, "avg_logprob": -0.17874433556381536, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.051052045077085495}, {"id": 621, "seek": 316332, "start": 3183.32, "end": 3189.32, "text": " Here's four samples to which are from SNLI and to which are from MNLI.", "tokens": [51364, 1692, 311, 1451, 10938, 281, 597, 366, 490, 13955, 48718, 293, 281, 597, 366, 490, 376, 45, 48718, 13, 51664], "temperature": 0.0, "avg_logprob": -0.17874433556381536, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.051052045077085495}, {"id": 622, "seek": 318932, "start": 3189.32, "end": 3194.32, "text": " It's not immediately obvious what distinguishes them.", "tokens": [50364, 467, 311, 406, 4258, 6322, 437, 11365, 16423, 552, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08056058666922829, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.014500794932246208}, {"id": 623, "seek": 318932, "start": 3194.32, "end": 3208.32, "text": " But if I say that SNLI describes a picture, then it's very clear that the green ones are SNLI because it says the church choir sings to the masses and old man with the packages poses in front of an advertisement.", "tokens": [50614, 583, 498, 286, 584, 300, 13955, 48718, 15626, 257, 3036, 11, 550, 309, 311, 588, 1850, 300, 264, 3092, 2306, 366, 13955, 48718, 570, 309, 1619, 264, 4128, 31244, 23250, 281, 264, 23935, 293, 1331, 587, 365, 264, 17401, 26059, 294, 1868, 295, 364, 31370, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08056058666922829, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.014500794932246208}, {"id": 624, "seek": 318932, "start": 3208.32, "end": 3211.32, "text": " And the other two are not about pictures.", "tokens": [51314, 400, 264, 661, 732, 366, 406, 466, 5242, 13, 51464], "temperature": 0.0, "avg_logprob": -0.08056058666922829, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.014500794932246208}, {"id": 625, "seek": 318932, "start": 3211.32, "end": 3216.32, "text": " So you kind of immediately see what the distribution shift is here.", "tokens": [51464, 407, 291, 733, 295, 4258, 536, 437, 264, 7316, 5513, 307, 510, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08056058666922829, "compression_ratio": 1.5864978902953586, "no_speech_prob": 0.014500794932246208}, {"id": 626, "seek": 321632, "start": 3216.32, "end": 3224.32, "text": " There's two paraphrase data sets, Twitter, PPTV and QQP, which stands for core question pairs.", "tokens": [50364, 821, 311, 732, 36992, 1703, 651, 1412, 6352, 11, 5794, 11, 37369, 12586, 293, 1249, 48, 47, 11, 597, 7382, 337, 4965, 1168, 15494, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14077384192664344, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.01132943294942379}, {"id": 627, "seek": 321632, "start": 3224.32, "end": 3228.32, "text": " It says Twitter talks about a news story and core contains a question.", "tokens": [50764, 467, 1619, 5794, 6686, 466, 257, 2583, 1657, 293, 4965, 8306, 257, 1168, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14077384192664344, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.01132943294942379}, {"id": 628, "seek": 321632, "start": 3228.32, "end": 3235.32, "text": " These are just kind of sanity checks like these would be kind of totally obvious to anyone who was familiar with these data sets.", "tokens": [50964, 1981, 366, 445, 733, 295, 47892, 13834, 411, 613, 576, 312, 733, 295, 3879, 6322, 281, 2878, 567, 390, 4963, 365, 613, 1412, 6352, 13, 51314], "temperature": 0.0, "avg_logprob": -0.14077384192664344, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.01132943294942379}, {"id": 629, "seek": 321632, "start": 3235.32, "end": 3237.32, "text": " But you can do more interesting things.", "tokens": [51314, 583, 291, 393, 360, 544, 1880, 721, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14077384192664344, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.01132943294942379}, {"id": 630, "seek": 321632, "start": 3237.32, "end": 3244.32, "text": " So this was one that I think to our knowledge was novel at the time we discovered it detecting spurious cues in a data set.", "tokens": [51414, 407, 341, 390, 472, 300, 286, 519, 281, 527, 3601, 390, 7613, 412, 264, 565, 321, 6941, 309, 40237, 637, 24274, 32192, 294, 257, 1412, 992, 13, 51764], "temperature": 0.0, "avg_logprob": -0.14077384192664344, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.01132943294942379}, {"id": 631, "seek": 324432, "start": 3244.32, "end": 3250.32, "text": " So we handed it this data set called SUBJ, which is a data set for subjectivity analysis.", "tokens": [50364, 407, 321, 16013, 309, 341, 1412, 992, 1219, 9872, 33, 41, 11, 597, 307, 257, 1412, 992, 337, 3983, 4253, 5215, 13, 50664], "temperature": 0.0, "avg_logprob": -0.07842002290018489, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.0021822918206453323}, {"id": 632, "seek": 324432, "start": 3250.32, "end": 3253.32, "text": " And it said the objective class was a plot summary of a film.", "tokens": [50664, 400, 309, 848, 264, 10024, 1508, 390, 257, 7542, 12691, 295, 257, 2007, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07842002290018489, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.0021822918206453323}, {"id": 633, "seek": 324432, "start": 3253.32, "end": 3263.32, "text": " The subjective class is a quote from a film review, which seems like it should be wrong for a data set that's about subjectivity analysis.", "tokens": [50814, 440, 25972, 1508, 307, 257, 6513, 490, 257, 2007, 3131, 11, 597, 2544, 411, 309, 820, 312, 2085, 337, 257, 1412, 992, 300, 311, 466, 3983, 4253, 5215, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07842002290018489, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.0021822918206453323}, {"id": 634, "seek": 324432, "start": 3263.32, "end": 3268.32, "text": " But if you actually go back and read the paper, it says,", "tokens": [51314, 583, 498, 291, 767, 352, 646, 293, 1401, 264, 3035, 11, 309, 1619, 11, 51564], "temperature": 0.0, "avg_logprob": -0.07842002290018489, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.0021822918206453323}, {"id": 635, "seek": 326832, "start": 3268.32, "end": 3274.32, "text": " to gather subjective sentences, we collected 5000 movie reviews snippets from Rotten Tomatoes to obtain mostly objective data.", "tokens": [50364, 281, 5448, 25972, 16579, 11, 321, 11087, 23777, 3169, 10229, 35623, 1385, 490, 17681, 1147, 35936, 279, 281, 12701, 5240, 10024, 1412, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11223567206904574, "compression_ratio": 1.6297577854671281, "no_speech_prob": 0.005641311407089233}, {"id": 636, "seek": 326832, "start": 3274.32, "end": 3278.32, "text": " We took 5000 sentences from plot summaries available from IMDB.", "tokens": [50664, 492, 1890, 23777, 16579, 490, 7542, 8367, 4889, 2435, 490, 21463, 27735, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11223567206904574, "compression_ratio": 1.6297577854671281, "no_speech_prob": 0.005641311407089233}, {"id": 637, "seek": 326832, "start": 3278.32, "end": 3287.32, "text": " So actually, if you did well in this data set, you were basically learning this rather than stuff about subjectivity.", "tokens": [50864, 407, 767, 11, 498, 291, 630, 731, 294, 341, 1412, 992, 11, 291, 645, 1936, 2539, 341, 2831, 813, 1507, 466, 3983, 4253, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11223567206904574, "compression_ratio": 1.6297577854671281, "no_speech_prob": 0.005641311407089233}, {"id": 638, "seek": 326832, "start": 3287.32, "end": 3294.32, "text": " There's like other shortcuts we found somewhere new somewhere old, but you can sort of find all these various cues.", "tokens": [51314, 821, 311, 411, 661, 34620, 321, 1352, 4079, 777, 4079, 1331, 11, 457, 291, 393, 1333, 295, 915, 439, 613, 3683, 32192, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11223567206904574, "compression_ratio": 1.6297577854671281, "no_speech_prob": 0.005641311407089233}, {"id": 639, "seek": 326832, "start": 3294.32, "end": 3297.32, "text": " You can use this for error analysis and so on.", "tokens": [51664, 509, 393, 764, 341, 337, 6713, 5215, 293, 370, 322, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11223567206904574, "compression_ratio": 1.6297577854671281, "no_speech_prob": 0.005641311407089233}, {"id": 640, "seek": 329732, "start": 3297.32, "end": 3302.32, "text": " So maybe just to summarize, right, we have these four steps of this pipeline.", "tokens": [50364, 407, 1310, 445, 281, 20858, 11, 558, 11, 321, 362, 613, 1451, 4439, 295, 341, 15517, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1111453122431689, "compression_ratio": 1.6360294117647058, "no_speech_prob": 0.003074731444939971}, {"id": 641, "seek": 329732, "start": 3302.32, "end": 3308.32, "text": " Initial data was just the two text distributions, generate the hypothesis by prompting GPT-3,", "tokens": [50614, 22937, 831, 1412, 390, 445, 264, 732, 2487, 37870, 11, 8460, 264, 17291, 538, 12391, 278, 26039, 51, 12, 18, 11, 50914], "temperature": 0.0, "avg_logprob": -0.1111453122431689, "compression_ratio": 1.6360294117647058, "no_speech_prob": 0.003074731444939971}, {"id": 642, "seek": 329732, "start": 3308.32, "end": 3316.32, "text": " formalize the hypothesis by measuring the success rate, and then you kind of test on new held out samples.", "tokens": [50914, 9860, 1125, 264, 17291, 538, 13389, 264, 2245, 3314, 11, 293, 550, 291, 733, 295, 1500, 322, 777, 5167, 484, 10938, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1111453122431689, "compression_ratio": 1.6360294117647058, "no_speech_prob": 0.003074731444939971}, {"id": 643, "seek": 329732, "start": 3316.32, "end": 3326.32, "text": " The final thing I'll just leave up is we have ongoing work that is kind of taking this far beyond classification to just sort of like generally using natural language", "tokens": [51314, 440, 2572, 551, 286, 603, 445, 1856, 493, 307, 321, 362, 10452, 589, 300, 307, 733, 295, 1940, 341, 1400, 4399, 21538, 281, 445, 1333, 295, 411, 5101, 1228, 3303, 2856, 51814], "temperature": 0.0, "avg_logprob": -0.1111453122431689, "compression_ratio": 1.6360294117647058, "no_speech_prob": 0.003074731444939971}, {"id": 644, "seek": 332632, "start": 3326.32, "end": 3331.32, "text": " predicates as features in statistical models.", "tokens": [50364, 47336, 1024, 382, 4122, 294, 22820, 5245, 13, 50614], "temperature": 0.0, "avg_logprob": -0.09003542510556503, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.017428701743483543}, {"id": 645, "seek": 332632, "start": 3331.32, "end": 3341.32, "text": " So this example here is trying to describe temporal drift in news headlines from the Australian Broadcasting Company,", "tokens": [50614, 407, 341, 1365, 510, 307, 1382, 281, 6786, 30881, 19699, 294, 2583, 23867, 490, 264, 13337, 14074, 48860, 13918, 11, 51114], "temperature": 0.0, "avg_logprob": -0.09003542510556503, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.017428701743483543}, {"id": 646, "seek": 332632, "start": 3341.32, "end": 3348.32, "text": " and it kind of identifies these five features that kind of vary.", "tokens": [51114, 293, 309, 733, 295, 34597, 613, 1732, 4122, 300, 733, 295, 10559, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09003542510556503, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.017428701743483543}, {"id": 647, "seek": 332632, "start": 3348.32, "end": 3354.32, "text": " And you could think of as maybe the top five principal components explain the variation in this data set.", "tokens": [51464, 400, 291, 727, 519, 295, 382, 1310, 264, 1192, 1732, 9716, 6677, 2903, 264, 12990, 294, 341, 1412, 992, 13, 51764], "temperature": 0.0, "avg_logprob": -0.09003542510556503, "compression_ratio": 1.568075117370892, "no_speech_prob": 0.017428701743483543}, {"id": 648, "seek": 335432, "start": 3354.32, "end": 3358.32, "text": " Although the percent of variance explained is actually still pretty low here.", "tokens": [50364, 5780, 264, 3043, 295, 21977, 8825, 307, 767, 920, 1238, 2295, 510, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11720635579979938, "compression_ratio": 1.3525179856115108, "no_speech_prob": 0.004000758286565542}, {"id": 649, "seek": 335432, "start": 3358.32, "end": 3365.32, "text": " So I think you should think of this as just like a initial result.", "tokens": [50564, 407, 286, 519, 291, 820, 519, 295, 341, 382, 445, 411, 257, 5883, 1874, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11720635579979938, "compression_ratio": 1.3525179856115108, "no_speech_prob": 0.004000758286565542}, {"id": 650, "seek": 335432, "start": 3365.32, "end": 3367.32, "text": " So maybe I'll end there and take questions.", "tokens": [50914, 407, 1310, 286, 603, 917, 456, 293, 747, 1651, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11720635579979938, "compression_ratio": 1.3525179856115108, "no_speech_prob": 0.004000758286565542}, {"id": 651, "seek": 336732, "start": 3367.32, "end": 3386.32, "text": " So for the proposal, there can be just like do prompt optimization like overtime,", "tokens": [50364, 407, 337, 264, 11494, 11, 456, 393, 312, 445, 411, 360, 12391, 19618, 411, 29863, 11, 51314], "temperature": 0.0, "avg_logprob": -0.22900799782045425, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.00478267390280962}, {"id": 652, "seek": 336732, "start": 3386.32, "end": 3390.32, "text": " you keep selecting like an example and then see where it fails and then show it again.", "tokens": [51314, 291, 1066, 18182, 411, 364, 1365, 293, 550, 536, 689, 309, 18199, 293, 550, 855, 309, 797, 13, 51514], "temperature": 0.0, "avg_logprob": -0.22900799782045425, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.00478267390280962}, {"id": 653, "seek": 336732, "start": 3390.32, "end": 3396.32, "text": " And then after a while you have like this good hypothesis and that you can somehow guarantee that is correct", "tokens": [51514, 400, 550, 934, 257, 1339, 291, 362, 411, 341, 665, 17291, 293, 300, 291, 393, 6063, 10815, 300, 307, 3006, 51814], "temperature": 0.0, "avg_logprob": -0.22900799782045425, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.00478267390280962}, {"id": 654, "seek": 339632, "start": 3396.32, "end": 3398.32, "text": " in a set of checking things.", "tokens": [50364, 294, 257, 992, 295, 8568, 721, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2175551327792081, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.012235678732395172}, {"id": 655, "seek": 339632, "start": 3398.32, "end": 3400.32, "text": " So you could.", "tokens": [50464, 407, 291, 727, 13, 50564], "temperature": 0.0, "avg_logprob": -0.2175551327792081, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.012235678732395172}, {"id": 656, "seek": 339632, "start": 3400.32, "end": 3404.32, "text": " So is the idea like basically like fine tune the proposal to get better and better?", "tokens": [50564, 407, 307, 264, 1558, 411, 1936, 411, 2489, 10864, 264, 11494, 281, 483, 1101, 293, 1101, 30, 50764], "temperature": 0.0, "avg_logprob": -0.2175551327792081, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.012235678732395172}, {"id": 657, "seek": 339632, "start": 3404.32, "end": 3406.32, "text": " Yeah, fine tune the prompt.", "tokens": [50764, 865, 11, 2489, 10864, 264, 12391, 13, 50864], "temperature": 0.0, "avg_logprob": -0.2175551327792081, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.012235678732395172}, {"id": 658, "seek": 339632, "start": 3406.32, "end": 3408.32, "text": " You do that prompt optimization.", "tokens": [50864, 509, 360, 300, 12391, 19618, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2175551327792081, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.012235678732395172}, {"id": 659, "seek": 339632, "start": 3408.32, "end": 3410.32, "text": " Oh, prompt optimization.", "tokens": [50964, 876, 11, 12391, 19618, 13, 51064], "temperature": 0.0, "avg_logprob": -0.2175551327792081, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.012235678732395172}, {"id": 660, "seek": 339632, "start": 3410.32, "end": 3419.32, "text": " So I think so my general sense is if you just use the proposal,", "tokens": [51064, 407, 286, 519, 370, 452, 2674, 2020, 307, 498, 291, 445, 764, 264, 11494, 11, 51514], "temperature": 0.0, "avg_logprob": -0.2175551327792081, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.012235678732395172}, {"id": 661, "seek": 341932, "start": 3419.32, "end": 3422.32, "text": " I mean, we didn't try to do like the full prompt optimization,", "tokens": [50364, 286, 914, 11, 321, 994, 380, 853, 281, 360, 411, 264, 1577, 12391, 19618, 11, 50514], "temperature": 0.0, "avg_logprob": -0.16274336718638008, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.1955028772354126}, {"id": 662, "seek": 341932, "start": 3422.32, "end": 3429.32, "text": " but we do do ablations of like just using the proposal and that generally does a lot worse.", "tokens": [50514, 457, 321, 360, 360, 410, 75, 763, 295, 411, 445, 1228, 264, 11494, 293, 300, 5101, 775, 257, 688, 5324, 13, 50864], "temperature": 0.0, "avg_logprob": -0.16274336718638008, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.1955028772354126}, {"id": 663, "seek": 341932, "start": 3429.32, "end": 3432.32, "text": " I think that there's a couple issues.", "tokens": [50864, 286, 519, 300, 456, 311, 257, 1916, 2663, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16274336718638008, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.1955028772354126}, {"id": 664, "seek": 341932, "start": 3432.32, "end": 3436.32, "text": " What one is just that the proposal gets much less data than the verifier.", "tokens": [51014, 708, 472, 307, 445, 300, 264, 11494, 2170, 709, 1570, 1412, 813, 264, 1306, 9902, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16274336718638008, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.1955028772354126}, {"id": 665, "seek": 341932, "start": 3436.32, "end": 3440.32, "text": " So, you know, even like if you do prompt optimization.", "tokens": [51214, 407, 11, 291, 458, 11, 754, 411, 498, 291, 360, 12391, 19618, 13, 51414], "temperature": 0.0, "avg_logprob": -0.16274336718638008, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.1955028772354126}, {"id": 666, "seek": 341932, "start": 3440.32, "end": 3447.32, "text": " Oh, no, what's your I thought that your proposal like get like a few number of data.", "tokens": [51414, 876, 11, 572, 11, 437, 311, 428, 286, 1194, 300, 428, 11494, 411, 483, 411, 257, 1326, 1230, 295, 1412, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16274336718638008, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.1955028772354126}, {"id": 667, "seek": 344732, "start": 3447.32, "end": 3449.32, "text": " That's why you should do the checking.", "tokens": [50364, 663, 311, 983, 291, 820, 360, 264, 8568, 13, 50464], "temperature": 0.0, "avg_logprob": -0.16598174768850343, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0047532906755805016}, {"id": 668, "seek": 344732, "start": 3449.32, "end": 3450.32, "text": " Yes.", "tokens": [50464, 1079, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16598174768850343, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0047532906755805016}, {"id": 669, "seek": 344732, "start": 3450.32, "end": 3455.32, "text": " And then I was just saying that can you make the proposal more strong by just to prompt.", "tokens": [50514, 400, 550, 286, 390, 445, 1566, 300, 393, 291, 652, 264, 11494, 544, 2068, 538, 445, 281, 12391, 13, 50764], "temperature": 0.0, "avg_logprob": -0.16598174768850343, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0047532906755805016}, {"id": 670, "seek": 344732, "start": 3455.32, "end": 3461.32, "text": " I see everything and then you can guarantee that these hypothesis is correct.", "tokens": [50764, 286, 536, 1203, 293, 550, 291, 393, 10815, 300, 613, 17291, 307, 3006, 13, 51064], "temperature": 0.0, "avg_logprob": -0.16598174768850343, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0047532906755805016}, {"id": 671, "seek": 344732, "start": 3461.32, "end": 3464.32, "text": " Yeah, so that's that's an interesting idea.", "tokens": [51064, 865, 11, 370, 300, 311, 300, 311, 364, 1880, 1558, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16598174768850343, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0047532906755805016}, {"id": 672, "seek": 344732, "start": 3464.32, "end": 3471.32, "text": " So you're basically saying, okay, like do prompt optimization to find a prompt that gets this feel like we discussed this.", "tokens": [51214, 407, 291, 434, 1936, 1566, 11, 1392, 11, 411, 360, 12391, 19618, 281, 915, 257, 12391, 300, 2170, 341, 841, 411, 321, 7152, 341, 13, 51564], "temperature": 0.0, "avg_logprob": -0.16598174768850343, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0047532906755805016}, {"id": 673, "seek": 344732, "start": 3471.32, "end": 3475.32, "text": " What was your claim is that you don't get semantically.", "tokens": [51564, 708, 390, 428, 3932, 307, 300, 291, 500, 380, 483, 4361, 49505, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16598174768850343, "compression_ratio": 1.6653846153846155, "no_speech_prob": 0.0047532906755805016}, {"id": 674, "seek": 347532, "start": 3475.32, "end": 3483.32, "text": " The point that you do gradient is gradient is that you find the prompts and you are you very easily get like a readable prompt that is not natural.", "tokens": [50364, 440, 935, 300, 291, 360, 16235, 307, 16235, 307, 300, 291, 915, 264, 41095, 293, 291, 366, 291, 588, 3612, 483, 411, 257, 49857, 12391, 300, 307, 406, 3303, 13, 50764], "temperature": 0.0, "avg_logprob": -0.2861285108201047, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.0034823815803974867}, {"id": 675, "seek": 347532, "start": 3483.32, "end": 3486.32, "text": " I would stream because what you typically find with adversarial examples.", "tokens": [50764, 286, 576, 4309, 570, 437, 291, 5850, 915, 365, 17641, 44745, 5110, 13, 50914], "temperature": 0.0, "avg_logprob": -0.2861285108201047, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.0034823815803974867}, {"id": 676, "seek": 347532, "start": 3486.32, "end": 3488.32, "text": " They are relatively possible.", "tokens": [50914, 814, 366, 7226, 1944, 13, 51014], "temperature": 0.0, "avg_logprob": -0.2861285108201047, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.0034823815803974867}, {"id": 677, "seek": 347532, "start": 3488.32, "end": 3489.32, "text": " Yeah.", "tokens": [51014, 865, 13, 51064], "temperature": 0.0, "avg_logprob": -0.2861285108201047, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.0034823815803974867}, {"id": 678, "seek": 347532, "start": 3489.32, "end": 3491.32, "text": " So I think the issue is at least right now.", "tokens": [51064, 407, 286, 519, 264, 2734, 307, 412, 1935, 558, 586, 13, 51164], "temperature": 0.0, "avg_logprob": -0.2861285108201047, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.0034823815803974867}, {"id": 679, "seek": 347532, "start": 3491.32, "end": 3496.32, "text": " If you do this, it's hard to get kind of like natural language out right now.", "tokens": [51164, 759, 291, 360, 341, 11, 309, 311, 1152, 281, 483, 733, 295, 411, 3303, 2856, 484, 558, 586, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2861285108201047, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.0034823815803974867}, {"id": 680, "seek": 349632, "start": 3496.32, "end": 3507.32, "text": " Right now you asked you for to give the gradients but", "tokens": [50364, 1779, 586, 291, 2351, 291, 337, 281, 976, 264, 2771, 2448, 457, 50914], "temperature": 0.0, "avg_logprob": -0.22219572067260743, "compression_ratio": 1.6009852216748768, "no_speech_prob": 0.011838044971227646}, {"id": 681, "seek": 349632, "start": 3507.32, "end": 3510.32, "text": " Thank you for this amazing talk.", "tokens": [50914, 1044, 291, 337, 341, 2243, 751, 13, 51064], "temperature": 0.0, "avg_logprob": -0.22219572067260743, "compression_ratio": 1.6009852216748768, "no_speech_prob": 0.011838044971227646}, {"id": 682, "seek": 349632, "start": 3510.32, "end": 3518.32, "text": " The quick question maybe this is not so you're asking you're asking for hypotheses that separate the two data set.", "tokens": [51064, 440, 1702, 1168, 1310, 341, 307, 406, 370, 291, 434, 3365, 291, 434, 3365, 337, 49969, 300, 4994, 264, 732, 1412, 992, 13, 51464], "temperature": 0.0, "avg_logprob": -0.22219572067260743, "compression_ratio": 1.6009852216748768, "no_speech_prob": 0.011838044971227646}, {"id": 683, "seek": 349632, "start": 3518.32, "end": 3524.32, "text": " And when you were testing them, they were like, okay, let me pick two examples and say one is more positive than the other.", "tokens": [51464, 400, 562, 291, 645, 4997, 552, 11, 436, 645, 411, 11, 1392, 11, 718, 385, 1888, 732, 5110, 293, 584, 472, 307, 544, 3353, 813, 264, 661, 13, 51764], "temperature": 0.0, "avg_logprob": -0.22219572067260743, "compression_ratio": 1.6009852216748768, "no_speech_prob": 0.011838044971227646}, {"id": 684, "seek": 352432, "start": 3524.32, "end": 3536.32, "text": " But could you tweak this to possibly look for hypotheses that certainly answer yes in one case and no in the other case that you don't have to look at two comparative examples.", "tokens": [50364, 583, 727, 291, 29879, 341, 281, 6264, 574, 337, 49969, 300, 3297, 1867, 2086, 294, 472, 1389, 293, 572, 294, 264, 661, 1389, 300, 291, 500, 380, 362, 281, 574, 412, 732, 39292, 5110, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14734760144861733, "compression_ratio": 1.683168316831683, "no_speech_prob": 0.024043718352913857}, {"id": 685, "seek": 352432, "start": 3536.32, "end": 3539.32, "text": " Like, okay, this one talks of a female character.", "tokens": [50964, 1743, 11, 1392, 11, 341, 472, 6686, 295, 257, 6556, 2517, 13, 51114], "temperature": 0.0, "avg_logprob": -0.14734760144861733, "compression_ratio": 1.683168316831683, "no_speech_prob": 0.024043718352913857}, {"id": 686, "seek": 352432, "start": 3539.32, "end": 3542.32, "text": " The other one talks of a male character.", "tokens": [51114, 440, 661, 472, 6686, 295, 257, 7133, 2517, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14734760144861733, "compression_ratio": 1.683168316831683, "no_speech_prob": 0.024043718352913857}, {"id": 687, "seek": 352432, "start": 3542.32, "end": 3547.32, "text": " So what would be just so I can understand like what would be an example.", "tokens": [51264, 407, 437, 576, 312, 445, 370, 286, 393, 1223, 411, 437, 576, 312, 364, 1365, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14734760144861733, "compression_ratio": 1.683168316831683, "no_speech_prob": 0.024043718352913857}, {"id": 688, "seek": 354732, "start": 3547.32, "end": 3556.32, "text": " So as an example, the second data, the second example you showed was that this statement talks of two female characters.", "tokens": [50364, 407, 382, 364, 1365, 11, 264, 1150, 1412, 11, 264, 1150, 1365, 291, 4712, 390, 300, 341, 5629, 6686, 295, 732, 6556, 4342, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1353150147658128, "compression_ratio": 1.7702127659574467, "no_speech_prob": 0.0939471572637558}, {"id": 689, "seek": 354732, "start": 3556.32, "end": 3562.32, "text": " That's a statement you can answer in yes or no without looking at two different samples from the two data sets.", "tokens": [50814, 663, 311, 257, 5629, 291, 393, 1867, 294, 2086, 420, 572, 1553, 1237, 412, 732, 819, 10938, 490, 264, 732, 1412, 6352, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1353150147658128, "compression_ratio": 1.7702127659574467, "no_speech_prob": 0.0939471572637558}, {"id": 690, "seek": 354732, "start": 3562.32, "end": 3563.32, "text": " Yeah.", "tokens": [51114, 865, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1353150147658128, "compression_ratio": 1.7702127659574467, "no_speech_prob": 0.0939471572637558}, {"id": 691, "seek": 354732, "start": 3563.32, "end": 3572.32, "text": " So could you tweak this to possibly just look for hypotheses that could be answered on a single data point rather than a comparison between data points from different data sets.", "tokens": [51164, 407, 727, 291, 29879, 341, 281, 6264, 445, 574, 337, 49969, 300, 727, 312, 10103, 322, 257, 2167, 1412, 935, 2831, 813, 257, 9660, 1296, 1412, 2793, 490, 819, 1412, 6352, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1353150147658128, "compression_ratio": 1.7702127659574467, "no_speech_prob": 0.0939471572637558}, {"id": 692, "seek": 357232, "start": 3572.32, "end": 3581.32, "text": " Yeah, so we actually, I think, worked with both versions of the system, one that is kind of unary predicates and one that's binary predicates.", "tokens": [50364, 865, 11, 370, 321, 767, 11, 286, 519, 11, 2732, 365, 1293, 9606, 295, 264, 1185, 11, 472, 300, 307, 733, 295, 517, 822, 47336, 1024, 293, 472, 300, 311, 17434, 47336, 1024, 13, 50814], "temperature": 0.0, "avg_logprob": -0.12450116680514428, "compression_ratio": 1.7735849056603774, "no_speech_prob": 0.12222740054130554}, {"id": 693, "seek": 357232, "start": 3581.32, "end": 3587.32, "text": " I think in practice, a lot of the interesting things you want out are kind of binary predicates.", "tokens": [50814, 286, 519, 294, 3124, 11, 257, 688, 295, 264, 1880, 721, 291, 528, 484, 366, 733, 295, 17434, 47336, 1024, 13, 51114], "temperature": 0.0, "avg_logprob": -0.12450116680514428, "compression_ratio": 1.7735849056603774, "no_speech_prob": 0.12222740054130554}, {"id": 694, "seek": 357232, "start": 3587.32, "end": 3597.32, "text": " So you can get like you can get somewhere with this unary thing, but you're kind of losing something if you don't consider comparatives.", "tokens": [51114, 407, 291, 393, 483, 411, 291, 393, 483, 4079, 365, 341, 517, 822, 551, 11, 457, 291, 434, 733, 295, 7027, 746, 498, 291, 500, 380, 1949, 6311, 4884, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12450116680514428, "compression_ratio": 1.7735849056603774, "no_speech_prob": 0.12222740054130554}, {"id": 695, "seek": 359732, "start": 3597.32, "end": 3599.32, "text": " Okay, let's thank the speaker.", "tokens": [50364, 1033, 11, 718, 311, 1309, 264, 8145, 13, 50464], "temperature": 0.0, "avg_logprob": -0.19322345473549582, "compression_ratio": 0.8333333333333334, "no_speech_prob": 0.23489341139793396}], "language": "en"}