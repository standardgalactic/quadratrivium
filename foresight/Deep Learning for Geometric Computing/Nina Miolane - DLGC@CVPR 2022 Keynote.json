{"text": " Hi everyone, thank you very much for the invitation to speak at this CVPR workshop. I'm very excited to be presenting my research. I will talk about shape learning in biomedical imaging, while by shape learning I mean machine learning for data that are shapes. One data point is one shape. And specifically, we will be interested in the shapes that we see in biomedical images. For example, the shapes of the brains that we can see at the images at the bottom of this slide. So we're interested in the shapes of biological structures that appear in biomedical images. These biological structures can be found at the macroscopic scale all the way down to the nanoscopic scale, going from organs, such as the brains that we just saw, all the way down to tissues, cells, organelles, and molecules. And in 2022, we are actually very lucky, because in order to study these biological structures that are at the heart of life, we can just look at them. We have access to a wide range of imaging techniques that allow us to observe these biological structures. At the macroscopic scale, for example, we have MRI, or magnetic resonance imaging, that allows us to observe human brains. But all the way down to the nanoscopic scale, we have other techniques, ending with cryo-electron microscopy, which allows us to look at biomolecules, such as the human ribosome. Now the point that I want to make with this slide and with this presentation is that in all of these images, there is one feature that is very interesting in the sense that it can be linked to the biology. This feature is the shape. The shape of the biological structure that is being imaged contains enormous information on the biology and the biophysics of what is happening in living organisms. Let me give you an example of this. Actually, let me give you a few examples on how shapes of biological structure contain meaningful information. Few examples in the context of one pathology called Alzheimer's disease. At the macroscopic scale first, Alzheimer's disease is linked to shape changes. If we look at the simulation that I had on the first slide, we see the evolution of a brain through time. Actually, we see three slices of a 3D brain evolving through time. This is a simulation of a brain with Alzheimer's disease. You can see on the simulation that the brain changes shape as it evolves through time. The ventricles, which are the structure in the center of this brain, are becoming larger and larger, so that's the area in black that is in prison. As the brain undergoes atrophy, meaning the brain matter around this ventricle is becoming smaller and smaller. This atrophy is a macroscopic shape change that is characteristic of Alzheimer's disease. Now you may ask, where does this atrophy come from? Where do these macroscopic shape changes come from? Actually, at the microscopic scale now, if we look at cells, so at the neurons, these neurons are dying. The other reasons were why we see this atrophy at the macroscopic scale. When a neuron is dying, it changes shape. As you can see on this video of a dying neuron, it's retracting its axons. At the microscopic scale, for the scale of cells, Alzheimer's disease is linked to shape changes. What's even more interesting is that at the macroscopic scale, there is also a shape problem. We have these two proteins, eta-amyloid and tau, that are changing shape in patient with Alzheimer's disease. Because they have changed shape, they will agglomerate either inside the neurons, so we see in blue, that the proteins agglomerate inside the neuron, or they will agglomerate outside the neuron, and these agglomerations is what will cause the neuron to die. A shape problem at the nanoscopic scale is creating the death of the neurons, which is creating a microscopic shape change, which is also leading to a macroscopic shape change with the atrophy of the brain that we can see on MRI. We have illustrated that biological shape contains biologically relevant information, or medically relevant information, that we can go from biological shapes to biomedical insights. Actually, biophysics tells us that the healthy or the pathological state of the biological structure will change its shape, or generally that the function of a biological structure will change its shape. For example, blood cells have a different shape than brain cells or neurons, because they have different functions. In the context of this talk, we are interested in inverting that model, in learning biophysics or biology, from the data that we have, which are the shapes. So we do statistics and machine learning on shapes, which is what we will call shape learning. Let me show you how we can do shape learning in biomedical imaging, by showing you the architecture of a typical research project in our lab. Usually, it starts with a biomedical question. For example, what is the acceleration of the atrophy that we see in the brains of patients with Alzheimer's disease? It will be interesting to know what's the magnitude of these accelerated brain shape changes, because it could give ideas to build automatic diagnosis procedure. Another biomedical question could be, how do cells move? What you see on this slide, a moving cell, so called a migrating cell. How can cell move is a very important question when one studies metastatic cancer, when the cancerous cells propagate in the human body. All in all, it starts with a biomedical question. Then there is a step of image acquisition, acquiring the MRIs, acquiring the microscopy images, that is done by collaborators of all that. Then there is an important step of shape reconstruction. Yes, because the data that we get are images or videos, so the shape has not been extracted yet. We made it an algorithm of contour detection, edge detection, or segmentation to reconstruct the shape. Then there is a step of shape modeling. You could also think of it as shape featurization. Let's say we have extracted the border of the outline of that cell. How do we want to represent this shape in a computer? There are different choices that one can make, and we're going to see a few of them. And lastly, when we have represented the shape, we have chosen a feature to represent the shape. We can do statistics, machine learning, and deep learning on these data points that are shapes. That's what they call shape learning. In the context of this talk, we will focus on the last two of this pipeline of this cycle. How can we represent a shape in a computer? And then when we have represented the notion of shape in a computer, how can we do machine learning on shapes? Let's start with how we represent the notion of shape in a computer. So shape modeling, our shape representation is interesting because we have different choices as to how to model the shape of the biological structure. But irrespective of these choices, very often, we end up computing with manifolds. What is a manifold? On the left, you have a visual definition of what is a manifold. We can generally define a manifold as a generalization of a vector space that is allowed to be curved. On the left, for example, you can see a 2D vector space, also called a plane, that is not curved. It's linear or flat. And just below it, we have an example of a 2D manifold M that is itself allowed to be curved. You can see that there is some curvature there. Now, this is interesting for us because, as I said, we can try different models of shapes, and representations of shapes, but very often, we will see this manifold M appear. Let me give you examples of how manifolds enter the computations. First, let's look at the shapes themselves. Let's say we are interested in shape of this cat, and more precisely, the shape of the surface that is defining the cat. The shape of the surface is a generalization of a vector space that is allowed to be curved, and so the shape itself is the manifold in this case, so I write M equal to the shape. The manifold is the shape. If you want to compute on these shapes, for example, define a hit map or a scalar field on this shape, you are working with defining a function on the manifold. Another example is a bit more abstract. The manifold can be the space of all the shapes. In the first case, one shape is a manifold. In the second case, we consider the space of all possible shapes, but you have illustrated with this sphere is actually the shape space of all the possible triangles, so you can see if you look, maybe you can see, that I have superimposed a little triangle on this sphere, because here there is a triangle. This sphere actually represents the space of all the triangular shapes, so all the visible shapes. Now, this illustration is the shape space of triangles, but more generally, the shape space of surfaces is also a manifold. Continuing, you could be interested in the space of shape motions. For example, how your shape translates and rotates. Here you have a cancer cell translating and rotating. If you want to do statistics on all the possible motions that your shape can perform, then you're doing statistics on, again, a manifold M. That is this time, the space of shape motions. And lastly, you could be interested in how shapes deform, or a smooth deformation of the cancer cell, as you can see on the left, but also other objects like functional maps that explain how shapes can deform. And interestingly, again, if you choose this shape representation, you end up with a space of shapes deformation, that is a manifold. There are other models of shape that I will not cover here, but it seems that these four models of shapes are quite common, and all of them require thinking about manifolds. Thinking about manifolds, what can we do with manifolds? Let's think about generalizing basic operations, and for example, generating the definition of a new manifold. On the center of the screen, I put the sphere. The sphere is one example of manifolds that we had just before. It can represent the shape space of triangles. The one point of the sphere is the shape of a triangle. You can also think of it as one point of the sphere is a shape motion. How do I compute the mean of two triangles? That will be the two real points here. Or how do I compute the mean of two shape transformations? That will be the two blue points here. I could use the traditional definitions of statistics, and I can use the traditional definition of mean and compute the mean as this orange point, which would be computed as the middle of the two blue points. But in that case, if I apply traditional statistics, there is a problem because you see the mean in orange does not belong to the manifold. Now, if the manifold represents the shape space of triangles, what we are saying in applying traditional statistics is that the mean of two triangles is not even a triangle. So traditional statistics do not really apply in this setting. We would like to generalize operations, statistics, machine learning, and deep learning to manifolds. So that when I try to compute the mean of these two blue points, that again, the two triangle shapes, two shape deformations, I end up with a orange point that is at least part of the data space that I'm interested in. So we'd like to generalize all of these operations to manipulate. Why would we want to do that instead of, for example, just using traditional statistics and then projecting back on the manifold? This is because knowing that the data space is a manifold is information. Knowing the geometry of the shape space, of the space of shape motions, of the space of shape deformations, that is information. And any information that we can incorporate in the learning algorithm is welcome. So in other words, we would like to use the geometry of manifolds as an inductive bias in our analysis. So let's see how we can do this. So I've just introduced shape modeling. I've introduced four models of shapes, four representations of shapes, and all of them require us to compute on manifolds. Now let's move to shape deep learning, which is a way of computing on manifolds, and see how we can define shape deep learning for these manifold spaces. So let's think about what is deep learning first. I've put four big categories of subfields of deep learning, or machine learning in general, supervised learning, unsupervised learning, reinforcement learning, and optimization. What is supervised deep learning in the context of shape learning? In supervised learning, the goal is to learn a map from an input space to an output space Y. Now let's rename the input space X into Mx, to denote that the input space can be a manifold. And let's rename the output space Y as MY to denote that the output space can be a manifold. So this is a setting that will appear if we want to do shape deep learning. As an example, let's say Mx is just an image, a 2D image of a 3D object. In that case, it's not, I mean, it's a special case of a manifold, but it's not a curved manifold. And let's say Y is the space of the pose of the subject. In that case, MY would be a manifold. That's an example of shape learning when we want to predict an element of MY, therefore an element of a manifold. You can have all the cases where Mx is the manifold. For example, you see the shape of the brain and you want to predict if that brain has Alzheimer's disease. In that case, Mx is the space of all possible brain shapes and Y is the probability of having Alzheimer's disease. And you can also have a case where Mx is the manifold and MY is the manifold. In unsupervised learning, the goal is to find patterns in the data that belong to the data space M. Let's say we want to find patterns in a data space of shapes, then M is a manifold. And so we need to generalize unsupervised deep learning to unsupervised learning to manifolds. An example of unsupervised learning would be if we want to find clusters of shapes. We need to find a method that can perform clustering of manifolds. In reinforcement learning, same story. Let's say we want to learn the policy by that gives the priority of applying an action on the state space. Then each of these spaces can also be a manifold or both into a manifold. For example, we want to learn how a shape should move to optimize a certain feature. And lastly, what is underpinning a lot of development in deep learning is the broader field of optimization. And same thing, we may wonder how this can generalize to manifolds. Let's say we want to find the optimal shape that verifies a certain feature. In that case, we want to perform an optimization where the parameter that is varying is actually varying on a manifold. So we want to perform optimization of manifold. The example here, let's say we want to find the optimal deformation that can map one shape onto the other. The deformation is an element of the manifold of the patients. And therefore, this will be an example of optimization on manifolds. So how can we generalize all of these wide fields of deep learning to manifolds? And that's actually a trick that I call the vector space manifold conversion trick. And the trick is as follows. You can realize that all of these machine learning, such as deep learning algorithms, rely on the same basic building blocks. By basic building blocks, I mean some sets of abstract elements and some set of abstract operations. Now, if we can convert these building blocks from their definition on vector spaces to their definitions on manifold, then we have a translation in the sense of language translation that allow us to beautifully convert any type of statistical learning, machine learning, and deep learning algorithm to manifolds. So let's do this. What are the basic building blocks that are at the core of every statistical learning, machine learning, and deep learning algorithm? Well, in terms of the elements, almost all of these algorithms use either points or vectors. So point on the data space, in our case, one point in your shape, one point can be a deformation. They also use vectors. Think about gradient descent. The gradient is a vector anchored at a point on the manifold. And then in terms of operations, there are three operations that come over and over again in these algorithms, which are computing a straight line, computing a distance, and performing a net issue. So straight line, linear regression, our principal component analysis, we are using straight lines. So we need a way of computing straight lines. The squared distance, in many loss functions, we use a notion of squared distance between the ground truth and our prediction. Very often the L2 distance. And then the addition. For example, when we add a gradient to an estimate, we are adding the gradient vector to the estimate point. So we are adding the black arrow to this blue point when we get an orange point. Now, assuming that most of the learning algorithms uses these basic elements and operations, if we can generalize or convert these elements and operations to manifold, then we have our conversion checks. I'm going to introduce the conversion. Yes, we want to convert to manifold. The points are just points. They are the elements of our manifolds. What was a vector on the vector space becomes a tangent vector on the manifold. So on the vector space, point and vectors are approximately the same. On the manifold, points and tangent vectors are two different, very different elements. On the left, the registration on the left, you can see the tangent vector in black that is anchored at the point in blue on the manifold. So we have generalized basic elements. Now let's generalize the operations. The straight line becomes a geodesic on M. I'm not telling you how we compute the geodesic, I'm telling you the translation or conversion of the operation. For example, on the registration on the left, you can see the dotted black line is the geodesic between the blue point and the orange point. The square distance between two points on the manifold becomes the square geodesic distance between the same two points. We're basically the length of the square length of the geodesic that is connecting these two points. And lastly, we need a generalization of the notion of addition. On the vector space, we can add a vector, for example, a vector in black to a point here in blue. On the manifold, this operation is now called the exponential map. And it is, again, just rated on the left, while we add not a vector, but tangent vector, so the tangent vector in black to the point in blue. And performing this addition operation allows us to reach another point on the manifold, which is the point in orange. So that is the vector space manifold conversion. And this trick, we implemented it in this open source package called GM Stats, which generalizes all of these operations that we know very well on vector spaces to manifolds. And for different types of manifolds, specifically the different types of manifold that I showed you in the context of shape representation and shape models. It's a Python package that is available online at these links, and we created it with three objectives. First, to teach hands-on geometric learning. So computing on manifolds can be hard in practice, even though the word manifold comes over and over again in manifold learning, for example. The basic operations on manifolds are sometimes hard to implement. And one of the reasons is that they're not necessarily taught in class besides textbooks. So with this software, you can teach hands-on manifolds and geometric learning. The second objective is to support research in geometric learning or learning on manifolds. So different researchers reach out to us who publish, they have published papers and they want to implement them methods in GM Stats. So as to make them methods better, more available to the general public. So that's on the contributor side supporting the research. And the last objective is to democratize the use of geometric learning, in other words, learning on manifolds. Because once these methods are incorporated into GM Stats, from a user's perspective, you only need to know the conversion that I just presented you on the previous slide, and you can use all of these algorithms. So you do not need to know how a geodesic is implemented. You just need to know that the geodesic is a generalization of a straight line. So it allows to democratize the use of these methods. Now other libraries that implement computations on manifolds, learning on manifolds and optimization on manifolds, you can see them here on the screen. The first three, the one that have opt in it and MacDodge, they are focused on optimization on manifolds. For example, to minimize a criterion and the parameter minimizing this criterion is an element of the manifold. And then all the others are Python packages that perform computations and learning on manifolds, but they focus on a special type of manifolds. For example, the manifold of SPD mattresses, tree rotations, disruptions. By contrast, we do not do fancy optimizations in GM Stats, but we try to implement a very wide range of manifolds, including the manifolds that represent shapes and shapespaces. So let me give you an example of how you can use this software to compute with shape representations and let's say shape motions. So let's say you're interested in knowing how a shape evolved from being in an orientation R1 and translation or position T1. And how it evolves from this original pose to an end pose, which we could call R1 for rotation R2, for rotation two and T2 for translation two. So when we compute with rotation and translations, as we do with motions and by the way, it should be 3D translation, not 2D translation. We are computing with elements that belong to the manifold and that gave the manifold is M equal SE3 and that stands for special Euclidean group in three dimension. In other words, the group of all 3D translations and 3D rotations. This is a good snippet using GM Stats. What you really have to do is instantiate the manifold that you are interested in. Here we want to work with SE3, so we instantiate SE3 as an object of the class special Euclidean in dimension three. We extract what's called a metric. It's a Riemannian metric that allows us to perform the computations. And then we call metric dot geodesic. Again, we do not need to know how the geodesic is implemented. We just need to know that the geodesic is the generalization of the straight line. And therefore, we can compute the geodesic that starts with an initial point, rotation one, translation one, and has an initial tangent vector. And on the right, you have an illustration of the geodesic. Pose one corresponds to R1T1, rotation one, translation one. It's represented by one very small frame with three axes because we can use the translation, translation one, to place this frame in 3D. And the rotation, rotation one to orient the frame in 3D. But therefore, one little frame corresponds to one point in SE3. And you see here a trajectory of frames that correspond to the geodesic on the manifold SE3 linking pose one to pose two. So I told you we implemented a lot of different manifolds in GM stats. And what we end up with is actually a numerical taxonomy of manifolds. So we use object-oriented programming to create this hierarchy of all the possible of many manifolds that you could be interested in working with. So this hierarchy is built as follows on the root of the hierarchy of the tree. You have the most abstract concept of manifold that is just a manifold. And we list all the different attributes or methods that a manifold item object should have. And as you go down this hierarchy, you find more and more specialized or more and more concrete manifolds. For example, one level down, you found the manifold matrix lead group. Lead group is a special case of a manifold. It's a manifold that has an algebraic group structure. So therefore, matrix lead group is on the second level of the hierarchy. It inherits from the Python class manifold because it's a special case of a manifold. And then you go down this hierarchy and at the very bottom of this hierarchy, you have the leaves. And these are manifolds that you can actually instantiate. So for example, there will be somewhere in there, the special ectogen proof that we just used, which would inherit from matrix lead group because it's a special type of matrix lead group. And again, matrix lead group itself inherits from manifolds. So with this project that started with representing shapes and doing statistical learning on shapes, we actually ended up creating a computational representation of differential geometry. Okay, so let me wrap this up a little bit and show you how we can mix these two. So how we can use a model of shape to how can we can perform a deep learning algorithm on a manifold that would, for example, represent the shape space. And the example I'm going to choose is variational encoders. How do variational encoders work on manifolds? Zooming out a little bit, let me show you an overview of the research that I'm interested in. In the previous slides, I was showing you the CRT of computational differential geometry, which is the ERT of manifolds. I'm interested in generalizing statistical learning, machine learning and deep learning on these exotic data spaces. In other words, I'm interested in filling the table that you see on this slide, where in this table, the different rows represent different manifolds. So each of the row in this table corresponds to one of the nodes that you had in the previous CRT. There are different types of exotic data spaces, if you wish. And in this table, the different columns represents different fields of statistics, machine learning and deep learning. We're going to talk about theorizing variational encoders to manifolds. So therefore, we are in the column dimension reduction and deep learning. So dimension reduction and variational encoders. I'd like to present a geometric perspective on them as to emphasize where manifolds come in. On this first line of this table, you can see two classes of dimension reduction methods. The first classes, the first class of methods, are the methods that seek to perform dimension reduction on an ambient space that is a vector space. Specifically, let's say the vector space is R2, and we have some data points, which are the dark green data points. We can think of principal component analysis that seeks to learn a linear subspace that would be the light green line within this linear space that is R2. And you have different dimension reduction methods that work like this, that wish to learn a linear subspace within a linear space. In the manifold world, we remember that linear subspace, or that linear line, is converted to geodesic. And so you have equivalent methods that allow to learn the equivalent of a line that is a geodesic on a manifold. So this time, the ambient space is a manifold and will be this clear. And we're interested in learning principal directions of variations of the data, the data of the dark green point. And we want to learn principal directions of variations of this data that will be the equivalent of the lines on the left, so that are the geodesic. The geodesic on the sphere is a great circle, and you can see in light green, a great circle. In the context of variational tranquillers, the vector space case, we are not linear. We're using deep learning, and most of the time we are highly nonlinear. Therefore, we need another row in this table to complete the overview of dimension reduction methods from a geometric perspective. And then we talk about the one that is on the bottom left, which include, which is a class of methods that include variational tranquillers. These class of methods operate in an ambient space, that is, again, a vector space. It's again represented as R2 here. But instead of learning variations of the data that are linear, as this here would do, instead, we are allowed to learn a nonlinear subspace M. So you see the dark light green line is now nonlinear. So I'm going to present how we can generalize this VAE, presented from this geometric perspective here, to geometric VAE, or VAE on manifolds, which is what is shown on the bottom right. So now the setting is the ambient space is a manifold. So the sphere represents the ambient space, that is the manifold, to which we know that the data are, in which we know that the data are. And now we don't only restrict ourselves to learning a geodesic subspace, as the road just above was doing, but we allow to learn any nonlinear subspace, or non-geodesic submanifolds, and within the manifold M. But how does this work? Let me review variational tranquillers. I put equations on the left for completeness. I'm not going to comment on them too much. Variational tranquillers start with a generative model of data in Rd, that's the ambient space that we had before. The data assumed to belong to a vector space. And we can think of variational tranquillers as a way to invert a generative model with latent variables. And typically, a generative model with latent particles, such as the one that is in the first equation. So we have xi, that's our data in the vector space Rd, that is assumed to be generated with a generative model with latent variables. But the latent variable is xi, they are going to represent the low dimensional representation of the xi. So this low dimensional representation, xi, pass through a function, f, this parameter mu and w, this function is usually represented by a neural network, that is called the decoder, variational tranquillers, to which noise is added. So that's the generative model that we assume has generated data in variational tranquillers. From a geometric perspective, xi are assumed to belong to a lower dimensional latent space, that I write Rl. Then this xi passes through the function f of mu and w, which can be the neural network. And by passing through this function, it becomes an element of the higher dimensional space Rd. So this is the blue point on the illustration. And then noise is added to the model. Now, if we were to pass the whole latent space Rl through the function f mu and w, we would get this nonlinear light green curve that represents the subspace, the nonlinear subspace that we are learning. That's a geometric explanation of the generative model of the data that is at the foundation of variational tranquillers. Now, with GAE, we do not observe, we do not know what is f of mu and w. We model it as a decoder, but we do not know what are the weights of the decoder. And we also, we do not know what are the xi that are associated to each xi. So, given only the xi's, we would like to be able to learn the low-dimensional representations xi together with the decoder, the model. And this is done with this architecture that you might be familiar with. On the left, you have the traditional architecture of the variational tranquillers. On the right, you have the last function that is used to train it. So in the architecture of the GAE, the second half represents the decoder. It is the representation of the generative model that takes an element of the lower-dimensional latent space in green and outputs the function f of that latent variable. And on the left, we add an encoder that is able to perform the operation of going from xi to a normal size approximation approximates representation of the posterior of the xi. Anyway, this is all trained with the last function that is called the elbow. It stands for evidence lower bound. It's a lower bound of the likelihood, of the log likelihood. And I've given its expression here as a sum of a reconstruction, a term and a regularization term, because these are the terms that we have to generalize to manifold to have a version of variational tranquillers that works on manifold. So let's try to do this, to generalize variational tranquillers to manifold. We will have to generalize two elements. First, the generative model and second, the last function. Now, looking a little bit at the generative model and the last functions, we observe that they are built from basic elements and operations that we now know how to converge to manifold. So specifically in the generative model, we see there is a plus, which is an addition. And the generalization of the addition of vector spaces is the exponential map of manifold. In the last function also, we see that there is a square distance here, a squared L2 distance between x and f of c. Now that's something we can generalize to manifold to. And this is how we go to manifold variational tranquillers. It's conceptually easy. We replace the addition by the exponential map. And now we have a generative model that outputs points on the manifold. And that goes like this. We find again zi on the latent space RL. And now our decoder is going to be able to map zi on the point on manifold to which we add noise by adding a tangent vector to the point in group. So we have generalized the generative model to manifolds. We need to generalize the inference, which is how do we learn in this generative model. We have a very similar architecture that has an encoder and a decoder. But then what really changes now is the loss function that you can still formulate as an elbow of a different log likelihood, just because the generative model is different. And I've put in red the terms that change, because the generative model is different, the log likelihood is different, the evidence lower bound or the elbow is different. And therefore you can show that it has this formula. We could have guessed this formula by converting the elbow plus as it was written on vector spaces to its expression on manifolds. And so this allows us to learn non-giardasec sub-manifolds of a given manifold. I think the only competing method that was able to do that before was relying on Monte Carlo, for example, from the posterior. And therefore so using VAE we're able to learn non-giardasec sub-manifold of a manifold. We're also able to give some insights of what was observed in the literature about VAE, which was about this statement that you can see by Chao Edel in 2018. But I was saying that in VAE the experiment showed that these models represent real image data with manifolds that have surprisingly little curvature. Long story short, we are able through a geometric analysis of geometric VAE that gives insight on VAE to explain why they find latent spaces with shockingly little curvature. So to conclude, this is the type of pipeline that we're interested in our lab, we want to do shape learning in biomedical imaging. I've explained how shape modeling gives rise to overwhelming operations on excessive data spaces that are manifolds, and therefore how statistical learning, machine learning, and deep learning can generalize to these spaces if you want to shape deep learning. Many thanks to our lab at UCSB and many thanks to the organization that are funding this research, and I'll be happy to answer any questions.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.96, "text": " Hi everyone, thank you very much for the invitation to speak at this CVPR workshop.", "tokens": [50364, 2421, 1518, 11, 1309, 291, 588, 709, 337, 264, 17890, 281, 1710, 412, 341, 22995, 15958, 13541, 13, 50762], "temperature": 0.0, "avg_logprob": -0.2181505283839266, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.011475023813545704}, {"id": 1, "seek": 0, "start": 7.96, "end": 12.280000000000001, "text": " I'm very excited to be presenting my research.", "tokens": [50762, 286, 478, 588, 2919, 281, 312, 15578, 452, 2132, 13, 50978], "temperature": 0.0, "avg_logprob": -0.2181505283839266, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.011475023813545704}, {"id": 2, "seek": 0, "start": 12.280000000000001, "end": 19.44, "text": " I will talk about shape learning in biomedical imaging, while by shape learning I mean machine", "tokens": [50978, 286, 486, 751, 466, 3909, 2539, 294, 49775, 25036, 11, 1339, 538, 3909, 2539, 286, 914, 3479, 51336], "temperature": 0.0, "avg_logprob": -0.2181505283839266, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.011475023813545704}, {"id": 3, "seek": 0, "start": 19.44, "end": 23.400000000000002, "text": " learning for data that are shapes.", "tokens": [51336, 2539, 337, 1412, 300, 366, 10854, 13, 51534], "temperature": 0.0, "avg_logprob": -0.2181505283839266, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.011475023813545704}, {"id": 4, "seek": 0, "start": 23.400000000000002, "end": 26.52, "text": " One data point is one shape.", "tokens": [51534, 1485, 1412, 935, 307, 472, 3909, 13, 51690], "temperature": 0.0, "avg_logprob": -0.2181505283839266, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.011475023813545704}, {"id": 5, "seek": 2652, "start": 26.52, "end": 33.56, "text": " And specifically, we will be interested in the shapes that we see in biomedical images.", "tokens": [50364, 400, 4682, 11, 321, 486, 312, 3102, 294, 264, 10854, 300, 321, 536, 294, 49775, 5267, 13, 50716], "temperature": 0.0, "avg_logprob": -0.19119787777171415, "compression_ratio": 1.9114583333333333, "no_speech_prob": 0.0005969905760139227}, {"id": 6, "seek": 2652, "start": 33.56, "end": 38.8, "text": " For example, the shapes of the brains that we can see at the images at the bottom of", "tokens": [50716, 1171, 1365, 11, 264, 10854, 295, 264, 15442, 300, 321, 393, 536, 412, 264, 5267, 412, 264, 2767, 295, 50978], "temperature": 0.0, "avg_logprob": -0.19119787777171415, "compression_ratio": 1.9114583333333333, "no_speech_prob": 0.0005969905760139227}, {"id": 7, "seek": 2652, "start": 38.8, "end": 41.8, "text": " this slide.", "tokens": [50978, 341, 4137, 13, 51128], "temperature": 0.0, "avg_logprob": -0.19119787777171415, "compression_ratio": 1.9114583333333333, "no_speech_prob": 0.0005969905760139227}, {"id": 8, "seek": 2652, "start": 41.8, "end": 47.92, "text": " So we're interested in the shapes of biological structures that appear in biomedical images.", "tokens": [51128, 407, 321, 434, 3102, 294, 264, 10854, 295, 13910, 9227, 300, 4204, 294, 49775, 5267, 13, 51434], "temperature": 0.0, "avg_logprob": -0.19119787777171415, "compression_ratio": 1.9114583333333333, "no_speech_prob": 0.0005969905760139227}, {"id": 9, "seek": 2652, "start": 47.92, "end": 53.32, "text": " These biological structures can be found at the macroscopic scale all the way down to the", "tokens": [51434, 1981, 13910, 9227, 393, 312, 1352, 412, 264, 7912, 38006, 299, 4373, 439, 264, 636, 760, 281, 264, 51704], "temperature": 0.0, "avg_logprob": -0.19119787777171415, "compression_ratio": 1.9114583333333333, "no_speech_prob": 0.0005969905760139227}, {"id": 10, "seek": 5332, "start": 53.32, "end": 60.32, "text": " nanoscopic scale, going from organs, such as the brains that we just saw, all the way", "tokens": [50364, 14067, 10466, 40216, 4373, 11, 516, 490, 20659, 11, 1270, 382, 264, 15442, 300, 321, 445, 1866, 11, 439, 264, 636, 50714], "temperature": 0.0, "avg_logprob": -0.13975821043315687, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.0002912977070081979}, {"id": 11, "seek": 5332, "start": 60.32, "end": 65.76, "text": " down to tissues, cells, organelles, and molecules.", "tokens": [50714, 760, 281, 27353, 11, 5438, 11, 1798, 19787, 11, 293, 13093, 13, 50986], "temperature": 0.0, "avg_logprob": -0.13975821043315687, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.0002912977070081979}, {"id": 12, "seek": 5332, "start": 65.76, "end": 74.4, "text": " And in 2022, we are actually very lucky, because in order to study these biological structures", "tokens": [50986, 400, 294, 20229, 11, 321, 366, 767, 588, 6356, 11, 570, 294, 1668, 281, 2979, 613, 13910, 9227, 51418], "temperature": 0.0, "avg_logprob": -0.13975821043315687, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.0002912977070081979}, {"id": 13, "seek": 5332, "start": 74.4, "end": 81.48, "text": " that are at the heart of life, we can just look at them.", "tokens": [51418, 300, 366, 412, 264, 1917, 295, 993, 11, 321, 393, 445, 574, 412, 552, 13, 51772], "temperature": 0.0, "avg_logprob": -0.13975821043315687, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.0002912977070081979}, {"id": 14, "seek": 8148, "start": 81.48, "end": 87.96000000000001, "text": " We have access to a wide range of imaging techniques that allow us to observe these", "tokens": [50364, 492, 362, 2105, 281, 257, 4874, 3613, 295, 25036, 7512, 300, 2089, 505, 281, 11441, 613, 50688], "temperature": 0.0, "avg_logprob": -0.21654019704679164, "compression_ratio": 1.64321608040201, "no_speech_prob": 0.0004953004536218941}, {"id": 15, "seek": 8148, "start": 87.96000000000001, "end": 90.52000000000001, "text": " biological structures.", "tokens": [50688, 13910, 9227, 13, 50816], "temperature": 0.0, "avg_logprob": -0.21654019704679164, "compression_ratio": 1.64321608040201, "no_speech_prob": 0.0004953004536218941}, {"id": 16, "seek": 8148, "start": 90.52000000000001, "end": 97.2, "text": " At the macroscopic scale, for example, we have MRI, or magnetic resonance imaging, that", "tokens": [50816, 1711, 264, 7912, 38006, 299, 4373, 11, 337, 1365, 11, 321, 362, 32812, 11, 420, 12688, 30944, 25036, 11, 300, 51150], "temperature": 0.0, "avg_logprob": -0.21654019704679164, "compression_ratio": 1.64321608040201, "no_speech_prob": 0.0004953004536218941}, {"id": 17, "seek": 8148, "start": 97.2, "end": 101.68, "text": " allows us to observe human brains.", "tokens": [51150, 4045, 505, 281, 11441, 1952, 15442, 13, 51374], "temperature": 0.0, "avg_logprob": -0.21654019704679164, "compression_ratio": 1.64321608040201, "no_speech_prob": 0.0004953004536218941}, {"id": 18, "seek": 8148, "start": 101.68, "end": 107.44, "text": " But all the way down to the nanoscopic scale, we have other techniques, ending with cryo-electron", "tokens": [51374, 583, 439, 264, 636, 760, 281, 264, 14067, 10466, 40216, 4373, 11, 321, 362, 661, 7512, 11, 8121, 365, 3305, 78, 12, 14664, 2044, 51662], "temperature": 0.0, "avg_logprob": -0.21654019704679164, "compression_ratio": 1.64321608040201, "no_speech_prob": 0.0004953004536218941}, {"id": 19, "seek": 10744, "start": 107.44, "end": 114.48, "text": " microscopy, which allows us to look at biomolecules, such as the human ribosome.", "tokens": [50364, 30483, 88, 11, 597, 4045, 505, 281, 574, 412, 27450, 4812, 11570, 11, 1270, 382, 264, 1952, 9162, 329, 423, 13, 50716], "temperature": 0.0, "avg_logprob": -0.15887282534343442, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.002394544892013073}, {"id": 20, "seek": 10744, "start": 114.48, "end": 121.12, "text": " Now the point that I want to make with this slide and with this presentation is that in", "tokens": [50716, 823, 264, 935, 300, 286, 528, 281, 652, 365, 341, 4137, 293, 365, 341, 5860, 307, 300, 294, 51048], "temperature": 0.0, "avg_logprob": -0.15887282534343442, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.002394544892013073}, {"id": 21, "seek": 10744, "start": 121.12, "end": 127.96, "text": " all of these images, there is one feature that is very interesting in the sense that", "tokens": [51048, 439, 295, 613, 5267, 11, 456, 307, 472, 4111, 300, 307, 588, 1880, 294, 264, 2020, 300, 51390], "temperature": 0.0, "avg_logprob": -0.15887282534343442, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.002394544892013073}, {"id": 22, "seek": 10744, "start": 127.96, "end": 131.4, "text": " it can be linked to the biology.", "tokens": [51390, 309, 393, 312, 9408, 281, 264, 14956, 13, 51562], "temperature": 0.0, "avg_logprob": -0.15887282534343442, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.002394544892013073}, {"id": 23, "seek": 10744, "start": 131.4, "end": 134.52, "text": " This feature is the shape.", "tokens": [51562, 639, 4111, 307, 264, 3909, 13, 51718], "temperature": 0.0, "avg_logprob": -0.15887282534343442, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.002394544892013073}, {"id": 24, "seek": 13452, "start": 134.52, "end": 140.8, "text": " The shape of the biological structure that is being imaged contains enormous information", "tokens": [50364, 440, 3909, 295, 264, 13910, 3877, 300, 307, 885, 2576, 292, 8306, 11322, 1589, 50678], "temperature": 0.0, "avg_logprob": -0.19035749435424804, "compression_ratio": 1.747191011235955, "no_speech_prob": 0.0001559317170176655}, {"id": 25, "seek": 13452, "start": 140.8, "end": 146.84, "text": " on the biology and the biophysics of what is happening in living organisms.", "tokens": [50678, 322, 264, 14956, 293, 264, 3228, 5317, 41732, 295, 437, 307, 2737, 294, 2647, 22110, 13, 50980], "temperature": 0.0, "avg_logprob": -0.19035749435424804, "compression_ratio": 1.747191011235955, "no_speech_prob": 0.0001559317170176655}, {"id": 26, "seek": 13452, "start": 146.84, "end": 149.88, "text": " Let me give you an example of this.", "tokens": [50980, 961, 385, 976, 291, 364, 1365, 295, 341, 13, 51132], "temperature": 0.0, "avg_logprob": -0.19035749435424804, "compression_ratio": 1.747191011235955, "no_speech_prob": 0.0001559317170176655}, {"id": 27, "seek": 13452, "start": 149.88, "end": 157.92000000000002, "text": " Actually, let me give you a few examples on how shapes of biological structure contain", "tokens": [51132, 5135, 11, 718, 385, 976, 291, 257, 1326, 5110, 322, 577, 10854, 295, 13910, 3877, 5304, 51534], "temperature": 0.0, "avg_logprob": -0.19035749435424804, "compression_ratio": 1.747191011235955, "no_speech_prob": 0.0001559317170176655}, {"id": 28, "seek": 13452, "start": 157.92000000000002, "end": 159.28, "text": " meaningful information.", "tokens": [51534, 10995, 1589, 13, 51602], "temperature": 0.0, "avg_logprob": -0.19035749435424804, "compression_ratio": 1.747191011235955, "no_speech_prob": 0.0001559317170176655}, {"id": 29, "seek": 15928, "start": 159.76, "end": 166.52, "text": " Few examples in the context of one pathology called Alzheimer's disease.", "tokens": [50388, 33468, 5110, 294, 264, 4319, 295, 472, 3100, 1793, 1219, 27932, 311, 4752, 13, 50726], "temperature": 0.0, "avg_logprob": -0.20675903413353897, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.00032472683233208954}, {"id": 30, "seek": 15928, "start": 166.52, "end": 173.68, "text": " At the macroscopic scale first, Alzheimer's disease is linked to shape changes.", "tokens": [50726, 1711, 264, 7912, 38006, 299, 4373, 700, 11, 27932, 311, 4752, 307, 9408, 281, 3909, 2962, 13, 51084], "temperature": 0.0, "avg_logprob": -0.20675903413353897, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.00032472683233208954}, {"id": 31, "seek": 15928, "start": 173.68, "end": 178.88, "text": " If we look at the simulation that I had on the first slide, we see the evolution of", "tokens": [51084, 759, 321, 574, 412, 264, 16575, 300, 286, 632, 322, 264, 700, 4137, 11, 321, 536, 264, 9303, 295, 51344], "temperature": 0.0, "avg_logprob": -0.20675903413353897, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.00032472683233208954}, {"id": 32, "seek": 15928, "start": 178.88, "end": 180.48, "text": " a brain through time.", "tokens": [51344, 257, 3567, 807, 565, 13, 51424], "temperature": 0.0, "avg_logprob": -0.20675903413353897, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.00032472683233208954}, {"id": 33, "seek": 15928, "start": 180.48, "end": 187.44, "text": " Actually, we see three slices of a 3D brain evolving through time.", "tokens": [51424, 5135, 11, 321, 536, 1045, 19793, 295, 257, 805, 35, 3567, 21085, 807, 565, 13, 51772], "temperature": 0.0, "avg_logprob": -0.20675903413353897, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.00032472683233208954}, {"id": 34, "seek": 18744, "start": 187.44, "end": 191.07999999999998, "text": " This is a simulation of a brain with Alzheimer's disease.", "tokens": [50364, 639, 307, 257, 16575, 295, 257, 3567, 365, 27932, 311, 4752, 13, 50546], "temperature": 0.0, "avg_logprob": -0.2013676643371582, "compression_ratio": 1.7264957264957266, "no_speech_prob": 0.0040046037174761295}, {"id": 35, "seek": 18744, "start": 191.07999999999998, "end": 197.8, "text": " You can see on the simulation that the brain changes shape as it evolves through time.", "tokens": [50546, 509, 393, 536, 322, 264, 16575, 300, 264, 3567, 2962, 3909, 382, 309, 43737, 807, 565, 13, 50882], "temperature": 0.0, "avg_logprob": -0.2013676643371582, "compression_ratio": 1.7264957264957266, "no_speech_prob": 0.0040046037174761295}, {"id": 36, "seek": 18744, "start": 197.8, "end": 203.4, "text": " The ventricles, which are the structure in the center of this brain, are becoming larger", "tokens": [50882, 440, 6931, 1341, 904, 11, 597, 366, 264, 3877, 294, 264, 3056, 295, 341, 3567, 11, 366, 5617, 4833, 51162], "temperature": 0.0, "avg_logprob": -0.2013676643371582, "compression_ratio": 1.7264957264957266, "no_speech_prob": 0.0040046037174761295}, {"id": 37, "seek": 18744, "start": 203.4, "end": 208.16, "text": " and larger, so that's the area in black that is in prison.", "tokens": [51162, 293, 4833, 11, 370, 300, 311, 264, 1859, 294, 2211, 300, 307, 294, 6168, 13, 51400], "temperature": 0.0, "avg_logprob": -0.2013676643371582, "compression_ratio": 1.7264957264957266, "no_speech_prob": 0.0040046037174761295}, {"id": 38, "seek": 18744, "start": 208.16, "end": 213.88, "text": " As the brain undergoes atrophy, meaning the brain matter around this ventricle is becoming", "tokens": [51400, 1018, 264, 3567, 26426, 279, 412, 40826, 11, 3620, 264, 3567, 1871, 926, 341, 6931, 1341, 306, 307, 5617, 51686], "temperature": 0.0, "avg_logprob": -0.2013676643371582, "compression_ratio": 1.7264957264957266, "no_speech_prob": 0.0040046037174761295}, {"id": 39, "seek": 18744, "start": 213.88, "end": 216.12, "text": " smaller and smaller.", "tokens": [51686, 4356, 293, 4356, 13, 51798], "temperature": 0.0, "avg_logprob": -0.2013676643371582, "compression_ratio": 1.7264957264957266, "no_speech_prob": 0.0040046037174761295}, {"id": 40, "seek": 21612, "start": 216.12, "end": 224.32, "text": " This atrophy is a macroscopic shape change that is characteristic of Alzheimer's disease.", "tokens": [50364, 639, 412, 40826, 307, 257, 7912, 38006, 299, 3909, 1319, 300, 307, 16282, 295, 27932, 311, 4752, 13, 50774], "temperature": 0.0, "avg_logprob": -0.22874152354705027, "compression_ratio": 1.664804469273743, "no_speech_prob": 0.0018083197064697742}, {"id": 41, "seek": 21612, "start": 224.32, "end": 228.76, "text": " Now you may ask, where does this atrophy come from?", "tokens": [50774, 823, 291, 815, 1029, 11, 689, 775, 341, 412, 40826, 808, 490, 30, 50996], "temperature": 0.0, "avg_logprob": -0.22874152354705027, "compression_ratio": 1.664804469273743, "no_speech_prob": 0.0018083197064697742}, {"id": 42, "seek": 21612, "start": 228.76, "end": 232.88, "text": " Where do these macroscopic shape changes come from?", "tokens": [50996, 2305, 360, 613, 7912, 38006, 299, 3909, 2962, 808, 490, 30, 51202], "temperature": 0.0, "avg_logprob": -0.22874152354705027, "compression_ratio": 1.664804469273743, "no_speech_prob": 0.0018083197064697742}, {"id": 43, "seek": 21612, "start": 232.88, "end": 239.64000000000001, "text": " Actually, at the microscopic scale now, if we look at cells, so at the neurons, these", "tokens": [51202, 5135, 11, 412, 264, 47897, 4373, 586, 11, 498, 321, 574, 412, 5438, 11, 370, 412, 264, 22027, 11, 613, 51540], "temperature": 0.0, "avg_logprob": -0.22874152354705027, "compression_ratio": 1.664804469273743, "no_speech_prob": 0.0018083197064697742}, {"id": 44, "seek": 21612, "start": 239.64000000000001, "end": 241.16, "text": " neurons are dying.", "tokens": [51540, 22027, 366, 8639, 13, 51616], "temperature": 0.0, "avg_logprob": -0.22874152354705027, "compression_ratio": 1.664804469273743, "no_speech_prob": 0.0018083197064697742}, {"id": 45, "seek": 24116, "start": 241.16, "end": 247.35999999999999, "text": " The other reasons were why we see this atrophy at the macroscopic scale.", "tokens": [50364, 440, 661, 4112, 645, 983, 321, 536, 341, 412, 40826, 412, 264, 7912, 38006, 299, 4373, 13, 50674], "temperature": 0.0, "avg_logprob": -0.20504446874690962, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0002913065254688263}, {"id": 46, "seek": 24116, "start": 247.35999999999999, "end": 251.64, "text": " When a neuron is dying, it changes shape.", "tokens": [50674, 1133, 257, 34090, 307, 8639, 11, 309, 2962, 3909, 13, 50888], "temperature": 0.0, "avg_logprob": -0.20504446874690962, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0002913065254688263}, {"id": 47, "seek": 24116, "start": 251.64, "end": 258.36, "text": " As you can see on this video of a dying neuron, it's retracting its axons.", "tokens": [50888, 1018, 291, 393, 536, 322, 341, 960, 295, 257, 8639, 34090, 11, 309, 311, 41107, 278, 1080, 6360, 892, 13, 51224], "temperature": 0.0, "avg_logprob": -0.20504446874690962, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0002913065254688263}, {"id": 48, "seek": 24116, "start": 258.36, "end": 265.64, "text": " At the microscopic scale, for the scale of cells, Alzheimer's disease is linked to shape", "tokens": [51224, 1711, 264, 47897, 4373, 11, 337, 264, 4373, 295, 5438, 11, 27932, 311, 4752, 307, 9408, 281, 3909, 51588], "temperature": 0.0, "avg_logprob": -0.20504446874690962, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0002913065254688263}, {"id": 49, "seek": 24116, "start": 265.64, "end": 268.48, "text": " changes.", "tokens": [51588, 2962, 13, 51730], "temperature": 0.0, "avg_logprob": -0.20504446874690962, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0002913065254688263}, {"id": 50, "seek": 26848, "start": 268.48, "end": 274.24, "text": " What's even more interesting is that at the macroscopic scale, there is also a shape problem.", "tokens": [50364, 708, 311, 754, 544, 1880, 307, 300, 412, 264, 7912, 38006, 299, 4373, 11, 456, 307, 611, 257, 3909, 1154, 13, 50652], "temperature": 0.0, "avg_logprob": -0.20061080624358824, "compression_ratio": 1.766355140186916, "no_speech_prob": 0.0028860787861049175}, {"id": 51, "seek": 26848, "start": 274.24, "end": 281.64000000000004, "text": " We have these two proteins, eta-amyloid and tau, that are changing shape in patient with", "tokens": [50652, 492, 362, 613, 732, 15577, 11, 32415, 12, 7804, 752, 327, 293, 17842, 11, 300, 366, 4473, 3909, 294, 4537, 365, 51022], "temperature": 0.0, "avg_logprob": -0.20061080624358824, "compression_ratio": 1.766355140186916, "no_speech_prob": 0.0028860787861049175}, {"id": 52, "seek": 26848, "start": 281.64000000000004, "end": 283.92, "text": " Alzheimer's disease.", "tokens": [51022, 27932, 311, 4752, 13, 51136], "temperature": 0.0, "avg_logprob": -0.20061080624358824, "compression_ratio": 1.766355140186916, "no_speech_prob": 0.0028860787861049175}, {"id": 53, "seek": 26848, "start": 283.92, "end": 290.24, "text": " Because they have changed shape, they will agglomerate either inside the neurons, so", "tokens": [51136, 1436, 436, 362, 3105, 3909, 11, 436, 486, 623, 7191, 14301, 473, 2139, 1854, 264, 22027, 11, 370, 51452], "temperature": 0.0, "avg_logprob": -0.20061080624358824, "compression_ratio": 1.766355140186916, "no_speech_prob": 0.0028860787861049175}, {"id": 54, "seek": 26848, "start": 290.24, "end": 297.24, "text": " we see in blue, that the proteins agglomerate inside the neuron, or they will agglomerate", "tokens": [51452, 321, 536, 294, 3344, 11, 300, 264, 15577, 623, 7191, 14301, 473, 1854, 264, 34090, 11, 420, 436, 486, 623, 7191, 14301, 473, 51802], "temperature": 0.0, "avg_logprob": -0.20061080624358824, "compression_ratio": 1.766355140186916, "no_speech_prob": 0.0028860787861049175}, {"id": 55, "seek": 29724, "start": 297.24, "end": 305.24, "text": " outside the neuron, and these agglomerations is what will cause the neuron to die.", "tokens": [50364, 2380, 264, 34090, 11, 293, 613, 623, 7191, 14301, 763, 307, 437, 486, 3082, 264, 34090, 281, 978, 13, 50764], "temperature": 0.0, "avg_logprob": -0.24960145496186756, "compression_ratio": 1.8169014084507042, "no_speech_prob": 6.30188878858462e-05}, {"id": 56, "seek": 29724, "start": 305.24, "end": 313.56, "text": " A shape problem at the nanoscopic scale is creating the death of the neurons, which is", "tokens": [50764, 316, 3909, 1154, 412, 264, 14067, 10466, 40216, 4373, 307, 4084, 264, 2966, 295, 264, 22027, 11, 597, 307, 51180], "temperature": 0.0, "avg_logprob": -0.24960145496186756, "compression_ratio": 1.8169014084507042, "no_speech_prob": 6.30188878858462e-05}, {"id": 57, "seek": 29724, "start": 313.56, "end": 321.76, "text": " creating a microscopic shape change, which is also leading to a macroscopic shape change", "tokens": [51180, 4084, 257, 47897, 3909, 1319, 11, 597, 307, 611, 5775, 281, 257, 7912, 38006, 299, 3909, 1319, 51590], "temperature": 0.0, "avg_logprob": -0.24960145496186756, "compression_ratio": 1.8169014084507042, "no_speech_prob": 6.30188878858462e-05}, {"id": 58, "seek": 32176, "start": 321.76, "end": 328.36, "text": " with the atrophy of the brain that we can see on MRI.", "tokens": [50364, 365, 264, 412, 40826, 295, 264, 3567, 300, 321, 393, 536, 322, 32812, 13, 50694], "temperature": 0.0, "avg_logprob": -0.2814356547135573, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.003481579013168812}, {"id": 59, "seek": 32176, "start": 328.36, "end": 337.08, "text": " We have illustrated that biological shape contains biologically relevant information,", "tokens": [50694, 492, 362, 33875, 300, 13910, 3909, 8306, 3228, 17157, 7340, 1589, 11, 51130], "temperature": 0.0, "avg_logprob": -0.2814356547135573, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.003481579013168812}, {"id": 60, "seek": 32176, "start": 337.08, "end": 343.92, "text": " or medically relevant information, that we can go from biological shapes to biomedical", "tokens": [51130, 420, 49230, 7340, 1589, 11, 300, 321, 393, 352, 490, 13910, 10854, 281, 49775, 51472], "temperature": 0.0, "avg_logprob": -0.2814356547135573, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.003481579013168812}, {"id": 61, "seek": 32176, "start": 343.92, "end": 344.92, "text": " insights.", "tokens": [51472, 14310, 13, 51522], "temperature": 0.0, "avg_logprob": -0.2814356547135573, "compression_ratio": 1.673758865248227, "no_speech_prob": 0.003481579013168812}, {"id": 62, "seek": 34492, "start": 345.28000000000003, "end": 351.36, "text": " Actually, biophysics tells us that the healthy or the pathological state of the biological", "tokens": [50382, 5135, 11, 3228, 5317, 41732, 5112, 505, 300, 264, 4627, 420, 264, 3100, 4383, 1785, 295, 264, 13910, 50686], "temperature": 0.0, "avg_logprob": -0.19888515203771456, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00039810340967960656}, {"id": 63, "seek": 34492, "start": 351.36, "end": 358.44, "text": " structure will change its shape, or generally that the function of a biological structure", "tokens": [50686, 3877, 486, 1319, 1080, 3909, 11, 420, 5101, 300, 264, 2445, 295, 257, 13910, 3877, 51040], "temperature": 0.0, "avg_logprob": -0.19888515203771456, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00039810340967960656}, {"id": 64, "seek": 34492, "start": 358.44, "end": 360.16, "text": " will change its shape.", "tokens": [51040, 486, 1319, 1080, 3909, 13, 51126], "temperature": 0.0, "avg_logprob": -0.19888515203771456, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00039810340967960656}, {"id": 65, "seek": 34492, "start": 360.16, "end": 366.96000000000004, "text": " For example, blood cells have a different shape than brain cells or neurons, because", "tokens": [51126, 1171, 1365, 11, 3390, 5438, 362, 257, 819, 3909, 813, 3567, 5438, 420, 22027, 11, 570, 51466], "temperature": 0.0, "avg_logprob": -0.19888515203771456, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00039810340967960656}, {"id": 66, "seek": 34492, "start": 366.96000000000004, "end": 369.24, "text": " they have different functions.", "tokens": [51466, 436, 362, 819, 6828, 13, 51580], "temperature": 0.0, "avg_logprob": -0.19888515203771456, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00039810340967960656}, {"id": 67, "seek": 36924, "start": 369.24, "end": 375.32, "text": " In the context of this talk, we are interested in inverting that model, in learning biophysics", "tokens": [50364, 682, 264, 4319, 295, 341, 751, 11, 321, 366, 3102, 294, 28653, 783, 300, 2316, 11, 294, 2539, 3228, 5317, 41732, 50668], "temperature": 0.0, "avg_logprob": -0.1430239619978939, "compression_ratio": 1.681592039800995, "no_speech_prob": 0.00024132356338668615}, {"id": 68, "seek": 36924, "start": 375.32, "end": 380.84000000000003, "text": " or biology, from the data that we have, which are the shapes.", "tokens": [50668, 420, 14956, 11, 490, 264, 1412, 300, 321, 362, 11, 597, 366, 264, 10854, 13, 50944], "temperature": 0.0, "avg_logprob": -0.1430239619978939, "compression_ratio": 1.681592039800995, "no_speech_prob": 0.00024132356338668615}, {"id": 69, "seek": 36924, "start": 380.84000000000003, "end": 390.12, "text": " So we do statistics and machine learning on shapes, which is what we will call shape learning.", "tokens": [50944, 407, 321, 360, 12523, 293, 3479, 2539, 322, 10854, 11, 597, 307, 437, 321, 486, 818, 3909, 2539, 13, 51408], "temperature": 0.0, "avg_logprob": -0.1430239619978939, "compression_ratio": 1.681592039800995, "no_speech_prob": 0.00024132356338668615}, {"id": 70, "seek": 36924, "start": 390.12, "end": 397.84000000000003, "text": " Let me show you how we can do shape learning in biomedical imaging, by showing you the", "tokens": [51408, 961, 385, 855, 291, 577, 321, 393, 360, 3909, 2539, 294, 49775, 25036, 11, 538, 4099, 291, 264, 51794], "temperature": 0.0, "avg_logprob": -0.1430239619978939, "compression_ratio": 1.681592039800995, "no_speech_prob": 0.00024132356338668615}, {"id": 71, "seek": 39784, "start": 397.84, "end": 401.96, "text": " architecture of a typical research project in our lab.", "tokens": [50364, 9482, 295, 257, 7476, 2132, 1716, 294, 527, 2715, 13, 50570], "temperature": 0.0, "avg_logprob": -0.25628983633858815, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0015204669907689095}, {"id": 72, "seek": 39784, "start": 401.96, "end": 405.76, "text": " Usually, it starts with a biomedical question.", "tokens": [50570, 11419, 11, 309, 3719, 365, 257, 49775, 1168, 13, 50760], "temperature": 0.0, "avg_logprob": -0.25628983633858815, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0015204669907689095}, {"id": 73, "seek": 39784, "start": 405.76, "end": 412.79999999999995, "text": " For example, what is the acceleration of the atrophy that we see in the brains of patients", "tokens": [50760, 1171, 1365, 11, 437, 307, 264, 17162, 295, 264, 412, 40826, 300, 321, 536, 294, 264, 15442, 295, 4209, 51112], "temperature": 0.0, "avg_logprob": -0.25628983633858815, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0015204669907689095}, {"id": 74, "seek": 39784, "start": 412.79999999999995, "end": 414.23999999999995, "text": " with Alzheimer's disease?", "tokens": [51112, 365, 27932, 311, 4752, 30, 51184], "temperature": 0.0, "avg_logprob": -0.25628983633858815, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0015204669907689095}, {"id": 75, "seek": 39784, "start": 414.23999999999995, "end": 421.08, "text": " It will be interesting to know what's the magnitude of these accelerated brain shape", "tokens": [51184, 467, 486, 312, 1880, 281, 458, 437, 311, 264, 15668, 295, 613, 29763, 3567, 3909, 51526], "temperature": 0.0, "avg_logprob": -0.25628983633858815, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0015204669907689095}, {"id": 76, "seek": 42108, "start": 421.08, "end": 428.2, "text": " changes, because it could give ideas to build automatic diagnosis procedure.", "tokens": [50364, 2962, 11, 570, 309, 727, 976, 3487, 281, 1322, 12509, 15217, 10747, 13, 50720], "temperature": 0.0, "avg_logprob": -0.25664745889058926, "compression_ratio": 1.5934579439252337, "no_speech_prob": 0.02062877267599106}, {"id": 77, "seek": 42108, "start": 428.2, "end": 431.91999999999996, "text": " Another biomedical question could be, how do cells move?", "tokens": [50720, 3996, 49775, 1168, 727, 312, 11, 577, 360, 5438, 1286, 30, 50906], "temperature": 0.0, "avg_logprob": -0.25664745889058926, "compression_ratio": 1.5934579439252337, "no_speech_prob": 0.02062877267599106}, {"id": 78, "seek": 42108, "start": 431.91999999999996, "end": 439.12, "text": " What you see on this slide, a moving cell, so called a migrating cell.", "tokens": [50906, 708, 291, 536, 322, 341, 4137, 11, 257, 2684, 2815, 11, 370, 1219, 257, 6186, 8754, 2815, 13, 51266], "temperature": 0.0, "avg_logprob": -0.25664745889058926, "compression_ratio": 1.5934579439252337, "no_speech_prob": 0.02062877267599106}, {"id": 79, "seek": 42108, "start": 439.12, "end": 445.12, "text": " How can cell move is a very important question when one studies metastatic cancer, when the", "tokens": [51266, 1012, 393, 2815, 1286, 307, 257, 588, 1021, 1168, 562, 472, 5313, 1131, 525, 2399, 5592, 11, 562, 264, 51566], "temperature": 0.0, "avg_logprob": -0.25664745889058926, "compression_ratio": 1.5934579439252337, "no_speech_prob": 0.02062877267599106}, {"id": 80, "seek": 42108, "start": 445.12, "end": 448.84, "text": " cancerous cells propagate in the human body.", "tokens": [51566, 5592, 563, 5438, 48256, 294, 264, 1952, 1772, 13, 51752], "temperature": 0.0, "avg_logprob": -0.25664745889058926, "compression_ratio": 1.5934579439252337, "no_speech_prob": 0.02062877267599106}, {"id": 81, "seek": 44884, "start": 448.84, "end": 452.44, "text": " All in all, it starts with a biomedical question.", "tokens": [50364, 1057, 294, 439, 11, 309, 3719, 365, 257, 49775, 1168, 13, 50544], "temperature": 0.0, "avg_logprob": -0.21293298209585795, "compression_ratio": 1.6600985221674878, "no_speech_prob": 0.00020655477419495583}, {"id": 82, "seek": 44884, "start": 452.44, "end": 458.4, "text": " Then there is a step of image acquisition, acquiring the MRIs, acquiring the microscopy", "tokens": [50544, 1396, 456, 307, 257, 1823, 295, 3256, 21668, 11, 37374, 264, 32812, 82, 11, 37374, 264, 30483, 88, 50842], "temperature": 0.0, "avg_logprob": -0.21293298209585795, "compression_ratio": 1.6600985221674878, "no_speech_prob": 0.00020655477419495583}, {"id": 83, "seek": 44884, "start": 458.4, "end": 463.4, "text": " images, that is done by collaborators of all that.", "tokens": [50842, 5267, 11, 300, 307, 1096, 538, 39789, 295, 439, 300, 13, 51092], "temperature": 0.0, "avg_logprob": -0.21293298209585795, "compression_ratio": 1.6600985221674878, "no_speech_prob": 0.00020655477419495583}, {"id": 84, "seek": 44884, "start": 463.4, "end": 466.55999999999995, "text": " Then there is an important step of shape reconstruction.", "tokens": [51092, 1396, 456, 307, 364, 1021, 1823, 295, 3909, 31565, 13, 51250], "temperature": 0.0, "avg_logprob": -0.21293298209585795, "compression_ratio": 1.6600985221674878, "no_speech_prob": 0.00020655477419495583}, {"id": 85, "seek": 44884, "start": 466.55999999999995, "end": 475.4, "text": " Yes, because the data that we get are images or videos, so the shape has not been extracted", "tokens": [51250, 1079, 11, 570, 264, 1412, 300, 321, 483, 366, 5267, 420, 2145, 11, 370, 264, 3909, 575, 406, 668, 34086, 51692], "temperature": 0.0, "avg_logprob": -0.21293298209585795, "compression_ratio": 1.6600985221674878, "no_speech_prob": 0.00020655477419495583}, {"id": 86, "seek": 47540, "start": 475.4, "end": 476.4, "text": " yet.", "tokens": [50364, 1939, 13, 50414], "temperature": 0.0, "avg_logprob": -0.22889776008073673, "compression_ratio": 1.558252427184466, "no_speech_prob": 0.0016998741775751114}, {"id": 87, "seek": 47540, "start": 476.4, "end": 482.44, "text": " We made it an algorithm of contour detection, edge detection, or segmentation to reconstruct", "tokens": [50414, 492, 1027, 309, 364, 9284, 295, 21234, 17784, 11, 4691, 17784, 11, 420, 9469, 399, 281, 31499, 50716], "temperature": 0.0, "avg_logprob": -0.22889776008073673, "compression_ratio": 1.558252427184466, "no_speech_prob": 0.0016998741775751114}, {"id": 88, "seek": 47540, "start": 482.44, "end": 485.23999999999995, "text": " the shape.", "tokens": [50716, 264, 3909, 13, 50856], "temperature": 0.0, "avg_logprob": -0.22889776008073673, "compression_ratio": 1.558252427184466, "no_speech_prob": 0.0016998741775751114}, {"id": 89, "seek": 47540, "start": 485.23999999999995, "end": 487.67999999999995, "text": " Then there is a step of shape modeling.", "tokens": [50856, 1396, 456, 307, 257, 1823, 295, 3909, 15983, 13, 50978], "temperature": 0.0, "avg_logprob": -0.22889776008073673, "compression_ratio": 1.558252427184466, "no_speech_prob": 0.0016998741775751114}, {"id": 90, "seek": 47540, "start": 487.67999999999995, "end": 491.03999999999996, "text": " You could also think of it as shape featurization.", "tokens": [50978, 509, 727, 611, 519, 295, 309, 382, 3909, 15425, 374, 2144, 13, 51146], "temperature": 0.0, "avg_logprob": -0.22889776008073673, "compression_ratio": 1.558252427184466, "no_speech_prob": 0.0016998741775751114}, {"id": 91, "seek": 47540, "start": 491.03999999999996, "end": 496.59999999999997, "text": " Let's say we have extracted the border of the outline of that cell.", "tokens": [51146, 961, 311, 584, 321, 362, 34086, 264, 7838, 295, 264, 16387, 295, 300, 2815, 13, 51424], "temperature": 0.0, "avg_logprob": -0.22889776008073673, "compression_ratio": 1.558252427184466, "no_speech_prob": 0.0016998741775751114}, {"id": 92, "seek": 47540, "start": 496.59999999999997, "end": 500.67999999999995, "text": " How do we want to represent this shape in a computer?", "tokens": [51424, 1012, 360, 321, 528, 281, 2906, 341, 3909, 294, 257, 3820, 30, 51628], "temperature": 0.0, "avg_logprob": -0.22889776008073673, "compression_ratio": 1.558252427184466, "no_speech_prob": 0.0016998741775751114}, {"id": 93, "seek": 50068, "start": 501.32, "end": 506.24, "text": " There are different choices that one can make, and we're going to see a few of them.", "tokens": [50396, 821, 366, 819, 7994, 300, 472, 393, 652, 11, 293, 321, 434, 516, 281, 536, 257, 1326, 295, 552, 13, 50642], "temperature": 0.0, "avg_logprob": -0.20359170203115426, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.002798392903059721}, {"id": 94, "seek": 50068, "start": 506.24, "end": 513.32, "text": " And lastly, when we have represented the shape, we have chosen a feature to represent the shape.", "tokens": [50642, 400, 16386, 11, 562, 321, 362, 10379, 264, 3909, 11, 321, 362, 8614, 257, 4111, 281, 2906, 264, 3909, 13, 50996], "temperature": 0.0, "avg_logprob": -0.20359170203115426, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.002798392903059721}, {"id": 95, "seek": 50068, "start": 513.32, "end": 518.04, "text": " We can do statistics, machine learning, and deep learning on these data points that are", "tokens": [50996, 492, 393, 360, 12523, 11, 3479, 2539, 11, 293, 2452, 2539, 322, 613, 1412, 2793, 300, 366, 51232], "temperature": 0.0, "avg_logprob": -0.20359170203115426, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.002798392903059721}, {"id": 96, "seek": 50068, "start": 518.04, "end": 519.04, "text": " shapes.", "tokens": [51232, 10854, 13, 51282], "temperature": 0.0, "avg_logprob": -0.20359170203115426, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.002798392903059721}, {"id": 97, "seek": 50068, "start": 519.04, "end": 523.04, "text": " That's what they call shape learning.", "tokens": [51282, 663, 311, 437, 436, 818, 3909, 2539, 13, 51482], "temperature": 0.0, "avg_logprob": -0.20359170203115426, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.002798392903059721}, {"id": 98, "seek": 50068, "start": 523.04, "end": 529.88, "text": " In the context of this talk, we will focus on the last two of this pipeline of this cycle.", "tokens": [51482, 682, 264, 4319, 295, 341, 751, 11, 321, 486, 1879, 322, 264, 1036, 732, 295, 341, 15517, 295, 341, 6586, 13, 51824], "temperature": 0.0, "avg_logprob": -0.20359170203115426, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.002798392903059721}, {"id": 99, "seek": 52988, "start": 529.88, "end": 533.4, "text": " How can we represent a shape in a computer?", "tokens": [50364, 1012, 393, 321, 2906, 257, 3909, 294, 257, 3820, 30, 50540], "temperature": 0.0, "avg_logprob": -0.21919119847963933, "compression_ratio": 1.8780487804878048, "no_speech_prob": 0.00027352425968274474}, {"id": 100, "seek": 52988, "start": 533.4, "end": 538.52, "text": " And then when we have represented the notion of shape in a computer, how can we do machine", "tokens": [50540, 400, 550, 562, 321, 362, 10379, 264, 10710, 295, 3909, 294, 257, 3820, 11, 577, 393, 321, 360, 3479, 50796], "temperature": 0.0, "avg_logprob": -0.21919119847963933, "compression_ratio": 1.8780487804878048, "no_speech_prob": 0.00027352425968274474}, {"id": 101, "seek": 52988, "start": 538.52, "end": 542.88, "text": " learning on shapes?", "tokens": [50796, 2539, 322, 10854, 30, 51014], "temperature": 0.0, "avg_logprob": -0.21919119847963933, "compression_ratio": 1.8780487804878048, "no_speech_prob": 0.00027352425968274474}, {"id": 102, "seek": 52988, "start": 542.88, "end": 548.16, "text": " Let's start with how we represent the notion of shape in a computer.", "tokens": [51014, 961, 311, 722, 365, 577, 321, 2906, 264, 10710, 295, 3909, 294, 257, 3820, 13, 51278], "temperature": 0.0, "avg_logprob": -0.21919119847963933, "compression_ratio": 1.8780487804878048, "no_speech_prob": 0.00027352425968274474}, {"id": 103, "seek": 52988, "start": 548.16, "end": 554.84, "text": " So shape modeling, our shape representation is interesting because we have different", "tokens": [51278, 407, 3909, 15983, 11, 527, 3909, 10290, 307, 1880, 570, 321, 362, 819, 51612], "temperature": 0.0, "avg_logprob": -0.21919119847963933, "compression_ratio": 1.8780487804878048, "no_speech_prob": 0.00027352425968274474}, {"id": 104, "seek": 55484, "start": 554.84, "end": 560.76, "text": " choices as to how to model the shape of the biological structure.", "tokens": [50364, 7994, 382, 281, 577, 281, 2316, 264, 3909, 295, 264, 13910, 3877, 13, 50660], "temperature": 0.0, "avg_logprob": -0.18746183058794808, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.003320734016597271}, {"id": 105, "seek": 55484, "start": 560.76, "end": 568.6, "text": " But irrespective of these choices, very often, we end up computing with manifolds.", "tokens": [50660, 583, 3418, 19575, 488, 295, 613, 7994, 11, 588, 2049, 11, 321, 917, 493, 15866, 365, 8173, 31518, 13, 51052], "temperature": 0.0, "avg_logprob": -0.18746183058794808, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.003320734016597271}, {"id": 106, "seek": 55484, "start": 568.6, "end": 570.1600000000001, "text": " What is a manifold?", "tokens": [51052, 708, 307, 257, 47138, 30, 51130], "temperature": 0.0, "avg_logprob": -0.18746183058794808, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.003320734016597271}, {"id": 107, "seek": 55484, "start": 570.1600000000001, "end": 575.32, "text": " On the left, you have a visual definition of what is a manifold.", "tokens": [51130, 1282, 264, 1411, 11, 291, 362, 257, 5056, 7123, 295, 437, 307, 257, 47138, 13, 51388], "temperature": 0.0, "avg_logprob": -0.18746183058794808, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.003320734016597271}, {"id": 108, "seek": 55484, "start": 575.32, "end": 584.12, "text": " We can generally define a manifold as a generalization of a vector space that is allowed to be curved.", "tokens": [51388, 492, 393, 5101, 6964, 257, 47138, 382, 257, 2674, 2144, 295, 257, 8062, 1901, 300, 307, 4350, 281, 312, 24991, 13, 51828], "temperature": 0.0, "avg_logprob": -0.18746183058794808, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.003320734016597271}, {"id": 109, "seek": 58412, "start": 584.12, "end": 589.76, "text": " On the left, for example, you can see a 2D vector space, also called a plane, that is", "tokens": [50364, 1282, 264, 1411, 11, 337, 1365, 11, 291, 393, 536, 257, 568, 35, 8062, 1901, 11, 611, 1219, 257, 5720, 11, 300, 307, 50646], "temperature": 0.0, "avg_logprob": -0.19465199638815486, "compression_ratio": 1.5739910313901346, "no_speech_prob": 0.009993522427976131}, {"id": 110, "seek": 58412, "start": 589.76, "end": 591.16, "text": " not curved.", "tokens": [50646, 406, 24991, 13, 50716], "temperature": 0.0, "avg_logprob": -0.19465199638815486, "compression_ratio": 1.5739910313901346, "no_speech_prob": 0.009993522427976131}, {"id": 111, "seek": 58412, "start": 591.16, "end": 593.36, "text": " It's linear or flat.", "tokens": [50716, 467, 311, 8213, 420, 4962, 13, 50826], "temperature": 0.0, "avg_logprob": -0.19465199638815486, "compression_ratio": 1.5739910313901346, "no_speech_prob": 0.009993522427976131}, {"id": 112, "seek": 58412, "start": 593.36, "end": 601.12, "text": " And just below it, we have an example of a 2D manifold M that is itself allowed to be", "tokens": [50826, 400, 445, 2507, 309, 11, 321, 362, 364, 1365, 295, 257, 568, 35, 47138, 376, 300, 307, 2564, 4350, 281, 312, 51214], "temperature": 0.0, "avg_logprob": -0.19465199638815486, "compression_ratio": 1.5739910313901346, "no_speech_prob": 0.009993522427976131}, {"id": 113, "seek": 58412, "start": 601.12, "end": 602.12, "text": " curved.", "tokens": [51214, 24991, 13, 51264], "temperature": 0.0, "avg_logprob": -0.19465199638815486, "compression_ratio": 1.5739910313901346, "no_speech_prob": 0.009993522427976131}, {"id": 114, "seek": 58412, "start": 602.12, "end": 604.84, "text": " You can see that there is some curvature there.", "tokens": [51264, 509, 393, 536, 300, 456, 307, 512, 37638, 456, 13, 51400], "temperature": 0.0, "avg_logprob": -0.19465199638815486, "compression_ratio": 1.5739910313901346, "no_speech_prob": 0.009993522427976131}, {"id": 115, "seek": 58412, "start": 604.84, "end": 611.4, "text": " Now, this is interesting for us because, as I said, we can try different models of shapes,", "tokens": [51400, 823, 11, 341, 307, 1880, 337, 505, 570, 11, 382, 286, 848, 11, 321, 393, 853, 819, 5245, 295, 10854, 11, 51728], "temperature": 0.0, "avg_logprob": -0.19465199638815486, "compression_ratio": 1.5739910313901346, "no_speech_prob": 0.009993522427976131}, {"id": 116, "seek": 61140, "start": 611.4, "end": 617.92, "text": " and representations of shapes, but very often, we will see this manifold M appear.", "tokens": [50364, 293, 33358, 295, 10854, 11, 457, 588, 2049, 11, 321, 486, 536, 341, 47138, 376, 4204, 13, 50690], "temperature": 0.0, "avg_logprob": -0.26167950630187986, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.012780151329934597}, {"id": 117, "seek": 61140, "start": 617.92, "end": 623.48, "text": " Let me give you examples of how manifolds enter the computations.", "tokens": [50690, 961, 385, 976, 291, 5110, 295, 577, 8173, 31518, 3242, 264, 2807, 763, 13, 50968], "temperature": 0.0, "avg_logprob": -0.26167950630187986, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.012780151329934597}, {"id": 118, "seek": 61140, "start": 623.48, "end": 627.88, "text": " First, let's look at the shapes themselves.", "tokens": [50968, 2386, 11, 718, 311, 574, 412, 264, 10854, 2969, 13, 51188], "temperature": 0.0, "avg_logprob": -0.26167950630187986, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.012780151329934597}, {"id": 119, "seek": 61140, "start": 627.88, "end": 634.0799999999999, "text": " Let's say we are interested in shape of this cat, and more precisely, the shape of the", "tokens": [51188, 961, 311, 584, 321, 366, 3102, 294, 3909, 295, 341, 3857, 11, 293, 544, 13402, 11, 264, 3909, 295, 264, 51498], "temperature": 0.0, "avg_logprob": -0.26167950630187986, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.012780151329934597}, {"id": 120, "seek": 61140, "start": 634.0799999999999, "end": 637.4399999999999, "text": " surface that is defining the cat.", "tokens": [51498, 3753, 300, 307, 17827, 264, 3857, 13, 51666], "temperature": 0.0, "avg_logprob": -0.26167950630187986, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.012780151329934597}, {"id": 121, "seek": 63744, "start": 637.44, "end": 643.08, "text": " The shape of the surface is a generalization of a vector space that is allowed to be curved,", "tokens": [50364, 440, 3909, 295, 264, 3753, 307, 257, 2674, 2144, 295, 257, 8062, 1901, 300, 307, 4350, 281, 312, 24991, 11, 50646], "temperature": 0.0, "avg_logprob": -0.2284438153530689, "compression_ratio": 1.7149532710280373, "no_speech_prob": 0.0025492857675999403}, {"id": 122, "seek": 63744, "start": 643.08, "end": 650.96, "text": " and so the shape itself is the manifold in this case, so I write M equal to the shape.", "tokens": [50646, 293, 370, 264, 3909, 2564, 307, 264, 47138, 294, 341, 1389, 11, 370, 286, 2464, 376, 2681, 281, 264, 3909, 13, 51040], "temperature": 0.0, "avg_logprob": -0.2284438153530689, "compression_ratio": 1.7149532710280373, "no_speech_prob": 0.0025492857675999403}, {"id": 123, "seek": 63744, "start": 650.96, "end": 653.0400000000001, "text": " The manifold is the shape.", "tokens": [51040, 440, 47138, 307, 264, 3909, 13, 51144], "temperature": 0.0, "avg_logprob": -0.2284438153530689, "compression_ratio": 1.7149532710280373, "no_speech_prob": 0.0025492857675999403}, {"id": 124, "seek": 63744, "start": 653.0400000000001, "end": 658.44, "text": " If you want to compute on these shapes, for example, define a hit map or a scalar field", "tokens": [51144, 759, 291, 528, 281, 14722, 322, 613, 10854, 11, 337, 1365, 11, 6964, 257, 2045, 4471, 420, 257, 39684, 2519, 51414], "temperature": 0.0, "avg_logprob": -0.2284438153530689, "compression_ratio": 1.7149532710280373, "no_speech_prob": 0.0025492857675999403}, {"id": 125, "seek": 63744, "start": 658.44, "end": 665.84, "text": " on this shape, you are working with defining a function on the manifold.", "tokens": [51414, 322, 341, 3909, 11, 291, 366, 1364, 365, 17827, 257, 2445, 322, 264, 47138, 13, 51784], "temperature": 0.0, "avg_logprob": -0.2284438153530689, "compression_ratio": 1.7149532710280373, "no_speech_prob": 0.0025492857675999403}, {"id": 126, "seek": 66584, "start": 665.84, "end": 669.48, "text": " Another example is a bit more abstract.", "tokens": [50364, 3996, 1365, 307, 257, 857, 544, 12649, 13, 50546], "temperature": 0.0, "avg_logprob": -0.3024160211736506, "compression_ratio": 1.7816091954022988, "no_speech_prob": 0.03389885276556015}, {"id": 127, "seek": 66584, "start": 669.48, "end": 673.76, "text": " The manifold can be the space of all the shapes.", "tokens": [50546, 440, 47138, 393, 312, 264, 1901, 295, 439, 264, 10854, 13, 50760], "temperature": 0.0, "avg_logprob": -0.3024160211736506, "compression_ratio": 1.7816091954022988, "no_speech_prob": 0.03389885276556015}, {"id": 128, "seek": 66584, "start": 673.76, "end": 678.48, "text": " In the first case, one shape is a manifold.", "tokens": [50760, 682, 264, 700, 1389, 11, 472, 3909, 307, 257, 47138, 13, 50996], "temperature": 0.0, "avg_logprob": -0.3024160211736506, "compression_ratio": 1.7816091954022988, "no_speech_prob": 0.03389885276556015}, {"id": 129, "seek": 66584, "start": 678.48, "end": 684.6, "text": " In the second case, we consider the space of all possible shapes, but you have illustrated", "tokens": [50996, 682, 264, 1150, 1389, 11, 321, 1949, 264, 1901, 295, 439, 1944, 10854, 11, 457, 291, 362, 33875, 51302], "temperature": 0.0, "avg_logprob": -0.3024160211736506, "compression_ratio": 1.7816091954022988, "no_speech_prob": 0.03389885276556015}, {"id": 130, "seek": 66584, "start": 684.6, "end": 691.2, "text": " with this sphere is actually the shape space of all the possible triangles, so you can", "tokens": [51302, 365, 341, 16687, 307, 767, 264, 3909, 1901, 295, 439, 264, 1944, 29896, 11, 370, 291, 393, 51632], "temperature": 0.0, "avg_logprob": -0.3024160211736506, "compression_ratio": 1.7816091954022988, "no_speech_prob": 0.03389885276556015}, {"id": 131, "seek": 69120, "start": 691.2, "end": 697.08, "text": " see if you look, maybe you can see, that I have superimposed a little triangle on this", "tokens": [50364, 536, 498, 291, 574, 11, 1310, 291, 393, 536, 11, 300, 286, 362, 1687, 8814, 1744, 257, 707, 13369, 322, 341, 50658], "temperature": 0.0, "avg_logprob": -0.3161481440752402, "compression_ratio": 1.729064039408867, "no_speech_prob": 0.0039377580396831036}, {"id": 132, "seek": 69120, "start": 697.08, "end": 700.84, "text": " sphere, because here there is a triangle.", "tokens": [50658, 16687, 11, 570, 510, 456, 307, 257, 13369, 13, 50846], "temperature": 0.0, "avg_logprob": -0.3161481440752402, "compression_ratio": 1.729064039408867, "no_speech_prob": 0.0039377580396831036}, {"id": 133, "seek": 69120, "start": 700.84, "end": 707.44, "text": " This sphere actually represents the space of all the triangular shapes, so all the visible", "tokens": [50846, 639, 16687, 767, 8855, 264, 1901, 295, 439, 264, 38190, 10854, 11, 370, 439, 264, 8974, 51176], "temperature": 0.0, "avg_logprob": -0.3161481440752402, "compression_ratio": 1.729064039408867, "no_speech_prob": 0.0039377580396831036}, {"id": 134, "seek": 69120, "start": 707.44, "end": 708.44, "text": " shapes.", "tokens": [51176, 10854, 13, 51226], "temperature": 0.0, "avg_logprob": -0.3161481440752402, "compression_ratio": 1.729064039408867, "no_speech_prob": 0.0039377580396831036}, {"id": 135, "seek": 69120, "start": 708.44, "end": 713.4000000000001, "text": " Now, this illustration is the shape space of triangles, but more generally, the shape", "tokens": [51226, 823, 11, 341, 22645, 307, 264, 3909, 1901, 295, 29896, 11, 457, 544, 5101, 11, 264, 3909, 51474], "temperature": 0.0, "avg_logprob": -0.3161481440752402, "compression_ratio": 1.729064039408867, "no_speech_prob": 0.0039377580396831036}, {"id": 136, "seek": 69120, "start": 713.4000000000001, "end": 718.2, "text": " space of surfaces is also a manifold.", "tokens": [51474, 1901, 295, 16130, 307, 611, 257, 47138, 13, 51714], "temperature": 0.0, "avg_logprob": -0.3161481440752402, "compression_ratio": 1.729064039408867, "no_speech_prob": 0.0039377580396831036}, {"id": 137, "seek": 71820, "start": 718.5600000000001, "end": 723.0400000000001, "text": " Continuing, you could be interested in the space of shape motions.", "tokens": [50382, 47585, 11, 291, 727, 312, 3102, 294, 264, 1901, 295, 3909, 27500, 13, 50606], "temperature": 0.0, "avg_logprob": -0.2305025943489962, "compression_ratio": 1.7342995169082125, "no_speech_prob": 0.0007662137504667044}, {"id": 138, "seek": 71820, "start": 723.0400000000001, "end": 726.84, "text": " For example, how your shape translates and rotates.", "tokens": [50606, 1171, 1365, 11, 577, 428, 3909, 28468, 293, 42133, 13, 50796], "temperature": 0.0, "avg_logprob": -0.2305025943489962, "compression_ratio": 1.7342995169082125, "no_speech_prob": 0.0007662137504667044}, {"id": 139, "seek": 71820, "start": 726.84, "end": 731.08, "text": " Here you have a cancer cell translating and rotating.", "tokens": [50796, 1692, 291, 362, 257, 5592, 2815, 35030, 293, 19627, 13, 51008], "temperature": 0.0, "avg_logprob": -0.2305025943489962, "compression_ratio": 1.7342995169082125, "no_speech_prob": 0.0007662137504667044}, {"id": 140, "seek": 71820, "start": 731.08, "end": 736.6400000000001, "text": " If you want to do statistics on all the possible motions that your shape can perform, then you're", "tokens": [51008, 759, 291, 528, 281, 360, 12523, 322, 439, 264, 1944, 27500, 300, 428, 3909, 393, 2042, 11, 550, 291, 434, 51286], "temperature": 0.0, "avg_logprob": -0.2305025943489962, "compression_ratio": 1.7342995169082125, "no_speech_prob": 0.0007662137504667044}, {"id": 141, "seek": 71820, "start": 736.6400000000001, "end": 743.2, "text": " doing statistics on, again, a manifold M. That is this time, the space of shape motions.", "tokens": [51286, 884, 12523, 322, 11, 797, 11, 257, 47138, 376, 13, 663, 307, 341, 565, 11, 264, 1901, 295, 3909, 27500, 13, 51614], "temperature": 0.0, "avg_logprob": -0.2305025943489962, "compression_ratio": 1.7342995169082125, "no_speech_prob": 0.0007662137504667044}, {"id": 142, "seek": 74320, "start": 744.12, "end": 750.24, "text": " And lastly, you could be interested in how shapes deform, or a smooth deformation of", "tokens": [50410, 400, 16386, 11, 291, 727, 312, 3102, 294, 577, 10854, 36094, 11, 420, 257, 5508, 34364, 295, 50716], "temperature": 0.0, "avg_logprob": -0.22459786112715557, "compression_ratio": 1.698019801980198, "no_speech_prob": 0.0002164954785257578}, {"id": 143, "seek": 74320, "start": 750.24, "end": 755.0, "text": " the cancer cell, as you can see on the left, but also other objects like functional maps", "tokens": [50716, 264, 5592, 2815, 11, 382, 291, 393, 536, 322, 264, 1411, 11, 457, 611, 661, 6565, 411, 11745, 11317, 50954], "temperature": 0.0, "avg_logprob": -0.22459786112715557, "compression_ratio": 1.698019801980198, "no_speech_prob": 0.0002164954785257578}, {"id": 144, "seek": 74320, "start": 755.0, "end": 759.72, "text": " that explain how shapes can deform.", "tokens": [50954, 300, 2903, 577, 10854, 393, 36094, 13, 51190], "temperature": 0.0, "avg_logprob": -0.22459786112715557, "compression_ratio": 1.698019801980198, "no_speech_prob": 0.0002164954785257578}, {"id": 145, "seek": 74320, "start": 759.72, "end": 765.32, "text": " And interestingly, again, if you choose this shape representation, you end up with a space", "tokens": [51190, 400, 25873, 11, 797, 11, 498, 291, 2826, 341, 3909, 10290, 11, 291, 917, 493, 365, 257, 1901, 51470], "temperature": 0.0, "avg_logprob": -0.22459786112715557, "compression_ratio": 1.698019801980198, "no_speech_prob": 0.0002164954785257578}, {"id": 146, "seek": 74320, "start": 765.32, "end": 769.88, "text": " of shapes deformation, that is a manifold.", "tokens": [51470, 295, 10854, 34364, 11, 300, 307, 257, 47138, 13, 51698], "temperature": 0.0, "avg_logprob": -0.22459786112715557, "compression_ratio": 1.698019801980198, "no_speech_prob": 0.0002164954785257578}, {"id": 147, "seek": 76988, "start": 769.88, "end": 774.28, "text": " There are other models of shape that I will not cover here, but it seems that these four", "tokens": [50364, 821, 366, 661, 5245, 295, 3909, 300, 286, 486, 406, 2060, 510, 11, 457, 309, 2544, 300, 613, 1451, 50584], "temperature": 0.0, "avg_logprob": -0.2204600543510623, "compression_ratio": 1.6965174129353233, "no_speech_prob": 0.001431320677511394}, {"id": 148, "seek": 76988, "start": 774.28, "end": 783.28, "text": " models of shapes are quite common, and all of them require thinking about manifolds.", "tokens": [50584, 5245, 295, 10854, 366, 1596, 2689, 11, 293, 439, 295, 552, 3651, 1953, 466, 8173, 31518, 13, 51034], "temperature": 0.0, "avg_logprob": -0.2204600543510623, "compression_ratio": 1.6965174129353233, "no_speech_prob": 0.001431320677511394}, {"id": 149, "seek": 76988, "start": 783.28, "end": 787.08, "text": " Thinking about manifolds, what can we do with manifolds?", "tokens": [51034, 24460, 466, 8173, 31518, 11, 437, 393, 321, 360, 365, 8173, 31518, 30, 51224], "temperature": 0.0, "avg_logprob": -0.2204600543510623, "compression_ratio": 1.6965174129353233, "no_speech_prob": 0.001431320677511394}, {"id": 150, "seek": 76988, "start": 787.08, "end": 792.88, "text": " Let's think about generalizing basic operations, and for example, generating the definition", "tokens": [51224, 961, 311, 519, 466, 2674, 3319, 3875, 7705, 11, 293, 337, 1365, 11, 17746, 264, 7123, 51514], "temperature": 0.0, "avg_logprob": -0.2204600543510623, "compression_ratio": 1.6965174129353233, "no_speech_prob": 0.001431320677511394}, {"id": 151, "seek": 76988, "start": 792.88, "end": 795.48, "text": " of a new manifold.", "tokens": [51514, 295, 257, 777, 47138, 13, 51644], "temperature": 0.0, "avg_logprob": -0.2204600543510623, "compression_ratio": 1.6965174129353233, "no_speech_prob": 0.001431320677511394}, {"id": 152, "seek": 79548, "start": 795.48, "end": 798.28, "text": " On the center of the screen, I put the sphere.", "tokens": [50364, 1282, 264, 3056, 295, 264, 2568, 11, 286, 829, 264, 16687, 13, 50504], "temperature": 0.0, "avg_logprob": -0.27227317810058593, "compression_ratio": 1.835, "no_speech_prob": 0.006681676954030991}, {"id": 153, "seek": 79548, "start": 798.28, "end": 801.9200000000001, "text": " The sphere is one example of manifolds that we had just before.", "tokens": [50504, 440, 16687, 307, 472, 1365, 295, 8173, 31518, 300, 321, 632, 445, 949, 13, 50686], "temperature": 0.0, "avg_logprob": -0.27227317810058593, "compression_ratio": 1.835, "no_speech_prob": 0.006681676954030991}, {"id": 154, "seek": 79548, "start": 801.9200000000001, "end": 805.88, "text": " It can represent the shape space of triangles.", "tokens": [50686, 467, 393, 2906, 264, 3909, 1901, 295, 29896, 13, 50884], "temperature": 0.0, "avg_logprob": -0.27227317810058593, "compression_ratio": 1.835, "no_speech_prob": 0.006681676954030991}, {"id": 155, "seek": 79548, "start": 805.88, "end": 809.8000000000001, "text": " The one point of the sphere is the shape of a triangle.", "tokens": [50884, 440, 472, 935, 295, 264, 16687, 307, 264, 3909, 295, 257, 13369, 13, 51080], "temperature": 0.0, "avg_logprob": -0.27227317810058593, "compression_ratio": 1.835, "no_speech_prob": 0.006681676954030991}, {"id": 156, "seek": 79548, "start": 809.8000000000001, "end": 815.88, "text": " You can also think of it as one point of the sphere is a shape motion.", "tokens": [51080, 509, 393, 611, 519, 295, 309, 382, 472, 935, 295, 264, 16687, 307, 257, 3909, 5394, 13, 51384], "temperature": 0.0, "avg_logprob": -0.27227317810058593, "compression_ratio": 1.835, "no_speech_prob": 0.006681676954030991}, {"id": 157, "seek": 79548, "start": 815.88, "end": 820.16, "text": " How do I compute the mean of two triangles?", "tokens": [51384, 1012, 360, 286, 14722, 264, 914, 295, 732, 29896, 30, 51598], "temperature": 0.0, "avg_logprob": -0.27227317810058593, "compression_ratio": 1.835, "no_speech_prob": 0.006681676954030991}, {"id": 158, "seek": 79548, "start": 820.16, "end": 822.96, "text": " That will be the two real points here.", "tokens": [51598, 663, 486, 312, 264, 732, 957, 2793, 510, 13, 51738], "temperature": 0.0, "avg_logprob": -0.27227317810058593, "compression_ratio": 1.835, "no_speech_prob": 0.006681676954030991}, {"id": 159, "seek": 82296, "start": 822.96, "end": 826.5600000000001, "text": " Or how do I compute the mean of two shape transformations?", "tokens": [50364, 1610, 577, 360, 286, 14722, 264, 914, 295, 732, 3909, 34852, 30, 50544], "temperature": 0.0, "avg_logprob": -0.22665560020590728, "compression_ratio": 1.9141630901287554, "no_speech_prob": 0.0053692711517214775}, {"id": 160, "seek": 82296, "start": 826.5600000000001, "end": 829.96, "text": " That will be the two blue points here.", "tokens": [50544, 663, 486, 312, 264, 732, 3344, 2793, 510, 13, 50714], "temperature": 0.0, "avg_logprob": -0.22665560020590728, "compression_ratio": 1.9141630901287554, "no_speech_prob": 0.0053692711517214775}, {"id": 161, "seek": 82296, "start": 829.96, "end": 834.5600000000001, "text": " I could use the traditional definitions of statistics, and I can use the traditional", "tokens": [50714, 286, 727, 764, 264, 5164, 21988, 295, 12523, 11, 293, 286, 393, 764, 264, 5164, 50944], "temperature": 0.0, "avg_logprob": -0.22665560020590728, "compression_ratio": 1.9141630901287554, "no_speech_prob": 0.0053692711517214775}, {"id": 162, "seek": 82296, "start": 834.5600000000001, "end": 840.6, "text": " definition of mean and compute the mean as this orange point, which would be computed", "tokens": [50944, 7123, 295, 914, 293, 14722, 264, 914, 382, 341, 7671, 935, 11, 597, 576, 312, 40610, 51246], "temperature": 0.0, "avg_logprob": -0.22665560020590728, "compression_ratio": 1.9141630901287554, "no_speech_prob": 0.0053692711517214775}, {"id": 163, "seek": 82296, "start": 840.6, "end": 843.2, "text": " as the middle of the two blue points.", "tokens": [51246, 382, 264, 2808, 295, 264, 732, 3344, 2793, 13, 51376], "temperature": 0.0, "avg_logprob": -0.22665560020590728, "compression_ratio": 1.9141630901287554, "no_speech_prob": 0.0053692711517214775}, {"id": 164, "seek": 82296, "start": 843.2, "end": 849.24, "text": " But in that case, if I apply traditional statistics, there is a problem because you see the mean", "tokens": [51376, 583, 294, 300, 1389, 11, 498, 286, 3079, 5164, 12523, 11, 456, 307, 257, 1154, 570, 291, 536, 264, 914, 51678], "temperature": 0.0, "avg_logprob": -0.22665560020590728, "compression_ratio": 1.9141630901287554, "no_speech_prob": 0.0053692711517214775}, {"id": 165, "seek": 82296, "start": 849.24, "end": 852.12, "text": " in orange does not belong to the manifold.", "tokens": [51678, 294, 7671, 775, 406, 5784, 281, 264, 47138, 13, 51822], "temperature": 0.0, "avg_logprob": -0.22665560020590728, "compression_ratio": 1.9141630901287554, "no_speech_prob": 0.0053692711517214775}, {"id": 166, "seek": 85212, "start": 852.6, "end": 858.5600000000001, "text": " Now, if the manifold represents the shape space of triangles, what we are saying in applying", "tokens": [50388, 823, 11, 498, 264, 47138, 8855, 264, 3909, 1901, 295, 29896, 11, 437, 321, 366, 1566, 294, 9275, 50686], "temperature": 0.0, "avg_logprob": -0.18096887743150866, "compression_ratio": 1.7244897959183674, "no_speech_prob": 0.0005188836948946118}, {"id": 167, "seek": 85212, "start": 858.5600000000001, "end": 864.2, "text": " traditional statistics is that the mean of two triangles is not even a triangle.", "tokens": [50686, 5164, 12523, 307, 300, 264, 914, 295, 732, 29896, 307, 406, 754, 257, 13369, 13, 50968], "temperature": 0.0, "avg_logprob": -0.18096887743150866, "compression_ratio": 1.7244897959183674, "no_speech_prob": 0.0005188836948946118}, {"id": 168, "seek": 85212, "start": 864.2, "end": 869.64, "text": " So traditional statistics do not really apply in this setting.", "tokens": [50968, 407, 5164, 12523, 360, 406, 534, 3079, 294, 341, 3287, 13, 51240], "temperature": 0.0, "avg_logprob": -0.18096887743150866, "compression_ratio": 1.7244897959183674, "no_speech_prob": 0.0005188836948946118}, {"id": 169, "seek": 85212, "start": 869.64, "end": 877.24, "text": " We would like to generalize operations, statistics, machine learning, and deep learning to manifolds.", "tokens": [51240, 492, 576, 411, 281, 2674, 1125, 7705, 11, 12523, 11, 3479, 2539, 11, 293, 2452, 2539, 281, 8173, 31518, 13, 51620], "temperature": 0.0, "avg_logprob": -0.18096887743150866, "compression_ratio": 1.7244897959183674, "no_speech_prob": 0.0005188836948946118}, {"id": 170, "seek": 87724, "start": 877.24, "end": 882.6, "text": " So that when I try to compute the mean of these two blue points, that again, the two", "tokens": [50364, 407, 300, 562, 286, 853, 281, 14722, 264, 914, 295, 613, 732, 3344, 2793, 11, 300, 797, 11, 264, 732, 50632], "temperature": 0.0, "avg_logprob": -0.1759952804417286, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.00019404564227443188}, {"id": 171, "seek": 87724, "start": 882.6, "end": 888.8, "text": " triangle shapes, two shape deformations, I end up with a orange point that is at least", "tokens": [50632, 13369, 10854, 11, 732, 3909, 36094, 763, 11, 286, 917, 493, 365, 257, 7671, 935, 300, 307, 412, 1935, 50942], "temperature": 0.0, "avg_logprob": -0.1759952804417286, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.00019404564227443188}, {"id": 172, "seek": 87724, "start": 888.8, "end": 893.04, "text": " part of the data space that I'm interested in.", "tokens": [50942, 644, 295, 264, 1412, 1901, 300, 286, 478, 3102, 294, 13, 51154], "temperature": 0.0, "avg_logprob": -0.1759952804417286, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.00019404564227443188}, {"id": 173, "seek": 87724, "start": 893.04, "end": 897.5600000000001, "text": " So we'd like to generalize all of these operations to manipulate.", "tokens": [51154, 407, 321, 1116, 411, 281, 2674, 1125, 439, 295, 613, 7705, 281, 20459, 13, 51380], "temperature": 0.0, "avg_logprob": -0.1759952804417286, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.00019404564227443188}, {"id": 174, "seek": 87724, "start": 897.5600000000001, "end": 902.52, "text": " Why would we want to do that instead of, for example, just using traditional statistics", "tokens": [51380, 1545, 576, 321, 528, 281, 360, 300, 2602, 295, 11, 337, 1365, 11, 445, 1228, 5164, 12523, 51628], "temperature": 0.0, "avg_logprob": -0.1759952804417286, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.00019404564227443188}, {"id": 175, "seek": 87724, "start": 902.52, "end": 906.0, "text": " and then projecting back on the manifold?", "tokens": [51628, 293, 550, 43001, 646, 322, 264, 47138, 30, 51802], "temperature": 0.0, "avg_logprob": -0.1759952804417286, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.00019404564227443188}, {"id": 176, "seek": 90600, "start": 906.04, "end": 912.04, "text": " This is because knowing that the data space is a manifold is information.", "tokens": [50366, 639, 307, 570, 5276, 300, 264, 1412, 1901, 307, 257, 47138, 307, 1589, 13, 50666], "temperature": 0.0, "avg_logprob": -0.1508451174664241, "compression_ratio": 1.8564593301435406, "no_speech_prob": 0.00020978035172447562}, {"id": 177, "seek": 90600, "start": 912.04, "end": 917.68, "text": " Knowing the geometry of the shape space, of the space of shape motions, of the space of", "tokens": [50666, 25499, 264, 18426, 295, 264, 3909, 1901, 11, 295, 264, 1901, 295, 3909, 27500, 11, 295, 264, 1901, 295, 50948], "temperature": 0.0, "avg_logprob": -0.1508451174664241, "compression_ratio": 1.8564593301435406, "no_speech_prob": 0.00020978035172447562}, {"id": 178, "seek": 90600, "start": 917.68, "end": 920.36, "text": " shape deformations, that is information.", "tokens": [50948, 3909, 36094, 763, 11, 300, 307, 1589, 13, 51082], "temperature": 0.0, "avg_logprob": -0.1508451174664241, "compression_ratio": 1.8564593301435406, "no_speech_prob": 0.00020978035172447562}, {"id": 179, "seek": 90600, "start": 920.36, "end": 925.64, "text": " And any information that we can incorporate in the learning algorithm is welcome.", "tokens": [51082, 400, 604, 1589, 300, 321, 393, 16091, 294, 264, 2539, 9284, 307, 2928, 13, 51346], "temperature": 0.0, "avg_logprob": -0.1508451174664241, "compression_ratio": 1.8564593301435406, "no_speech_prob": 0.00020978035172447562}, {"id": 180, "seek": 90600, "start": 925.64, "end": 930.48, "text": " So in other words, we would like to use the geometry of manifolds as an inductive bias", "tokens": [51346, 407, 294, 661, 2283, 11, 321, 576, 411, 281, 764, 264, 18426, 295, 8173, 31518, 382, 364, 31612, 488, 12577, 51588], "temperature": 0.0, "avg_logprob": -0.1508451174664241, "compression_ratio": 1.8564593301435406, "no_speech_prob": 0.00020978035172447562}, {"id": 181, "seek": 90600, "start": 930.48, "end": 934.12, "text": " in our analysis.", "tokens": [51588, 294, 527, 5215, 13, 51770], "temperature": 0.0, "avg_logprob": -0.1508451174664241, "compression_ratio": 1.8564593301435406, "no_speech_prob": 0.00020978035172447562}, {"id": 182, "seek": 93412, "start": 934.12, "end": 936.84, "text": " So let's see how we can do this.", "tokens": [50364, 407, 718, 311, 536, 577, 321, 393, 360, 341, 13, 50500], "temperature": 0.0, "avg_logprob": -0.19844419500801, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.00033506404724903405}, {"id": 183, "seek": 93412, "start": 936.84, "end": 939.92, "text": " So I've just introduced shape modeling.", "tokens": [50500, 407, 286, 600, 445, 7268, 3909, 15983, 13, 50654], "temperature": 0.0, "avg_logprob": -0.19844419500801, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.00033506404724903405}, {"id": 184, "seek": 93412, "start": 939.92, "end": 947.88, "text": " I've introduced four models of shapes, four representations of shapes, and all of them", "tokens": [50654, 286, 600, 7268, 1451, 5245, 295, 10854, 11, 1451, 33358, 295, 10854, 11, 293, 439, 295, 552, 51052], "temperature": 0.0, "avg_logprob": -0.19844419500801, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.00033506404724903405}, {"id": 185, "seek": 93412, "start": 947.88, "end": 951.4, "text": " require us to compute on manifolds.", "tokens": [51052, 3651, 505, 281, 14722, 322, 8173, 31518, 13, 51228], "temperature": 0.0, "avg_logprob": -0.19844419500801, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.00033506404724903405}, {"id": 186, "seek": 93412, "start": 951.4, "end": 957.36, "text": " Now let's move to shape deep learning, which is a way of computing on manifolds, and see", "tokens": [51228, 823, 718, 311, 1286, 281, 3909, 2452, 2539, 11, 597, 307, 257, 636, 295, 15866, 322, 8173, 31518, 11, 293, 536, 51526], "temperature": 0.0, "avg_logprob": -0.19844419500801, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.00033506404724903405}, {"id": 187, "seek": 93412, "start": 957.36, "end": 962.72, "text": " how we can define shape deep learning for these manifold spaces.", "tokens": [51526, 577, 321, 393, 6964, 3909, 2452, 2539, 337, 613, 47138, 7673, 13, 51794], "temperature": 0.0, "avg_logprob": -0.19844419500801, "compression_ratio": 1.8177083333333333, "no_speech_prob": 0.00033506404724903405}, {"id": 188, "seek": 96412, "start": 965.12, "end": 968.6, "text": " So let's think about what is deep learning first.", "tokens": [50414, 407, 718, 311, 519, 466, 437, 307, 2452, 2539, 700, 13, 50588], "temperature": 0.0, "avg_logprob": -0.20712763612920587, "compression_ratio": 1.8823529411764706, "no_speech_prob": 0.00014869710139464587}, {"id": 189, "seek": 96412, "start": 968.6, "end": 976.88, "text": " I've put four big categories of subfields of deep learning, or machine learning in general,", "tokens": [50588, 286, 600, 829, 1451, 955, 10479, 295, 1422, 7610, 82, 295, 2452, 2539, 11, 420, 3479, 2539, 294, 2674, 11, 51002], "temperature": 0.0, "avg_logprob": -0.20712763612920587, "compression_ratio": 1.8823529411764706, "no_speech_prob": 0.00014869710139464587}, {"id": 190, "seek": 96412, "start": 976.88, "end": 983.12, "text": " supervised learning, unsupervised learning, reinforcement learning, and optimization.", "tokens": [51002, 46533, 2539, 11, 2693, 12879, 24420, 2539, 11, 29280, 2539, 11, 293, 19618, 13, 51314], "temperature": 0.0, "avg_logprob": -0.20712763612920587, "compression_ratio": 1.8823529411764706, "no_speech_prob": 0.00014869710139464587}, {"id": 191, "seek": 96412, "start": 983.12, "end": 987.48, "text": " What is supervised deep learning in the context of shape learning?", "tokens": [51314, 708, 307, 46533, 2452, 2539, 294, 264, 4319, 295, 3909, 2539, 30, 51532], "temperature": 0.0, "avg_logprob": -0.20712763612920587, "compression_ratio": 1.8823529411764706, "no_speech_prob": 0.00014869710139464587}, {"id": 192, "seek": 96412, "start": 987.48, "end": 994.08, "text": " In supervised learning, the goal is to learn a map from an input space to an output space", "tokens": [51532, 682, 46533, 2539, 11, 264, 3387, 307, 281, 1466, 257, 4471, 490, 364, 4846, 1901, 281, 364, 5598, 1901, 51862], "temperature": 0.0, "avg_logprob": -0.20712763612920587, "compression_ratio": 1.8823529411764706, "no_speech_prob": 0.00014869710139464587}, {"id": 193, "seek": 99408, "start": 994.5600000000001, "end": 1003.72, "text": " Y. Now let's rename the input space X into Mx, to denote that the input space can be a manifold.", "tokens": [50388, 398, 13, 823, 718, 311, 36741, 264, 4846, 1901, 1783, 666, 376, 87, 11, 281, 45708, 300, 264, 4846, 1901, 393, 312, 257, 47138, 13, 50846], "temperature": 0.0, "avg_logprob": -0.21061201498542034, "compression_ratio": 1.7905405405405406, "no_speech_prob": 0.001984013244509697}, {"id": 194, "seek": 99408, "start": 1003.72, "end": 1012.76, "text": " And let's rename the output space Y as MY to denote that the output space can be a manifold.", "tokens": [50846, 400, 718, 311, 36741, 264, 5598, 1901, 398, 382, 16322, 281, 45708, 300, 264, 5598, 1901, 393, 312, 257, 47138, 13, 51298], "temperature": 0.0, "avg_logprob": -0.21061201498542034, "compression_ratio": 1.7905405405405406, "no_speech_prob": 0.001984013244509697}, {"id": 195, "seek": 99408, "start": 1012.76, "end": 1017.84, "text": " So this is a setting that will appear if we want to do shape deep learning.", "tokens": [51298, 407, 341, 307, 257, 3287, 300, 486, 4204, 498, 321, 528, 281, 360, 3909, 2452, 2539, 13, 51552], "temperature": 0.0, "avg_logprob": -0.21061201498542034, "compression_ratio": 1.7905405405405406, "no_speech_prob": 0.001984013244509697}, {"id": 196, "seek": 101784, "start": 1017.84, "end": 1024.76, "text": " As an example, let's say Mx is just an image, a 2D image of a 3D object.", "tokens": [50364, 1018, 364, 1365, 11, 718, 311, 584, 376, 87, 307, 445, 364, 3256, 11, 257, 568, 35, 3256, 295, 257, 805, 35, 2657, 13, 50710], "temperature": 0.0, "avg_logprob": -0.1479040162753215, "compression_ratio": 1.7674418604651163, "no_speech_prob": 0.0014092210913076997}, {"id": 197, "seek": 101784, "start": 1024.76, "end": 1029.96, "text": " In that case, it's not, I mean, it's a special case of a manifold, but it's not a curved manifold.", "tokens": [50710, 682, 300, 1389, 11, 309, 311, 406, 11, 286, 914, 11, 309, 311, 257, 2121, 1389, 295, 257, 47138, 11, 457, 309, 311, 406, 257, 24991, 47138, 13, 50970], "temperature": 0.0, "avg_logprob": -0.1479040162753215, "compression_ratio": 1.7674418604651163, "no_speech_prob": 0.0014092210913076997}, {"id": 198, "seek": 101784, "start": 1029.96, "end": 1035.4, "text": " And let's say Y is the space of the pose of the subject.", "tokens": [50970, 400, 718, 311, 584, 398, 307, 264, 1901, 295, 264, 10774, 295, 264, 3983, 13, 51242], "temperature": 0.0, "avg_logprob": -0.1479040162753215, "compression_ratio": 1.7674418604651163, "no_speech_prob": 0.0014092210913076997}, {"id": 199, "seek": 101784, "start": 1035.4, "end": 1038.08, "text": " In that case, MY would be a manifold.", "tokens": [51242, 682, 300, 1389, 11, 16322, 576, 312, 257, 47138, 13, 51376], "temperature": 0.0, "avg_logprob": -0.1479040162753215, "compression_ratio": 1.7674418604651163, "no_speech_prob": 0.0014092210913076997}, {"id": 200, "seek": 101784, "start": 1038.08, "end": 1046.04, "text": " That's an example of shape learning when we want to predict an element of MY, therefore an element of a manifold.", "tokens": [51376, 663, 311, 364, 1365, 295, 3909, 2539, 562, 321, 528, 281, 6069, 364, 4478, 295, 16322, 11, 4412, 364, 4478, 295, 257, 47138, 13, 51774], "temperature": 0.0, "avg_logprob": -0.1479040162753215, "compression_ratio": 1.7674418604651163, "no_speech_prob": 0.0014092210913076997}, {"id": 201, "seek": 104604, "start": 1046.08, "end": 1050.1599999999999, "text": " You can have all the cases where Mx is the manifold.", "tokens": [50366, 509, 393, 362, 439, 264, 3331, 689, 376, 87, 307, 264, 47138, 13, 50570], "temperature": 0.0, "avg_logprob": -0.11144579781426324, "compression_ratio": 1.8624338624338623, "no_speech_prob": 0.0005790396826341748}, {"id": 202, "seek": 104604, "start": 1050.1599999999999, "end": 1056.56, "text": " For example, you see the shape of the brain and you want to predict if that brain has Alzheimer's disease.", "tokens": [50570, 1171, 1365, 11, 291, 536, 264, 3909, 295, 264, 3567, 293, 291, 528, 281, 6069, 498, 300, 3567, 575, 27932, 311, 4752, 13, 50890], "temperature": 0.0, "avg_logprob": -0.11144579781426324, "compression_ratio": 1.8624338624338623, "no_speech_prob": 0.0005790396826341748}, {"id": 203, "seek": 104604, "start": 1056.56, "end": 1064.56, "text": " In that case, Mx is the space of all possible brain shapes and Y is the probability of having Alzheimer's disease.", "tokens": [50890, 682, 300, 1389, 11, 376, 87, 307, 264, 1901, 295, 439, 1944, 3567, 10854, 293, 398, 307, 264, 8482, 295, 1419, 27932, 311, 4752, 13, 51290], "temperature": 0.0, "avg_logprob": -0.11144579781426324, "compression_ratio": 1.8624338624338623, "no_speech_prob": 0.0005790396826341748}, {"id": 204, "seek": 104604, "start": 1064.56, "end": 1071.0, "text": " And you can also have a case where Mx is the manifold and MY is the manifold.", "tokens": [51290, 400, 291, 393, 611, 362, 257, 1389, 689, 376, 87, 307, 264, 47138, 293, 16322, 307, 264, 47138, 13, 51612], "temperature": 0.0, "avg_logprob": -0.11144579781426324, "compression_ratio": 1.8624338624338623, "no_speech_prob": 0.0005790396826341748}, {"id": 205, "seek": 107100, "start": 1071.04, "end": 1079.4, "text": " In unsupervised learning, the goal is to find patterns in the data that belong to the data space M.", "tokens": [50366, 682, 2693, 12879, 24420, 2539, 11, 264, 3387, 307, 281, 915, 8294, 294, 264, 1412, 300, 5784, 281, 264, 1412, 1901, 376, 13, 50784], "temperature": 0.0, "avg_logprob": -0.10381749881211147, "compression_ratio": 1.989010989010989, "no_speech_prob": 0.0005354241002351046}, {"id": 206, "seek": 107100, "start": 1079.4, "end": 1085.84, "text": " Let's say we want to find patterns in a data space of shapes, then M is a manifold.", "tokens": [50784, 961, 311, 584, 321, 528, 281, 915, 8294, 294, 257, 1412, 1901, 295, 10854, 11, 550, 376, 307, 257, 47138, 13, 51106], "temperature": 0.0, "avg_logprob": -0.10381749881211147, "compression_ratio": 1.989010989010989, "no_speech_prob": 0.0005354241002351046}, {"id": 207, "seek": 107100, "start": 1085.84, "end": 1092.8, "text": " And so we need to generalize unsupervised deep learning to unsupervised learning to manifolds.", "tokens": [51106, 400, 370, 321, 643, 281, 2674, 1125, 2693, 12879, 24420, 2452, 2539, 281, 2693, 12879, 24420, 2539, 281, 8173, 31518, 13, 51454], "temperature": 0.0, "avg_logprob": -0.10381749881211147, "compression_ratio": 1.989010989010989, "no_speech_prob": 0.0005354241002351046}, {"id": 208, "seek": 107100, "start": 1092.8, "end": 1097.68, "text": " An example of unsupervised learning would be if we want to find clusters of shapes.", "tokens": [51454, 1107, 1365, 295, 2693, 12879, 24420, 2539, 576, 312, 498, 321, 528, 281, 915, 23313, 295, 10854, 13, 51698], "temperature": 0.0, "avg_logprob": -0.10381749881211147, "compression_ratio": 1.989010989010989, "no_speech_prob": 0.0005354241002351046}, {"id": 209, "seek": 109768, "start": 1097.68, "end": 1102.88, "text": " We need to find a method that can perform clustering of manifolds.", "tokens": [50364, 492, 643, 281, 915, 257, 3170, 300, 393, 2042, 596, 48673, 295, 8173, 31518, 13, 50624], "temperature": 0.0, "avg_logprob": -0.21535607222672348, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.0012770267203450203}, {"id": 210, "seek": 109768, "start": 1102.88, "end": 1105.4, "text": " In reinforcement learning, same story.", "tokens": [50624, 682, 29280, 2539, 11, 912, 1657, 13, 50750], "temperature": 0.0, "avg_logprob": -0.21535607222672348, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.0012770267203450203}, {"id": 211, "seek": 109768, "start": 1105.4, "end": 1113.0, "text": " Let's say we want to learn the policy by that gives the priority of applying an action on the state space.", "tokens": [50750, 961, 311, 584, 321, 528, 281, 1466, 264, 3897, 538, 300, 2709, 264, 9365, 295, 9275, 364, 3069, 322, 264, 1785, 1901, 13, 51130], "temperature": 0.0, "avg_logprob": -0.21535607222672348, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.0012770267203450203}, {"id": 212, "seek": 109768, "start": 1113.0, "end": 1118.92, "text": " Then each of these spaces can also be a manifold or both into a manifold.", "tokens": [51130, 1396, 1184, 295, 613, 7673, 393, 611, 312, 257, 47138, 420, 1293, 666, 257, 47138, 13, 51426], "temperature": 0.0, "avg_logprob": -0.21535607222672348, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.0012770267203450203}, {"id": 213, "seek": 109768, "start": 1118.92, "end": 1124.96, "text": " For example, we want to learn how a shape should move to optimize a certain feature.", "tokens": [51426, 1171, 1365, 11, 321, 528, 281, 1466, 577, 257, 3909, 820, 1286, 281, 19719, 257, 1629, 4111, 13, 51728], "temperature": 0.0, "avg_logprob": -0.21535607222672348, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.0012770267203450203}, {"id": 214, "seek": 112496, "start": 1124.96, "end": 1133.2, "text": " And lastly, what is underpinning a lot of development in deep learning is the broader field of optimization.", "tokens": [50364, 400, 16386, 11, 437, 307, 833, 17836, 773, 257, 688, 295, 3250, 294, 2452, 2539, 307, 264, 13227, 2519, 295, 19618, 13, 50776], "temperature": 0.0, "avg_logprob": -0.11460176140370995, "compression_ratio": 1.7541666666666667, "no_speech_prob": 0.000676131749060005}, {"id": 215, "seek": 112496, "start": 1133.2, "end": 1137.92, "text": " And same thing, we may wonder how this can generalize to manifolds.", "tokens": [50776, 400, 912, 551, 11, 321, 815, 2441, 577, 341, 393, 2674, 1125, 281, 8173, 31518, 13, 51012], "temperature": 0.0, "avg_logprob": -0.11460176140370995, "compression_ratio": 1.7541666666666667, "no_speech_prob": 0.000676131749060005}, {"id": 216, "seek": 112496, "start": 1137.92, "end": 1144.0, "text": " Let's say we want to find the optimal shape that verifies a certain feature.", "tokens": [51012, 961, 311, 584, 321, 528, 281, 915, 264, 16252, 3909, 300, 1306, 11221, 257, 1629, 4111, 13, 51316], "temperature": 0.0, "avg_logprob": -0.11460176140370995, "compression_ratio": 1.7541666666666667, "no_speech_prob": 0.000676131749060005}, {"id": 217, "seek": 112496, "start": 1144.0, "end": 1150.96, "text": " In that case, we want to perform an optimization where the parameter that is varying is actually varying on a manifold.", "tokens": [51316, 682, 300, 1389, 11, 321, 528, 281, 2042, 364, 19618, 689, 264, 13075, 300, 307, 22984, 307, 767, 22984, 322, 257, 47138, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11460176140370995, "compression_ratio": 1.7541666666666667, "no_speech_prob": 0.000676131749060005}, {"id": 218, "seek": 112496, "start": 1150.96, "end": 1154.28, "text": " So we want to perform optimization of manifold.", "tokens": [51664, 407, 321, 528, 281, 2042, 19618, 295, 47138, 13, 51830], "temperature": 0.0, "avg_logprob": -0.11460176140370995, "compression_ratio": 1.7541666666666667, "no_speech_prob": 0.000676131749060005}, {"id": 219, "seek": 115428, "start": 1154.28, "end": 1161.72, "text": " The example here, let's say we want to find the optimal deformation that can map one shape onto the other.", "tokens": [50364, 440, 1365, 510, 11, 718, 311, 584, 321, 528, 281, 915, 264, 16252, 34364, 300, 393, 4471, 472, 3909, 3911, 264, 661, 13, 50736], "temperature": 0.0, "avg_logprob": -0.17861669713800604, "compression_ratio": 1.6528497409326426, "no_speech_prob": 0.0003679650544654578}, {"id": 220, "seek": 115428, "start": 1161.72, "end": 1166.8799999999999, "text": " The deformation is an element of the manifold of the patients.", "tokens": [50736, 440, 34364, 307, 364, 4478, 295, 264, 47138, 295, 264, 4209, 13, 50994], "temperature": 0.0, "avg_logprob": -0.17861669713800604, "compression_ratio": 1.6528497409326426, "no_speech_prob": 0.0003679650544654578}, {"id": 221, "seek": 115428, "start": 1166.8799999999999, "end": 1172.44, "text": " And therefore, this will be an example of optimization on manifolds.", "tokens": [50994, 400, 4412, 11, 341, 486, 312, 364, 1365, 295, 19618, 322, 8173, 31518, 13, 51272], "temperature": 0.0, "avg_logprob": -0.17861669713800604, "compression_ratio": 1.6528497409326426, "no_speech_prob": 0.0003679650544654578}, {"id": 222, "seek": 115428, "start": 1172.44, "end": 1181.2, "text": " So how can we generalize all of these wide fields of deep learning to manifolds?", "tokens": [51272, 407, 577, 393, 321, 2674, 1125, 439, 295, 613, 4874, 7909, 295, 2452, 2539, 281, 8173, 31518, 30, 51710], "temperature": 0.0, "avg_logprob": -0.17861669713800604, "compression_ratio": 1.6528497409326426, "no_speech_prob": 0.0003679650544654578}, {"id": 223, "seek": 118120, "start": 1181.2, "end": 1187.16, "text": " And that's actually a trick that I call the vector space manifold conversion trick.", "tokens": [50364, 400, 300, 311, 767, 257, 4282, 300, 286, 818, 264, 8062, 1901, 47138, 14298, 4282, 13, 50662], "temperature": 0.0, "avg_logprob": -0.14394087669176933, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.0031201732344925404}, {"id": 224, "seek": 118120, "start": 1187.16, "end": 1189.44, "text": " And the trick is as follows.", "tokens": [50662, 400, 264, 4282, 307, 382, 10002, 13, 50776], "temperature": 0.0, "avg_logprob": -0.14394087669176933, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.0031201732344925404}, {"id": 225, "seek": 118120, "start": 1189.44, "end": 1195.28, "text": " You can realize that all of these machine learning, such as deep learning algorithms,", "tokens": [50776, 509, 393, 4325, 300, 439, 295, 613, 3479, 2539, 11, 1270, 382, 2452, 2539, 14642, 11, 51068], "temperature": 0.0, "avg_logprob": -0.14394087669176933, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.0031201732344925404}, {"id": 226, "seek": 118120, "start": 1195.28, "end": 1198.92, "text": " rely on the same basic building blocks.", "tokens": [51068, 10687, 322, 264, 912, 3875, 2390, 8474, 13, 51250], "temperature": 0.0, "avg_logprob": -0.14394087669176933, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.0031201732344925404}, {"id": 227, "seek": 118120, "start": 1198.92, "end": 1206.56, "text": " By basic building blocks, I mean some sets of abstract elements and some set of abstract operations.", "tokens": [51250, 3146, 3875, 2390, 8474, 11, 286, 914, 512, 6352, 295, 12649, 4959, 293, 512, 992, 295, 12649, 7705, 13, 51632], "temperature": 0.0, "avg_logprob": -0.14394087669176933, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.0031201732344925404}, {"id": 228, "seek": 120656, "start": 1206.56, "end": 1216.44, "text": " Now, if we can convert these building blocks from their definition on vector spaces to their definitions on manifold,", "tokens": [50364, 823, 11, 498, 321, 393, 7620, 613, 2390, 8474, 490, 641, 7123, 322, 8062, 7673, 281, 641, 21988, 322, 47138, 11, 50858], "temperature": 0.0, "avg_logprob": -0.16690007062025472, "compression_ratio": 1.6751269035532994, "no_speech_prob": 0.001303066615946591}, {"id": 229, "seek": 120656, "start": 1216.44, "end": 1224.6399999999999, "text": " then we have a translation in the sense of language translation that allow us to beautifully convert any type of statistical learning,", "tokens": [50858, 550, 321, 362, 257, 12853, 294, 264, 2020, 295, 2856, 12853, 300, 2089, 505, 281, 16525, 7620, 604, 2010, 295, 22820, 2539, 11, 51268], "temperature": 0.0, "avg_logprob": -0.16690007062025472, "compression_ratio": 1.6751269035532994, "no_speech_prob": 0.001303066615946591}, {"id": 230, "seek": 120656, "start": 1224.6399999999999, "end": 1228.8799999999999, "text": " machine learning, and deep learning algorithm to manifolds.", "tokens": [51268, 3479, 2539, 11, 293, 2452, 2539, 9284, 281, 8173, 31518, 13, 51480], "temperature": 0.0, "avg_logprob": -0.16690007062025472, "compression_ratio": 1.6751269035532994, "no_speech_prob": 0.001303066615946591}, {"id": 231, "seek": 120656, "start": 1228.8799999999999, "end": 1230.28, "text": " So let's do this.", "tokens": [51480, 407, 718, 311, 360, 341, 13, 51550], "temperature": 0.0, "avg_logprob": -0.16690007062025472, "compression_ratio": 1.6751269035532994, "no_speech_prob": 0.001303066615946591}, {"id": 232, "seek": 123028, "start": 1230.28, "end": 1239.48, "text": " What are the basic building blocks that are at the core of every statistical learning, machine learning, and deep learning algorithm?", "tokens": [50364, 708, 366, 264, 3875, 2390, 8474, 300, 366, 412, 264, 4965, 295, 633, 22820, 2539, 11, 3479, 2539, 11, 293, 2452, 2539, 9284, 30, 50824], "temperature": 0.0, "avg_logprob": -0.1252338323700294, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.0009244912653230131}, {"id": 233, "seek": 123028, "start": 1239.48, "end": 1247.8799999999999, "text": " Well, in terms of the elements, almost all of these algorithms use either points or vectors.", "tokens": [50824, 1042, 11, 294, 2115, 295, 264, 4959, 11, 1920, 439, 295, 613, 14642, 764, 2139, 2793, 420, 18875, 13, 51244], "temperature": 0.0, "avg_logprob": -0.1252338323700294, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.0009244912653230131}, {"id": 234, "seek": 123028, "start": 1247.8799999999999, "end": 1254.6399999999999, "text": " So point on the data space, in our case, one point in your shape, one point can be a deformation.", "tokens": [51244, 407, 935, 322, 264, 1412, 1901, 11, 294, 527, 1389, 11, 472, 935, 294, 428, 3909, 11, 472, 935, 393, 312, 257, 34364, 13, 51582], "temperature": 0.0, "avg_logprob": -0.1252338323700294, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.0009244912653230131}, {"id": 235, "seek": 123028, "start": 1254.6399999999999, "end": 1256.6399999999999, "text": " They also use vectors.", "tokens": [51582, 814, 611, 764, 18875, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1252338323700294, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.0009244912653230131}, {"id": 236, "seek": 123028, "start": 1256.6399999999999, "end": 1259.0, "text": " Think about gradient descent.", "tokens": [51682, 6557, 466, 16235, 23475, 13, 51800], "temperature": 0.0, "avg_logprob": -0.1252338323700294, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.0009244912653230131}, {"id": 237, "seek": 125900, "start": 1259.0, "end": 1264.36, "text": " The gradient is a vector anchored at a point on the manifold.", "tokens": [50364, 440, 16235, 307, 257, 8062, 12723, 2769, 412, 257, 935, 322, 264, 47138, 13, 50632], "temperature": 0.0, "avg_logprob": -0.15919405481089716, "compression_ratio": 1.8409090909090908, "no_speech_prob": 0.00021634940640069544}, {"id": 238, "seek": 125900, "start": 1264.36, "end": 1272.32, "text": " And then in terms of operations, there are three operations that come over and over again in these algorithms,", "tokens": [50632, 400, 550, 294, 2115, 295, 7705, 11, 456, 366, 1045, 7705, 300, 808, 670, 293, 670, 797, 294, 613, 14642, 11, 51030], "temperature": 0.0, "avg_logprob": -0.15919405481089716, "compression_ratio": 1.8409090909090908, "no_speech_prob": 0.00021634940640069544}, {"id": 239, "seek": 125900, "start": 1272.32, "end": 1278.48, "text": " which are computing a straight line, computing a distance, and performing a net issue.", "tokens": [51030, 597, 366, 15866, 257, 2997, 1622, 11, 15866, 257, 4560, 11, 293, 10205, 257, 2533, 2734, 13, 51338], "temperature": 0.0, "avg_logprob": -0.15919405481089716, "compression_ratio": 1.8409090909090908, "no_speech_prob": 0.00021634940640069544}, {"id": 240, "seek": 125900, "start": 1278.48, "end": 1284.4, "text": " So straight line, linear regression, our principal component analysis, we are using straight lines.", "tokens": [51338, 407, 2997, 1622, 11, 8213, 24590, 11, 527, 9716, 6542, 5215, 11, 321, 366, 1228, 2997, 3876, 13, 51634], "temperature": 0.0, "avg_logprob": -0.15919405481089716, "compression_ratio": 1.8409090909090908, "no_speech_prob": 0.00021634940640069544}, {"id": 241, "seek": 125900, "start": 1284.4, "end": 1286.96, "text": " So we need a way of computing straight lines.", "tokens": [51634, 407, 321, 643, 257, 636, 295, 15866, 2997, 3876, 13, 51762], "temperature": 0.0, "avg_logprob": -0.15919405481089716, "compression_ratio": 1.8409090909090908, "no_speech_prob": 0.00021634940640069544}, {"id": 242, "seek": 128696, "start": 1287.0, "end": 1296.6000000000001, "text": " The squared distance, in many loss functions, we use a notion of squared distance between the ground truth and our prediction.", "tokens": [50366, 440, 8889, 4560, 11, 294, 867, 4470, 6828, 11, 321, 764, 257, 10710, 295, 8889, 4560, 1296, 264, 2727, 3494, 293, 527, 17630, 13, 50846], "temperature": 0.0, "avg_logprob": -0.1728318032253994, "compression_ratio": 1.7902439024390244, "no_speech_prob": 0.0014763841172680259}, {"id": 243, "seek": 128696, "start": 1296.6000000000001, "end": 1299.16, "text": " Very often the L2 distance.", "tokens": [50846, 4372, 2049, 264, 441, 17, 4560, 13, 50974], "temperature": 0.0, "avg_logprob": -0.1728318032253994, "compression_ratio": 1.7902439024390244, "no_speech_prob": 0.0014763841172680259}, {"id": 244, "seek": 128696, "start": 1299.16, "end": 1301.28, "text": " And then the addition.", "tokens": [50974, 400, 550, 264, 4500, 13, 51080], "temperature": 0.0, "avg_logprob": -0.1728318032253994, "compression_ratio": 1.7902439024390244, "no_speech_prob": 0.0014763841172680259}, {"id": 245, "seek": 128696, "start": 1301.28, "end": 1309.28, "text": " For example, when we add a gradient to an estimate, we are adding the gradient vector to the estimate point.", "tokens": [51080, 1171, 1365, 11, 562, 321, 909, 257, 16235, 281, 364, 12539, 11, 321, 366, 5127, 264, 16235, 8062, 281, 264, 12539, 935, 13, 51480], "temperature": 0.0, "avg_logprob": -0.1728318032253994, "compression_ratio": 1.7902439024390244, "no_speech_prob": 0.0014763841172680259}, {"id": 246, "seek": 128696, "start": 1309.28, "end": 1315.16, "text": " So we are adding the black arrow to this blue point when we get an orange point.", "tokens": [51480, 407, 321, 366, 5127, 264, 2211, 11610, 281, 341, 3344, 935, 562, 321, 483, 364, 7671, 935, 13, 51774], "temperature": 0.0, "avg_logprob": -0.1728318032253994, "compression_ratio": 1.7902439024390244, "no_speech_prob": 0.0014763841172680259}, {"id": 247, "seek": 131516, "start": 1315.16, "end": 1321.6000000000001, "text": " Now, assuming that most of the learning algorithms uses these basic elements and operations,", "tokens": [50364, 823, 11, 11926, 300, 881, 295, 264, 2539, 14642, 4960, 613, 3875, 4959, 293, 7705, 11, 50686], "temperature": 0.0, "avg_logprob": -0.15569632886404014, "compression_ratio": 1.735, "no_speech_prob": 0.0003979497996624559}, {"id": 248, "seek": 131516, "start": 1321.6000000000001, "end": 1329.72, "text": " if we can generalize or convert these elements and operations to manifold, then we have our conversion checks.", "tokens": [50686, 498, 321, 393, 2674, 1125, 420, 7620, 613, 4959, 293, 7705, 281, 47138, 11, 550, 321, 362, 527, 14298, 13834, 13, 51092], "temperature": 0.0, "avg_logprob": -0.15569632886404014, "compression_ratio": 1.735, "no_speech_prob": 0.0003979497996624559}, {"id": 249, "seek": 131516, "start": 1329.72, "end": 1332.5600000000002, "text": " I'm going to introduce the conversion.", "tokens": [51092, 286, 478, 516, 281, 5366, 264, 14298, 13, 51234], "temperature": 0.0, "avg_logprob": -0.15569632886404014, "compression_ratio": 1.735, "no_speech_prob": 0.0003979497996624559}, {"id": 250, "seek": 131516, "start": 1332.5600000000002, "end": 1335.68, "text": " Yes, we want to convert to manifold.", "tokens": [51234, 1079, 11, 321, 528, 281, 7620, 281, 47138, 13, 51390], "temperature": 0.0, "avg_logprob": -0.15569632886404014, "compression_ratio": 1.735, "no_speech_prob": 0.0003979497996624559}, {"id": 251, "seek": 131516, "start": 1335.68, "end": 1338.0400000000002, "text": " The points are just points.", "tokens": [51390, 440, 2793, 366, 445, 2793, 13, 51508], "temperature": 0.0, "avg_logprob": -0.15569632886404014, "compression_ratio": 1.735, "no_speech_prob": 0.0003979497996624559}, {"id": 252, "seek": 131516, "start": 1338.0400000000002, "end": 1340.64, "text": " They are the elements of our manifolds.", "tokens": [51508, 814, 366, 264, 4959, 295, 527, 8173, 31518, 13, 51638], "temperature": 0.0, "avg_logprob": -0.15569632886404014, "compression_ratio": 1.735, "no_speech_prob": 0.0003979497996624559}, {"id": 253, "seek": 134064, "start": 1340.64, "end": 1346.4, "text": " What was a vector on the vector space becomes a tangent vector on the manifold.", "tokens": [50364, 708, 390, 257, 8062, 322, 264, 8062, 1901, 3643, 257, 27747, 8062, 322, 264, 47138, 13, 50652], "temperature": 0.0, "avg_logprob": -0.13875263929367065, "compression_ratio": 2.039408866995074, "no_speech_prob": 0.0005272128619253635}, {"id": 254, "seek": 134064, "start": 1346.4, "end": 1351.0, "text": " So on the vector space, point and vectors are approximately the same.", "tokens": [50652, 407, 322, 264, 8062, 1901, 11, 935, 293, 18875, 366, 10447, 264, 912, 13, 50882], "temperature": 0.0, "avg_logprob": -0.13875263929367065, "compression_ratio": 2.039408866995074, "no_speech_prob": 0.0005272128619253635}, {"id": 255, "seek": 134064, "start": 1351.0, "end": 1356.72, "text": " On the manifold, points and tangent vectors are two different, very different elements.", "tokens": [50882, 1282, 264, 47138, 11, 2793, 293, 27747, 18875, 366, 732, 819, 11, 588, 819, 4959, 13, 51168], "temperature": 0.0, "avg_logprob": -0.13875263929367065, "compression_ratio": 2.039408866995074, "no_speech_prob": 0.0005272128619253635}, {"id": 256, "seek": 134064, "start": 1356.72, "end": 1365.64, "text": " On the left, the registration on the left, you can see the tangent vector in black that is anchored at the point in blue on the manifold.", "tokens": [51168, 1282, 264, 1411, 11, 264, 16847, 322, 264, 1411, 11, 291, 393, 536, 264, 27747, 8062, 294, 2211, 300, 307, 12723, 2769, 412, 264, 935, 294, 3344, 322, 264, 47138, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13875263929367065, "compression_ratio": 2.039408866995074, "no_speech_prob": 0.0005272128619253635}, {"id": 257, "seek": 134064, "start": 1365.64, "end": 1368.92, "text": " So we have generalized basic elements.", "tokens": [51614, 407, 321, 362, 44498, 3875, 4959, 13, 51778], "temperature": 0.0, "avg_logprob": -0.13875263929367065, "compression_ratio": 2.039408866995074, "no_speech_prob": 0.0005272128619253635}, {"id": 258, "seek": 136892, "start": 1368.92, "end": 1371.96, "text": " Now let's generalize the operations.", "tokens": [50364, 823, 718, 311, 2674, 1125, 264, 7705, 13, 50516], "temperature": 0.0, "avg_logprob": -0.12326694937313304, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.0005188417853787541}, {"id": 259, "seek": 136892, "start": 1371.96, "end": 1376.44, "text": " The straight line becomes a geodesic on M.", "tokens": [50516, 440, 2997, 1622, 3643, 257, 1519, 4789, 299, 322, 376, 13, 50740], "temperature": 0.0, "avg_logprob": -0.12326694937313304, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.0005188417853787541}, {"id": 260, "seek": 136892, "start": 1376.44, "end": 1383.0800000000002, "text": " I'm not telling you how we compute the geodesic, I'm telling you the translation or conversion of the operation.", "tokens": [50740, 286, 478, 406, 3585, 291, 577, 321, 14722, 264, 1519, 4789, 299, 11, 286, 478, 3585, 291, 264, 12853, 420, 14298, 295, 264, 6916, 13, 51072], "temperature": 0.0, "avg_logprob": -0.12326694937313304, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.0005188417853787541}, {"id": 261, "seek": 136892, "start": 1383.0800000000002, "end": 1394.52, "text": " For example, on the registration on the left, you can see the dotted black line is the geodesic between the blue point and the orange point.", "tokens": [51072, 1171, 1365, 11, 322, 264, 16847, 322, 264, 1411, 11, 291, 393, 536, 264, 37459, 2211, 1622, 307, 264, 1519, 4789, 299, 1296, 264, 3344, 935, 293, 264, 7671, 935, 13, 51644], "temperature": 0.0, "avg_logprob": -0.12326694937313304, "compression_ratio": 1.6989795918367347, "no_speech_prob": 0.0005188417853787541}, {"id": 262, "seek": 139452, "start": 1394.52, "end": 1402.24, "text": " The square distance between two points on the manifold becomes the square geodesic distance between the same two points.", "tokens": [50364, 440, 3732, 4560, 1296, 732, 2793, 322, 264, 47138, 3643, 264, 3732, 1519, 4789, 299, 4560, 1296, 264, 912, 732, 2793, 13, 50750], "temperature": 0.0, "avg_logprob": -0.1779047095257303, "compression_ratio": 1.8238095238095238, "no_speech_prob": 0.0010154068004339933}, {"id": 263, "seek": 139452, "start": 1402.24, "end": 1411.32, "text": " We're basically the length of the square length of the geodesic that is connecting these two points.", "tokens": [50750, 492, 434, 1936, 264, 4641, 295, 264, 3732, 4641, 295, 264, 1519, 4789, 299, 300, 307, 11015, 613, 732, 2793, 13, 51204], "temperature": 0.0, "avg_logprob": -0.1779047095257303, "compression_ratio": 1.8238095238095238, "no_speech_prob": 0.0010154068004339933}, {"id": 264, "seek": 139452, "start": 1411.32, "end": 1415.2, "text": " And lastly, we need a generalization of the notion of addition.", "tokens": [51204, 400, 16386, 11, 321, 643, 257, 2674, 2144, 295, 264, 10710, 295, 4500, 13, 51398], "temperature": 0.0, "avg_logprob": -0.1779047095257303, "compression_ratio": 1.8238095238095238, "no_speech_prob": 0.0010154068004339933}, {"id": 265, "seek": 139452, "start": 1415.2, "end": 1422.92, "text": " On the vector space, we can add a vector, for example, a vector in black to a point here in blue.", "tokens": [51398, 1282, 264, 8062, 1901, 11, 321, 393, 909, 257, 8062, 11, 337, 1365, 11, 257, 8062, 294, 2211, 281, 257, 935, 510, 294, 3344, 13, 51784], "temperature": 0.0, "avg_logprob": -0.1779047095257303, "compression_ratio": 1.8238095238095238, "no_speech_prob": 0.0010154068004339933}, {"id": 266, "seek": 142292, "start": 1422.92, "end": 1426.92, "text": " On the manifold, this operation is now called the exponential map.", "tokens": [50364, 1282, 264, 47138, 11, 341, 6916, 307, 586, 1219, 264, 21510, 4471, 13, 50564], "temperature": 0.0, "avg_logprob": -0.19072800539852527, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0012047552736476064}, {"id": 267, "seek": 142292, "start": 1426.92, "end": 1436.3200000000002, "text": " And it is, again, just rated on the left, while we add not a vector, but tangent vector, so the tangent vector in black to the point in blue.", "tokens": [50564, 400, 309, 307, 11, 797, 11, 445, 22103, 322, 264, 1411, 11, 1339, 321, 909, 406, 257, 8062, 11, 457, 27747, 8062, 11, 370, 264, 27747, 8062, 294, 2211, 281, 264, 935, 294, 3344, 13, 51034], "temperature": 0.0, "avg_logprob": -0.19072800539852527, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0012047552736476064}, {"id": 268, "seek": 142292, "start": 1436.3200000000002, "end": 1445.16, "text": " And performing this addition operation allows us to reach another point on the manifold, which is the point in orange.", "tokens": [51034, 400, 10205, 341, 4500, 6916, 4045, 505, 281, 2524, 1071, 935, 322, 264, 47138, 11, 597, 307, 264, 935, 294, 7671, 13, 51476], "temperature": 0.0, "avg_logprob": -0.19072800539852527, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0012047552736476064}, {"id": 269, "seek": 142292, "start": 1445.16, "end": 1451.3600000000001, "text": " So that is the vector space manifold conversion.", "tokens": [51476, 407, 300, 307, 264, 8062, 1901, 47138, 14298, 13, 51786], "temperature": 0.0, "avg_logprob": -0.19072800539852527, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0012047552736476064}, {"id": 270, "seek": 145136, "start": 1451.36, "end": 1465.12, "text": " And this trick, we implemented it in this open source package called GM Stats, which generalizes all of these operations that we know very well on vector spaces to manifolds.", "tokens": [50364, 400, 341, 4282, 11, 321, 12270, 309, 294, 341, 1269, 4009, 7372, 1219, 16609, 745, 1720, 11, 597, 2674, 5660, 439, 295, 613, 7705, 300, 321, 458, 588, 731, 322, 8062, 7673, 281, 8173, 31518, 13, 51052], "temperature": 0.0, "avg_logprob": -0.12696337018694195, "compression_ratio": 1.6116504854368932, "no_speech_prob": 0.003876867238432169}, {"id": 271, "seek": 145136, "start": 1465.12, "end": 1475.52, "text": " And for different types of manifolds, specifically the different types of manifold that I showed you in the context of shape representation and shape models.", "tokens": [51052, 400, 337, 819, 3467, 295, 8173, 31518, 11, 4682, 264, 819, 3467, 295, 47138, 300, 286, 4712, 291, 294, 264, 4319, 295, 3909, 10290, 293, 3909, 5245, 13, 51572], "temperature": 0.0, "avg_logprob": -0.12696337018694195, "compression_ratio": 1.6116504854368932, "no_speech_prob": 0.003876867238432169}, {"id": 272, "seek": 147552, "start": 1475.52, "end": 1483.32, "text": " It's a Python package that is available online at these links, and we created it with three objectives.", "tokens": [50364, 467, 311, 257, 15329, 7372, 300, 307, 2435, 2950, 412, 613, 6123, 11, 293, 321, 2942, 309, 365, 1045, 15961, 13, 50754], "temperature": 0.0, "avg_logprob": -0.1349736319647895, "compression_ratio": 1.59375, "no_speech_prob": 0.036063484847545624}, {"id": 273, "seek": 147552, "start": 1483.32, "end": 1486.2, "text": " First, to teach hands-on geometric learning.", "tokens": [50754, 2386, 11, 281, 2924, 2377, 12, 266, 33246, 2539, 13, 50898], "temperature": 0.0, "avg_logprob": -0.1349736319647895, "compression_ratio": 1.59375, "no_speech_prob": 0.036063484847545624}, {"id": 274, "seek": 147552, "start": 1486.2, "end": 1495.12, "text": " So computing on manifolds can be hard in practice, even though the word manifold comes over and over again in manifold learning, for example.", "tokens": [50898, 407, 15866, 322, 8173, 31518, 393, 312, 1152, 294, 3124, 11, 754, 1673, 264, 1349, 47138, 1487, 670, 293, 670, 797, 294, 47138, 2539, 11, 337, 1365, 13, 51344], "temperature": 0.0, "avg_logprob": -0.1349736319647895, "compression_ratio": 1.59375, "no_speech_prob": 0.036063484847545624}, {"id": 275, "seek": 147552, "start": 1495.12, "end": 1499.84, "text": " The basic operations on manifolds are sometimes hard to implement.", "tokens": [51344, 440, 3875, 7705, 322, 8173, 31518, 366, 2171, 1152, 281, 4445, 13, 51580], "temperature": 0.0, "avg_logprob": -0.1349736319647895, "compression_ratio": 1.59375, "no_speech_prob": 0.036063484847545624}, {"id": 276, "seek": 149984, "start": 1499.84, "end": 1505.8, "text": " And one of the reasons is that they're not necessarily taught in class besides textbooks.", "tokens": [50364, 400, 472, 295, 264, 4112, 307, 300, 436, 434, 406, 4725, 5928, 294, 1508, 11868, 33587, 13, 50662], "temperature": 0.0, "avg_logprob": -0.15563953754513762, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.001594626926817}, {"id": 277, "seek": 149984, "start": 1505.8, "end": 1511.72, "text": " So with this software, you can teach hands-on manifolds and geometric learning.", "tokens": [50662, 407, 365, 341, 4722, 11, 291, 393, 2924, 2377, 12, 266, 8173, 31518, 293, 33246, 2539, 13, 50958], "temperature": 0.0, "avg_logprob": -0.15563953754513762, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.001594626926817}, {"id": 278, "seek": 149984, "start": 1511.72, "end": 1517.32, "text": " The second objective is to support research in geometric learning or learning on manifolds.", "tokens": [50958, 440, 1150, 10024, 307, 281, 1406, 2132, 294, 33246, 2539, 420, 2539, 322, 8173, 31518, 13, 51238], "temperature": 0.0, "avg_logprob": -0.15563953754513762, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.001594626926817}, {"id": 279, "seek": 149984, "start": 1517.32, "end": 1525.6399999999999, "text": " So different researchers reach out to us who publish, they have published papers and they want to implement them methods in GM Stats.", "tokens": [51238, 407, 819, 10309, 2524, 484, 281, 505, 567, 11374, 11, 436, 362, 6572, 10577, 293, 436, 528, 281, 4445, 552, 7150, 294, 16609, 745, 1720, 13, 51654], "temperature": 0.0, "avg_logprob": -0.15563953754513762, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.001594626926817}, {"id": 280, "seek": 152564, "start": 1525.64, "end": 1530.48, "text": " So as to make them methods better, more available to the general public.", "tokens": [50364, 407, 382, 281, 652, 552, 7150, 1101, 11, 544, 2435, 281, 264, 2674, 1908, 13, 50606], "temperature": 0.0, "avg_logprob": -0.1414678224953272, "compression_ratio": 1.5984555984555984, "no_speech_prob": 0.0006161771016195416}, {"id": 281, "seek": 152564, "start": 1530.48, "end": 1535.16, "text": " So that's on the contributor side supporting the research.", "tokens": [50606, 407, 300, 311, 322, 264, 42859, 1252, 7231, 264, 2132, 13, 50840], "temperature": 0.0, "avg_logprob": -0.1414678224953272, "compression_ratio": 1.5984555984555984, "no_speech_prob": 0.0006161771016195416}, {"id": 282, "seek": 152564, "start": 1535.16, "end": 1542.44, "text": " And the last objective is to democratize the use of geometric learning, in other words, learning on manifolds.", "tokens": [50840, 400, 264, 1036, 10024, 307, 281, 37221, 1125, 264, 764, 295, 33246, 2539, 11, 294, 661, 2283, 11, 2539, 322, 8173, 31518, 13, 51204], "temperature": 0.0, "avg_logprob": -0.1414678224953272, "compression_ratio": 1.5984555984555984, "no_speech_prob": 0.0006161771016195416}, {"id": 283, "seek": 152564, "start": 1542.44, "end": 1553.5200000000002, "text": " Because once these methods are incorporated into GM Stats, from a user's perspective, you only need to know the conversion that I just presented you on the previous slide,", "tokens": [51204, 1436, 1564, 613, 7150, 366, 21654, 666, 16609, 745, 1720, 11, 490, 257, 4195, 311, 4585, 11, 291, 787, 643, 281, 458, 264, 14298, 300, 286, 445, 8212, 291, 322, 264, 3894, 4137, 11, 51758], "temperature": 0.0, "avg_logprob": -0.1414678224953272, "compression_ratio": 1.5984555984555984, "no_speech_prob": 0.0006161771016195416}, {"id": 284, "seek": 155352, "start": 1553.52, "end": 1556.0, "text": " and you can use all of these algorithms.", "tokens": [50364, 293, 291, 393, 764, 439, 295, 613, 14642, 13, 50488], "temperature": 0.0, "avg_logprob": -0.12268839177397109, "compression_ratio": 1.8028169014084507, "no_speech_prob": 0.0015717345522716641}, {"id": 285, "seek": 155352, "start": 1556.0, "end": 1559.96, "text": " So you do not need to know how a geodesic is implemented.", "tokens": [50488, 407, 291, 360, 406, 643, 281, 458, 577, 257, 1519, 4789, 299, 307, 12270, 13, 50686], "temperature": 0.0, "avg_logprob": -0.12268839177397109, "compression_ratio": 1.8028169014084507, "no_speech_prob": 0.0015717345522716641}, {"id": 286, "seek": 155352, "start": 1559.96, "end": 1564.72, "text": " You just need to know that the geodesic is a generalization of a straight line.", "tokens": [50686, 509, 445, 643, 281, 458, 300, 264, 1519, 4789, 299, 307, 257, 2674, 2144, 295, 257, 2997, 1622, 13, 50924], "temperature": 0.0, "avg_logprob": -0.12268839177397109, "compression_ratio": 1.8028169014084507, "no_speech_prob": 0.0015717345522716641}, {"id": 287, "seek": 155352, "start": 1564.72, "end": 1570.48, "text": " So it allows to democratize the use of these methods.", "tokens": [50924, 407, 309, 4045, 281, 37221, 1125, 264, 764, 295, 613, 7150, 13, 51212], "temperature": 0.0, "avg_logprob": -0.12268839177397109, "compression_ratio": 1.8028169014084507, "no_speech_prob": 0.0015717345522716641}, {"id": 288, "seek": 155352, "start": 1570.48, "end": 1581.28, "text": " Now other libraries that implement computations on manifolds, learning on manifolds and optimization on manifolds, you can see them here on the screen.", "tokens": [51212, 823, 661, 15148, 300, 4445, 2807, 763, 322, 8173, 31518, 11, 2539, 322, 8173, 31518, 293, 19618, 322, 8173, 31518, 11, 291, 393, 536, 552, 510, 322, 264, 2568, 13, 51752], "temperature": 0.0, "avg_logprob": -0.12268839177397109, "compression_ratio": 1.8028169014084507, "no_speech_prob": 0.0015717345522716641}, {"id": 289, "seek": 158128, "start": 1581.32, "end": 1589.68, "text": " The first three, the one that have opt in it and MacDodge, they are focused on optimization on manifolds.", "tokens": [50366, 440, 700, 1045, 11, 264, 472, 300, 362, 2427, 294, 309, 293, 5707, 35, 19315, 11, 436, 366, 5178, 322, 19618, 322, 8173, 31518, 13, 50784], "temperature": 0.0, "avg_logprob": -0.21134597499196123, "compression_ratio": 1.6869158878504673, "no_speech_prob": 0.008171635679900646}, {"id": 290, "seek": 158128, "start": 1589.68, "end": 1598.28, "text": " For example, to minimize a criterion and the parameter minimizing this criterion is an element of the manifold.", "tokens": [50784, 1171, 1365, 11, 281, 17522, 257, 46691, 293, 264, 13075, 46608, 341, 46691, 307, 364, 4478, 295, 264, 47138, 13, 51214], "temperature": 0.0, "avg_logprob": -0.21134597499196123, "compression_ratio": 1.6869158878504673, "no_speech_prob": 0.008171635679900646}, {"id": 291, "seek": 158128, "start": 1598.28, "end": 1608.84, "text": " And then all the others are Python packages that perform computations and learning on manifolds, but they focus on a special type of manifolds.", "tokens": [51214, 400, 550, 439, 264, 2357, 366, 15329, 17401, 300, 2042, 2807, 763, 293, 2539, 322, 8173, 31518, 11, 457, 436, 1879, 322, 257, 2121, 2010, 295, 8173, 31518, 13, 51742], "temperature": 0.0, "avg_logprob": -0.21134597499196123, "compression_ratio": 1.6869158878504673, "no_speech_prob": 0.008171635679900646}, {"id": 292, "seek": 160884, "start": 1608.84, "end": 1613.72, "text": " For example, the manifold of SPD mattresses, tree rotations, disruptions.", "tokens": [50364, 1171, 1365, 11, 264, 47138, 295, 19572, 20625, 279, 11, 4230, 44796, 11, 14124, 626, 13, 50608], "temperature": 0.0, "avg_logprob": -0.2192939789064469, "compression_ratio": 1.4678362573099415, "no_speech_prob": 0.0014306638622656465}, {"id": 293, "seek": 160884, "start": 1613.72, "end": 1629.4399999999998, "text": " By contrast, we do not do fancy optimizations in GM Stats, but we try to implement a very wide range of manifolds, including the manifolds that represent shapes and shapespaces.", "tokens": [50608, 3146, 8712, 11, 321, 360, 406, 360, 10247, 5028, 14455, 294, 16609, 745, 1720, 11, 457, 321, 853, 281, 4445, 257, 588, 4874, 3613, 295, 8173, 31518, 11, 3009, 264, 8173, 31518, 300, 2906, 10854, 293, 10854, 79, 2116, 13, 51394], "temperature": 0.0, "avg_logprob": -0.2192939789064469, "compression_ratio": 1.4678362573099415, "no_speech_prob": 0.0014306638622656465}, {"id": 294, "seek": 162944, "start": 1629.44, "end": 1639.72, "text": " So let me give you an example of how you can use this software to compute with shape representations and let's say shape motions.", "tokens": [50364, 407, 718, 385, 976, 291, 364, 1365, 295, 577, 291, 393, 764, 341, 4722, 281, 14722, 365, 3909, 33358, 293, 718, 311, 584, 3909, 27500, 13, 50878], "temperature": 0.0, "avg_logprob": -0.2094717025756836, "compression_ratio": 1.5548780487804879, "no_speech_prob": 0.034487079828977585}, {"id": 295, "seek": 162944, "start": 1639.72, "end": 1651.48, "text": " So let's say you're interested in knowing how a shape evolved from being in an orientation R1 and translation or position T1.", "tokens": [50878, 407, 718, 311, 584, 291, 434, 3102, 294, 5276, 577, 257, 3909, 14178, 490, 885, 294, 364, 14764, 497, 16, 293, 12853, 420, 2535, 314, 16, 13, 51466], "temperature": 0.0, "avg_logprob": -0.2094717025756836, "compression_ratio": 1.5548780487804879, "no_speech_prob": 0.034487079828977585}, {"id": 296, "seek": 165148, "start": 1651.48, "end": 1665.64, "text": " And how it evolves from this original pose to an end pose, which we could call R1 for rotation R2, for rotation two and T2 for translation two.", "tokens": [50364, 400, 577, 309, 43737, 490, 341, 3380, 10774, 281, 364, 917, 10774, 11, 597, 321, 727, 818, 497, 16, 337, 12447, 497, 17, 11, 337, 12447, 732, 293, 314, 17, 337, 12853, 732, 13, 51072], "temperature": 0.0, "avg_logprob": -0.28140376990949606, "compression_ratio": 1.6826347305389222, "no_speech_prob": 0.0021467607002705336}, {"id": 297, "seek": 165148, "start": 1665.64, "end": 1675.1200000000001, "text": " So when we compute with rotation and translations, as we do with motions and by the way, it should be 3D translation, not 2D translation.", "tokens": [51072, 407, 562, 321, 14722, 365, 12447, 293, 37578, 11, 382, 321, 360, 365, 27500, 293, 538, 264, 636, 11, 309, 820, 312, 805, 35, 12853, 11, 406, 568, 35, 12853, 13, 51546], "temperature": 0.0, "avg_logprob": -0.28140376990949606, "compression_ratio": 1.6826347305389222, "no_speech_prob": 0.0021467607002705336}, {"id": 298, "seek": 167512, "start": 1675.12, "end": 1687.1599999999999, "text": " We are computing with elements that belong to the manifold and that gave the manifold is M equal SE3 and that stands for special Euclidean group in three dimension.", "tokens": [50364, 492, 366, 15866, 365, 4959, 300, 5784, 281, 264, 47138, 293, 300, 2729, 264, 47138, 307, 376, 2681, 10269, 18, 293, 300, 7382, 337, 2121, 462, 1311, 31264, 282, 1594, 294, 1045, 10139, 13, 50966], "temperature": 0.0, "avg_logprob": -0.18514526974071155, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.004320564214140177}, {"id": 299, "seek": 167512, "start": 1687.1599999999999, "end": 1692.1599999999999, "text": " In other words, the group of all 3D translations and 3D rotations.", "tokens": [50966, 682, 661, 2283, 11, 264, 1594, 295, 439, 805, 35, 37578, 293, 805, 35, 44796, 13, 51216], "temperature": 0.0, "avg_logprob": -0.18514526974071155, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.004320564214140177}, {"id": 300, "seek": 167512, "start": 1692.1599999999999, "end": 1695.6399999999999, "text": " This is a good snippet using GM Stats.", "tokens": [51216, 639, 307, 257, 665, 35623, 302, 1228, 16609, 745, 1720, 13, 51390], "temperature": 0.0, "avg_logprob": -0.18514526974071155, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.004320564214140177}, {"id": 301, "seek": 167512, "start": 1695.6399999999999, "end": 1701.9199999999998, "text": " What you really have to do is instantiate the manifold that you are interested in.", "tokens": [51390, 708, 291, 534, 362, 281, 360, 307, 9836, 13024, 264, 47138, 300, 291, 366, 3102, 294, 13, 51704], "temperature": 0.0, "avg_logprob": -0.18514526974071155, "compression_ratio": 1.6118721461187215, "no_speech_prob": 0.004320564214140177}, {"id": 302, "seek": 170192, "start": 1701.92, "end": 1712.76, "text": " Here we want to work with SE3, so we instantiate SE3 as an object of the class special Euclidean in dimension three.", "tokens": [50364, 1692, 321, 528, 281, 589, 365, 10269, 18, 11, 370, 321, 9836, 13024, 10269, 18, 382, 364, 2657, 295, 264, 1508, 2121, 462, 1311, 31264, 282, 294, 10139, 1045, 13, 50906], "temperature": 0.0, "avg_logprob": -0.14383187210350706, "compression_ratio": 1.6694214876033058, "no_speech_prob": 0.006182802841067314}, {"id": 303, "seek": 170192, "start": 1712.76, "end": 1714.88, "text": " We extract what's called a metric.", "tokens": [50906, 492, 8947, 437, 311, 1219, 257, 20678, 13, 51012], "temperature": 0.0, "avg_logprob": -0.14383187210350706, "compression_ratio": 1.6694214876033058, "no_speech_prob": 0.006182802841067314}, {"id": 304, "seek": 170192, "start": 1714.88, "end": 1718.8400000000001, "text": " It's a Riemannian metric that allows us to perform the computations.", "tokens": [51012, 467, 311, 257, 497, 4907, 969, 952, 20678, 300, 4045, 505, 281, 2042, 264, 2807, 763, 13, 51210], "temperature": 0.0, "avg_logprob": -0.14383187210350706, "compression_ratio": 1.6694214876033058, "no_speech_prob": 0.006182802841067314}, {"id": 305, "seek": 170192, "start": 1718.8400000000001, "end": 1722.5600000000002, "text": " And then we call metric dot geodesic.", "tokens": [51210, 400, 550, 321, 818, 20678, 5893, 1519, 4789, 299, 13, 51396], "temperature": 0.0, "avg_logprob": -0.14383187210350706, "compression_ratio": 1.6694214876033058, "no_speech_prob": 0.006182802841067314}, {"id": 306, "seek": 170192, "start": 1722.5600000000002, "end": 1725.88, "text": " Again, we do not need to know how the geodesic is implemented.", "tokens": [51396, 3764, 11, 321, 360, 406, 643, 281, 458, 577, 264, 1519, 4789, 299, 307, 12270, 13, 51562], "temperature": 0.0, "avg_logprob": -0.14383187210350706, "compression_ratio": 1.6694214876033058, "no_speech_prob": 0.006182802841067314}, {"id": 307, "seek": 170192, "start": 1725.88, "end": 1730.64, "text": " We just need to know that the geodesic is the generalization of the straight line.", "tokens": [51562, 492, 445, 643, 281, 458, 300, 264, 1519, 4789, 299, 307, 264, 2674, 2144, 295, 264, 2997, 1622, 13, 51800], "temperature": 0.0, "avg_logprob": -0.14383187210350706, "compression_ratio": 1.6694214876033058, "no_speech_prob": 0.006182802841067314}, {"id": 308, "seek": 173064, "start": 1730.68, "end": 1739.76, "text": " And therefore, we can compute the geodesic that starts with an initial point, rotation one, translation one, and has an initial tangent vector.", "tokens": [50366, 400, 4412, 11, 321, 393, 14722, 264, 1519, 4789, 299, 300, 3719, 365, 364, 5883, 935, 11, 12447, 472, 11, 12853, 472, 11, 293, 575, 364, 5883, 27747, 8062, 13, 50820], "temperature": 0.0, "avg_logprob": -0.19869723464503433, "compression_ratio": 1.7743362831858407, "no_speech_prob": 0.002885974943637848}, {"id": 309, "seek": 173064, "start": 1739.76, "end": 1744.0, "text": " And on the right, you have an illustration of the geodesic.", "tokens": [50820, 400, 322, 264, 558, 11, 291, 362, 364, 22645, 295, 264, 1519, 4789, 299, 13, 51032], "temperature": 0.0, "avg_logprob": -0.19869723464503433, "compression_ratio": 1.7743362831858407, "no_speech_prob": 0.002885974943637848}, {"id": 310, "seek": 173064, "start": 1744.0, "end": 1749.44, "text": " Pose one corresponds to R1T1, rotation one, translation one.", "tokens": [51032, 40174, 472, 23249, 281, 497, 16, 51, 16, 11, 12447, 472, 11, 12853, 472, 13, 51304], "temperature": 0.0, "avg_logprob": -0.19869723464503433, "compression_ratio": 1.7743362831858407, "no_speech_prob": 0.002885974943637848}, {"id": 311, "seek": 173064, "start": 1749.44, "end": 1760.6000000000001, "text": " It's represented by one very small frame with three axes because we can use the translation, translation one, to place this frame in 3D.", "tokens": [51304, 467, 311, 10379, 538, 472, 588, 1359, 3920, 365, 1045, 35387, 570, 321, 393, 764, 264, 12853, 11, 12853, 472, 11, 281, 1081, 341, 3920, 294, 805, 35, 13, 51862], "temperature": 0.0, "avg_logprob": -0.19869723464503433, "compression_ratio": 1.7743362831858407, "no_speech_prob": 0.002885974943637848}, {"id": 312, "seek": 176060, "start": 1760.84, "end": 1765.9199999999998, "text": " And the rotation, rotation one to orient the frame in 3D.", "tokens": [50376, 400, 264, 12447, 11, 12447, 472, 281, 8579, 264, 3920, 294, 805, 35, 13, 50630], "temperature": 0.0, "avg_logprob": -0.18136890350826204, "compression_ratio": 1.5443037974683544, "no_speech_prob": 0.0005610374500975013}, {"id": 313, "seek": 176060, "start": 1765.9199999999998, "end": 1771.7199999999998, "text": " But therefore, one little frame corresponds to one point in SE3.", "tokens": [50630, 583, 4412, 11, 472, 707, 3920, 23249, 281, 472, 935, 294, 10269, 18, 13, 50920], "temperature": 0.0, "avg_logprob": -0.18136890350826204, "compression_ratio": 1.5443037974683544, "no_speech_prob": 0.0005610374500975013}, {"id": 314, "seek": 176060, "start": 1771.7199999999998, "end": 1783.52, "text": " And you see here a trajectory of frames that correspond to the geodesic on the manifold SE3 linking pose one to pose two.", "tokens": [50920, 400, 291, 536, 510, 257, 21512, 295, 12083, 300, 6805, 281, 264, 1519, 4789, 299, 322, 264, 47138, 10269, 18, 25775, 10774, 472, 281, 10774, 732, 13, 51510], "temperature": 0.0, "avg_logprob": -0.18136890350826204, "compression_ratio": 1.5443037974683544, "no_speech_prob": 0.0005610374500975013}, {"id": 315, "seek": 178352, "start": 1783.52, "end": 1790.48, "text": " So I told you we implemented a lot of different manifolds in GM stats.", "tokens": [50364, 407, 286, 1907, 291, 321, 12270, 257, 688, 295, 819, 8173, 31518, 294, 16609, 18152, 13, 50712], "temperature": 0.0, "avg_logprob": -0.14141003838900862, "compression_ratio": 1.665158371040724, "no_speech_prob": 0.0022113157901912928}, {"id": 316, "seek": 178352, "start": 1790.48, "end": 1795.56, "text": " And what we end up with is actually a numerical taxonomy of manifolds.", "tokens": [50712, 400, 437, 321, 917, 493, 365, 307, 767, 257, 29054, 3366, 23423, 295, 8173, 31518, 13, 50966], "temperature": 0.0, "avg_logprob": -0.14141003838900862, "compression_ratio": 1.665158371040724, "no_speech_prob": 0.0022113157901912928}, {"id": 317, "seek": 178352, "start": 1795.56, "end": 1806.04, "text": " So we use object-oriented programming to create this hierarchy of all the possible of many manifolds that you could be interested in working with.", "tokens": [50966, 407, 321, 764, 2657, 12, 27414, 9410, 281, 1884, 341, 22333, 295, 439, 264, 1944, 295, 867, 8173, 31518, 300, 291, 727, 312, 3102, 294, 1364, 365, 13, 51490], "temperature": 0.0, "avg_logprob": -0.14141003838900862, "compression_ratio": 1.665158371040724, "no_speech_prob": 0.0022113157901912928}, {"id": 318, "seek": 178352, "start": 1806.04, "end": 1812.12, "text": " So this hierarchy is built as follows on the root of the hierarchy of the tree.", "tokens": [51490, 407, 341, 22333, 307, 3094, 382, 10002, 322, 264, 5593, 295, 264, 22333, 295, 264, 4230, 13, 51794], "temperature": 0.0, "avg_logprob": -0.14141003838900862, "compression_ratio": 1.665158371040724, "no_speech_prob": 0.0022113157901912928}, {"id": 319, "seek": 181212, "start": 1812.12, "end": 1817.32, "text": " You have the most abstract concept of manifold that is just a manifold.", "tokens": [50364, 509, 362, 264, 881, 12649, 3410, 295, 47138, 300, 307, 445, 257, 47138, 13, 50624], "temperature": 0.0, "avg_logprob": -0.20147507007305437, "compression_ratio": 1.6682926829268292, "no_speech_prob": 0.0009534381679259241}, {"id": 320, "seek": 181212, "start": 1817.32, "end": 1825.08, "text": " And we list all the different attributes or methods that a manifold item object should have.", "tokens": [50624, 400, 321, 1329, 439, 264, 819, 17212, 420, 7150, 300, 257, 47138, 3174, 2657, 820, 362, 13, 51012], "temperature": 0.0, "avg_logprob": -0.20147507007305437, "compression_ratio": 1.6682926829268292, "no_speech_prob": 0.0009534381679259241}, {"id": 321, "seek": 181212, "start": 1825.08, "end": 1832.6799999999998, "text": " And as you go down this hierarchy, you find more and more specialized or more and more concrete manifolds.", "tokens": [51012, 400, 382, 291, 352, 760, 341, 22333, 11, 291, 915, 544, 293, 544, 19813, 420, 544, 293, 544, 9859, 8173, 31518, 13, 51392], "temperature": 0.0, "avg_logprob": -0.20147507007305437, "compression_ratio": 1.6682926829268292, "no_speech_prob": 0.0009534381679259241}, {"id": 322, "seek": 181212, "start": 1832.6799999999998, "end": 1838.6, "text": " For example, one level down, you found the manifold matrix lead group.", "tokens": [51392, 1171, 1365, 11, 472, 1496, 760, 11, 291, 1352, 264, 47138, 8141, 1477, 1594, 13, 51688], "temperature": 0.0, "avg_logprob": -0.20147507007305437, "compression_ratio": 1.6682926829268292, "no_speech_prob": 0.0009534381679259241}, {"id": 323, "seek": 183860, "start": 1838.6, "end": 1841.56, "text": " Lead group is a special case of a manifold.", "tokens": [50364, 31025, 1594, 307, 257, 2121, 1389, 295, 257, 47138, 13, 50512], "temperature": 0.0, "avg_logprob": -0.20004048066980698, "compression_ratio": 1.8122270742358078, "no_speech_prob": 0.0006260348600335419}, {"id": 324, "seek": 183860, "start": 1841.56, "end": 1845.7199999999998, "text": " It's a manifold that has an algebraic group structure.", "tokens": [50512, 467, 311, 257, 47138, 300, 575, 364, 21989, 299, 1594, 3877, 13, 50720], "temperature": 0.0, "avg_logprob": -0.20004048066980698, "compression_ratio": 1.8122270742358078, "no_speech_prob": 0.0006260348600335419}, {"id": 325, "seek": 183860, "start": 1845.7199999999998, "end": 1849.56, "text": " So therefore, matrix lead group is on the second level of the hierarchy.", "tokens": [50720, 407, 4412, 11, 8141, 1477, 1594, 307, 322, 264, 1150, 1496, 295, 264, 22333, 13, 50912], "temperature": 0.0, "avg_logprob": -0.20004048066980698, "compression_ratio": 1.8122270742358078, "no_speech_prob": 0.0006260348600335419}, {"id": 326, "seek": 183860, "start": 1849.56, "end": 1856.6, "text": " It inherits from the Python class manifold because it's a special case of a manifold.", "tokens": [50912, 467, 9484, 1208, 490, 264, 15329, 1508, 47138, 570, 309, 311, 257, 2121, 1389, 295, 257, 47138, 13, 51264], "temperature": 0.0, "avg_logprob": -0.20004048066980698, "compression_ratio": 1.8122270742358078, "no_speech_prob": 0.0006260348600335419}, {"id": 327, "seek": 183860, "start": 1856.6, "end": 1862.1999999999998, "text": " And then you go down this hierarchy and at the very bottom of this hierarchy, you have the leaves.", "tokens": [51264, 400, 550, 291, 352, 760, 341, 22333, 293, 412, 264, 588, 2767, 295, 341, 22333, 11, 291, 362, 264, 5510, 13, 51544], "temperature": 0.0, "avg_logprob": -0.20004048066980698, "compression_ratio": 1.8122270742358078, "no_speech_prob": 0.0006260348600335419}, {"id": 328, "seek": 183860, "start": 1862.1999999999998, "end": 1865.6, "text": " And these are manifolds that you can actually instantiate.", "tokens": [51544, 400, 613, 366, 8173, 31518, 300, 291, 393, 767, 9836, 13024, 13, 51714], "temperature": 0.0, "avg_logprob": -0.20004048066980698, "compression_ratio": 1.8122270742358078, "no_speech_prob": 0.0006260348600335419}, {"id": 329, "seek": 186560, "start": 1865.6, "end": 1871.6, "text": " So for example, there will be somewhere in there, the special ectogen proof that we just used,", "tokens": [50364, 407, 337, 1365, 11, 456, 486, 312, 4079, 294, 456, 11, 264, 2121, 308, 349, 8799, 8177, 300, 321, 445, 1143, 11, 50664], "temperature": 0.0, "avg_logprob": -0.21250986016314963, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.0007315340335480869}, {"id": 330, "seek": 186560, "start": 1871.6, "end": 1876.9599999999998, "text": " which would inherit from matrix lead group because it's a special type of matrix lead group.", "tokens": [50664, 597, 576, 21389, 490, 8141, 1477, 1594, 570, 309, 311, 257, 2121, 2010, 295, 8141, 1477, 1594, 13, 50932], "temperature": 0.0, "avg_logprob": -0.21250986016314963, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.0007315340335480869}, {"id": 331, "seek": 186560, "start": 1876.9599999999998, "end": 1881.52, "text": " And again, matrix lead group itself inherits from manifolds.", "tokens": [50932, 400, 797, 11, 8141, 1477, 1594, 2564, 9484, 1208, 490, 8173, 31518, 13, 51160], "temperature": 0.0, "avg_logprob": -0.21250986016314963, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.0007315340335480869}, {"id": 332, "seek": 186560, "start": 1881.52, "end": 1887.4399999999998, "text": " So with this project that started with representing shapes and doing statistical learning on shapes,", "tokens": [51160, 407, 365, 341, 1716, 300, 1409, 365, 13460, 10854, 293, 884, 22820, 2539, 322, 10854, 11, 51456], "temperature": 0.0, "avg_logprob": -0.21250986016314963, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.0007315340335480869}, {"id": 333, "seek": 186560, "start": 1887.4399999999998, "end": 1894.1599999999999, "text": " we actually ended up creating a computational representation of differential geometry.", "tokens": [51456, 321, 767, 4590, 493, 4084, 257, 28270, 10290, 295, 15756, 18426, 13, 51792], "temperature": 0.0, "avg_logprob": -0.21250986016314963, "compression_ratio": 1.751004016064257, "no_speech_prob": 0.0007315340335480869}, {"id": 334, "seek": 189560, "start": 1896.32, "end": 1902.8, "text": " Okay, so let me wrap this up a little bit and show you how we can mix these two.", "tokens": [50400, 1033, 11, 370, 718, 385, 7019, 341, 493, 257, 707, 857, 293, 855, 291, 577, 321, 393, 2890, 613, 732, 13, 50724], "temperature": 0.0, "avg_logprob": -0.24629001375995105, "compression_ratio": 1.5233160621761659, "no_speech_prob": 0.0003679486399050802}, {"id": 335, "seek": 189560, "start": 1903.52, "end": 1912.1599999999999, "text": " So how we can use a model of shape to how can we can perform a deep learning algorithm", "tokens": [50760, 407, 577, 321, 393, 764, 257, 2316, 295, 3909, 281, 577, 393, 321, 393, 2042, 257, 2452, 2539, 9284, 51192], "temperature": 0.0, "avg_logprob": -0.24629001375995105, "compression_ratio": 1.5233160621761659, "no_speech_prob": 0.0003679486399050802}, {"id": 336, "seek": 189560, "start": 1912.1599999999999, "end": 1916.0, "text": " on a manifold that would, for example, represent the shape space.", "tokens": [51192, 322, 257, 47138, 300, 576, 11, 337, 1365, 11, 2906, 264, 3909, 1901, 13, 51384], "temperature": 0.0, "avg_logprob": -0.24629001375995105, "compression_ratio": 1.5233160621761659, "no_speech_prob": 0.0003679486399050802}, {"id": 337, "seek": 189560, "start": 1917.36, "end": 1921.76, "text": " And the example I'm going to choose is variational encoders.", "tokens": [51452, 400, 264, 1365, 286, 478, 516, 281, 2826, 307, 3034, 1478, 2058, 378, 433, 13, 51672], "temperature": 0.0, "avg_logprob": -0.24629001375995105, "compression_ratio": 1.5233160621761659, "no_speech_prob": 0.0003679486399050802}, {"id": 338, "seek": 192176, "start": 1921.84, "end": 1925.92, "text": " How do variational encoders work on manifolds?", "tokens": [50368, 1012, 360, 3034, 1478, 2058, 378, 433, 589, 322, 8173, 31518, 30, 50572], "temperature": 0.0, "avg_logprob": -0.11829736620880836, "compression_ratio": 1.6009174311926606, "no_speech_prob": 0.00045754844904877245}, {"id": 339, "seek": 192176, "start": 1928.16, "end": 1934.24, "text": " Zooming out a little bit, let me show you an overview of the research that I'm interested in.", "tokens": [50684, 10337, 10539, 484, 257, 707, 857, 11, 718, 385, 855, 291, 364, 12492, 295, 264, 2132, 300, 286, 478, 3102, 294, 13, 50988], "temperature": 0.0, "avg_logprob": -0.11829736620880836, "compression_ratio": 1.6009174311926606, "no_speech_prob": 0.00045754844904877245}, {"id": 340, "seek": 192176, "start": 1935.04, "end": 1942.08, "text": " In the previous slides, I was showing you the CRT of computational differential geometry,", "tokens": [51028, 682, 264, 3894, 9788, 11, 286, 390, 4099, 291, 264, 14123, 51, 295, 28270, 15756, 18426, 11, 51380], "temperature": 0.0, "avg_logprob": -0.11829736620880836, "compression_ratio": 1.6009174311926606, "no_speech_prob": 0.00045754844904877245}, {"id": 341, "seek": 192176, "start": 1942.08, "end": 1943.84, "text": " which is the ERT of manifolds.", "tokens": [51380, 597, 307, 264, 14929, 51, 295, 8173, 31518, 13, 51468], "temperature": 0.0, "avg_logprob": -0.11829736620880836, "compression_ratio": 1.6009174311926606, "no_speech_prob": 0.00045754844904877245}, {"id": 342, "seek": 192176, "start": 1945.04, "end": 1949.84, "text": " I'm interested in generalizing statistical learning, machine learning and deep learning", "tokens": [51528, 286, 478, 3102, 294, 2674, 3319, 22820, 2539, 11, 3479, 2539, 293, 2452, 2539, 51768], "temperature": 0.0, "avg_logprob": -0.11829736620880836, "compression_ratio": 1.6009174311926606, "no_speech_prob": 0.00045754844904877245}, {"id": 343, "seek": 194984, "start": 1949.9199999999998, "end": 1956.3999999999999, "text": " on these exotic data spaces. In other words, I'm interested in filling the table that you see on", "tokens": [50368, 322, 613, 27063, 1412, 7673, 13, 682, 661, 2283, 11, 286, 478, 3102, 294, 10623, 264, 3199, 300, 291, 536, 322, 50692], "temperature": 0.0, "avg_logprob": -0.12625079684787327, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.00041706766933202744}, {"id": 344, "seek": 194984, "start": 1956.3999999999999, "end": 1964.6399999999999, "text": " this slide, where in this table, the different rows represent different manifolds. So each of the row", "tokens": [50692, 341, 4137, 11, 689, 294, 341, 3199, 11, 264, 819, 13241, 2906, 819, 8173, 31518, 13, 407, 1184, 295, 264, 5386, 51104], "temperature": 0.0, "avg_logprob": -0.12625079684787327, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.00041706766933202744}, {"id": 345, "seek": 194984, "start": 1964.6399999999999, "end": 1969.4399999999998, "text": " in this table corresponds to one of the nodes that you had in the previous CRT.", "tokens": [51104, 294, 341, 3199, 23249, 281, 472, 295, 264, 13891, 300, 291, 632, 294, 264, 3894, 14123, 51, 13, 51344], "temperature": 0.0, "avg_logprob": -0.12625079684787327, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.00041706766933202744}, {"id": 346, "seek": 194984, "start": 1970.08, "end": 1972.9599999999998, "text": " There are different types of exotic data spaces, if you wish.", "tokens": [51376, 821, 366, 819, 3467, 295, 27063, 1412, 7673, 11, 498, 291, 3172, 13, 51520], "temperature": 0.0, "avg_logprob": -0.12625079684787327, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.00041706766933202744}, {"id": 347, "seek": 194984, "start": 1973.84, "end": 1978.3999999999999, "text": " And in this table, the different columns represents different fields of statistics,", "tokens": [51564, 400, 294, 341, 3199, 11, 264, 819, 13766, 8855, 819, 7909, 295, 12523, 11, 51792], "temperature": 0.0, "avg_logprob": -0.12625079684787327, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.00041706766933202744}, {"id": 348, "seek": 197840, "start": 1978.72, "end": 1984.8000000000002, "text": " machine learning and deep learning. We're going to talk about theorizing variational encoders to", "tokens": [50380, 3479, 2539, 293, 2452, 2539, 13, 492, 434, 516, 281, 751, 466, 27423, 3319, 3034, 1478, 2058, 378, 433, 281, 50684], "temperature": 0.0, "avg_logprob": -0.15978414671761648, "compression_ratio": 1.7673267326732673, "no_speech_prob": 0.0007662613643333316}, {"id": 349, "seek": 197840, "start": 1984.8000000000002, "end": 1990.64, "text": " manifolds. So therefore, we are in the column dimension reduction and deep learning.", "tokens": [50684, 8173, 31518, 13, 407, 4412, 11, 321, 366, 294, 264, 7738, 10139, 11004, 293, 2452, 2539, 13, 50976], "temperature": 0.0, "avg_logprob": -0.15978414671761648, "compression_ratio": 1.7673267326732673, "no_speech_prob": 0.0007662613643333316}, {"id": 350, "seek": 197840, "start": 1992.96, "end": 1998.8000000000002, "text": " So dimension reduction and variational encoders. I'd like to present a geometric perspective", "tokens": [51092, 407, 10139, 11004, 293, 3034, 1478, 2058, 378, 433, 13, 286, 1116, 411, 281, 1974, 257, 33246, 4585, 51384], "temperature": 0.0, "avg_logprob": -0.15978414671761648, "compression_ratio": 1.7673267326732673, "no_speech_prob": 0.0007662613643333316}, {"id": 351, "seek": 197840, "start": 1999.44, "end": 2006.8000000000002, "text": " on them as to emphasize where manifolds come in. On this first line of this table,", "tokens": [51416, 322, 552, 382, 281, 16078, 689, 8173, 31518, 808, 294, 13, 1282, 341, 700, 1622, 295, 341, 3199, 11, 51784], "temperature": 0.0, "avg_logprob": -0.15978414671761648, "compression_ratio": 1.7673267326732673, "no_speech_prob": 0.0007662613643333316}, {"id": 352, "seek": 200680, "start": 2007.76, "end": 2016.48, "text": " you can see two classes of dimension reduction methods. The first classes, the first class of", "tokens": [50412, 291, 393, 536, 732, 5359, 295, 10139, 11004, 7150, 13, 440, 700, 5359, 11, 264, 700, 1508, 295, 50848], "temperature": 0.0, "avg_logprob": -0.12130301497703375, "compression_ratio": 1.7830188679245282, "no_speech_prob": 0.0006760941469110548}, {"id": 353, "seek": 200680, "start": 2016.48, "end": 2022.24, "text": " methods, are the methods that seek to perform dimension reduction on an ambient space that is", "tokens": [50848, 7150, 11, 366, 264, 7150, 300, 8075, 281, 2042, 10139, 11004, 322, 364, 22997, 1901, 300, 307, 51136], "temperature": 0.0, "avg_logprob": -0.12130301497703375, "compression_ratio": 1.7830188679245282, "no_speech_prob": 0.0006760941469110548}, {"id": 354, "seek": 200680, "start": 2022.24, "end": 2029.2, "text": " a vector space. Specifically, let's say the vector space is R2, and we have some data points,", "tokens": [51136, 257, 8062, 1901, 13, 26058, 11, 718, 311, 584, 264, 8062, 1901, 307, 497, 17, 11, 293, 321, 362, 512, 1412, 2793, 11, 51484], "temperature": 0.0, "avg_logprob": -0.12130301497703375, "compression_ratio": 1.7830188679245282, "no_speech_prob": 0.0006760941469110548}, {"id": 355, "seek": 200680, "start": 2029.2, "end": 2036.3999999999999, "text": " which are the dark green data points. We can think of principal component analysis that seeks to", "tokens": [51484, 597, 366, 264, 2877, 3092, 1412, 2793, 13, 492, 393, 519, 295, 9716, 6542, 5215, 300, 28840, 281, 51844], "temperature": 0.0, "avg_logprob": -0.12130301497703375, "compression_ratio": 1.7830188679245282, "no_speech_prob": 0.0006760941469110548}, {"id": 356, "seek": 203640, "start": 2036.48, "end": 2044.8000000000002, "text": " learn a linear subspace that would be the light green line within this linear space that is R2.", "tokens": [50368, 1466, 257, 8213, 2090, 17940, 300, 576, 312, 264, 1442, 3092, 1622, 1951, 341, 8213, 1901, 300, 307, 497, 17, 13, 50784], "temperature": 0.0, "avg_logprob": -0.12473112439352368, "compression_ratio": 1.7018633540372672, "no_speech_prob": 0.0004947821726091206}, {"id": 357, "seek": 203640, "start": 2045.44, "end": 2050.48, "text": " And you have different dimension reduction methods that work like this, that wish to", "tokens": [50816, 400, 291, 362, 819, 10139, 11004, 7150, 300, 589, 411, 341, 11, 300, 3172, 281, 51068], "temperature": 0.0, "avg_logprob": -0.12473112439352368, "compression_ratio": 1.7018633540372672, "no_speech_prob": 0.0004947821726091206}, {"id": 358, "seek": 203640, "start": 2050.48, "end": 2058.2400000000002, "text": " learn a linear subspace within a linear space. In the manifold world, we remember that linear", "tokens": [51068, 1466, 257, 8213, 2090, 17940, 1951, 257, 8213, 1901, 13, 682, 264, 47138, 1002, 11, 321, 1604, 300, 8213, 51456], "temperature": 0.0, "avg_logprob": -0.12473112439352368, "compression_ratio": 1.7018633540372672, "no_speech_prob": 0.0004947821726091206}, {"id": 359, "seek": 205824, "start": 2059.2, "end": 2066.8799999999997, "text": " subspace, or that linear line, is converted to geodesic. And so you have equivalent methods", "tokens": [50412, 2090, 17940, 11, 420, 300, 8213, 1622, 11, 307, 16424, 281, 1519, 4789, 299, 13, 400, 370, 291, 362, 10344, 7150, 50796], "temperature": 0.0, "avg_logprob": -0.20115193076755689, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0009395061642862856}, {"id": 360, "seek": 205824, "start": 2066.8799999999997, "end": 2074.08, "text": " that allow to learn the equivalent of a line that is a geodesic on a manifold. So this time,", "tokens": [50796, 300, 2089, 281, 1466, 264, 10344, 295, 257, 1622, 300, 307, 257, 1519, 4789, 299, 322, 257, 47138, 13, 407, 341, 565, 11, 51156], "temperature": 0.0, "avg_logprob": -0.20115193076755689, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0009395061642862856}, {"id": 361, "seek": 205824, "start": 2074.08, "end": 2080.24, "text": " the ambient space is a manifold and will be this clear. And we're interested in learning", "tokens": [51156, 264, 22997, 1901, 307, 257, 47138, 293, 486, 312, 341, 1850, 13, 400, 321, 434, 3102, 294, 2539, 51464], "temperature": 0.0, "avg_logprob": -0.20115193076755689, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0009395061642862856}, {"id": 362, "seek": 205824, "start": 2080.24, "end": 2087.3599999999997, "text": " principal directions of variations of the data, the data of the dark green point. And we want to", "tokens": [51464, 9716, 11095, 295, 17840, 295, 264, 1412, 11, 264, 1412, 295, 264, 2877, 3092, 935, 13, 400, 321, 528, 281, 51820], "temperature": 0.0, "avg_logprob": -0.20115193076755689, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0009395061642862856}, {"id": 363, "seek": 208736, "start": 2087.36, "end": 2092.8, "text": " learn principal directions of variations of this data that will be the equivalent of the lines on", "tokens": [50364, 1466, 9716, 11095, 295, 17840, 295, 341, 1412, 300, 486, 312, 264, 10344, 295, 264, 3876, 322, 50636], "temperature": 0.0, "avg_logprob": -0.14973315807303997, "compression_ratio": 1.787037037037037, "no_speech_prob": 0.0003246873093303293}, {"id": 364, "seek": 208736, "start": 2092.8, "end": 2098.56, "text": " the left, so that are the geodesic. The geodesic on the sphere is a great circle, and you can see in", "tokens": [50636, 264, 1411, 11, 370, 300, 366, 264, 1519, 4789, 299, 13, 440, 1519, 4789, 299, 322, 264, 16687, 307, 257, 869, 6329, 11, 293, 291, 393, 536, 294, 50924], "temperature": 0.0, "avg_logprob": -0.14973315807303997, "compression_ratio": 1.787037037037037, "no_speech_prob": 0.0003246873093303293}, {"id": 365, "seek": 208736, "start": 2098.56, "end": 2105.6800000000003, "text": " light green, a great circle. In the context of variational tranquillers, the vector space case,", "tokens": [50924, 1442, 3092, 11, 257, 869, 6329, 13, 682, 264, 4319, 295, 3034, 1478, 17640, 373, 433, 11, 264, 8062, 1901, 1389, 11, 51280], "temperature": 0.0, "avg_logprob": -0.14973315807303997, "compression_ratio": 1.787037037037037, "no_speech_prob": 0.0003246873093303293}, {"id": 366, "seek": 208736, "start": 2106.2400000000002, "end": 2111.36, "text": " we are not linear. We're using deep learning, and most of the time we are highly nonlinear.", "tokens": [51308, 321, 366, 406, 8213, 13, 492, 434, 1228, 2452, 2539, 11, 293, 881, 295, 264, 565, 321, 366, 5405, 2107, 28263, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14973315807303997, "compression_ratio": 1.787037037037037, "no_speech_prob": 0.0003246873093303293}, {"id": 367, "seek": 211136, "start": 2112.32, "end": 2118.32, "text": " Therefore, we need another row in this table to complete the overview of dimension", "tokens": [50412, 7504, 11, 321, 643, 1071, 5386, 294, 341, 3199, 281, 3566, 264, 12492, 295, 10139, 50712], "temperature": 0.0, "avg_logprob": -0.13288559633142807, "compression_ratio": 1.641255605381166, "no_speech_prob": 0.0005028924788348377}, {"id": 368, "seek": 211136, "start": 2118.32, "end": 2123.76, "text": " reduction methods from a geometric perspective. And then we talk about the one that is on the", "tokens": [50712, 11004, 7150, 490, 257, 33246, 4585, 13, 400, 550, 321, 751, 466, 264, 472, 300, 307, 322, 264, 50984], "temperature": 0.0, "avg_logprob": -0.13288559633142807, "compression_ratio": 1.641255605381166, "no_speech_prob": 0.0005028924788348377}, {"id": 369, "seek": 211136, "start": 2123.76, "end": 2130.32, "text": " bottom left, which include, which is a class of methods that include variational tranquillers.", "tokens": [50984, 2767, 1411, 11, 597, 4090, 11, 597, 307, 257, 1508, 295, 7150, 300, 4090, 3034, 1478, 17640, 373, 433, 13, 51312], "temperature": 0.0, "avg_logprob": -0.13288559633142807, "compression_ratio": 1.641255605381166, "no_speech_prob": 0.0005028924788348377}, {"id": 370, "seek": 211136, "start": 2131.1200000000003, "end": 2137.6, "text": " These class of methods operate in an ambient space, that is, again, a vector space. It's again", "tokens": [51352, 1981, 1508, 295, 7150, 9651, 294, 364, 22997, 1901, 11, 300, 307, 11, 797, 11, 257, 8062, 1901, 13, 467, 311, 797, 51676], "temperature": 0.0, "avg_logprob": -0.13288559633142807, "compression_ratio": 1.641255605381166, "no_speech_prob": 0.0005028924788348377}, {"id": 371, "seek": 213760, "start": 2138.4, "end": 2146.16, "text": " represented as R2 here. But instead of learning variations of the data that are linear, as this", "tokens": [50404, 10379, 382, 497, 17, 510, 13, 583, 2602, 295, 2539, 17840, 295, 264, 1412, 300, 366, 8213, 11, 382, 341, 50792], "temperature": 0.0, "avg_logprob": -0.1793518839655696, "compression_ratio": 1.5027027027027027, "no_speech_prob": 0.0006458015996031463}, {"id": 372, "seek": 213760, "start": 2146.16, "end": 2154.3199999999997, "text": " here would do, instead, we are allowed to learn a nonlinear subspace M. So you see the dark", "tokens": [50792, 510, 576, 360, 11, 2602, 11, 321, 366, 4350, 281, 1466, 257, 2107, 28263, 2090, 17940, 376, 13, 407, 291, 536, 264, 2877, 51200], "temperature": 0.0, "avg_logprob": -0.1793518839655696, "compression_ratio": 1.5027027027027027, "no_speech_prob": 0.0006458015996031463}, {"id": 373, "seek": 213760, "start": 2154.3199999999997, "end": 2164.96, "text": " light green line is now nonlinear. So I'm going to present how we can generalize this VAE,", "tokens": [51200, 1442, 3092, 1622, 307, 586, 2107, 28263, 13, 407, 286, 478, 516, 281, 1974, 577, 321, 393, 2674, 1125, 341, 18527, 36, 11, 51732], "temperature": 0.0, "avg_logprob": -0.1793518839655696, "compression_ratio": 1.5027027027027027, "no_speech_prob": 0.0006458015996031463}, {"id": 374, "seek": 216496, "start": 2164.96, "end": 2172.88, "text": " presented from this geometric perspective here, to geometric VAE, or VAE on manifolds,", "tokens": [50364, 8212, 490, 341, 33246, 4585, 510, 11, 281, 33246, 18527, 36, 11, 420, 18527, 36, 322, 8173, 31518, 11, 50760], "temperature": 0.0, "avg_logprob": -0.1301191993381666, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006874440587125719}, {"id": 375, "seek": 216496, "start": 2172.88, "end": 2180.0, "text": " which is what is shown on the bottom right. So now the setting is the ambient space is a manifold.", "tokens": [50760, 597, 307, 437, 307, 4898, 322, 264, 2767, 558, 13, 407, 586, 264, 3287, 307, 264, 22997, 1901, 307, 257, 47138, 13, 51116], "temperature": 0.0, "avg_logprob": -0.1301191993381666, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006874440587125719}, {"id": 376, "seek": 216496, "start": 2180.64, "end": 2188.16, "text": " So the sphere represents the ambient space, that is the manifold, to which we know that the data are,", "tokens": [51148, 407, 264, 16687, 8855, 264, 22997, 1901, 11, 300, 307, 264, 47138, 11, 281, 597, 321, 458, 300, 264, 1412, 366, 11, 51524], "temperature": 0.0, "avg_logprob": -0.1301191993381666, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006874440587125719}, {"id": 377, "seek": 216496, "start": 2188.16, "end": 2193.52, "text": " in which we know that the data are. And now we don't only restrict ourselves to learning", "tokens": [51524, 294, 597, 321, 458, 300, 264, 1412, 366, 13, 400, 586, 321, 500, 380, 787, 7694, 4175, 281, 2539, 51792], "temperature": 0.0, "avg_logprob": -0.1301191993381666, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006874440587125719}, {"id": 378, "seek": 219352, "start": 2193.52, "end": 2201.04, "text": " a geodesic subspace, as the road just above was doing, but we allow to learn any nonlinear subspace,", "tokens": [50364, 257, 1519, 4789, 299, 2090, 17940, 11, 382, 264, 3060, 445, 3673, 390, 884, 11, 457, 321, 2089, 281, 1466, 604, 2107, 28263, 2090, 17940, 11, 50740], "temperature": 0.0, "avg_logprob": -0.13977620842751493, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.0007668042089790106}, {"id": 379, "seek": 219352, "start": 2202.0, "end": 2207.52, "text": " or non-geodesic submanifolds, and within the manifold M.", "tokens": [50788, 420, 2107, 12, 432, 4789, 299, 1422, 1601, 351, 31518, 11, 293, 1951, 264, 47138, 376, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13977620842751493, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.0007668042089790106}, {"id": 380, "seek": 219352, "start": 2209.7599999999998, "end": 2215.28, "text": " But how does this work? Let me review variational tranquillers. I put", "tokens": [51176, 583, 577, 775, 341, 589, 30, 961, 385, 3131, 3034, 1478, 17640, 373, 433, 13, 286, 829, 51452], "temperature": 0.0, "avg_logprob": -0.13977620842751493, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.0007668042089790106}, {"id": 381, "seek": 219352, "start": 2216.24, "end": 2220.64, "text": " equations on the left for completeness. I'm not going to comment on them too much.", "tokens": [51500, 11787, 322, 264, 1411, 337, 1557, 15264, 13, 286, 478, 406, 516, 281, 2871, 322, 552, 886, 709, 13, 51720], "temperature": 0.0, "avg_logprob": -0.13977620842751493, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.0007668042089790106}, {"id": 382, "seek": 222064, "start": 2221.6, "end": 2228.8799999999997, "text": " Variational tranquillers start with a generative model of data in Rd, that's the ambient space", "tokens": [50412, 32511, 1478, 17640, 373, 433, 722, 365, 257, 1337, 1166, 2316, 295, 1412, 294, 497, 67, 11, 300, 311, 264, 22997, 1901, 50776], "temperature": 0.0, "avg_logprob": -0.13217271929201874, "compression_ratio": 1.796116504854369, "no_speech_prob": 0.000543901405762881}, {"id": 383, "seek": 222064, "start": 2228.8799999999997, "end": 2234.96, "text": " that we had before. The data assumed to belong to a vector space. And we can think of variational", "tokens": [50776, 300, 321, 632, 949, 13, 440, 1412, 15895, 281, 5784, 281, 257, 8062, 1901, 13, 400, 321, 393, 519, 295, 3034, 1478, 51080], "temperature": 0.0, "avg_logprob": -0.13217271929201874, "compression_ratio": 1.796116504854369, "no_speech_prob": 0.000543901405762881}, {"id": 384, "seek": 222064, "start": 2234.96, "end": 2243.8399999999997, "text": " tranquillers as a way to invert a generative model with latent variables. And typically,", "tokens": [51080, 17640, 373, 433, 382, 257, 636, 281, 33966, 257, 1337, 1166, 2316, 365, 48994, 9102, 13, 400, 5850, 11, 51524], "temperature": 0.0, "avg_logprob": -0.13217271929201874, "compression_ratio": 1.796116504854369, "no_speech_prob": 0.000543901405762881}, {"id": 385, "seek": 222064, "start": 2243.8399999999997, "end": 2248.64, "text": " a generative model with latent particles, such as the one that is in the first equation.", "tokens": [51524, 257, 1337, 1166, 2316, 365, 48994, 10007, 11, 1270, 382, 264, 472, 300, 307, 294, 264, 700, 5367, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13217271929201874, "compression_ratio": 1.796116504854369, "no_speech_prob": 0.000543901405762881}, {"id": 386, "seek": 224864, "start": 2249.3599999999997, "end": 2256.24, "text": " So we have xi, that's our data in the vector space Rd, that is assumed to be generated", "tokens": [50400, 407, 321, 362, 36800, 11, 300, 311, 527, 1412, 294, 264, 8062, 1901, 497, 67, 11, 300, 307, 15895, 281, 312, 10833, 50744], "temperature": 0.0, "avg_logprob": -0.19769966468382416, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.00011409606668166816}, {"id": 387, "seek": 224864, "start": 2256.24, "end": 2262.56, "text": " with a generative model with latent variables. But the latent variable is xi, they are going to", "tokens": [50744, 365, 257, 1337, 1166, 2316, 365, 48994, 9102, 13, 583, 264, 48994, 7006, 307, 36800, 11, 436, 366, 516, 281, 51060], "temperature": 0.0, "avg_logprob": -0.19769966468382416, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.00011409606668166816}, {"id": 388, "seek": 224864, "start": 2262.56, "end": 2269.52, "text": " represent the low dimensional representation of the xi. So this low dimensional representation,", "tokens": [51060, 2906, 264, 2295, 18795, 10290, 295, 264, 36800, 13, 407, 341, 2295, 18795, 10290, 11, 51408], "temperature": 0.0, "avg_logprob": -0.19769966468382416, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.00011409606668166816}, {"id": 389, "seek": 224864, "start": 2269.52, "end": 2277.3599999999997, "text": " xi, pass through a function, f, this parameter mu and w, this function is usually represented by a", "tokens": [51408, 36800, 11, 1320, 807, 257, 2445, 11, 283, 11, 341, 13075, 2992, 293, 261, 11, 341, 2445, 307, 2673, 10379, 538, 257, 51800], "temperature": 0.0, "avg_logprob": -0.19769966468382416, "compression_ratio": 1.8038277511961722, "no_speech_prob": 0.00011409606668166816}, {"id": 390, "seek": 227736, "start": 2277.36, "end": 2284.0, "text": " neural network, that is called the decoder, variational tranquillers, to which noise is added.", "tokens": [50364, 18161, 3209, 11, 300, 307, 1219, 264, 979, 19866, 11, 3034, 1478, 17640, 373, 433, 11, 281, 597, 5658, 307, 3869, 13, 50696], "temperature": 0.0, "avg_logprob": -0.16127365738598268, "compression_ratio": 1.6091954022988506, "no_speech_prob": 0.0007094403263181448}, {"id": 391, "seek": 227736, "start": 2284.8, "end": 2290.0, "text": " So that's the generative model that we assume has generated data in variational tranquillers.", "tokens": [50736, 407, 300, 311, 264, 1337, 1166, 2316, 300, 321, 6552, 575, 10833, 1412, 294, 3034, 1478, 17640, 373, 433, 13, 50996], "temperature": 0.0, "avg_logprob": -0.16127365738598268, "compression_ratio": 1.6091954022988506, "no_speech_prob": 0.0007094403263181448}, {"id": 392, "seek": 227736, "start": 2291.04, "end": 2298.7200000000003, "text": " From a geometric perspective, xi are assumed to belong to a lower dimensional latent space,", "tokens": [51048, 3358, 257, 33246, 4585, 11, 36800, 366, 15895, 281, 5784, 281, 257, 3126, 18795, 48994, 1901, 11, 51432], "temperature": 0.0, "avg_logprob": -0.16127365738598268, "compression_ratio": 1.6091954022988506, "no_speech_prob": 0.0007094403263181448}, {"id": 393, "seek": 229872, "start": 2299.4399999999996, "end": 2306.9599999999996, "text": " that I write Rl. Then this xi passes through the function f of mu and w,", "tokens": [50400, 300, 286, 2464, 497, 75, 13, 1396, 341, 36800, 11335, 807, 264, 2445, 283, 295, 2992, 293, 261, 11, 50776], "temperature": 0.0, "avg_logprob": -0.12383095971469221, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0037639967631548643}, {"id": 394, "seek": 229872, "start": 2306.9599999999996, "end": 2311.52, "text": " which can be the neural network. And by passing through this function, it becomes", "tokens": [50776, 597, 393, 312, 264, 18161, 3209, 13, 400, 538, 8437, 807, 341, 2445, 11, 309, 3643, 51004], "temperature": 0.0, "avg_logprob": -0.12383095971469221, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0037639967631548643}, {"id": 395, "seek": 229872, "start": 2311.52, "end": 2317.12, "text": " an element of the higher dimensional space Rd. So this is the blue point on the illustration.", "tokens": [51004, 364, 4478, 295, 264, 2946, 18795, 1901, 497, 67, 13, 407, 341, 307, 264, 3344, 935, 322, 264, 22645, 13, 51284], "temperature": 0.0, "avg_logprob": -0.12383095971469221, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0037639967631548643}, {"id": 396, "seek": 229872, "start": 2317.9199999999996, "end": 2325.68, "text": " And then noise is added to the model. Now, if we were to pass the whole latent space Rl", "tokens": [51324, 400, 550, 5658, 307, 3869, 281, 264, 2316, 13, 823, 11, 498, 321, 645, 281, 1320, 264, 1379, 48994, 1901, 497, 75, 51712], "temperature": 0.0, "avg_logprob": -0.12383095971469221, "compression_ratio": 1.5774647887323943, "no_speech_prob": 0.0037639967631548643}, {"id": 397, "seek": 232568, "start": 2326.3999999999996, "end": 2334.72, "text": " through the function f mu and w, we would get this nonlinear light green curve that represents", "tokens": [50400, 807, 264, 2445, 283, 2992, 293, 261, 11, 321, 576, 483, 341, 2107, 28263, 1442, 3092, 7605, 300, 8855, 50816], "temperature": 0.0, "avg_logprob": -0.1228966134967226, "compression_ratio": 1.6272189349112427, "no_speech_prob": 0.0005698214517906308}, {"id": 398, "seek": 232568, "start": 2334.72, "end": 2341.12, "text": " the subspace, the nonlinear subspace that we are learning. That's a geometric explanation", "tokens": [50816, 264, 2090, 17940, 11, 264, 2107, 28263, 2090, 17940, 300, 321, 366, 2539, 13, 663, 311, 257, 33246, 10835, 51136], "temperature": 0.0, "avg_logprob": -0.1228966134967226, "compression_ratio": 1.6272189349112427, "no_speech_prob": 0.0005698214517906308}, {"id": 399, "seek": 232568, "start": 2341.12, "end": 2346.96, "text": " of the generative model of the data that is at the foundation of variational tranquillers.", "tokens": [51136, 295, 264, 1337, 1166, 2316, 295, 264, 1412, 300, 307, 412, 264, 7030, 295, 3034, 1478, 17640, 373, 433, 13, 51428], "temperature": 0.0, "avg_logprob": -0.1228966134967226, "compression_ratio": 1.6272189349112427, "no_speech_prob": 0.0005698214517906308}, {"id": 400, "seek": 234696, "start": 2347.76, "end": 2353.2, "text": " Now, with GAE, we do not observe, we do not know what is f of mu and w.", "tokens": [50404, 823, 11, 365, 22841, 36, 11, 321, 360, 406, 11441, 11, 321, 360, 406, 458, 437, 307, 283, 295, 2992, 293, 261, 13, 50676], "temperature": 0.0, "avg_logprob": -0.14268177434017784, "compression_ratio": 1.7052631578947368, "no_speech_prob": 0.0014542611315846443}, {"id": 401, "seek": 234696, "start": 2354.4, "end": 2358.16, "text": " We model it as a decoder, but we do not know what are the weights of the decoder.", "tokens": [50736, 492, 2316, 309, 382, 257, 979, 19866, 11, 457, 321, 360, 406, 458, 437, 366, 264, 17443, 295, 264, 979, 19866, 13, 50924], "temperature": 0.0, "avg_logprob": -0.14268177434017784, "compression_ratio": 1.7052631578947368, "no_speech_prob": 0.0014542611315846443}, {"id": 402, "seek": 234696, "start": 2358.96, "end": 2366.32, "text": " And we also, we do not know what are the xi that are associated to each xi. So,", "tokens": [50964, 400, 321, 611, 11, 321, 360, 406, 458, 437, 366, 264, 36800, 300, 366, 6615, 281, 1184, 36800, 13, 407, 11, 51332], "temperature": 0.0, "avg_logprob": -0.14268177434017784, "compression_ratio": 1.7052631578947368, "no_speech_prob": 0.0014542611315846443}, {"id": 403, "seek": 234696, "start": 2366.32, "end": 2373.52, "text": " given only the xi's, we would like to be able to learn the low-dimensional representations", "tokens": [51332, 2212, 787, 264, 36800, 311, 11, 321, 576, 411, 281, 312, 1075, 281, 1466, 264, 2295, 12, 18759, 33358, 51692], "temperature": 0.0, "avg_logprob": -0.14268177434017784, "compression_ratio": 1.7052631578947368, "no_speech_prob": 0.0014542611315846443}, {"id": 404, "seek": 237352, "start": 2373.52, "end": 2382.8, "text": " xi together with the decoder, the model. And this is done with this architecture that you", "tokens": [50364, 36800, 1214, 365, 264, 979, 19866, 11, 264, 2316, 13, 400, 341, 307, 1096, 365, 341, 9482, 300, 291, 50828], "temperature": 0.0, "avg_logprob": -0.1180142084757487, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0005699394387193024}, {"id": 405, "seek": 237352, "start": 2382.8, "end": 2387.68, "text": " might be familiar with. On the left, you have the traditional architecture of the variational", "tokens": [50828, 1062, 312, 4963, 365, 13, 1282, 264, 1411, 11, 291, 362, 264, 5164, 9482, 295, 264, 3034, 1478, 51072], "temperature": 0.0, "avg_logprob": -0.1180142084757487, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0005699394387193024}, {"id": 406, "seek": 237352, "start": 2387.68, "end": 2393.68, "text": " tranquillers. On the right, you have the last function that is used to train it. So in the", "tokens": [51072, 17640, 373, 433, 13, 1282, 264, 558, 11, 291, 362, 264, 1036, 2445, 300, 307, 1143, 281, 3847, 309, 13, 407, 294, 264, 51372], "temperature": 0.0, "avg_logprob": -0.1180142084757487, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0005699394387193024}, {"id": 407, "seek": 237352, "start": 2393.68, "end": 2402.32, "text": " architecture of the GAE, the second half represents the decoder. It is the representation of the", "tokens": [51372, 9482, 295, 264, 22841, 36, 11, 264, 1150, 1922, 8855, 264, 979, 19866, 13, 467, 307, 264, 10290, 295, 264, 51804], "temperature": 0.0, "avg_logprob": -0.1180142084757487, "compression_ratio": 1.8097560975609757, "no_speech_prob": 0.0005699394387193024}, {"id": 408, "seek": 240232, "start": 2402.32, "end": 2408.1600000000003, "text": " generative model that takes an element of the lower-dimensional latent space in green", "tokens": [50364, 1337, 1166, 2316, 300, 2516, 364, 4478, 295, 264, 3126, 12, 18759, 48994, 1901, 294, 3092, 50656], "temperature": 0.0, "avg_logprob": -0.1744713544845581, "compression_ratio": 1.6714285714285715, "no_speech_prob": 0.0003099868481513113}, {"id": 409, "seek": 240232, "start": 2408.1600000000003, "end": 2415.04, "text": " and outputs the function f of that latent variable. And on the left, we add an encoder", "tokens": [50656, 293, 23930, 264, 2445, 283, 295, 300, 48994, 7006, 13, 400, 322, 264, 1411, 11, 321, 909, 364, 2058, 19866, 51000], "temperature": 0.0, "avg_logprob": -0.1744713544845581, "compression_ratio": 1.6714285714285715, "no_speech_prob": 0.0003099868481513113}, {"id": 410, "seek": 240232, "start": 2415.6000000000004, "end": 2422.6400000000003, "text": " that is able to perform the operation of going from xi to a normal size approximation", "tokens": [51028, 300, 307, 1075, 281, 2042, 264, 6916, 295, 516, 490, 36800, 281, 257, 2710, 2744, 28023, 51380], "temperature": 0.0, "avg_logprob": -0.1744713544845581, "compression_ratio": 1.6714285714285715, "no_speech_prob": 0.0003099868481513113}, {"id": 411, "seek": 240232, "start": 2422.6400000000003, "end": 2429.04, "text": " approximates representation of the posterior of the xi. Anyway, this is all trained with the", "tokens": [51380, 8542, 1024, 10290, 295, 264, 33529, 295, 264, 36800, 13, 5684, 11, 341, 307, 439, 8895, 365, 264, 51700], "temperature": 0.0, "avg_logprob": -0.1744713544845581, "compression_ratio": 1.6714285714285715, "no_speech_prob": 0.0003099868481513113}, {"id": 412, "seek": 242904, "start": 2429.04, "end": 2435.2799999999997, "text": " last function that is called the elbow. It stands for evidence lower bound. It's a lower bound of", "tokens": [50364, 1036, 2445, 300, 307, 1219, 264, 18507, 13, 467, 7382, 337, 4467, 3126, 5472, 13, 467, 311, 257, 3126, 5472, 295, 50676], "temperature": 0.0, "avg_logprob": -0.18223726079705055, "compression_ratio": 1.690909090909091, "no_speech_prob": 0.001205607783049345}, {"id": 413, "seek": 242904, "start": 2435.2799999999997, "end": 2442.0, "text": " the likelihood, of the log likelihood. And I've given its expression here as a sum of a reconstruction,", "tokens": [50676, 264, 22119, 11, 295, 264, 3565, 22119, 13, 400, 286, 600, 2212, 1080, 6114, 510, 382, 257, 2408, 295, 257, 31565, 11, 51012], "temperature": 0.0, "avg_logprob": -0.18223726079705055, "compression_ratio": 1.690909090909091, "no_speech_prob": 0.001205607783049345}, {"id": 414, "seek": 242904, "start": 2442.88, "end": 2448.72, "text": " a term and a regularization term, because these are the terms that we have to generalize to manifold", "tokens": [51056, 257, 1433, 293, 257, 3890, 2144, 1433, 11, 570, 613, 366, 264, 2115, 300, 321, 362, 281, 2674, 1125, 281, 47138, 51348], "temperature": 0.0, "avg_logprob": -0.18223726079705055, "compression_ratio": 1.690909090909091, "no_speech_prob": 0.001205607783049345}, {"id": 415, "seek": 242904, "start": 2449.6, "end": 2453.2799999999997, "text": " to have a version of variational tranquillers that works on manifold.", "tokens": [51392, 281, 362, 257, 3037, 295, 3034, 1478, 17640, 373, 433, 300, 1985, 322, 47138, 13, 51576], "temperature": 0.0, "avg_logprob": -0.18223726079705055, "compression_ratio": 1.690909090909091, "no_speech_prob": 0.001205607783049345}, {"id": 416, "seek": 245328, "start": 2453.6000000000004, "end": 2463.2000000000003, "text": " So let's try to do this, to generalize variational tranquillers to manifold. We will have to generalize", "tokens": [50380, 407, 718, 311, 853, 281, 360, 341, 11, 281, 2674, 1125, 3034, 1478, 17640, 373, 433, 281, 47138, 13, 492, 486, 362, 281, 2674, 1125, 50860], "temperature": 0.0, "avg_logprob": -0.17447952322057775, "compression_ratio": 1.7102272727272727, "no_speech_prob": 0.0006664669490419328}, {"id": 417, "seek": 245328, "start": 2463.2000000000003, "end": 2472.4, "text": " two elements. First, the generative model and second, the last function. Now, looking a little bit", "tokens": [50860, 732, 4959, 13, 2386, 11, 264, 1337, 1166, 2316, 293, 1150, 11, 264, 1036, 2445, 13, 823, 11, 1237, 257, 707, 857, 51320], "temperature": 0.0, "avg_logprob": -0.17447952322057775, "compression_ratio": 1.7102272727272727, "no_speech_prob": 0.0006664669490419328}, {"id": 418, "seek": 245328, "start": 2472.4, "end": 2480.0, "text": " at the generative model and the last functions, we observe that they are built from basic elements", "tokens": [51320, 412, 264, 1337, 1166, 2316, 293, 264, 1036, 6828, 11, 321, 11441, 300, 436, 366, 3094, 490, 3875, 4959, 51700], "temperature": 0.0, "avg_logprob": -0.17447952322057775, "compression_ratio": 1.7102272727272727, "no_speech_prob": 0.0006664669490419328}, {"id": 419, "seek": 248000, "start": 2480.0, "end": 2486.32, "text": " and operations that we now know how to converge to manifold. So specifically in the generative model,", "tokens": [50364, 293, 7705, 300, 321, 586, 458, 577, 281, 41881, 281, 47138, 13, 407, 4682, 294, 264, 1337, 1166, 2316, 11, 50680], "temperature": 0.0, "avg_logprob": -0.11274668041028474, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.00043715437641367316}, {"id": 420, "seek": 248000, "start": 2486.32, "end": 2492.24, "text": " we see there is a plus, which is an addition. And the generalization of the addition of vector", "tokens": [50680, 321, 536, 456, 307, 257, 1804, 11, 597, 307, 364, 4500, 13, 400, 264, 2674, 2144, 295, 264, 4500, 295, 8062, 50976], "temperature": 0.0, "avg_logprob": -0.11274668041028474, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.00043715437641367316}, {"id": 421, "seek": 248000, "start": 2492.24, "end": 2498.32, "text": " spaces is the exponential map of manifold. In the last function also, we see that there is a square", "tokens": [50976, 7673, 307, 264, 21510, 4471, 295, 47138, 13, 682, 264, 1036, 2445, 611, 11, 321, 536, 300, 456, 307, 257, 3732, 51280], "temperature": 0.0, "avg_logprob": -0.11274668041028474, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.00043715437641367316}, {"id": 422, "seek": 248000, "start": 2498.32, "end": 2506.64, "text": " distance here, a squared L2 distance between x and f of c. Now that's something we can generalize", "tokens": [51280, 4560, 510, 11, 257, 8889, 441, 17, 4560, 1296, 2031, 293, 283, 295, 269, 13, 823, 300, 311, 746, 321, 393, 2674, 1125, 51696], "temperature": 0.0, "avg_logprob": -0.11274668041028474, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.00043715437641367316}, {"id": 423, "seek": 250664, "start": 2506.64, "end": 2517.2799999999997, "text": " to manifold to. And this is how we go to manifold variational tranquillers. It's conceptually easy.", "tokens": [50364, 281, 47138, 281, 13, 400, 341, 307, 577, 321, 352, 281, 47138, 3034, 1478, 17640, 373, 433, 13, 467, 311, 3410, 671, 1858, 13, 50896], "temperature": 0.0, "avg_logprob": -0.1789435587431255, "compression_ratio": 1.5502645502645502, "no_speech_prob": 0.00040436419658362865}, {"id": 424, "seek": 250664, "start": 2517.2799999999997, "end": 2524.8799999999997, "text": " We replace the addition by the exponential map. And now we have a generative model that outputs", "tokens": [50896, 492, 7406, 264, 4500, 538, 264, 21510, 4471, 13, 400, 586, 321, 362, 257, 1337, 1166, 2316, 300, 23930, 51276], "temperature": 0.0, "avg_logprob": -0.1789435587431255, "compression_ratio": 1.5502645502645502, "no_speech_prob": 0.00040436419658362865}, {"id": 425, "seek": 250664, "start": 2524.8799999999997, "end": 2534.3199999999997, "text": " points on the manifold. And that goes like this. We find again zi on the latent space RL. And now", "tokens": [51276, 2793, 322, 264, 47138, 13, 400, 300, 1709, 411, 341, 13, 492, 915, 797, 710, 72, 322, 264, 48994, 1901, 497, 43, 13, 400, 586, 51748], "temperature": 0.0, "avg_logprob": -0.1789435587431255, "compression_ratio": 1.5502645502645502, "no_speech_prob": 0.00040436419658362865}, {"id": 426, "seek": 253432, "start": 2534.32, "end": 2542.4, "text": " our decoder is going to be able to map zi on the point on manifold to which we add noise by adding", "tokens": [50364, 527, 979, 19866, 307, 516, 281, 312, 1075, 281, 4471, 710, 72, 322, 264, 935, 322, 47138, 281, 597, 321, 909, 5658, 538, 5127, 50768], "temperature": 0.0, "avg_logprob": -0.1263701556480094, "compression_ratio": 1.680473372781065, "no_speech_prob": 0.00034584588138386607}, {"id": 427, "seek": 253432, "start": 2542.4, "end": 2551.04, "text": " a tangent vector to the point in group. So we have generalized the generative model to", "tokens": [50768, 257, 27747, 8062, 281, 264, 935, 294, 1594, 13, 407, 321, 362, 44498, 264, 1337, 1166, 2316, 281, 51200], "temperature": 0.0, "avg_logprob": -0.1263701556480094, "compression_ratio": 1.680473372781065, "no_speech_prob": 0.00034584588138386607}, {"id": 428, "seek": 253432, "start": 2551.04, "end": 2558.0800000000004, "text": " manifolds. We need to generalize the inference, which is how do we learn in this generative model.", "tokens": [51200, 8173, 31518, 13, 492, 643, 281, 2674, 1125, 264, 38253, 11, 597, 307, 577, 360, 321, 1466, 294, 341, 1337, 1166, 2316, 13, 51552], "temperature": 0.0, "avg_logprob": -0.1263701556480094, "compression_ratio": 1.680473372781065, "no_speech_prob": 0.00034584588138386607}, {"id": 429, "seek": 255808, "start": 2559.04, "end": 2566.72, "text": " We have a very similar architecture that has an encoder and a decoder. But then what really changes", "tokens": [50412, 492, 362, 257, 588, 2531, 9482, 300, 575, 364, 2058, 19866, 293, 257, 979, 19866, 13, 583, 550, 437, 534, 2962, 50796], "temperature": 0.0, "avg_logprob": -0.15208370384128614, "compression_ratio": 1.8018867924528301, "no_speech_prob": 0.0006261991220526397}, {"id": 430, "seek": 255808, "start": 2566.72, "end": 2573.7599999999998, "text": " now is the loss function that you can still formulate as an elbow of a different log likelihood,", "tokens": [50796, 586, 307, 264, 4470, 2445, 300, 291, 393, 920, 47881, 382, 364, 18507, 295, 257, 819, 3565, 22119, 11, 51148], "temperature": 0.0, "avg_logprob": -0.15208370384128614, "compression_ratio": 1.8018867924528301, "no_speech_prob": 0.0006261991220526397}, {"id": 431, "seek": 255808, "start": 2573.7599999999998, "end": 2579.52, "text": " just because the generative model is different. And I've put in red the terms that change,", "tokens": [51148, 445, 570, 264, 1337, 1166, 2316, 307, 819, 13, 400, 286, 600, 829, 294, 2182, 264, 2115, 300, 1319, 11, 51436], "temperature": 0.0, "avg_logprob": -0.15208370384128614, "compression_ratio": 1.8018867924528301, "no_speech_prob": 0.0006261991220526397}, {"id": 432, "seek": 255808, "start": 2580.16, "end": 2585.12, "text": " because the generative model is different, the log likelihood is different, the evidence lower", "tokens": [51468, 570, 264, 1337, 1166, 2316, 307, 819, 11, 264, 3565, 22119, 307, 819, 11, 264, 4467, 3126, 51716], "temperature": 0.0, "avg_logprob": -0.15208370384128614, "compression_ratio": 1.8018867924528301, "no_speech_prob": 0.0006261991220526397}, {"id": 433, "seek": 258512, "start": 2585.2, "end": 2590.7999999999997, "text": " bound or the elbow is different. And therefore you can show that it has this formula.", "tokens": [50368, 5472, 420, 264, 18507, 307, 819, 13, 400, 4412, 291, 393, 855, 300, 309, 575, 341, 8513, 13, 50648], "temperature": 0.0, "avg_logprob": -0.22042420506477356, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.0006663274252787232}, {"id": 434, "seek": 258512, "start": 2592.16, "end": 2599.3599999999997, "text": " We could have guessed this formula by converting the elbow plus as it was written on vector spaces", "tokens": [50716, 492, 727, 362, 21852, 341, 8513, 538, 29942, 264, 18507, 1804, 382, 309, 390, 3720, 322, 8062, 7673, 51076], "temperature": 0.0, "avg_logprob": -0.22042420506477356, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.0006663274252787232}, {"id": 435, "seek": 258512, "start": 2599.3599999999997, "end": 2608.3199999999997, "text": " to its expression on manifolds. And so this allows us to learn non-giardasec", "tokens": [51076, 281, 1080, 6114, 322, 8173, 31518, 13, 400, 370, 341, 4045, 505, 281, 1466, 2107, 12, 7834, 515, 651, 66, 51524], "temperature": 0.0, "avg_logprob": -0.22042420506477356, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.0006663274252787232}, {"id": 436, "seek": 260832, "start": 2608.96, "end": 2617.36, "text": " sub-manifolds of a given manifold. I think the only competing method that was able to do that", "tokens": [50396, 1422, 12, 1601, 351, 31518, 295, 257, 2212, 47138, 13, 286, 519, 264, 787, 15439, 3170, 300, 390, 1075, 281, 360, 300, 50816], "temperature": 0.0, "avg_logprob": -0.22112325032552083, "compression_ratio": 1.5459770114942528, "no_speech_prob": 0.005460202693939209}, {"id": 437, "seek": 260832, "start": 2617.36, "end": 2621.44, "text": " before was relying on Monte Carlo, for example, from the posterior. And therefore", "tokens": [50816, 949, 390, 24140, 322, 38105, 45112, 11, 337, 1365, 11, 490, 264, 33529, 13, 400, 4412, 51020], "temperature": 0.0, "avg_logprob": -0.22112325032552083, "compression_ratio": 1.5459770114942528, "no_speech_prob": 0.005460202693939209}, {"id": 438, "seek": 260832, "start": 2625.76, "end": 2633.6800000000003, "text": " so using VAE we're able to learn non-giardasec sub-manifold of a manifold. We're also able to", "tokens": [51236, 370, 1228, 18527, 36, 321, 434, 1075, 281, 1466, 2107, 12, 7834, 515, 651, 66, 1422, 12, 1601, 351, 2641, 295, 257, 47138, 13, 492, 434, 611, 1075, 281, 51632], "temperature": 0.0, "avg_logprob": -0.22112325032552083, "compression_ratio": 1.5459770114942528, "no_speech_prob": 0.005460202693939209}, {"id": 439, "seek": 263368, "start": 2633.68, "end": 2642.72, "text": " give some insights of what was observed in the literature about VAE, which was about this", "tokens": [50364, 976, 512, 14310, 295, 437, 390, 13095, 294, 264, 10394, 466, 18527, 36, 11, 597, 390, 466, 341, 50816], "temperature": 0.0, "avg_logprob": -0.13787116426410098, "compression_ratio": 1.4744897959183674, "no_speech_prob": 0.002627263544127345}, {"id": 440, "seek": 263368, "start": 2642.72, "end": 2650.16, "text": " statement that you can see by Chao Edel in 2018. But I was saying that in VAE the experiment showed", "tokens": [50816, 5629, 300, 291, 393, 536, 538, 12374, 78, 3977, 338, 294, 6096, 13, 583, 286, 390, 1566, 300, 294, 18527, 36, 264, 5120, 4712, 51188], "temperature": 0.0, "avg_logprob": -0.13787116426410098, "compression_ratio": 1.4744897959183674, "no_speech_prob": 0.002627263544127345}, {"id": 441, "seek": 263368, "start": 2650.72, "end": 2656.3199999999997, "text": " that these models represent real image data with manifolds that have surprisingly little curvature.", "tokens": [51216, 300, 613, 5245, 2906, 957, 3256, 1412, 365, 8173, 31518, 300, 362, 17600, 707, 37638, 13, 51496], "temperature": 0.0, "avg_logprob": -0.13787116426410098, "compression_ratio": 1.4744897959183674, "no_speech_prob": 0.002627263544127345}, {"id": 442, "seek": 265632, "start": 2657.2000000000003, "end": 2663.6000000000004, "text": " Long story short, we are able through a geometric analysis of geometric VAE", "tokens": [50408, 8282, 1657, 2099, 11, 321, 366, 1075, 807, 257, 33246, 5215, 295, 33246, 18527, 36, 50728], "temperature": 0.0, "avg_logprob": -0.16781218051910402, "compression_ratio": 1.5150214592274678, "no_speech_prob": 0.0006458364077843726}, {"id": 443, "seek": 265632, "start": 2663.6000000000004, "end": 2670.8, "text": " that gives insight on VAE to explain why they find latent spaces with shockingly little curvature.", "tokens": [50728, 300, 2709, 11269, 322, 18527, 36, 281, 2903, 983, 436, 915, 48994, 7673, 365, 5588, 12163, 707, 37638, 13, 51088], "temperature": 0.0, "avg_logprob": -0.16781218051910402, "compression_ratio": 1.5150214592274678, "no_speech_prob": 0.0006458364077843726}, {"id": 444, "seek": 265632, "start": 2673.44, "end": 2678.4, "text": " So to conclude, this is the type of pipeline that we're interested in our lab, we want to do shape", "tokens": [51220, 407, 281, 16886, 11, 341, 307, 264, 2010, 295, 15517, 300, 321, 434, 3102, 294, 527, 2715, 11, 321, 528, 281, 360, 3909, 51468], "temperature": 0.0, "avg_logprob": -0.16781218051910402, "compression_ratio": 1.5150214592274678, "no_speech_prob": 0.0006458364077843726}, {"id": 445, "seek": 265632, "start": 2678.4, "end": 2685.36, "text": " learning in biomedical imaging. I've explained how shape modeling gives rise to", "tokens": [51468, 2539, 294, 49775, 25036, 13, 286, 600, 8825, 577, 3909, 15983, 2709, 6272, 281, 51816], "temperature": 0.0, "avg_logprob": -0.16781218051910402, "compression_ratio": 1.5150214592274678, "no_speech_prob": 0.0006458364077843726}, {"id": 446, "seek": 268632, "start": 2686.32, "end": 2692.56, "text": " overwhelming operations on excessive data spaces that are manifolds, and therefore how statistical", "tokens": [50364, 13373, 7705, 322, 22704, 1412, 7673, 300, 366, 8173, 31518, 11, 293, 4412, 577, 22820, 50676], "temperature": 0.0, "avg_logprob": -0.25688156524261874, "compression_ratio": 1.6342592592592593, "no_speech_prob": 0.0006658205529674888}, {"id": 447, "seek": 268632, "start": 2692.56, "end": 2697.6000000000004, "text": " learning, machine learning, and deep learning can generalize to these spaces if you want to shape", "tokens": [50676, 2539, 11, 3479, 2539, 11, 293, 2452, 2539, 393, 2674, 1125, 281, 613, 7673, 498, 291, 528, 281, 3909, 50928], "temperature": 0.0, "avg_logprob": -0.25688156524261874, "compression_ratio": 1.6342592592592593, "no_speech_prob": 0.0006658205529674888}, {"id": 448, "seek": 268632, "start": 2697.6000000000004, "end": 2706.6400000000003, "text": " deep learning. Many thanks to our lab at UCSB and many thanks to the organization that are funding", "tokens": [50928, 2452, 2539, 13, 5126, 3231, 281, 527, 2715, 412, 14079, 50, 33, 293, 867, 3231, 281, 264, 4475, 300, 366, 6137, 51380], "temperature": 0.0, "avg_logprob": -0.25688156524261874, "compression_ratio": 1.6342592592592593, "no_speech_prob": 0.0006658205529674888}, {"id": 449, "seek": 268632, "start": 2706.6400000000003, "end": 2710.7200000000003, "text": " this research, and I'll be happy to answer any questions.", "tokens": [51380, 341, 2132, 11, 293, 286, 603, 312, 2055, 281, 1867, 604, 1651, 13, 51584], "temperature": 0.0, "avg_logprob": -0.25688156524261874, "compression_ratio": 1.6342592592592593, "no_speech_prob": 0.0006658205529674888}], "language": "en"}