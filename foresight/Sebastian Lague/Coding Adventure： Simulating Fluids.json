{"text": " Hello everyone, and welcome to another episode of Coding Adventures. Today, I'd like to dive into the world of fluid simulations. So to begin with, let's draw a circle. Very nice. This circle represents a tiny bit of water, or whatever fluid we want to imagine, and it's going to move around in response to various forces. For instance, gravity is probably a good place to start. So back in the code, I'll add in a gravity variable, and let's also keep track of the particle's position and velocity. Each time step, we'll then want it to be accelerated downward by gravity, and to then move according to its new velocity. Let's take a look. Okay, not bad, but it is falling off the screen, which is a bit annoying, so I've added a tiny function that just checks if the particle has moved outside of a box, and if so, we shove it back into the box, and send it bouncing off in the opposite direction. I'd actually also like to multiply the velocity by some collision-dumping factor between 0 and 1 here, so that we can control how much energy it loses with each bounce. Alright, so we can set up our little bounding box, and turn on the gravity again, and off we go bouncing. By the way, I've also made it so that we can control the display size of the particle here. Okay, let's then also try out our collision-dumping setting, and we can see the particle now bounces low and low each time until it comes to a stop. Believe it or not though, one particle is not enough particles to simulate a fluid, so I've quickly upgraded our position and velocity variables to instead store a whole array of positions and velocities, which we can then loop over and just do the same update as before to each of them. I've also created a simple function that runs at the beginning to set up the particles in a little grid arrangement, just so that they're not all on top of one another. So let's make a bunch of particles, and I'll quickly tweak the size and spacing over here to something more reasonable, and then we can let this run. Okay, there's a pretty clear problem though, which is that the particles are all just collapsing on top of one another, so I guess we need some sort of force to push them apart. I'm curious to learn how this is typically handled in the fluid simulation world, so I'm going to do some reading. I found a bunch of intriguing particle-based fluid papers, and I've just spent the last few hours trying to work my way through those. Honestly, most of the maths has gone well over my head, as it often does, but the broad ideas at least are encouragingly simple, so I think my goal for today is not to try and make some amazingly accurate simulation, but just to build a rough starting point from which we can delve deeper into the maths and physics in the future, when I'm hopefully a little bit smarter. Anyway, the first step to fixing that overlapping particle problem we were having is to be able to estimate the density of our fluid at any point. So I've just scattered our particles around randomly for this example, and of course since we're imagining that this represents some kind of fluid, in reality there should be way more particles in this, but we're always going to be limited by what our computers can handle, so to approximate reality, we can just cheat a little bit by blurring or smoothing out the few that we have, so that it appears more as a continuous field than a bunch of individual points. This simple idea is the basis of smoothed particle hydrodynamics, a technique introduced back in the 70s to help solve astrophysics problems and further our understanding of the universe, which today we'll be using for the equally lofty goal of making some little pixels go splash splash for our amusement. Alright, so to see how we're going to calculate this sort of density field we have here, let's zoom in on a single particle and define a smoothing radius, which gives us this circle of influence around the particle, where it will have maximum influence at the centre, falling off to no influence at all at the outer edge. Let's draw a little graph of this behaviour, so on the x-axis we'll have the distance from the centre of the particle, and because negative distance doesn't make a huge amount of sense, I'll just make the left side of the graph be a mirror of the positive side. Then the y-axis will represent the influence of the particle at any given distance, and let's say for now that our smoothing radius is just 1. So a simple simple function we could use would be something like this, just subtracting the distance from the radius and clamping it to never go below zero, and here's what that gives us. This is not very smooth though, so we could take that straight line and qubit for example, which will ease it out as it approaches zero. Another option if we wanted to be smooth at the start as well, would be to also square the radius and distance before subtracting them, and here's how that comes out. Obviously we could also try different powers or different functions altogether, I think it's mostly a case of just playing around and seeing what works best. But let's go with this one for now. So I've used that to write this little density function, which takes in the point we want to find the density at, and then for each particle it gets the distance to that sample point, which determines how much influence the particle has at that location, and then it simply increases the density by the particle's mass, multiplied by the influence value. And the mass I've just defined to always be one for simplicity. So let's test this quickly with an evenly spaced grid of particles, and I'll just try sampling the density at the centre here, with a radius of 0.5 for example. Now at the moment the density is coming to about 0.48, but if we squish the particles closer together, we can see that the density value goes up, which makes sense, and if we move them further apart, it goes down of course. But what about if we increase the smoothing radius? Well, our density value has just shut up through the roof, which is very concerning, because making the radius bigger should only make the result more blurry, which for this uniform grid of particles should actually have no effect on the density at all. So let's think about this a bit. For each particle we are calculating an influence value, which we could draw as a height, and here we can of course see the shape of our smoothing function emerge. Now we're effectively just adding all these heights together to create our density value, but it's kind of helpful to note that if we were to first also multiply the heights by the width and breadth of these little boxes I've drawn here, what we'd actually be doing is estimating the volume of the smoothing function. So with that in mind, I think it's reasonable to say that if we want the density to stay the same as we change the smoothing radius, then what we'll need to do is make sure that the volume of our smoothing function remains the same when we change the smoothing radius. That means we're going to need to calculate its volume, or make Wolfram calculated for us at any rate, and that is come out to pi times the smoothing radius to the power h divided by 4. We can then just go back to our smoothing function and calculate the volume in here, and then simply divide the output by the volume, which means that now the new volume of the function will always be 1. Let's quickly make sure this is working, so the density is 187 at the moment, and now if we change the smoothing radius that should stay the same, which it does. Of course if we make the radius too small, the results will get a little dodgy since there just aren't enough particles, but apart from that we now have a nice way of determining the density at any point, with whatever smoothing radius we choose to use. Ok, so let's return to our random arrangement of particles, and we can now properly visualize the density values here as we increase the smoothing radius. Now we're claiming that this represents a fluid, so one would probably assume it's a guess at the moment, because we have all these regions with different densities. But I'm more interested in simulating liquids today, which in practical terms are incompressible, meaning their molecules are packed together as tightly as they can be, and so we'd expect the density to be the same everywhere. For our simulation to behave at least somewhat like a liquid then, we're going to need to rapidly correct these density differences by moving particles from areas of high density towards areas of low density. So we need to figure out how to calculate that, but I started to get a bit confused at this point while I was doing my research, so I'd like to take a step back for a moment and just play around a bit with an abstract example to try and wrap my head around some stuff first, and then we'll come back and apply what we've learnt to our actual problem. So here's a simple little function that takes in a point in 2D space and outputs a single value, which looks like this. And what it represents is nothing at all, it's just a made up function that we're going to try and represent with particles to hopefully gain a better understanding of this whole smooth particle business we're working with today. So I've now added some code that spawns in a bunch of particles at random positions, and each of these just looks up the value of the example function at its location and stores that in this vaguely named particle properties array. Now we're going to pretend that we no longer have access to that example function for whatever reason, so we only know the values at the particle positions, and our first goal is to simply approximate the missing values. To do that, we'll use the same smoothing idea from when we calculated the density earlier. So I've made this little calculate property function that takes in a point in space, loops over all the particles, and just adds up the values of their properties multiplied by the smoothing function, since again that just tells us how much influence the particle has at the current point, and then also multiplied by the mass, since that effectively scales how much influence the particles have. Let's see how that comes out, so here's the original function again just for reference, and here's our approximation. Obviously, the shape isn't perfect, but we could simply use more particles to improve that. What's more concerning though is that the values are clearly being greatly exaggerated. Now we could try to correct this by reducing the particle mass, but that just reveals a deeper problem, which is that the values are being particularly exaggerated in regions of high particle density, since obviously more values are being added together there than in regions of low density. So to fix that, all we actually need to do is calculate the density at each particle, using the function we wrote earlier of course, and then divide each particle's contribution by its density. Now our approximated result looks like this, without needing to make any adjustments to the mass, which is a whole lot better, and it's reasonably close to the original function. So what we've arrived at here is actually one of the core equations of this whole technique, which says that to calculate some property a at any position x, we just need to loop over all the particles and add together the value of that property that's stored in each particle, multiplied by the particle's mass, divided by its density, and finally multiplied by the smoothing function, given the distance between the particle and the sample point. What's interesting to note here is, say that the property we want to calculate with this equation is the particle's density. In that case, we replace a with the density, which then cancels out with the density over here, leaving us with just mass times the smoothing function, which is exactly what we came up with in the beginning, so that bit of math seems to check out at least. Okay, that's nice and all, but what we're more interested in right now than calculating the value of a property at any point, is calculating in which direction it's most rapidly changing, since that's essential to our problem of correcting the density in our fluid. So I've started writing this little calculate gradient function to do that, and all this does is define a tiny step size, and then figure out how much the value changes if we take that tiny step along the x and y axes, using the calculate property function we just wrote. And the estimated gradient is just those two changes, each divided by the size of the step that we talk. Let's try it out, so I've drawn in some little arrows to visualize the gradients at different points, and just visually it looks like these are all correctly pointing along the direction where the values are most rapidly increasing. So that's great. What's less great is that it's taking almost 20 seconds to calculate all of these, which is ridiculously slow. Unfortunately though, there is a more efficient approach. Imagine we have just a single particle, and I'll draw on the smoothing radius here as well, and we're trying to calculate the gradient of whatever property at this point over here. Well, first of all, the direction in which that property will most rapidly be increasing is either directly towards the particle, or directly away from it if the property is negative, so that's easy enough. The gradient doesn't only tell us the direction though, but also how fast the property is changing, and that depends purely on our smoothing function. At the current distance, we can see that the smoothing function isn't very steep, which means that the property will be changing quite slowly over here, whereas of course if our sample point was over here for example, then it would be changing a lot more rapidly. So after struggling to remember how basic calculus works for a few minutes, I finally figured out the equation for the slope of the smoothing function, which I've just translated into code over here. And that means that we can now easily look up the slope value at any distance. So let's return to our fast attempt at the gradient function, and I'll delete the old code and replace it with our CalculateProperty code, since that's almost exactly what we need, except since we want to know the gradient now, we'll multiply not by the smoothing function, but by the slope of the smoothing function, and then also by the direction towards the current particle. By summing up all these individual gradients, we should logically get the overall gradient. Then if we return to our little visualization and just run it again, it should look exactly the same as before. Which it doesn't, I guess I got the direction back to front, so I'll just stick a minus sign in there quickly. I come from the trial and error school of mathematics, but now it does look the same as before. This optimization has taken us from 20 seconds down to about 5, which is still uselessly slow, but headed in the right direction at least. Okay, I've just been having another look at our gradient function, and we definitely need to stop calling CalculateDensity all the time. I somehow forgot already that that's also looping over all the particles. No wonder this is so slow. So what we can do is just create an array of density values, and then pre-calculate those for each particle, so that we can just use those cached values in our gradient function. That brings our computation time down from 5 seconds to 18 milliseconds. I probably should have started with that. Anyway, it's still not fantastic, but it's at least usable for now. So let's return at last to our little density test over here, and see if we can apply this gradient stuff to make the density be the same everywhere. So in the code, I've defined a target density that we want to aim for, along with a pressure multiplier, which is just how strongly we're going to push the particles to try and reach that density. Then I've also added this little function for converting the density to a kind of pressure value, and this just looks at how far away the density is from what we want it to be, and then multiplies that by the pressure multiplier. From what I understand, this isn't really a super realistic way to calculate pressures in a liquid, it more so describes the behavior of gases, but it still seems to be a popular choice for its simplicity, so let's stick with it for now at least. I would like to quickly visualize these values, so I've set up three different colors over here, one for the regions where it's negative, just meaning that the density is lower than we want it to be, another for where the value is positive, meaning of course that the density is higher than we want it to be, and finally one for the boundary between them, where the density is just right. I'll also change the particle color to black, so that it stands out a bit better here. Okay, so let's finally get these particles moving along the pressure gradient, and for that we can just use the gradient function we wrote, which I'll rename to calculate pressure force, and then the property we're interested in here is of course the pressure, so let's substitute in our little pressure calculation. Then our simulation update loop now looks like this, we still have the gravity, position, and collision stuff from before, but I've added in the density caching we decided to do. We still need to actually apply the pressure forces here though, so I'll make another loop quickly to calculate those for each of the particles, and then we know that force equals mass times acceleration, so acceleration is force over mass. So my first thought was to just calculate the acceleration like this, but actually we're thinking about the movement of tiny volumes of fluid here, and density is the mass per volume, so it's in fact the density that we want to use instead. Alright, all that's left then is to just increase the particles of velocity by this acceleration, and we can finally try it out. This has been a long time coming, so let's get a little drumroll going. Ah, the curse of the drumroll continues. Okay, the positions are all not a number I see, so most likely we're dividing by zero somewhere. Oh, of course, we're being given the position of a particle here, but then we're also looping over all the particles and finding the distance between the two. And that's where everything's going wrong. I guess what I'll do is just have this function take in the particle index instead of the position, and that way we can very easily just skip over the case where the two particles are the same. Okay, I just need to fix this up quickly, and I suppose it is technically possible for two different particles to be in the same position, so if that edge case occurs, let's just pick a random direction then. Alright, let's try this out again. Well, at least everything hasn't blinked out of existence, but the particles are getting more dense, which is the opposite of what we want. I guess I need to stick another minus sign in there somewhere. Let's see if this works now at the third time. Okay, that's\u2026 that was looking promising for a moment there, for a brief instant I thought it was working. But there's still a lot more red areas than I'm hoping to see. Ideally, the whole screen should turn white, since that represents our target density. So to try and figure out what's going on, I want to see what happens if, instead of adding the acceleration to the velocity, we just assign it directly, so we're removing any inertia from the particles, they're just purely moving based on the current pressure force. Okay, if we run this now, nothing happens, but that's fine, we aren't accumulating velocity anymore, so I guess we just need to turn the pressure multiplier up really high. Alright, that looks interesting. I am a bit surprised by how close together some of these particles are, although they seem to gradually be pushing each other apart. And I actually remember one of the papers mentioning this potential problem with the smoothing function we're using, since its slope becomes very shallow as the distance becomes small, meaning that our pressure force will also be small when the particles are close together. That seems odd, so let's maybe ditch this nice smooth curve for the spiky version instead, since of course the slope of this one just gets steeper towards zero. So I had to do the volume and derivative calculations again, but ended up with these two functions here. Plugging those in, we can see our little map looks just ever so slightly different, and then I'm going to turn up the pressure multiplier again now, and see what happens. Okay, that's looking a lot better actually. The question now though is what does it look like if we put the acceleration back to how it's supposed to be. So I've changed it back, and I'm going to try running this again. Let's maybe try increasing the pressure multiplier a bit, so that the particles can react more quickly. That's looking reasonably good I think, although maybe I'm imagining this, but it seems to be getting worse over time. Okay, I'm definitely not imagining it. So another thing we need to think about is Newton's third law of motion. Every force has an equal and opposite reaction force. So when we're adding on this pressure force between the current particle and some other particle, we want to make sure that the other particle experiences the same force, just in the other direction. I've seen a bunch of different suggestions on how to actually do this, but a nice simple version is to calculate this shared pressure, which is literally just the average of the pressure values calculated at both particles. So let's try that out quickly, and I'll just increase the pressure multiplier again. And this does seem to have made a pretty big difference. I guess maybe that Newton guy was onto something. Now we're only dealing with a few hundred particles at the moment, which is not very many, so let's ramp this up to a few thousand instead. And this is running at 5 frames per second. So we'd better start optimizing. And by far the most critical place to do that is when we're calculating the densities and pressure forces, we should rarely avoid looping over all the particles that lie outside of the smoothing radius, since those don't contribute anything, and they're slowing us down immensely. To do this, we're going to need to chop space up into a grid, and we'll choose the size of the grid cells to be the same as our smoothing radius, since that means, if we imagine there's a bunch of particles on here, that means that to find the particles inside of the smoothing radius, we only need to consider the 3x3 grid of cells around the center of our circle. And in that way of course, we cut out a huge amount of unnecessary work. Now to actually implement this, we could say that each cell has its own list that grows or shrinks to hold however many particles are currently inside of it. But we're probably going to want to convert the whole simulation to a compute shader at some point to run on the GPU, and there we need to be able to specify ahead of time how much memory we're going to use. So I'd like to experiment with a different GPU friendly approach, which I've been reading about in this paper here. I'm going to modify it very slightly though, so that we don't need to know the dimensions of the grid ahead of time, meaning that particles can travel anywhere in the world, and it'll still work. So what we'll do is create a single array with at least as many entries as we have particles, so here it has 10 entries, meaning in this case we could have at most 10 particles. Then for each of these particles, we're going to calculate the coordinate of the cell that it's in. So for example particle 0, which happens to be this one over here, is in the cell 2,0. We need to turn that coordinate into a single number to make it easy to work with though, so we can just do something like multiply the x and y by two different prime numbers, and then add them together to get some arbitrary hash value. We can then wrap that around the length of the array so that it becomes a valid index, 3 in this case, and let's call that our cell key, not to be confused with the seal people. So since this was point 0, we'll store the cell key over here at index 0 in the array. And the next point, it turns out, has a key of 6, and so we'll record that in the next place. And so on and so forth for all of the particles that we have. Now we want the points that share a cell to be next to one another in this array, so that we can efficiently loop over them. Of course if they're in the same cell, they're going to have the same cell key, so we can simply sort the list based on those keys to do that. And now we can easily see from this array that particles 2, 5 and 7 are all together in the same cell, particle 0 is in a cell all by itself, and so on. Anyway, let's call this array our spatial lookup, because that sounds nice and fancy, and then the final thing we need to do is create a second array of start indices, which looks like this. To understand this second array, let's just do a quick example. So say we want to know which points are in this cell over here. We would first calculate the cell's key like before, which is 9 in this case. And then we'd proceed to look up the 9th element in the array of start indices, which is this last one over here, the number 6. That lets us know that we need to head over to index 6 in the spatial lookup, in order to find the first entry with the cell key that we're interested in. We can then simply loop over all of those to get the indices of the particles that are in that cell. Unfortunately it is possible for different cells to end up mapping to the same key, which would mess with these results, but we're anyway going to need to do distance checks to see which points are actually inside the smoothing radius, and so that'll get rid of any mistakes. Obviously, having to check extra particles from some other random cell that just happens to have the same key does waste time, but that's what we get for trying to implement an infinite grid with a sadly non-infinite amount of memory. Anyway, turning this concept into code didn't go as smoothly as it possibly could have, but after a bit of frustration, here's what I finally ended up with. We have a function for updating the lookup whenever the points have moved, and this just calculates the cell key for every particle, and records that along with the particle index. The array is then sorted based on those keys, and lastly the start indices are calculated, simply by testing if each key is the same as the key that came before it, because if not then it must be the first occurrence of that key, and we can record its index as the start index. Here are the little helper functions, by the way, for calculating the cell coordinate, hash, and key. Then finally there's the function that allows us to actually find all of the points within the radius of some given sample point. This works as we've seen by just looping over the 3x3 block of cells around that sample point, and calculating each of their keys. Each key is then used to look up the start index for that cell, so we can loop over all the points in the cell, and of course once we reach a point that has a different key, we just exit out of the loop. All that remains then is to do a quick distance check to make sure the point is actually inside the circle, and then we can do whatever we want with it. Trying this out now, we've gone from barely 5 frames per second up to 120, so there was a reasonable success, but I'd be a lot happier about it if our simulation wasn't in total chaos over here. One clunky way I found to improve this is to simply start off with a really low pressure multiplier. This way the particles don't have such a huge initial burst of acceleration, and they can spread out a little, and then we just gradually increase the multiplier, and it seems to work a bit better at least. That's not really a usable solution though, so I've just been implementing an IGRI read about where we basically predict what the next position of each particle is going to be, simply based on the current velocity, and use those predicted positions when calculating the densities and pressure forces. I guess this could help the particles to better react to upcoming situations, and maybe compensate a bit for the fact that time is obviously not continuous in a computer simulation, but rather broken up into discrete steps. Okay, let's try it out. I honestly don't see it making a big difference though. Never mind, it's actually making a pretty massive difference I'd say. Well, that's a nice surprise. Also fun, I've quickly gone into the particle rendering code I have here, and just set it up so that we can visualise the speed of the particles with a colour. Then here's a little gradient I made for that, so the slowest particles will appear blue, fading to red for the fastest particles. I also added in some simple controls for things like pausing the simulation, stepping through frame by frame, and resetting it. Alright, I've been playing around with this some more, and one thing I've noticed is that it behaves very inconsistently at different simulation frame rates. Here's a little grid of simulations I set up to observe this problem, so we're going from 60 simulation steps per second on the top left, to almost 1000 steps per second on the bottom right. And as we can see here, if the number of steps is higher, meaning the time step is smaller, and so we're predicting less fine to the future, the particles take longer to settle down. So even though this feels a bit wrong to me, I'm going to try just removing the delta time here, and use a constant look ahead factor instead. Let's then run the same comparison again, and interestingly it is actually behaving a lot more consistently now. Well okay, I guess we'll go with that then. Now I think it'd be fun if we could interact with the particles in some way, so I've written this little function that basically just pulls nearby particles in towards the mouse, or pushes them away if the input strength is negative, which is controlled by left or right clicking. So let's give it a shot, I'm going to start by pushing these particles outwards, and then let's try slicing through the fluid. Alright, I feel like this is slowly starting to get somewhere. Clearly, we haven't really succeeded in our goal of making this fluid incompressible, it's certainly compressing and expanding all over the place, but the density does even out over time, so that's something at least, and we can look into fancier methods to try and solve this better in the future. Anyway, now that this seems to be somewhat working at any rate, I think it's time we brought gravity back into the mix. So I'll reset this quickly, and let's bring in our settings window. I feel like the density could maybe be set a bit higher, so I'll turn that up, and then let's get the simulation going again. Okay, I guess that's a little too high now. So, I'll dial that setting back down a bit. Then, let's turn on the gravity. Wait, that's upside down, let me make it go the other way instead. The particles are quite wild at the moment, so I'll also increase the pressure multiplier to try and drain them in a little. Okay, let's try picking up a ball of water. And dropping it back in. Splash. This is actually working surprisingly well I'd say, I mean I realise I've been droning on for over half an hour already, but all that we've really done is made a bunch of points that don't like to be too close together, but not too far apart either. And while this is obviously far from being super realistic or anything, I think it's still quite fascinating that this fluid-like behaviour has already arisen from just the few little things we've implemented. Anyway, let's see if we can still improve this at least a little bit more today, and perhaps even venture into the third dimension. So a few issues are jumping out to me at the moment. For example, there's the fact that the particles are really tightly squeezed together along the edges here, and that's causing a gap between the rest of the particles since they're trying to get away from that overly dense region. And a similar effect seems to be happening along the surface of the fluid as well. Another thing is that when we have fast-moving particles, such as when starting up the simulation for instance, the fluid seems to be overly chaotic. For example, if we zoom in on a single frame here, we can see from these colours how the velocities are all over the place, even between nearby regions. For this last problem at least, I think it'd be a good idea to try and add a bit of friction between the particles in the fluid, more commonly known as viscosity. So let's actually take a moment to look at the famous Navier-Stokes equations for incompressible fluid flow, which underpin everything that we've been doing. First of all, this equation here just says that the density of the fluid must remain the same everywhere, and I mean, we're trying. Then the other equation tells us that each tiny little volume of fluid is accelerated down the pressure gradient, and that it responds to external forces such as gravity and mice in our case, so we've done both of those terms. But then this slightly scary looking term here is the viscosity, and essentially what it does is cause the velocities of nearby regions of fluid to become blurred together. Now we could implement it this way, but for today at least, I actually want to go with a different approach I've seen that seems much simpler, but still achieves the same sort of thing. So I've added this little function here, which just takes in the index of a particle, and loops over all the other particles within the smoothing radius. For each of those, it then calculates the difference between the velocities of the two particles, and adds that on to the viscosity force, meaning that over time, each particle's velocity will become more like its neighbors, and nearby neighbors have more influence as usual, which is done using this viscosity kernel, for which I've just repurposed that function that we were originally using for the pressure force. Okay, let's try it out. Oh, my settings have been reset, so we're back to no gravity at the moment, but let's see what that looks like. Currently, our viscosity is at zero, so let's turn it up, I'm not sure what a good value would be, let's just try 5 maybe. Nope, definitely not, that looks very strange. My guess is that the viscosity is just way too high at the moment, and so some of these particles are almost exactly matching one another in velocity, and that's causing them to clump together weirdly. So let's reduce it to maybe 0.5 instead, and see how that goes. Okay, this is looking pretty good actually. We can see how the particle velocities are more smoothed out, and so we no longer have those few particles with super high velocities shooting off on their own. I want to see how this looks with gravity enabled again, so I've set up a quick comparison here with a range of different viscosity values, and let's see how it goes. I think the one on the top right looked best to me, but let's see that again quickly. And I'll freeze it here actually, because this gives us a nice view of the increasingly smoothed out results we get with this new artificial viscosity term. Obviously, we don't want to smooth out too much detail though, so I'm going to keep that value pretty low. Okay, now I'm not quite sure yet how to tackle that boundary problem I mentioned earlier, so I'm going to just ignore that for now, and instead work on something else that's bothering me. If we lift up a bunch of water, and then let it go, we can see how it quickly splits up into these little droplets of just a few particles each, which looks a little strange. We could get rid of this behaviour by simply clamping the pressure values that they can't go below zero, meaning that the particles won't pull each other together anymore. So let's try that out. But now the particles are just raining down individually, which doesn't look right either. I guess allowing that negative pressure was giving us a very crude kind of surface tension effect, and so I think until we implement a more accurate version of that in a future video perhaps, we should probably hang on to it. So I'm going to undo that change, and instead I want to try an interesting workaround one of the papers suggested, which is to simply have a second pressure force, purely for pushing apart particles that get too close together. So this is the shape of the smoothing function we're using for our density calculation at the moment, and what the paper recommends is to use another, even spikier version, to calculate what they call the near density. From this near density, we calculate the near pressure, simply by multiplying it by some constant, meaning that this will be a purely repulsive force. So let's try it out quickly, and just for fun, I'm going to see what happens if we make the near pressure multiplier negative. Okay, they just collapse in on one another, which makes sense, so let's then try a positive value. And now I want to try picking up a ball of fluid again, and dropping it. And as we can see, this time it's able to hold its shape a lot better, since the particles are no longer getting pulled into those tiny clusters we saw before. So I think we've succeeded in improving the fluid a bit with these last two changes, although I'm certainly not entirely happy with how it's behaving yet. For example, something that bothers me quite a lot is how it often appears to sort of bounce more like a jelly than a liquid. This is happening pretty much all the time, but we can see a dramatic example if I just let the fluid come to a rest, and then change the target density for example. Now we could get less jiggly results simply by increasing the pressure multiplier, which is often called the stiffness constant by the way. So here I've set up a little test where it has a value of 1000, and if I change the density now, we can see that it does settle down a lot more quickly. But that doesn't come for free though, because the greater the forces in our fluid are, the more simulation steps we need to run per frame to avoid things devolving into chaos. For example, if I just lower the number of steps here slightly, we can see that already we're on the brink of pandemonium. Anyway, I'm sure we'll learn about ways to overcome, or at least improve this problem in the future, but for right now what I'd like to do is finally convert the whole simulation to a computer shader, so that we can run it on the GPU, which excels at doing loads of tiny tasks in parallel, which should be a perfect fit for our particle calculations. I doubt that'll take very long, so I'll see you in a minute. Ok, I kept finding new and creative ways to mess everything up, but this finally seems to be running properly in a computer shader. I'll still need to test the performance with more particles of course, but just glancing at the FPS counter looks promising so far, hovering at around 500 frames per second. By far the trickiest part was translating just one line of code, the array.sort from our neighbourhood search. I ended up spending quite a while trying to figure out how to implement a parallel sorting algorithm called bitonic merge sort to replace it. In particular, I was trying to generate this pattern of lines, and generalize it for any number of inputs. The inputs here are represented by the horizontal lines, and we have 16 of them in this case, meaning that this network can sort 16 values. Let's actually assign a random value to each input, so we can see how this goes. Then each of these little vertical lines represents a pair of inputs that we're going to compare, and potentially swap around. So to start with, we're going to look at each of the 8 pairs that we have over here, and let's say we want to sort from high to low, so in the first pair we have 5 on top and 3 on the bottom, which we're happy with, so that can stay unchanged. In the next pair though, we can see 7 on top and 8 on the bottom, so the bottom is a higher number which is not ok, and we'll need to swap them around. So we can look at all these pairs in parallel, figure out which need to be swapped, and then swap them. Of course this alone is unlikely to sort the list, so once that's done we'll need to continue to the next stage. Here the pairs are arranged a little differently, but the operation is still exactly the same. We can see this first pair has 5 on top, 7 on the bottom, so it will need to swap, as will this pair with 3 on top and 8 on the bottom, and so on. This pattern has been carefully devised by some clever person, such that following it will do all the comparisons required to guarantee that the result is fully sorted by the end. For anyone interested, I'll quickly show the implementation I came up with, so this part runs on the CPU and is responsible for simply looping through each of those patterns, and telling the GPU to sort the pairs. And then here's the code that actually does that pairwise sorting, so it starts by just figuring out which pair of numbers it's actually looking at, and then it compares them to see if they need to be swapped, and if they do, it of course swaps them. Alright, I've been doing some testing with different amounts of particles, so here is 100 particles for example, and I think it's kind of cute watching these little droplets wobble about. Then after that I tried 100,000 particles, but my computer was not happy about that, so there's definitely a lot of room left for optimization. Here's a test with about 40,000 particles though, which seems to be running okay, although I'll have to fine tune the settings of course, because at the moment there are some weird tendrils shooting out of the liquid, and I really don't know why. Or perhaps we could call this a speculative simulation of how liquids might behave on an alien planet. The settings are definitely quite finicky at the moment though, so that's something else I want to improve. Here's another little test I've set up by the way, and this one has an obstacle over here with a gap beneath it, because I just want to see if this simulation is able to keep the height of the liquid the same on both sides. So I'm just going to start bucketing some of this liquid over to the other end here, and then let's grab another blob, and another, and then let's just wait a bit for this to settle down, but already we can see the height gradually leveling out. So even though our simulation is far from being super realistic, it's nice to say at least that it's not entirely unrealistic either. Okay, now as always there's so much more I still want to do, but to end with for today, let's see if we can get this working in the third dimension. This basically just means replacing a bunch of float 2s with float 3s in the compute shader, as well as updating the scaling factors of the various smoothing functions and their and making sure our neighborhood search is aware of this brand new dimension as well, of course. I've also updated the collision function to work in 3D, and I tweaked it to account for the bounding box being moved or rotated as well as scaled, simply by transforming the points and velocities to its local coordinate system, then resolving those the same as before, and then finally transforming them back into world coordinates. My first attempt at running this did not go particularly well, but after some trial and error with the settings I managed to get this rather goopy looking result, and with a few more tweaks from there I was finally able to get something that I was reasonably happy with. So let's just play around with this a bit, I'm going to try squeezing it together, and what's nice about how we implemented the neighborhood search stuff, is that we aren't constrained to any predetermined bounds, so we can stretch this out however much we want as well, and it should still work. Those little waves were looking quite nice I think, so let's actually smush this together again, and then try that out once more. Now another thing to add to my list of a million things I want to improve is how the fluid is actually rendered. These little balls are good for seeing what's going on of course, but it would be nice to make it actually look more fluid like, and I guess some sort of ray matching is probably a good way to approach that, but we'll have to see. So let me actually make a quick note here of my sort of wish list for this project. I want the simulation to be more stable and performant so that we can have many more particles, and I'd like the parameters to be less finicky so it's easier to get good results, and also for the particles to behave better along the boundaries, because it looks really odd at the moment. Another thing that'll be really nice is to be able to do stuff like put little boats or rubber ducks in the water, and just watch them bob about. Then finally of course there's the rendering stuff I just mentioned as well. So plenty of work for the future, but until then I hope you've enjoyed following along with the process so far. Okay, that's all for today, let me know if you have any suggestions for this project or for anything else you'd like to see. Alright, thanks for watching and goodbye.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.32, "text": " Hello everyone, and welcome to another episode of Coding Adventures.", "tokens": [50364, 2425, 1518, 11, 293, 2928, 281, 1071, 3500, 295, 383, 8616, 48818, 13, 50630], "temperature": 0.0, "avg_logprob": -0.1754393970265108, "compression_ratio": 1.5046728971962617, "no_speech_prob": 0.07127179950475693}, {"id": 1, "seek": 0, "start": 5.32, "end": 10.44, "text": " Today, I'd like to dive into the world of fluid simulations.", "tokens": [50630, 2692, 11, 286, 1116, 411, 281, 9192, 666, 264, 1002, 295, 9113, 35138, 13, 50886], "temperature": 0.0, "avg_logprob": -0.1754393970265108, "compression_ratio": 1.5046728971962617, "no_speech_prob": 0.07127179950475693}, {"id": 2, "seek": 0, "start": 10.44, "end": 18.28, "text": " So to begin with, let's draw a circle.", "tokens": [50886, 407, 281, 1841, 365, 11, 718, 311, 2642, 257, 6329, 13, 51278], "temperature": 0.0, "avg_logprob": -0.1754393970265108, "compression_ratio": 1.5046728971962617, "no_speech_prob": 0.07127179950475693}, {"id": 3, "seek": 0, "start": 18.28, "end": 19.96, "text": " Very nice.", "tokens": [51278, 4372, 1481, 13, 51362], "temperature": 0.0, "avg_logprob": -0.1754393970265108, "compression_ratio": 1.5046728971962617, "no_speech_prob": 0.07127179950475693}, {"id": 4, "seek": 0, "start": 19.96, "end": 24.92, "text": " This circle represents a tiny bit of water, or whatever fluid we want to imagine, and", "tokens": [51362, 639, 6329, 8855, 257, 5870, 857, 295, 1281, 11, 420, 2035, 9113, 321, 528, 281, 3811, 11, 293, 51610], "temperature": 0.0, "avg_logprob": -0.1754393970265108, "compression_ratio": 1.5046728971962617, "no_speech_prob": 0.07127179950475693}, {"id": 5, "seek": 0, "start": 24.92, "end": 28.28, "text": " it's going to move around in response to various forces.", "tokens": [51610, 309, 311, 516, 281, 1286, 926, 294, 4134, 281, 3683, 5874, 13, 51778], "temperature": 0.0, "avg_logprob": -0.1754393970265108, "compression_ratio": 1.5046728971962617, "no_speech_prob": 0.07127179950475693}, {"id": 6, "seek": 2828, "start": 28.28, "end": 31.6, "text": " For instance, gravity is probably a good place to start.", "tokens": [50364, 1171, 5197, 11, 12110, 307, 1391, 257, 665, 1081, 281, 722, 13, 50530], "temperature": 0.0, "avg_logprob": -0.15658485889434814, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0010985906701534986}, {"id": 7, "seek": 2828, "start": 31.6, "end": 36.0, "text": " So back in the code, I'll add in a gravity variable, and let's also keep track of the", "tokens": [50530, 407, 646, 294, 264, 3089, 11, 286, 603, 909, 294, 257, 12110, 7006, 11, 293, 718, 311, 611, 1066, 2837, 295, 264, 50750], "temperature": 0.0, "avg_logprob": -0.15658485889434814, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0010985906701534986}, {"id": 8, "seek": 2828, "start": 36.0, "end": 39.88, "text": " particle's position and velocity.", "tokens": [50750, 12359, 311, 2535, 293, 9269, 13, 50944], "temperature": 0.0, "avg_logprob": -0.15658485889434814, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0010985906701534986}, {"id": 9, "seek": 2828, "start": 39.88, "end": 44.28, "text": " Each time step, we'll then want it to be accelerated downward by gravity, and to then", "tokens": [50944, 6947, 565, 1823, 11, 321, 603, 550, 528, 309, 281, 312, 29763, 24805, 538, 12110, 11, 293, 281, 550, 51164], "temperature": 0.0, "avg_logprob": -0.15658485889434814, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0010985906701534986}, {"id": 10, "seek": 2828, "start": 44.28, "end": 47.84, "text": " move according to its new velocity.", "tokens": [51164, 1286, 4650, 281, 1080, 777, 9269, 13, 51342], "temperature": 0.0, "avg_logprob": -0.15658485889434814, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0010985906701534986}, {"id": 11, "seek": 2828, "start": 47.84, "end": 50.0, "text": " Let's take a look.", "tokens": [51342, 961, 311, 747, 257, 574, 13, 51450], "temperature": 0.0, "avg_logprob": -0.15658485889434814, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0010985906701534986}, {"id": 12, "seek": 2828, "start": 50.0, "end": 55.92, "text": " Okay, not bad, but it is falling off the screen, which is a bit annoying, so I've added a", "tokens": [51450, 1033, 11, 406, 1578, 11, 457, 309, 307, 7440, 766, 264, 2568, 11, 597, 307, 257, 857, 11304, 11, 370, 286, 600, 3869, 257, 51746], "temperature": 0.0, "avg_logprob": -0.15658485889434814, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0010985906701534986}, {"id": 13, "seek": 5592, "start": 55.92, "end": 60.56, "text": " tiny function that just checks if the particle has moved outside of a box, and if so, we", "tokens": [50364, 5870, 2445, 300, 445, 13834, 498, 264, 12359, 575, 4259, 2380, 295, 257, 2424, 11, 293, 498, 370, 11, 321, 50596], "temperature": 0.0, "avg_logprob": -0.15310559230568135, "compression_ratio": 1.6529850746268657, "no_speech_prob": 0.004754651337862015}, {"id": 14, "seek": 5592, "start": 60.56, "end": 65.32000000000001, "text": " shove it back into the box, and send it bouncing off in the opposite direction.", "tokens": [50596, 35648, 309, 646, 666, 264, 2424, 11, 293, 2845, 309, 27380, 766, 294, 264, 6182, 3513, 13, 50834], "temperature": 0.0, "avg_logprob": -0.15310559230568135, "compression_ratio": 1.6529850746268657, "no_speech_prob": 0.004754651337862015}, {"id": 15, "seek": 5592, "start": 65.32000000000001, "end": 70.32000000000001, "text": " I'd actually also like to multiply the velocity by some collision-dumping factor between", "tokens": [50834, 286, 1116, 767, 611, 411, 281, 12972, 264, 9269, 538, 512, 24644, 12, 67, 35313, 5952, 1296, 51084], "temperature": 0.0, "avg_logprob": -0.15310559230568135, "compression_ratio": 1.6529850746268657, "no_speech_prob": 0.004754651337862015}, {"id": 16, "seek": 5592, "start": 70.32000000000001, "end": 75.16, "text": " 0 and 1 here, so that we can control how much energy it loses with each bounce.", "tokens": [51084, 1958, 293, 502, 510, 11, 370, 300, 321, 393, 1969, 577, 709, 2281, 309, 18293, 365, 1184, 15894, 13, 51326], "temperature": 0.0, "avg_logprob": -0.15310559230568135, "compression_ratio": 1.6529850746268657, "no_speech_prob": 0.004754651337862015}, {"id": 17, "seek": 5592, "start": 75.16, "end": 80.88, "text": " Alright, so we can set up our little bounding box, and turn on the gravity again, and off", "tokens": [51326, 2798, 11, 370, 321, 393, 992, 493, 527, 707, 5472, 278, 2424, 11, 293, 1261, 322, 264, 12110, 797, 11, 293, 766, 51612], "temperature": 0.0, "avg_logprob": -0.15310559230568135, "compression_ratio": 1.6529850746268657, "no_speech_prob": 0.004754651337862015}, {"id": 18, "seek": 5592, "start": 80.88, "end": 83.72, "text": " we go bouncing.", "tokens": [51612, 321, 352, 27380, 13, 51754], "temperature": 0.0, "avg_logprob": -0.15310559230568135, "compression_ratio": 1.6529850746268657, "no_speech_prob": 0.004754651337862015}, {"id": 19, "seek": 8372, "start": 83.72, "end": 87.56, "text": " By the way, I've also made it so that we can control the display size of the particle", "tokens": [50364, 3146, 264, 636, 11, 286, 600, 611, 1027, 309, 370, 300, 321, 393, 1969, 264, 4674, 2744, 295, 264, 12359, 50556], "temperature": 0.0, "avg_logprob": -0.16428665975922518, "compression_ratio": 1.653225806451613, "no_speech_prob": 7.721690781181678e-05}, {"id": 20, "seek": 8372, "start": 87.56, "end": 89.56, "text": " here.", "tokens": [50556, 510, 13, 50656], "temperature": 0.0, "avg_logprob": -0.16428665975922518, "compression_ratio": 1.653225806451613, "no_speech_prob": 7.721690781181678e-05}, {"id": 21, "seek": 8372, "start": 89.56, "end": 96.6, "text": " Okay, let's then also try out our collision-dumping setting, and we can see the particle now bounces", "tokens": [50656, 1033, 11, 718, 311, 550, 611, 853, 484, 527, 24644, 12, 67, 35313, 3287, 11, 293, 321, 393, 536, 264, 12359, 586, 46901, 51008], "temperature": 0.0, "avg_logprob": -0.16428665975922518, "compression_ratio": 1.653225806451613, "no_speech_prob": 7.721690781181678e-05}, {"id": 22, "seek": 8372, "start": 96.6, "end": 100.6, "text": " low and low each time until it comes to a stop.", "tokens": [51008, 2295, 293, 2295, 1184, 565, 1826, 309, 1487, 281, 257, 1590, 13, 51208], "temperature": 0.0, "avg_logprob": -0.16428665975922518, "compression_ratio": 1.653225806451613, "no_speech_prob": 7.721690781181678e-05}, {"id": 23, "seek": 8372, "start": 100.6, "end": 105.28, "text": " Believe it or not though, one particle is not enough particles to simulate a fluid,", "tokens": [51208, 21486, 309, 420, 406, 1673, 11, 472, 12359, 307, 406, 1547, 10007, 281, 27817, 257, 9113, 11, 51442], "temperature": 0.0, "avg_logprob": -0.16428665975922518, "compression_ratio": 1.653225806451613, "no_speech_prob": 7.721690781181678e-05}, {"id": 24, "seek": 8372, "start": 105.28, "end": 110.16, "text": " so I've quickly upgraded our position and velocity variables to instead store a whole", "tokens": [51442, 370, 286, 600, 2661, 24133, 527, 2535, 293, 9269, 9102, 281, 2602, 3531, 257, 1379, 51686], "temperature": 0.0, "avg_logprob": -0.16428665975922518, "compression_ratio": 1.653225806451613, "no_speech_prob": 7.721690781181678e-05}, {"id": 25, "seek": 11016, "start": 110.24, "end": 114.8, "text": " array of positions and velocities, which we can then loop over and just do the same", "tokens": [50368, 10225, 295, 8432, 293, 7806, 1088, 11, 597, 321, 393, 550, 6367, 670, 293, 445, 360, 264, 912, 50596], "temperature": 0.0, "avg_logprob": -0.14486832574966851, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.004904832690954208}, {"id": 26, "seek": 11016, "start": 114.8, "end": 118.6, "text": " update as before to each of them.", "tokens": [50596, 5623, 382, 949, 281, 1184, 295, 552, 13, 50786], "temperature": 0.0, "avg_logprob": -0.14486832574966851, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.004904832690954208}, {"id": 27, "seek": 11016, "start": 118.6, "end": 122.84, "text": " I've also created a simple function that runs at the beginning to set up the particles", "tokens": [50786, 286, 600, 611, 2942, 257, 2199, 2445, 300, 6676, 412, 264, 2863, 281, 992, 493, 264, 10007, 50998], "temperature": 0.0, "avg_logprob": -0.14486832574966851, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.004904832690954208}, {"id": 28, "seek": 11016, "start": 122.84, "end": 128.12, "text": " in a little grid arrangement, just so that they're not all on top of one another.", "tokens": [50998, 294, 257, 707, 10748, 17620, 11, 445, 370, 300, 436, 434, 406, 439, 322, 1192, 295, 472, 1071, 13, 51262], "temperature": 0.0, "avg_logprob": -0.14486832574966851, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.004904832690954208}, {"id": 29, "seek": 11016, "start": 128.12, "end": 132.96, "text": " So let's make a bunch of particles, and I'll quickly tweak the size and spacing over here", "tokens": [51262, 407, 718, 311, 652, 257, 3840, 295, 10007, 11, 293, 286, 603, 2661, 29879, 264, 2744, 293, 27739, 670, 510, 51504], "temperature": 0.0, "avg_logprob": -0.14486832574966851, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.004904832690954208}, {"id": 30, "seek": 11016, "start": 132.96, "end": 137.6, "text": " to something more reasonable, and then we can let this run.", "tokens": [51504, 281, 746, 544, 10585, 11, 293, 550, 321, 393, 718, 341, 1190, 13, 51736], "temperature": 0.0, "avg_logprob": -0.14486832574966851, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.004904832690954208}, {"id": 31, "seek": 13760, "start": 138.48, "end": 142.35999999999999, "text": " Okay, there's a pretty clear problem though, which is that the particles are all just collapsing", "tokens": [50408, 1033, 11, 456, 311, 257, 1238, 1850, 1154, 1673, 11, 597, 307, 300, 264, 10007, 366, 439, 445, 45339, 50602], "temperature": 0.0, "avg_logprob": -0.12472972869873047, "compression_ratio": 1.6559485530546625, "no_speech_prob": 0.00011958777758991346}, {"id": 32, "seek": 13760, "start": 142.35999999999999, "end": 147.51999999999998, "text": " on top of one another, so I guess we need some sort of force to push them apart.", "tokens": [50602, 322, 1192, 295, 472, 1071, 11, 370, 286, 2041, 321, 643, 512, 1333, 295, 3464, 281, 2944, 552, 4936, 13, 50860], "temperature": 0.0, "avg_logprob": -0.12472972869873047, "compression_ratio": 1.6559485530546625, "no_speech_prob": 0.00011958777758991346}, {"id": 33, "seek": 13760, "start": 147.51999999999998, "end": 152.04, "text": " I'm curious to learn how this is typically handled in the fluid simulation world, so", "tokens": [50860, 286, 478, 6369, 281, 1466, 577, 341, 307, 5850, 18033, 294, 264, 9113, 16575, 1002, 11, 370, 51086], "temperature": 0.0, "avg_logprob": -0.12472972869873047, "compression_ratio": 1.6559485530546625, "no_speech_prob": 0.00011958777758991346}, {"id": 34, "seek": 13760, "start": 152.04, "end": 153.76, "text": " I'm going to do some reading.", "tokens": [51086, 286, 478, 516, 281, 360, 512, 3760, 13, 51172], "temperature": 0.0, "avg_logprob": -0.12472972869873047, "compression_ratio": 1.6559485530546625, "no_speech_prob": 0.00011958777758991346}, {"id": 35, "seek": 13760, "start": 153.76, "end": 158.4, "text": " I found a bunch of intriguing particle-based fluid papers, and I've just spent the last", "tokens": [51172, 286, 1352, 257, 3840, 295, 32503, 12359, 12, 6032, 9113, 10577, 11, 293, 286, 600, 445, 4418, 264, 1036, 51404], "temperature": 0.0, "avg_logprob": -0.12472972869873047, "compression_ratio": 1.6559485530546625, "no_speech_prob": 0.00011958777758991346}, {"id": 36, "seek": 13760, "start": 158.4, "end": 161.64, "text": " few hours trying to work my way through those.", "tokens": [51404, 1326, 2496, 1382, 281, 589, 452, 636, 807, 729, 13, 51566], "temperature": 0.0, "avg_logprob": -0.12472972869873047, "compression_ratio": 1.6559485530546625, "no_speech_prob": 0.00011958777758991346}, {"id": 37, "seek": 13760, "start": 161.64, "end": 166.79999999999998, "text": " Honestly, most of the maths has gone well over my head, as it often does, but the broad", "tokens": [51566, 12348, 11, 881, 295, 264, 36287, 575, 2780, 731, 670, 452, 1378, 11, 382, 309, 2049, 775, 11, 457, 264, 4152, 51824], "temperature": 0.0, "avg_logprob": -0.12472972869873047, "compression_ratio": 1.6559485530546625, "no_speech_prob": 0.00011958777758991346}, {"id": 38, "seek": 16680, "start": 166.8, "end": 172.0, "text": " ideas at least are encouragingly simple, so I think my goal for today is not to try and", "tokens": [50364, 3487, 412, 1935, 366, 14580, 356, 2199, 11, 370, 286, 519, 452, 3387, 337, 965, 307, 406, 281, 853, 293, 50624], "temperature": 0.0, "avg_logprob": -0.11228611469268798, "compression_ratio": 1.6435331230283912, "no_speech_prob": 2.6273848561686464e-05}, {"id": 39, "seek": 16680, "start": 172.0, "end": 176.48000000000002, "text": " make some amazingly accurate simulation, but just to build a rough starting point from", "tokens": [50624, 652, 512, 31762, 8559, 16575, 11, 457, 445, 281, 1322, 257, 5903, 2891, 935, 490, 50848], "temperature": 0.0, "avg_logprob": -0.11228611469268798, "compression_ratio": 1.6435331230283912, "no_speech_prob": 2.6273848561686464e-05}, {"id": 40, "seek": 16680, "start": 176.48000000000002, "end": 180.72, "text": " which we can delve deeper into the maths and physics in the future, when I'm hopefully", "tokens": [50848, 597, 321, 393, 43098, 7731, 666, 264, 36287, 293, 10649, 294, 264, 2027, 11, 562, 286, 478, 4696, 51060], "temperature": 0.0, "avg_logprob": -0.11228611469268798, "compression_ratio": 1.6435331230283912, "no_speech_prob": 2.6273848561686464e-05}, {"id": 41, "seek": 16680, "start": 180.72, "end": 182.48000000000002, "text": " a little bit smarter.", "tokens": [51060, 257, 707, 857, 20294, 13, 51148], "temperature": 0.0, "avg_logprob": -0.11228611469268798, "compression_ratio": 1.6435331230283912, "no_speech_prob": 2.6273848561686464e-05}, {"id": 42, "seek": 16680, "start": 182.48000000000002, "end": 187.76000000000002, "text": " Anyway, the first step to fixing that overlapping particle problem we were having is to be able", "tokens": [51148, 5684, 11, 264, 700, 1823, 281, 19442, 300, 33535, 12359, 1154, 321, 645, 1419, 307, 281, 312, 1075, 51412], "temperature": 0.0, "avg_logprob": -0.11228611469268798, "compression_ratio": 1.6435331230283912, "no_speech_prob": 2.6273848561686464e-05}, {"id": 43, "seek": 16680, "start": 187.76000000000002, "end": 191.68, "text": " to estimate the density of our fluid at any point.", "tokens": [51412, 281, 12539, 264, 10305, 295, 527, 9113, 412, 604, 935, 13, 51608], "temperature": 0.0, "avg_logprob": -0.11228611469268798, "compression_ratio": 1.6435331230283912, "no_speech_prob": 2.6273848561686464e-05}, {"id": 44, "seek": 16680, "start": 191.68, "end": 196.08, "text": " So I've just scattered our particles around randomly for this example, and of course since", "tokens": [51608, 407, 286, 600, 445, 21986, 527, 10007, 926, 16979, 337, 341, 1365, 11, 293, 295, 1164, 1670, 51828], "temperature": 0.0, "avg_logprob": -0.11228611469268798, "compression_ratio": 1.6435331230283912, "no_speech_prob": 2.6273848561686464e-05}, {"id": 45, "seek": 19608, "start": 196.08, "end": 199.96, "text": " we're imagining that this represents some kind of fluid, in reality there should be", "tokens": [50364, 321, 434, 27798, 300, 341, 8855, 512, 733, 295, 9113, 11, 294, 4103, 456, 820, 312, 50558], "temperature": 0.0, "avg_logprob": -0.10488520441828547, "compression_ratio": 1.6523297491039426, "no_speech_prob": 7.029791595414281e-05}, {"id": 46, "seek": 19608, "start": 199.96, "end": 204.56, "text": " way more particles in this, but we're always going to be limited by what our computers", "tokens": [50558, 636, 544, 10007, 294, 341, 11, 457, 321, 434, 1009, 516, 281, 312, 5567, 538, 437, 527, 10807, 50788], "temperature": 0.0, "avg_logprob": -0.10488520441828547, "compression_ratio": 1.6523297491039426, "no_speech_prob": 7.029791595414281e-05}, {"id": 47, "seek": 19608, "start": 204.56, "end": 210.48000000000002, "text": " can handle, so to approximate reality, we can just cheat a little bit by blurring or", "tokens": [50788, 393, 4813, 11, 370, 281, 30874, 4103, 11, 321, 393, 445, 17470, 257, 707, 857, 538, 14257, 2937, 420, 51084], "temperature": 0.0, "avg_logprob": -0.10488520441828547, "compression_ratio": 1.6523297491039426, "no_speech_prob": 7.029791595414281e-05}, {"id": 48, "seek": 19608, "start": 210.48000000000002, "end": 215.36, "text": " smoothing out the few that we have, so that it appears more as a continuous field than", "tokens": [51084, 899, 6259, 571, 484, 264, 1326, 300, 321, 362, 11, 370, 300, 309, 7038, 544, 382, 257, 10957, 2519, 813, 51328], "temperature": 0.0, "avg_logprob": -0.10488520441828547, "compression_ratio": 1.6523297491039426, "no_speech_prob": 7.029791595414281e-05}, {"id": 49, "seek": 19608, "start": 215.36, "end": 217.68, "text": " a bunch of individual points.", "tokens": [51328, 257, 3840, 295, 2609, 2793, 13, 51444], "temperature": 0.0, "avg_logprob": -0.10488520441828547, "compression_ratio": 1.6523297491039426, "no_speech_prob": 7.029791595414281e-05}, {"id": 50, "seek": 19608, "start": 217.68, "end": 222.8, "text": " This simple idea is the basis of smoothed particle hydrodynamics, a technique introduced", "tokens": [51444, 639, 2199, 1558, 307, 264, 5143, 295, 5508, 292, 12359, 5796, 11452, 5216, 1167, 11, 257, 6532, 7268, 51700], "temperature": 0.0, "avg_logprob": -0.10488520441828547, "compression_ratio": 1.6523297491039426, "no_speech_prob": 7.029791595414281e-05}, {"id": 51, "seek": 22280, "start": 222.8, "end": 227.44, "text": " back in the 70s to help solve astrophysics problems and further our understanding of", "tokens": [50364, 646, 294, 264, 5285, 82, 281, 854, 5039, 5357, 11741, 41732, 2740, 293, 3052, 527, 3701, 295, 50596], "temperature": 0.0, "avg_logprob": -0.13748664855957032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0011335215531289577}, {"id": 52, "seek": 22280, "start": 227.44, "end": 231.96, "text": " the universe, which today we'll be using for the equally lofty goal of making some", "tokens": [50596, 264, 6445, 11, 597, 965, 321, 603, 312, 1228, 337, 264, 12309, 34419, 88, 3387, 295, 1455, 512, 50822], "temperature": 0.0, "avg_logprob": -0.13748664855957032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0011335215531289577}, {"id": 53, "seek": 22280, "start": 231.96, "end": 234.84, "text": " little pixels go splash splash for our amusement.", "tokens": [50822, 707, 18668, 352, 25757, 25757, 337, 527, 39970, 13, 50966], "temperature": 0.0, "avg_logprob": -0.13748664855957032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0011335215531289577}, {"id": 54, "seek": 22280, "start": 234.84, "end": 240.12, "text": " Alright, so to see how we're going to calculate this sort of density field we have here, let's", "tokens": [50966, 2798, 11, 370, 281, 536, 577, 321, 434, 516, 281, 8873, 341, 1333, 295, 10305, 2519, 321, 362, 510, 11, 718, 311, 51230], "temperature": 0.0, "avg_logprob": -0.13748664855957032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0011335215531289577}, {"id": 55, "seek": 22280, "start": 240.12, "end": 245.28, "text": " zoom in on a single particle and define a smoothing radius, which gives us this circle", "tokens": [51230, 8863, 294, 322, 257, 2167, 12359, 293, 6964, 257, 899, 6259, 571, 15845, 11, 597, 2709, 505, 341, 6329, 51488], "temperature": 0.0, "avg_logprob": -0.13748664855957032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0011335215531289577}, {"id": 56, "seek": 22280, "start": 245.28, "end": 250.0, "text": " of influence around the particle, where it will have maximum influence at the centre,", "tokens": [51488, 295, 6503, 926, 264, 12359, 11, 689, 309, 486, 362, 6674, 6503, 412, 264, 10093, 11, 51724], "temperature": 0.0, "avg_logprob": -0.13748664855957032, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0011335215531289577}, {"id": 57, "seek": 25000, "start": 250.0, "end": 253.28, "text": " falling off to no influence at all at the outer edge.", "tokens": [50364, 7440, 766, 281, 572, 6503, 412, 439, 412, 264, 10847, 4691, 13, 50528], "temperature": 0.0, "avg_logprob": -0.11885200112552965, "compression_ratio": 1.741444866920152, "no_speech_prob": 0.04741758108139038}, {"id": 58, "seek": 25000, "start": 253.28, "end": 258.04, "text": " Let's draw a little graph of this behaviour, so on the x-axis we'll have the distance", "tokens": [50528, 961, 311, 2642, 257, 707, 4295, 295, 341, 17229, 11, 370, 322, 264, 2031, 12, 24633, 321, 603, 362, 264, 4560, 50766], "temperature": 0.0, "avg_logprob": -0.11885200112552965, "compression_ratio": 1.741444866920152, "no_speech_prob": 0.04741758108139038}, {"id": 59, "seek": 25000, "start": 258.04, "end": 262.12, "text": " from the centre of the particle, and because negative distance doesn't make a huge amount", "tokens": [50766, 490, 264, 10093, 295, 264, 12359, 11, 293, 570, 3671, 4560, 1177, 380, 652, 257, 2603, 2372, 50970], "temperature": 0.0, "avg_logprob": -0.11885200112552965, "compression_ratio": 1.741444866920152, "no_speech_prob": 0.04741758108139038}, {"id": 60, "seek": 25000, "start": 262.12, "end": 267.48, "text": " of sense, I'll just make the left side of the graph be a mirror of the positive side.", "tokens": [50970, 295, 2020, 11, 286, 603, 445, 652, 264, 1411, 1252, 295, 264, 4295, 312, 257, 8013, 295, 264, 3353, 1252, 13, 51238], "temperature": 0.0, "avg_logprob": -0.11885200112552965, "compression_ratio": 1.741444866920152, "no_speech_prob": 0.04741758108139038}, {"id": 61, "seek": 25000, "start": 267.48, "end": 272.76, "text": " Then the y-axis will represent the influence of the particle at any given distance, and", "tokens": [51238, 1396, 264, 288, 12, 24633, 486, 2906, 264, 6503, 295, 264, 12359, 412, 604, 2212, 4560, 11, 293, 51502], "temperature": 0.0, "avg_logprob": -0.11885200112552965, "compression_ratio": 1.741444866920152, "no_speech_prob": 0.04741758108139038}, {"id": 62, "seek": 25000, "start": 272.76, "end": 276.92, "text": " let's say for now that our smoothing radius is just 1.", "tokens": [51502, 718, 311, 584, 337, 586, 300, 527, 899, 6259, 571, 15845, 307, 445, 502, 13, 51710], "temperature": 0.0, "avg_logprob": -0.11885200112552965, "compression_ratio": 1.741444866920152, "no_speech_prob": 0.04741758108139038}, {"id": 63, "seek": 27692, "start": 276.92, "end": 281.24, "text": " So a simple simple function we could use would be something like this, just subtracting", "tokens": [50364, 407, 257, 2199, 2199, 2445, 321, 727, 764, 576, 312, 746, 411, 341, 11, 445, 16390, 278, 50580], "temperature": 0.0, "avg_logprob": -0.13291119747474545, "compression_ratio": 1.7598566308243728, "no_speech_prob": 6.709135050186887e-05}, {"id": 64, "seek": 27692, "start": 281.24, "end": 285.92, "text": " the distance from the radius and clamping it to never go below zero, and here's what", "tokens": [50580, 264, 4560, 490, 264, 15845, 293, 17690, 278, 309, 281, 1128, 352, 2507, 4018, 11, 293, 510, 311, 437, 50814], "temperature": 0.0, "avg_logprob": -0.13291119747474545, "compression_ratio": 1.7598566308243728, "no_speech_prob": 6.709135050186887e-05}, {"id": 65, "seek": 27692, "start": 285.92, "end": 288.24, "text": " that gives us.", "tokens": [50814, 300, 2709, 505, 13, 50930], "temperature": 0.0, "avg_logprob": -0.13291119747474545, "compression_ratio": 1.7598566308243728, "no_speech_prob": 6.709135050186887e-05}, {"id": 66, "seek": 27692, "start": 288.24, "end": 293.52000000000004, "text": " This is not very smooth though, so we could take that straight line and qubit for example,", "tokens": [50930, 639, 307, 406, 588, 5508, 1673, 11, 370, 321, 727, 747, 300, 2997, 1622, 293, 421, 5260, 337, 1365, 11, 51194], "temperature": 0.0, "avg_logprob": -0.13291119747474545, "compression_ratio": 1.7598566308243728, "no_speech_prob": 6.709135050186887e-05}, {"id": 67, "seek": 27692, "start": 293.52000000000004, "end": 297.68, "text": " which will ease it out as it approaches zero.", "tokens": [51194, 597, 486, 12708, 309, 484, 382, 309, 11587, 4018, 13, 51402], "temperature": 0.0, "avg_logprob": -0.13291119747474545, "compression_ratio": 1.7598566308243728, "no_speech_prob": 6.709135050186887e-05}, {"id": 68, "seek": 27692, "start": 297.68, "end": 301.92, "text": " Another option if we wanted to be smooth at the start as well, would be to also square", "tokens": [51402, 3996, 3614, 498, 321, 1415, 281, 312, 5508, 412, 264, 722, 382, 731, 11, 576, 312, 281, 611, 3732, 51614], "temperature": 0.0, "avg_logprob": -0.13291119747474545, "compression_ratio": 1.7598566308243728, "no_speech_prob": 6.709135050186887e-05}, {"id": 69, "seek": 27692, "start": 301.92, "end": 306.84000000000003, "text": " the radius and distance before subtracting them, and here's how that comes out.", "tokens": [51614, 264, 15845, 293, 4560, 949, 16390, 278, 552, 11, 293, 510, 311, 577, 300, 1487, 484, 13, 51860], "temperature": 0.0, "avg_logprob": -0.13291119747474545, "compression_ratio": 1.7598566308243728, "no_speech_prob": 6.709135050186887e-05}, {"id": 70, "seek": 30684, "start": 306.84, "end": 310.79999999999995, "text": " Obviously we could also try different powers or different functions altogether, I think", "tokens": [50364, 7580, 321, 727, 611, 853, 819, 8674, 420, 819, 6828, 19051, 11, 286, 519, 50562], "temperature": 0.0, "avg_logprob": -0.1293065948486328, "compression_ratio": 1.785016286644951, "no_speech_prob": 0.0021825809963047504}, {"id": 71, "seek": 30684, "start": 310.79999999999995, "end": 314.67999999999995, "text": " it's mostly a case of just playing around and seeing what works best.", "tokens": [50562, 309, 311, 5240, 257, 1389, 295, 445, 2433, 926, 293, 2577, 437, 1985, 1151, 13, 50756], "temperature": 0.0, "avg_logprob": -0.1293065948486328, "compression_ratio": 1.785016286644951, "no_speech_prob": 0.0021825809963047504}, {"id": 72, "seek": 30684, "start": 314.67999999999995, "end": 317.09999999999997, "text": " But let's go with this one for now.", "tokens": [50756, 583, 718, 311, 352, 365, 341, 472, 337, 586, 13, 50877], "temperature": 0.0, "avg_logprob": -0.1293065948486328, "compression_ratio": 1.785016286644951, "no_speech_prob": 0.0021825809963047504}, {"id": 73, "seek": 30684, "start": 317.09999999999997, "end": 321.26, "text": " So I've used that to write this little density function, which takes in the point we want", "tokens": [50877, 407, 286, 600, 1143, 300, 281, 2464, 341, 707, 10305, 2445, 11, 597, 2516, 294, 264, 935, 321, 528, 51085], "temperature": 0.0, "avg_logprob": -0.1293065948486328, "compression_ratio": 1.785016286644951, "no_speech_prob": 0.0021825809963047504}, {"id": 74, "seek": 30684, "start": 321.26, "end": 325.67999999999995, "text": " to find the density at, and then for each particle it gets the distance to that sample", "tokens": [51085, 281, 915, 264, 10305, 412, 11, 293, 550, 337, 1184, 12359, 309, 2170, 264, 4560, 281, 300, 6889, 51306], "temperature": 0.0, "avg_logprob": -0.1293065948486328, "compression_ratio": 1.785016286644951, "no_speech_prob": 0.0021825809963047504}, {"id": 75, "seek": 30684, "start": 325.67999999999995, "end": 330.2, "text": " point, which determines how much influence the particle has at that location, and then", "tokens": [51306, 935, 11, 597, 24799, 577, 709, 6503, 264, 12359, 575, 412, 300, 4914, 11, 293, 550, 51532], "temperature": 0.0, "avg_logprob": -0.1293065948486328, "compression_ratio": 1.785016286644951, "no_speech_prob": 0.0021825809963047504}, {"id": 76, "seek": 30684, "start": 330.2, "end": 336.26, "text": " it simply increases the density by the particle's mass, multiplied by the influence value.", "tokens": [51532, 309, 2935, 8637, 264, 10305, 538, 264, 12359, 311, 2758, 11, 17207, 538, 264, 6503, 2158, 13, 51835], "temperature": 0.0, "avg_logprob": -0.1293065948486328, "compression_ratio": 1.785016286644951, "no_speech_prob": 0.0021825809963047504}, {"id": 77, "seek": 33626, "start": 336.26, "end": 340.86, "text": " And the mass I've just defined to always be one for simplicity.", "tokens": [50364, 400, 264, 2758, 286, 600, 445, 7642, 281, 1009, 312, 472, 337, 25632, 13, 50594], "temperature": 0.0, "avg_logprob": -0.10585329450409987, "compression_ratio": 1.6470588235294117, "no_speech_prob": 4.985901978216134e-05}, {"id": 78, "seek": 33626, "start": 340.86, "end": 345.38, "text": " So let's test this quickly with an evenly spaced grid of particles, and I'll just try", "tokens": [50594, 407, 718, 311, 1500, 341, 2661, 365, 364, 17658, 43766, 10748, 295, 10007, 11, 293, 286, 603, 445, 853, 50820], "temperature": 0.0, "avg_logprob": -0.10585329450409987, "compression_ratio": 1.6470588235294117, "no_speech_prob": 4.985901978216134e-05}, {"id": 79, "seek": 33626, "start": 345.38, "end": 351.42, "text": " sampling the density at the centre here, with a radius of 0.5 for example.", "tokens": [50820, 21179, 264, 10305, 412, 264, 10093, 510, 11, 365, 257, 15845, 295, 1958, 13, 20, 337, 1365, 13, 51122], "temperature": 0.0, "avg_logprob": -0.10585329450409987, "compression_ratio": 1.6470588235294117, "no_speech_prob": 4.985901978216134e-05}, {"id": 80, "seek": 33626, "start": 351.42, "end": 356.62, "text": " Now at the moment the density is coming to about 0.48, but if we squish the particles", "tokens": [51122, 823, 412, 264, 1623, 264, 10305, 307, 1348, 281, 466, 1958, 13, 13318, 11, 457, 498, 321, 31379, 264, 10007, 51382], "temperature": 0.0, "avg_logprob": -0.10585329450409987, "compression_ratio": 1.6470588235294117, "no_speech_prob": 4.985901978216134e-05}, {"id": 81, "seek": 33626, "start": 356.62, "end": 361.18, "text": " closer together, we can see that the density value goes up, which makes sense, and if we", "tokens": [51382, 4966, 1214, 11, 321, 393, 536, 300, 264, 10305, 2158, 1709, 493, 11, 597, 1669, 2020, 11, 293, 498, 321, 51610], "temperature": 0.0, "avg_logprob": -0.10585329450409987, "compression_ratio": 1.6470588235294117, "no_speech_prob": 4.985901978216134e-05}, {"id": 82, "seek": 33626, "start": 361.18, "end": 365.52, "text": " move them further apart, it goes down of course.", "tokens": [51610, 1286, 552, 3052, 4936, 11, 309, 1709, 760, 295, 1164, 13, 51827], "temperature": 0.0, "avg_logprob": -0.10585329450409987, "compression_ratio": 1.6470588235294117, "no_speech_prob": 4.985901978216134e-05}, {"id": 83, "seek": 36552, "start": 365.52, "end": 368.79999999999995, "text": " But what about if we increase the smoothing radius?", "tokens": [50364, 583, 437, 466, 498, 321, 3488, 264, 899, 6259, 571, 15845, 30, 50528], "temperature": 0.0, "avg_logprob": -0.1237622489613935, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.00012730875459965318}, {"id": 84, "seek": 36552, "start": 368.79999999999995, "end": 374.15999999999997, "text": " Well, our density value has just shut up through the roof, which is very concerning, because", "tokens": [50528, 1042, 11, 527, 10305, 2158, 575, 445, 5309, 493, 807, 264, 8418, 11, 597, 307, 588, 18087, 11, 570, 50796], "temperature": 0.0, "avg_logprob": -0.1237622489613935, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.00012730875459965318}, {"id": 85, "seek": 36552, "start": 374.15999999999997, "end": 379.2, "text": " making the radius bigger should only make the result more blurry, which for this uniform", "tokens": [50796, 1455, 264, 15845, 3801, 820, 787, 652, 264, 1874, 544, 37644, 11, 597, 337, 341, 9452, 51048], "temperature": 0.0, "avg_logprob": -0.1237622489613935, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.00012730875459965318}, {"id": 86, "seek": 36552, "start": 379.2, "end": 383.21999999999997, "text": " grid of particles should actually have no effect on the density at all.", "tokens": [51048, 10748, 295, 10007, 820, 767, 362, 572, 1802, 322, 264, 10305, 412, 439, 13, 51249], "temperature": 0.0, "avg_logprob": -0.1237622489613935, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.00012730875459965318}, {"id": 87, "seek": 36552, "start": 383.21999999999997, "end": 385.28, "text": " So let's think about this a bit.", "tokens": [51249, 407, 718, 311, 519, 466, 341, 257, 857, 13, 51352], "temperature": 0.0, "avg_logprob": -0.1237622489613935, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.00012730875459965318}, {"id": 88, "seek": 36552, "start": 385.28, "end": 390.76, "text": " For each particle we are calculating an influence value, which we could draw as a height, and", "tokens": [51352, 1171, 1184, 12359, 321, 366, 28258, 364, 6503, 2158, 11, 597, 321, 727, 2642, 382, 257, 6681, 11, 293, 51626], "temperature": 0.0, "avg_logprob": -0.1237622489613935, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.00012730875459965318}, {"id": 89, "seek": 36552, "start": 390.76, "end": 394.76, "text": " here we can of course see the shape of our smoothing function emerge.", "tokens": [51626, 510, 321, 393, 295, 1164, 536, 264, 3909, 295, 527, 899, 6259, 571, 2445, 21511, 13, 51826], "temperature": 0.0, "avg_logprob": -0.1237622489613935, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.00012730875459965318}, {"id": 90, "seek": 39476, "start": 394.76, "end": 399.2, "text": " Now we're effectively just adding all these heights together to create our density value,", "tokens": [50364, 823, 321, 434, 8659, 445, 5127, 439, 613, 25930, 1214, 281, 1884, 527, 10305, 2158, 11, 50586], "temperature": 0.0, "avg_logprob": -0.07741414046869045, "compression_ratio": 1.7247386759581882, "no_speech_prob": 9.610014967620373e-05}, {"id": 91, "seek": 39476, "start": 399.2, "end": 403.08, "text": " but it's kind of helpful to note that if we were to first also multiply the heights", "tokens": [50586, 457, 309, 311, 733, 295, 4961, 281, 3637, 300, 498, 321, 645, 281, 700, 611, 12972, 264, 25930, 50780], "temperature": 0.0, "avg_logprob": -0.07741414046869045, "compression_ratio": 1.7247386759581882, "no_speech_prob": 9.610014967620373e-05}, {"id": 92, "seek": 39476, "start": 403.08, "end": 407.0, "text": " by the width and breadth of these little boxes I've drawn here, what we'd actually", "tokens": [50780, 538, 264, 11402, 293, 35862, 295, 613, 707, 9002, 286, 600, 10117, 510, 11, 437, 321, 1116, 767, 50976], "temperature": 0.0, "avg_logprob": -0.07741414046869045, "compression_ratio": 1.7247386759581882, "no_speech_prob": 9.610014967620373e-05}, {"id": 93, "seek": 39476, "start": 407.0, "end": 412.26, "text": " be doing is estimating the volume of the smoothing function.", "tokens": [50976, 312, 884, 307, 8017, 990, 264, 5523, 295, 264, 899, 6259, 571, 2445, 13, 51239], "temperature": 0.0, "avg_logprob": -0.07741414046869045, "compression_ratio": 1.7247386759581882, "no_speech_prob": 9.610014967620373e-05}, {"id": 94, "seek": 39476, "start": 412.26, "end": 416.24, "text": " So with that in mind, I think it's reasonable to say that if we want the density to stay", "tokens": [51239, 407, 365, 300, 294, 1575, 11, 286, 519, 309, 311, 10585, 281, 584, 300, 498, 321, 528, 264, 10305, 281, 1754, 51438], "temperature": 0.0, "avg_logprob": -0.07741414046869045, "compression_ratio": 1.7247386759581882, "no_speech_prob": 9.610014967620373e-05}, {"id": 95, "seek": 39476, "start": 416.24, "end": 421.0, "text": " the same as we change the smoothing radius, then what we'll need to do is make sure that", "tokens": [51438, 264, 912, 382, 321, 1319, 264, 899, 6259, 571, 15845, 11, 550, 437, 321, 603, 643, 281, 360, 307, 652, 988, 300, 51676], "temperature": 0.0, "avg_logprob": -0.07741414046869045, "compression_ratio": 1.7247386759581882, "no_speech_prob": 9.610014967620373e-05}, {"id": 96, "seek": 42100, "start": 421.0, "end": 426.64, "text": " the volume of our smoothing function remains the same when we change the smoothing radius.", "tokens": [50364, 264, 5523, 295, 527, 899, 6259, 571, 2445, 7023, 264, 912, 562, 321, 1319, 264, 899, 6259, 571, 15845, 13, 50646], "temperature": 0.0, "avg_logprob": -0.11594280888957362, "compression_ratio": 1.8972332015810276, "no_speech_prob": 0.0015011475188657641}, {"id": 97, "seek": 42100, "start": 426.64, "end": 430.44, "text": " That means we're going to need to calculate its volume, or make Wolfram calculated for", "tokens": [50646, 663, 1355, 321, 434, 516, 281, 643, 281, 8873, 1080, 5523, 11, 420, 652, 16634, 2356, 15598, 337, 50836], "temperature": 0.0, "avg_logprob": -0.11594280888957362, "compression_ratio": 1.8972332015810276, "no_speech_prob": 0.0015011475188657641}, {"id": 98, "seek": 42100, "start": 430.44, "end": 436.56, "text": " us at any rate, and that is come out to pi times the smoothing radius to the power h", "tokens": [50836, 505, 412, 604, 3314, 11, 293, 300, 307, 808, 484, 281, 3895, 1413, 264, 899, 6259, 571, 15845, 281, 264, 1347, 276, 51142], "temperature": 0.0, "avg_logprob": -0.11594280888957362, "compression_ratio": 1.8972332015810276, "no_speech_prob": 0.0015011475188657641}, {"id": 99, "seek": 42100, "start": 436.56, "end": 438.48, "text": " divided by 4.", "tokens": [51142, 6666, 538, 1017, 13, 51238], "temperature": 0.0, "avg_logprob": -0.11594280888957362, "compression_ratio": 1.8972332015810276, "no_speech_prob": 0.0015011475188657641}, {"id": 100, "seek": 42100, "start": 438.48, "end": 442.76, "text": " We can then just go back to our smoothing function and calculate the volume in here,", "tokens": [51238, 492, 393, 550, 445, 352, 646, 281, 527, 899, 6259, 571, 2445, 293, 8873, 264, 5523, 294, 510, 11, 51452], "temperature": 0.0, "avg_logprob": -0.11594280888957362, "compression_ratio": 1.8972332015810276, "no_speech_prob": 0.0015011475188657641}, {"id": 101, "seek": 42100, "start": 442.76, "end": 447.08, "text": " and then simply divide the output by the volume, which means that now the new volume of the", "tokens": [51452, 293, 550, 2935, 9845, 264, 5598, 538, 264, 5523, 11, 597, 1355, 300, 586, 264, 777, 5523, 295, 264, 51668], "temperature": 0.0, "avg_logprob": -0.11594280888957362, "compression_ratio": 1.8972332015810276, "no_speech_prob": 0.0015011475188657641}, {"id": 102, "seek": 42100, "start": 447.08, "end": 450.4, "text": " function will always be 1.", "tokens": [51668, 2445, 486, 1009, 312, 502, 13, 51834], "temperature": 0.0, "avg_logprob": -0.11594280888957362, "compression_ratio": 1.8972332015810276, "no_speech_prob": 0.0015011475188657641}, {"id": 103, "seek": 45040, "start": 450.4, "end": 455.32, "text": " Let's quickly make sure this is working, so the density is 187 at the moment, and now", "tokens": [50364, 961, 311, 2661, 652, 988, 341, 307, 1364, 11, 370, 264, 10305, 307, 2443, 22, 412, 264, 1623, 11, 293, 586, 50610], "temperature": 0.0, "avg_logprob": -0.14664622930091198, "compression_ratio": 1.7023411371237458, "no_speech_prob": 0.0010483800433576107}, {"id": 104, "seek": 45040, "start": 455.32, "end": 460.35999999999996, "text": " if we change the smoothing radius that should stay the same, which it does.", "tokens": [50610, 498, 321, 1319, 264, 899, 6259, 571, 15845, 300, 820, 1754, 264, 912, 11, 597, 309, 775, 13, 50862], "temperature": 0.0, "avg_logprob": -0.14664622930091198, "compression_ratio": 1.7023411371237458, "no_speech_prob": 0.0010483800433576107}, {"id": 105, "seek": 45040, "start": 460.35999999999996, "end": 464.32, "text": " Of course if we make the radius too small, the results will get a little dodgy since", "tokens": [50862, 2720, 1164, 498, 321, 652, 264, 15845, 886, 1359, 11, 264, 3542, 486, 483, 257, 707, 13886, 1480, 1670, 51060], "temperature": 0.0, "avg_logprob": -0.14664622930091198, "compression_ratio": 1.7023411371237458, "no_speech_prob": 0.0010483800433576107}, {"id": 106, "seek": 45040, "start": 464.32, "end": 469.08, "text": " there just aren't enough particles, but apart from that we now have a nice way of determining", "tokens": [51060, 456, 445, 3212, 380, 1547, 10007, 11, 457, 4936, 490, 300, 321, 586, 362, 257, 1481, 636, 295, 23751, 51298], "temperature": 0.0, "avg_logprob": -0.14664622930091198, "compression_ratio": 1.7023411371237458, "no_speech_prob": 0.0010483800433576107}, {"id": 107, "seek": 45040, "start": 469.08, "end": 473.76, "text": " the density at any point, with whatever smoothing radius we choose to use.", "tokens": [51298, 264, 10305, 412, 604, 935, 11, 365, 2035, 899, 6259, 571, 15845, 321, 2826, 281, 764, 13, 51532], "temperature": 0.0, "avg_logprob": -0.14664622930091198, "compression_ratio": 1.7023411371237458, "no_speech_prob": 0.0010483800433576107}, {"id": 108, "seek": 45040, "start": 473.76, "end": 479.38, "text": " Ok, so let's return to our random arrangement of particles, and we can now properly visualize", "tokens": [51532, 3477, 11, 370, 718, 311, 2736, 281, 527, 4974, 17620, 295, 10007, 11, 293, 321, 393, 586, 6108, 23273, 51813], "temperature": 0.0, "avg_logprob": -0.14664622930091198, "compression_ratio": 1.7023411371237458, "no_speech_prob": 0.0010483800433576107}, {"id": 109, "seek": 47938, "start": 479.38, "end": 484.18, "text": " the density values here as we increase the smoothing radius.", "tokens": [50364, 264, 10305, 4190, 510, 382, 321, 3488, 264, 899, 6259, 571, 15845, 13, 50604], "temperature": 0.0, "avg_logprob": -0.12227755395051475, "compression_ratio": 1.6007067137809188, "no_speech_prob": 0.0001795249554561451}, {"id": 110, "seek": 47938, "start": 484.18, "end": 488.46, "text": " Now we're claiming that this represents a fluid, so one would probably assume it's", "tokens": [50604, 823, 321, 434, 19232, 300, 341, 8855, 257, 9113, 11, 370, 472, 576, 1391, 6552, 309, 311, 50818], "temperature": 0.0, "avg_logprob": -0.12227755395051475, "compression_ratio": 1.6007067137809188, "no_speech_prob": 0.0001795249554561451}, {"id": 111, "seek": 47938, "start": 488.46, "end": 493.18, "text": " a guess at the moment, because we have all these regions with different densities.", "tokens": [50818, 257, 2041, 412, 264, 1623, 11, 570, 321, 362, 439, 613, 10682, 365, 819, 24505, 1088, 13, 51054], "temperature": 0.0, "avg_logprob": -0.12227755395051475, "compression_ratio": 1.6007067137809188, "no_speech_prob": 0.0001795249554561451}, {"id": 112, "seek": 47938, "start": 493.18, "end": 499.3, "text": " But I'm more interested in simulating liquids today, which in practical terms are incompressible,", "tokens": [51054, 583, 286, 478, 544, 3102, 294, 1034, 12162, 38960, 965, 11, 597, 294, 8496, 2115, 366, 40393, 735, 964, 11, 51360], "temperature": 0.0, "avg_logprob": -0.12227755395051475, "compression_ratio": 1.6007067137809188, "no_speech_prob": 0.0001795249554561451}, {"id": 113, "seek": 47938, "start": 499.3, "end": 503.5, "text": " meaning their molecules are packed together as tightly as they can be, and so we'd expect", "tokens": [51360, 3620, 641, 13093, 366, 13265, 1214, 382, 21952, 382, 436, 393, 312, 11, 293, 370, 321, 1116, 2066, 51570], "temperature": 0.0, "avg_logprob": -0.12227755395051475, "compression_ratio": 1.6007067137809188, "no_speech_prob": 0.0001795249554561451}, {"id": 114, "seek": 47938, "start": 503.5, "end": 506.26, "text": " the density to be the same everywhere.", "tokens": [51570, 264, 10305, 281, 312, 264, 912, 5315, 13, 51708], "temperature": 0.0, "avg_logprob": -0.12227755395051475, "compression_ratio": 1.6007067137809188, "no_speech_prob": 0.0001795249554561451}, {"id": 115, "seek": 50626, "start": 506.26, "end": 510.02, "text": " For our simulation to behave at least somewhat like a liquid then, we're going to need", "tokens": [50364, 1171, 527, 16575, 281, 15158, 412, 1935, 8344, 411, 257, 6553, 550, 11, 321, 434, 516, 281, 643, 50552], "temperature": 0.0, "avg_logprob": -0.09825245968930356, "compression_ratio": 1.6607773851590106, "no_speech_prob": 0.0011335215531289577}, {"id": 116, "seek": 50626, "start": 510.02, "end": 515.86, "text": " to rapidly correct these density differences by moving particles from areas of high density", "tokens": [50552, 281, 12910, 3006, 613, 10305, 7300, 538, 2684, 10007, 490, 3179, 295, 1090, 10305, 50844], "temperature": 0.0, "avg_logprob": -0.09825245968930356, "compression_ratio": 1.6607773851590106, "no_speech_prob": 0.0011335215531289577}, {"id": 117, "seek": 50626, "start": 515.86, "end": 518.1, "text": " towards areas of low density.", "tokens": [50844, 3030, 3179, 295, 2295, 10305, 13, 50956], "temperature": 0.0, "avg_logprob": -0.09825245968930356, "compression_ratio": 1.6607773851590106, "no_speech_prob": 0.0011335215531289577}, {"id": 118, "seek": 50626, "start": 518.1, "end": 522.74, "text": " So we need to figure out how to calculate that, but I started to get a bit confused at", "tokens": [50956, 407, 321, 643, 281, 2573, 484, 577, 281, 8873, 300, 11, 457, 286, 1409, 281, 483, 257, 857, 9019, 412, 51188], "temperature": 0.0, "avg_logprob": -0.09825245968930356, "compression_ratio": 1.6607773851590106, "no_speech_prob": 0.0011335215531289577}, {"id": 119, "seek": 50626, "start": 522.74, "end": 527.06, "text": " this point while I was doing my research, so I'd like to take a step back for a moment", "tokens": [51188, 341, 935, 1339, 286, 390, 884, 452, 2132, 11, 370, 286, 1116, 411, 281, 747, 257, 1823, 646, 337, 257, 1623, 51404], "temperature": 0.0, "avg_logprob": -0.09825245968930356, "compression_ratio": 1.6607773851590106, "no_speech_prob": 0.0011335215531289577}, {"id": 120, "seek": 50626, "start": 527.06, "end": 531.18, "text": " and just play around a bit with an abstract example to try and wrap my head around some", "tokens": [51404, 293, 445, 862, 926, 257, 857, 365, 364, 12649, 1365, 281, 853, 293, 7019, 452, 1378, 926, 512, 51610], "temperature": 0.0, "avg_logprob": -0.09825245968930356, "compression_ratio": 1.6607773851590106, "no_speech_prob": 0.0011335215531289577}, {"id": 121, "seek": 53118, "start": 531.18, "end": 537.26, "text": " stuff first, and then we'll come back and apply what we've learnt to our actual problem.", "tokens": [50364, 1507, 700, 11, 293, 550, 321, 603, 808, 646, 293, 3079, 437, 321, 600, 18991, 281, 527, 3539, 1154, 13, 50668], "temperature": 0.0, "avg_logprob": -0.1222172600882394, "compression_ratio": 1.6343283582089552, "no_speech_prob": 0.009707745164632797}, {"id": 122, "seek": 53118, "start": 537.26, "end": 542.14, "text": " So here's a simple little function that takes in a point in 2D space and outputs a single", "tokens": [50668, 407, 510, 311, 257, 2199, 707, 2445, 300, 2516, 294, 257, 935, 294, 568, 35, 1901, 293, 23930, 257, 2167, 50912], "temperature": 0.0, "avg_logprob": -0.1222172600882394, "compression_ratio": 1.6343283582089552, "no_speech_prob": 0.009707745164632797}, {"id": 123, "seek": 53118, "start": 542.14, "end": 544.5799999999999, "text": " value, which looks like this.", "tokens": [50912, 2158, 11, 597, 1542, 411, 341, 13, 51034], "temperature": 0.0, "avg_logprob": -0.1222172600882394, "compression_ratio": 1.6343283582089552, "no_speech_prob": 0.009707745164632797}, {"id": 124, "seek": 53118, "start": 544.5799999999999, "end": 548.8199999999999, "text": " And what it represents is nothing at all, it's just a made up function that we're", "tokens": [51034, 400, 437, 309, 8855, 307, 1825, 412, 439, 11, 309, 311, 445, 257, 1027, 493, 2445, 300, 321, 434, 51246], "temperature": 0.0, "avg_logprob": -0.1222172600882394, "compression_ratio": 1.6343283582089552, "no_speech_prob": 0.009707745164632797}, {"id": 125, "seek": 53118, "start": 548.8199999999999, "end": 553.3399999999999, "text": " going to try and represent with particles to hopefully gain a better understanding of", "tokens": [51246, 516, 281, 853, 293, 2906, 365, 10007, 281, 4696, 6052, 257, 1101, 3701, 295, 51472], "temperature": 0.0, "avg_logprob": -0.1222172600882394, "compression_ratio": 1.6343283582089552, "no_speech_prob": 0.009707745164632797}, {"id": 126, "seek": 53118, "start": 553.3399999999999, "end": 557.18, "text": " this whole smooth particle business we're working with today.", "tokens": [51472, 341, 1379, 5508, 12359, 1606, 321, 434, 1364, 365, 965, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1222172600882394, "compression_ratio": 1.6343283582089552, "no_speech_prob": 0.009707745164632797}, {"id": 127, "seek": 55718, "start": 557.18, "end": 562.02, "text": " So I've now added some code that spawns in a bunch of particles at random positions,", "tokens": [50364, 407, 286, 600, 586, 3869, 512, 3089, 300, 17088, 82, 294, 257, 3840, 295, 10007, 412, 4974, 8432, 11, 50606], "temperature": 0.0, "avg_logprob": -0.09251866890833928, "compression_ratio": 1.7318007662835249, "no_speech_prob": 0.00041731001692824066}, {"id": 128, "seek": 55718, "start": 562.02, "end": 566.4599999999999, "text": " and each of these just looks up the value of the example function at its location and", "tokens": [50606, 293, 1184, 295, 613, 445, 1542, 493, 264, 2158, 295, 264, 1365, 2445, 412, 1080, 4914, 293, 50828], "temperature": 0.0, "avg_logprob": -0.09251866890833928, "compression_ratio": 1.7318007662835249, "no_speech_prob": 0.00041731001692824066}, {"id": 129, "seek": 55718, "start": 566.4599999999999, "end": 570.9799999999999, "text": " stores that in this vaguely named particle properties array.", "tokens": [50828, 9512, 300, 294, 341, 13501, 48863, 4926, 12359, 7221, 10225, 13, 51054], "temperature": 0.0, "avg_logprob": -0.09251866890833928, "compression_ratio": 1.7318007662835249, "no_speech_prob": 0.00041731001692824066}, {"id": 130, "seek": 55718, "start": 570.9799999999999, "end": 575.4599999999999, "text": " Now we're going to pretend that we no longer have access to that example function for whatever", "tokens": [51054, 823, 321, 434, 516, 281, 11865, 300, 321, 572, 2854, 362, 2105, 281, 300, 1365, 2445, 337, 2035, 51278], "temperature": 0.0, "avg_logprob": -0.09251866890833928, "compression_ratio": 1.7318007662835249, "no_speech_prob": 0.00041731001692824066}, {"id": 131, "seek": 55718, "start": 575.4599999999999, "end": 580.6999999999999, "text": " reason, so we only know the values at the particle positions, and our first goal is", "tokens": [51278, 1778, 11, 370, 321, 787, 458, 264, 4190, 412, 264, 12359, 8432, 11, 293, 527, 700, 3387, 307, 51540], "temperature": 0.0, "avg_logprob": -0.09251866890833928, "compression_ratio": 1.7318007662835249, "no_speech_prob": 0.00041731001692824066}, {"id": 132, "seek": 55718, "start": 580.6999999999999, "end": 584.02, "text": " to simply approximate the missing values.", "tokens": [51540, 281, 2935, 30874, 264, 5361, 4190, 13, 51706], "temperature": 0.0, "avg_logprob": -0.09251866890833928, "compression_ratio": 1.7318007662835249, "no_speech_prob": 0.00041731001692824066}, {"id": 133, "seek": 58402, "start": 584.02, "end": 587.74, "text": " To do that, we'll use the same smoothing idea from when we calculated the density", "tokens": [50364, 1407, 360, 300, 11, 321, 603, 764, 264, 912, 899, 6259, 571, 1558, 490, 562, 321, 15598, 264, 10305, 50550], "temperature": 0.0, "avg_logprob": -0.13425839685760768, "compression_ratio": 1.8517110266159695, "no_speech_prob": 0.004198612179607153}, {"id": 134, "seek": 58402, "start": 587.74, "end": 588.74, "text": " earlier.", "tokens": [50550, 3071, 13, 50600], "temperature": 0.0, "avg_logprob": -0.13425839685760768, "compression_ratio": 1.8517110266159695, "no_speech_prob": 0.004198612179607153}, {"id": 135, "seek": 58402, "start": 588.74, "end": 593.6999999999999, "text": " So I've made this little calculate property function that takes in a point in space, loops", "tokens": [50600, 407, 286, 600, 1027, 341, 707, 8873, 4707, 2445, 300, 2516, 294, 257, 935, 294, 1901, 11, 16121, 50848], "temperature": 0.0, "avg_logprob": -0.13425839685760768, "compression_ratio": 1.8517110266159695, "no_speech_prob": 0.004198612179607153}, {"id": 136, "seek": 58402, "start": 593.6999999999999, "end": 599.14, "text": " over all the particles, and just adds up the values of their properties multiplied by the", "tokens": [50848, 670, 439, 264, 10007, 11, 293, 445, 10860, 493, 264, 4190, 295, 641, 7221, 17207, 538, 264, 51120], "temperature": 0.0, "avg_logprob": -0.13425839685760768, "compression_ratio": 1.8517110266159695, "no_speech_prob": 0.004198612179607153}, {"id": 137, "seek": 58402, "start": 599.14, "end": 603.26, "text": " smoothing function, since again that just tells us how much influence the particle has", "tokens": [51120, 899, 6259, 571, 2445, 11, 1670, 797, 300, 445, 5112, 505, 577, 709, 6503, 264, 12359, 575, 51326], "temperature": 0.0, "avg_logprob": -0.13425839685760768, "compression_ratio": 1.8517110266159695, "no_speech_prob": 0.004198612179607153}, {"id": 138, "seek": 58402, "start": 603.26, "end": 608.38, "text": " at the current point, and then also multiplied by the mass, since that effectively scales", "tokens": [51326, 412, 264, 2190, 935, 11, 293, 550, 611, 17207, 538, 264, 2758, 11, 1670, 300, 8659, 17408, 51582], "temperature": 0.0, "avg_logprob": -0.13425839685760768, "compression_ratio": 1.8517110266159695, "no_speech_prob": 0.004198612179607153}, {"id": 139, "seek": 58402, "start": 608.38, "end": 610.66, "text": " how much influence the particles have.", "tokens": [51582, 577, 709, 6503, 264, 10007, 362, 13, 51696], "temperature": 0.0, "avg_logprob": -0.13425839685760768, "compression_ratio": 1.8517110266159695, "no_speech_prob": 0.004198612179607153}, {"id": 140, "seek": 61066, "start": 611.14, "end": 615.98, "text": " Let's see how that comes out, so here's the original function again just for reference,", "tokens": [50388, 961, 311, 536, 577, 300, 1487, 484, 11, 370, 510, 311, 264, 3380, 2445, 797, 445, 337, 6408, 11, 50630], "temperature": 0.0, "avg_logprob": -0.16458500657126168, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.00013982041855342686}, {"id": 141, "seek": 61066, "start": 615.98, "end": 618.18, "text": " and here's our approximation.", "tokens": [50630, 293, 510, 311, 527, 28023, 13, 50740], "temperature": 0.0, "avg_logprob": -0.16458500657126168, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.00013982041855342686}, {"id": 142, "seek": 61066, "start": 618.18, "end": 622.66, "text": " Obviously, the shape isn't perfect, but we could simply use more particles to improve", "tokens": [50740, 7580, 11, 264, 3909, 1943, 380, 2176, 11, 457, 321, 727, 2935, 764, 544, 10007, 281, 3470, 50964], "temperature": 0.0, "avg_logprob": -0.16458500657126168, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.00013982041855342686}, {"id": 143, "seek": 61066, "start": 622.66, "end": 623.66, "text": " that.", "tokens": [50964, 300, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16458500657126168, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.00013982041855342686}, {"id": 144, "seek": 61066, "start": 623.66, "end": 628.6999999999999, "text": " What's more concerning though is that the values are clearly being greatly exaggerated.", "tokens": [51014, 708, 311, 544, 18087, 1673, 307, 300, 264, 4190, 366, 4448, 885, 14147, 36196, 13, 51266], "temperature": 0.0, "avg_logprob": -0.16458500657126168, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.00013982041855342686}, {"id": 145, "seek": 61066, "start": 628.6999999999999, "end": 633.38, "text": " Now we could try to correct this by reducing the particle mass, but that just reveals a", "tokens": [51266, 823, 321, 727, 853, 281, 3006, 341, 538, 12245, 264, 12359, 2758, 11, 457, 300, 445, 20893, 257, 51500], "temperature": 0.0, "avg_logprob": -0.16458500657126168, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.00013982041855342686}, {"id": 146, "seek": 61066, "start": 633.38, "end": 638.18, "text": " deeper problem, which is that the values are being particularly exaggerated in regions", "tokens": [51500, 7731, 1154, 11, 597, 307, 300, 264, 4190, 366, 885, 4098, 36196, 294, 10682, 51740], "temperature": 0.0, "avg_logprob": -0.16458500657126168, "compression_ratio": 1.7226277372262773, "no_speech_prob": 0.00013982041855342686}, {"id": 147, "seek": 63818, "start": 638.18, "end": 643.02, "text": " of high particle density, since obviously more values are being added together there", "tokens": [50364, 295, 1090, 12359, 10305, 11, 1670, 2745, 544, 4190, 366, 885, 3869, 1214, 456, 50606], "temperature": 0.0, "avg_logprob": -0.08924636670521327, "compression_ratio": 1.721830985915493, "no_speech_prob": 0.00034598776255734265}, {"id": 148, "seek": 63818, "start": 643.02, "end": 645.78, "text": " than in regions of low density.", "tokens": [50606, 813, 294, 10682, 295, 2295, 10305, 13, 50744], "temperature": 0.0, "avg_logprob": -0.08924636670521327, "compression_ratio": 1.721830985915493, "no_speech_prob": 0.00034598776255734265}, {"id": 149, "seek": 63818, "start": 645.78, "end": 650.38, "text": " So to fix that, all we actually need to do is calculate the density at each particle,", "tokens": [50744, 407, 281, 3191, 300, 11, 439, 321, 767, 643, 281, 360, 307, 8873, 264, 10305, 412, 1184, 12359, 11, 50974], "temperature": 0.0, "avg_logprob": -0.08924636670521327, "compression_ratio": 1.721830985915493, "no_speech_prob": 0.00034598776255734265}, {"id": 150, "seek": 63818, "start": 650.38, "end": 654.78, "text": " using the function we wrote earlier of course, and then divide each particle's contribution", "tokens": [50974, 1228, 264, 2445, 321, 4114, 3071, 295, 1164, 11, 293, 550, 9845, 1184, 12359, 311, 13150, 51194], "temperature": 0.0, "avg_logprob": -0.08924636670521327, "compression_ratio": 1.721830985915493, "no_speech_prob": 0.00034598776255734265}, {"id": 151, "seek": 63818, "start": 654.78, "end": 656.78, "text": " by its density.", "tokens": [51194, 538, 1080, 10305, 13, 51294], "temperature": 0.0, "avg_logprob": -0.08924636670521327, "compression_ratio": 1.721830985915493, "no_speech_prob": 0.00034598776255734265}, {"id": 152, "seek": 63818, "start": 656.78, "end": 661.42, "text": " Now our approximated result looks like this, without needing to make any adjustments to", "tokens": [51294, 823, 527, 8542, 770, 1874, 1542, 411, 341, 11, 1553, 18006, 281, 652, 604, 18624, 281, 51526], "temperature": 0.0, "avg_logprob": -0.08924636670521327, "compression_ratio": 1.721830985915493, "no_speech_prob": 0.00034598776255734265}, {"id": 153, "seek": 63818, "start": 661.42, "end": 667.9399999999999, "text": " the mass, which is a whole lot better, and it's reasonably close to the original function.", "tokens": [51526, 264, 2758, 11, 597, 307, 257, 1379, 688, 1101, 11, 293, 309, 311, 23551, 1998, 281, 264, 3380, 2445, 13, 51852], "temperature": 0.0, "avg_logprob": -0.08924636670521327, "compression_ratio": 1.721830985915493, "no_speech_prob": 0.00034598776255734265}, {"id": 154, "seek": 66794, "start": 667.94, "end": 672.5, "text": " So what we've arrived at here is actually one of the core equations of this whole technique,", "tokens": [50364, 407, 437, 321, 600, 6678, 412, 510, 307, 767, 472, 295, 264, 4965, 11787, 295, 341, 1379, 6532, 11, 50592], "temperature": 0.0, "avg_logprob": -0.10504026320374128, "compression_ratio": 1.7529411764705882, "no_speech_prob": 9.915156988427043e-05}, {"id": 155, "seek": 66794, "start": 672.5, "end": 677.7800000000001, "text": " which says that to calculate some property a at any position x, we just need to loop", "tokens": [50592, 597, 1619, 300, 281, 8873, 512, 4707, 257, 412, 604, 2535, 2031, 11, 321, 445, 643, 281, 6367, 50856], "temperature": 0.0, "avg_logprob": -0.10504026320374128, "compression_ratio": 1.7529411764705882, "no_speech_prob": 9.915156988427043e-05}, {"id": 156, "seek": 66794, "start": 677.7800000000001, "end": 682.74, "text": " over all the particles and add together the value of that property that's stored in", "tokens": [50856, 670, 439, 264, 10007, 293, 909, 1214, 264, 2158, 295, 300, 4707, 300, 311, 12187, 294, 51104], "temperature": 0.0, "avg_logprob": -0.10504026320374128, "compression_ratio": 1.7529411764705882, "no_speech_prob": 9.915156988427043e-05}, {"id": 157, "seek": 66794, "start": 682.74, "end": 688.4200000000001, "text": " each particle, multiplied by the particle's mass, divided by its density, and finally", "tokens": [51104, 1184, 12359, 11, 17207, 538, 264, 12359, 311, 2758, 11, 6666, 538, 1080, 10305, 11, 293, 2721, 51388], "temperature": 0.0, "avg_logprob": -0.10504026320374128, "compression_ratio": 1.7529411764705882, "no_speech_prob": 9.915156988427043e-05}, {"id": 158, "seek": 66794, "start": 688.4200000000001, "end": 692.98, "text": " multiplied by the smoothing function, given the distance between the particle and the", "tokens": [51388, 17207, 538, 264, 899, 6259, 571, 2445, 11, 2212, 264, 4560, 1296, 264, 12359, 293, 264, 51616], "temperature": 0.0, "avg_logprob": -0.10504026320374128, "compression_ratio": 1.7529411764705882, "no_speech_prob": 9.915156988427043e-05}, {"id": 159, "seek": 66794, "start": 692.98, "end": 695.34, "text": " sample point.", "tokens": [51616, 6889, 935, 13, 51734], "temperature": 0.0, "avg_logprob": -0.10504026320374128, "compression_ratio": 1.7529411764705882, "no_speech_prob": 9.915156988427043e-05}, {"id": 160, "seek": 69534, "start": 695.34, "end": 699.3000000000001, "text": " What's interesting to note here is, say that the property we want to calculate with", "tokens": [50364, 708, 311, 1880, 281, 3637, 510, 307, 11, 584, 300, 264, 4707, 321, 528, 281, 8873, 365, 50562], "temperature": 0.0, "avg_logprob": -0.12052615891155015, "compression_ratio": 1.756554307116105, "no_speech_prob": 0.00015356148651335388}, {"id": 161, "seek": 69534, "start": 699.3000000000001, "end": 703.1800000000001, "text": " this equation is the particle's density.", "tokens": [50562, 341, 5367, 307, 264, 12359, 311, 10305, 13, 50756], "temperature": 0.0, "avg_logprob": -0.12052615891155015, "compression_ratio": 1.756554307116105, "no_speech_prob": 0.00015356148651335388}, {"id": 162, "seek": 69534, "start": 703.1800000000001, "end": 707.62, "text": " In that case, we replace a with the density, which then cancels out with the density over", "tokens": [50756, 682, 300, 1389, 11, 321, 7406, 257, 365, 264, 10305, 11, 597, 550, 393, 66, 1625, 484, 365, 264, 10305, 670, 50978], "temperature": 0.0, "avg_logprob": -0.12052615891155015, "compression_ratio": 1.756554307116105, "no_speech_prob": 0.00015356148651335388}, {"id": 163, "seek": 69534, "start": 707.62, "end": 712.26, "text": " here, leaving us with just mass times the smoothing function, which is exactly what", "tokens": [50978, 510, 11, 5012, 505, 365, 445, 2758, 1413, 264, 899, 6259, 571, 2445, 11, 597, 307, 2293, 437, 51210], "temperature": 0.0, "avg_logprob": -0.12052615891155015, "compression_ratio": 1.756554307116105, "no_speech_prob": 0.00015356148651335388}, {"id": 164, "seek": 69534, "start": 712.26, "end": 717.14, "text": " we came up with in the beginning, so that bit of math seems to check out at least.", "tokens": [51210, 321, 1361, 493, 365, 294, 264, 2863, 11, 370, 300, 857, 295, 5221, 2544, 281, 1520, 484, 412, 1935, 13, 51454], "temperature": 0.0, "avg_logprob": -0.12052615891155015, "compression_ratio": 1.756554307116105, "no_speech_prob": 0.00015356148651335388}, {"id": 165, "seek": 69534, "start": 717.14, "end": 721.74, "text": " Okay, that's nice and all, but what we're more interested in right now than calculating", "tokens": [51454, 1033, 11, 300, 311, 1481, 293, 439, 11, 457, 437, 321, 434, 544, 3102, 294, 558, 586, 813, 28258, 51684], "temperature": 0.0, "avg_logprob": -0.12052615891155015, "compression_ratio": 1.756554307116105, "no_speech_prob": 0.00015356148651335388}, {"id": 166, "seek": 72174, "start": 721.74, "end": 726.9, "text": " the value of a property at any point, is calculating in which direction it's most", "tokens": [50364, 264, 2158, 295, 257, 4707, 412, 604, 935, 11, 307, 28258, 294, 597, 3513, 309, 311, 881, 50622], "temperature": 0.0, "avg_logprob": -0.12170647237902489, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.002714847680181265}, {"id": 167, "seek": 72174, "start": 726.9, "end": 731.3, "text": " rapidly changing, since that's essential to our problem of correcting the density in", "tokens": [50622, 12910, 4473, 11, 1670, 300, 311, 7115, 281, 527, 1154, 295, 47032, 264, 10305, 294, 50842], "temperature": 0.0, "avg_logprob": -0.12170647237902489, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.002714847680181265}, {"id": 168, "seek": 72174, "start": 731.3, "end": 732.66, "text": " our fluid.", "tokens": [50842, 527, 9113, 13, 50910], "temperature": 0.0, "avg_logprob": -0.12170647237902489, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.002714847680181265}, {"id": 169, "seek": 72174, "start": 732.66, "end": 736.86, "text": " So I've started writing this little calculate gradient function to do that, and all this", "tokens": [50910, 407, 286, 600, 1409, 3579, 341, 707, 8873, 16235, 2445, 281, 360, 300, 11, 293, 439, 341, 51120], "temperature": 0.0, "avg_logprob": -0.12170647237902489, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.002714847680181265}, {"id": 170, "seek": 72174, "start": 736.86, "end": 742.34, "text": " does is define a tiny step size, and then figure out how much the value changes if we", "tokens": [51120, 775, 307, 6964, 257, 5870, 1823, 2744, 11, 293, 550, 2573, 484, 577, 709, 264, 2158, 2962, 498, 321, 51394], "temperature": 0.0, "avg_logprob": -0.12170647237902489, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.002714847680181265}, {"id": 171, "seek": 72174, "start": 742.34, "end": 747.66, "text": " take that tiny step along the x and y axes, using the calculate property function we just", "tokens": [51394, 747, 300, 5870, 1823, 2051, 264, 2031, 293, 288, 35387, 11, 1228, 264, 8873, 4707, 2445, 321, 445, 51660], "temperature": 0.0, "avg_logprob": -0.12170647237902489, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.002714847680181265}, {"id": 172, "seek": 72174, "start": 747.66, "end": 748.86, "text": " wrote.", "tokens": [51660, 4114, 13, 51720], "temperature": 0.0, "avg_logprob": -0.12170647237902489, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.002714847680181265}, {"id": 173, "seek": 74886, "start": 748.86, "end": 753.58, "text": " And the estimated gradient is just those two changes, each divided by the size of the step", "tokens": [50364, 400, 264, 14109, 16235, 307, 445, 729, 732, 2962, 11, 1184, 6666, 538, 264, 2744, 295, 264, 1823, 50600], "temperature": 0.0, "avg_logprob": -0.1668216063912991, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.00018235035531688482}, {"id": 174, "seek": 74886, "start": 753.58, "end": 754.58, "text": " that we talk.", "tokens": [50600, 300, 321, 751, 13, 50650], "temperature": 0.0, "avg_logprob": -0.1668216063912991, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.00018235035531688482}, {"id": 175, "seek": 74886, "start": 754.58, "end": 759.1, "text": " Let's try it out, so I've drawn in some little arrows to visualize the gradients", "tokens": [50650, 961, 311, 853, 309, 484, 11, 370, 286, 600, 10117, 294, 512, 707, 19669, 281, 23273, 264, 2771, 2448, 50876], "temperature": 0.0, "avg_logprob": -0.1668216063912991, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.00018235035531688482}, {"id": 176, "seek": 74886, "start": 759.1, "end": 763.5, "text": " at different points, and just visually it looks like these are all correctly pointing", "tokens": [50876, 412, 819, 2793, 11, 293, 445, 19622, 309, 1542, 411, 613, 366, 439, 8944, 12166, 51096], "temperature": 0.0, "avg_logprob": -0.1668216063912991, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.00018235035531688482}, {"id": 177, "seek": 74886, "start": 763.5, "end": 767.1800000000001, "text": " along the direction where the values are most rapidly increasing.", "tokens": [51096, 2051, 264, 3513, 689, 264, 4190, 366, 881, 12910, 5662, 13, 51280], "temperature": 0.0, "avg_logprob": -0.1668216063912991, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.00018235035531688482}, {"id": 178, "seek": 74886, "start": 767.1800000000001, "end": 769.34, "text": " So that's great.", "tokens": [51280, 407, 300, 311, 869, 13, 51388], "temperature": 0.0, "avg_logprob": -0.1668216063912991, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.00018235035531688482}, {"id": 179, "seek": 74886, "start": 769.34, "end": 773.98, "text": " What's less great is that it's taking almost 20 seconds to calculate all of these, which", "tokens": [51388, 708, 311, 1570, 869, 307, 300, 309, 311, 1940, 1920, 945, 3949, 281, 8873, 439, 295, 613, 11, 597, 51620], "temperature": 0.0, "avg_logprob": -0.1668216063912991, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.00018235035531688482}, {"id": 180, "seek": 74886, "start": 773.98, "end": 776.02, "text": " is ridiculously slow.", "tokens": [51620, 307, 41358, 2964, 13, 51722], "temperature": 0.0, "avg_logprob": -0.1668216063912991, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.00018235035531688482}, {"id": 181, "seek": 77602, "start": 776.02, "end": 779.14, "text": " Unfortunately though, there is a more efficient approach.", "tokens": [50364, 8590, 1673, 11, 456, 307, 257, 544, 7148, 3109, 13, 50520], "temperature": 0.0, "avg_logprob": -0.14785463405105304, "compression_ratio": 1.6856060606060606, "no_speech_prob": 0.00022341322619467974}, {"id": 182, "seek": 77602, "start": 779.14, "end": 783.38, "text": " Imagine we have just a single particle, and I'll draw on the smoothing radius here as", "tokens": [50520, 11739, 321, 362, 445, 257, 2167, 12359, 11, 293, 286, 603, 2642, 322, 264, 899, 6259, 571, 15845, 510, 382, 50732], "temperature": 0.0, "avg_logprob": -0.14785463405105304, "compression_ratio": 1.6856060606060606, "no_speech_prob": 0.00022341322619467974}, {"id": 183, "seek": 77602, "start": 783.38, "end": 788.34, "text": " well, and we're trying to calculate the gradient of whatever property at this point", "tokens": [50732, 731, 11, 293, 321, 434, 1382, 281, 8873, 264, 16235, 295, 2035, 4707, 412, 341, 935, 50980], "temperature": 0.0, "avg_logprob": -0.14785463405105304, "compression_ratio": 1.6856060606060606, "no_speech_prob": 0.00022341322619467974}, {"id": 184, "seek": 77602, "start": 788.34, "end": 789.34, "text": " over here.", "tokens": [50980, 670, 510, 13, 51030], "temperature": 0.0, "avg_logprob": -0.14785463405105304, "compression_ratio": 1.6856060606060606, "no_speech_prob": 0.00022341322619467974}, {"id": 185, "seek": 77602, "start": 789.34, "end": 794.5799999999999, "text": " Well, first of all, the direction in which that property will most rapidly be increasing", "tokens": [51030, 1042, 11, 700, 295, 439, 11, 264, 3513, 294, 597, 300, 4707, 486, 881, 12910, 312, 5662, 51292], "temperature": 0.0, "avg_logprob": -0.14785463405105304, "compression_ratio": 1.6856060606060606, "no_speech_prob": 0.00022341322619467974}, {"id": 186, "seek": 77602, "start": 794.5799999999999, "end": 799.86, "text": " is either directly towards the particle, or directly away from it if the property is negative,", "tokens": [51292, 307, 2139, 3838, 3030, 264, 12359, 11, 420, 3838, 1314, 490, 309, 498, 264, 4707, 307, 3671, 11, 51556], "temperature": 0.0, "avg_logprob": -0.14785463405105304, "compression_ratio": 1.6856060606060606, "no_speech_prob": 0.00022341322619467974}, {"id": 187, "seek": 77602, "start": 799.86, "end": 801.78, "text": " so that's easy enough.", "tokens": [51556, 370, 300, 311, 1858, 1547, 13, 51652], "temperature": 0.0, "avg_logprob": -0.14785463405105304, "compression_ratio": 1.6856060606060606, "no_speech_prob": 0.00022341322619467974}, {"id": 188, "seek": 80178, "start": 801.78, "end": 805.98, "text": " The gradient doesn't only tell us the direction though, but also how fast the property is", "tokens": [50364, 440, 16235, 1177, 380, 787, 980, 505, 264, 3513, 1673, 11, 457, 611, 577, 2370, 264, 4707, 307, 50574], "temperature": 0.0, "avg_logprob": -0.11043533013791454, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.0001535568735562265}, {"id": 189, "seek": 80178, "start": 805.98, "end": 810.98, "text": " changing, and that depends purely on our smoothing function.", "tokens": [50574, 4473, 11, 293, 300, 5946, 17491, 322, 527, 899, 6259, 571, 2445, 13, 50824], "temperature": 0.0, "avg_logprob": -0.11043533013791454, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.0001535568735562265}, {"id": 190, "seek": 80178, "start": 810.98, "end": 814.62, "text": " At the current distance, we can see that the smoothing function isn't very steep, which", "tokens": [50824, 1711, 264, 2190, 4560, 11, 321, 393, 536, 300, 264, 899, 6259, 571, 2445, 1943, 380, 588, 16841, 11, 597, 51006], "temperature": 0.0, "avg_logprob": -0.11043533013791454, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.0001535568735562265}, {"id": 191, "seek": 80178, "start": 814.62, "end": 818.86, "text": " means that the property will be changing quite slowly over here, whereas of course if our", "tokens": [51006, 1355, 300, 264, 4707, 486, 312, 4473, 1596, 5692, 670, 510, 11, 9735, 295, 1164, 498, 527, 51218], "temperature": 0.0, "avg_logprob": -0.11043533013791454, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.0001535568735562265}, {"id": 192, "seek": 80178, "start": 818.86, "end": 823.98, "text": " sample point was over here for example, then it would be changing a lot more rapidly.", "tokens": [51218, 6889, 935, 390, 670, 510, 337, 1365, 11, 550, 309, 576, 312, 4473, 257, 688, 544, 12910, 13, 51474], "temperature": 0.0, "avg_logprob": -0.11043533013791454, "compression_ratio": 1.7322175732217573, "no_speech_prob": 0.0001535568735562265}, {"id": 193, "seek": 82398, "start": 823.98, "end": 833.66, "text": " So after struggling to remember how basic calculus works for a few minutes, I finally", "tokens": [50364, 407, 934, 9314, 281, 1604, 577, 3875, 33400, 1985, 337, 257, 1326, 2077, 11, 286, 2721, 50848], "temperature": 0.0, "avg_logprob": -0.09667989340695468, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.0001795259740902111}, {"id": 194, "seek": 82398, "start": 833.66, "end": 837.5, "text": " figured out the equation for the slope of the smoothing function, which I've just", "tokens": [50848, 8932, 484, 264, 5367, 337, 264, 13525, 295, 264, 899, 6259, 571, 2445, 11, 597, 286, 600, 445, 51040], "temperature": 0.0, "avg_logprob": -0.09667989340695468, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.0001795259740902111}, {"id": 195, "seek": 82398, "start": 837.5, "end": 840.1800000000001, "text": " translated into code over here.", "tokens": [51040, 16805, 666, 3089, 670, 510, 13, 51174], "temperature": 0.0, "avg_logprob": -0.09667989340695468, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.0001795259740902111}, {"id": 196, "seek": 82398, "start": 840.1800000000001, "end": 846.02, "text": " And that means that we can now easily look up the slope value at any distance.", "tokens": [51174, 400, 300, 1355, 300, 321, 393, 586, 3612, 574, 493, 264, 13525, 2158, 412, 604, 4560, 13, 51466], "temperature": 0.0, "avg_logprob": -0.09667989340695468, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.0001795259740902111}, {"id": 197, "seek": 82398, "start": 846.02, "end": 850.0600000000001, "text": " So let's return to our fast attempt at the gradient function, and I'll delete the old", "tokens": [51466, 407, 718, 311, 2736, 281, 527, 2370, 5217, 412, 264, 16235, 2445, 11, 293, 286, 603, 12097, 264, 1331, 51668], "temperature": 0.0, "avg_logprob": -0.09667989340695468, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.0001795259740902111}, {"id": 198, "seek": 85006, "start": 850.06, "end": 854.7399999999999, "text": " code and replace it with our CalculateProperty code, since that's almost exactly what", "tokens": [50364, 3089, 293, 7406, 309, 365, 527, 3511, 2444, 473, 12681, 610, 874, 3089, 11, 1670, 300, 311, 1920, 2293, 437, 50598], "temperature": 0.0, "avg_logprob": -0.11913708982796505, "compression_ratio": 1.7372262773722629, "no_speech_prob": 0.0008295760490000248}, {"id": 199, "seek": 85006, "start": 854.7399999999999, "end": 859.06, "text": " we need, except since we want to know the gradient now, we'll multiply not by the", "tokens": [50598, 321, 643, 11, 3993, 1670, 321, 528, 281, 458, 264, 16235, 586, 11, 321, 603, 12972, 406, 538, 264, 50814], "temperature": 0.0, "avg_logprob": -0.11913708982796505, "compression_ratio": 1.7372262773722629, "no_speech_prob": 0.0008295760490000248}, {"id": 200, "seek": 85006, "start": 859.06, "end": 864.2199999999999, "text": " smoothing function, but by the slope of the smoothing function, and then also by the direction", "tokens": [50814, 899, 6259, 571, 2445, 11, 457, 538, 264, 13525, 295, 264, 899, 6259, 571, 2445, 11, 293, 550, 611, 538, 264, 3513, 51072], "temperature": 0.0, "avg_logprob": -0.11913708982796505, "compression_ratio": 1.7372262773722629, "no_speech_prob": 0.0008295760490000248}, {"id": 201, "seek": 85006, "start": 864.2199999999999, "end": 869.66, "text": " towards the current particle.", "tokens": [51072, 3030, 264, 2190, 12359, 13, 51344], "temperature": 0.0, "avg_logprob": -0.11913708982796505, "compression_ratio": 1.7372262773722629, "no_speech_prob": 0.0008295760490000248}, {"id": 202, "seek": 85006, "start": 869.66, "end": 875.26, "text": " By summing up all these individual gradients, we should logically get the overall gradient.", "tokens": [51344, 3146, 2408, 2810, 493, 439, 613, 2609, 2771, 2448, 11, 321, 820, 38887, 483, 264, 4787, 16235, 13, 51624], "temperature": 0.0, "avg_logprob": -0.11913708982796505, "compression_ratio": 1.7372262773722629, "no_speech_prob": 0.0008295760490000248}, {"id": 203, "seek": 85006, "start": 875.26, "end": 879.5799999999999, "text": " Then if we return to our little visualization and just run it again, it should look exactly", "tokens": [51624, 1396, 498, 321, 2736, 281, 527, 707, 25801, 293, 445, 1190, 309, 797, 11, 309, 820, 574, 2293, 51840], "temperature": 0.0, "avg_logprob": -0.11913708982796505, "compression_ratio": 1.7372262773722629, "no_speech_prob": 0.0008295760490000248}, {"id": 204, "seek": 87958, "start": 879.58, "end": 881.34, "text": " the same as before.", "tokens": [50364, 264, 912, 382, 949, 13, 50452], "temperature": 0.0, "avg_logprob": -0.14730836591150007, "compression_ratio": 1.6245487364620939, "no_speech_prob": 0.007576720789074898}, {"id": 205, "seek": 87958, "start": 881.34, "end": 885.58, "text": " Which it doesn't, I guess I got the direction back to front, so I'll just stick a minus", "tokens": [50452, 3013, 309, 1177, 380, 11, 286, 2041, 286, 658, 264, 3513, 646, 281, 1868, 11, 370, 286, 603, 445, 2897, 257, 3175, 50664], "temperature": 0.0, "avg_logprob": -0.14730836591150007, "compression_ratio": 1.6245487364620939, "no_speech_prob": 0.007576720789074898}, {"id": 206, "seek": 87958, "start": 885.58, "end": 886.9000000000001, "text": " sign in there quickly.", "tokens": [50664, 1465, 294, 456, 2661, 13, 50730], "temperature": 0.0, "avg_logprob": -0.14730836591150007, "compression_ratio": 1.6245487364620939, "no_speech_prob": 0.007576720789074898}, {"id": 207, "seek": 87958, "start": 886.9000000000001, "end": 890.82, "text": " I come from the trial and error school of mathematics, but now it does look the same", "tokens": [50730, 286, 808, 490, 264, 7308, 293, 6713, 1395, 295, 18666, 11, 457, 586, 309, 775, 574, 264, 912, 50926], "temperature": 0.0, "avg_logprob": -0.14730836591150007, "compression_ratio": 1.6245487364620939, "no_speech_prob": 0.007576720789074898}, {"id": 208, "seek": 87958, "start": 890.82, "end": 892.4200000000001, "text": " as before.", "tokens": [50926, 382, 949, 13, 51006], "temperature": 0.0, "avg_logprob": -0.14730836591150007, "compression_ratio": 1.6245487364620939, "no_speech_prob": 0.007576720789074898}, {"id": 209, "seek": 87958, "start": 892.4200000000001, "end": 898.26, "text": " This optimization has taken us from 20 seconds down to about 5, which is still uselessly", "tokens": [51006, 639, 19618, 575, 2726, 505, 490, 945, 3949, 760, 281, 466, 1025, 11, 597, 307, 920, 14115, 356, 51298], "temperature": 0.0, "avg_logprob": -0.14730836591150007, "compression_ratio": 1.6245487364620939, "no_speech_prob": 0.007576720789074898}, {"id": 210, "seek": 87958, "start": 898.26, "end": 901.58, "text": " slow, but headed in the right direction at least.", "tokens": [51298, 2964, 11, 457, 12798, 294, 264, 558, 3513, 412, 1935, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14730836591150007, "compression_ratio": 1.6245487364620939, "no_speech_prob": 0.007576720789074898}, {"id": 211, "seek": 87958, "start": 901.58, "end": 905.9000000000001, "text": " Okay, I've just been having another look at our gradient function, and we definitely", "tokens": [51464, 1033, 11, 286, 600, 445, 668, 1419, 1071, 574, 412, 527, 16235, 2445, 11, 293, 321, 2138, 51680], "temperature": 0.0, "avg_logprob": -0.14730836591150007, "compression_ratio": 1.6245487364620939, "no_speech_prob": 0.007576720789074898}, {"id": 212, "seek": 90590, "start": 905.9, "end": 908.4599999999999, "text": " need to stop calling CalculateDensity all the time.", "tokens": [50364, 643, 281, 1590, 5141, 3511, 2444, 473, 35, 6859, 439, 264, 565, 13, 50492], "temperature": 0.0, "avg_logprob": -0.14187966405817892, "compression_ratio": 1.6336996336996337, "no_speech_prob": 0.013221463188529015}, {"id": 213, "seek": 90590, "start": 908.4599999999999, "end": 912.22, "text": " I somehow forgot already that that's also looping over all the particles.", "tokens": [50492, 286, 6063, 5298, 1217, 300, 300, 311, 611, 6367, 278, 670, 439, 264, 10007, 13, 50680], "temperature": 0.0, "avg_logprob": -0.14187966405817892, "compression_ratio": 1.6336996336996337, "no_speech_prob": 0.013221463188529015}, {"id": 214, "seek": 90590, "start": 912.22, "end": 914.6999999999999, "text": " No wonder this is so slow.", "tokens": [50680, 883, 2441, 341, 307, 370, 2964, 13, 50804], "temperature": 0.0, "avg_logprob": -0.14187966405817892, "compression_ratio": 1.6336996336996337, "no_speech_prob": 0.013221463188529015}, {"id": 215, "seek": 90590, "start": 914.6999999999999, "end": 919.5, "text": " So what we can do is just create an array of density values, and then pre-calculate those", "tokens": [50804, 407, 437, 321, 393, 360, 307, 445, 1884, 364, 10225, 295, 10305, 4190, 11, 293, 550, 659, 12, 9895, 2444, 473, 729, 51044], "temperature": 0.0, "avg_logprob": -0.14187966405817892, "compression_ratio": 1.6336996336996337, "no_speech_prob": 0.013221463188529015}, {"id": 216, "seek": 90590, "start": 919.5, "end": 925.9, "text": " for each particle, so that we can just use those cached values in our gradient function.", "tokens": [51044, 337, 1184, 12359, 11, 370, 300, 321, 393, 445, 764, 729, 269, 15095, 4190, 294, 527, 16235, 2445, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14187966405817892, "compression_ratio": 1.6336996336996337, "no_speech_prob": 0.013221463188529015}, {"id": 217, "seek": 90590, "start": 925.9, "end": 931.14, "text": " That brings our computation time down from 5 seconds to 18 milliseconds.", "tokens": [51364, 663, 5607, 527, 24903, 565, 760, 490, 1025, 3949, 281, 2443, 34184, 13, 51626], "temperature": 0.0, "avg_logprob": -0.14187966405817892, "compression_ratio": 1.6336996336996337, "no_speech_prob": 0.013221463188529015}, {"id": 218, "seek": 90590, "start": 931.14, "end": 933.42, "text": " I probably should have started with that.", "tokens": [51626, 286, 1391, 820, 362, 1409, 365, 300, 13, 51740], "temperature": 0.0, "avg_logprob": -0.14187966405817892, "compression_ratio": 1.6336996336996337, "no_speech_prob": 0.013221463188529015}, {"id": 219, "seek": 93342, "start": 933.42, "end": 938.3399999999999, "text": " Anyway, it's still not fantastic, but it's at least usable for now.", "tokens": [50364, 5684, 11, 309, 311, 920, 406, 5456, 11, 457, 309, 311, 412, 1935, 29975, 337, 586, 13, 50610], "temperature": 0.0, "avg_logprob": -0.09399846649169921, "compression_ratio": 1.717687074829932, "no_speech_prob": 0.00011591823567869142}, {"id": 220, "seek": 93342, "start": 938.3399999999999, "end": 942.78, "text": " So let's return at last to our little density test over here, and see if we can apply this", "tokens": [50610, 407, 718, 311, 2736, 412, 1036, 281, 527, 707, 10305, 1500, 670, 510, 11, 293, 536, 498, 321, 393, 3079, 341, 50832], "temperature": 0.0, "avg_logprob": -0.09399846649169921, "compression_ratio": 1.717687074829932, "no_speech_prob": 0.00011591823567869142}, {"id": 221, "seek": 93342, "start": 942.78, "end": 946.78, "text": " gradient stuff to make the density be the same everywhere.", "tokens": [50832, 16235, 1507, 281, 652, 264, 10305, 312, 264, 912, 5315, 13, 51032], "temperature": 0.0, "avg_logprob": -0.09399846649169921, "compression_ratio": 1.717687074829932, "no_speech_prob": 0.00011591823567869142}, {"id": 222, "seek": 93342, "start": 946.78, "end": 951.5, "text": " So in the code, I've defined a target density that we want to aim for, along with a pressure", "tokens": [51032, 407, 294, 264, 3089, 11, 286, 600, 7642, 257, 3779, 10305, 300, 321, 528, 281, 5939, 337, 11, 2051, 365, 257, 3321, 51268], "temperature": 0.0, "avg_logprob": -0.09399846649169921, "compression_ratio": 1.717687074829932, "no_speech_prob": 0.00011591823567869142}, {"id": 223, "seek": 93342, "start": 951.5, "end": 956.0999999999999, "text": " multiplier, which is just how strongly we're going to push the particles to try and reach", "tokens": [51268, 44106, 11, 597, 307, 445, 577, 10613, 321, 434, 516, 281, 2944, 264, 10007, 281, 853, 293, 2524, 51498], "temperature": 0.0, "avg_logprob": -0.09399846649169921, "compression_ratio": 1.717687074829932, "no_speech_prob": 0.00011591823567869142}, {"id": 224, "seek": 93342, "start": 956.0999999999999, "end": 957.8199999999999, "text": " that density.", "tokens": [51498, 300, 10305, 13, 51584], "temperature": 0.0, "avg_logprob": -0.09399846649169921, "compression_ratio": 1.717687074829932, "no_speech_prob": 0.00011591823567869142}, {"id": 225, "seek": 93342, "start": 957.8199999999999, "end": 962.18, "text": " Then I've also added this little function for converting the density to a kind of pressure", "tokens": [51584, 1396, 286, 600, 611, 3869, 341, 707, 2445, 337, 29942, 264, 10305, 281, 257, 733, 295, 3321, 51802], "temperature": 0.0, "avg_logprob": -0.09399846649169921, "compression_ratio": 1.717687074829932, "no_speech_prob": 0.00011591823567869142}, {"id": 226, "seek": 96218, "start": 962.18, "end": 966.9, "text": " value, and this just looks at how far away the density is from what we want it to be,", "tokens": [50364, 2158, 11, 293, 341, 445, 1542, 412, 577, 1400, 1314, 264, 10305, 307, 490, 437, 321, 528, 309, 281, 312, 11, 50600], "temperature": 0.0, "avg_logprob": -0.10841780695421942, "compression_ratio": 1.6643356643356644, "no_speech_prob": 0.0017545523587614298}, {"id": 227, "seek": 96218, "start": 966.9, "end": 970.06, "text": " and then multiplies that by the pressure multiplier.", "tokens": [50600, 293, 550, 12788, 530, 300, 538, 264, 3321, 44106, 13, 50758], "temperature": 0.0, "avg_logprob": -0.10841780695421942, "compression_ratio": 1.6643356643356644, "no_speech_prob": 0.0017545523587614298}, {"id": 228, "seek": 96218, "start": 970.06, "end": 974.02, "text": " From what I understand, this isn't really a super realistic way to calculate pressures", "tokens": [50758, 3358, 437, 286, 1223, 11, 341, 1943, 380, 534, 257, 1687, 12465, 636, 281, 8873, 23573, 50956], "temperature": 0.0, "avg_logprob": -0.10841780695421942, "compression_ratio": 1.6643356643356644, "no_speech_prob": 0.0017545523587614298}, {"id": 229, "seek": 96218, "start": 974.02, "end": 979.54, "text": " in a liquid, it more so describes the behavior of gases, but it still seems to be a popular", "tokens": [50956, 294, 257, 6553, 11, 309, 544, 370, 15626, 264, 5223, 295, 21452, 11, 457, 309, 920, 2544, 281, 312, 257, 3743, 51232], "temperature": 0.0, "avg_logprob": -0.10841780695421942, "compression_ratio": 1.6643356643356644, "no_speech_prob": 0.0017545523587614298}, {"id": 230, "seek": 96218, "start": 979.54, "end": 983.54, "text": " choice for its simplicity, so let's stick with it for now at least.", "tokens": [51232, 3922, 337, 1080, 25632, 11, 370, 718, 311, 2897, 365, 309, 337, 586, 412, 1935, 13, 51432], "temperature": 0.0, "avg_logprob": -0.10841780695421942, "compression_ratio": 1.6643356643356644, "no_speech_prob": 0.0017545523587614298}, {"id": 231, "seek": 96218, "start": 983.54, "end": 987.78, "text": " I would like to quickly visualize these values, so I've set up three different colors over", "tokens": [51432, 286, 576, 411, 281, 2661, 23273, 613, 4190, 11, 370, 286, 600, 992, 493, 1045, 819, 4577, 670, 51644], "temperature": 0.0, "avg_logprob": -0.10841780695421942, "compression_ratio": 1.6643356643356644, "no_speech_prob": 0.0017545523587614298}, {"id": 232, "seek": 98778, "start": 987.78, "end": 992.26, "text": " here, one for the regions where it's negative, just meaning that the density is lower than", "tokens": [50364, 510, 11, 472, 337, 264, 10682, 689, 309, 311, 3671, 11, 445, 3620, 300, 264, 10305, 307, 3126, 813, 50588], "temperature": 0.0, "avg_logprob": -0.1310125037805358, "compression_ratio": 1.9405594405594406, "no_speech_prob": 0.013221836648881435}, {"id": 233, "seek": 98778, "start": 992.26, "end": 996.78, "text": " we want it to be, another for where the value is positive, meaning of course that the density", "tokens": [50588, 321, 528, 309, 281, 312, 11, 1071, 337, 689, 264, 2158, 307, 3353, 11, 3620, 295, 1164, 300, 264, 10305, 50814], "temperature": 0.0, "avg_logprob": -0.1310125037805358, "compression_ratio": 1.9405594405594406, "no_speech_prob": 0.013221836648881435}, {"id": 234, "seek": 98778, "start": 996.78, "end": 1001.42, "text": " is higher than we want it to be, and finally one for the boundary between them, where the", "tokens": [50814, 307, 2946, 813, 321, 528, 309, 281, 312, 11, 293, 2721, 472, 337, 264, 12866, 1296, 552, 11, 689, 264, 51046], "temperature": 0.0, "avg_logprob": -0.1310125037805358, "compression_ratio": 1.9405594405594406, "no_speech_prob": 0.013221836648881435}, {"id": 235, "seek": 98778, "start": 1001.42, "end": 1003.02, "text": " density is just right.", "tokens": [51046, 10305, 307, 445, 558, 13, 51126], "temperature": 0.0, "avg_logprob": -0.1310125037805358, "compression_ratio": 1.9405594405594406, "no_speech_prob": 0.013221836648881435}, {"id": 236, "seek": 98778, "start": 1003.02, "end": 1007.86, "text": " I'll also change the particle color to black, so that it stands out a bit better here.", "tokens": [51126, 286, 603, 611, 1319, 264, 12359, 2017, 281, 2211, 11, 370, 300, 309, 7382, 484, 257, 857, 1101, 510, 13, 51368], "temperature": 0.0, "avg_logprob": -0.1310125037805358, "compression_ratio": 1.9405594405594406, "no_speech_prob": 0.013221836648881435}, {"id": 237, "seek": 98778, "start": 1007.86, "end": 1012.62, "text": " Okay, so let's finally get these particles moving along the pressure gradient, and for", "tokens": [51368, 1033, 11, 370, 718, 311, 2721, 483, 613, 10007, 2684, 2051, 264, 3321, 16235, 11, 293, 337, 51606], "temperature": 0.0, "avg_logprob": -0.1310125037805358, "compression_ratio": 1.9405594405594406, "no_speech_prob": 0.013221836648881435}, {"id": 238, "seek": 98778, "start": 1012.62, "end": 1017.22, "text": " that we can just use the gradient function we wrote, which I'll rename to calculate", "tokens": [51606, 300, 321, 393, 445, 764, 264, 16235, 2445, 321, 4114, 11, 597, 286, 603, 36741, 281, 8873, 51836], "temperature": 0.0, "avg_logprob": -0.1310125037805358, "compression_ratio": 1.9405594405594406, "no_speech_prob": 0.013221836648881435}, {"id": 239, "seek": 101722, "start": 1017.22, "end": 1021.74, "text": " pressure force, and then the property we're interested in here is of course the pressure,", "tokens": [50364, 3321, 3464, 11, 293, 550, 264, 4707, 321, 434, 3102, 294, 510, 307, 295, 1164, 264, 3321, 11, 50590], "temperature": 0.0, "avg_logprob": -0.1105535523644809, "compression_ratio": 1.7877697841726619, "no_speech_prob": 0.0008040657849051058}, {"id": 240, "seek": 101722, "start": 1021.74, "end": 1026.46, "text": " so let's substitute in our little pressure calculation.", "tokens": [50590, 370, 718, 311, 15802, 294, 527, 707, 3321, 17108, 13, 50826], "temperature": 0.0, "avg_logprob": -0.1105535523644809, "compression_ratio": 1.7877697841726619, "no_speech_prob": 0.0008040657849051058}, {"id": 241, "seek": 101722, "start": 1026.46, "end": 1031.34, "text": " Then our simulation update loop now looks like this, we still have the gravity, position,", "tokens": [50826, 1396, 527, 16575, 5623, 6367, 586, 1542, 411, 341, 11, 321, 920, 362, 264, 12110, 11, 2535, 11, 51070], "temperature": 0.0, "avg_logprob": -0.1105535523644809, "compression_ratio": 1.7877697841726619, "no_speech_prob": 0.0008040657849051058}, {"id": 242, "seek": 101722, "start": 1031.34, "end": 1035.66, "text": " and collision stuff from before, but I've added in the density caching we decided to", "tokens": [51070, 293, 24644, 1507, 490, 949, 11, 457, 286, 600, 3869, 294, 264, 10305, 269, 2834, 321, 3047, 281, 51286], "temperature": 0.0, "avg_logprob": -0.1105535523644809, "compression_ratio": 1.7877697841726619, "no_speech_prob": 0.0008040657849051058}, {"id": 243, "seek": 101722, "start": 1035.66, "end": 1036.82, "text": " do.", "tokens": [51286, 360, 13, 51344], "temperature": 0.0, "avg_logprob": -0.1105535523644809, "compression_ratio": 1.7877697841726619, "no_speech_prob": 0.0008040657849051058}, {"id": 244, "seek": 101722, "start": 1036.82, "end": 1040.74, "text": " We still need to actually apply the pressure forces here though, so I'll make another", "tokens": [51344, 492, 920, 643, 281, 767, 3079, 264, 3321, 5874, 510, 1673, 11, 370, 286, 603, 652, 1071, 51540], "temperature": 0.0, "avg_logprob": -0.1105535523644809, "compression_ratio": 1.7877697841726619, "no_speech_prob": 0.0008040657849051058}, {"id": 245, "seek": 101722, "start": 1040.74, "end": 1045.22, "text": " loop quickly to calculate those for each of the particles, and then we know that force", "tokens": [51540, 6367, 2661, 281, 8873, 729, 337, 1184, 295, 264, 10007, 11, 293, 550, 321, 458, 300, 3464, 51764], "temperature": 0.0, "avg_logprob": -0.1105535523644809, "compression_ratio": 1.7877697841726619, "no_speech_prob": 0.0008040657849051058}, {"id": 246, "seek": 104522, "start": 1045.22, "end": 1050.7, "text": " equals mass times acceleration, so acceleration is force over mass.", "tokens": [50364, 6915, 2758, 1413, 17162, 11, 370, 17162, 307, 3464, 670, 2758, 13, 50638], "temperature": 0.0, "avg_logprob": -0.14258868023029808, "compression_ratio": 1.7550200803212852, "no_speech_prob": 0.003272910136729479}, {"id": 247, "seek": 104522, "start": 1050.7, "end": 1055.5, "text": " So my first thought was to just calculate the acceleration like this, but actually we're", "tokens": [50638, 407, 452, 700, 1194, 390, 281, 445, 8873, 264, 17162, 411, 341, 11, 457, 767, 321, 434, 50878], "temperature": 0.0, "avg_logprob": -0.14258868023029808, "compression_ratio": 1.7550200803212852, "no_speech_prob": 0.003272910136729479}, {"id": 248, "seek": 104522, "start": 1055.5, "end": 1060.8600000000001, "text": " thinking about the movement of tiny volumes of fluid here, and density is the mass per", "tokens": [50878, 1953, 466, 264, 3963, 295, 5870, 22219, 295, 9113, 510, 11, 293, 10305, 307, 264, 2758, 680, 51146], "temperature": 0.0, "avg_logprob": -0.14258868023029808, "compression_ratio": 1.7550200803212852, "no_speech_prob": 0.003272910136729479}, {"id": 249, "seek": 104522, "start": 1060.8600000000001, "end": 1064.66, "text": " volume, so it's in fact the density that we want to use instead.", "tokens": [51146, 5523, 11, 370, 309, 311, 294, 1186, 264, 10305, 300, 321, 528, 281, 764, 2602, 13, 51336], "temperature": 0.0, "avg_logprob": -0.14258868023029808, "compression_ratio": 1.7550200803212852, "no_speech_prob": 0.003272910136729479}, {"id": 250, "seek": 104522, "start": 1064.66, "end": 1068.9, "text": " Alright, all that's left then is to just increase the particles of velocity by this", "tokens": [51336, 2798, 11, 439, 300, 311, 1411, 550, 307, 281, 445, 3488, 264, 10007, 295, 9269, 538, 341, 51548], "temperature": 0.0, "avg_logprob": -0.14258868023029808, "compression_ratio": 1.7550200803212852, "no_speech_prob": 0.003272910136729479}, {"id": 251, "seek": 104522, "start": 1068.9, "end": 1073.14, "text": " acceleration, and we can finally try it out.", "tokens": [51548, 17162, 11, 293, 321, 393, 2721, 853, 309, 484, 13, 51760], "temperature": 0.0, "avg_logprob": -0.14258868023029808, "compression_ratio": 1.7550200803212852, "no_speech_prob": 0.003272910136729479}, {"id": 252, "seek": 107314, "start": 1073.14, "end": 1078.42, "text": " This has been a long time coming, so let's get a little drumroll going.", "tokens": [50364, 639, 575, 668, 257, 938, 565, 1348, 11, 370, 718, 311, 483, 257, 707, 10206, 3970, 516, 13, 50628], "temperature": 0.0, "avg_logprob": -0.19371363899924537, "compression_ratio": 1.6639676113360324, "no_speech_prob": 0.000709658779669553}, {"id": 253, "seek": 107314, "start": 1078.42, "end": 1083.38, "text": " Ah, the curse of the drumroll continues.", "tokens": [50628, 2438, 11, 264, 17139, 295, 264, 10206, 3970, 6515, 13, 50876], "temperature": 0.0, "avg_logprob": -0.19371363899924537, "compression_ratio": 1.6639676113360324, "no_speech_prob": 0.000709658779669553}, {"id": 254, "seek": 107314, "start": 1083.38, "end": 1088.18, "text": " Okay, the positions are all not a number I see, so most likely we're dividing by", "tokens": [50876, 1033, 11, 264, 8432, 366, 439, 406, 257, 1230, 286, 536, 11, 370, 881, 3700, 321, 434, 26764, 538, 51116], "temperature": 0.0, "avg_logprob": -0.19371363899924537, "compression_ratio": 1.6639676113360324, "no_speech_prob": 0.000709658779669553}, {"id": 255, "seek": 107314, "start": 1088.18, "end": 1089.18, "text": " zero somewhere.", "tokens": [51116, 4018, 4079, 13, 51166], "temperature": 0.0, "avg_logprob": -0.19371363899924537, "compression_ratio": 1.6639676113360324, "no_speech_prob": 0.000709658779669553}, {"id": 256, "seek": 107314, "start": 1089.18, "end": 1094.38, "text": " Oh, of course, we're being given the position of a particle here, but then we're also", "tokens": [51166, 876, 11, 295, 1164, 11, 321, 434, 885, 2212, 264, 2535, 295, 257, 12359, 510, 11, 457, 550, 321, 434, 611, 51426], "temperature": 0.0, "avg_logprob": -0.19371363899924537, "compression_ratio": 1.6639676113360324, "no_speech_prob": 0.000709658779669553}, {"id": 257, "seek": 107314, "start": 1094.38, "end": 1098.5800000000002, "text": " looping over all the particles and finding the distance between the two.", "tokens": [51426, 6367, 278, 670, 439, 264, 10007, 293, 5006, 264, 4560, 1296, 264, 732, 13, 51636], "temperature": 0.0, "avg_logprob": -0.19371363899924537, "compression_ratio": 1.6639676113360324, "no_speech_prob": 0.000709658779669553}, {"id": 258, "seek": 107314, "start": 1098.5800000000002, "end": 1101.1000000000001, "text": " And that's where everything's going wrong.", "tokens": [51636, 400, 300, 311, 689, 1203, 311, 516, 2085, 13, 51762], "temperature": 0.0, "avg_logprob": -0.19371363899924537, "compression_ratio": 1.6639676113360324, "no_speech_prob": 0.000709658779669553}, {"id": 259, "seek": 110110, "start": 1101.1, "end": 1105.1399999999999, "text": " I guess what I'll do is just have this function take in the particle index instead of the", "tokens": [50364, 286, 2041, 437, 286, 603, 360, 307, 445, 362, 341, 2445, 747, 294, 264, 12359, 8186, 2602, 295, 264, 50566], "temperature": 0.0, "avg_logprob": -0.16590066858240077, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.00010889617260545492}, {"id": 260, "seek": 110110, "start": 1105.1399999999999, "end": 1109.62, "text": " position, and that way we can very easily just skip over the case where the two particles", "tokens": [50566, 2535, 11, 293, 300, 636, 321, 393, 588, 3612, 445, 10023, 670, 264, 1389, 689, 264, 732, 10007, 50790], "temperature": 0.0, "avg_logprob": -0.16590066858240077, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.00010889617260545492}, {"id": 261, "seek": 110110, "start": 1109.62, "end": 1111.34, "text": " are the same.", "tokens": [50790, 366, 264, 912, 13, 50876], "temperature": 0.0, "avg_logprob": -0.16590066858240077, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.00010889617260545492}, {"id": 262, "seek": 110110, "start": 1111.34, "end": 1116.78, "text": " Okay, I just need to fix this up quickly, and I suppose it is technically possible for", "tokens": [50876, 1033, 11, 286, 445, 643, 281, 3191, 341, 493, 2661, 11, 293, 286, 7297, 309, 307, 12120, 1944, 337, 51148], "temperature": 0.0, "avg_logprob": -0.16590066858240077, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.00010889617260545492}, {"id": 263, "seek": 110110, "start": 1116.78, "end": 1121.54, "text": " two different particles to be in the same position, so if that edge case occurs, let's", "tokens": [51148, 732, 819, 10007, 281, 312, 294, 264, 912, 2535, 11, 370, 498, 300, 4691, 1389, 11843, 11, 718, 311, 51386], "temperature": 0.0, "avg_logprob": -0.16590066858240077, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.00010889617260545492}, {"id": 264, "seek": 110110, "start": 1121.54, "end": 1124.1, "text": " just pick a random direction then.", "tokens": [51386, 445, 1888, 257, 4974, 3513, 550, 13, 51514], "temperature": 0.0, "avg_logprob": -0.16590066858240077, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.00010889617260545492}, {"id": 265, "seek": 110110, "start": 1124.1, "end": 1127.9399999999998, "text": " Alright, let's try this out again.", "tokens": [51514, 2798, 11, 718, 311, 853, 341, 484, 797, 13, 51706], "temperature": 0.0, "avg_logprob": -0.16590066858240077, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.00010889617260545492}, {"id": 266, "seek": 112794, "start": 1128.94, "end": 1133.6200000000001, "text": " Well, at least everything hasn't blinked out of existence, but the particles are getting", "tokens": [50414, 1042, 11, 412, 1935, 1203, 6132, 380, 24667, 292, 484, 295, 9123, 11, 457, 264, 10007, 366, 1242, 50648], "temperature": 0.0, "avg_logprob": -0.1997450235727671, "compression_ratio": 1.5708955223880596, "no_speech_prob": 0.0002611782983876765}, {"id": 267, "seek": 112794, "start": 1133.6200000000001, "end": 1136.8600000000001, "text": " more dense, which is the opposite of what we want.", "tokens": [50648, 544, 18011, 11, 597, 307, 264, 6182, 295, 437, 321, 528, 13, 50810], "temperature": 0.0, "avg_logprob": -0.1997450235727671, "compression_ratio": 1.5708955223880596, "no_speech_prob": 0.0002611782983876765}, {"id": 268, "seek": 112794, "start": 1136.8600000000001, "end": 1139.6200000000001, "text": " I guess I need to stick another minus sign in there somewhere.", "tokens": [50810, 286, 2041, 286, 643, 281, 2897, 1071, 3175, 1465, 294, 456, 4079, 13, 50948], "temperature": 0.0, "avg_logprob": -0.1997450235727671, "compression_ratio": 1.5708955223880596, "no_speech_prob": 0.0002611782983876765}, {"id": 269, "seek": 112794, "start": 1139.6200000000001, "end": 1143.38, "text": " Let's see if this works now at the third time.", "tokens": [50948, 961, 311, 536, 498, 341, 1985, 586, 412, 264, 2636, 565, 13, 51136], "temperature": 0.0, "avg_logprob": -0.1997450235727671, "compression_ratio": 1.5708955223880596, "no_speech_prob": 0.0002611782983876765}, {"id": 270, "seek": 112794, "start": 1143.38, "end": 1150.3, "text": " Okay, that's\u2026 that was looking promising for a moment there, for a brief instant I", "tokens": [51136, 1033, 11, 300, 311, 1260, 300, 390, 1237, 20257, 337, 257, 1623, 456, 11, 337, 257, 5353, 9836, 286, 51482], "temperature": 0.0, "avg_logprob": -0.1997450235727671, "compression_ratio": 1.5708955223880596, "no_speech_prob": 0.0002611782983876765}, {"id": 271, "seek": 112794, "start": 1150.3, "end": 1151.54, "text": " thought it was working.", "tokens": [51482, 1194, 309, 390, 1364, 13, 51544], "temperature": 0.0, "avg_logprob": -0.1997450235727671, "compression_ratio": 1.5708955223880596, "no_speech_prob": 0.0002611782983876765}, {"id": 272, "seek": 112794, "start": 1151.54, "end": 1154.46, "text": " But there's still a lot more red areas than I'm hoping to see.", "tokens": [51544, 583, 456, 311, 920, 257, 688, 544, 2182, 3179, 813, 286, 478, 7159, 281, 536, 13, 51690], "temperature": 0.0, "avg_logprob": -0.1997450235727671, "compression_ratio": 1.5708955223880596, "no_speech_prob": 0.0002611782983876765}, {"id": 273, "seek": 115446, "start": 1154.46, "end": 1159.9, "text": " Ideally, the whole screen should turn white, since that represents our target density.", "tokens": [50364, 40817, 11, 264, 1379, 2568, 820, 1261, 2418, 11, 1670, 300, 8855, 527, 3779, 10305, 13, 50636], "temperature": 0.0, "avg_logprob": -0.1334632713103963, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.00024536511045880616}, {"id": 274, "seek": 115446, "start": 1159.9, "end": 1163.74, "text": " So to try and figure out what's going on, I want to see what happens if, instead of", "tokens": [50636, 407, 281, 853, 293, 2573, 484, 437, 311, 516, 322, 11, 286, 528, 281, 536, 437, 2314, 498, 11, 2602, 295, 50828], "temperature": 0.0, "avg_logprob": -0.1334632713103963, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.00024536511045880616}, {"id": 275, "seek": 115446, "start": 1163.74, "end": 1168.66, "text": " adding the acceleration to the velocity, we just assign it directly, so we're removing", "tokens": [50828, 5127, 264, 17162, 281, 264, 9269, 11, 321, 445, 6269, 309, 3838, 11, 370, 321, 434, 12720, 51074], "temperature": 0.0, "avg_logprob": -0.1334632713103963, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.00024536511045880616}, {"id": 276, "seek": 115446, "start": 1168.66, "end": 1172.94, "text": " any inertia from the particles, they're just purely moving based on the current pressure", "tokens": [51074, 604, 37234, 490, 264, 10007, 11, 436, 434, 445, 17491, 2684, 2361, 322, 264, 2190, 3321, 51288], "temperature": 0.0, "avg_logprob": -0.1334632713103963, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.00024536511045880616}, {"id": 277, "seek": 115446, "start": 1172.94, "end": 1173.94, "text": " force.", "tokens": [51288, 3464, 13, 51338], "temperature": 0.0, "avg_logprob": -0.1334632713103963, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.00024536511045880616}, {"id": 278, "seek": 115446, "start": 1173.94, "end": 1179.18, "text": " Okay, if we run this now, nothing happens, but that's fine, we aren't accumulating", "tokens": [51338, 1033, 11, 498, 321, 1190, 341, 586, 11, 1825, 2314, 11, 457, 300, 311, 2489, 11, 321, 3212, 380, 12989, 12162, 51600], "temperature": 0.0, "avg_logprob": -0.1334632713103963, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.00024536511045880616}, {"id": 279, "seek": 117918, "start": 1179.18, "end": 1183.3, "text": " velocity anymore, so I guess we just need to turn the pressure multiplier up really", "tokens": [50364, 9269, 3602, 11, 370, 286, 2041, 321, 445, 643, 281, 1261, 264, 3321, 44106, 493, 534, 50570], "temperature": 0.0, "avg_logprob": -0.12239175050154977, "compression_ratio": 1.7019867549668874, "no_speech_prob": 0.0023230882361531258}, {"id": 280, "seek": 117918, "start": 1183.3, "end": 1184.3, "text": " high.", "tokens": [50570, 1090, 13, 50620], "temperature": 0.0, "avg_logprob": -0.12239175050154977, "compression_ratio": 1.7019867549668874, "no_speech_prob": 0.0023230882361531258}, {"id": 281, "seek": 117918, "start": 1184.3, "end": 1187.3, "text": " Alright, that looks interesting.", "tokens": [50620, 2798, 11, 300, 1542, 1880, 13, 50770], "temperature": 0.0, "avg_logprob": -0.12239175050154977, "compression_ratio": 1.7019867549668874, "no_speech_prob": 0.0023230882361531258}, {"id": 282, "seek": 117918, "start": 1187.3, "end": 1191.5, "text": " I am a bit surprised by how close together some of these particles are, although they", "tokens": [50770, 286, 669, 257, 857, 6100, 538, 577, 1998, 1214, 512, 295, 613, 10007, 366, 11, 4878, 436, 50980], "temperature": 0.0, "avg_logprob": -0.12239175050154977, "compression_ratio": 1.7019867549668874, "no_speech_prob": 0.0023230882361531258}, {"id": 283, "seek": 117918, "start": 1191.5, "end": 1194.8600000000001, "text": " seem to gradually be pushing each other apart.", "tokens": [50980, 1643, 281, 13145, 312, 7380, 1184, 661, 4936, 13, 51148], "temperature": 0.0, "avg_logprob": -0.12239175050154977, "compression_ratio": 1.7019867549668874, "no_speech_prob": 0.0023230882361531258}, {"id": 284, "seek": 117918, "start": 1194.8600000000001, "end": 1198.5600000000002, "text": " And I actually remember one of the papers mentioning this potential problem with the", "tokens": [51148, 400, 286, 767, 1604, 472, 295, 264, 10577, 18315, 341, 3995, 1154, 365, 264, 51333], "temperature": 0.0, "avg_logprob": -0.12239175050154977, "compression_ratio": 1.7019867549668874, "no_speech_prob": 0.0023230882361531258}, {"id": 285, "seek": 117918, "start": 1198.5600000000002, "end": 1203.3, "text": " smoothing function we're using, since its slope becomes very shallow as the distance", "tokens": [51333, 899, 6259, 571, 2445, 321, 434, 1228, 11, 1670, 1080, 13525, 3643, 588, 20488, 382, 264, 4560, 51570], "temperature": 0.0, "avg_logprob": -0.12239175050154977, "compression_ratio": 1.7019867549668874, "no_speech_prob": 0.0023230882361531258}, {"id": 286, "seek": 117918, "start": 1203.3, "end": 1207.8600000000001, "text": " becomes small, meaning that our pressure force will also be small when the particles are", "tokens": [51570, 3643, 1359, 11, 3620, 300, 527, 3321, 3464, 486, 611, 312, 1359, 562, 264, 10007, 366, 51798], "temperature": 0.0, "avg_logprob": -0.12239175050154977, "compression_ratio": 1.7019867549668874, "no_speech_prob": 0.0023230882361531258}, {"id": 287, "seek": 120786, "start": 1207.9399999999998, "end": 1209.74, "text": " close together.", "tokens": [50368, 1998, 1214, 13, 50458], "temperature": 0.0, "avg_logprob": -0.15250077711797394, "compression_ratio": 1.5971731448763251, "no_speech_prob": 0.0037070908583700657}, {"id": 288, "seek": 120786, "start": 1209.74, "end": 1215.3799999999999, "text": " That seems odd, so let's maybe ditch this nice smooth curve for the spiky version instead,", "tokens": [50458, 663, 2544, 7401, 11, 370, 718, 311, 1310, 25325, 341, 1481, 5508, 7605, 337, 264, 637, 1035, 88, 3037, 2602, 11, 50740], "temperature": 0.0, "avg_logprob": -0.15250077711797394, "compression_ratio": 1.5971731448763251, "no_speech_prob": 0.0037070908583700657}, {"id": 289, "seek": 120786, "start": 1215.3799999999999, "end": 1219.06, "text": " since of course the slope of this one just gets steeper towards zero.", "tokens": [50740, 1670, 295, 1164, 264, 13525, 295, 341, 472, 445, 2170, 16841, 260, 3030, 4018, 13, 50924], "temperature": 0.0, "avg_logprob": -0.15250077711797394, "compression_ratio": 1.5971731448763251, "no_speech_prob": 0.0037070908583700657}, {"id": 290, "seek": 120786, "start": 1219.06, "end": 1223.78, "text": " So I had to do the volume and derivative calculations again, but ended up with these", "tokens": [50924, 407, 286, 632, 281, 360, 264, 5523, 293, 13760, 20448, 797, 11, 457, 4590, 493, 365, 613, 51160], "temperature": 0.0, "avg_logprob": -0.15250077711797394, "compression_ratio": 1.5971731448763251, "no_speech_prob": 0.0037070908583700657}, {"id": 291, "seek": 120786, "start": 1223.78, "end": 1226.02, "text": " two functions here.", "tokens": [51160, 732, 6828, 510, 13, 51272], "temperature": 0.0, "avg_logprob": -0.15250077711797394, "compression_ratio": 1.5971731448763251, "no_speech_prob": 0.0037070908583700657}, {"id": 292, "seek": 120786, "start": 1226.02, "end": 1230.2199999999998, "text": " Plugging those in, we can see our little map looks just ever so slightly different, and", "tokens": [51272, 40740, 3249, 729, 294, 11, 321, 393, 536, 527, 707, 4471, 1542, 445, 1562, 370, 4748, 819, 11, 293, 51482], "temperature": 0.0, "avg_logprob": -0.15250077711797394, "compression_ratio": 1.5971731448763251, "no_speech_prob": 0.0037070908583700657}, {"id": 293, "seek": 120786, "start": 1230.2199999999998, "end": 1235.4599999999998, "text": " then I'm going to turn up the pressure multiplier again now, and see what happens.", "tokens": [51482, 550, 286, 478, 516, 281, 1261, 493, 264, 3321, 44106, 797, 586, 11, 293, 536, 437, 2314, 13, 51744], "temperature": 0.0, "avg_logprob": -0.15250077711797394, "compression_ratio": 1.5971731448763251, "no_speech_prob": 0.0037070908583700657}, {"id": 294, "seek": 123546, "start": 1236.42, "end": 1238.98, "text": " Okay, that's looking a lot better actually.", "tokens": [50412, 1033, 11, 300, 311, 1237, 257, 688, 1101, 767, 13, 50540], "temperature": 0.0, "avg_logprob": -0.17782398370596078, "compression_ratio": 1.6265060240963856, "no_speech_prob": 7.030984852463007e-05}, {"id": 295, "seek": 123546, "start": 1238.98, "end": 1242.94, "text": " The question now though is what does it look like if we put the acceleration back to how", "tokens": [50540, 440, 1168, 586, 1673, 307, 437, 775, 309, 574, 411, 498, 321, 829, 264, 17162, 646, 281, 577, 50738], "temperature": 0.0, "avg_logprob": -0.17782398370596078, "compression_ratio": 1.6265060240963856, "no_speech_prob": 7.030984852463007e-05}, {"id": 296, "seek": 123546, "start": 1242.94, "end": 1244.7, "text": " it's supposed to be.", "tokens": [50738, 309, 311, 3442, 281, 312, 13, 50826], "temperature": 0.0, "avg_logprob": -0.17782398370596078, "compression_ratio": 1.6265060240963856, "no_speech_prob": 7.030984852463007e-05}, {"id": 297, "seek": 123546, "start": 1244.7, "end": 1250.8600000000001, "text": " So I've changed it back, and I'm going to try running this again.", "tokens": [50826, 407, 286, 600, 3105, 309, 646, 11, 293, 286, 478, 516, 281, 853, 2614, 341, 797, 13, 51134], "temperature": 0.0, "avg_logprob": -0.17782398370596078, "compression_ratio": 1.6265060240963856, "no_speech_prob": 7.030984852463007e-05}, {"id": 298, "seek": 123546, "start": 1250.8600000000001, "end": 1255.06, "text": " Let's maybe try increasing the pressure multiplier a bit, so that the particles can react more", "tokens": [51134, 961, 311, 1310, 853, 5662, 264, 3321, 44106, 257, 857, 11, 370, 300, 264, 10007, 393, 4515, 544, 51344], "temperature": 0.0, "avg_logprob": -0.17782398370596078, "compression_ratio": 1.6265060240963856, "no_speech_prob": 7.030984852463007e-05}, {"id": 299, "seek": 123546, "start": 1255.06, "end": 1257.38, "text": " quickly.", "tokens": [51344, 2661, 13, 51460], "temperature": 0.0, "avg_logprob": -0.17782398370596078, "compression_ratio": 1.6265060240963856, "no_speech_prob": 7.030984852463007e-05}, {"id": 300, "seek": 123546, "start": 1257.38, "end": 1261.8600000000001, "text": " That's looking reasonably good I think, although maybe I'm imagining this, but it", "tokens": [51460, 663, 311, 1237, 23551, 665, 286, 519, 11, 4878, 1310, 286, 478, 27798, 341, 11, 457, 309, 51684], "temperature": 0.0, "avg_logprob": -0.17782398370596078, "compression_ratio": 1.6265060240963856, "no_speech_prob": 7.030984852463007e-05}, {"id": 301, "seek": 126186, "start": 1261.86, "end": 1265.3799999999999, "text": " seems to be getting worse over time.", "tokens": [50364, 2544, 281, 312, 1242, 5324, 670, 565, 13, 50540], "temperature": 0.0, "avg_logprob": -0.17969525028282488, "compression_ratio": 1.4871794871794872, "no_speech_prob": 5.1441802497720346e-05}, {"id": 302, "seek": 126186, "start": 1265.3799999999999, "end": 1271.06, "text": " Okay, I'm definitely not imagining it.", "tokens": [50540, 1033, 11, 286, 478, 2138, 406, 27798, 309, 13, 50824], "temperature": 0.0, "avg_logprob": -0.17969525028282488, "compression_ratio": 1.4871794871794872, "no_speech_prob": 5.1441802497720346e-05}, {"id": 303, "seek": 126186, "start": 1271.06, "end": 1275.62, "text": " So another thing we need to think about is Newton's third law of motion.", "tokens": [50824, 407, 1071, 551, 321, 643, 281, 519, 466, 307, 19541, 311, 2636, 2101, 295, 5394, 13, 51052], "temperature": 0.0, "avg_logprob": -0.17969525028282488, "compression_ratio": 1.4871794871794872, "no_speech_prob": 5.1441802497720346e-05}, {"id": 304, "seek": 126186, "start": 1275.62, "end": 1284.6599999999999, "text": " Every force has an equal and opposite reaction force.", "tokens": [51052, 2048, 3464, 575, 364, 2681, 293, 6182, 5480, 3464, 13, 51504], "temperature": 0.0, "avg_logprob": -0.17969525028282488, "compression_ratio": 1.4871794871794872, "no_speech_prob": 5.1441802497720346e-05}, {"id": 305, "seek": 126186, "start": 1284.6599999999999, "end": 1288.78, "text": " So when we're adding on this pressure force between the current particle and some other", "tokens": [51504, 407, 562, 321, 434, 5127, 322, 341, 3321, 3464, 1296, 264, 2190, 12359, 293, 512, 661, 51710], "temperature": 0.0, "avg_logprob": -0.17969525028282488, "compression_ratio": 1.4871794871794872, "no_speech_prob": 5.1441802497720346e-05}, {"id": 306, "seek": 128878, "start": 1288.78, "end": 1294.42, "text": " particle, we want to make sure that the other particle experiences the same force, just in", "tokens": [50364, 12359, 11, 321, 528, 281, 652, 988, 300, 264, 661, 12359, 5235, 264, 912, 3464, 11, 445, 294, 50646], "temperature": 0.0, "avg_logprob": -0.11370950937271118, "compression_ratio": 1.68, "no_speech_prob": 0.004330997820943594}, {"id": 307, "seek": 128878, "start": 1294.42, "end": 1295.42, "text": " the other direction.", "tokens": [50646, 264, 661, 3513, 13, 50696], "temperature": 0.0, "avg_logprob": -0.11370950937271118, "compression_ratio": 1.68, "no_speech_prob": 0.004330997820943594}, {"id": 308, "seek": 128878, "start": 1295.42, "end": 1300.3799999999999, "text": " I've seen a bunch of different suggestions on how to actually do this, but a nice simple", "tokens": [50696, 286, 600, 1612, 257, 3840, 295, 819, 13396, 322, 577, 281, 767, 360, 341, 11, 457, 257, 1481, 2199, 50944], "temperature": 0.0, "avg_logprob": -0.11370950937271118, "compression_ratio": 1.68, "no_speech_prob": 0.004330997820943594}, {"id": 309, "seek": 128878, "start": 1300.3799999999999, "end": 1305.62, "text": " version is to calculate this shared pressure, which is literally just the average of the", "tokens": [50944, 3037, 307, 281, 8873, 341, 5507, 3321, 11, 597, 307, 3736, 445, 264, 4274, 295, 264, 51206], "temperature": 0.0, "avg_logprob": -0.11370950937271118, "compression_ratio": 1.68, "no_speech_prob": 0.004330997820943594}, {"id": 310, "seek": 128878, "start": 1305.62, "end": 1309.94, "text": " pressure values calculated at both particles.", "tokens": [51206, 3321, 4190, 15598, 412, 1293, 10007, 13, 51422], "temperature": 0.0, "avg_logprob": -0.11370950937271118, "compression_ratio": 1.68, "no_speech_prob": 0.004330997820943594}, {"id": 311, "seek": 128878, "start": 1309.94, "end": 1318.58, "text": " So let's try that out quickly, and I'll just increase the pressure multiplier again.", "tokens": [51422, 407, 718, 311, 853, 300, 484, 2661, 11, 293, 286, 603, 445, 3488, 264, 3321, 44106, 797, 13, 51854], "temperature": 0.0, "avg_logprob": -0.11370950937271118, "compression_ratio": 1.68, "no_speech_prob": 0.004330997820943594}, {"id": 312, "seek": 131858, "start": 1318.58, "end": 1321.5, "text": " And this does seem to have made a pretty big difference.", "tokens": [50364, 400, 341, 775, 1643, 281, 362, 1027, 257, 1238, 955, 2649, 13, 50510], "temperature": 0.0, "avg_logprob": -0.1535946255638486, "compression_ratio": 1.5670498084291187, "no_speech_prob": 0.0009849821217358112}, {"id": 313, "seek": 131858, "start": 1321.5, "end": 1325.1, "text": " I guess maybe that Newton guy was onto something.", "tokens": [50510, 286, 2041, 1310, 300, 19541, 2146, 390, 3911, 746, 13, 50690], "temperature": 0.0, "avg_logprob": -0.1535946255638486, "compression_ratio": 1.5670498084291187, "no_speech_prob": 0.0009849821217358112}, {"id": 314, "seek": 131858, "start": 1325.1, "end": 1329.1399999999999, "text": " Now we're only dealing with a few hundred particles at the moment, which is not very", "tokens": [50690, 823, 321, 434, 787, 6260, 365, 257, 1326, 3262, 10007, 412, 264, 1623, 11, 597, 307, 406, 588, 50892], "temperature": 0.0, "avg_logprob": -0.1535946255638486, "compression_ratio": 1.5670498084291187, "no_speech_prob": 0.0009849821217358112}, {"id": 315, "seek": 131858, "start": 1329.1399999999999, "end": 1334.78, "text": " many, so let's ramp this up to a few thousand instead.", "tokens": [50892, 867, 11, 370, 718, 311, 12428, 341, 493, 281, 257, 1326, 4714, 2602, 13, 51174], "temperature": 0.0, "avg_logprob": -0.1535946255638486, "compression_ratio": 1.5670498084291187, "no_speech_prob": 0.0009849821217358112}, {"id": 316, "seek": 131858, "start": 1334.78, "end": 1338.22, "text": " And this is running at 5 frames per second.", "tokens": [51174, 400, 341, 307, 2614, 412, 1025, 12083, 680, 1150, 13, 51346], "temperature": 0.0, "avg_logprob": -0.1535946255638486, "compression_ratio": 1.5670498084291187, "no_speech_prob": 0.0009849821217358112}, {"id": 317, "seek": 131858, "start": 1338.22, "end": 1340.4199999999998, "text": " So we'd better start optimizing.", "tokens": [51346, 407, 321, 1116, 1101, 722, 40425, 13, 51456], "temperature": 0.0, "avg_logprob": -0.1535946255638486, "compression_ratio": 1.5670498084291187, "no_speech_prob": 0.0009849821217358112}, {"id": 318, "seek": 131858, "start": 1340.4199999999998, "end": 1344.8999999999999, "text": " And by far the most critical place to do that is when we're calculating the densities", "tokens": [51456, 400, 538, 1400, 264, 881, 4924, 1081, 281, 360, 300, 307, 562, 321, 434, 28258, 264, 24505, 1088, 51680], "temperature": 0.0, "avg_logprob": -0.1535946255638486, "compression_ratio": 1.5670498084291187, "no_speech_prob": 0.0009849821217358112}, {"id": 319, "seek": 134490, "start": 1344.9, "end": 1349.94, "text": " and pressure forces, we should rarely avoid looping over all the particles that lie outside", "tokens": [50364, 293, 3321, 5874, 11, 321, 820, 13752, 5042, 6367, 278, 670, 439, 264, 10007, 300, 4544, 2380, 50616], "temperature": 0.0, "avg_logprob": -0.08370670477549234, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.0035934951156377792}, {"id": 320, "seek": 134490, "start": 1349.94, "end": 1354.22, "text": " of the smoothing radius, since those don't contribute anything, and they're slowing", "tokens": [50616, 295, 264, 899, 6259, 571, 15845, 11, 1670, 729, 500, 380, 10586, 1340, 11, 293, 436, 434, 26958, 50830], "temperature": 0.0, "avg_logprob": -0.08370670477549234, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.0035934951156377792}, {"id": 321, "seek": 134490, "start": 1354.22, "end": 1357.02, "text": " us down immensely.", "tokens": [50830, 505, 760, 38674, 13, 50970], "temperature": 0.0, "avg_logprob": -0.08370670477549234, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.0035934951156377792}, {"id": 322, "seek": 134490, "start": 1357.02, "end": 1361.68, "text": " To do this, we're going to need to chop space up into a grid, and we'll choose the size", "tokens": [50970, 1407, 360, 341, 11, 321, 434, 516, 281, 643, 281, 7931, 1901, 493, 666, 257, 10748, 11, 293, 321, 603, 2826, 264, 2744, 51203], "temperature": 0.0, "avg_logprob": -0.08370670477549234, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.0035934951156377792}, {"id": 323, "seek": 134490, "start": 1361.68, "end": 1366.8200000000002, "text": " of the grid cells to be the same as our smoothing radius, since that means, if we imagine there's", "tokens": [51203, 295, 264, 10748, 5438, 281, 312, 264, 912, 382, 527, 899, 6259, 571, 15845, 11, 1670, 300, 1355, 11, 498, 321, 3811, 456, 311, 51460], "temperature": 0.0, "avg_logprob": -0.08370670477549234, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.0035934951156377792}, {"id": 324, "seek": 134490, "start": 1366.8200000000002, "end": 1371.38, "text": " a bunch of particles on here, that means that to find the particles inside of the smoothing", "tokens": [51460, 257, 3840, 295, 10007, 322, 510, 11, 300, 1355, 300, 281, 915, 264, 10007, 1854, 295, 264, 899, 6259, 571, 51688], "temperature": 0.0, "avg_logprob": -0.08370670477549234, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.0035934951156377792}, {"id": 325, "seek": 137138, "start": 1371.38, "end": 1377.6200000000001, "text": " radius, we only need to consider the 3x3 grid of cells around the center of our circle.", "tokens": [50364, 15845, 11, 321, 787, 643, 281, 1949, 264, 805, 87, 18, 10748, 295, 5438, 926, 264, 3056, 295, 527, 6329, 13, 50676], "temperature": 0.0, "avg_logprob": -0.08905894279479981, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.0001535486662760377}, {"id": 326, "seek": 137138, "start": 1377.6200000000001, "end": 1385.18, "text": " And in that way of course, we cut out a huge amount of unnecessary work.", "tokens": [50676, 400, 294, 300, 636, 295, 1164, 11, 321, 1723, 484, 257, 2603, 2372, 295, 19350, 589, 13, 51054], "temperature": 0.0, "avg_logprob": -0.08905894279479981, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.0001535486662760377}, {"id": 327, "seek": 137138, "start": 1385.18, "end": 1389.5, "text": " Now to actually implement this, we could say that each cell has its own list that grows", "tokens": [51054, 823, 281, 767, 4445, 341, 11, 321, 727, 584, 300, 1184, 2815, 575, 1080, 1065, 1329, 300, 13156, 51270], "temperature": 0.0, "avg_logprob": -0.08905894279479981, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.0001535486662760377}, {"id": 328, "seek": 137138, "start": 1389.5, "end": 1393.7800000000002, "text": " or shrinks to hold however many particles are currently inside of it.", "tokens": [51270, 420, 9884, 16431, 281, 1797, 4461, 867, 10007, 366, 4362, 1854, 295, 309, 13, 51484], "temperature": 0.0, "avg_logprob": -0.08905894279479981, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.0001535486662760377}, {"id": 329, "seek": 137138, "start": 1393.7800000000002, "end": 1397.66, "text": " But we're probably going to want to convert the whole simulation to a compute shader at", "tokens": [51484, 583, 321, 434, 1391, 516, 281, 528, 281, 7620, 264, 1379, 16575, 281, 257, 14722, 5744, 260, 412, 51678], "temperature": 0.0, "avg_logprob": -0.08905894279479981, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.0001535486662760377}, {"id": 330, "seek": 139766, "start": 1397.66, "end": 1402.78, "text": " some point to run on the GPU, and there we need to be able to specify ahead of time how", "tokens": [50364, 512, 935, 281, 1190, 322, 264, 18407, 11, 293, 456, 321, 643, 281, 312, 1075, 281, 16500, 2286, 295, 565, 577, 50620], "temperature": 0.0, "avg_logprob": -0.1140303441456386, "compression_ratio": 1.6022304832713754, "no_speech_prob": 0.020961355417966843}, {"id": 331, "seek": 139766, "start": 1402.78, "end": 1404.7, "text": " much memory we're going to use.", "tokens": [50620, 709, 4675, 321, 434, 516, 281, 764, 13, 50716], "temperature": 0.0, "avg_logprob": -0.1140303441456386, "compression_ratio": 1.6022304832713754, "no_speech_prob": 0.020961355417966843}, {"id": 332, "seek": 139766, "start": 1404.7, "end": 1409.02, "text": " So I'd like to experiment with a different GPU friendly approach, which I've been reading", "tokens": [50716, 407, 286, 1116, 411, 281, 5120, 365, 257, 819, 18407, 9208, 3109, 11, 597, 286, 600, 668, 3760, 50932], "temperature": 0.0, "avg_logprob": -0.1140303441456386, "compression_ratio": 1.6022304832713754, "no_speech_prob": 0.020961355417966843}, {"id": 333, "seek": 139766, "start": 1409.02, "end": 1411.26, "text": " about in this paper here.", "tokens": [50932, 466, 294, 341, 3035, 510, 13, 51044], "temperature": 0.0, "avg_logprob": -0.1140303441456386, "compression_ratio": 1.6022304832713754, "no_speech_prob": 0.020961355417966843}, {"id": 334, "seek": 139766, "start": 1411.26, "end": 1415.1000000000001, "text": " I'm going to modify it very slightly though, so that we don't need to know the dimensions", "tokens": [51044, 286, 478, 516, 281, 16927, 309, 588, 4748, 1673, 11, 370, 300, 321, 500, 380, 643, 281, 458, 264, 12819, 51236], "temperature": 0.0, "avg_logprob": -0.1140303441456386, "compression_ratio": 1.6022304832713754, "no_speech_prob": 0.020961355417966843}, {"id": 335, "seek": 139766, "start": 1415.1000000000001, "end": 1419.6200000000001, "text": " of the grid ahead of time, meaning that particles can travel anywhere in the world, and it'll", "tokens": [51236, 295, 264, 10748, 2286, 295, 565, 11, 3620, 300, 10007, 393, 3147, 4992, 294, 264, 1002, 11, 293, 309, 603, 51462], "temperature": 0.0, "avg_logprob": -0.1140303441456386, "compression_ratio": 1.6022304832713754, "no_speech_prob": 0.020961355417966843}, {"id": 336, "seek": 139766, "start": 1419.6200000000001, "end": 1422.38, "text": " still work.", "tokens": [51462, 920, 589, 13, 51600], "temperature": 0.0, "avg_logprob": -0.1140303441456386, "compression_ratio": 1.6022304832713754, "no_speech_prob": 0.020961355417966843}, {"id": 337, "seek": 142238, "start": 1422.38, "end": 1428.3000000000002, "text": " So what we'll do is create a single array with at least as many entries as we have particles,", "tokens": [50364, 407, 437, 321, 603, 360, 307, 1884, 257, 2167, 10225, 365, 412, 1935, 382, 867, 23041, 382, 321, 362, 10007, 11, 50660], "temperature": 0.0, "avg_logprob": -0.09193594172849494, "compression_ratio": 1.7328244274809161, "no_speech_prob": 0.0011335458839312196}, {"id": 338, "seek": 142238, "start": 1428.3000000000002, "end": 1433.66, "text": " so here it has 10 entries, meaning in this case we could have at most 10 particles.", "tokens": [50660, 370, 510, 309, 575, 1266, 23041, 11, 3620, 294, 341, 1389, 321, 727, 362, 412, 881, 1266, 10007, 13, 50928], "temperature": 0.0, "avg_logprob": -0.09193594172849494, "compression_ratio": 1.7328244274809161, "no_speech_prob": 0.0011335458839312196}, {"id": 339, "seek": 142238, "start": 1433.66, "end": 1437.22, "text": " Then for each of these particles, we're going to calculate the coordinate of the cell that", "tokens": [50928, 1396, 337, 1184, 295, 613, 10007, 11, 321, 434, 516, 281, 8873, 264, 15670, 295, 264, 2815, 300, 51106], "temperature": 0.0, "avg_logprob": -0.09193594172849494, "compression_ratio": 1.7328244274809161, "no_speech_prob": 0.0011335458839312196}, {"id": 340, "seek": 142238, "start": 1437.22, "end": 1438.22, "text": " it's in.", "tokens": [51106, 309, 311, 294, 13, 51156], "temperature": 0.0, "avg_logprob": -0.09193594172849494, "compression_ratio": 1.7328244274809161, "no_speech_prob": 0.0011335458839312196}, {"id": 341, "seek": 142238, "start": 1438.22, "end": 1444.98, "text": " So for example particle 0, which happens to be this one over here, is in the cell 2,0.", "tokens": [51156, 407, 337, 1365, 12359, 1958, 11, 597, 2314, 281, 312, 341, 472, 670, 510, 11, 307, 294, 264, 2815, 568, 11, 15, 13, 51494], "temperature": 0.0, "avg_logprob": -0.09193594172849494, "compression_ratio": 1.7328244274809161, "no_speech_prob": 0.0011335458839312196}, {"id": 342, "seek": 142238, "start": 1444.98, "end": 1449.2600000000002, "text": " We need to turn that coordinate into a single number to make it easy to work with though,", "tokens": [51494, 492, 643, 281, 1261, 300, 15670, 666, 257, 2167, 1230, 281, 652, 309, 1858, 281, 589, 365, 1673, 11, 51708], "temperature": 0.0, "avg_logprob": -0.09193594172849494, "compression_ratio": 1.7328244274809161, "no_speech_prob": 0.0011335458839312196}, {"id": 343, "seek": 144926, "start": 1449.26, "end": 1453.98, "text": " so we can just do something like multiply the x and y by two different prime numbers,", "tokens": [50364, 370, 321, 393, 445, 360, 746, 411, 12972, 264, 2031, 293, 288, 538, 732, 819, 5835, 3547, 11, 50600], "temperature": 0.0, "avg_logprob": -0.10020035617756394, "compression_ratio": 1.6506024096385543, "no_speech_prob": 0.00026947431615553796}, {"id": 344, "seek": 144926, "start": 1453.98, "end": 1457.82, "text": " and then add them together to get some arbitrary hash value.", "tokens": [50600, 293, 550, 909, 552, 1214, 281, 483, 512, 23211, 22019, 2158, 13, 50792], "temperature": 0.0, "avg_logprob": -0.10020035617756394, "compression_ratio": 1.6506024096385543, "no_speech_prob": 0.00026947431615553796}, {"id": 345, "seek": 144926, "start": 1457.82, "end": 1462.14, "text": " We can then wrap that around the length of the array so that it becomes a valid index,", "tokens": [50792, 492, 393, 550, 7019, 300, 926, 264, 4641, 295, 264, 10225, 370, 300, 309, 3643, 257, 7363, 8186, 11, 51008], "temperature": 0.0, "avg_logprob": -0.10020035617756394, "compression_ratio": 1.6506024096385543, "no_speech_prob": 0.00026947431615553796}, {"id": 346, "seek": 144926, "start": 1462.14, "end": 1468.5, "text": " 3 in this case, and let's call that our cell key, not to be confused with the seal people.", "tokens": [51008, 805, 294, 341, 1389, 11, 293, 718, 311, 818, 300, 527, 2815, 2141, 11, 406, 281, 312, 9019, 365, 264, 12185, 561, 13, 51326], "temperature": 0.0, "avg_logprob": -0.10020035617756394, "compression_ratio": 1.6506024096385543, "no_speech_prob": 0.00026947431615553796}, {"id": 347, "seek": 144926, "start": 1468.5, "end": 1474.78, "text": " So since this was point 0, we'll store the cell key over here at index 0 in the array.", "tokens": [51326, 407, 1670, 341, 390, 935, 1958, 11, 321, 603, 3531, 264, 2815, 2141, 670, 510, 412, 8186, 1958, 294, 264, 10225, 13, 51640], "temperature": 0.0, "avg_logprob": -0.10020035617756394, "compression_ratio": 1.6506024096385543, "no_speech_prob": 0.00026947431615553796}, {"id": 348, "seek": 147478, "start": 1474.78, "end": 1480.06, "text": " And the next point, it turns out, has a key of 6, and so we'll record that in the next", "tokens": [50364, 400, 264, 958, 935, 11, 309, 4523, 484, 11, 575, 257, 2141, 295, 1386, 11, 293, 370, 321, 603, 2136, 300, 294, 264, 958, 50628], "temperature": 0.0, "avg_logprob": -0.12672459284464518, "compression_ratio": 1.7551867219917012, "no_speech_prob": 0.00030533052631653845}, {"id": 349, "seek": 147478, "start": 1480.06, "end": 1481.42, "text": " place.", "tokens": [50628, 1081, 13, 50696], "temperature": 0.0, "avg_logprob": -0.12672459284464518, "compression_ratio": 1.7551867219917012, "no_speech_prob": 0.00030533052631653845}, {"id": 350, "seek": 147478, "start": 1481.42, "end": 1488.1, "text": " And so on and so forth for all of the particles that we have.", "tokens": [50696, 400, 370, 322, 293, 370, 5220, 337, 439, 295, 264, 10007, 300, 321, 362, 13, 51030], "temperature": 0.0, "avg_logprob": -0.12672459284464518, "compression_ratio": 1.7551867219917012, "no_speech_prob": 0.00030533052631653845}, {"id": 351, "seek": 147478, "start": 1488.1, "end": 1492.5, "text": " Now we want the points that share a cell to be next to one another in this array, so that", "tokens": [51030, 823, 321, 528, 264, 2793, 300, 2073, 257, 2815, 281, 312, 958, 281, 472, 1071, 294, 341, 10225, 11, 370, 300, 51250], "temperature": 0.0, "avg_logprob": -0.12672459284464518, "compression_ratio": 1.7551867219917012, "no_speech_prob": 0.00030533052631653845}, {"id": 352, "seek": 147478, "start": 1492.5, "end": 1494.74, "text": " we can efficiently loop over them.", "tokens": [51250, 321, 393, 19621, 6367, 670, 552, 13, 51362], "temperature": 0.0, "avg_logprob": -0.12672459284464518, "compression_ratio": 1.7551867219917012, "no_speech_prob": 0.00030533052631653845}, {"id": 353, "seek": 147478, "start": 1494.74, "end": 1499.26, "text": " Of course if they're in the same cell, they're going to have the same cell key, so we can", "tokens": [51362, 2720, 1164, 498, 436, 434, 294, 264, 912, 2815, 11, 436, 434, 516, 281, 362, 264, 912, 2815, 2141, 11, 370, 321, 393, 51588], "temperature": 0.0, "avg_logprob": -0.12672459284464518, "compression_ratio": 1.7551867219917012, "no_speech_prob": 0.00030533052631653845}, {"id": 354, "seek": 147478, "start": 1499.26, "end": 1503.42, "text": " simply sort the list based on those keys to do that.", "tokens": [51588, 2935, 1333, 264, 1329, 2361, 322, 729, 9317, 281, 360, 300, 13, 51796], "temperature": 0.0, "avg_logprob": -0.12672459284464518, "compression_ratio": 1.7551867219917012, "no_speech_prob": 0.00030533052631653845}, {"id": 355, "seek": 150342, "start": 1503.42, "end": 1508.42, "text": " And now we can easily see from this array that particles 2, 5 and 7 are all together", "tokens": [50364, 400, 586, 321, 393, 3612, 536, 490, 341, 10225, 300, 10007, 568, 11, 1025, 293, 1614, 366, 439, 1214, 50614], "temperature": 0.0, "avg_logprob": -0.12372823997780129, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.00023412956215906888}, {"id": 356, "seek": 150342, "start": 1508.42, "end": 1514.18, "text": " in the same cell, particle 0 is in a cell all by itself, and so on.", "tokens": [50614, 294, 264, 912, 2815, 11, 12359, 1958, 307, 294, 257, 2815, 439, 538, 2564, 11, 293, 370, 322, 13, 50902], "temperature": 0.0, "avg_logprob": -0.12372823997780129, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.00023412956215906888}, {"id": 357, "seek": 150342, "start": 1514.18, "end": 1519.6200000000001, "text": " Anyway, let's call this array our spatial lookup, because that sounds nice and fancy,", "tokens": [50902, 5684, 11, 718, 311, 818, 341, 10225, 527, 23598, 574, 1010, 11, 570, 300, 3263, 1481, 293, 10247, 11, 51174], "temperature": 0.0, "avg_logprob": -0.12372823997780129, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.00023412956215906888}, {"id": 358, "seek": 150342, "start": 1519.6200000000001, "end": 1524.42, "text": " and then the final thing we need to do is create a second array of start indices, which", "tokens": [51174, 293, 550, 264, 2572, 551, 321, 643, 281, 360, 307, 1884, 257, 1150, 10225, 295, 722, 43840, 11, 597, 51414], "temperature": 0.0, "avg_logprob": -0.12372823997780129, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.00023412956215906888}, {"id": 359, "seek": 150342, "start": 1524.42, "end": 1526.1000000000001, "text": " looks like this.", "tokens": [51414, 1542, 411, 341, 13, 51498], "temperature": 0.0, "avg_logprob": -0.12372823997780129, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.00023412956215906888}, {"id": 360, "seek": 150342, "start": 1526.1000000000001, "end": 1529.5, "text": " To understand this second array, let's just do a quick example.", "tokens": [51498, 1407, 1223, 341, 1150, 10225, 11, 718, 311, 445, 360, 257, 1702, 1365, 13, 51668], "temperature": 0.0, "avg_logprob": -0.12372823997780129, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.00023412956215906888}, {"id": 361, "seek": 152950, "start": 1529.5, "end": 1533.58, "text": " So say we want to know which points are in this cell over here.", "tokens": [50364, 407, 584, 321, 528, 281, 458, 597, 2793, 366, 294, 341, 2815, 670, 510, 13, 50568], "temperature": 0.0, "avg_logprob": -0.08457511930323358, "compression_ratio": 1.7867132867132867, "no_speech_prob": 0.0001398095628246665}, {"id": 362, "seek": 152950, "start": 1533.58, "end": 1538.46, "text": " We would first calculate the cell's key like before, which is 9 in this case.", "tokens": [50568, 492, 576, 700, 8873, 264, 2815, 311, 2141, 411, 949, 11, 597, 307, 1722, 294, 341, 1389, 13, 50812], "temperature": 0.0, "avg_logprob": -0.08457511930323358, "compression_ratio": 1.7867132867132867, "no_speech_prob": 0.0001398095628246665}, {"id": 363, "seek": 152950, "start": 1538.46, "end": 1543.18, "text": " And then we'd proceed to look up the 9th element in the array of start indices, which", "tokens": [50812, 400, 550, 321, 1116, 8991, 281, 574, 493, 264, 1722, 392, 4478, 294, 264, 10225, 295, 722, 43840, 11, 597, 51048], "temperature": 0.0, "avg_logprob": -0.08457511930323358, "compression_ratio": 1.7867132867132867, "no_speech_prob": 0.0001398095628246665}, {"id": 364, "seek": 152950, "start": 1543.18, "end": 1546.5, "text": " is this last one over here, the number 6.", "tokens": [51048, 307, 341, 1036, 472, 670, 510, 11, 264, 1230, 1386, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08457511930323358, "compression_ratio": 1.7867132867132867, "no_speech_prob": 0.0001398095628246665}, {"id": 365, "seek": 152950, "start": 1546.5, "end": 1550.7, "text": " That lets us know that we need to head over to index 6 in the spatial lookup, in order", "tokens": [51214, 663, 6653, 505, 458, 300, 321, 643, 281, 1378, 670, 281, 8186, 1386, 294, 264, 23598, 574, 1010, 11, 294, 1668, 51424], "temperature": 0.0, "avg_logprob": -0.08457511930323358, "compression_ratio": 1.7867132867132867, "no_speech_prob": 0.0001398095628246665}, {"id": 366, "seek": 152950, "start": 1550.7, "end": 1554.76, "text": " to find the first entry with the cell key that we're interested in.", "tokens": [51424, 281, 915, 264, 700, 8729, 365, 264, 2815, 2141, 300, 321, 434, 3102, 294, 13, 51627], "temperature": 0.0, "avg_logprob": -0.08457511930323358, "compression_ratio": 1.7867132867132867, "no_speech_prob": 0.0001398095628246665}, {"id": 367, "seek": 152950, "start": 1554.76, "end": 1558.74, "text": " We can then simply loop over all of those to get the indices of the particles that are", "tokens": [51627, 492, 393, 550, 2935, 6367, 670, 439, 295, 729, 281, 483, 264, 43840, 295, 264, 10007, 300, 366, 51826], "temperature": 0.0, "avg_logprob": -0.08457511930323358, "compression_ratio": 1.7867132867132867, "no_speech_prob": 0.0001398095628246665}, {"id": 368, "seek": 155874, "start": 1558.74, "end": 1560.66, "text": " in that cell.", "tokens": [50364, 294, 300, 2815, 13, 50460], "temperature": 0.0, "avg_logprob": -0.13348954862302487, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.004069974645972252}, {"id": 369, "seek": 155874, "start": 1560.66, "end": 1565.58, "text": " Unfortunately it is possible for different cells to end up mapping to the same key,", "tokens": [50460, 8590, 309, 307, 1944, 337, 819, 5438, 281, 917, 493, 18350, 281, 264, 912, 2141, 11, 50706], "temperature": 0.0, "avg_logprob": -0.13348954862302487, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.004069974645972252}, {"id": 370, "seek": 155874, "start": 1565.58, "end": 1570.38, "text": " which would mess with these results, but we're anyway going to need to do distance checks", "tokens": [50706, 597, 576, 2082, 365, 613, 3542, 11, 457, 321, 434, 4033, 516, 281, 643, 281, 360, 4560, 13834, 50946], "temperature": 0.0, "avg_logprob": -0.13348954862302487, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.004069974645972252}, {"id": 371, "seek": 155874, "start": 1570.38, "end": 1575.18, "text": " to see which points are actually inside the smoothing radius, and so that'll get rid", "tokens": [50946, 281, 536, 597, 2793, 366, 767, 1854, 264, 899, 6259, 571, 15845, 11, 293, 370, 300, 603, 483, 3973, 51186], "temperature": 0.0, "avg_logprob": -0.13348954862302487, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.004069974645972252}, {"id": 372, "seek": 155874, "start": 1575.18, "end": 1576.78, "text": " of any mistakes.", "tokens": [51186, 295, 604, 8038, 13, 51266], "temperature": 0.0, "avg_logprob": -0.13348954862302487, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.004069974645972252}, {"id": 373, "seek": 155874, "start": 1576.78, "end": 1581.3, "text": " Obviously, having to check extra particles from some other random cell that just happens", "tokens": [51266, 7580, 11, 1419, 281, 1520, 2857, 10007, 490, 512, 661, 4974, 2815, 300, 445, 2314, 51492], "temperature": 0.0, "avg_logprob": -0.13348954862302487, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.004069974645972252}, {"id": 374, "seek": 155874, "start": 1581.3, "end": 1585.82, "text": " to have the same key does waste time, but that's what we get for trying to implement", "tokens": [51492, 281, 362, 264, 912, 2141, 775, 5964, 565, 11, 457, 300, 311, 437, 321, 483, 337, 1382, 281, 4445, 51718], "temperature": 0.0, "avg_logprob": -0.13348954862302487, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.004069974645972252}, {"id": 375, "seek": 158582, "start": 1585.82, "end": 1590.34, "text": " an infinite grid with a sadly non-infinite amount of memory.", "tokens": [50364, 364, 13785, 10748, 365, 257, 22023, 2107, 12, 259, 5194, 642, 2372, 295, 4675, 13, 50590], "temperature": 0.0, "avg_logprob": -0.10761232474415573, "compression_ratio": 1.5983935742971886, "no_speech_prob": 0.0018101208843290806}, {"id": 376, "seek": 158582, "start": 1590.34, "end": 1596.1799999999998, "text": " Anyway, turning this concept into code didn't go as smoothly as it possibly could have,", "tokens": [50590, 5684, 11, 6246, 341, 3410, 666, 3089, 994, 380, 352, 382, 19565, 382, 309, 6264, 727, 362, 11, 50882], "temperature": 0.0, "avg_logprob": -0.10761232474415573, "compression_ratio": 1.5983935742971886, "no_speech_prob": 0.0018101208843290806}, {"id": 377, "seek": 158582, "start": 1596.1799999999998, "end": 1599.86, "text": " but after a bit of frustration, here's what I finally ended up with.", "tokens": [50882, 457, 934, 257, 857, 295, 20491, 11, 510, 311, 437, 286, 2721, 4590, 493, 365, 13, 51066], "temperature": 0.0, "avg_logprob": -0.10761232474415573, "compression_ratio": 1.5983935742971886, "no_speech_prob": 0.0018101208843290806}, {"id": 378, "seek": 158582, "start": 1599.86, "end": 1604.48, "text": " We have a function for updating the lookup whenever the points have moved, and this just", "tokens": [51066, 492, 362, 257, 2445, 337, 25113, 264, 574, 1010, 5699, 264, 2793, 362, 4259, 11, 293, 341, 445, 51297], "temperature": 0.0, "avg_logprob": -0.10761232474415573, "compression_ratio": 1.5983935742971886, "no_speech_prob": 0.0018101208843290806}, {"id": 379, "seek": 158582, "start": 1604.48, "end": 1610.82, "text": " calculates the cell key for every particle, and records that along with the particle index.", "tokens": [51297, 4322, 1024, 264, 2815, 2141, 337, 633, 12359, 11, 293, 7724, 300, 2051, 365, 264, 12359, 8186, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10761232474415573, "compression_ratio": 1.5983935742971886, "no_speech_prob": 0.0018101208843290806}, {"id": 380, "seek": 161082, "start": 1610.82, "end": 1616.1799999999998, "text": " The array is then sorted based on those keys, and lastly the start indices are calculated,", "tokens": [50364, 440, 10225, 307, 550, 25462, 2361, 322, 729, 9317, 11, 293, 16386, 264, 722, 43840, 366, 15598, 11, 50632], "temperature": 0.0, "avg_logprob": -0.13144355442212977, "compression_ratio": 1.7537313432835822, "no_speech_prob": 0.005910481326282024}, {"id": 381, "seek": 161082, "start": 1616.1799999999998, "end": 1620.74, "text": " simply by testing if each key is the same as the key that came before it, because if", "tokens": [50632, 2935, 538, 4997, 498, 1184, 2141, 307, 264, 912, 382, 264, 2141, 300, 1361, 949, 309, 11, 570, 498, 50860], "temperature": 0.0, "avg_logprob": -0.13144355442212977, "compression_ratio": 1.7537313432835822, "no_speech_prob": 0.005910481326282024}, {"id": 382, "seek": 161082, "start": 1620.74, "end": 1625.78, "text": " not then it must be the first occurrence of that key, and we can record its index as the", "tokens": [50860, 406, 550, 309, 1633, 312, 264, 700, 36122, 295, 300, 2141, 11, 293, 321, 393, 2136, 1080, 8186, 382, 264, 51112], "temperature": 0.0, "avg_logprob": -0.13144355442212977, "compression_ratio": 1.7537313432835822, "no_speech_prob": 0.005910481326282024}, {"id": 383, "seek": 161082, "start": 1625.78, "end": 1626.78, "text": " start index.", "tokens": [51112, 722, 8186, 13, 51162], "temperature": 0.0, "avg_logprob": -0.13144355442212977, "compression_ratio": 1.7537313432835822, "no_speech_prob": 0.005910481326282024}, {"id": 384, "seek": 161082, "start": 1626.78, "end": 1631.98, "text": " Here are the little helper functions, by the way, for calculating the cell coordinate,", "tokens": [51162, 1692, 366, 264, 707, 36133, 6828, 11, 538, 264, 636, 11, 337, 28258, 264, 2815, 15670, 11, 51422], "temperature": 0.0, "avg_logprob": -0.13144355442212977, "compression_ratio": 1.7537313432835822, "no_speech_prob": 0.005910481326282024}, {"id": 385, "seek": 161082, "start": 1631.98, "end": 1634.8999999999999, "text": " hash, and key.", "tokens": [51422, 22019, 11, 293, 2141, 13, 51568], "temperature": 0.0, "avg_logprob": -0.13144355442212977, "compression_ratio": 1.7537313432835822, "no_speech_prob": 0.005910481326282024}, {"id": 386, "seek": 161082, "start": 1634.8999999999999, "end": 1638.74, "text": " Then finally there's the function that allows us to actually find all of the points within", "tokens": [51568, 1396, 2721, 456, 311, 264, 2445, 300, 4045, 505, 281, 767, 915, 439, 295, 264, 2793, 1951, 51760], "temperature": 0.0, "avg_logprob": -0.13144355442212977, "compression_ratio": 1.7537313432835822, "no_speech_prob": 0.005910481326282024}, {"id": 387, "seek": 163874, "start": 1638.74, "end": 1641.98, "text": " the radius of some given sample point.", "tokens": [50364, 264, 15845, 295, 512, 2212, 6889, 935, 13, 50526], "temperature": 0.0, "avg_logprob": -0.09365440587528416, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.002050562994554639}, {"id": 388, "seek": 163874, "start": 1641.98, "end": 1646.3, "text": " This works as we've seen by just looping over the 3x3 block of cells around that sample", "tokens": [50526, 639, 1985, 382, 321, 600, 1612, 538, 445, 6367, 278, 670, 264, 805, 87, 18, 3461, 295, 5438, 926, 300, 6889, 50742], "temperature": 0.0, "avg_logprob": -0.09365440587528416, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.002050562994554639}, {"id": 389, "seek": 163874, "start": 1646.3, "end": 1649.82, "text": " point, and calculating each of their keys.", "tokens": [50742, 935, 11, 293, 28258, 1184, 295, 641, 9317, 13, 50918], "temperature": 0.0, "avg_logprob": -0.09365440587528416, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.002050562994554639}, {"id": 390, "seek": 163874, "start": 1649.82, "end": 1653.98, "text": " Each key is then used to look up the start index for that cell, so we can loop over all", "tokens": [50918, 6947, 2141, 307, 550, 1143, 281, 574, 493, 264, 722, 8186, 337, 300, 2815, 11, 370, 321, 393, 6367, 670, 439, 51126], "temperature": 0.0, "avg_logprob": -0.09365440587528416, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.002050562994554639}, {"id": 391, "seek": 163874, "start": 1653.98, "end": 1658.46, "text": " the points in the cell, and of course once we reach a point that has a different key,", "tokens": [51126, 264, 2793, 294, 264, 2815, 11, 293, 295, 1164, 1564, 321, 2524, 257, 935, 300, 575, 257, 819, 2141, 11, 51350], "temperature": 0.0, "avg_logprob": -0.09365440587528416, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.002050562994554639}, {"id": 392, "seek": 163874, "start": 1658.46, "end": 1660.5, "text": " we just exit out of the loop.", "tokens": [51350, 321, 445, 11043, 484, 295, 264, 6367, 13, 51452], "temperature": 0.0, "avg_logprob": -0.09365440587528416, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.002050562994554639}, {"id": 393, "seek": 163874, "start": 1660.5, "end": 1664.7, "text": " All that remains then is to do a quick distance check to make sure the point is actually inside", "tokens": [51452, 1057, 300, 7023, 550, 307, 281, 360, 257, 1702, 4560, 1520, 281, 652, 988, 264, 935, 307, 767, 1854, 51662], "temperature": 0.0, "avg_logprob": -0.09365440587528416, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.002050562994554639}, {"id": 394, "seek": 166470, "start": 1664.7, "end": 1669.22, "text": " the circle, and then we can do whatever we want with it.", "tokens": [50364, 264, 6329, 11, 293, 550, 321, 393, 360, 2035, 321, 528, 365, 309, 13, 50590], "temperature": 0.0, "avg_logprob": -0.11740069262749325, "compression_ratio": 1.5698924731182795, "no_speech_prob": 0.005729648284614086}, {"id": 395, "seek": 166470, "start": 1669.22, "end": 1674.54, "text": " Trying this out now, we've gone from barely 5 frames per second up to 120, so there was", "tokens": [50590, 20180, 341, 484, 586, 11, 321, 600, 2780, 490, 10268, 1025, 12083, 680, 1150, 493, 281, 10411, 11, 370, 456, 390, 50856], "temperature": 0.0, "avg_logprob": -0.11740069262749325, "compression_ratio": 1.5698924731182795, "no_speech_prob": 0.005729648284614086}, {"id": 396, "seek": 166470, "start": 1674.54, "end": 1679.78, "text": " a reasonable success, but I'd be a lot happier about it if our simulation wasn't in total", "tokens": [50856, 257, 10585, 2245, 11, 457, 286, 1116, 312, 257, 688, 20423, 466, 309, 498, 527, 16575, 2067, 380, 294, 3217, 51118], "temperature": 0.0, "avg_logprob": -0.11740069262749325, "compression_ratio": 1.5698924731182795, "no_speech_prob": 0.005729648284614086}, {"id": 397, "seek": 166470, "start": 1679.78, "end": 1683.98, "text": " chaos over here.", "tokens": [51118, 14158, 670, 510, 13, 51328], "temperature": 0.0, "avg_logprob": -0.11740069262749325, "compression_ratio": 1.5698924731182795, "no_speech_prob": 0.005729648284614086}, {"id": 398, "seek": 166470, "start": 1683.98, "end": 1688.5800000000002, "text": " One clunky way I found to improve this is to simply start off with a really low pressure", "tokens": [51328, 1485, 596, 25837, 636, 286, 1352, 281, 3470, 341, 307, 281, 2935, 722, 766, 365, 257, 534, 2295, 3321, 51558], "temperature": 0.0, "avg_logprob": -0.11740069262749325, "compression_ratio": 1.5698924731182795, "no_speech_prob": 0.005729648284614086}, {"id": 399, "seek": 166470, "start": 1688.5800000000002, "end": 1689.98, "text": " multiplier.", "tokens": [51558, 44106, 13, 51628], "temperature": 0.0, "avg_logprob": -0.11740069262749325, "compression_ratio": 1.5698924731182795, "no_speech_prob": 0.005729648284614086}, {"id": 400, "seek": 166470, "start": 1689.98, "end": 1694.22, "text": " This way the particles don't have such a huge initial burst of acceleration, and they", "tokens": [51628, 639, 636, 264, 10007, 500, 380, 362, 1270, 257, 2603, 5883, 12712, 295, 17162, 11, 293, 436, 51840], "temperature": 0.0, "avg_logprob": -0.11740069262749325, "compression_ratio": 1.5698924731182795, "no_speech_prob": 0.005729648284614086}, {"id": 401, "seek": 169422, "start": 1694.22, "end": 1698.82, "text": " can spread out a little, and then we just gradually increase the multiplier, and it", "tokens": [50364, 393, 3974, 484, 257, 707, 11, 293, 550, 321, 445, 13145, 3488, 264, 44106, 11, 293, 309, 50594], "temperature": 0.0, "avg_logprob": -0.16144740704408625, "compression_ratio": 1.6317829457364341, "no_speech_prob": 0.00017952478083316237}, {"id": 402, "seek": 169422, "start": 1698.82, "end": 1701.9, "text": " seems to work a bit better at least.", "tokens": [50594, 2544, 281, 589, 257, 857, 1101, 412, 1935, 13, 50748], "temperature": 0.0, "avg_logprob": -0.16144740704408625, "compression_ratio": 1.6317829457364341, "no_speech_prob": 0.00017952478083316237}, {"id": 403, "seek": 169422, "start": 1701.9, "end": 1706.22, "text": " That's not really a usable solution though, so I've just been implementing an IGRI", "tokens": [50748, 663, 311, 406, 534, 257, 29975, 3827, 1673, 11, 370, 286, 600, 445, 668, 18114, 364, 26367, 5577, 50964], "temperature": 0.0, "avg_logprob": -0.16144740704408625, "compression_ratio": 1.6317829457364341, "no_speech_prob": 0.00017952478083316237}, {"id": 404, "seek": 169422, "start": 1706.22, "end": 1710.46, "text": " read about where we basically predict what the next position of each particle is going", "tokens": [50964, 1401, 466, 689, 321, 1936, 6069, 437, 264, 958, 2535, 295, 1184, 12359, 307, 516, 51176], "temperature": 0.0, "avg_logprob": -0.16144740704408625, "compression_ratio": 1.6317829457364341, "no_speech_prob": 0.00017952478083316237}, {"id": 405, "seek": 169422, "start": 1710.46, "end": 1716.26, "text": " to be, simply based on the current velocity, and use those predicted positions when calculating", "tokens": [51176, 281, 312, 11, 2935, 2361, 322, 264, 2190, 9269, 11, 293, 764, 729, 19147, 8432, 562, 28258, 51466], "temperature": 0.0, "avg_logprob": -0.16144740704408625, "compression_ratio": 1.6317829457364341, "no_speech_prob": 0.00017952478083316237}, {"id": 406, "seek": 169422, "start": 1716.26, "end": 1719.06, "text": " the densities and pressure forces.", "tokens": [51466, 264, 24505, 1088, 293, 3321, 5874, 13, 51606], "temperature": 0.0, "avg_logprob": -0.16144740704408625, "compression_ratio": 1.6317829457364341, "no_speech_prob": 0.00017952478083316237}, {"id": 407, "seek": 171906, "start": 1719.06, "end": 1724.8999999999999, "text": " I guess this could help the particles to better react to upcoming situations, and maybe compensate", "tokens": [50364, 286, 2041, 341, 727, 854, 264, 10007, 281, 1101, 4515, 281, 11500, 6851, 11, 293, 1310, 29458, 50656], "temperature": 0.0, "avg_logprob": -0.1778046226501465, "compression_ratio": 1.5866141732283465, "no_speech_prob": 7.721818110439926e-05}, {"id": 408, "seek": 171906, "start": 1724.8999999999999, "end": 1729.78, "text": " a bit for the fact that time is obviously not continuous in a computer simulation, but", "tokens": [50656, 257, 857, 337, 264, 1186, 300, 565, 307, 2745, 406, 10957, 294, 257, 3820, 16575, 11, 457, 50900], "temperature": 0.0, "avg_logprob": -0.1778046226501465, "compression_ratio": 1.5866141732283465, "no_speech_prob": 7.721818110439926e-05}, {"id": 409, "seek": 171906, "start": 1729.78, "end": 1732.58, "text": " rather broken up into discrete steps.", "tokens": [50900, 2831, 5463, 493, 666, 27706, 4439, 13, 51040], "temperature": 0.0, "avg_logprob": -0.1778046226501465, "compression_ratio": 1.5866141732283465, "no_speech_prob": 7.721818110439926e-05}, {"id": 410, "seek": 171906, "start": 1732.58, "end": 1734.58, "text": " Okay, let's try it out.", "tokens": [51040, 1033, 11, 718, 311, 853, 309, 484, 13, 51140], "temperature": 0.0, "avg_logprob": -0.1778046226501465, "compression_ratio": 1.5866141732283465, "no_speech_prob": 7.721818110439926e-05}, {"id": 411, "seek": 171906, "start": 1734.58, "end": 1740.98, "text": " I honestly don't see it making a big difference though.", "tokens": [51140, 286, 6095, 500, 380, 536, 309, 1455, 257, 955, 2649, 1673, 13, 51460], "temperature": 0.0, "avg_logprob": -0.1778046226501465, "compression_ratio": 1.5866141732283465, "no_speech_prob": 7.721818110439926e-05}, {"id": 412, "seek": 171906, "start": 1740.98, "end": 1744.3, "text": " Never mind, it's actually making a pretty massive difference I'd say.", "tokens": [51460, 7344, 1575, 11, 309, 311, 767, 1455, 257, 1238, 5994, 2649, 286, 1116, 584, 13, 51626], "temperature": 0.0, "avg_logprob": -0.1778046226501465, "compression_ratio": 1.5866141732283465, "no_speech_prob": 7.721818110439926e-05}, {"id": 413, "seek": 171906, "start": 1744.3, "end": 1747.34, "text": " Well, that's a nice surprise.", "tokens": [51626, 1042, 11, 300, 311, 257, 1481, 6365, 13, 51778], "temperature": 0.0, "avg_logprob": -0.1778046226501465, "compression_ratio": 1.5866141732283465, "no_speech_prob": 7.721818110439926e-05}, {"id": 414, "seek": 174734, "start": 1747.4199999999998, "end": 1751.62, "text": " Also fun, I've quickly gone into the particle rendering code I have here, and just set it", "tokens": [50368, 2743, 1019, 11, 286, 600, 2661, 2780, 666, 264, 12359, 22407, 3089, 286, 362, 510, 11, 293, 445, 992, 309, 50578], "temperature": 0.0, "avg_logprob": -0.14521649063274425, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.01911999098956585}, {"id": 415, "seek": 174734, "start": 1751.62, "end": 1756.26, "text": " up so that we can visualise the speed of the particles with a colour.", "tokens": [50578, 493, 370, 300, 321, 393, 5056, 908, 264, 3073, 295, 264, 10007, 365, 257, 8267, 13, 50810], "temperature": 0.0, "avg_logprob": -0.14521649063274425, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.01911999098956585}, {"id": 416, "seek": 174734, "start": 1756.26, "end": 1760.1, "text": " Then here's a little gradient I made for that, so the slowest particles will appear", "tokens": [50810, 1396, 510, 311, 257, 707, 16235, 286, 1027, 337, 300, 11, 370, 264, 2964, 377, 10007, 486, 4204, 51002], "temperature": 0.0, "avg_logprob": -0.14521649063274425, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.01911999098956585}, {"id": 417, "seek": 174734, "start": 1760.1, "end": 1765.6999999999998, "text": " blue, fading to red for the fastest particles.", "tokens": [51002, 3344, 11, 38644, 281, 2182, 337, 264, 14573, 10007, 13, 51282], "temperature": 0.0, "avg_logprob": -0.14521649063274425, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.01911999098956585}, {"id": 418, "seek": 174734, "start": 1765.6999999999998, "end": 1770.3, "text": " I also added in some simple controls for things like pausing the simulation, stepping through", "tokens": [51282, 286, 611, 3869, 294, 512, 2199, 9003, 337, 721, 411, 2502, 7981, 264, 16575, 11, 16821, 807, 51512], "temperature": 0.0, "avg_logprob": -0.14521649063274425, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.01911999098956585}, {"id": 419, "seek": 177030, "start": 1770.3, "end": 1774.46, "text": " frame by frame, and resetting it.", "tokens": [50364, 3920, 538, 3920, 11, 293, 14322, 783, 309, 13, 50572], "temperature": 0.0, "avg_logprob": -0.19029880909437544, "compression_ratio": 1.6116071428571428, "no_speech_prob": 0.009707380086183548}, {"id": 420, "seek": 177030, "start": 1781.1, "end": 1784.46, "text": " Alright, I've been playing around with this some more, and one thing I've noticed", "tokens": [50904, 2798, 11, 286, 600, 668, 2433, 926, 365, 341, 512, 544, 11, 293, 472, 551, 286, 600, 5694, 51072], "temperature": 0.0, "avg_logprob": -0.19029880909437544, "compression_ratio": 1.6116071428571428, "no_speech_prob": 0.009707380086183548}, {"id": 421, "seek": 177030, "start": 1784.46, "end": 1789.06, "text": " is that it behaves very inconsistently at different simulation frame rates.", "tokens": [51072, 307, 300, 309, 36896, 588, 22039, 468, 2276, 412, 819, 16575, 3920, 6846, 13, 51302], "temperature": 0.0, "avg_logprob": -0.19029880909437544, "compression_ratio": 1.6116071428571428, "no_speech_prob": 0.009707380086183548}, {"id": 422, "seek": 177030, "start": 1789.06, "end": 1793.86, "text": " Here's a little grid of simulations I set up to observe this problem, so we're going", "tokens": [51302, 1692, 311, 257, 707, 10748, 295, 35138, 286, 992, 493, 281, 11441, 341, 1154, 11, 370, 321, 434, 516, 51542], "temperature": 0.0, "avg_logprob": -0.19029880909437544, "compression_ratio": 1.6116071428571428, "no_speech_prob": 0.009707380086183548}, {"id": 423, "seek": 177030, "start": 1793.86, "end": 1799.58, "text": " from 60 simulation steps per second on the top left, to almost 1000 steps per second", "tokens": [51542, 490, 4060, 16575, 4439, 680, 1150, 322, 264, 1192, 1411, 11, 281, 1920, 9714, 4439, 680, 1150, 51828], "temperature": 0.0, "avg_logprob": -0.19029880909437544, "compression_ratio": 1.6116071428571428, "no_speech_prob": 0.009707380086183548}, {"id": 424, "seek": 179958, "start": 1799.58, "end": 1801.1399999999999, "text": " on the bottom right.", "tokens": [50364, 322, 264, 2767, 558, 13, 50442], "temperature": 0.0, "avg_logprob": -0.1512392810267261, "compression_ratio": 1.6392857142857142, "no_speech_prob": 0.002050535287708044}, {"id": 425, "seek": 179958, "start": 1801.1399999999999, "end": 1806.6999999999998, "text": " And as we can see here, if the number of steps is higher, meaning the time step is smaller,", "tokens": [50442, 400, 382, 321, 393, 536, 510, 11, 498, 264, 1230, 295, 4439, 307, 2946, 11, 3620, 264, 565, 1823, 307, 4356, 11, 50720], "temperature": 0.0, "avg_logprob": -0.1512392810267261, "compression_ratio": 1.6392857142857142, "no_speech_prob": 0.002050535287708044}, {"id": 426, "seek": 179958, "start": 1806.6999999999998, "end": 1811.22, "text": " and so we're predicting less fine to the future, the particles take longer to settle", "tokens": [50720, 293, 370, 321, 434, 32884, 1570, 2489, 281, 264, 2027, 11, 264, 10007, 747, 2854, 281, 11852, 50946], "temperature": 0.0, "avg_logprob": -0.1512392810267261, "compression_ratio": 1.6392857142857142, "no_speech_prob": 0.002050535287708044}, {"id": 427, "seek": 179958, "start": 1811.22, "end": 1812.6999999999998, "text": " down.", "tokens": [50946, 760, 13, 51020], "temperature": 0.0, "avg_logprob": -0.1512392810267261, "compression_ratio": 1.6392857142857142, "no_speech_prob": 0.002050535287708044}, {"id": 428, "seek": 179958, "start": 1812.6999999999998, "end": 1816.6999999999998, "text": " So even though this feels a bit wrong to me, I'm going to try just removing the delta", "tokens": [51020, 407, 754, 1673, 341, 3417, 257, 857, 2085, 281, 385, 11, 286, 478, 516, 281, 853, 445, 12720, 264, 8289, 51220], "temperature": 0.0, "avg_logprob": -0.1512392810267261, "compression_ratio": 1.6392857142857142, "no_speech_prob": 0.002050535287708044}, {"id": 429, "seek": 179958, "start": 1816.6999999999998, "end": 1821.1, "text": " time here, and use a constant look ahead factor instead.", "tokens": [51220, 565, 510, 11, 293, 764, 257, 5754, 574, 2286, 5952, 2602, 13, 51440], "temperature": 0.0, "avg_logprob": -0.1512392810267261, "compression_ratio": 1.6392857142857142, "no_speech_prob": 0.002050535287708044}, {"id": 430, "seek": 179958, "start": 1821.1, "end": 1826.46, "text": " Let's then run the same comparison again, and interestingly it is actually behaving", "tokens": [51440, 961, 311, 550, 1190, 264, 912, 9660, 797, 11, 293, 25873, 309, 307, 767, 35263, 51708], "temperature": 0.0, "avg_logprob": -0.1512392810267261, "compression_ratio": 1.6392857142857142, "no_speech_prob": 0.002050535287708044}, {"id": 431, "seek": 179958, "start": 1826.46, "end": 1828.3, "text": " a lot more consistently now.", "tokens": [51708, 257, 688, 544, 14961, 586, 13, 51800], "temperature": 0.0, "avg_logprob": -0.1512392810267261, "compression_ratio": 1.6392857142857142, "no_speech_prob": 0.002050535287708044}, {"id": 432, "seek": 182830, "start": 1828.78, "end": 1832.1, "text": " Well okay, I guess we'll go with that then.", "tokens": [50388, 1042, 1392, 11, 286, 2041, 321, 603, 352, 365, 300, 550, 13, 50554], "temperature": 0.0, "avg_logprob": -0.15675785027298272, "compression_ratio": 1.6265060240963856, "no_speech_prob": 6.814594962634146e-05}, {"id": 433, "seek": 182830, "start": 1832.1, "end": 1836.3799999999999, "text": " Now I think it'd be fun if we could interact with the particles in some way, so I've written", "tokens": [50554, 823, 286, 519, 309, 1116, 312, 1019, 498, 321, 727, 4648, 365, 264, 10007, 294, 512, 636, 11, 370, 286, 600, 3720, 50768], "temperature": 0.0, "avg_logprob": -0.15675785027298272, "compression_ratio": 1.6265060240963856, "no_speech_prob": 6.814594962634146e-05}, {"id": 434, "seek": 182830, "start": 1836.3799999999999, "end": 1841.1, "text": " this little function that basically just pulls nearby particles in towards the mouse, or", "tokens": [50768, 341, 707, 2445, 300, 1936, 445, 16982, 11184, 10007, 294, 3030, 264, 9719, 11, 420, 51004], "temperature": 0.0, "avg_logprob": -0.15675785027298272, "compression_ratio": 1.6265060240963856, "no_speech_prob": 6.814594962634146e-05}, {"id": 435, "seek": 182830, "start": 1841.1, "end": 1845.94, "text": " pushes them away if the input strength is negative, which is controlled by left or right", "tokens": [51004, 21020, 552, 1314, 498, 264, 4846, 3800, 307, 3671, 11, 597, 307, 10164, 538, 1411, 420, 558, 51246], "temperature": 0.0, "avg_logprob": -0.15675785027298272, "compression_ratio": 1.6265060240963856, "no_speech_prob": 6.814594962634146e-05}, {"id": 436, "seek": 182830, "start": 1845.94, "end": 1847.7, "text": " clicking.", "tokens": [51246, 9697, 13, 51334], "temperature": 0.0, "avg_logprob": -0.15675785027298272, "compression_ratio": 1.6265060240963856, "no_speech_prob": 6.814594962634146e-05}, {"id": 437, "seek": 182830, "start": 1847.7, "end": 1854.18, "text": " So let's give it a shot, I'm going to start by pushing these particles outwards,", "tokens": [51334, 407, 718, 311, 976, 309, 257, 3347, 11, 286, 478, 516, 281, 722, 538, 7380, 613, 10007, 484, 2015, 11, 51658], "temperature": 0.0, "avg_logprob": -0.15675785027298272, "compression_ratio": 1.6265060240963856, "no_speech_prob": 6.814594962634146e-05}, {"id": 438, "seek": 185418, "start": 1854.18, "end": 1857.18, "text": " and then let's try slicing through the fluid.", "tokens": [50364, 293, 550, 718, 311, 853, 46586, 807, 264, 9113, 13, 50514], "temperature": 0.0, "avg_logprob": -0.19773167902880376, "compression_ratio": 1.6150793650793651, "no_speech_prob": 0.0001823448110371828}, {"id": 439, "seek": 185418, "start": 1860.18, "end": 1864.22, "text": " Alright, I feel like this is slowly starting to get somewhere.", "tokens": [50664, 2798, 11, 286, 841, 411, 341, 307, 5692, 2891, 281, 483, 4079, 13, 50866], "temperature": 0.0, "avg_logprob": -0.19773167902880376, "compression_ratio": 1.6150793650793651, "no_speech_prob": 0.0001823448110371828}, {"id": 440, "seek": 185418, "start": 1864.22, "end": 1869.3, "text": " Clearly, we haven't really succeeded in our goal of making this fluid incompressible,", "tokens": [50866, 24120, 11, 321, 2378, 380, 534, 20263, 294, 527, 3387, 295, 1455, 341, 9113, 40393, 735, 964, 11, 51120], "temperature": 0.0, "avg_logprob": -0.19773167902880376, "compression_ratio": 1.6150793650793651, "no_speech_prob": 0.0001823448110371828}, {"id": 441, "seek": 185418, "start": 1869.3, "end": 1873.8600000000001, "text": " it's certainly compressing and expanding all over the place, but the density does even", "tokens": [51120, 309, 311, 3297, 14778, 278, 293, 14702, 439, 670, 264, 1081, 11, 457, 264, 10305, 775, 754, 51348], "temperature": 0.0, "avg_logprob": -0.19773167902880376, "compression_ratio": 1.6150793650793651, "no_speech_prob": 0.0001823448110371828}, {"id": 442, "seek": 185418, "start": 1873.8600000000001, "end": 1878.74, "text": " out over time, so that's something at least, and we can look into fancier methods to try", "tokens": [51348, 484, 670, 565, 11, 370, 300, 311, 746, 412, 1935, 11, 293, 321, 393, 574, 666, 3429, 27674, 7150, 281, 853, 51592], "temperature": 0.0, "avg_logprob": -0.19773167902880376, "compression_ratio": 1.6150793650793651, "no_speech_prob": 0.0001823448110371828}, {"id": 443, "seek": 185418, "start": 1878.74, "end": 1881.0600000000002, "text": " and solve this better in the future.", "tokens": [51592, 293, 5039, 341, 1101, 294, 264, 2027, 13, 51708], "temperature": 0.0, "avg_logprob": -0.19773167902880376, "compression_ratio": 1.6150793650793651, "no_speech_prob": 0.0001823448110371828}, {"id": 444, "seek": 188106, "start": 1881.54, "end": 1886.1399999999999, "text": " Anyway, now that this seems to be somewhat working at any rate, I think it's time we", "tokens": [50388, 5684, 11, 586, 300, 341, 2544, 281, 312, 8344, 1364, 412, 604, 3314, 11, 286, 519, 309, 311, 565, 321, 50618], "temperature": 0.0, "avg_logprob": -0.18039059879803898, "compression_ratio": 1.5521739130434782, "no_speech_prob": 6.814618973294273e-05}, {"id": 445, "seek": 188106, "start": 1886.1399999999999, "end": 1889.62, "text": " brought gravity back into the mix.", "tokens": [50618, 3038, 12110, 646, 666, 264, 2890, 13, 50792], "temperature": 0.0, "avg_logprob": -0.18039059879803898, "compression_ratio": 1.5521739130434782, "no_speech_prob": 6.814618973294273e-05}, {"id": 446, "seek": 188106, "start": 1889.62, "end": 1893.8999999999999, "text": " So I'll reset this quickly, and let's bring in our settings window.", "tokens": [50792, 407, 286, 603, 14322, 341, 2661, 11, 293, 718, 311, 1565, 294, 527, 6257, 4910, 13, 51006], "temperature": 0.0, "avg_logprob": -0.18039059879803898, "compression_ratio": 1.5521739130434782, "no_speech_prob": 6.814618973294273e-05}, {"id": 447, "seek": 188106, "start": 1893.8999999999999, "end": 1898.34, "text": " I feel like the density could maybe be set a bit higher, so I'll turn that up, and then", "tokens": [51006, 286, 841, 411, 264, 10305, 727, 1310, 312, 992, 257, 857, 2946, 11, 370, 286, 603, 1261, 300, 493, 11, 293, 550, 51228], "temperature": 0.0, "avg_logprob": -0.18039059879803898, "compression_ratio": 1.5521739130434782, "no_speech_prob": 6.814618973294273e-05}, {"id": 448, "seek": 188106, "start": 1898.34, "end": 1901.06, "text": " let's get the simulation going again.", "tokens": [51228, 718, 311, 483, 264, 16575, 516, 797, 13, 51364], "temperature": 0.0, "avg_logprob": -0.18039059879803898, "compression_ratio": 1.5521739130434782, "no_speech_prob": 6.814618973294273e-05}, {"id": 449, "seek": 188106, "start": 1901.06, "end": 1905.46, "text": " Okay, I guess that's a little too high now.", "tokens": [51364, 1033, 11, 286, 2041, 300, 311, 257, 707, 886, 1090, 586, 13, 51584], "temperature": 0.0, "avg_logprob": -0.18039059879803898, "compression_ratio": 1.5521739130434782, "no_speech_prob": 6.814618973294273e-05}, {"id": 450, "seek": 190546, "start": 1905.46, "end": 1912.46, "text": " So, I'll dial that setting back down a bit.", "tokens": [50364, 407, 11, 286, 603, 5502, 300, 3287, 646, 760, 257, 857, 13, 50714], "temperature": 0.0, "avg_logprob": -0.22362470626831055, "compression_ratio": 1.4806629834254144, "no_speech_prob": 5.064352080808021e-05}, {"id": 451, "seek": 190546, "start": 1912.46, "end": 1916.3, "text": " Then, let's turn on the gravity.", "tokens": [50714, 1396, 11, 718, 311, 1261, 322, 264, 12110, 13, 50906], "temperature": 0.0, "avg_logprob": -0.22362470626831055, "compression_ratio": 1.4806629834254144, "no_speech_prob": 5.064352080808021e-05}, {"id": 452, "seek": 190546, "start": 1916.3, "end": 1920.66, "text": " Wait, that's upside down, let me make it go the other way instead.", "tokens": [50906, 3802, 11, 300, 311, 14119, 760, 11, 718, 385, 652, 309, 352, 264, 661, 636, 2602, 13, 51124], "temperature": 0.0, "avg_logprob": -0.22362470626831055, "compression_ratio": 1.4806629834254144, "no_speech_prob": 5.064352080808021e-05}, {"id": 453, "seek": 190546, "start": 1920.66, "end": 1924.98, "text": " The particles are quite wild at the moment, so I'll also increase the pressure multiplier", "tokens": [51124, 440, 10007, 366, 1596, 4868, 412, 264, 1623, 11, 370, 286, 603, 611, 3488, 264, 3321, 44106, 51340], "temperature": 0.0, "avg_logprob": -0.22362470626831055, "compression_ratio": 1.4806629834254144, "no_speech_prob": 5.064352080808021e-05}, {"id": 454, "seek": 190546, "start": 1924.98, "end": 1928.58, "text": " to try and drain them in a little.", "tokens": [51340, 281, 853, 293, 12339, 552, 294, 257, 707, 13, 51520], "temperature": 0.0, "avg_logprob": -0.22362470626831055, "compression_ratio": 1.4806629834254144, "no_speech_prob": 5.064352080808021e-05}, {"id": 455, "seek": 192858, "start": 1929.58, "end": 1939.22, "text": " Okay, let's try picking up a ball of water.", "tokens": [50414, 1033, 11, 718, 311, 853, 8867, 493, 257, 2594, 295, 1281, 13, 50896], "temperature": 0.0, "avg_logprob": -0.1916648823281993, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.00012147830420872197}, {"id": 456, "seek": 192858, "start": 1939.22, "end": 1941.34, "text": " And dropping it back in.", "tokens": [50896, 400, 13601, 309, 646, 294, 13, 51002], "temperature": 0.0, "avg_logprob": -0.1916648823281993, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.00012147830420872197}, {"id": 457, "seek": 192858, "start": 1941.34, "end": 1943.34, "text": " Splash.", "tokens": [51002, 19788, 1299, 13, 51102], "temperature": 0.0, "avg_logprob": -0.1916648823281993, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.00012147830420872197}, {"id": 458, "seek": 192858, "start": 1943.34, "end": 1947.4199999999998, "text": " This is actually working surprisingly well I'd say, I mean I realise I've been droning", "tokens": [51102, 639, 307, 767, 1364, 17600, 731, 286, 1116, 584, 11, 286, 914, 286, 18809, 286, 600, 668, 1224, 16638, 51306], "temperature": 0.0, "avg_logprob": -0.1916648823281993, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.00012147830420872197}, {"id": 459, "seek": 192858, "start": 1947.4199999999998, "end": 1951.62, "text": " on for over half an hour already, but all that we've really done is made a bunch of", "tokens": [51306, 322, 337, 670, 1922, 364, 1773, 1217, 11, 457, 439, 300, 321, 600, 534, 1096, 307, 1027, 257, 3840, 295, 51516], "temperature": 0.0, "avg_logprob": -0.1916648823281993, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.00012147830420872197}, {"id": 460, "seek": 192858, "start": 1951.62, "end": 1956.6999999999998, "text": " points that don't like to be too close together, but not too far apart either.", "tokens": [51516, 2793, 300, 500, 380, 411, 281, 312, 886, 1998, 1214, 11, 457, 406, 886, 1400, 4936, 2139, 13, 51770], "temperature": 0.0, "avg_logprob": -0.1916648823281993, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.00012147830420872197}, {"id": 461, "seek": 195670, "start": 1956.7, "end": 1960.98, "text": " And while this is obviously far from being super realistic or anything, I think it's", "tokens": [50364, 400, 1339, 341, 307, 2745, 1400, 490, 885, 1687, 12465, 420, 1340, 11, 286, 519, 309, 311, 50578], "temperature": 0.0, "avg_logprob": -0.18382934331893921, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.0001465208624722436}, {"id": 462, "seek": 195670, "start": 1960.98, "end": 1965.66, "text": " still quite fascinating that this fluid-like behaviour has already arisen from just the", "tokens": [50578, 920, 1596, 10343, 300, 341, 9113, 12, 4092, 17229, 575, 1217, 594, 11106, 490, 445, 264, 50812], "temperature": 0.0, "avg_logprob": -0.18382934331893921, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.0001465208624722436}, {"id": 463, "seek": 195670, "start": 1965.66, "end": 1975.18, "text": " few little things we've implemented.", "tokens": [50812, 1326, 707, 721, 321, 600, 12270, 13, 51288], "temperature": 0.0, "avg_logprob": -0.18382934331893921, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.0001465208624722436}, {"id": 464, "seek": 195670, "start": 1975.18, "end": 1979.46, "text": " Anyway, let's see if we can still improve this at least a little bit more today, and", "tokens": [51288, 5684, 11, 718, 311, 536, 498, 321, 393, 920, 3470, 341, 412, 1935, 257, 707, 857, 544, 965, 11, 293, 51502], "temperature": 0.0, "avg_logprob": -0.18382934331893921, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.0001465208624722436}, {"id": 465, "seek": 195670, "start": 1979.46, "end": 1982.8600000000001, "text": " perhaps even venture into the third dimension.", "tokens": [51502, 4317, 754, 18474, 666, 264, 2636, 10139, 13, 51672], "temperature": 0.0, "avg_logprob": -0.18382934331893921, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.0001465208624722436}, {"id": 466, "seek": 198286, "start": 1982.86, "end": 1985.58, "text": " So a few issues are jumping out to me at the moment.", "tokens": [50364, 407, 257, 1326, 2663, 366, 11233, 484, 281, 385, 412, 264, 1623, 13, 50500], "temperature": 0.0, "avg_logprob": -0.09528541564941406, "compression_ratio": 1.7793103448275862, "no_speech_prob": 0.01825081557035446}, {"id": 467, "seek": 198286, "start": 1985.58, "end": 1989.74, "text": " For example, there's the fact that the particles are really tightly squeezed together along", "tokens": [50500, 1171, 1365, 11, 456, 311, 264, 1186, 300, 264, 10007, 366, 534, 21952, 39470, 1214, 2051, 50708], "temperature": 0.0, "avg_logprob": -0.09528541564941406, "compression_ratio": 1.7793103448275862, "no_speech_prob": 0.01825081557035446}, {"id": 468, "seek": 198286, "start": 1989.74, "end": 1994.8999999999999, "text": " the edges here, and that's causing a gap between the rest of the particles since they're", "tokens": [50708, 264, 8819, 510, 11, 293, 300, 311, 9853, 257, 7417, 1296, 264, 1472, 295, 264, 10007, 1670, 436, 434, 50966], "temperature": 0.0, "avg_logprob": -0.09528541564941406, "compression_ratio": 1.7793103448275862, "no_speech_prob": 0.01825081557035446}, {"id": 469, "seek": 198286, "start": 1994.8999999999999, "end": 1997.8999999999999, "text": " trying to get away from that overly dense region.", "tokens": [50966, 1382, 281, 483, 1314, 490, 300, 24324, 18011, 4458, 13, 51116], "temperature": 0.0, "avg_logprob": -0.09528541564941406, "compression_ratio": 1.7793103448275862, "no_speech_prob": 0.01825081557035446}, {"id": 470, "seek": 198286, "start": 1997.8999999999999, "end": 2002.82, "text": " And a similar effect seems to be happening along the surface of the fluid as well.", "tokens": [51116, 400, 257, 2531, 1802, 2544, 281, 312, 2737, 2051, 264, 3753, 295, 264, 9113, 382, 731, 13, 51362], "temperature": 0.0, "avg_logprob": -0.09528541564941406, "compression_ratio": 1.7793103448275862, "no_speech_prob": 0.01825081557035446}, {"id": 471, "seek": 198286, "start": 2002.82, "end": 2007.4199999999998, "text": " Another thing is that when we have fast-moving particles, such as when starting up the simulation", "tokens": [51362, 3996, 551, 307, 300, 562, 321, 362, 2370, 12, 3280, 798, 10007, 11, 1270, 382, 562, 2891, 493, 264, 16575, 51592], "temperature": 0.0, "avg_logprob": -0.09528541564941406, "compression_ratio": 1.7793103448275862, "no_speech_prob": 0.01825081557035446}, {"id": 472, "seek": 198286, "start": 2007.4199999999998, "end": 2011.82, "text": " for instance, the fluid seems to be overly chaotic.", "tokens": [51592, 337, 5197, 11, 264, 9113, 2544, 281, 312, 24324, 27013, 13, 51812], "temperature": 0.0, "avg_logprob": -0.09528541564941406, "compression_ratio": 1.7793103448275862, "no_speech_prob": 0.01825081557035446}, {"id": 473, "seek": 201182, "start": 2011.82, "end": 2016.26, "text": " For example, if we zoom in on a single frame here, we can see from these colours how the", "tokens": [50364, 1171, 1365, 11, 498, 321, 8863, 294, 322, 257, 2167, 3920, 510, 11, 321, 393, 536, 490, 613, 16484, 577, 264, 50586], "temperature": 0.0, "avg_logprob": -0.10934356881790802, "compression_ratio": 1.5766666666666667, "no_speech_prob": 0.007344955578446388}, {"id": 474, "seek": 201182, "start": 2016.26, "end": 2021.1, "text": " velocities are all over the place, even between nearby regions.", "tokens": [50586, 7806, 1088, 366, 439, 670, 264, 1081, 11, 754, 1296, 11184, 10682, 13, 50828], "temperature": 0.0, "avg_logprob": -0.10934356881790802, "compression_ratio": 1.5766666666666667, "no_speech_prob": 0.007344955578446388}, {"id": 475, "seek": 201182, "start": 2021.1, "end": 2025.3, "text": " For this last problem at least, I think it'd be a good idea to try and add a bit of friction", "tokens": [50828, 1171, 341, 1036, 1154, 412, 1935, 11, 286, 519, 309, 1116, 312, 257, 665, 1558, 281, 853, 293, 909, 257, 857, 295, 17710, 51038], "temperature": 0.0, "avg_logprob": -0.10934356881790802, "compression_ratio": 1.5766666666666667, "no_speech_prob": 0.007344955578446388}, {"id": 476, "seek": 201182, "start": 2025.3, "end": 2030.62, "text": " between the particles in the fluid, more commonly known as viscosity.", "tokens": [51038, 1296, 264, 10007, 294, 264, 9113, 11, 544, 12719, 2570, 382, 39744, 13, 51304], "temperature": 0.0, "avg_logprob": -0.10934356881790802, "compression_ratio": 1.5766666666666667, "no_speech_prob": 0.007344955578446388}, {"id": 477, "seek": 201182, "start": 2030.62, "end": 2035.5, "text": " So let's actually take a moment to look at the famous Navier-Stokes equations for incompressible", "tokens": [51304, 407, 718, 311, 767, 747, 257, 1623, 281, 574, 412, 264, 4618, 9219, 811, 12, 4520, 8606, 11787, 337, 40393, 735, 964, 51548], "temperature": 0.0, "avg_logprob": -0.10934356881790802, "compression_ratio": 1.5766666666666667, "no_speech_prob": 0.007344955578446388}, {"id": 478, "seek": 201182, "start": 2035.5, "end": 2039.78, "text": " fluid flow, which underpin everything that we've been doing.", "tokens": [51548, 9113, 3095, 11, 597, 833, 17836, 1203, 300, 321, 600, 668, 884, 13, 51762], "temperature": 0.0, "avg_logprob": -0.10934356881790802, "compression_ratio": 1.5766666666666667, "no_speech_prob": 0.007344955578446388}, {"id": 479, "seek": 203978, "start": 2039.78, "end": 2043.54, "text": " First of all, this equation here just says that the density of the fluid must remain", "tokens": [50364, 2386, 295, 439, 11, 341, 5367, 510, 445, 1619, 300, 264, 10305, 295, 264, 9113, 1633, 6222, 50552], "temperature": 0.0, "avg_logprob": -0.12943432632001858, "compression_ratio": 1.6383763837638377, "no_speech_prob": 0.002889333525672555}, {"id": 480, "seek": 203978, "start": 2043.54, "end": 2047.82, "text": " the same everywhere, and I mean, we're trying.", "tokens": [50552, 264, 912, 5315, 11, 293, 286, 914, 11, 321, 434, 1382, 13, 50766], "temperature": 0.0, "avg_logprob": -0.12943432632001858, "compression_ratio": 1.6383763837638377, "no_speech_prob": 0.002889333525672555}, {"id": 481, "seek": 203978, "start": 2047.82, "end": 2052.42, "text": " Then the other equation tells us that each tiny little volume of fluid is accelerated", "tokens": [50766, 1396, 264, 661, 5367, 5112, 505, 300, 1184, 5870, 707, 5523, 295, 9113, 307, 29763, 50996], "temperature": 0.0, "avg_logprob": -0.12943432632001858, "compression_ratio": 1.6383763837638377, "no_speech_prob": 0.002889333525672555}, {"id": 482, "seek": 203978, "start": 2052.42, "end": 2058.2599999999998, "text": " down the pressure gradient, and that it responds to external forces such as gravity and mice", "tokens": [50996, 760, 264, 3321, 16235, 11, 293, 300, 309, 27331, 281, 8320, 5874, 1270, 382, 12110, 293, 22257, 51288], "temperature": 0.0, "avg_logprob": -0.12943432632001858, "compression_ratio": 1.6383763837638377, "no_speech_prob": 0.002889333525672555}, {"id": 483, "seek": 203978, "start": 2058.2599999999998, "end": 2062.1, "text": " in our case, so we've done both of those terms.", "tokens": [51288, 294, 527, 1389, 11, 370, 321, 600, 1096, 1293, 295, 729, 2115, 13, 51480], "temperature": 0.0, "avg_logprob": -0.12943432632001858, "compression_ratio": 1.6383763837638377, "no_speech_prob": 0.002889333525672555}, {"id": 484, "seek": 203978, "start": 2062.1, "end": 2066.62, "text": " But then this slightly scary looking term here is the viscosity, and essentially what", "tokens": [51480, 583, 550, 341, 4748, 6958, 1237, 1433, 510, 307, 264, 39744, 11, 293, 4476, 437, 51706], "temperature": 0.0, "avg_logprob": -0.12943432632001858, "compression_ratio": 1.6383763837638377, "no_speech_prob": 0.002889333525672555}, {"id": 485, "seek": 206662, "start": 2066.62, "end": 2072.46, "text": " it does is cause the velocities of nearby regions of fluid to become blurred together.", "tokens": [50364, 309, 775, 307, 3082, 264, 7806, 1088, 295, 11184, 10682, 295, 9113, 281, 1813, 43525, 1214, 13, 50656], "temperature": 0.0, "avg_logprob": -0.10464495849609375, "compression_ratio": 1.6875, "no_speech_prob": 0.00034598202910274267}, {"id": 486, "seek": 206662, "start": 2072.46, "end": 2076.66, "text": " Now we could implement it this way, but for today at least, I actually want to go with", "tokens": [50656, 823, 321, 727, 4445, 309, 341, 636, 11, 457, 337, 965, 412, 1935, 11, 286, 767, 528, 281, 352, 365, 50866], "temperature": 0.0, "avg_logprob": -0.10464495849609375, "compression_ratio": 1.6875, "no_speech_prob": 0.00034598202910274267}, {"id": 487, "seek": 206662, "start": 2076.66, "end": 2080.7799999999997, "text": " a different approach I've seen that seems much simpler, but still achieves the same", "tokens": [50866, 257, 819, 3109, 286, 600, 1612, 300, 2544, 709, 18587, 11, 457, 920, 3538, 977, 264, 912, 51072], "temperature": 0.0, "avg_logprob": -0.10464495849609375, "compression_ratio": 1.6875, "no_speech_prob": 0.00034598202910274267}, {"id": 488, "seek": 206662, "start": 2080.7799999999997, "end": 2082.22, "text": " sort of thing.", "tokens": [51072, 1333, 295, 551, 13, 51144], "temperature": 0.0, "avg_logprob": -0.10464495849609375, "compression_ratio": 1.6875, "no_speech_prob": 0.00034598202910274267}, {"id": 489, "seek": 206662, "start": 2082.22, "end": 2086.7, "text": " So I've added this little function here, which just takes in the index of a particle,", "tokens": [51144, 407, 286, 600, 3869, 341, 707, 2445, 510, 11, 597, 445, 2516, 294, 264, 8186, 295, 257, 12359, 11, 51368], "temperature": 0.0, "avg_logprob": -0.10464495849609375, "compression_ratio": 1.6875, "no_speech_prob": 0.00034598202910274267}, {"id": 490, "seek": 206662, "start": 2086.7, "end": 2090.7799999999997, "text": " and loops over all the other particles within the smoothing radius.", "tokens": [51368, 293, 16121, 670, 439, 264, 661, 10007, 1951, 264, 899, 6259, 571, 15845, 13, 51572], "temperature": 0.0, "avg_logprob": -0.10464495849609375, "compression_ratio": 1.6875, "no_speech_prob": 0.00034598202910274267}, {"id": 491, "seek": 206662, "start": 2090.7799999999997, "end": 2094.2999999999997, "text": " For each of those, it then calculates the difference between the velocities of the two", "tokens": [51572, 1171, 1184, 295, 729, 11, 309, 550, 4322, 1024, 264, 2649, 1296, 264, 7806, 1088, 295, 264, 732, 51748], "temperature": 0.0, "avg_logprob": -0.10464495849609375, "compression_ratio": 1.6875, "no_speech_prob": 0.00034598202910274267}, {"id": 492, "seek": 209430, "start": 2094.3, "end": 2100.38, "text": " particles, and adds that on to the viscosity force, meaning that over time, each particle's", "tokens": [50364, 10007, 11, 293, 10860, 300, 322, 281, 264, 39744, 3464, 11, 3620, 300, 670, 565, 11, 1184, 12359, 311, 50668], "temperature": 0.0, "avg_logprob": -0.19815796819226494, "compression_ratio": 1.706959706959707, "no_speech_prob": 0.000687839521560818}, {"id": 493, "seek": 209430, "start": 2100.38, "end": 2105.1000000000004, "text": " velocity will become more like its neighbors, and nearby neighbors have more influence as", "tokens": [50668, 9269, 486, 1813, 544, 411, 1080, 12512, 11, 293, 11184, 12512, 362, 544, 6503, 382, 50904], "temperature": 0.0, "avg_logprob": -0.19815796819226494, "compression_ratio": 1.706959706959707, "no_speech_prob": 0.000687839521560818}, {"id": 494, "seek": 209430, "start": 2105.1000000000004, "end": 2110.0600000000004, "text": " usual, which is done using this viscosity kernel, for which I've just repurposed that", "tokens": [50904, 7713, 11, 597, 307, 1096, 1228, 341, 39744, 28256, 11, 337, 597, 286, 600, 445, 1085, 20130, 1744, 300, 51152], "temperature": 0.0, "avg_logprob": -0.19815796819226494, "compression_ratio": 1.706959706959707, "no_speech_prob": 0.000687839521560818}, {"id": 495, "seek": 209430, "start": 2110.0600000000004, "end": 2113.5800000000004, "text": " function that we were originally using for the pressure force.", "tokens": [51152, 2445, 300, 321, 645, 7993, 1228, 337, 264, 3321, 3464, 13, 51328], "temperature": 0.0, "avg_logprob": -0.19815796819226494, "compression_ratio": 1.706959706959707, "no_speech_prob": 0.000687839521560818}, {"id": 496, "seek": 209430, "start": 2113.5800000000004, "end": 2116.0600000000004, "text": " Okay, let's try it out.", "tokens": [51328, 1033, 11, 718, 311, 853, 309, 484, 13, 51452], "temperature": 0.0, "avg_logprob": -0.19815796819226494, "compression_ratio": 1.706959706959707, "no_speech_prob": 0.000687839521560818}, {"id": 497, "seek": 209430, "start": 2116.0600000000004, "end": 2120.98, "text": " Oh, my settings have been reset, so we're back to no gravity at the moment, but let's", "tokens": [51452, 876, 11, 452, 6257, 362, 668, 14322, 11, 370, 321, 434, 646, 281, 572, 12110, 412, 264, 1623, 11, 457, 718, 311, 51698], "temperature": 0.0, "avg_logprob": -0.19815796819226494, "compression_ratio": 1.706959706959707, "no_speech_prob": 0.000687839521560818}, {"id": 498, "seek": 209430, "start": 2120.98, "end": 2122.6600000000003, "text": " see what that looks like.", "tokens": [51698, 536, 437, 300, 1542, 411, 13, 51782], "temperature": 0.0, "avg_logprob": -0.19815796819226494, "compression_ratio": 1.706959706959707, "no_speech_prob": 0.000687839521560818}, {"id": 499, "seek": 212266, "start": 2122.8599999999997, "end": 2127.5, "text": " Currently, our viscosity is at zero, so let's turn it up, I'm not sure what a good value", "tokens": [50374, 19964, 11, 527, 39744, 307, 412, 4018, 11, 370, 718, 311, 1261, 309, 493, 11, 286, 478, 406, 988, 437, 257, 665, 2158, 50606], "temperature": 0.0, "avg_logprob": -0.17706848403154793, "compression_ratio": 1.599264705882353, "no_speech_prob": 0.00012533084372989833}, {"id": 500, "seek": 212266, "start": 2127.5, "end": 2130.8599999999997, "text": " would be, let's just try 5 maybe.", "tokens": [50606, 576, 312, 11, 718, 311, 445, 853, 1025, 1310, 13, 50774], "temperature": 0.0, "avg_logprob": -0.17706848403154793, "compression_ratio": 1.599264705882353, "no_speech_prob": 0.00012533084372989833}, {"id": 501, "seek": 212266, "start": 2130.8599999999997, "end": 2134.3399999999997, "text": " Nope, definitely not, that looks very strange.", "tokens": [50774, 12172, 11, 2138, 406, 11, 300, 1542, 588, 5861, 13, 50948], "temperature": 0.0, "avg_logprob": -0.17706848403154793, "compression_ratio": 1.599264705882353, "no_speech_prob": 0.00012533084372989833}, {"id": 502, "seek": 212266, "start": 2134.3399999999997, "end": 2138.42, "text": " My guess is that the viscosity is just way too high at the moment, and so some of these", "tokens": [50948, 1222, 2041, 307, 300, 264, 39744, 307, 445, 636, 886, 1090, 412, 264, 1623, 11, 293, 370, 512, 295, 613, 51152], "temperature": 0.0, "avg_logprob": -0.17706848403154793, "compression_ratio": 1.599264705882353, "no_speech_prob": 0.00012533084372989833}, {"id": 503, "seek": 212266, "start": 2138.42, "end": 2142.74, "text": " particles are almost exactly matching one another in velocity, and that's causing", "tokens": [51152, 10007, 366, 1920, 2293, 14324, 472, 1071, 294, 9269, 11, 293, 300, 311, 9853, 51368], "temperature": 0.0, "avg_logprob": -0.17706848403154793, "compression_ratio": 1.599264705882353, "no_speech_prob": 0.00012533084372989833}, {"id": 504, "seek": 212266, "start": 2142.74, "end": 2145.1, "text": " them to clump together weirdly.", "tokens": [51368, 552, 281, 596, 1420, 1214, 48931, 13, 51486], "temperature": 0.0, "avg_logprob": -0.17706848403154793, "compression_ratio": 1.599264705882353, "no_speech_prob": 0.00012533084372989833}, {"id": 505, "seek": 212266, "start": 2145.1, "end": 2150.14, "text": " So let's reduce it to maybe 0.5 instead, and see how that goes.", "tokens": [51486, 407, 718, 311, 5407, 309, 281, 1310, 1958, 13, 20, 2602, 11, 293, 536, 577, 300, 1709, 13, 51738], "temperature": 0.0, "avg_logprob": -0.17706848403154793, "compression_ratio": 1.599264705882353, "no_speech_prob": 0.00012533084372989833}, {"id": 506, "seek": 215014, "start": 2151.14, "end": 2154.42, "text": " Okay, this is looking pretty good actually.", "tokens": [50414, 1033, 11, 341, 307, 1237, 1238, 665, 767, 13, 50578], "temperature": 0.0, "avg_logprob": -0.14192493065543796, "compression_ratio": 1.6130434782608696, "no_speech_prob": 7.254112279042602e-05}, {"id": 507, "seek": 215014, "start": 2154.42, "end": 2158.5, "text": " We can see how the particle velocities are more smoothed out, and so we no longer have", "tokens": [50578, 492, 393, 536, 577, 264, 12359, 7806, 1088, 366, 544, 5508, 292, 484, 11, 293, 370, 321, 572, 2854, 362, 50782], "temperature": 0.0, "avg_logprob": -0.14192493065543796, "compression_ratio": 1.6130434782608696, "no_speech_prob": 7.254112279042602e-05}, {"id": 508, "seek": 215014, "start": 2158.5, "end": 2162.9, "text": " those few particles with super high velocities shooting off on their own.", "tokens": [50782, 729, 1326, 10007, 365, 1687, 1090, 7806, 1088, 5942, 766, 322, 641, 1065, 13, 51002], "temperature": 0.0, "avg_logprob": -0.14192493065543796, "compression_ratio": 1.6130434782608696, "no_speech_prob": 7.254112279042602e-05}, {"id": 509, "seek": 215014, "start": 2162.9, "end": 2167.7, "text": " I want to see how this looks with gravity enabled again, so I've set up a quick comparison", "tokens": [51002, 286, 528, 281, 536, 577, 341, 1542, 365, 12110, 15172, 797, 11, 370, 286, 600, 992, 493, 257, 1702, 9660, 51242], "temperature": 0.0, "avg_logprob": -0.14192493065543796, "compression_ratio": 1.6130434782608696, "no_speech_prob": 7.254112279042602e-05}, {"id": 510, "seek": 215014, "start": 2167.7, "end": 2174.22, "text": " here with a range of different viscosity values, and let's see how it goes.", "tokens": [51242, 510, 365, 257, 3613, 295, 819, 39744, 4190, 11, 293, 718, 311, 536, 577, 309, 1709, 13, 51568], "temperature": 0.0, "avg_logprob": -0.14192493065543796, "compression_ratio": 1.6130434782608696, "no_speech_prob": 7.254112279042602e-05}, {"id": 511, "seek": 217422, "start": 2174.22, "end": 2181.66, "text": " I think the one on the top right looked best to me, but let's see that again quickly.", "tokens": [50364, 286, 519, 264, 472, 322, 264, 1192, 558, 2956, 1151, 281, 385, 11, 457, 718, 311, 536, 300, 797, 2661, 13, 50736], "temperature": 0.0, "avg_logprob": -0.14816492254083807, "compression_ratio": 1.579136690647482, "no_speech_prob": 7.602281402796507e-05}, {"id": 512, "seek": 217422, "start": 2185.66, "end": 2189.5, "text": " And I'll freeze it here actually, because this gives us a nice view of the increasingly", "tokens": [50936, 400, 286, 603, 15959, 309, 510, 767, 11, 570, 341, 2709, 505, 257, 1481, 1910, 295, 264, 12980, 51128], "temperature": 0.0, "avg_logprob": -0.14816492254083807, "compression_ratio": 1.579136690647482, "no_speech_prob": 7.602281402796507e-05}, {"id": 513, "seek": 217422, "start": 2189.5, "end": 2193.66, "text": " smoothed out results we get with this new artificial viscosity term.", "tokens": [51128, 5508, 292, 484, 3542, 321, 483, 365, 341, 777, 11677, 39744, 1433, 13, 51336], "temperature": 0.0, "avg_logprob": -0.14816492254083807, "compression_ratio": 1.579136690647482, "no_speech_prob": 7.602281402796507e-05}, {"id": 514, "seek": 217422, "start": 2193.66, "end": 2197.22, "text": " Obviously, we don't want to smooth out too much detail though, so I'm going to keep", "tokens": [51336, 7580, 11, 321, 500, 380, 528, 281, 5508, 484, 886, 709, 2607, 1673, 11, 370, 286, 478, 516, 281, 1066, 51514], "temperature": 0.0, "avg_logprob": -0.14816492254083807, "compression_ratio": 1.579136690647482, "no_speech_prob": 7.602281402796507e-05}, {"id": 515, "seek": 217422, "start": 2197.22, "end": 2199.1, "text": " that value pretty low.", "tokens": [51514, 300, 2158, 1238, 2295, 13, 51608], "temperature": 0.0, "avg_logprob": -0.14816492254083807, "compression_ratio": 1.579136690647482, "no_speech_prob": 7.602281402796507e-05}, {"id": 516, "seek": 217422, "start": 2199.1, "end": 2203.98, "text": " Okay, now I'm not quite sure yet how to tackle that boundary problem I mentioned earlier,", "tokens": [51608, 1033, 11, 586, 286, 478, 406, 1596, 988, 1939, 577, 281, 14896, 300, 12866, 1154, 286, 2835, 3071, 11, 51852], "temperature": 0.0, "avg_logprob": -0.14816492254083807, "compression_ratio": 1.579136690647482, "no_speech_prob": 7.602281402796507e-05}, {"id": 517, "seek": 220398, "start": 2203.98, "end": 2207.86, "text": " so I'm going to just ignore that for now, and instead work on something else that's", "tokens": [50364, 370, 286, 478, 516, 281, 445, 11200, 300, 337, 586, 11, 293, 2602, 589, 322, 746, 1646, 300, 311, 50558], "temperature": 0.0, "avg_logprob": -0.11702198548750443, "compression_ratio": 1.6323529411764706, "no_speech_prob": 1.4063590242585633e-05}, {"id": 518, "seek": 220398, "start": 2207.86, "end": 2209.26, "text": " bothering me.", "tokens": [50558, 31432, 385, 13, 50628], "temperature": 0.0, "avg_logprob": -0.11702198548750443, "compression_ratio": 1.6323529411764706, "no_speech_prob": 1.4063590242585633e-05}, {"id": 519, "seek": 220398, "start": 2209.26, "end": 2214.78, "text": " If we lift up a bunch of water, and then let it go, we can see how it quickly splits up", "tokens": [50628, 759, 321, 5533, 493, 257, 3840, 295, 1281, 11, 293, 550, 718, 309, 352, 11, 321, 393, 536, 577, 309, 2661, 37741, 493, 50904], "temperature": 0.0, "avg_logprob": -0.11702198548750443, "compression_ratio": 1.6323529411764706, "no_speech_prob": 1.4063590242585633e-05}, {"id": 520, "seek": 220398, "start": 2214.78, "end": 2221.66, "text": " into these little droplets of just a few particles each, which looks a little strange.", "tokens": [50904, 666, 613, 707, 41573, 295, 445, 257, 1326, 10007, 1184, 11, 597, 1542, 257, 707, 5861, 13, 51248], "temperature": 0.0, "avg_logprob": -0.11702198548750443, "compression_ratio": 1.6323529411764706, "no_speech_prob": 1.4063590242585633e-05}, {"id": 521, "seek": 220398, "start": 2221.66, "end": 2225.34, "text": " We could get rid of this behaviour by simply clamping the pressure values that they can't", "tokens": [51248, 492, 727, 483, 3973, 295, 341, 17229, 538, 2935, 17690, 278, 264, 3321, 4190, 300, 436, 393, 380, 51432], "temperature": 0.0, "avg_logprob": -0.11702198548750443, "compression_ratio": 1.6323529411764706, "no_speech_prob": 1.4063590242585633e-05}, {"id": 522, "seek": 220398, "start": 2225.34, "end": 2231.06, "text": " go below zero, meaning that the particles won't pull each other together anymore.", "tokens": [51432, 352, 2507, 4018, 11, 3620, 300, 264, 10007, 1582, 380, 2235, 1184, 661, 1214, 3602, 13, 51718], "temperature": 0.0, "avg_logprob": -0.11702198548750443, "compression_ratio": 1.6323529411764706, "no_speech_prob": 1.4063590242585633e-05}, {"id": 523, "seek": 223106, "start": 2231.06, "end": 2234.74, "text": " So let's try that out.", "tokens": [50364, 407, 718, 311, 853, 300, 484, 13, 50548], "temperature": 0.0, "avg_logprob": -0.12624085991127978, "compression_ratio": 1.5830258302583027, "no_speech_prob": 0.00011235203419346362}, {"id": 524, "seek": 223106, "start": 2234.74, "end": 2239.9, "text": " But now the particles are just raining down individually, which doesn't look right either.", "tokens": [50548, 583, 586, 264, 10007, 366, 445, 18441, 760, 16652, 11, 597, 1177, 380, 574, 558, 2139, 13, 50806], "temperature": 0.0, "avg_logprob": -0.12624085991127978, "compression_ratio": 1.5830258302583027, "no_speech_prob": 0.00011235203419346362}, {"id": 525, "seek": 223106, "start": 2239.9, "end": 2244.38, "text": " I guess allowing that negative pressure was giving us a very crude kind of surface tension", "tokens": [50806, 286, 2041, 8293, 300, 3671, 3321, 390, 2902, 505, 257, 588, 30796, 733, 295, 3753, 8980, 51030], "temperature": 0.0, "avg_logprob": -0.12624085991127978, "compression_ratio": 1.5830258302583027, "no_speech_prob": 0.00011235203419346362}, {"id": 526, "seek": 223106, "start": 2244.38, "end": 2249.2599999999998, "text": " effect, and so I think until we implement a more accurate version of that in a future", "tokens": [51030, 1802, 11, 293, 370, 286, 519, 1826, 321, 4445, 257, 544, 8559, 3037, 295, 300, 294, 257, 2027, 51274], "temperature": 0.0, "avg_logprob": -0.12624085991127978, "compression_ratio": 1.5830258302583027, "no_speech_prob": 0.00011235203419346362}, {"id": 527, "seek": 223106, "start": 2249.2599999999998, "end": 2253.02, "text": " video perhaps, we should probably hang on to it.", "tokens": [51274, 960, 4317, 11, 321, 820, 1391, 3967, 322, 281, 309, 13, 51462], "temperature": 0.0, "avg_logprob": -0.12624085991127978, "compression_ratio": 1.5830258302583027, "no_speech_prob": 0.00011235203419346362}, {"id": 528, "seek": 223106, "start": 2253.02, "end": 2257.38, "text": " So I'm going to undo that change, and instead I want to try an interesting workaround one", "tokens": [51462, 407, 286, 478, 516, 281, 23779, 300, 1319, 11, 293, 2602, 286, 528, 281, 853, 364, 1880, 589, 25762, 472, 51680], "temperature": 0.0, "avg_logprob": -0.12624085991127978, "compression_ratio": 1.5830258302583027, "no_speech_prob": 0.00011235203419346362}, {"id": 529, "seek": 225738, "start": 2257.38, "end": 2262.9, "text": " of the papers suggested, which is to simply have a second pressure force, purely for pushing", "tokens": [50364, 295, 264, 10577, 10945, 11, 597, 307, 281, 2935, 362, 257, 1150, 3321, 3464, 11, 17491, 337, 7380, 50640], "temperature": 0.0, "avg_logprob": -0.10370271939497727, "compression_ratio": 1.78714859437751, "no_speech_prob": 0.01912134326994419}, {"id": 530, "seek": 225738, "start": 2262.9, "end": 2266.6800000000003, "text": " apart particles that get too close together.", "tokens": [50640, 4936, 10007, 300, 483, 886, 1998, 1214, 13, 50829], "temperature": 0.0, "avg_logprob": -0.10370271939497727, "compression_ratio": 1.78714859437751, "no_speech_prob": 0.01912134326994419}, {"id": 531, "seek": 225738, "start": 2266.6800000000003, "end": 2270.6600000000003, "text": " So this is the shape of the smoothing function we're using for our density calculation at", "tokens": [50829, 407, 341, 307, 264, 3909, 295, 264, 899, 6259, 571, 2445, 321, 434, 1228, 337, 527, 10305, 17108, 412, 51028], "temperature": 0.0, "avg_logprob": -0.10370271939497727, "compression_ratio": 1.78714859437751, "no_speech_prob": 0.01912134326994419}, {"id": 532, "seek": 225738, "start": 2270.6600000000003, "end": 2275.82, "text": " the moment, and what the paper recommends is to use another, even spikier version, to", "tokens": [51028, 264, 1623, 11, 293, 437, 264, 3035, 34556, 307, 281, 764, 1071, 11, 754, 637, 1035, 811, 3037, 11, 281, 51286], "temperature": 0.0, "avg_logprob": -0.10370271939497727, "compression_ratio": 1.78714859437751, "no_speech_prob": 0.01912134326994419}, {"id": 533, "seek": 225738, "start": 2275.82, "end": 2279.7000000000003, "text": " calculate what they call the near density.", "tokens": [51286, 8873, 437, 436, 818, 264, 2651, 10305, 13, 51480], "temperature": 0.0, "avg_logprob": -0.10370271939497727, "compression_ratio": 1.78714859437751, "no_speech_prob": 0.01912134326994419}, {"id": 534, "seek": 225738, "start": 2279.7000000000003, "end": 2284.02, "text": " From this near density, we calculate the near pressure, simply by multiplying it by some", "tokens": [51480, 3358, 341, 2651, 10305, 11, 321, 8873, 264, 2651, 3321, 11, 2935, 538, 30955, 309, 538, 512, 51696], "temperature": 0.0, "avg_logprob": -0.10370271939497727, "compression_ratio": 1.78714859437751, "no_speech_prob": 0.01912134326994419}, {"id": 535, "seek": 228402, "start": 2284.02, "end": 2288.9, "text": " constant, meaning that this will be a purely repulsive force.", "tokens": [50364, 5754, 11, 3620, 300, 341, 486, 312, 257, 17491, 1085, 32657, 3464, 13, 50608], "temperature": 0.0, "avg_logprob": -0.16337151871514075, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.0036496322136372328}, {"id": 536, "seek": 228402, "start": 2288.9, "end": 2292.7, "text": " So let's try it out quickly, and just for fun, I'm going to see what happens if we", "tokens": [50608, 407, 718, 311, 853, 309, 484, 2661, 11, 293, 445, 337, 1019, 11, 286, 478, 516, 281, 536, 437, 2314, 498, 321, 50798], "temperature": 0.0, "avg_logprob": -0.16337151871514075, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.0036496322136372328}, {"id": 537, "seek": 228402, "start": 2292.7, "end": 2295.86, "text": " make the near pressure multiplier negative.", "tokens": [50798, 652, 264, 2651, 3321, 44106, 3671, 13, 50956], "temperature": 0.0, "avg_logprob": -0.16337151871514075, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.0036496322136372328}, {"id": 538, "seek": 228402, "start": 2295.86, "end": 2301.86, "text": " Okay, they just collapse in on one another, which makes sense, so let's then try a positive", "tokens": [50956, 1033, 11, 436, 445, 15584, 294, 322, 472, 1071, 11, 597, 1669, 2020, 11, 370, 718, 311, 550, 853, 257, 3353, 51256], "temperature": 0.0, "avg_logprob": -0.16337151871514075, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.0036496322136372328}, {"id": 539, "seek": 228402, "start": 2301.86, "end": 2303.66, "text": " value.", "tokens": [51256, 2158, 13, 51346], "temperature": 0.0, "avg_logprob": -0.16337151871514075, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.0036496322136372328}, {"id": 540, "seek": 228402, "start": 2303.66, "end": 2311.42, "text": " And now I want to try picking up a ball of fluid again, and dropping it.", "tokens": [51346, 400, 586, 286, 528, 281, 853, 8867, 493, 257, 2594, 295, 9113, 797, 11, 293, 13601, 309, 13, 51734], "temperature": 0.0, "avg_logprob": -0.16337151871514075, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.0036496322136372328}, {"id": 541, "seek": 231142, "start": 2311.42, "end": 2316.62, "text": " And as we can see, this time it's able to hold its shape a lot better, since the particles", "tokens": [50364, 400, 382, 321, 393, 536, 11, 341, 565, 309, 311, 1075, 281, 1797, 1080, 3909, 257, 688, 1101, 11, 1670, 264, 10007, 50624], "temperature": 0.0, "avg_logprob": -0.09961611253243906, "compression_ratio": 1.5884476534296028, "no_speech_prob": 0.0059103816747665405}, {"id": 542, "seek": 231142, "start": 2316.62, "end": 2321.38, "text": " are no longer getting pulled into those tiny clusters we saw before.", "tokens": [50624, 366, 572, 2854, 1242, 7373, 666, 729, 5870, 23313, 321, 1866, 949, 13, 50862], "temperature": 0.0, "avg_logprob": -0.09961611253243906, "compression_ratio": 1.5884476534296028, "no_speech_prob": 0.0059103816747665405}, {"id": 543, "seek": 231142, "start": 2321.38, "end": 2325.9, "text": " So I think we've succeeded in improving the fluid a bit with these last two changes,", "tokens": [50862, 407, 286, 519, 321, 600, 20263, 294, 11470, 264, 9113, 257, 857, 365, 613, 1036, 732, 2962, 11, 51088], "temperature": 0.0, "avg_logprob": -0.09961611253243906, "compression_ratio": 1.5884476534296028, "no_speech_prob": 0.0059103816747665405}, {"id": 544, "seek": 231142, "start": 2325.9, "end": 2329.9, "text": " although I'm certainly not entirely happy with how it's behaving yet.", "tokens": [51088, 4878, 286, 478, 3297, 406, 7696, 2055, 365, 577, 309, 311, 35263, 1939, 13, 51288], "temperature": 0.0, "avg_logprob": -0.09961611253243906, "compression_ratio": 1.5884476534296028, "no_speech_prob": 0.0059103816747665405}, {"id": 545, "seek": 231142, "start": 2329.9, "end": 2334.34, "text": " For example, something that bothers me quite a lot is how it often appears to sort of bounce", "tokens": [51288, 1171, 1365, 11, 746, 300, 33980, 385, 1596, 257, 688, 307, 577, 309, 2049, 7038, 281, 1333, 295, 15894, 51510], "temperature": 0.0, "avg_logprob": -0.09961611253243906, "compression_ratio": 1.5884476534296028, "no_speech_prob": 0.0059103816747665405}, {"id": 546, "seek": 231142, "start": 2334.34, "end": 2337.02, "text": " more like a jelly than a liquid.", "tokens": [51510, 544, 411, 257, 17186, 813, 257, 6553, 13, 51644], "temperature": 0.0, "avg_logprob": -0.09961611253243906, "compression_ratio": 1.5884476534296028, "no_speech_prob": 0.0059103816747665405}, {"id": 547, "seek": 233702, "start": 2337.02, "end": 2341.34, "text": " This is happening pretty much all the time, but we can see a dramatic example if I just", "tokens": [50364, 639, 307, 2737, 1238, 709, 439, 264, 565, 11, 457, 321, 393, 536, 257, 12023, 1365, 498, 286, 445, 50580], "temperature": 0.0, "avg_logprob": -0.12337243766115423, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.00032502738758921623}, {"id": 548, "seek": 233702, "start": 2341.34, "end": 2347.7, "text": " let the fluid come to a rest, and then change the target density for example.", "tokens": [50580, 718, 264, 9113, 808, 281, 257, 1472, 11, 293, 550, 1319, 264, 3779, 10305, 337, 1365, 13, 50898], "temperature": 0.0, "avg_logprob": -0.12337243766115423, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.00032502738758921623}, {"id": 549, "seek": 233702, "start": 2347.7, "end": 2352.38, "text": " Now we could get less jiggly results simply by increasing the pressure multiplier, which", "tokens": [50898, 823, 321, 727, 483, 1570, 361, 46737, 3542, 2935, 538, 5662, 264, 3321, 44106, 11, 597, 51132], "temperature": 0.0, "avg_logprob": -0.12337243766115423, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.00032502738758921623}, {"id": 550, "seek": 233702, "start": 2352.38, "end": 2356.1, "text": " is often called the stiffness constant by the way.", "tokens": [51132, 307, 2049, 1219, 264, 37759, 5754, 538, 264, 636, 13, 51318], "temperature": 0.0, "avg_logprob": -0.12337243766115423, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.00032502738758921623}, {"id": 551, "seek": 233702, "start": 2356.1, "end": 2361.38, "text": " So here I've set up a little test where it has a value of 1000, and if I change the", "tokens": [51318, 407, 510, 286, 600, 992, 493, 257, 707, 1500, 689, 309, 575, 257, 2158, 295, 9714, 11, 293, 498, 286, 1319, 264, 51582], "temperature": 0.0, "avg_logprob": -0.12337243766115423, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.00032502738758921623}, {"id": 552, "seek": 233702, "start": 2361.38, "end": 2366.82, "text": " density now, we can see that it does settle down a lot more quickly.", "tokens": [51582, 10305, 586, 11, 321, 393, 536, 300, 309, 775, 11852, 760, 257, 688, 544, 2661, 13, 51854], "temperature": 0.0, "avg_logprob": -0.12337243766115423, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.00032502738758921623}, {"id": 553, "seek": 236682, "start": 2366.82, "end": 2370.78, "text": " But that doesn't come for free though, because the greater the forces in our fluid are, the", "tokens": [50364, 583, 300, 1177, 380, 808, 337, 1737, 1673, 11, 570, 264, 5044, 264, 5874, 294, 527, 9113, 366, 11, 264, 50562], "temperature": 0.0, "avg_logprob": -0.11605889344018352, "compression_ratio": 1.6369863013698631, "no_speech_prob": 0.00010888299584621564}, {"id": 554, "seek": 236682, "start": 2370.78, "end": 2376.34, "text": " more simulation steps we need to run per frame to avoid things devolving into chaos.", "tokens": [50562, 544, 16575, 4439, 321, 643, 281, 1190, 680, 3920, 281, 5042, 721, 1905, 401, 798, 666, 14158, 13, 50840], "temperature": 0.0, "avg_logprob": -0.11605889344018352, "compression_ratio": 1.6369863013698631, "no_speech_prob": 0.00010888299584621564}, {"id": 555, "seek": 236682, "start": 2376.34, "end": 2380.6000000000004, "text": " For example, if I just lower the number of steps here slightly, we can see that already", "tokens": [50840, 1171, 1365, 11, 498, 286, 445, 3126, 264, 1230, 295, 4439, 510, 4748, 11, 321, 393, 536, 300, 1217, 51053], "temperature": 0.0, "avg_logprob": -0.11605889344018352, "compression_ratio": 1.6369863013698631, "no_speech_prob": 0.00010888299584621564}, {"id": 556, "seek": 236682, "start": 2380.6000000000004, "end": 2384.2200000000003, "text": " we're on the brink of pandemonium.", "tokens": [51053, 321, 434, 322, 264, 738, 475, 295, 4565, 36228, 2197, 13, 51234], "temperature": 0.0, "avg_logprob": -0.11605889344018352, "compression_ratio": 1.6369863013698631, "no_speech_prob": 0.00010888299584621564}, {"id": 557, "seek": 236682, "start": 2384.2200000000003, "end": 2390.34, "text": " Anyway, I'm sure we'll learn about ways to overcome, or at least improve this problem", "tokens": [51234, 5684, 11, 286, 478, 988, 321, 603, 1466, 466, 2098, 281, 10473, 11, 420, 412, 1935, 3470, 341, 1154, 51540], "temperature": 0.0, "avg_logprob": -0.11605889344018352, "compression_ratio": 1.6369863013698631, "no_speech_prob": 0.00010888299584621564}, {"id": 558, "seek": 236682, "start": 2390.34, "end": 2395.1400000000003, "text": " in the future, but for right now what I'd like to do is finally convert the whole simulation", "tokens": [51540, 294, 264, 2027, 11, 457, 337, 558, 586, 437, 286, 1116, 411, 281, 360, 307, 2721, 7620, 264, 1379, 16575, 51780], "temperature": 0.0, "avg_logprob": -0.11605889344018352, "compression_ratio": 1.6369863013698631, "no_speech_prob": 0.00010888299584621564}, {"id": 559, "seek": 239514, "start": 2395.14, "end": 2400.06, "text": " to a computer shader, so that we can run it on the GPU, which excels at doing loads", "tokens": [50364, 281, 257, 3820, 5744, 260, 11, 370, 300, 321, 393, 1190, 309, 322, 264, 18407, 11, 597, 1624, 1625, 412, 884, 12668, 50610], "temperature": 0.0, "avg_logprob": -0.1838733128138951, "compression_ratio": 1.3975903614457832, "no_speech_prob": 0.10076892375946045}, {"id": 560, "seek": 239514, "start": 2400.06, "end": 2406.2599999999998, "text": " of tiny tasks in parallel, which should be a perfect fit for our particle calculations.", "tokens": [50610, 295, 5870, 9608, 294, 8952, 11, 597, 820, 312, 257, 2176, 3318, 337, 527, 12359, 20448, 13, 50920], "temperature": 0.0, "avg_logprob": -0.1838733128138951, "compression_ratio": 1.3975903614457832, "no_speech_prob": 0.10076892375946045}, {"id": 561, "seek": 239514, "start": 2406.2599999999998, "end": 2409.18, "text": " I doubt that'll take very long, so I'll see you in a minute.", "tokens": [50920, 286, 6385, 300, 603, 747, 588, 938, 11, 370, 286, 603, 536, 291, 294, 257, 3456, 13, 51066], "temperature": 0.0, "avg_logprob": -0.1838733128138951, "compression_ratio": 1.3975903614457832, "no_speech_prob": 0.10076892375946045}, {"id": 562, "seek": 242514, "start": 2425.14, "end": 2453.1, "text": " Ok, I kept finding new and creative ways to mess everything up, but this finally seems", "tokens": [50364, 3477, 11, 286, 4305, 5006, 777, 293, 5880, 2098, 281, 2082, 1203, 493, 11, 457, 341, 2721, 2544, 51762], "temperature": 0.0, "avg_logprob": -0.13682818412780762, "compression_ratio": 1.0617283950617284, "no_speech_prob": 0.05492706969380379}, {"id": 563, "seek": 245310, "start": 2453.1, "end": 2456.22, "text": " to be running properly in a computer shader.", "tokens": [50364, 281, 312, 2614, 6108, 294, 257, 3820, 5744, 260, 13, 50520], "temperature": 0.0, "avg_logprob": -0.16677044119153703, "compression_ratio": 1.5912162162162162, "no_speech_prob": 0.5723583698272705}, {"id": 564, "seek": 245310, "start": 2456.22, "end": 2459.94, "text": " I'll still need to test the performance with more particles of course, but just glancing", "tokens": [50520, 286, 603, 920, 643, 281, 1500, 264, 3389, 365, 544, 10007, 295, 1164, 11, 457, 445, 1563, 8779, 50706], "temperature": 0.0, "avg_logprob": -0.16677044119153703, "compression_ratio": 1.5912162162162162, "no_speech_prob": 0.5723583698272705}, {"id": 565, "seek": 245310, "start": 2459.94, "end": 2466.18, "text": " at the FPS counter looks promising so far, hovering at around 500 frames per second.", "tokens": [50706, 412, 264, 26429, 5682, 1542, 20257, 370, 1400, 11, 44923, 412, 926, 5923, 12083, 680, 1150, 13, 51018], "temperature": 0.0, "avg_logprob": -0.16677044119153703, "compression_ratio": 1.5912162162162162, "no_speech_prob": 0.5723583698272705}, {"id": 566, "seek": 245310, "start": 2466.18, "end": 2471.5, "text": " By far the trickiest part was translating just one line of code, the array.sort from our", "tokens": [51018, 3146, 1400, 264, 4282, 6495, 644, 390, 35030, 445, 472, 1622, 295, 3089, 11, 264, 10225, 13, 82, 477, 490, 527, 51284], "temperature": 0.0, "avg_logprob": -0.16677044119153703, "compression_ratio": 1.5912162162162162, "no_speech_prob": 0.5723583698272705}, {"id": 567, "seek": 245310, "start": 2471.5, "end": 2473.14, "text": " neighbourhood search.", "tokens": [51284, 30471, 3164, 13, 51366], "temperature": 0.0, "avg_logprob": -0.16677044119153703, "compression_ratio": 1.5912162162162162, "no_speech_prob": 0.5723583698272705}, {"id": 568, "seek": 245310, "start": 2473.14, "end": 2477.38, "text": " I ended up spending quite a while trying to figure out how to implement a parallel sorting", "tokens": [51366, 286, 4590, 493, 6434, 1596, 257, 1339, 1382, 281, 2573, 484, 577, 281, 4445, 257, 8952, 32411, 51578], "temperature": 0.0, "avg_logprob": -0.16677044119153703, "compression_ratio": 1.5912162162162162, "no_speech_prob": 0.5723583698272705}, {"id": 569, "seek": 245310, "start": 2477.38, "end": 2481.42, "text": " algorithm called bitonic merge sort to replace it.", "tokens": [51578, 9284, 1219, 857, 11630, 22183, 1333, 281, 7406, 309, 13, 51780], "temperature": 0.0, "avg_logprob": -0.16677044119153703, "compression_ratio": 1.5912162162162162, "no_speech_prob": 0.5723583698272705}, {"id": 570, "seek": 248142, "start": 2481.42, "end": 2486.14, "text": " In particular, I was trying to generate this pattern of lines, and generalize it for any", "tokens": [50364, 682, 1729, 11, 286, 390, 1382, 281, 8460, 341, 5102, 295, 3876, 11, 293, 2674, 1125, 309, 337, 604, 50600], "temperature": 0.0, "avg_logprob": -0.1289981292174743, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.08753136545419693}, {"id": 571, "seek": 248142, "start": 2486.14, "end": 2487.86, "text": " number of inputs.", "tokens": [50600, 1230, 295, 15743, 13, 50686], "temperature": 0.0, "avg_logprob": -0.1289981292174743, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.08753136545419693}, {"id": 572, "seek": 248142, "start": 2487.86, "end": 2493.5, "text": " The inputs here are represented by the horizontal lines, and we have 16 of them in this case,", "tokens": [50686, 440, 15743, 510, 366, 10379, 538, 264, 12750, 3876, 11, 293, 321, 362, 3165, 295, 552, 294, 341, 1389, 11, 50968], "temperature": 0.0, "avg_logprob": -0.1289981292174743, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.08753136545419693}, {"id": 573, "seek": 248142, "start": 2493.5, "end": 2496.46, "text": " meaning that this network can sort 16 values.", "tokens": [50968, 3620, 300, 341, 3209, 393, 1333, 3165, 4190, 13, 51116], "temperature": 0.0, "avg_logprob": -0.1289981292174743, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.08753136545419693}, {"id": 574, "seek": 248142, "start": 2496.46, "end": 2502.1, "text": " Let's actually assign a random value to each input, so we can see how this goes.", "tokens": [51116, 961, 311, 767, 6269, 257, 4974, 2158, 281, 1184, 4846, 11, 370, 321, 393, 536, 577, 341, 1709, 13, 51398], "temperature": 0.0, "avg_logprob": -0.1289981292174743, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.08753136545419693}, {"id": 575, "seek": 248142, "start": 2502.1, "end": 2507.38, "text": " Then each of these little vertical lines represents a pair of inputs that we're going to compare,", "tokens": [51398, 1396, 1184, 295, 613, 707, 9429, 3876, 8855, 257, 6119, 295, 15743, 300, 321, 434, 516, 281, 6794, 11, 51662], "temperature": 0.0, "avg_logprob": -0.1289981292174743, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.08753136545419693}, {"id": 576, "seek": 248142, "start": 2507.38, "end": 2509.82, "text": " and potentially swap around.", "tokens": [51662, 293, 7263, 18135, 926, 13, 51784], "temperature": 0.0, "avg_logprob": -0.1289981292174743, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.08753136545419693}, {"id": 577, "seek": 250982, "start": 2509.82, "end": 2514.1400000000003, "text": " So to start with, we're going to look at each of the 8 pairs that we have over here,", "tokens": [50364, 407, 281, 722, 365, 11, 321, 434, 516, 281, 574, 412, 1184, 295, 264, 1649, 15494, 300, 321, 362, 670, 510, 11, 50580], "temperature": 0.0, "avg_logprob": -0.11265322188256492, "compression_ratio": 1.8550185873605949, "no_speech_prob": 0.00014425793779082596}, {"id": 578, "seek": 250982, "start": 2514.1400000000003, "end": 2518.94, "text": " and let's say we want to sort from high to low, so in the first pair we have 5 on top", "tokens": [50580, 293, 718, 311, 584, 321, 528, 281, 1333, 490, 1090, 281, 2295, 11, 370, 294, 264, 700, 6119, 321, 362, 1025, 322, 1192, 50820], "temperature": 0.0, "avg_logprob": -0.11265322188256492, "compression_ratio": 1.8550185873605949, "no_speech_prob": 0.00014425793779082596}, {"id": 579, "seek": 250982, "start": 2518.94, "end": 2523.86, "text": " and 3 on the bottom, which we're happy with, so that can stay unchanged.", "tokens": [50820, 293, 805, 322, 264, 2767, 11, 597, 321, 434, 2055, 365, 11, 370, 300, 393, 1754, 44553, 13, 51066], "temperature": 0.0, "avg_logprob": -0.11265322188256492, "compression_ratio": 1.8550185873605949, "no_speech_prob": 0.00014425793779082596}, {"id": 580, "seek": 250982, "start": 2523.86, "end": 2528.86, "text": " In the next pair though, we can see 7 on top and 8 on the bottom, so the bottom is a higher", "tokens": [51066, 682, 264, 958, 6119, 1673, 11, 321, 393, 536, 1614, 322, 1192, 293, 1649, 322, 264, 2767, 11, 370, 264, 2767, 307, 257, 2946, 51316], "temperature": 0.0, "avg_logprob": -0.11265322188256492, "compression_ratio": 1.8550185873605949, "no_speech_prob": 0.00014425793779082596}, {"id": 581, "seek": 250982, "start": 2528.86, "end": 2533.1400000000003, "text": " number which is not ok, and we'll need to swap them around.", "tokens": [51316, 1230, 597, 307, 406, 3133, 11, 293, 321, 603, 643, 281, 18135, 552, 926, 13, 51530], "temperature": 0.0, "avg_logprob": -0.11265322188256492, "compression_ratio": 1.8550185873605949, "no_speech_prob": 0.00014425793779082596}, {"id": 582, "seek": 250982, "start": 2533.1400000000003, "end": 2537.38, "text": " So we can look at all these pairs in parallel, figure out which need to be swapped, and then", "tokens": [51530, 407, 321, 393, 574, 412, 439, 613, 15494, 294, 8952, 11, 2573, 484, 597, 643, 281, 312, 50011, 11, 293, 550, 51742], "temperature": 0.0, "avg_logprob": -0.11265322188256492, "compression_ratio": 1.8550185873605949, "no_speech_prob": 0.00014425793779082596}, {"id": 583, "seek": 250982, "start": 2537.38, "end": 2538.88, "text": " swap them.", "tokens": [51742, 18135, 552, 13, 51817], "temperature": 0.0, "avg_logprob": -0.11265322188256492, "compression_ratio": 1.8550185873605949, "no_speech_prob": 0.00014425793779082596}, {"id": 584, "seek": 253888, "start": 2538.88, "end": 2542.96, "text": " Of course this alone is unlikely to sort the list, so once that's done we'll need", "tokens": [50364, 2720, 1164, 341, 3312, 307, 17518, 281, 1333, 264, 1329, 11, 370, 1564, 300, 311, 1096, 321, 603, 643, 50568], "temperature": 0.0, "avg_logprob": -0.12369538336685024, "compression_ratio": 1.6388888888888888, "no_speech_prob": 0.00013341625162865967}, {"id": 585, "seek": 253888, "start": 2542.96, "end": 2545.48, "text": " to continue to the next stage.", "tokens": [50568, 281, 2354, 281, 264, 958, 3233, 13, 50694], "temperature": 0.0, "avg_logprob": -0.12369538336685024, "compression_ratio": 1.6388888888888888, "no_speech_prob": 0.00013341625162865967}, {"id": 586, "seek": 253888, "start": 2545.48, "end": 2550.6, "text": " Here the pairs are arranged a little differently, but the operation is still exactly the same.", "tokens": [50694, 1692, 264, 15494, 366, 18721, 257, 707, 7614, 11, 457, 264, 6916, 307, 920, 2293, 264, 912, 13, 50950], "temperature": 0.0, "avg_logprob": -0.12369538336685024, "compression_ratio": 1.6388888888888888, "no_speech_prob": 0.00013341625162865967}, {"id": 587, "seek": 253888, "start": 2550.6, "end": 2555.52, "text": " We can see this first pair has 5 on top, 7 on the bottom, so it will need to swap, as", "tokens": [50950, 492, 393, 536, 341, 700, 6119, 575, 1025, 322, 1192, 11, 1614, 322, 264, 2767, 11, 370, 309, 486, 643, 281, 18135, 11, 382, 51196], "temperature": 0.0, "avg_logprob": -0.12369538336685024, "compression_ratio": 1.6388888888888888, "no_speech_prob": 0.00013341625162865967}, {"id": 588, "seek": 253888, "start": 2555.52, "end": 2566.1800000000003, "text": " will this pair with 3 on top and 8 on the bottom, and so on.", "tokens": [51196, 486, 341, 6119, 365, 805, 322, 1192, 293, 1649, 322, 264, 2767, 11, 293, 370, 322, 13, 51729], "temperature": 0.0, "avg_logprob": -0.12369538336685024, "compression_ratio": 1.6388888888888888, "no_speech_prob": 0.00013341625162865967}, {"id": 589, "seek": 256618, "start": 2566.18, "end": 2570.3399999999997, "text": " This pattern has been carefully devised by some clever person, such that following it", "tokens": [50364, 639, 5102, 575, 668, 7500, 1905, 2640, 538, 512, 13494, 954, 11, 1270, 300, 3480, 309, 50572], "temperature": 0.0, "avg_logprob": -0.12790386096851245, "compression_ratio": 1.6416382252559727, "no_speech_prob": 0.03307504951953888}, {"id": 590, "seek": 256618, "start": 2570.3399999999997, "end": 2577.1, "text": " will do all the comparisons required to guarantee that the result is fully sorted by the end.", "tokens": [50572, 486, 360, 439, 264, 33157, 4739, 281, 10815, 300, 264, 1874, 307, 4498, 25462, 538, 264, 917, 13, 50910], "temperature": 0.0, "avg_logprob": -0.12790386096851245, "compression_ratio": 1.6416382252559727, "no_speech_prob": 0.03307504951953888}, {"id": 591, "seek": 256618, "start": 2577.1, "end": 2580.8599999999997, "text": " For anyone interested, I'll quickly show the implementation I came up with, so this", "tokens": [50910, 1171, 2878, 3102, 11, 286, 603, 2661, 855, 264, 11420, 286, 1361, 493, 365, 11, 370, 341, 51098], "temperature": 0.0, "avg_logprob": -0.12790386096851245, "compression_ratio": 1.6416382252559727, "no_speech_prob": 0.03307504951953888}, {"id": 592, "seek": 256618, "start": 2580.8599999999997, "end": 2586.02, "text": " part runs on the CPU and is responsible for simply looping through each of those patterns,", "tokens": [51098, 644, 6676, 322, 264, 13199, 293, 307, 6250, 337, 2935, 6367, 278, 807, 1184, 295, 729, 8294, 11, 51356], "temperature": 0.0, "avg_logprob": -0.12790386096851245, "compression_ratio": 1.6416382252559727, "no_speech_prob": 0.03307504951953888}, {"id": 593, "seek": 256618, "start": 2586.02, "end": 2589.2799999999997, "text": " and telling the GPU to sort the pairs.", "tokens": [51356, 293, 3585, 264, 18407, 281, 1333, 264, 15494, 13, 51519], "temperature": 0.0, "avg_logprob": -0.12790386096851245, "compression_ratio": 1.6416382252559727, "no_speech_prob": 0.03307504951953888}, {"id": 594, "seek": 256618, "start": 2589.2799999999997, "end": 2593.22, "text": " And then here's the code that actually does that pairwise sorting, so it starts by just", "tokens": [51519, 400, 550, 510, 311, 264, 3089, 300, 767, 775, 300, 6119, 3711, 32411, 11, 370, 309, 3719, 538, 445, 51716], "temperature": 0.0, "avg_logprob": -0.12790386096851245, "compression_ratio": 1.6416382252559727, "no_speech_prob": 0.03307504951953888}, {"id": 595, "seek": 259322, "start": 2593.22, "end": 2596.7, "text": " figuring out which pair of numbers it's actually looking at, and then it compares", "tokens": [50364, 15213, 484, 597, 6119, 295, 3547, 309, 311, 767, 1237, 412, 11, 293, 550, 309, 38334, 50538], "temperature": 0.0, "avg_logprob": -0.16341048139866773, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.005384644493460655}, {"id": 596, "seek": 259322, "start": 2596.7, "end": 2601.2999999999997, "text": " them to see if they need to be swapped, and if they do, it of course swaps them.", "tokens": [50538, 552, 281, 536, 498, 436, 643, 281, 312, 50011, 11, 293, 498, 436, 360, 11, 309, 295, 1164, 1693, 2382, 552, 13, 50768], "temperature": 0.0, "avg_logprob": -0.16341048139866773, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.005384644493460655}, {"id": 597, "seek": 259322, "start": 2601.2999999999997, "end": 2606.2599999999998, "text": " Alright, I've been doing some testing with different amounts of particles, so here is", "tokens": [50768, 2798, 11, 286, 600, 668, 884, 512, 4997, 365, 819, 11663, 295, 10007, 11, 370, 510, 307, 51016], "temperature": 0.0, "avg_logprob": -0.16341048139866773, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.005384644493460655}, {"id": 598, "seek": 259322, "start": 2606.2599999999998, "end": 2610.9399999999996, "text": " 100 particles for example, and I think it's kind of cute watching these little droplets", "tokens": [51016, 2319, 10007, 337, 1365, 11, 293, 286, 519, 309, 311, 733, 295, 4052, 1976, 613, 707, 41573, 51250], "temperature": 0.0, "avg_logprob": -0.16341048139866773, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.005384644493460655}, {"id": 599, "seek": 259322, "start": 2610.9399999999996, "end": 2612.62, "text": " wobble about.", "tokens": [51250, 33775, 638, 466, 13, 51334], "temperature": 0.0, "avg_logprob": -0.16341048139866773, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.005384644493460655}, {"id": 600, "seek": 259322, "start": 2612.62, "end": 2618.2599999999998, "text": " Then after that I tried 100,000 particles, but my computer was not happy about that,", "tokens": [51334, 1396, 934, 300, 286, 3031, 2319, 11, 1360, 10007, 11, 457, 452, 3820, 390, 406, 2055, 466, 300, 11, 51616], "temperature": 0.0, "avg_logprob": -0.16341048139866773, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.005384644493460655}, {"id": 601, "seek": 259322, "start": 2618.2599999999998, "end": 2621.8599999999997, "text": " so there's definitely a lot of room left for optimization.", "tokens": [51616, 370, 456, 311, 2138, 257, 688, 295, 1808, 1411, 337, 19618, 13, 51796], "temperature": 0.0, "avg_logprob": -0.16341048139866773, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.005384644493460655}, {"id": 602, "seek": 262186, "start": 2622.86, "end": 2627.42, "text": " Here's a test with about 40,000 particles though, which seems to be running okay, although", "tokens": [50414, 1692, 311, 257, 1500, 365, 466, 3356, 11, 1360, 10007, 1673, 11, 597, 2544, 281, 312, 2614, 1392, 11, 4878, 50642], "temperature": 0.0, "avg_logprob": -0.15228700637817383, "compression_ratio": 1.6205673758865249, "no_speech_prob": 0.00019716321548912674}, {"id": 603, "seek": 262186, "start": 2627.42, "end": 2630.94, "text": " I'll have to fine tune the settings of course, because at the moment there are some weird", "tokens": [50642, 286, 603, 362, 281, 2489, 10864, 264, 6257, 295, 1164, 11, 570, 412, 264, 1623, 456, 366, 512, 3657, 50818], "temperature": 0.0, "avg_logprob": -0.15228700637817383, "compression_ratio": 1.6205673758865249, "no_speech_prob": 0.00019716321548912674}, {"id": 604, "seek": 262186, "start": 2630.94, "end": 2634.7000000000003, "text": " tendrils shooting out of the liquid, and I really don't know why.", "tokens": [50818, 3928, 48789, 5942, 484, 295, 264, 6553, 11, 293, 286, 534, 500, 380, 458, 983, 13, 51006], "temperature": 0.0, "avg_logprob": -0.15228700637817383, "compression_ratio": 1.6205673758865249, "no_speech_prob": 0.00019716321548912674}, {"id": 605, "seek": 262186, "start": 2634.7000000000003, "end": 2639.42, "text": " Or perhaps we could call this a speculative simulation of how liquids might behave on an", "tokens": [51006, 1610, 4317, 321, 727, 818, 341, 257, 49415, 16575, 295, 577, 38960, 1062, 15158, 322, 364, 51242], "temperature": 0.0, "avg_logprob": -0.15228700637817383, "compression_ratio": 1.6205673758865249, "no_speech_prob": 0.00019716321548912674}, {"id": 606, "seek": 262186, "start": 2639.42, "end": 2641.26, "text": " alien planet.", "tokens": [51242, 12319, 5054, 13, 51334], "temperature": 0.0, "avg_logprob": -0.15228700637817383, "compression_ratio": 1.6205673758865249, "no_speech_prob": 0.00019716321548912674}, {"id": 607, "seek": 262186, "start": 2641.26, "end": 2644.6200000000003, "text": " The settings are definitely quite finicky at the moment though, so that's something", "tokens": [51334, 440, 6257, 366, 2138, 1596, 962, 20539, 412, 264, 1623, 1673, 11, 370, 300, 311, 746, 51502], "temperature": 0.0, "avg_logprob": -0.15228700637817383, "compression_ratio": 1.6205673758865249, "no_speech_prob": 0.00019716321548912674}, {"id": 608, "seek": 262186, "start": 2644.6200000000003, "end": 2648.06, "text": " else I want to improve.", "tokens": [51502, 1646, 286, 528, 281, 3470, 13, 51674], "temperature": 0.0, "avg_logprob": -0.15228700637817383, "compression_ratio": 1.6205673758865249, "no_speech_prob": 0.00019716321548912674}, {"id": 609, "seek": 264806, "start": 2648.06, "end": 2651.7799999999997, "text": " Here's another little test I've set up by the way, and this one has an obstacle over", "tokens": [50364, 1692, 311, 1071, 707, 1500, 286, 600, 992, 493, 538, 264, 636, 11, 293, 341, 472, 575, 364, 23112, 670, 50550], "temperature": 0.0, "avg_logprob": -0.11181287529054752, "compression_ratio": 1.763157894736842, "no_speech_prob": 0.005219153594225645}, {"id": 610, "seek": 264806, "start": 2651.7799999999997, "end": 2656.22, "text": " here with a gap beneath it, because I just want to see if this simulation is able to", "tokens": [50550, 510, 365, 257, 7417, 17149, 309, 11, 570, 286, 445, 528, 281, 536, 498, 341, 16575, 307, 1075, 281, 50772], "temperature": 0.0, "avg_logprob": -0.11181287529054752, "compression_ratio": 1.763157894736842, "no_speech_prob": 0.005219153594225645}, {"id": 611, "seek": 264806, "start": 2656.22, "end": 2662.18, "text": " keep the height of the liquid the same on both sides.", "tokens": [50772, 1066, 264, 6681, 295, 264, 6553, 264, 912, 322, 1293, 4881, 13, 51070], "temperature": 0.0, "avg_logprob": -0.11181287529054752, "compression_ratio": 1.763157894736842, "no_speech_prob": 0.005219153594225645}, {"id": 612, "seek": 264806, "start": 2662.18, "end": 2666.7, "text": " So I'm just going to start bucketing some of this liquid over to the other end here,", "tokens": [51070, 407, 286, 478, 445, 516, 281, 722, 13058, 278, 512, 295, 341, 6553, 670, 281, 264, 661, 917, 510, 11, 51296], "temperature": 0.0, "avg_logprob": -0.11181287529054752, "compression_ratio": 1.763157894736842, "no_speech_prob": 0.005219153594225645}, {"id": 613, "seek": 264806, "start": 2666.7, "end": 2671.94, "text": " and then let's grab another blob, and another, and then let's just wait a bit for this to", "tokens": [51296, 293, 550, 718, 311, 4444, 1071, 46115, 11, 293, 1071, 11, 293, 550, 718, 311, 445, 1699, 257, 857, 337, 341, 281, 51558], "temperature": 0.0, "avg_logprob": -0.11181287529054752, "compression_ratio": 1.763157894736842, "no_speech_prob": 0.005219153594225645}, {"id": 614, "seek": 264806, "start": 2671.94, "end": 2676.14, "text": " settle down, but already we can see the height gradually leveling out.", "tokens": [51558, 11852, 760, 11, 457, 1217, 321, 393, 536, 264, 6681, 13145, 40617, 484, 13, 51768], "temperature": 0.0, "avg_logprob": -0.11181287529054752, "compression_ratio": 1.763157894736842, "no_speech_prob": 0.005219153594225645}, {"id": 615, "seek": 267614, "start": 2676.14, "end": 2680.3799999999997, "text": " So even though our simulation is far from being super realistic, it's nice to say at", "tokens": [50364, 407, 754, 1673, 527, 16575, 307, 1400, 490, 885, 1687, 12465, 11, 309, 311, 1481, 281, 584, 412, 50576], "temperature": 0.0, "avg_logprob": -0.1616484600564708, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.00020662312454078346}, {"id": 616, "seek": 267614, "start": 2680.3799999999997, "end": 2683.5, "text": " least that it's not entirely unrealistic either.", "tokens": [50576, 1935, 300, 309, 311, 406, 7696, 42867, 2139, 13, 50732], "temperature": 0.0, "avg_logprob": -0.1616484600564708, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.00020662312454078346}, {"id": 617, "seek": 267614, "start": 2683.5, "end": 2688.3399999999997, "text": " Okay, now as always there's so much more I still want to do, but to end with for today,", "tokens": [50732, 1033, 11, 586, 382, 1009, 456, 311, 370, 709, 544, 286, 920, 528, 281, 360, 11, 457, 281, 917, 365, 337, 965, 11, 50974], "temperature": 0.0, "avg_logprob": -0.1616484600564708, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.00020662312454078346}, {"id": 618, "seek": 267614, "start": 2688.3399999999997, "end": 2692.2999999999997, "text": " let's see if we can get this working in the third dimension.", "tokens": [50974, 718, 311, 536, 498, 321, 393, 483, 341, 1364, 294, 264, 2636, 10139, 13, 51172], "temperature": 0.0, "avg_logprob": -0.1616484600564708, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.00020662312454078346}, {"id": 619, "seek": 267614, "start": 2692.2999999999997, "end": 2697.7799999999997, "text": " This basically just means replacing a bunch of float 2s with float 3s in the compute shader,", "tokens": [51172, 639, 1936, 445, 1355, 19139, 257, 3840, 295, 15706, 568, 82, 365, 15706, 805, 82, 294, 264, 14722, 5744, 260, 11, 51446], "temperature": 0.0, "avg_logprob": -0.1616484600564708, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.00020662312454078346}, {"id": 620, "seek": 267614, "start": 2697.7799999999997, "end": 2702.46, "text": " as well as updating the scaling factors of the various smoothing functions and their", "tokens": [51446, 382, 731, 382, 25113, 264, 21589, 6771, 295, 264, 3683, 899, 6259, 571, 6828, 293, 641, 51680], "temperature": 0.0, "avg_logprob": -0.1616484600564708, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.00020662312454078346}, {"id": 621, "seek": 270246, "start": 2703.2200000000003, "end": 2707.42, "text": " and making sure our neighborhood search is aware of this brand new dimension as well,", "tokens": [50402, 293, 1455, 988, 527, 7630, 3164, 307, 3650, 295, 341, 3360, 777, 10139, 382, 731, 11, 50612], "temperature": 0.0, "avg_logprob": -0.14408114462187796, "compression_ratio": 1.688976377952756, "no_speech_prob": 0.03209272027015686}, {"id": 622, "seek": 270246, "start": 2707.42, "end": 2708.42, "text": " of course.", "tokens": [50612, 295, 1164, 13, 50662], "temperature": 0.0, "avg_logprob": -0.14408114462187796, "compression_ratio": 1.688976377952756, "no_speech_prob": 0.03209272027015686}, {"id": 623, "seek": 270246, "start": 2708.42, "end": 2713.82, "text": " I've also updated the collision function to work in 3D, and I tweaked it to account", "tokens": [50662, 286, 600, 611, 10588, 264, 24644, 2445, 281, 589, 294, 805, 35, 11, 293, 286, 6986, 7301, 309, 281, 2696, 50932], "temperature": 0.0, "avg_logprob": -0.14408114462187796, "compression_ratio": 1.688976377952756, "no_speech_prob": 0.03209272027015686}, {"id": 624, "seek": 270246, "start": 2713.82, "end": 2718.94, "text": " for the bounding box being moved or rotated as well as scaled, simply by transforming", "tokens": [50932, 337, 264, 5472, 278, 2424, 885, 4259, 420, 42146, 382, 731, 382, 36039, 11, 2935, 538, 27210, 51188], "temperature": 0.0, "avg_logprob": -0.14408114462187796, "compression_ratio": 1.688976377952756, "no_speech_prob": 0.03209272027015686}, {"id": 625, "seek": 270246, "start": 2718.94, "end": 2724.7400000000002, "text": " the points and velocities to its local coordinate system, then resolving those the same as before,", "tokens": [51188, 264, 2793, 293, 7806, 1088, 281, 1080, 2654, 15670, 1185, 11, 550, 49940, 729, 264, 912, 382, 949, 11, 51478], "temperature": 0.0, "avg_logprob": -0.14408114462187796, "compression_ratio": 1.688976377952756, "no_speech_prob": 0.03209272027015686}, {"id": 626, "seek": 270246, "start": 2724.7400000000002, "end": 2730.2200000000003, "text": " and then finally transforming them back into world coordinates.", "tokens": [51478, 293, 550, 2721, 27210, 552, 646, 666, 1002, 21056, 13, 51752], "temperature": 0.0, "avg_logprob": -0.14408114462187796, "compression_ratio": 1.688976377952756, "no_speech_prob": 0.03209272027015686}, {"id": 627, "seek": 273022, "start": 2730.22, "end": 2734.58, "text": " My first attempt at running this did not go particularly well, but after some trial", "tokens": [50364, 1222, 700, 5217, 412, 2614, 341, 630, 406, 352, 4098, 731, 11, 457, 934, 512, 7308, 50582], "temperature": 0.0, "avg_logprob": -0.14160842161912185, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.0011513547506183386}, {"id": 628, "seek": 273022, "start": 2734.58, "end": 2739.1, "text": " and error with the settings I managed to get this rather goopy looking result, and with", "tokens": [50582, 293, 6713, 365, 264, 6257, 286, 6453, 281, 483, 341, 2831, 352, 19680, 1237, 1874, 11, 293, 365, 50808], "temperature": 0.0, "avg_logprob": -0.14160842161912185, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.0011513547506183386}, {"id": 629, "seek": 273022, "start": 2739.1, "end": 2742.74, "text": " a few more tweaks from there I was finally able to get something that I was reasonably", "tokens": [50808, 257, 1326, 544, 46664, 490, 456, 286, 390, 2721, 1075, 281, 483, 746, 300, 286, 390, 23551, 50990], "temperature": 0.0, "avg_logprob": -0.14160842161912185, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.0011513547506183386}, {"id": 630, "seek": 273022, "start": 2742.74, "end": 2748.3399999999997, "text": " happy with.", "tokens": [50990, 2055, 365, 13, 51270], "temperature": 0.0, "avg_logprob": -0.14160842161912185, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.0011513547506183386}, {"id": 631, "seek": 273022, "start": 2748.3399999999997, "end": 2752.58, "text": " So let's just play around with this a bit, I'm going to try squeezing it together,", "tokens": [51270, 407, 718, 311, 445, 862, 926, 365, 341, 257, 857, 11, 286, 478, 516, 281, 853, 36645, 309, 1214, 11, 51482], "temperature": 0.0, "avg_logprob": -0.14160842161912185, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.0011513547506183386}, {"id": 632, "seek": 273022, "start": 2752.58, "end": 2756.18, "text": " and what's nice about how we implemented the neighborhood search stuff, is that we", "tokens": [51482, 293, 437, 311, 1481, 466, 577, 321, 12270, 264, 7630, 3164, 1507, 11, 307, 300, 321, 51662], "temperature": 0.0, "avg_logprob": -0.14160842161912185, "compression_ratio": 1.620817843866171, "no_speech_prob": 0.0011513547506183386}, {"id": 633, "seek": 275618, "start": 2756.18, "end": 2760.3799999999997, "text": " aren't constrained to any predetermined bounds, so we can stretch this out however much we", "tokens": [50364, 3212, 380, 38901, 281, 604, 3852, 35344, 2001, 29905, 11, 370, 321, 393, 5985, 341, 484, 4461, 709, 321, 50574], "temperature": 0.0, "avg_logprob": -0.18611878481778232, "compression_ratio": 1.4102564102564104, "no_speech_prob": 0.003943147603422403}, {"id": 634, "seek": 275618, "start": 2760.3799999999997, "end": 2769.2599999999998, "text": " want as well, and it should still work.", "tokens": [50574, 528, 382, 731, 11, 293, 309, 820, 920, 589, 13, 51018], "temperature": 0.0, "avg_logprob": -0.18611878481778232, "compression_ratio": 1.4102564102564104, "no_speech_prob": 0.003943147603422403}, {"id": 635, "seek": 275618, "start": 2769.2599999999998, "end": 2772.98, "text": " Those little waves were looking quite nice I think, so let's actually smush this together", "tokens": [51018, 3950, 707, 9417, 645, 1237, 1596, 1481, 286, 519, 11, 370, 718, 311, 767, 899, 1498, 341, 1214, 51204], "temperature": 0.0, "avg_logprob": -0.18611878481778232, "compression_ratio": 1.4102564102564104, "no_speech_prob": 0.003943147603422403}, {"id": 636, "seek": 277298, "start": 2772.98, "end": 2787.14, "text": " again, and then try that out once more.", "tokens": [50364, 797, 11, 293, 550, 853, 300, 484, 1564, 544, 13, 51072], "temperature": 0.0, "avg_logprob": -0.09756961322966076, "compression_ratio": 1.5539906103286385, "no_speech_prob": 0.00228713545948267}, {"id": 637, "seek": 277298, "start": 2787.14, "end": 2791.18, "text": " Now another thing to add to my list of a million things I want to improve is how the", "tokens": [51072, 823, 1071, 551, 281, 909, 281, 452, 1329, 295, 257, 2459, 721, 286, 528, 281, 3470, 307, 577, 264, 51274], "temperature": 0.0, "avg_logprob": -0.09756961322966076, "compression_ratio": 1.5539906103286385, "no_speech_prob": 0.00228713545948267}, {"id": 638, "seek": 277298, "start": 2791.18, "end": 2794.1, "text": " fluid is actually rendered.", "tokens": [51274, 9113, 307, 767, 28748, 13, 51420], "temperature": 0.0, "avg_logprob": -0.09756961322966076, "compression_ratio": 1.5539906103286385, "no_speech_prob": 0.00228713545948267}, {"id": 639, "seek": 277298, "start": 2794.1, "end": 2798.06, "text": " These little balls are good for seeing what's going on of course, but it would be nice to", "tokens": [51420, 1981, 707, 9803, 366, 665, 337, 2577, 437, 311, 516, 322, 295, 1164, 11, 457, 309, 576, 312, 1481, 281, 51618], "temperature": 0.0, "avg_logprob": -0.09756961322966076, "compression_ratio": 1.5539906103286385, "no_speech_prob": 0.00228713545948267}, {"id": 640, "seek": 277298, "start": 2798.06, "end": 2802.62, "text": " make it actually look more fluid like, and I guess some sort of ray matching is probably", "tokens": [51618, 652, 309, 767, 574, 544, 9113, 411, 11, 293, 286, 2041, 512, 1333, 295, 18592, 14324, 307, 1391, 51846], "temperature": 0.0, "avg_logprob": -0.09756961322966076, "compression_ratio": 1.5539906103286385, "no_speech_prob": 0.00228713545948267}, {"id": 641, "seek": 280262, "start": 2802.62, "end": 2809.66, "text": " a good way to approach that, but we'll have to see.", "tokens": [50364, 257, 665, 636, 281, 3109, 300, 11, 457, 321, 603, 362, 281, 536, 13, 50716], "temperature": 0.0, "avg_logprob": -0.14799121574119287, "compression_ratio": 1.6719367588932805, "no_speech_prob": 0.020951561629772186}, {"id": 642, "seek": 280262, "start": 2809.66, "end": 2814.74, "text": " So let me actually make a quick note here of my sort of wish list for this project.", "tokens": [50716, 407, 718, 385, 767, 652, 257, 1702, 3637, 510, 295, 452, 1333, 295, 3172, 1329, 337, 341, 1716, 13, 50970], "temperature": 0.0, "avg_logprob": -0.14799121574119287, "compression_ratio": 1.6719367588932805, "no_speech_prob": 0.020951561629772186}, {"id": 643, "seek": 280262, "start": 2814.74, "end": 2819.94, "text": " I want the simulation to be more stable and performant so that we can have many more particles,", "tokens": [50970, 286, 528, 264, 16575, 281, 312, 544, 8351, 293, 2042, 394, 370, 300, 321, 393, 362, 867, 544, 10007, 11, 51230], "temperature": 0.0, "avg_logprob": -0.14799121574119287, "compression_ratio": 1.6719367588932805, "no_speech_prob": 0.020951561629772186}, {"id": 644, "seek": 280262, "start": 2819.94, "end": 2824.18, "text": " and I'd like the parameters to be less finicky so it's easier to get good results, and also", "tokens": [51230, 293, 286, 1116, 411, 264, 9834, 281, 312, 1570, 962, 20539, 370, 309, 311, 3571, 281, 483, 665, 3542, 11, 293, 611, 51442], "temperature": 0.0, "avg_logprob": -0.14799121574119287, "compression_ratio": 1.6719367588932805, "no_speech_prob": 0.020951561629772186}, {"id": 645, "seek": 280262, "start": 2824.18, "end": 2828.1, "text": " for the particles to behave better along the boundaries, because it looks really odd at", "tokens": [51442, 337, 264, 10007, 281, 15158, 1101, 2051, 264, 13180, 11, 570, 309, 1542, 534, 7401, 412, 51638], "temperature": 0.0, "avg_logprob": -0.14799121574119287, "compression_ratio": 1.6719367588932805, "no_speech_prob": 0.020951561629772186}, {"id": 646, "seek": 280262, "start": 2828.1, "end": 2829.8599999999997, "text": " the moment.", "tokens": [51638, 264, 1623, 13, 51726], "temperature": 0.0, "avg_logprob": -0.14799121574119287, "compression_ratio": 1.6719367588932805, "no_speech_prob": 0.020951561629772186}, {"id": 647, "seek": 282986, "start": 2829.86, "end": 2833.2200000000003, "text": " Another thing that'll be really nice is to be able to do stuff like put little boats", "tokens": [50364, 3996, 551, 300, 603, 312, 534, 1481, 307, 281, 312, 1075, 281, 360, 1507, 411, 829, 707, 17772, 50532], "temperature": 0.0, "avg_logprob": -0.16446551513671875, "compression_ratio": 1.6644518272425248, "no_speech_prob": 0.00497956108301878}, {"id": 648, "seek": 282986, "start": 2833.2200000000003, "end": 2838.02, "text": " or rubber ducks in the water, and just watch them bob about.", "tokens": [50532, 420, 11593, 34468, 294, 264, 1281, 11, 293, 445, 1159, 552, 27292, 466, 13, 50772], "temperature": 0.0, "avg_logprob": -0.16446551513671875, "compression_ratio": 1.6644518272425248, "no_speech_prob": 0.00497956108301878}, {"id": 649, "seek": 282986, "start": 2838.02, "end": 2843.3, "text": " Then finally of course there's the rendering stuff I just mentioned as well.", "tokens": [50772, 1396, 2721, 295, 1164, 456, 311, 264, 22407, 1507, 286, 445, 2835, 382, 731, 13, 51036], "temperature": 0.0, "avg_logprob": -0.16446551513671875, "compression_ratio": 1.6644518272425248, "no_speech_prob": 0.00497956108301878}, {"id": 650, "seek": 282986, "start": 2843.3, "end": 2847.26, "text": " So plenty of work for the future, but until then I hope you've enjoyed following along", "tokens": [51036, 407, 7140, 295, 589, 337, 264, 2027, 11, 457, 1826, 550, 286, 1454, 291, 600, 4626, 3480, 2051, 51234], "temperature": 0.0, "avg_logprob": -0.16446551513671875, "compression_ratio": 1.6644518272425248, "no_speech_prob": 0.00497956108301878}, {"id": 651, "seek": 282986, "start": 2847.26, "end": 2849.2200000000003, "text": " with the process so far.", "tokens": [51234, 365, 264, 1399, 370, 1400, 13, 51332], "temperature": 0.0, "avg_logprob": -0.16446551513671875, "compression_ratio": 1.6644518272425248, "no_speech_prob": 0.00497956108301878}, {"id": 652, "seek": 282986, "start": 2849.2200000000003, "end": 2853.6200000000003, "text": " Okay, that's all for today, let me know if you have any suggestions for this project", "tokens": [51332, 1033, 11, 300, 311, 439, 337, 965, 11, 718, 385, 458, 498, 291, 362, 604, 13396, 337, 341, 1716, 51552], "temperature": 0.0, "avg_logprob": -0.16446551513671875, "compression_ratio": 1.6644518272425248, "no_speech_prob": 0.00497956108301878}, {"id": 653, "seek": 282986, "start": 2853.6200000000003, "end": 2855.7000000000003, "text": " or for anything else you'd like to see.", "tokens": [51552, 420, 337, 1340, 1646, 291, 1116, 411, 281, 536, 13, 51656], "temperature": 0.0, "avg_logprob": -0.16446551513671875, "compression_ratio": 1.6644518272425248, "no_speech_prob": 0.00497956108301878}, {"id": 654, "seek": 282986, "start": 2855.7000000000003, "end": 2858.2200000000003, "text": " Alright, thanks for watching and goodbye.", "tokens": [51656, 2798, 11, 3231, 337, 1976, 293, 12084, 13, 51782], "temperature": 0.0, "avg_logprob": -0.16446551513671875, "compression_ratio": 1.6644518272425248, "no_speech_prob": 0.00497956108301878}], "language": "en"}