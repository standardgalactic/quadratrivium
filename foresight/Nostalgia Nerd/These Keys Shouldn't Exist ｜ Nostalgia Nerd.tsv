start	end	text
0	15560	If you've used MS-DOS in the past, you're probably familiar with this character.
15560	19360	This is the pipe symbol, and it's incredibly useful.
19360	25200	It allows you to pipe or send the output of one program to another program.
25200	30440	This episode is sponsored by Squarespace, more on that later.
30440	36680	If I were to enter type readme.txt into this computer, it would spool out a huge readme
36680	39680	file, giving me no time to read it.
39680	46400	However, if I were to enter type readme.txt pipe more, the output gets sent to the more
46400	52000	command, which handily breaks the document down into screen size chunks.
52000	54840	But there's an issue with this pipe symbol.
54840	61840	And the issue is, well, it doesn't actually exist, not in this context, and what's more,
61840	68280	there are often two apparently identical instances of it on keyboards, neither of which are existing
68280	71200	in the way they're supposed to.
71200	76480	Allow me to explain.
76480	82200	For centuries mankind has been using code to communicate, but it was really the telegraph
82360	88560	which set a standard for a universally understood binary type communication with the International
88560	90240	Telegraph alphabet.
90240	95920	This used five pulses of electricity to encode the letters of the alphabet and various other
95920	101080	figures, so they could be successfully decoded at the opposite end.
101080	106440	Computers also needed character codes, so that data could be sent, processed and stored
106440	108080	in the computer's memory.
108080	113880	The problem was, by 1960, there was at least 29 different code standards being used by
113880	114880	computers.
114880	121760	IBM, for example, even had multiple character codes used across their own systems.
121760	126440	Some standardization was needed, just like the telegraph, although that couldn't be
126440	131640	adapted for computers because if you arranged for signals in binary order, it just produced
131640	133680	a complete mess.
133680	139800	And so, the American Standards Association, the ASA, began the process of character code
139800	148000	standardization on the 4th of August 1960, creating the X3.2 subcommittee for coded character
148000	150800	sets and data format.
150800	155400	By March 1961, an initial code was produced.
155400	161280	This one, 54 characters arranged across 4 columns and 15 rows.
161280	168480	This gives you a maximum of 60 characters, which fits into 6 bits, so it's a 6-bit code.
168480	177160	Going from this example, T is column 3, which is 1-1 in binary, and row 7, which is 0-1-1-1,
177160	181960	giving a binary code of 1-1-0-1-1 for T.
181960	187800	Of course, at this time, punched card was used for entering data, so this would be represented
187800	192960	by 2 punched holes, 1 space, and 3 more punched holes.
192960	200040	This is also why we have NULL at the start of the table, as that leaves all holes unpunished,
200040	207700	binary 0-0-0-0-0-0, and delete at the end of the table, as that punches all holes, removing
207700	212160	any data that was present, binary 1-1-1-1-1.
212160	218600	However, that's not what the binary code for T is actually today, and you'll notice
218600	223560	that a lot of the characters we use today are missing from this table.
223560	226200	The lowercase alphabet for starters.
226200	233520	Therefore, it was decided in May 1961 that a family of related codes of different sizes
233520	235160	would be created.
235160	243160	A 4-bit numeric set, a shifted 5-bit set, a 6-bit set for data processing, a 7-bit set
243160	248240	for communications, and the possibility of an expanded 8-bit set.
248240	254240	The 7-bit set was identified as the prime set for information exchange.
254240	260360	So this is the initial 7-bit set, from the 1st of June 1961.
260360	264040	Already it's very different from the first.
264040	269280	It's also the first where we see the pipe symbol, or vertical line.
269280	274520	The reason for its inclusion is that it's actually the logical OR symbol, and therefore
274520	281000	grouped among other mathematical symbols, such as greater than, less than, logical not,
281000	282480	you get the idea.
282480	288360	However, this table, this code gave minimal concessions to keyboard design.
288360	294400	For instance, if two symbols reside on a key, ideally you want them in the same row,
294400	299480	because it equates to only a single bit difference between each character.
299480	302920	This allows the keyboard to be mechanically simpler.
302920	307760	You have to remember that, at this point, hollery for mechanical keyboards were often
307760	313600	used to physically punch data into card or tape to be fed into the computer.
313600	318840	And so this character set lacked elegance and practicality.
318840	324280	And so, in collaboration with other global standards authorities, including the UK and
324280	330920	Europe, the arduous process of determining a satisfactory 7-bit standard began.
330920	335320	Now I won't bore you with each subsequent revision, but I can tell you that it would
335320	341360	take another 6 years before the standard was agreed, with the vertical line phasing in
341360	346840	and out of existence throughout.
346840	352600	By the 12th of May 1966, we had this setup, which looks much better with corresponding
352600	359880	shifted values in the correct rows, and the ability to create subsets of the main set.
359880	365640	The idea here was that the four middle columns could be taken as an international subset
365640	370960	and used on 6-bit machines, leaving some of the outside characters as part of the greatest
370960	372860	7-bit set.
372860	378040	Some of these outline characters could also be repurposed as part of a national set for
378040	381520	localised accents and other requirements.
381520	387360	Based around this draft, the international standards organisation would draft this proposal.
387360	391000	You can see some characters are designated for national use.
391000	396400	We also have a pound symbol where hash was, giving you some idea as why Americans refer
396400	399520	to the hash as the pound symbol.
399720	406560	However, even though this draft had international approval, it caused some upsets, mainly with
406560	410120	an IBM user group known as SHARE.
410120	416040	The chairman, H.W. Nelson, would pen an irate letter to the ASA, entitled
416040	422440	The Proposed Revised American Standard Code for Information Interchange Does Not Meet
422440	425800	the Requirements of Computer Programmers.
425800	431240	This point was there weren't any characters in the international subset that could be
431240	437600	used to satisfactorily represent the logical operations of ALL and NOT.
437600	443920	His proposal was that the code table be arranged like so, with the vertical line, or logical
443920	450600	ALL, at position 2-3 and the NOT, or negate symbol, at 2-4.
450600	456160	This would allow for operation of programming languages, such as IBM's Programming Language
456160	462160	1 universally, and on a wider variety of systems.
462160	468120	But as the original ISO draft had already been accepted, changes would be difficult,
468120	471960	so a compromise was made.
471960	477880	Both the circumflex and exclamation mark would need to allow the ability to interchange with
477880	484240	the logical NOT and logical ALL symbols respectively, as if they were some kind of shape shifters.
484240	489880	So in some uses, such as programming, pressing these key commands would create logical symbols,
489880	494240	and outside of programming or on a different machine, they would produce their original
494240	495640	symbols.
495640	501200	In an attempt to appease this significant and important programming community, the standard
501200	504720	document was annotated as thus.
504720	509680	It may be desirable to employ distinctive styling to facilitate their use for specific
509680	517040	purposes, as for example to stylise the graphics in code positions 2-1 and 5-14 to those frequently
517040	522240	associated with logical ALL and logical NOT respectively.
522240	528320	The original vertical line, found in 712, was then broken, so that users would not mistake
528320	533280	it as the logical ALL symbol, which would then create an erroneous output.
533280	536040	And the ASCII-character codes were formed.
536040	542840	So this broken bar would become ASCII-character 7C, and you get that with the formula 16 times
542840	548440	x plus y, where x is the column number and y is the row number.
548440	555600	That gives us 124, which is 7C in hex.
555600	559000	Which brings me onto my sponsor, Squarespace.
559000	564400	Now this is my last slot in this run with Squarespace, so I want to give them a big
564400	571200	thanks for supporting me and frankly allowing me to upgrade some of my videography equipment.
571200	574640	Look out for some improvements in future videos.
574640	579200	But if you want to create your own website for, well, any purpose, be it business or
579200	582000	pleasure, Squarespace has your back.
582000	586320	It's incredibly simple to get a website up and running with a custom domain using their
586320	590440	platform, with effortless tools and guides to help you along.
590440	598880	And right now you can grab 10% off your first purchase by visiting the link in the description.
598880	604000	But remember this is the last sponsor segment in this run, so don't hang about, check them
604000	611440	out with the link below.
611440	618320	And so, on the 5th July 1967, this would become the American Standards Code for Information
618320	624720	Interchange, or ASCII, with the equivalent ISO 464 code published as a recommendation
624720	631560	in December of the same year, ensuring that text remained readable and usable across multiple
631560	632560	machines.
632560	639040	So, all fonts going forward would be created around this code set, with the keyboard interface
639040	645240	generating the correct signals to call the relevant characters up from ROM or software.
645240	651760	So this explains why we have our broken vertical bar on the keyboard, and indeed why it appears
651760	653640	in our software.
653640	659160	It was part of the character set from 1967 onwards, but as it was no longer needed for
659160	665600	its original operation, computer programs began repurposing it for their own uses.
665600	670600	So going back to our initial example, this is how DOS ended up using it for the useful
670600	671600	pipe command.
671600	676480	Although, like a lot of things, really it was stolen from Unix, which had been using
676480	679240	it since the early 70s.
679240	685520	But something happened between 1967 and the release of DOS and the IBM PC compatible that
685520	696880	should have had implications.
696880	699880	Enter ASCII 1977.
699880	709240	Yeah man, the 70s were a different, funkier time, and it meant that what was once taken
709240	711240	out went back in.
711240	717880	Yes, ten years on, and with the share group apparently a distant memory, ASCII 1977 went
717880	722800	about undoing the compromises of the original ASCII 1967.
722800	727360	The hash symbol could no longer be replaced by the pound, the circumflex could no longer
727360	734040	be stylized as logical not, and importantly the exclamation mark could no longer be stylized
734040	736160	as a vertical bar.
736160	742920	This meant the original 7C broken bar was repaired to be a beautiful, full flowing,
742920	743920	continuous bar.
743920	747640	Yes, it was back in business again as logical or.
747640	755480	Internationally, these had actually been done even sooner with ISO 646 1973.
755480	762920	It seems like it really was done just to appease PL1 programmers for a few years.
762920	768040	So enter the IBM PC in 1981 and enter Microsoft DOS.
768040	769040	And what do we have?
769040	772400	Yep, we've still got that broken bar.
772400	777280	Here we have a character that does not conform to ASCII standards.
777280	782840	This character should not exist, but yet it does there, it does here, and it does on almost
782840	789520	every keyboard of the 1980s and 90s, or IBM PC compatibles at least.
789520	793560	And in fact, still a lot of keyboards up until this day.
793560	798760	But that in part is due to the IBM PC using its own character set.
798760	803160	This is called code page 437 and should look pretty familiar to you.
803160	808060	It's actually an 8-bit character set, it just does away with the extra 1-bit parity
808060	813720	check used on the original 7-bit ASCII set, and gives us a load of graphical characters
813720	819400	commonly used for DOS programs like edit, scan disk and QBasic.
819480	824240	All the non-ASCII characters have bespoke numbering conventions to avoid confusion and
824240	826120	interpretation issues.
826120	831600	I mean, it is based on ASCII, it includes all principal ASCII character codes and extended
831600	835520	codes and it's sometimes referred to as high ASCII.
835520	839580	I'm not sure whether that's because it looks like it's on drugs or not, but it's not strictly
839580	842480	speaking ASCII compatible.
842480	848640	And rather than pulling the solid vertical bar from 1977 ASCII, it uses the broken bar
848640	853120	that IBM had been accustomed to since 1967.
853120	857800	Now if you're from the United States or really anywhere else, you might wonder why it's
857800	858800	down here.
858800	862140	Well, that's because this is a UK keyboard.
862140	867320	If you recall our earlier dollar symbol, pound shenanigans, this is why UK keyboards are
867320	870480	commonly 62 key rather than 61.
870480	877280	The pound symbol is on 3, meaning the hash symbol is now on an extra key down near our
877280	883280	larger enter key, meaning the key you Americans usually have over the enter key is actually
883280	885480	now down here.
885480	887640	And up there?
887640	889440	Oh god what the hell is this?
889440	891880	We have two vertical bars now.
891880	892880	What is this?
892880	894080	Two pipe symbols?
894080	895720	What is going on here?
895720	901600	Yes, UK keyboards have a second vertical line to the left of the one key.
901600	908480	It's shared with that logical not symbol and a grave accent, used in various languages.
908480	913120	If you're American and you have an international keyboard, then you'll find the second vertical
913120	917360	line on the same key as the first vertical line.
917360	921240	I'm not sure that makes it easier to comprehend, if anything it's worse.
921240	926320	Anyway, on a lot of character sets, these two symbols will look identical.
926320	932920	The original pipe is ASCII007C, whilst this new one is 00A6.
932920	938160	And it's accessed on a UK keyboard using the alt graph and the top left key.
938160	945520	The reason it's here is due to the extended ASCII codes introduced in 1985 with ISO8859-1
945520	948400	or ECMA94.
948400	954520	Also known as Latin 1, it consists of 191 characters from the Latin script.
954520	957920	On the DOS it was introduced with code page 850.
957920	962920	You can see how it fits alongside the original 7-bit set nicely.
962920	967160	With it, this character set reintroduced back the broken vertical bar.
967160	974040	Yes, the bar that was broken in 1967 to stop it being used the wrong way was brought back.
974040	976320	I guess people missed it.
976320	981320	But this new broken vertical bar is a different character to 7C, so it doesn't really have
981320	984800	any purpose other than to look like a broken bar.
984800	990880	Which ironically is what 7C still looks like in a lot of fonts and on a lot of keyboards.
990880	994720	I guess it gives you an extra tool for ASCII art at least.
994720	999680	So if you find an international or UK keyboard from 1985 onward, you will likely find it
999680	1004800	has two solid bars, or perhaps two broken bars, or even more weirdly, it will likely have
1004800	1009680	a broken bar where the solid bar should be and a solid bar where the new broken bar should
1009680	1010680	be.
1010880	1016640	In part, this is due to IBM's Model M keyboard.
1016640	1024840	It was also introduced in 1985 and has switched the vertical bars, just like code page 437.
1024840	1030640	It was also the basis for many keyboards going forward, yet it's quite confusing.
1030640	1036600	So you may come across the odd font that still has the back to front implementation.
1036680	1041600	Whether your keyboard has them the right way around will vary depending on your keyboard.
1041600	1043400	Some will, some won't.
1043400	1048320	It's amazing as we're talking about a hangover from a standards dispute that now goes back
1048320	1050760	over half a century.
1050760	1055360	But regardless of how they look, the operating system should still recognise them as their
1055360	1061160	original intention from 1967.
1061160	1066040	So that's why we have two keys with almost the same character, and it's also why those
1066040	1071520	keys, or the characters represented on those keys, shouldn't actually exist.
1071520	1074360	Well not in the way they're intended.
1074360	1082120	So as a recap, this key was once a broken bar, represented by a broken bar on screen,
1082120	1089280	but it should have been a solid bar, represented by a solid bar on screen, and mostly these
1089280	1092000	days that is the case.
1092000	1098600	This extra broken bar, located on some keyboards, that is sometimes portrayed as a solid bar,
1098600	1105480	but is in fact a broken bar, was introduced in 1985 and is really just for old times sake,
1105480	1110640	but is a distinct different character from the original broken bar, so doesn't really
1110640	1112720	serve that purpose.
1112720	1117800	Unless programmers give it a bespoke purpose, just like this one was.
1117800	1120320	Maybe Unix can have an extra pipe.
1120400	1122880	It does seem to like them, after all.
1122880	1128800	Or maybe YouTubers can just use them in video titles, as a separation mark.
1128800	1133920	So I hope that explains something you probably never cared about, or possibly made it more
1133920	1135480	confusing for you.
1135480	1140280	In any case, thanks for watching and have a great evening.
