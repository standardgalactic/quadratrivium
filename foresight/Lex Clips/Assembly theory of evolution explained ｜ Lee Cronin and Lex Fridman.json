{"text": " So your big assembly theory paper was published in Nature. Congratulations. Thanks. It created, I think it's fair to say a lot of controversy, but also a lot of interesting discussion. So maybe I can try to summarize assembly theory and you tell me if I'm wrong. Sorry for it. So assembly theory says that if we look at any object in the universe, any object, that we can quantify how complex it is by trying to find the number of steps it took to create it. And also we can determine if it was built by a process akin to evolution by looking at how many copies of the object there are. Yeah, that's spot on. Yeah. Spot on. Spot on. I was not expecting that. Okay. So let's go through definitions. So there's a central equation I'd love to talk about, but definition wise, what is an object? Yeah, an object. So if I'm going to try to be as meticulous as possible, objects need to be finite and they need to be decomposable into subunits. All human made artifacts are objects. Is a planet an object? Probably yes if you scale out. So an object is finite and countable and decomposable. I suppose mathematically, but yeah, I still wake up some days and go to think to myself, what is an object? Because it's a non-trivial question. Persists over time, I'm quoting from the paper here, an object that's finite is distinguishable. I'm sure that's a weird adjective, distinguishable. We've had so many people offering to rewrite the paper after it came out. You wouldn't believe it's so funny. Persists over time and is breakable such that the set of constraints to construct it from elementary building blocks is quantifiable. Such that the set of constraints to construct it from elementary building blocks is quantifiable. The history is in the objects. It's kind of cool, right? So what defines the object is its history or memory, whichever is the sexier word. I'm happy with both depending on the day. So the set of steps it took to create the object, so there's a sense in which every object in the universe has a history and that is part of the thing that is used to describe its complexity, how complicated it is. What is an assembly index? So the assembly index, if you're to take the object apart and be super lazy about it or minimal, say, well, it's like you've got a really short term memory. So what you do is you lay all the parts on the path and you find the minimum number of steps you take on the path to add the parts together to reproduce the object and that minimum number is the assembly index is a minimum bound. And it was always my intuition the minimum bound and assembly theory was really important and I only worked out why a few weeks ago, which is kind of funny because I was just like, no, this is sacrosanct, I don't know why it will come to me one day and then when I was pushed by a bunch of mathematicians, we came up with the correct physical explanation which I can get to, but it's the minimum and it's really important, it's the minimum. And the reason I knew the minimum was right is because we could measure it. So almost before this paper came out, with published papers, explain how you can measure the assembly index of molecules. Okay, so that's not so trivial to figure out. So when you look at an object, we can say a molecule, we can say object more generally, to figure out the minimum number of steps it takes to create that object. That doesn't seem like a trivial thing to do. So with molecules, it's not trivial, but it is possible because what you can do and because I'm a chemist, I'm kind of like, I see the lens of the world through just chemistry. I break the molecule apart and break bonds and if you take a molecule and you break it all apart, you have a bunch of atoms and then you say, okay, I'm going to then take the atoms and form bonds and go up the chain of events to make the molecule. And that's what made me realize, take a toy example, literally toy example, take a Lego object, which is broken up of Lego blocks. So you could do exactly the same thing. In this case, the Lego blocks are naturally the smallest, they're the atoms in the actual composite Lego architecture. But then if you maybe take a couple of blocks and put them together in a certain way, maybe they're offset in some way, that offset is on the memory, you can use that offset again with only a penalty of one and you can then make a square triangle and keep going. And you remember those motifs on the chain. So you can then leap from the start with all the Lego blocks or atoms just laid out in front of you and say, right, I'll take you, you, you connect and do the least amount of work. So it's really like the smallest steps you can take on the graph to make the object. And so for molecules, it came relatively intuitively. And then we started to apply it to language. We've even started to apply it to mathematical theorems, but I'm so well out of my depth, that it looks like you can take minimum set of axioms and then start to build up kind of mathematical architectures in the same way. And then the shortest path to get there is something interesting that I don't yet understand. So what's the computational complexity of figuring out the shortest path in with molecules, with language, with mathematical theorems? It seems that once you have the fully constructed Lego castle or whatever your favorite Lego world is figuring out how to get there from the building, basic building blocks, isn't like a, is that an empty hard problem? It's a hard problem. It's a hard problem. But actually, if you look at it, so the best way to look at it for this, take a molecule. So if the molecule has 13 bonds, first of all, take 13 copies of the molecule and just cut all the bonds. So take 12 bonds and then you just put them in order. And then that's how it works. So you keep looking for symmetry or copies so you can then shorten it as you go down. And that becomes combinatorially quite hard. For some natural product molecules, it comes very hard. It's not impossible, but we're looking at the bounds on that at the moment. But as the object gets bigger, it becomes really hard. And that's the bad news, but the good news is there are shortcuts. We might even be able to physically measure the complexity without computationally calculating it, which is kind of insane. Wait, wait, wait. How would you do that? Well, in the case of molecule, so if you shine light on a molecule, let's take an infrared, the molecule has each of the bonds absorbs the infrared differently in what we call the fingerprint region. And so it's a bit like, and because it's quantized as well, you have all these discrete kind of absorbences. And my intuition after we realized we could cut molecules up in mass spec, that was the first go at this. We did it with using infrared and the infrared gave us an even better correlation assembly index and we used another technique as well. In addition to infrared called NMR, nuclear magnetic resonance, which tells you about the number of different magnetic environments in a molecule. And that also worked out. So we have three techniques, which each of them independently gives us the same or tending towards the same assembly index for a molecule that we can calculate mathematically. Okay. So these are all methods of mass spectrometry, mass spec. You scan a molecule, it gives you data in the form of a mass spectrum. And you're saying that the data correlates to the assembly index. How generalizable is that shortcut? First of all, to chemistry. And second of all, beyond that, because that seems like a nice hack. And you're extremely knowledgeable about various aspects of chemistry. So you can say, okay, it kind of correlates, but, you know, the whole idea behind assembly theory paper and perhaps why it's so controversial is that it reaches bigger. It reaches for the bigger general theory of objects in the universe. Yeah, I'd say so, I'd agree. So I've started assembly theory of emoticons with my lab, believe it or not. So we take emojis, pixelate them and work out the assembly index and emoji and then work out how many emojis you can make on the path of emoji. So there's the uber emoji from which all other emojis emerge. And then you can, so you can then take a photograph and by looking at the shortest path by reproducing the pixels to make the image you want, you can measure that. So then you start to be able to take spatial data. Now there's some problems there. What is then the definition of the object? How many pixels? How do you break it down? And so we're just learning all this right now. So how do you compute the, how would you begin to compute the assembly index of a graphical like a set of pixels on a 2G plane that form a thing? So you would first of all determine the resolution. So then how many, what is your XY and what the number on the X and Y plane and then look at the surface area. And then you take all your emojis and make sure they're all looked at the same resolution. And then we were basically then do the exactly the same thing we would do for cutting the bonds. You'd cut bits out of the emoji and look at them, you'd have a bag of pixels. And you would then add those pixels together to make the overall emoji. But like, first of all, not every pixels, I mean, this is at the core sort of machine learning and computer vision, not every pixel is that important. And there's like macro features, there's a micro features and all that kind of stuff. Exactly. Like, you know, the eyes appear in a lot of them. The smile appears in a lot of them. So in the same way in chemistry, we assume the bond is fundamental. What we do and they're here is we assume the resolution at the scale at which we do it is fundamental. And we're just working that out and that you're right, that will change, right? Because as you take your lens out a bit, you it will change dramatically. But it but it's just a new way of looking at not just compression, what we do right now in computer science and data, one big kind of kind of misunderstanding is assembly theory is telling you about how compressed the object is. That's not right. It's a how much information is required on a chain of events, because the nice thing is if when you do compression in computer science, we're wondering a bit here, but it's kind of worth wondering, I think, in you, you assume you have instantaneous access to all the information in the memory. Yeah. The assembly theory, you say, no, you don't get access to that memory until you've done the work. And then you don't access that memory, you can have access, but not the next one. And this is how in assembly theory, we talk about the four universes, the assembly universe the assembly possible, and the assembly contingent, and then the assembly observed. And they're all all scales in this combinatorial universe. Yeah. Can you explain each one of them? Yeah. So the assembly universe is like anything goes, just is just combinatorial kind of explosion in everything. That's the biggest one. That's the biggest one's massive. Assembly universe, assembly possible, assembly contingent, assembly observed. On the y-axis is assembly steps in time. Yeah. And, you know, in the x-axis, as the thing expands through time, more and more unique objects appear. So, yeah, so assembly universe, everything goes. Yep. Assembly possible, laws of physics come in, in this case, in chemistry bonds. In assembly, so that means- Those are actually constraints, I guess? Yes. And they're the only constraints. They're the constraints of the base. The only way to look at it, you've got all your atoms, they're quantized, you can just bung them together. So then you can become a kind of, so in the way in computer science speak, I suppose the assembly universe is just like no laws of physics. Things can fly through mountains, beyond the speed of light. In the assembly possible, you have to apply the laws of physics, but you can get access to all the motifs instantaneously with no effort. That means you could make anything, then the assembly contingent says no. You can't have access to the highly assembled object in the future until you've done the work in the past on the causal chain, and that's really the really interesting shift where you go from assembly possible to assembly contingent. That is really the key thing in assembly theory that says you cannot just have instantaneous access to all those memories. You have to have done the work somehow, the universe has to have somehow built a system that allows you to select that path rather than other paths. And then the final thing the assembly observed is basically you're saying, oh, these are the things we actually see. We can go backwards now and understand that they have been created by this causal process. Wait a minute. So when you say the universe has to construct a system that does the work, is that like the environment that allows for like selection? Yeah. That's the thing that does the selection. You could think about in terms of a von Neumann constructor versus a selection of ribosome, Tesla plant assembling Teslas, you know, the difference between the assembly universe in Tesla land and the Tesla factory is everyone says no, Teslas are just easy. They just spring out. You know how I make them all. The Tesla factory, you have to put things in sequence and out comes a Tesla. So you're talking about the factory? Yes. This is really nice. Super important point is that when I talk about the universe having a memory or there's some magic, it's not that it's that tells you that there must be a process encoded somewhere in physical reality, be it a cell, a Tesla factory, or something else that is making that object. I'm not saying there's some kind of woo woo memory in the universe, you know, morphic resonance or something. I'm saying that there is an actual causal process that is being directed constrained in some way. So it's not kind of just making everything. Yeah, but Lee, what's the factory that made the factory? So what is the, so first of all, you assume the laws of physics is just sprung to existence at the beginning. Those are constraints, but what makes the factory the environment that does the selection? This is the question or, well, it's the first interesting question that I want to answer out of four. I think the factory emerges in the environment, the interplay between the environment and the objects that are being built. And here, let me, I'll have a go explain to you the shortest path. So why is the shortest path important? Imagine you've got, I'm going to have to go chemistry for a moment and abstract it. So imagine you've got an environment, a given environment that you have a budget of atoms, you're just flinging together, and the, the objective of those atoms that being flung together and say molecule A have to make, they have it, they decompose. So molecules decompose over time. So the molecules in this environment, in this magic environment have to not die, but they do die. There's a, there's a, they have a half life. So the only way the molecules can get through that environment out the other side, let's pretend the environment is a box and go in and out without dying. And there's a, there's just an infinite supply of atoms coming or a, well, a large supply. The molecule gets built, but the molecule that is able to template itself being built and survives in the environment will, will basically reign supreme. Now let's say that that molecule takes 10 steps now, and it, and it's using a finite set of atoms, right? Now let's say another molecule, smart ass molecule, we'll call it comes in and can survive in that environment and can copy itself, but it only needs five steps. The molecule that only needs five steps because it's continued, both molecules are being destroyed, but they're creating themselves faster, they can be destroyed. You can see that the shortest path reigns supreme. So the shortest path tells us something super interesting about the minimal amount of information required to propagate that motif in time and space. And it's just like a kind of, it seems to be like some kind of conservation law. So one of the intuitions you have is the propagation of motifs in time will be done by the things that can construct themselves in the shortest path. So like you can assume that most of the objects in the universe are built in the shortest, in the most efficient way. Big leap I just took there. Yeah, no, yes and no, because there are other things. So in the limit, yes, because you want to tell the difference between things that have required a factory to build them and just random processes, but you can find instances where the shortest path isn't taken for an individual object, an individual function. And people go, ah, that means the shortest path isn't right. And then I say, well, I don't know, I think it's right still because, so of course, because there are other driving forces, it's not just one molecule. Now when you start to, now you start to consider two objects, you have a joint assembly space and it's not, now it's a compromise between not just making A and B in the shortest path. You want to make A and B in the shortest path, which might mean that A is slightly longer, you have compromise. So when you see slightly more nesting in the construction, when you take a given object, that can look longer, but that's because the overall function is the object is still trying to be efficient. Yeah. And this is still very hand wavy and maybe have no legs to stand on, but we think we're getting somewhere with that. And there's probably some parallelization. Yeah. Right? So this is all, this is not sequential. The building is, I guess. No, you're right. When you're talking about complex objects, you don't have to work sequentially. You can work in parallel. You can get your friends together and they can. Yeah. The thing we're working on right now is how to understand these parallel processes. Now there's a new thing we've introduced called assembly depth. And assembly depth can be lower than the assembly index for a molecule when they're cooperating together, because exactly this parallel processing is going on. And my team have been working this out in the last few weeks because we're looking at what compromises does nature need to make when it's making molecules in a cell? And I wonder if, you know, I may be like, well, I'm always leaping out of my composites, but in economics. I'm just wondering if you could apply this in the economic process. It seems like capitalism is very good at finding shortest path, you know, every time. But there are ludicrous things that happen because actually the cost function has been minimized. And so I keep seeing parallels everywhere where there are complex nested systems, where if you give it enough time and you introduce a bit of heterogeneity, the system readjusts and finds a new shortest path. But the shortest path isn't fixed on just one molecule now. It's in the actual existence of the object over time. And that object could be a city, it could be a cell, it could be a factory. But I think we're going way beyond molecules and my competence, probably should go back to molecules.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 6.68, "text": " So your big assembly theory paper was published in Nature.", "tokens": [50364, 407, 428, 955, 12103, 5261, 3035, 390, 6572, 294, 20159, 13, 50698], "temperature": 0.0, "avg_logprob": -0.20363412444124518, "compression_ratio": 1.6177777777777778, "no_speech_prob": 0.17698131501674652}, {"id": 1, "seek": 0, "start": 6.68, "end": 7.68, "text": " Congratulations.", "tokens": [50698, 9694, 13, 50748], "temperature": 0.0, "avg_logprob": -0.20363412444124518, "compression_ratio": 1.6177777777777778, "no_speech_prob": 0.17698131501674652}, {"id": 2, "seek": 0, "start": 7.68, "end": 8.68, "text": " Thanks.", "tokens": [50748, 2561, 13, 50798], "temperature": 0.0, "avg_logprob": -0.20363412444124518, "compression_ratio": 1.6177777777777778, "no_speech_prob": 0.17698131501674652}, {"id": 3, "seek": 0, "start": 8.68, "end": 14.120000000000001, "text": " It created, I think it's fair to say a lot of controversy, but also a lot of interesting", "tokens": [50798, 467, 2942, 11, 286, 519, 309, 311, 3143, 281, 584, 257, 688, 295, 22976, 11, 457, 611, 257, 688, 295, 1880, 51070], "temperature": 0.0, "avg_logprob": -0.20363412444124518, "compression_ratio": 1.6177777777777778, "no_speech_prob": 0.17698131501674652}, {"id": 4, "seek": 0, "start": 14.120000000000001, "end": 15.76, "text": " discussion.", "tokens": [51070, 5017, 13, 51152], "temperature": 0.0, "avg_logprob": -0.20363412444124518, "compression_ratio": 1.6177777777777778, "no_speech_prob": 0.17698131501674652}, {"id": 5, "seek": 0, "start": 15.76, "end": 19.44, "text": " So maybe I can try to summarize assembly theory and you tell me if I'm wrong.", "tokens": [51152, 407, 1310, 286, 393, 853, 281, 20858, 12103, 5261, 293, 291, 980, 385, 498, 286, 478, 2085, 13, 51336], "temperature": 0.0, "avg_logprob": -0.20363412444124518, "compression_ratio": 1.6177777777777778, "no_speech_prob": 0.17698131501674652}, {"id": 6, "seek": 0, "start": 19.44, "end": 20.84, "text": " Sorry for it.", "tokens": [51336, 4919, 337, 309, 13, 51406], "temperature": 0.0, "avg_logprob": -0.20363412444124518, "compression_ratio": 1.6177777777777778, "no_speech_prob": 0.17698131501674652}, {"id": 7, "seek": 0, "start": 20.84, "end": 28.080000000000002, "text": " So assembly theory says that if we look at any object in the universe, any object, that", "tokens": [51406, 407, 12103, 5261, 1619, 300, 498, 321, 574, 412, 604, 2657, 294, 264, 6445, 11, 604, 2657, 11, 300, 51768], "temperature": 0.0, "avg_logprob": -0.20363412444124518, "compression_ratio": 1.6177777777777778, "no_speech_prob": 0.17698131501674652}, {"id": 8, "seek": 2808, "start": 28.08, "end": 32.239999999999995, "text": " we can quantify how complex it is by trying to find the number of steps it took to create", "tokens": [50364, 321, 393, 40421, 577, 3997, 309, 307, 538, 1382, 281, 915, 264, 1230, 295, 4439, 309, 1890, 281, 1884, 50572], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 9, "seek": 2808, "start": 32.239999999999995, "end": 33.36, "text": " it.", "tokens": [50572, 309, 13, 50628], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 10, "seek": 2808, "start": 33.36, "end": 39.4, "text": " And also we can determine if it was built by a process akin to evolution by looking", "tokens": [50628, 400, 611, 321, 393, 6997, 498, 309, 390, 3094, 538, 257, 1399, 47540, 281, 9303, 538, 1237, 50930], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 11, "seek": 2808, "start": 39.4, "end": 41.72, "text": " at how many copies of the object there are.", "tokens": [50930, 412, 577, 867, 14341, 295, 264, 2657, 456, 366, 13, 51046], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 12, "seek": 2808, "start": 41.72, "end": 43.36, "text": " Yeah, that's spot on.", "tokens": [51046, 865, 11, 300, 311, 4008, 322, 13, 51128], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 13, "seek": 2808, "start": 43.36, "end": 44.36, "text": " Yeah.", "tokens": [51128, 865, 13, 51178], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 14, "seek": 2808, "start": 44.36, "end": 45.36, "text": " Spot on.", "tokens": [51178, 19102, 322, 13, 51228], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 15, "seek": 2808, "start": 45.36, "end": 46.36, "text": " Spot on.", "tokens": [51228, 19102, 322, 13, 51278], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 16, "seek": 2808, "start": 46.36, "end": 47.36, "text": " I was not expecting that.", "tokens": [51278, 286, 390, 406, 9650, 300, 13, 51328], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 17, "seek": 2808, "start": 47.36, "end": 48.36, "text": " Okay.", "tokens": [51328, 1033, 13, 51378], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 18, "seek": 2808, "start": 48.36, "end": 50.239999999999995, "text": " So let's go through definitions.", "tokens": [51378, 407, 718, 311, 352, 807, 21988, 13, 51472], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 19, "seek": 2808, "start": 50.239999999999995, "end": 55.56, "text": " So there's a central equation I'd love to talk about, but definition wise, what is", "tokens": [51472, 407, 456, 311, 257, 5777, 5367, 286, 1116, 959, 281, 751, 466, 11, 457, 7123, 10829, 11, 437, 307, 51738], "temperature": 0.0, "avg_logprob": -0.18316399178853848, "compression_ratio": 1.6274509803921569, "no_speech_prob": 0.008165652863681316}, {"id": 20, "seek": 5556, "start": 55.56, "end": 59.0, "text": " an object?", "tokens": [50364, 364, 2657, 30, 50536], "temperature": 0.0, "avg_logprob": -0.21206407961638077, "compression_ratio": 1.6703296703296704, "no_speech_prob": 0.006177179981023073}, {"id": 21, "seek": 5556, "start": 59.0, "end": 60.5, "text": " Yeah, an object.", "tokens": [50536, 865, 11, 364, 2657, 13, 50611], "temperature": 0.0, "avg_logprob": -0.21206407961638077, "compression_ratio": 1.6703296703296704, "no_speech_prob": 0.006177179981023073}, {"id": 22, "seek": 5556, "start": 60.5, "end": 68.44, "text": " So if I'm going to try to be as meticulous as possible, objects need to be finite and", "tokens": [50611, 407, 498, 286, 478, 516, 281, 853, 281, 312, 382, 41566, 6893, 382, 1944, 11, 6565, 643, 281, 312, 19362, 293, 51008], "temperature": 0.0, "avg_logprob": -0.21206407961638077, "compression_ratio": 1.6703296703296704, "no_speech_prob": 0.006177179981023073}, {"id": 23, "seek": 5556, "start": 68.44, "end": 73.16, "text": " they need to be decomposable into subunits.", "tokens": [51008, 436, 643, 281, 312, 22867, 329, 712, 666, 1422, 409, 1208, 13, 51244], "temperature": 0.0, "avg_logprob": -0.21206407961638077, "compression_ratio": 1.6703296703296704, "no_speech_prob": 0.006177179981023073}, {"id": 24, "seek": 5556, "start": 73.16, "end": 76.64, "text": " All human made artifacts are objects.", "tokens": [51244, 1057, 1952, 1027, 24617, 366, 6565, 13, 51418], "temperature": 0.0, "avg_logprob": -0.21206407961638077, "compression_ratio": 1.6703296703296704, "no_speech_prob": 0.006177179981023073}, {"id": 25, "seek": 5556, "start": 76.64, "end": 78.4, "text": " Is a planet an object?", "tokens": [51418, 1119, 257, 5054, 364, 2657, 30, 51506], "temperature": 0.0, "avg_logprob": -0.21206407961638077, "compression_ratio": 1.6703296703296704, "no_speech_prob": 0.006177179981023073}, {"id": 26, "seek": 5556, "start": 78.4, "end": 80.76, "text": " Probably yes if you scale out.", "tokens": [51506, 9210, 2086, 498, 291, 4373, 484, 13, 51624], "temperature": 0.0, "avg_logprob": -0.21206407961638077, "compression_ratio": 1.6703296703296704, "no_speech_prob": 0.006177179981023073}, {"id": 27, "seek": 5556, "start": 80.76, "end": 84.92, "text": " So an object is finite and countable and decomposable.", "tokens": [51624, 407, 364, 2657, 307, 19362, 293, 1207, 712, 293, 22867, 329, 712, 13, 51832], "temperature": 0.0, "avg_logprob": -0.21206407961638077, "compression_ratio": 1.6703296703296704, "no_speech_prob": 0.006177179981023073}, {"id": 28, "seek": 8492, "start": 84.92, "end": 91.8, "text": " I suppose mathematically, but yeah, I still wake up some days and go to think to myself,", "tokens": [50364, 286, 7297, 44003, 11, 457, 1338, 11, 286, 920, 6634, 493, 512, 1708, 293, 352, 281, 519, 281, 2059, 11, 50708], "temperature": 0.0, "avg_logprob": -0.25910993576049807, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.03205864876508713}, {"id": 29, "seek": 8492, "start": 91.8, "end": 93.04, "text": " what is an object?", "tokens": [50708, 437, 307, 364, 2657, 30, 50770], "temperature": 0.0, "avg_logprob": -0.25910993576049807, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.03205864876508713}, {"id": 30, "seek": 8492, "start": 93.04, "end": 97.72, "text": " Because it's a non-trivial question.", "tokens": [50770, 1436, 309, 311, 257, 2107, 12, 83, 470, 22640, 1168, 13, 51004], "temperature": 0.0, "avg_logprob": -0.25910993576049807, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.03205864876508713}, {"id": 31, "seek": 8492, "start": 97.72, "end": 104.48, "text": " Persists over time, I'm quoting from the paper here, an object that's finite is distinguishable.", "tokens": [51004, 14006, 1751, 670, 565, 11, 286, 478, 41552, 490, 264, 3035, 510, 11, 364, 2657, 300, 311, 19362, 307, 20206, 712, 13, 51342], "temperature": 0.0, "avg_logprob": -0.25910993576049807, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.03205864876508713}, {"id": 32, "seek": 8492, "start": 104.48, "end": 110.68, "text": " I'm sure that's a weird adjective, distinguishable.", "tokens": [51342, 286, 478, 988, 300, 311, 257, 3657, 44129, 11, 20206, 712, 13, 51652], "temperature": 0.0, "avg_logprob": -0.25910993576049807, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.03205864876508713}, {"id": 33, "seek": 8492, "start": 110.68, "end": 114.64, "text": " We've had so many people offering to rewrite the paper after it came out.", "tokens": [51652, 492, 600, 632, 370, 867, 561, 8745, 281, 28132, 264, 3035, 934, 309, 1361, 484, 13, 51850], "temperature": 0.0, "avg_logprob": -0.25910993576049807, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.03205864876508713}, {"id": 34, "seek": 11464, "start": 114.64, "end": 117.4, "text": " You wouldn't believe it's so funny.", "tokens": [50364, 509, 2759, 380, 1697, 309, 311, 370, 4074, 13, 50502], "temperature": 0.0, "avg_logprob": -0.1779020309448242, "compression_ratio": 1.9107981220657277, "no_speech_prob": 0.03159152716398239}, {"id": 35, "seek": 11464, "start": 117.4, "end": 122.24, "text": " Persists over time and is breakable such that the set of constraints to construct it from", "tokens": [50502, 14006, 1751, 670, 565, 293, 307, 1821, 712, 1270, 300, 264, 992, 295, 18491, 281, 7690, 309, 490, 50744], "temperature": 0.0, "avg_logprob": -0.1779020309448242, "compression_ratio": 1.9107981220657277, "no_speech_prob": 0.03159152716398239}, {"id": 36, "seek": 11464, "start": 122.24, "end": 126.08, "text": " elementary building blocks is quantifiable.", "tokens": [50744, 16429, 2390, 8474, 307, 4426, 30876, 13, 50936], "temperature": 0.0, "avg_logprob": -0.1779020309448242, "compression_ratio": 1.9107981220657277, "no_speech_prob": 0.03159152716398239}, {"id": 37, "seek": 11464, "start": 126.08, "end": 132.56, "text": " Such that the set of constraints to construct it from elementary building blocks is quantifiable.", "tokens": [50936, 9653, 300, 264, 992, 295, 18491, 281, 7690, 309, 490, 16429, 2390, 8474, 307, 4426, 30876, 13, 51260], "temperature": 0.0, "avg_logprob": -0.1779020309448242, "compression_ratio": 1.9107981220657277, "no_speech_prob": 0.03159152716398239}, {"id": 38, "seek": 11464, "start": 132.56, "end": 133.96, "text": " The history is in the objects.", "tokens": [51260, 440, 2503, 307, 294, 264, 6565, 13, 51330], "temperature": 0.0, "avg_logprob": -0.1779020309448242, "compression_ratio": 1.9107981220657277, "no_speech_prob": 0.03159152716398239}, {"id": 39, "seek": 11464, "start": 133.96, "end": 135.8, "text": " It's kind of cool, right?", "tokens": [51330, 467, 311, 733, 295, 1627, 11, 558, 30, 51422], "temperature": 0.0, "avg_logprob": -0.1779020309448242, "compression_ratio": 1.9107981220657277, "no_speech_prob": 0.03159152716398239}, {"id": 40, "seek": 11464, "start": 135.8, "end": 143.4, "text": " So what defines the object is its history or memory, whichever is the sexier word.", "tokens": [51422, 407, 437, 23122, 264, 2657, 307, 1080, 2503, 420, 4675, 11, 24123, 307, 264, 3260, 811, 1349, 13, 51802], "temperature": 0.0, "avg_logprob": -0.1779020309448242, "compression_ratio": 1.9107981220657277, "no_speech_prob": 0.03159152716398239}, {"id": 41, "seek": 14340, "start": 143.4, "end": 146.52, "text": " I'm happy with both depending on the day.", "tokens": [50364, 286, 478, 2055, 365, 1293, 5413, 322, 264, 786, 13, 50520], "temperature": 0.0, "avg_logprob": -0.15887303670247396, "compression_ratio": 1.5297297297297296, "no_speech_prob": 0.029266076162457466}, {"id": 42, "seek": 14340, "start": 146.52, "end": 153.02, "text": " So the set of steps it took to create the object, so there's a sense in which every", "tokens": [50520, 407, 264, 992, 295, 4439, 309, 1890, 281, 1884, 264, 2657, 11, 370, 456, 311, 257, 2020, 294, 597, 633, 50845], "temperature": 0.0, "avg_logprob": -0.15887303670247396, "compression_ratio": 1.5297297297297296, "no_speech_prob": 0.029266076162457466}, {"id": 43, "seek": 14340, "start": 153.02, "end": 160.12, "text": " object in the universe has a history and that is part of the thing that is used to describe", "tokens": [50845, 2657, 294, 264, 6445, 575, 257, 2503, 293, 300, 307, 644, 295, 264, 551, 300, 307, 1143, 281, 6786, 51200], "temperature": 0.0, "avg_logprob": -0.15887303670247396, "compression_ratio": 1.5297297297297296, "no_speech_prob": 0.029266076162457466}, {"id": 44, "seek": 14340, "start": 160.12, "end": 164.16, "text": " its complexity, how complicated it is.", "tokens": [51200, 1080, 14024, 11, 577, 6179, 309, 307, 13, 51402], "temperature": 0.0, "avg_logprob": -0.15887303670247396, "compression_ratio": 1.5297297297297296, "no_speech_prob": 0.029266076162457466}, {"id": 45, "seek": 14340, "start": 164.16, "end": 167.12, "text": " What is an assembly index?", "tokens": [51402, 708, 307, 364, 12103, 8186, 30, 51550], "temperature": 0.0, "avg_logprob": -0.15887303670247396, "compression_ratio": 1.5297297297297296, "no_speech_prob": 0.029266076162457466}, {"id": 46, "seek": 16712, "start": 167.12, "end": 173.96, "text": " So the assembly index, if you're to take the object apart and be super lazy about it", "tokens": [50364, 407, 264, 12103, 8186, 11, 498, 291, 434, 281, 747, 264, 2657, 4936, 293, 312, 1687, 14847, 466, 309, 50706], "temperature": 0.0, "avg_logprob": -0.16438268155467753, "compression_ratio": 1.7953488372093023, "no_speech_prob": 0.01239775400608778}, {"id": 47, "seek": 16712, "start": 173.96, "end": 178.76, "text": " or minimal, say, well, it's like you've got a really short term memory.", "tokens": [50706, 420, 13206, 11, 584, 11, 731, 11, 309, 311, 411, 291, 600, 658, 257, 534, 2099, 1433, 4675, 13, 50946], "temperature": 0.0, "avg_logprob": -0.16438268155467753, "compression_ratio": 1.7953488372093023, "no_speech_prob": 0.01239775400608778}, {"id": 48, "seek": 16712, "start": 178.76, "end": 184.76, "text": " So what you do is you lay all the parts on the path and you find the minimum number of", "tokens": [50946, 407, 437, 291, 360, 307, 291, 2360, 439, 264, 3166, 322, 264, 3100, 293, 291, 915, 264, 7285, 1230, 295, 51246], "temperature": 0.0, "avg_logprob": -0.16438268155467753, "compression_ratio": 1.7953488372093023, "no_speech_prob": 0.01239775400608778}, {"id": 49, "seek": 16712, "start": 184.76, "end": 191.24, "text": " steps you take on the path to add the parts together to reproduce the object and that", "tokens": [51246, 4439, 291, 747, 322, 264, 3100, 281, 909, 264, 3166, 1214, 281, 29501, 264, 2657, 293, 300, 51570], "temperature": 0.0, "avg_logprob": -0.16438268155467753, "compression_ratio": 1.7953488372093023, "no_speech_prob": 0.01239775400608778}, {"id": 50, "seek": 16712, "start": 191.24, "end": 195.04000000000002, "text": " minimum number is the assembly index is a minimum bound.", "tokens": [51570, 7285, 1230, 307, 264, 12103, 8186, 307, 257, 7285, 5472, 13, 51760], "temperature": 0.0, "avg_logprob": -0.16438268155467753, "compression_ratio": 1.7953488372093023, "no_speech_prob": 0.01239775400608778}, {"id": 51, "seek": 19504, "start": 195.04, "end": 198.28, "text": " And it was always my intuition the minimum bound and assembly theory was really important", "tokens": [50364, 400, 309, 390, 1009, 452, 24002, 264, 7285, 5472, 293, 12103, 5261, 390, 534, 1021, 50526], "temperature": 0.0, "avg_logprob": -0.1784001124724177, "compression_ratio": 1.7610921501706485, "no_speech_prob": 0.11257832497358322}, {"id": 52, "seek": 19504, "start": 198.28, "end": 201.16, "text": " and I only worked out why a few weeks ago, which is kind of funny because I was just", "tokens": [50526, 293, 286, 787, 2732, 484, 983, 257, 1326, 3259, 2057, 11, 597, 307, 733, 295, 4074, 570, 286, 390, 445, 50670], "temperature": 0.0, "avg_logprob": -0.1784001124724177, "compression_ratio": 1.7610921501706485, "no_speech_prob": 0.11257832497358322}, {"id": 53, "seek": 19504, "start": 201.16, "end": 205.07999999999998, "text": " like, no, this is sacrosanct, I don't know why it will come to me one day and then when", "tokens": [50670, 411, 11, 572, 11, 341, 307, 4899, 2635, 282, 349, 11, 286, 500, 380, 458, 983, 309, 486, 808, 281, 385, 472, 786, 293, 550, 562, 50866], "temperature": 0.0, "avg_logprob": -0.1784001124724177, "compression_ratio": 1.7610921501706485, "no_speech_prob": 0.11257832497358322}, {"id": 54, "seek": 19504, "start": 205.07999999999998, "end": 213.68, "text": " I was pushed by a bunch of mathematicians, we came up with the correct physical explanation", "tokens": [50866, 286, 390, 9152, 538, 257, 3840, 295, 32811, 2567, 11, 321, 1361, 493, 365, 264, 3006, 4001, 10835, 51296], "temperature": 0.0, "avg_logprob": -0.1784001124724177, "compression_ratio": 1.7610921501706485, "no_speech_prob": 0.11257832497358322}, {"id": 55, "seek": 19504, "start": 213.68, "end": 217.79999999999998, "text": " which I can get to, but it's the minimum and it's really important, it's the minimum.", "tokens": [51296, 597, 286, 393, 483, 281, 11, 457, 309, 311, 264, 7285, 293, 309, 311, 534, 1021, 11, 309, 311, 264, 7285, 13, 51502], "temperature": 0.0, "avg_logprob": -0.1784001124724177, "compression_ratio": 1.7610921501706485, "no_speech_prob": 0.11257832497358322}, {"id": 56, "seek": 19504, "start": 217.79999999999998, "end": 221.23999999999998, "text": " And the reason I knew the minimum was right is because we could measure it.", "tokens": [51502, 400, 264, 1778, 286, 2586, 264, 7285, 390, 558, 307, 570, 321, 727, 3481, 309, 13, 51674], "temperature": 0.0, "avg_logprob": -0.1784001124724177, "compression_ratio": 1.7610921501706485, "no_speech_prob": 0.11257832497358322}, {"id": 57, "seek": 22124, "start": 221.24, "end": 225.88, "text": " So almost before this paper came out, with published papers, explain how you can measure", "tokens": [50364, 407, 1920, 949, 341, 3035, 1361, 484, 11, 365, 6572, 10577, 11, 2903, 577, 291, 393, 3481, 50596], "temperature": 0.0, "avg_logprob": -0.15551268044164626, "compression_ratio": 1.7622641509433963, "no_speech_prob": 0.18689246475696564}, {"id": 58, "seek": 22124, "start": 225.88, "end": 227.8, "text": " the assembly index of molecules.", "tokens": [50596, 264, 12103, 8186, 295, 13093, 13, 50692], "temperature": 0.0, "avg_logprob": -0.15551268044164626, "compression_ratio": 1.7622641509433963, "no_speech_prob": 0.18689246475696564}, {"id": 59, "seek": 22124, "start": 227.8, "end": 230.92000000000002, "text": " Okay, so that's not so trivial to figure out.", "tokens": [50692, 1033, 11, 370, 300, 311, 406, 370, 26703, 281, 2573, 484, 13, 50848], "temperature": 0.0, "avg_logprob": -0.15551268044164626, "compression_ratio": 1.7622641509433963, "no_speech_prob": 0.18689246475696564}, {"id": 60, "seek": 22124, "start": 230.92000000000002, "end": 236.56, "text": " So when you look at an object, we can say a molecule, we can say object more generally,", "tokens": [50848, 407, 562, 291, 574, 412, 364, 2657, 11, 321, 393, 584, 257, 15582, 11, 321, 393, 584, 2657, 544, 5101, 11, 51130], "temperature": 0.0, "avg_logprob": -0.15551268044164626, "compression_ratio": 1.7622641509433963, "no_speech_prob": 0.18689246475696564}, {"id": 61, "seek": 22124, "start": 236.56, "end": 241.92000000000002, "text": " to figure out the minimum number of steps it takes to create that object.", "tokens": [51130, 281, 2573, 484, 264, 7285, 1230, 295, 4439, 309, 2516, 281, 1884, 300, 2657, 13, 51398], "temperature": 0.0, "avg_logprob": -0.15551268044164626, "compression_ratio": 1.7622641509433963, "no_speech_prob": 0.18689246475696564}, {"id": 62, "seek": 22124, "start": 241.92000000000002, "end": 244.52, "text": " That doesn't seem like a trivial thing to do.", "tokens": [51398, 663, 1177, 380, 1643, 411, 257, 26703, 551, 281, 360, 13, 51528], "temperature": 0.0, "avg_logprob": -0.15551268044164626, "compression_ratio": 1.7622641509433963, "no_speech_prob": 0.18689246475696564}, {"id": 63, "seek": 22124, "start": 244.52, "end": 250.88, "text": " So with molecules, it's not trivial, but it is possible because what you can do and because", "tokens": [51528, 407, 365, 13093, 11, 309, 311, 406, 26703, 11, 457, 309, 307, 1944, 570, 437, 291, 393, 360, 293, 570, 51846], "temperature": 0.0, "avg_logprob": -0.15551268044164626, "compression_ratio": 1.7622641509433963, "no_speech_prob": 0.18689246475696564}, {"id": 64, "seek": 25088, "start": 251.68, "end": 256.44, "text": " I'm a chemist, I'm kind of like, I see the lens of the world through just chemistry.", "tokens": [50404, 286, 478, 257, 4771, 468, 11, 286, 478, 733, 295, 411, 11, 286, 536, 264, 6765, 295, 264, 1002, 807, 445, 12558, 13, 50642], "temperature": 0.0, "avg_logprob": -0.1615948166166033, "compression_ratio": 1.794871794871795, "no_speech_prob": 0.04586821049451828}, {"id": 65, "seek": 25088, "start": 256.44, "end": 262.6, "text": " I break the molecule apart and break bonds and if you take a molecule and you break it", "tokens": [50642, 286, 1821, 264, 15582, 4936, 293, 1821, 14713, 293, 498, 291, 747, 257, 15582, 293, 291, 1821, 309, 50950], "temperature": 0.0, "avg_logprob": -0.1615948166166033, "compression_ratio": 1.794871794871795, "no_speech_prob": 0.04586821049451828}, {"id": 66, "seek": 25088, "start": 262.6, "end": 268.28, "text": " all apart, you have a bunch of atoms and then you say, okay, I'm going to then take the", "tokens": [50950, 439, 4936, 11, 291, 362, 257, 3840, 295, 16871, 293, 550, 291, 584, 11, 1392, 11, 286, 478, 516, 281, 550, 747, 264, 51234], "temperature": 0.0, "avg_logprob": -0.1615948166166033, "compression_ratio": 1.794871794871795, "no_speech_prob": 0.04586821049451828}, {"id": 67, "seek": 25088, "start": 268.28, "end": 273.48, "text": " atoms and form bonds and go up the chain of events to make the molecule.", "tokens": [51234, 16871, 293, 1254, 14713, 293, 352, 493, 264, 5021, 295, 3931, 281, 652, 264, 15582, 13, 51494], "temperature": 0.0, "avg_logprob": -0.1615948166166033, "compression_ratio": 1.794871794871795, "no_speech_prob": 0.04586821049451828}, {"id": 68, "seek": 25088, "start": 273.48, "end": 277.68, "text": " And that's what made me realize, take a toy example, literally toy example, take a Lego", "tokens": [51494, 400, 300, 311, 437, 1027, 385, 4325, 11, 747, 257, 12058, 1365, 11, 3736, 12058, 1365, 11, 747, 257, 28761, 51704], "temperature": 0.0, "avg_logprob": -0.1615948166166033, "compression_ratio": 1.794871794871795, "no_speech_prob": 0.04586821049451828}, {"id": 69, "seek": 27768, "start": 277.68, "end": 280.36, "text": " object, which is broken up of Lego blocks.", "tokens": [50364, 2657, 11, 597, 307, 5463, 493, 295, 28761, 8474, 13, 50498], "temperature": 0.0, "avg_logprob": -0.14871087567559604, "compression_ratio": 1.7915057915057915, "no_speech_prob": 0.026707561686635017}, {"id": 70, "seek": 27768, "start": 280.36, "end": 282.32, "text": " So you could do exactly the same thing.", "tokens": [50498, 407, 291, 727, 360, 2293, 264, 912, 551, 13, 50596], "temperature": 0.0, "avg_logprob": -0.14871087567559604, "compression_ratio": 1.7915057915057915, "no_speech_prob": 0.026707561686635017}, {"id": 71, "seek": 27768, "start": 282.32, "end": 288.44, "text": " In this case, the Lego blocks are naturally the smallest, they're the atoms in the actual", "tokens": [50596, 682, 341, 1389, 11, 264, 28761, 8474, 366, 8195, 264, 16998, 11, 436, 434, 264, 16871, 294, 264, 3539, 50902], "temperature": 0.0, "avg_logprob": -0.14871087567559604, "compression_ratio": 1.7915057915057915, "no_speech_prob": 0.026707561686635017}, {"id": 72, "seek": 27768, "start": 288.44, "end": 291.2, "text": " composite Lego architecture.", "tokens": [50902, 25557, 28761, 9482, 13, 51040], "temperature": 0.0, "avg_logprob": -0.14871087567559604, "compression_ratio": 1.7915057915057915, "no_speech_prob": 0.026707561686635017}, {"id": 73, "seek": 27768, "start": 291.2, "end": 297.2, "text": " But then if you maybe take a couple of blocks and put them together in a certain way, maybe", "tokens": [51040, 583, 550, 498, 291, 1310, 747, 257, 1916, 295, 8474, 293, 829, 552, 1214, 294, 257, 1629, 636, 11, 1310, 51340], "temperature": 0.0, "avg_logprob": -0.14871087567559604, "compression_ratio": 1.7915057915057915, "no_speech_prob": 0.026707561686635017}, {"id": 74, "seek": 27768, "start": 297.2, "end": 302.44, "text": " they're offset in some way, that offset is on the memory, you can use that offset again", "tokens": [51340, 436, 434, 18687, 294, 512, 636, 11, 300, 18687, 307, 322, 264, 4675, 11, 291, 393, 764, 300, 18687, 797, 51602], "temperature": 0.0, "avg_logprob": -0.14871087567559604, "compression_ratio": 1.7915057915057915, "no_speech_prob": 0.026707561686635017}, {"id": 75, "seek": 27768, "start": 302.44, "end": 306.76, "text": " with only a penalty of one and you can then make a square triangle and keep going.", "tokens": [51602, 365, 787, 257, 16263, 295, 472, 293, 291, 393, 550, 652, 257, 3732, 13369, 293, 1066, 516, 13, 51818], "temperature": 0.0, "avg_logprob": -0.14871087567559604, "compression_ratio": 1.7915057915057915, "no_speech_prob": 0.026707561686635017}, {"id": 76, "seek": 30676, "start": 306.76, "end": 309.4, "text": " And you remember those motifs on the chain.", "tokens": [50364, 400, 291, 1604, 729, 2184, 18290, 322, 264, 5021, 13, 50496], "temperature": 0.0, "avg_logprob": -0.15292298702793267, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.02440033294260502}, {"id": 77, "seek": 30676, "start": 309.4, "end": 315.88, "text": " So you can then leap from the start with all the Lego blocks or atoms just laid out in front", "tokens": [50496, 407, 291, 393, 550, 19438, 490, 264, 722, 365, 439, 264, 28761, 8474, 420, 16871, 445, 9897, 484, 294, 1868, 50820], "temperature": 0.0, "avg_logprob": -0.15292298702793267, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.02440033294260502}, {"id": 78, "seek": 30676, "start": 315.88, "end": 320.96, "text": " of you and say, right, I'll take you, you, you connect and do the least amount of work.", "tokens": [50820, 295, 291, 293, 584, 11, 558, 11, 286, 603, 747, 291, 11, 291, 11, 291, 1745, 293, 360, 264, 1935, 2372, 295, 589, 13, 51074], "temperature": 0.0, "avg_logprob": -0.15292298702793267, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.02440033294260502}, {"id": 79, "seek": 30676, "start": 320.96, "end": 327.32, "text": " So it's really like the smallest steps you can take on the graph to make the object.", "tokens": [51074, 407, 309, 311, 534, 411, 264, 16998, 4439, 291, 393, 747, 322, 264, 4295, 281, 652, 264, 2657, 13, 51392], "temperature": 0.0, "avg_logprob": -0.15292298702793267, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.02440033294260502}, {"id": 80, "seek": 30676, "start": 327.32, "end": 330.32, "text": " And so for molecules, it came relatively intuitively.", "tokens": [51392, 400, 370, 337, 13093, 11, 309, 1361, 7226, 46506, 13, 51542], "temperature": 0.0, "avg_logprob": -0.15292298702793267, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.02440033294260502}, {"id": 81, "seek": 30676, "start": 330.32, "end": 332.88, "text": " And then we started to apply it to language.", "tokens": [51542, 400, 550, 321, 1409, 281, 3079, 309, 281, 2856, 13, 51670], "temperature": 0.0, "avg_logprob": -0.15292298702793267, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.02440033294260502}, {"id": 82, "seek": 30676, "start": 332.88, "end": 336.28, "text": " We've even started to apply it to mathematical theorems, but I'm so well out of my depth,", "tokens": [51670, 492, 600, 754, 1409, 281, 3079, 309, 281, 18894, 10299, 2592, 11, 457, 286, 478, 370, 731, 484, 295, 452, 7161, 11, 51840], "temperature": 0.0, "avg_logprob": -0.15292298702793267, "compression_ratio": 1.7291666666666667, "no_speech_prob": 0.02440033294260502}, {"id": 83, "seek": 33628, "start": 336.28, "end": 341.0, "text": " that it looks like you can take minimum set of axioms and then start to build up kind", "tokens": [50364, 300, 309, 1542, 411, 291, 393, 747, 7285, 992, 295, 6360, 72, 4785, 293, 550, 722, 281, 1322, 493, 733, 50600], "temperature": 0.0, "avg_logprob": -0.13259413690850286, "compression_ratio": 1.6691176470588236, "no_speech_prob": 0.0022515282034873962}, {"id": 84, "seek": 33628, "start": 341.0, "end": 344.79999999999995, "text": " of mathematical architectures in the same way.", "tokens": [50600, 295, 18894, 6331, 1303, 294, 264, 912, 636, 13, 50790], "temperature": 0.0, "avg_logprob": -0.13259413690850286, "compression_ratio": 1.6691176470588236, "no_speech_prob": 0.0022515282034873962}, {"id": 85, "seek": 33628, "start": 344.79999999999995, "end": 349.08, "text": " And then the shortest path to get there is something interesting that I don't yet understand.", "tokens": [50790, 400, 550, 264, 31875, 3100, 281, 483, 456, 307, 746, 1880, 300, 286, 500, 380, 1939, 1223, 13, 51004], "temperature": 0.0, "avg_logprob": -0.13259413690850286, "compression_ratio": 1.6691176470588236, "no_speech_prob": 0.0022515282034873962}, {"id": 86, "seek": 33628, "start": 349.08, "end": 356.47999999999996, "text": " So what's the computational complexity of figuring out the shortest path in with molecules,", "tokens": [51004, 407, 437, 311, 264, 28270, 14024, 295, 15213, 484, 264, 31875, 3100, 294, 365, 13093, 11, 51374], "temperature": 0.0, "avg_logprob": -0.13259413690850286, "compression_ratio": 1.6691176470588236, "no_speech_prob": 0.0022515282034873962}, {"id": 87, "seek": 33628, "start": 356.47999999999996, "end": 359.84, "text": " with language, with mathematical theorems?", "tokens": [51374, 365, 2856, 11, 365, 18894, 10299, 2592, 30, 51542], "temperature": 0.0, "avg_logprob": -0.13259413690850286, "compression_ratio": 1.6691176470588236, "no_speech_prob": 0.0022515282034873962}, {"id": 88, "seek": 33628, "start": 359.84, "end": 365.88, "text": " It seems that once you have the fully constructed Lego castle or whatever your favorite Lego", "tokens": [51542, 467, 2544, 300, 1564, 291, 362, 264, 4498, 17083, 28761, 14114, 420, 2035, 428, 2954, 28761, 51844], "temperature": 0.0, "avg_logprob": -0.13259413690850286, "compression_ratio": 1.6691176470588236, "no_speech_prob": 0.0022515282034873962}, {"id": 89, "seek": 36588, "start": 365.88, "end": 372.71999999999997, "text": " world is figuring out how to get there from the building, basic building blocks, isn't", "tokens": [50364, 1002, 307, 15213, 484, 577, 281, 483, 456, 490, 264, 2390, 11, 3875, 2390, 8474, 11, 1943, 380, 50706], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 90, "seek": 36588, "start": 372.71999999999997, "end": 374.76, "text": " like a, is that an empty hard problem?", "tokens": [50706, 411, 257, 11, 307, 300, 364, 6707, 1152, 1154, 30, 50808], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 91, "seek": 36588, "start": 374.76, "end": 375.76, "text": " It's a hard problem.", "tokens": [50808, 467, 311, 257, 1152, 1154, 13, 50858], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 92, "seek": 36588, "start": 375.76, "end": 376.76, "text": " It's a hard problem.", "tokens": [50858, 467, 311, 257, 1152, 1154, 13, 50908], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 93, "seek": 36588, "start": 376.76, "end": 380.32, "text": " But actually, if you look at it, so the best way to look at it for this, take a molecule.", "tokens": [50908, 583, 767, 11, 498, 291, 574, 412, 309, 11, 370, 264, 1151, 636, 281, 574, 412, 309, 337, 341, 11, 747, 257, 15582, 13, 51086], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 94, "seek": 36588, "start": 380.32, "end": 385.15999999999997, "text": " So if the molecule has 13 bonds, first of all, take 13 copies of the molecule and just cut", "tokens": [51086, 407, 498, 264, 15582, 575, 3705, 14713, 11, 700, 295, 439, 11, 747, 3705, 14341, 295, 264, 15582, 293, 445, 1723, 51328], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 95, "seek": 36588, "start": 385.15999999999997, "end": 386.15999999999997, "text": " all the bonds.", "tokens": [51328, 439, 264, 14713, 13, 51378], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 96, "seek": 36588, "start": 386.15999999999997, "end": 389.28, "text": " So take 12 bonds and then you just put them in order.", "tokens": [51378, 407, 747, 2272, 14713, 293, 550, 291, 445, 829, 552, 294, 1668, 13, 51534], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 97, "seek": 36588, "start": 389.28, "end": 391.0, "text": " And then that's how it works.", "tokens": [51534, 400, 550, 300, 311, 577, 309, 1985, 13, 51620], "temperature": 0.0, "avg_logprob": -0.20944326840914212, "compression_ratio": 1.7808764940239044, "no_speech_prob": 0.007573060225695372}, {"id": 98, "seek": 39100, "start": 391.0, "end": 398.64, "text": " So you keep looking for symmetry or copies so you can then shorten it as you go down.", "tokens": [50364, 407, 291, 1066, 1237, 337, 25440, 420, 14341, 370, 291, 393, 550, 39632, 309, 382, 291, 352, 760, 13, 50746], "temperature": 0.0, "avg_logprob": -0.1798356952089252, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.002395132789388299}, {"id": 99, "seek": 39100, "start": 398.64, "end": 402.32, "text": " And that becomes combinatorially quite hard.", "tokens": [50746, 400, 300, 3643, 2512, 31927, 2270, 1596, 1152, 13, 50930], "temperature": 0.0, "avg_logprob": -0.1798356952089252, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.002395132789388299}, {"id": 100, "seek": 39100, "start": 402.32, "end": 406.24, "text": " For some natural product molecules, it comes very hard.", "tokens": [50930, 1171, 512, 3303, 1674, 13093, 11, 309, 1487, 588, 1152, 13, 51126], "temperature": 0.0, "avg_logprob": -0.1798356952089252, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.002395132789388299}, {"id": 101, "seek": 39100, "start": 406.24, "end": 409.96, "text": " It's not impossible, but we're looking at the bounds on that at the moment.", "tokens": [51126, 467, 311, 406, 6243, 11, 457, 321, 434, 1237, 412, 264, 29905, 322, 300, 412, 264, 1623, 13, 51312], "temperature": 0.0, "avg_logprob": -0.1798356952089252, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.002395132789388299}, {"id": 102, "seek": 39100, "start": 409.96, "end": 414.24, "text": " But as the object gets bigger, it becomes really hard.", "tokens": [51312, 583, 382, 264, 2657, 2170, 3801, 11, 309, 3643, 534, 1152, 13, 51526], "temperature": 0.0, "avg_logprob": -0.1798356952089252, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.002395132789388299}, {"id": 103, "seek": 39100, "start": 414.24, "end": 418.24, "text": " And that's the bad news, but the good news is there are shortcuts.", "tokens": [51526, 400, 300, 311, 264, 1578, 2583, 11, 457, 264, 665, 2583, 307, 456, 366, 34620, 13, 51726], "temperature": 0.0, "avg_logprob": -0.1798356952089252, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.002395132789388299}, {"id": 104, "seek": 41824, "start": 418.28000000000003, "end": 423.6, "text": " We might even be able to physically measure the complexity without computationally calculating", "tokens": [50366, 492, 1062, 754, 312, 1075, 281, 9762, 3481, 264, 14024, 1553, 24903, 379, 28258, 50632], "temperature": 0.0, "avg_logprob": -0.18345250838842148, "compression_ratio": 1.6498194945848375, "no_speech_prob": 0.05330771207809448}, {"id": 105, "seek": 41824, "start": 423.6, "end": 425.40000000000003, "text": " it, which is kind of insane.", "tokens": [50632, 309, 11, 597, 307, 733, 295, 10838, 13, 50722], "temperature": 0.0, "avg_logprob": -0.18345250838842148, "compression_ratio": 1.6498194945848375, "no_speech_prob": 0.05330771207809448}, {"id": 106, "seek": 41824, "start": 425.40000000000003, "end": 426.40000000000003, "text": " Wait, wait, wait.", "tokens": [50722, 3802, 11, 1699, 11, 1699, 13, 50772], "temperature": 0.0, "avg_logprob": -0.18345250838842148, "compression_ratio": 1.6498194945848375, "no_speech_prob": 0.05330771207809448}, {"id": 107, "seek": 41824, "start": 426.40000000000003, "end": 427.40000000000003, "text": " How would you do that?", "tokens": [50772, 1012, 576, 291, 360, 300, 30, 50822], "temperature": 0.0, "avg_logprob": -0.18345250838842148, "compression_ratio": 1.6498194945848375, "no_speech_prob": 0.05330771207809448}, {"id": 108, "seek": 41824, "start": 427.40000000000003, "end": 433.76, "text": " Well, in the case of molecule, so if you shine light on a molecule, let's take an infrared,", "tokens": [50822, 1042, 11, 294, 264, 1389, 295, 15582, 11, 370, 498, 291, 12207, 1442, 322, 257, 15582, 11, 718, 311, 747, 364, 30361, 11, 51140], "temperature": 0.0, "avg_logprob": -0.18345250838842148, "compression_ratio": 1.6498194945848375, "no_speech_prob": 0.05330771207809448}, {"id": 109, "seek": 41824, "start": 433.76, "end": 438.68, "text": " the molecule has each of the bonds absorbs the infrared differently in what we call", "tokens": [51140, 264, 15582, 575, 1184, 295, 264, 14713, 40745, 264, 30361, 7614, 294, 437, 321, 818, 51386], "temperature": 0.0, "avg_logprob": -0.18345250838842148, "compression_ratio": 1.6498194945848375, "no_speech_prob": 0.05330771207809448}, {"id": 110, "seek": 41824, "start": 438.68, "end": 440.56, "text": " the fingerprint region.", "tokens": [51386, 264, 30715, 4458, 13, 51480], "temperature": 0.0, "avg_logprob": -0.18345250838842148, "compression_ratio": 1.6498194945848375, "no_speech_prob": 0.05330771207809448}, {"id": 111, "seek": 41824, "start": 440.56, "end": 446.2, "text": " And so it's a bit like, and because it's quantized as well, you have all these discrete kind", "tokens": [51480, 400, 370, 309, 311, 257, 857, 411, 11, 293, 570, 309, 311, 4426, 1602, 382, 731, 11, 291, 362, 439, 613, 27706, 733, 51762], "temperature": 0.0, "avg_logprob": -0.18345250838842148, "compression_ratio": 1.6498194945848375, "no_speech_prob": 0.05330771207809448}, {"id": 112, "seek": 44620, "start": 446.2, "end": 447.96, "text": " of absorbences.", "tokens": [50364, 295, 7672, 1799, 887, 13, 50452], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 113, "seek": 44620, "start": 447.96, "end": 452.0, "text": " And my intuition after we realized we could cut molecules up in mass spec, that was the", "tokens": [50452, 400, 452, 24002, 934, 321, 5334, 321, 727, 1723, 13093, 493, 294, 2758, 1608, 11, 300, 390, 264, 50654], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 114, "seek": 44620, "start": 452.0, "end": 453.76, "text": " first go at this.", "tokens": [50654, 700, 352, 412, 341, 13, 50742], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 115, "seek": 44620, "start": 453.76, "end": 458.48, "text": " We did it with using infrared and the infrared gave us an even better correlation assembly", "tokens": [50742, 492, 630, 309, 365, 1228, 30361, 293, 264, 30361, 2729, 505, 364, 754, 1101, 20009, 12103, 50978], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 116, "seek": 44620, "start": 458.48, "end": 461.2, "text": " index and we used another technique as well.", "tokens": [50978, 8186, 293, 321, 1143, 1071, 6532, 382, 731, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 117, "seek": 44620, "start": 461.2, "end": 465.4, "text": " In addition to infrared called NMR, nuclear magnetic resonance, which tells you about", "tokens": [51114, 682, 4500, 281, 30361, 1219, 426, 21173, 11, 8179, 12688, 30944, 11, 597, 5112, 291, 466, 51324], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 118, "seek": 44620, "start": 465.4, "end": 468.15999999999997, "text": " the number of different magnetic environments in a molecule.", "tokens": [51324, 264, 1230, 295, 819, 12688, 12388, 294, 257, 15582, 13, 51462], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 119, "seek": 44620, "start": 468.15999999999997, "end": 469.32, "text": " And that also worked out.", "tokens": [51462, 400, 300, 611, 2732, 484, 13, 51520], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 120, "seek": 44620, "start": 469.32, "end": 475.7, "text": " So we have three techniques, which each of them independently gives us the same or tending", "tokens": [51520, 407, 321, 362, 1045, 7512, 11, 597, 1184, 295, 552, 21761, 2709, 505, 264, 912, 420, 256, 2029, 51839], "temperature": 0.0, "avg_logprob": -0.15252314931978056, "compression_ratio": 1.6806451612903226, "no_speech_prob": 0.0033741802908480167}, {"id": 121, "seek": 47570, "start": 475.7, "end": 479.21999999999997, "text": " towards the same assembly index for a molecule that we can calculate mathematically.", "tokens": [50364, 3030, 264, 912, 12103, 8186, 337, 257, 15582, 300, 321, 393, 8873, 44003, 13, 50540], "temperature": 0.0, "avg_logprob": -0.20330100103255805, "compression_ratio": 1.685483870967742, "no_speech_prob": 0.00040445118793286383}, {"id": 122, "seek": 47570, "start": 479.21999999999997, "end": 480.21999999999997, "text": " Okay.", "tokens": [50540, 1033, 13, 50590], "temperature": 0.0, "avg_logprob": -0.20330100103255805, "compression_ratio": 1.685483870967742, "no_speech_prob": 0.00040445118793286383}, {"id": 123, "seek": 47570, "start": 480.21999999999997, "end": 484.38, "text": " So these are all methods of mass spectrometry, mass spec.", "tokens": [50590, 407, 613, 366, 439, 7150, 295, 2758, 6177, 81, 34730, 11, 2758, 1608, 13, 50798], "temperature": 0.0, "avg_logprob": -0.20330100103255805, "compression_ratio": 1.685483870967742, "no_speech_prob": 0.00040445118793286383}, {"id": 124, "seek": 47570, "start": 484.38, "end": 489.06, "text": " You scan a molecule, it gives you data in the form of a mass spectrum.", "tokens": [50798, 509, 11049, 257, 15582, 11, 309, 2709, 291, 1412, 294, 264, 1254, 295, 257, 2758, 11143, 13, 51032], "temperature": 0.0, "avg_logprob": -0.20330100103255805, "compression_ratio": 1.685483870967742, "no_speech_prob": 0.00040445118793286383}, {"id": 125, "seek": 47570, "start": 489.06, "end": 493.7, "text": " And you're saying that the data correlates to the assembly index.", "tokens": [51032, 400, 291, 434, 1566, 300, 264, 1412, 13983, 1024, 281, 264, 12103, 8186, 13, 51264], "temperature": 0.0, "avg_logprob": -0.20330100103255805, "compression_ratio": 1.685483870967742, "no_speech_prob": 0.00040445118793286383}, {"id": 126, "seek": 47570, "start": 493.7, "end": 495.65999999999997, "text": " How generalizable is that shortcut?", "tokens": [51264, 1012, 2674, 22395, 307, 300, 24822, 30, 51362], "temperature": 0.0, "avg_logprob": -0.20330100103255805, "compression_ratio": 1.685483870967742, "no_speech_prob": 0.00040445118793286383}, {"id": 127, "seek": 47570, "start": 495.65999999999997, "end": 496.65999999999997, "text": " First of all, to chemistry.", "tokens": [51362, 2386, 295, 439, 11, 281, 12558, 13, 51412], "temperature": 0.0, "avg_logprob": -0.20330100103255805, "compression_ratio": 1.685483870967742, "no_speech_prob": 0.00040445118793286383}, {"id": 128, "seek": 47570, "start": 496.65999999999997, "end": 502.65999999999997, "text": " And second of all, beyond that, because that seems like a nice hack.", "tokens": [51412, 400, 1150, 295, 439, 11, 4399, 300, 11, 570, 300, 2544, 411, 257, 1481, 10339, 13, 51712], "temperature": 0.0, "avg_logprob": -0.20330100103255805, "compression_ratio": 1.685483870967742, "no_speech_prob": 0.00040445118793286383}, {"id": 129, "seek": 50266, "start": 502.66, "end": 506.22, "text": " And you're extremely knowledgeable about various aspects of chemistry.", "tokens": [50364, 400, 291, 434, 4664, 33800, 466, 3683, 7270, 295, 12558, 13, 50542], "temperature": 0.0, "avg_logprob": -0.19453682089751623, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.007575138006359339}, {"id": 130, "seek": 50266, "start": 506.22, "end": 512.58, "text": " So you can say, okay, it kind of correlates, but, you know, the whole idea behind assembly", "tokens": [50542, 407, 291, 393, 584, 11, 1392, 11, 309, 733, 295, 13983, 1024, 11, 457, 11, 291, 458, 11, 264, 1379, 1558, 2261, 12103, 50860], "temperature": 0.0, "avg_logprob": -0.19453682089751623, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.007575138006359339}, {"id": 131, "seek": 50266, "start": 512.58, "end": 520.34, "text": " theory paper and perhaps why it's so controversial is that it reaches bigger.", "tokens": [50860, 5261, 3035, 293, 4317, 983, 309, 311, 370, 17323, 307, 300, 309, 14235, 3801, 13, 51248], "temperature": 0.0, "avg_logprob": -0.19453682089751623, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.007575138006359339}, {"id": 132, "seek": 50266, "start": 520.34, "end": 524.86, "text": " It reaches for the bigger general theory of objects in the universe.", "tokens": [51248, 467, 14235, 337, 264, 3801, 2674, 5261, 295, 6565, 294, 264, 6445, 13, 51474], "temperature": 0.0, "avg_logprob": -0.19453682089751623, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.007575138006359339}, {"id": 133, "seek": 50266, "start": 524.86, "end": 527.1800000000001, "text": " Yeah, I'd say so, I'd agree.", "tokens": [51474, 865, 11, 286, 1116, 584, 370, 11, 286, 1116, 3986, 13, 51590], "temperature": 0.0, "avg_logprob": -0.19453682089751623, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.007575138006359339}, {"id": 134, "seek": 50266, "start": 527.1800000000001, "end": 531.82, "text": " So I've started assembly theory of emoticons with my lab, believe it or not.", "tokens": [51590, 407, 286, 600, 1409, 12103, 5261, 295, 3626, 299, 892, 365, 452, 2715, 11, 1697, 309, 420, 406, 13, 51822], "temperature": 0.0, "avg_logprob": -0.19453682089751623, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.007575138006359339}, {"id": 135, "seek": 53182, "start": 531.82, "end": 536.86, "text": " So we take emojis, pixelate them and work out the assembly index and emoji and then", "tokens": [50364, 407, 321, 747, 19611, 40371, 11, 19261, 473, 552, 293, 589, 484, 264, 12103, 8186, 293, 31595, 293, 550, 50616], "temperature": 0.0, "avg_logprob": -0.16329061190287272, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.08979139477014542}, {"id": 136, "seek": 53182, "start": 536.86, "end": 540.2600000000001, "text": " work out how many emojis you can make on the path of emoji.", "tokens": [50616, 589, 484, 577, 867, 19611, 40371, 291, 393, 652, 322, 264, 3100, 295, 31595, 13, 50786], "temperature": 0.0, "avg_logprob": -0.16329061190287272, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.08979139477014542}, {"id": 137, "seek": 53182, "start": 540.2600000000001, "end": 545.2600000000001, "text": " So there's the uber emoji from which all other emojis emerge.", "tokens": [50786, 407, 456, 311, 264, 344, 607, 31595, 490, 597, 439, 661, 19611, 40371, 21511, 13, 51036], "temperature": 0.0, "avg_logprob": -0.16329061190287272, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.08979139477014542}, {"id": 138, "seek": 53182, "start": 545.2600000000001, "end": 551.82, "text": " And then you can, so you can then take a photograph and by looking at the shortest path by reproducing", "tokens": [51036, 400, 550, 291, 393, 11, 370, 291, 393, 550, 747, 257, 8348, 293, 538, 1237, 412, 264, 31875, 3100, 538, 11408, 2175, 51364], "temperature": 0.0, "avg_logprob": -0.16329061190287272, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.08979139477014542}, {"id": 139, "seek": 53182, "start": 551.82, "end": 555.86, "text": " the pixels to make the image you want, you can measure that.", "tokens": [51364, 264, 18668, 281, 652, 264, 3256, 291, 528, 11, 291, 393, 3481, 300, 13, 51566], "temperature": 0.0, "avg_logprob": -0.16329061190287272, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.08979139477014542}, {"id": 140, "seek": 53182, "start": 555.86, "end": 559.5400000000001, "text": " So then you start to be able to take spatial data.", "tokens": [51566, 407, 550, 291, 722, 281, 312, 1075, 281, 747, 23598, 1412, 13, 51750], "temperature": 0.0, "avg_logprob": -0.16329061190287272, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.08979139477014542}, {"id": 141, "seek": 53182, "start": 559.5400000000001, "end": 561.22, "text": " Now there's some problems there.", "tokens": [51750, 823, 456, 311, 512, 2740, 456, 13, 51834], "temperature": 0.0, "avg_logprob": -0.16329061190287272, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.08979139477014542}, {"id": 142, "seek": 56122, "start": 561.22, "end": 563.26, "text": " What is then the definition of the object?", "tokens": [50364, 708, 307, 550, 264, 7123, 295, 264, 2657, 30, 50466], "temperature": 0.0, "avg_logprob": -0.1713718082593835, "compression_ratio": 1.6561264822134387, "no_speech_prob": 0.0057273441925644875}, {"id": 143, "seek": 56122, "start": 563.26, "end": 565.5400000000001, "text": " How many pixels?", "tokens": [50466, 1012, 867, 18668, 30, 50580], "temperature": 0.0, "avg_logprob": -0.1713718082593835, "compression_ratio": 1.6561264822134387, "no_speech_prob": 0.0057273441925644875}, {"id": 144, "seek": 56122, "start": 565.5400000000001, "end": 566.94, "text": " How do you break it down?", "tokens": [50580, 1012, 360, 291, 1821, 309, 760, 30, 50650], "temperature": 0.0, "avg_logprob": -0.1713718082593835, "compression_ratio": 1.6561264822134387, "no_speech_prob": 0.0057273441925644875}, {"id": 145, "seek": 56122, "start": 566.94, "end": 569.36, "text": " And so we're just learning all this right now.", "tokens": [50650, 400, 370, 321, 434, 445, 2539, 439, 341, 558, 586, 13, 50771], "temperature": 0.0, "avg_logprob": -0.1713718082593835, "compression_ratio": 1.6561264822134387, "no_speech_prob": 0.0057273441925644875}, {"id": 146, "seek": 56122, "start": 569.36, "end": 577.34, "text": " So how do you compute the, how would you begin to compute the assembly index of a graphical", "tokens": [50771, 407, 577, 360, 291, 14722, 264, 11, 577, 576, 291, 1841, 281, 14722, 264, 12103, 8186, 295, 257, 35942, 51170], "temperature": 0.0, "avg_logprob": -0.1713718082593835, "compression_ratio": 1.6561264822134387, "no_speech_prob": 0.0057273441925644875}, {"id": 147, "seek": 56122, "start": 577.34, "end": 581.94, "text": " like a set of pixels on a 2G plane that form a thing?", "tokens": [51170, 411, 257, 992, 295, 18668, 322, 257, 568, 38, 5720, 300, 1254, 257, 551, 30, 51400], "temperature": 0.0, "avg_logprob": -0.1713718082593835, "compression_ratio": 1.6561264822134387, "no_speech_prob": 0.0057273441925644875}, {"id": 148, "seek": 56122, "start": 581.94, "end": 585.1, "text": " So you would first of all determine the resolution.", "tokens": [51400, 407, 291, 576, 700, 295, 439, 6997, 264, 8669, 13, 51558], "temperature": 0.0, "avg_logprob": -0.1713718082593835, "compression_ratio": 1.6561264822134387, "no_speech_prob": 0.0057273441925644875}, {"id": 149, "seek": 56122, "start": 585.1, "end": 590.3000000000001, "text": " So then how many, what is your XY and what the number on the X and Y plane and then look", "tokens": [51558, 407, 550, 577, 867, 11, 437, 307, 428, 48826, 293, 437, 264, 1230, 322, 264, 1783, 293, 398, 5720, 293, 550, 574, 51818], "temperature": 0.0, "avg_logprob": -0.1713718082593835, "compression_ratio": 1.6561264822134387, "no_speech_prob": 0.0057273441925644875}, {"id": 150, "seek": 59030, "start": 590.3399999999999, "end": 591.8199999999999, "text": " at the surface area.", "tokens": [50366, 412, 264, 3753, 1859, 13, 50440], "temperature": 0.0, "avg_logprob": -0.19369269431905545, "compression_ratio": 1.7549019607843137, "no_speech_prob": 0.022254301235079765}, {"id": 151, "seek": 59030, "start": 591.8199999999999, "end": 595.5799999999999, "text": " And then you take all your emojis and make sure they're all looked at the same resolution.", "tokens": [50440, 400, 550, 291, 747, 439, 428, 19611, 40371, 293, 652, 988, 436, 434, 439, 2956, 412, 264, 912, 8669, 13, 50628], "temperature": 0.0, "avg_logprob": -0.19369269431905545, "compression_ratio": 1.7549019607843137, "no_speech_prob": 0.022254301235079765}, {"id": 152, "seek": 59030, "start": 595.5799999999999, "end": 601.6999999999999, "text": " And then we were basically then do the exactly the same thing we would do for cutting the", "tokens": [50628, 400, 550, 321, 645, 1936, 550, 360, 264, 2293, 264, 912, 551, 321, 576, 360, 337, 6492, 264, 50934], "temperature": 0.0, "avg_logprob": -0.19369269431905545, "compression_ratio": 1.7549019607843137, "no_speech_prob": 0.022254301235079765}, {"id": 153, "seek": 59030, "start": 601.6999999999999, "end": 602.6999999999999, "text": " bonds.", "tokens": [50934, 14713, 13, 50984], "temperature": 0.0, "avg_logprob": -0.19369269431905545, "compression_ratio": 1.7549019607843137, "no_speech_prob": 0.022254301235079765}, {"id": 154, "seek": 59030, "start": 602.6999999999999, "end": 608.8199999999999, "text": " You'd cut bits out of the emoji and look at them, you'd have a bag of pixels.", "tokens": [50984, 509, 1116, 1723, 9239, 484, 295, 264, 31595, 293, 574, 412, 552, 11, 291, 1116, 362, 257, 3411, 295, 18668, 13, 51290], "temperature": 0.0, "avg_logprob": -0.19369269431905545, "compression_ratio": 1.7549019607843137, "no_speech_prob": 0.022254301235079765}, {"id": 155, "seek": 59030, "start": 608.8199999999999, "end": 612.78, "text": " And you would then add those pixels together to make the overall emoji.", "tokens": [51290, 400, 291, 576, 550, 909, 729, 18668, 1214, 281, 652, 264, 4787, 31595, 13, 51488], "temperature": 0.0, "avg_logprob": -0.19369269431905545, "compression_ratio": 1.7549019607843137, "no_speech_prob": 0.022254301235079765}, {"id": 156, "seek": 61278, "start": 613.78, "end": 620.42, "text": " But like, first of all, not every pixels, I mean, this is at the core sort of machine", "tokens": [50414, 583, 411, 11, 700, 295, 439, 11, 406, 633, 18668, 11, 286, 914, 11, 341, 307, 412, 264, 4965, 1333, 295, 3479, 50746], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 157, "seek": 61278, "start": 620.42, "end": 623.66, "text": " learning and computer vision, not every pixel is that important.", "tokens": [50746, 2539, 293, 3820, 5201, 11, 406, 633, 19261, 307, 300, 1021, 13, 50908], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 158, "seek": 61278, "start": 623.66, "end": 627.66, "text": " And there's like macro features, there's a micro features and all that kind of stuff.", "tokens": [50908, 400, 456, 311, 411, 18887, 4122, 11, 456, 311, 257, 4532, 4122, 293, 439, 300, 733, 295, 1507, 13, 51108], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 159, "seek": 61278, "start": 627.66, "end": 628.66, "text": " Exactly.", "tokens": [51108, 7587, 13, 51158], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 160, "seek": 61278, "start": 628.66, "end": 631.8199999999999, "text": " Like, you know, the eyes appear in a lot of them.", "tokens": [51158, 1743, 11, 291, 458, 11, 264, 2575, 4204, 294, 257, 688, 295, 552, 13, 51316], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 161, "seek": 61278, "start": 631.8199999999999, "end": 634.42, "text": " The smile appears in a lot of them.", "tokens": [51316, 440, 7563, 7038, 294, 257, 688, 295, 552, 13, 51446], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 162, "seek": 61278, "start": 634.42, "end": 637.5799999999999, "text": " So in the same way in chemistry, we assume the bond is fundamental.", "tokens": [51446, 407, 294, 264, 912, 636, 294, 12558, 11, 321, 6552, 264, 6086, 307, 8088, 13, 51604], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 163, "seek": 61278, "start": 637.5799999999999, "end": 641.6999999999999, "text": " What we do and they're here is we assume the resolution at the scale at which we do it", "tokens": [51604, 708, 321, 360, 293, 436, 434, 510, 307, 321, 6552, 264, 8669, 412, 264, 4373, 412, 597, 321, 360, 309, 51810], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 164, "seek": 61278, "start": 641.6999999999999, "end": 642.6999999999999, "text": " is fundamental.", "tokens": [51810, 307, 8088, 13, 51860], "temperature": 0.0, "avg_logprob": -0.20715048733879537, "compression_ratio": 1.799283154121864, "no_speech_prob": 0.05741821229457855}, {"id": 165, "seek": 64270, "start": 642.74, "end": 645.22, "text": " And we're just working that out and that you're right, that will change, right?", "tokens": [50366, 400, 321, 434, 445, 1364, 300, 484, 293, 300, 291, 434, 558, 11, 300, 486, 1319, 11, 558, 30, 50490], "temperature": 0.0, "avg_logprob": -0.15382526888705716, "compression_ratio": 1.680672268907563, "no_speech_prob": 0.005209769122302532}, {"id": 166, "seek": 64270, "start": 645.22, "end": 649.0600000000001, "text": " Because as you take your lens out a bit, you it will change dramatically.", "tokens": [50490, 1436, 382, 291, 747, 428, 6765, 484, 257, 857, 11, 291, 309, 486, 1319, 17548, 13, 50682], "temperature": 0.0, "avg_logprob": -0.15382526888705716, "compression_ratio": 1.680672268907563, "no_speech_prob": 0.005209769122302532}, {"id": 167, "seek": 64270, "start": 649.0600000000001, "end": 654.3000000000001, "text": " But it but it's just a new way of looking at not just compression, what we do right", "tokens": [50682, 583, 309, 457, 309, 311, 445, 257, 777, 636, 295, 1237, 412, 406, 445, 19355, 11, 437, 321, 360, 558, 50944], "temperature": 0.0, "avg_logprob": -0.15382526888705716, "compression_ratio": 1.680672268907563, "no_speech_prob": 0.005209769122302532}, {"id": 168, "seek": 64270, "start": 654.3000000000001, "end": 662.86, "text": " now in computer science and data, one big kind of kind of misunderstanding is assembly", "tokens": [50944, 586, 294, 3820, 3497, 293, 1412, 11, 472, 955, 733, 295, 733, 295, 29227, 307, 12103, 51372], "temperature": 0.0, "avg_logprob": -0.15382526888705716, "compression_ratio": 1.680672268907563, "no_speech_prob": 0.005209769122302532}, {"id": 169, "seek": 64270, "start": 662.86, "end": 665.86, "text": " theory is telling you about how compressed the object is.", "tokens": [51372, 5261, 307, 3585, 291, 466, 577, 30353, 264, 2657, 307, 13, 51522], "temperature": 0.0, "avg_logprob": -0.15382526888705716, "compression_ratio": 1.680672268907563, "no_speech_prob": 0.005209769122302532}, {"id": 170, "seek": 64270, "start": 665.86, "end": 666.86, "text": " That's not right.", "tokens": [51522, 663, 311, 406, 558, 13, 51572], "temperature": 0.0, "avg_logprob": -0.15382526888705716, "compression_ratio": 1.680672268907563, "no_speech_prob": 0.005209769122302532}, {"id": 171, "seek": 66686, "start": 667.02, "end": 673.5, "text": " It's a how much information is required on a chain of events, because the nice thing", "tokens": [50372, 467, 311, 257, 577, 709, 1589, 307, 4739, 322, 257, 5021, 295, 3931, 11, 570, 264, 1481, 551, 50696], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 172, "seek": 66686, "start": 673.5, "end": 677.62, "text": " is if when you do compression in computer science, we're wondering a bit here, but", "tokens": [50696, 307, 498, 562, 291, 360, 19355, 294, 3820, 3497, 11, 321, 434, 6359, 257, 857, 510, 11, 457, 50902], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 173, "seek": 66686, "start": 677.62, "end": 682.58, "text": " it's kind of worth wondering, I think, in you, you assume you have instantaneous access", "tokens": [50902, 309, 311, 733, 295, 3163, 6359, 11, 286, 519, 11, 294, 291, 11, 291, 6552, 291, 362, 45596, 2105, 51150], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 174, "seek": 66686, "start": 682.58, "end": 684.22, "text": " to all the information in the memory.", "tokens": [51150, 281, 439, 264, 1589, 294, 264, 4675, 13, 51232], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 175, "seek": 66686, "start": 684.22, "end": 685.22, "text": " Yeah.", "tokens": [51232, 865, 13, 51282], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 176, "seek": 66686, "start": 685.22, "end": 687.78, "text": " The assembly theory, you say, no, you don't get access to that memory until you've done", "tokens": [51282, 440, 12103, 5261, 11, 291, 584, 11, 572, 11, 291, 500, 380, 483, 2105, 281, 300, 4675, 1826, 291, 600, 1096, 51410], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 177, "seek": 66686, "start": 687.78, "end": 688.78, "text": " the work.", "tokens": [51410, 264, 589, 13, 51460], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 178, "seek": 66686, "start": 688.78, "end": 692.3000000000001, "text": " And then you don't access that memory, you can have access, but not the next one.", "tokens": [51460, 400, 550, 291, 500, 380, 2105, 300, 4675, 11, 291, 393, 362, 2105, 11, 457, 406, 264, 958, 472, 13, 51636], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 179, "seek": 66686, "start": 692.3000000000001, "end": 696.82, "text": " And this is how in assembly theory, we talk about the four universes, the assembly universe", "tokens": [51636, 400, 341, 307, 577, 294, 12103, 5261, 11, 321, 751, 466, 264, 1451, 50168, 11, 264, 12103, 6445, 51862], "temperature": 0.0, "avg_logprob": -0.18606265061566618, "compression_ratio": 1.890728476821192, "no_speech_prob": 0.03833925724029541}, {"id": 180, "seek": 69682, "start": 697.3000000000001, "end": 701.98, "text": " the assembly possible, and the assembly contingent, and then the assembly observed.", "tokens": [50388, 264, 12103, 1944, 11, 293, 264, 12103, 27820, 317, 11, 293, 550, 264, 12103, 13095, 13, 50622], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 181, "seek": 69682, "start": 701.98, "end": 705.82, "text": " And they're all all scales in this combinatorial universe.", "tokens": [50622, 400, 436, 434, 439, 439, 17408, 294, 341, 2512, 31927, 831, 6445, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 182, "seek": 69682, "start": 705.82, "end": 706.82, "text": " Yeah.", "tokens": [50814, 865, 13, 50864], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 183, "seek": 69682, "start": 706.82, "end": 707.82, "text": " Can you explain each one of them?", "tokens": [50864, 1664, 291, 2903, 1184, 472, 295, 552, 30, 50914], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 184, "seek": 69682, "start": 707.82, "end": 708.82, "text": " Yeah.", "tokens": [50914, 865, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 185, "seek": 69682, "start": 708.82, "end": 713.58, "text": " So the assembly universe is like anything goes, just is just combinatorial kind of explosion", "tokens": [50964, 407, 264, 12103, 6445, 307, 411, 1340, 1709, 11, 445, 307, 445, 2512, 31927, 831, 733, 295, 15673, 51202], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 186, "seek": 69682, "start": 713.58, "end": 714.58, "text": " in everything.", "tokens": [51202, 294, 1203, 13, 51252], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 187, "seek": 69682, "start": 714.58, "end": 715.58, "text": " That's the biggest one.", "tokens": [51252, 663, 311, 264, 3880, 472, 13, 51302], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 188, "seek": 69682, "start": 715.58, "end": 717.22, "text": " That's the biggest one's massive.", "tokens": [51302, 663, 311, 264, 3880, 472, 311, 5994, 13, 51384], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 189, "seek": 69682, "start": 717.22, "end": 723.62, "text": " Assembly universe, assembly possible, assembly contingent, assembly observed.", "tokens": [51384, 20399, 6445, 11, 12103, 1944, 11, 12103, 27820, 317, 11, 12103, 13095, 13, 51704], "temperature": 0.0, "avg_logprob": -0.2168922252483196, "compression_ratio": 2.0473933649289098, "no_speech_prob": 0.032056163996458054}, {"id": 190, "seek": 72362, "start": 724.5, "end": 727.54, "text": " On the y-axis is assembly steps in time.", "tokens": [50408, 1282, 264, 288, 12, 24633, 307, 12103, 4439, 294, 565, 13, 50560], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 191, "seek": 72362, "start": 727.54, "end": 728.54, "text": " Yeah.", "tokens": [50560, 865, 13, 50610], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 192, "seek": 72362, "start": 728.54, "end": 734.9, "text": " And, you know, in the x-axis, as the thing expands through time, more and more unique", "tokens": [50610, 400, 11, 291, 458, 11, 294, 264, 2031, 12, 24633, 11, 382, 264, 551, 33706, 807, 565, 11, 544, 293, 544, 3845, 50928], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 193, "seek": 72362, "start": 734.9, "end": 736.42, "text": " objects appear.", "tokens": [50928, 6565, 4204, 13, 51004], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 194, "seek": 72362, "start": 736.42, "end": 739.42, "text": " So, yeah, so assembly universe, everything goes.", "tokens": [51004, 407, 11, 1338, 11, 370, 12103, 6445, 11, 1203, 1709, 13, 51154], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 195, "seek": 72362, "start": 739.42, "end": 740.42, "text": " Yep.", "tokens": [51154, 7010, 13, 51204], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 196, "seek": 72362, "start": 740.42, "end": 744.42, "text": " Assembly possible, laws of physics come in, in this case, in chemistry bonds.", "tokens": [51204, 20399, 1944, 11, 6064, 295, 10649, 808, 294, 11, 294, 341, 1389, 11, 294, 12558, 14713, 13, 51404], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 197, "seek": 72362, "start": 744.42, "end": 746.02, "text": " In assembly, so that means-", "tokens": [51404, 682, 12103, 11, 370, 300, 1355, 12, 51484], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 198, "seek": 72362, "start": 746.02, "end": 747.74, "text": " Those are actually constraints, I guess?", "tokens": [51484, 3950, 366, 767, 18491, 11, 286, 2041, 30, 51570], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 199, "seek": 72362, "start": 747.74, "end": 748.74, "text": " Yes.", "tokens": [51570, 1079, 13, 51620], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 200, "seek": 72362, "start": 748.74, "end": 749.74, "text": " And they're the only constraints.", "tokens": [51620, 400, 436, 434, 264, 787, 18491, 13, 51670], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 201, "seek": 72362, "start": 749.74, "end": 750.74, "text": " They're the constraints of the base.", "tokens": [51670, 814, 434, 264, 18491, 295, 264, 3096, 13, 51720], "temperature": 0.0, "avg_logprob": -0.270824462648422, "compression_ratio": 1.6798418972332017, "no_speech_prob": 0.00045812191092409194}, {"id": 202, "seek": 75074, "start": 750.74, "end": 753.66, "text": " The only way to look at it, you've got all your atoms, they're quantized, you can just", "tokens": [50364, 440, 787, 636, 281, 574, 412, 309, 11, 291, 600, 658, 439, 428, 16871, 11, 436, 434, 4426, 1602, 11, 291, 393, 445, 50510], "temperature": 0.0, "avg_logprob": -0.18701095867874032, "compression_ratio": 1.73, "no_speech_prob": 0.019695276394486427}, {"id": 203, "seek": 75074, "start": 753.66, "end": 754.66, "text": " bung them together.", "tokens": [50510, 50045, 552, 1214, 13, 50560], "temperature": 0.0, "avg_logprob": -0.18701095867874032, "compression_ratio": 1.73, "no_speech_prob": 0.019695276394486427}, {"id": 204, "seek": 75074, "start": 754.66, "end": 758.9, "text": " So then you can become a kind of, so in the way in computer science speak, I suppose the", "tokens": [50560, 407, 550, 291, 393, 1813, 257, 733, 295, 11, 370, 294, 264, 636, 294, 3820, 3497, 1710, 11, 286, 7297, 264, 50772], "temperature": 0.0, "avg_logprob": -0.18701095867874032, "compression_ratio": 1.73, "no_speech_prob": 0.019695276394486427}, {"id": 205, "seek": 75074, "start": 758.9, "end": 761.58, "text": " assembly universe is just like no laws of physics.", "tokens": [50772, 12103, 6445, 307, 445, 411, 572, 6064, 295, 10649, 13, 50906], "temperature": 0.0, "avg_logprob": -0.18701095867874032, "compression_ratio": 1.73, "no_speech_prob": 0.019695276394486427}, {"id": 206, "seek": 75074, "start": 761.58, "end": 765.5, "text": " Things can fly through mountains, beyond the speed of light.", "tokens": [50906, 9514, 393, 3603, 807, 10233, 11, 4399, 264, 3073, 295, 1442, 13, 51102], "temperature": 0.0, "avg_logprob": -0.18701095867874032, "compression_ratio": 1.73, "no_speech_prob": 0.019695276394486427}, {"id": 207, "seek": 75074, "start": 765.5, "end": 771.22, "text": " In the assembly possible, you have to apply the laws of physics, but you can get access", "tokens": [51102, 682, 264, 12103, 1944, 11, 291, 362, 281, 3079, 264, 6064, 295, 10649, 11, 457, 291, 393, 483, 2105, 51388], "temperature": 0.0, "avg_logprob": -0.18701095867874032, "compression_ratio": 1.73, "no_speech_prob": 0.019695276394486427}, {"id": 208, "seek": 75074, "start": 771.22, "end": 775.0600000000001, "text": " to all the motifs instantaneously with no effort.", "tokens": [51388, 281, 439, 264, 2184, 18290, 9836, 13131, 365, 572, 4630, 13, 51580], "temperature": 0.0, "avg_logprob": -0.18701095867874032, "compression_ratio": 1.73, "no_speech_prob": 0.019695276394486427}, {"id": 209, "seek": 75074, "start": 775.0600000000001, "end": 779.66, "text": " That means you could make anything, then the assembly contingent says no.", "tokens": [51580, 663, 1355, 291, 727, 652, 1340, 11, 550, 264, 12103, 27820, 317, 1619, 572, 13, 51810], "temperature": 0.0, "avg_logprob": -0.18701095867874032, "compression_ratio": 1.73, "no_speech_prob": 0.019695276394486427}, {"id": 210, "seek": 77966, "start": 779.66, "end": 783.4599999999999, "text": " You can't have access to the highly assembled object in the future until you've done the", "tokens": [50364, 509, 393, 380, 362, 2105, 281, 264, 5405, 24204, 2657, 294, 264, 2027, 1826, 291, 600, 1096, 264, 50554], "temperature": 0.0, "avg_logprob": -0.11417377471923829, "compression_ratio": 1.834710743801653, "no_speech_prob": 0.01000259816646576}, {"id": 211, "seek": 77966, "start": 783.4599999999999, "end": 789.5799999999999, "text": " work in the past on the causal chain, and that's really the really interesting shift", "tokens": [50554, 589, 294, 264, 1791, 322, 264, 38755, 5021, 11, 293, 300, 311, 534, 264, 534, 1880, 5513, 50860], "temperature": 0.0, "avg_logprob": -0.11417377471923829, "compression_ratio": 1.834710743801653, "no_speech_prob": 0.01000259816646576}, {"id": 212, "seek": 77966, "start": 789.5799999999999, "end": 794.2199999999999, "text": " where you go from assembly possible to assembly contingent.", "tokens": [50860, 689, 291, 352, 490, 12103, 1944, 281, 12103, 27820, 317, 13, 51092], "temperature": 0.0, "avg_logprob": -0.11417377471923829, "compression_ratio": 1.834710743801653, "no_speech_prob": 0.01000259816646576}, {"id": 213, "seek": 77966, "start": 794.2199999999999, "end": 798.98, "text": " That is really the key thing in assembly theory that says you cannot just have instantaneous", "tokens": [51092, 663, 307, 534, 264, 2141, 551, 294, 12103, 5261, 300, 1619, 291, 2644, 445, 362, 45596, 51330], "temperature": 0.0, "avg_logprob": -0.11417377471923829, "compression_ratio": 1.834710743801653, "no_speech_prob": 0.01000259816646576}, {"id": 214, "seek": 77966, "start": 798.98, "end": 801.02, "text": " access to all those memories.", "tokens": [51330, 2105, 281, 439, 729, 8495, 13, 51432], "temperature": 0.0, "avg_logprob": -0.11417377471923829, "compression_ratio": 1.834710743801653, "no_speech_prob": 0.01000259816646576}, {"id": 215, "seek": 77966, "start": 801.02, "end": 808.38, "text": " You have to have done the work somehow, the universe has to have somehow built a system", "tokens": [51432, 509, 362, 281, 362, 1096, 264, 589, 6063, 11, 264, 6445, 575, 281, 362, 6063, 3094, 257, 1185, 51800], "temperature": 0.0, "avg_logprob": -0.11417377471923829, "compression_ratio": 1.834710743801653, "no_speech_prob": 0.01000259816646576}, {"id": 216, "seek": 80838, "start": 808.42, "end": 812.98, "text": " that allows you to select that path rather than other paths.", "tokens": [50366, 300, 4045, 291, 281, 3048, 300, 3100, 2831, 813, 661, 14518, 13, 50594], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 217, "seek": 80838, "start": 812.98, "end": 818.54, "text": " And then the final thing the assembly observed is basically you're saying, oh, these are", "tokens": [50594, 400, 550, 264, 2572, 551, 264, 12103, 13095, 307, 1936, 291, 434, 1566, 11, 1954, 11, 613, 366, 50872], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 218, "seek": 80838, "start": 818.54, "end": 819.7, "text": " the things we actually see.", "tokens": [50872, 264, 721, 321, 767, 536, 13, 50930], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 219, "seek": 80838, "start": 819.7, "end": 826.02, "text": " We can go backwards now and understand that they have been created by this causal process.", "tokens": [50930, 492, 393, 352, 12204, 586, 293, 1223, 300, 436, 362, 668, 2942, 538, 341, 38755, 1399, 13, 51246], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 220, "seek": 80838, "start": 826.02, "end": 827.02, "text": " Wait a minute.", "tokens": [51246, 3802, 257, 3456, 13, 51296], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 221, "seek": 80838, "start": 827.02, "end": 832.18, "text": " So when you say the universe has to construct a system that does the work, is that like", "tokens": [51296, 407, 562, 291, 584, 264, 6445, 575, 281, 7690, 257, 1185, 300, 775, 264, 589, 11, 307, 300, 411, 51554], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 222, "seek": 80838, "start": 832.18, "end": 835.38, "text": " the environment that allows for like selection?", "tokens": [51554, 264, 2823, 300, 4045, 337, 411, 9450, 30, 51714], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 223, "seek": 80838, "start": 835.38, "end": 836.38, "text": " Yeah.", "tokens": [51714, 865, 13, 51764], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 224, "seek": 80838, "start": 836.38, "end": 837.82, "text": " That's the thing that does the selection.", "tokens": [51764, 663, 311, 264, 551, 300, 775, 264, 9450, 13, 51836], "temperature": 0.0, "avg_logprob": -0.205505138894786, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.024392057210206985}, {"id": 225, "seek": 83782, "start": 837.86, "end": 843.22, "text": " You could think about in terms of a von Neumann constructor versus a selection of ribosome,", "tokens": [50366, 509, 727, 519, 466, 294, 2115, 295, 257, 2957, 1734, 449, 969, 47479, 5717, 257, 9450, 295, 9162, 329, 423, 11, 50634], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 226, "seek": 83782, "start": 843.22, "end": 849.2600000000001, "text": " Tesla plant assembling Teslas, you know, the difference between the assembly universe in", "tokens": [50634, 13666, 3709, 43867, 12262, 7743, 11, 291, 458, 11, 264, 2649, 1296, 264, 12103, 6445, 294, 50936], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 227, "seek": 83782, "start": 849.2600000000001, "end": 854.3000000000001, "text": " Tesla land and the Tesla factory is everyone says no, Teslas are just easy.", "tokens": [50936, 13666, 2117, 293, 264, 13666, 9265, 307, 1518, 1619, 572, 11, 12262, 7743, 366, 445, 1858, 13, 51188], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 228, "seek": 83782, "start": 854.3000000000001, "end": 855.3000000000001, "text": " They just spring out.", "tokens": [51188, 814, 445, 5587, 484, 13, 51238], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 229, "seek": 83782, "start": 855.3000000000001, "end": 856.3000000000001, "text": " You know how I make them all.", "tokens": [51238, 509, 458, 577, 286, 652, 552, 439, 13, 51288], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 230, "seek": 83782, "start": 856.3000000000001, "end": 859.46, "text": " The Tesla factory, you have to put things in sequence and out comes a Tesla.", "tokens": [51288, 440, 13666, 9265, 11, 291, 362, 281, 829, 721, 294, 8310, 293, 484, 1487, 257, 13666, 13, 51446], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 231, "seek": 83782, "start": 859.46, "end": 860.82, "text": " So you're talking about the factory?", "tokens": [51446, 407, 291, 434, 1417, 466, 264, 9265, 30, 51514], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 232, "seek": 83782, "start": 860.82, "end": 861.82, "text": " Yes.", "tokens": [51514, 1079, 13, 51564], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 233, "seek": 83782, "start": 861.82, "end": 862.82, "text": " This is really nice.", "tokens": [51564, 639, 307, 534, 1481, 13, 51614], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 234, "seek": 83782, "start": 862.82, "end": 867.0200000000001, "text": " Super important point is that when I talk about the universe having a memory or there's", "tokens": [51614, 4548, 1021, 935, 307, 300, 562, 286, 751, 466, 264, 6445, 1419, 257, 4675, 420, 456, 311, 51824], "temperature": 0.0, "avg_logprob": -0.2290963850159576, "compression_ratio": 1.7346278317152104, "no_speech_prob": 0.0004169672029092908}, {"id": 235, "seek": 86702, "start": 867.02, "end": 874.3, "text": " some magic, it's not that it's that tells you that there must be a process encoded somewhere", "tokens": [50364, 512, 5585, 11, 309, 311, 406, 300, 309, 311, 300, 5112, 291, 300, 456, 1633, 312, 257, 1399, 2058, 12340, 4079, 50728], "temperature": 0.0, "avg_logprob": -0.14664172143051304, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.001548150321468711}, {"id": 236, "seek": 86702, "start": 874.3, "end": 879.9, "text": " in physical reality, be it a cell, a Tesla factory, or something else that is making", "tokens": [50728, 294, 4001, 4103, 11, 312, 309, 257, 2815, 11, 257, 13666, 9265, 11, 420, 746, 1646, 300, 307, 1455, 51008], "temperature": 0.0, "avg_logprob": -0.14664172143051304, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.001548150321468711}, {"id": 237, "seek": 86702, "start": 879.9, "end": 880.9, "text": " that object.", "tokens": [51008, 300, 2657, 13, 51058], "temperature": 0.0, "avg_logprob": -0.14664172143051304, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.001548150321468711}, {"id": 238, "seek": 86702, "start": 880.9, "end": 885.26, "text": " I'm not saying there's some kind of woo woo memory in the universe, you know, morphic", "tokens": [51058, 286, 478, 406, 1566, 456, 311, 512, 733, 295, 21657, 21657, 4675, 294, 264, 6445, 11, 291, 458, 11, 25778, 299, 51276], "temperature": 0.0, "avg_logprob": -0.14664172143051304, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.001548150321468711}, {"id": 239, "seek": 86702, "start": 885.26, "end": 886.42, "text": " resonance or something.", "tokens": [51276, 30944, 420, 746, 13, 51334], "temperature": 0.0, "avg_logprob": -0.14664172143051304, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.001548150321468711}, {"id": 240, "seek": 86702, "start": 886.42, "end": 893.46, "text": " I'm saying that there is an actual causal process that is being directed constrained", "tokens": [51334, 286, 478, 1566, 300, 456, 307, 364, 3539, 38755, 1399, 300, 307, 885, 12898, 38901, 51686], "temperature": 0.0, "avg_logprob": -0.14664172143051304, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.001548150321468711}, {"id": 241, "seek": 89346, "start": 893.46, "end": 894.9000000000001, "text": " in some way.", "tokens": [50364, 294, 512, 636, 13, 50436], "temperature": 0.0, "avg_logprob": -0.21399868556431362, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.44052231311798096}, {"id": 242, "seek": 89346, "start": 894.9000000000001, "end": 897.1800000000001, "text": " So it's not kind of just making everything.", "tokens": [50436, 407, 309, 311, 406, 733, 295, 445, 1455, 1203, 13, 50550], "temperature": 0.0, "avg_logprob": -0.21399868556431362, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.44052231311798096}, {"id": 243, "seek": 89346, "start": 897.1800000000001, "end": 903.86, "text": " Yeah, but Lee, what's the factory that made the factory?", "tokens": [50550, 865, 11, 457, 6957, 11, 437, 311, 264, 9265, 300, 1027, 264, 9265, 30, 50884], "temperature": 0.0, "avg_logprob": -0.21399868556431362, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.44052231311798096}, {"id": 244, "seek": 89346, "start": 903.86, "end": 910.5, "text": " So what is the, so first of all, you assume the laws of physics is just sprung to existence", "tokens": [50884, 407, 437, 307, 264, 11, 370, 700, 295, 439, 11, 291, 6552, 264, 6064, 295, 10649, 307, 445, 6103, 1063, 281, 9123, 51216], "temperature": 0.0, "avg_logprob": -0.21399868556431362, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.44052231311798096}, {"id": 245, "seek": 89346, "start": 910.5, "end": 912.22, "text": " at the beginning.", "tokens": [51216, 412, 264, 2863, 13, 51302], "temperature": 0.0, "avg_logprob": -0.21399868556431362, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.44052231311798096}, {"id": 246, "seek": 89346, "start": 912.22, "end": 916.4200000000001, "text": " Those are constraints, but what makes the factory the environment that does the selection?", "tokens": [51302, 3950, 366, 18491, 11, 457, 437, 1669, 264, 9265, 264, 2823, 300, 775, 264, 9450, 30, 51512], "temperature": 0.0, "avg_logprob": -0.21399868556431362, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.44052231311798096}, {"id": 247, "seek": 89346, "start": 916.4200000000001, "end": 921.6600000000001, "text": " This is the question or, well, it's the first interesting question that I want to answer", "tokens": [51512, 639, 307, 264, 1168, 420, 11, 731, 11, 309, 311, 264, 700, 1880, 1168, 300, 286, 528, 281, 1867, 51774], "temperature": 0.0, "avg_logprob": -0.21399868556431362, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.44052231311798096}, {"id": 248, "seek": 92166, "start": 921.86, "end": 923.18, "text": " out of four.", "tokens": [50374, 484, 295, 1451, 13, 50440], "temperature": 0.0, "avg_logprob": -0.18976559462370696, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.097882479429245}, {"id": 249, "seek": 92166, "start": 923.18, "end": 928.26, "text": " I think the factory emerges in the environment, the interplay between the environment and", "tokens": [50440, 286, 519, 264, 9265, 38965, 294, 264, 2823, 11, 264, 728, 2858, 1296, 264, 2823, 293, 50694], "temperature": 0.0, "avg_logprob": -0.18976559462370696, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.097882479429245}, {"id": 250, "seek": 92166, "start": 928.26, "end": 931.54, "text": " the objects that are being built.", "tokens": [50694, 264, 6565, 300, 366, 885, 3094, 13, 50858], "temperature": 0.0, "avg_logprob": -0.18976559462370696, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.097882479429245}, {"id": 251, "seek": 92166, "start": 931.54, "end": 935.54, "text": " And here, let me, I'll have a go explain to you the shortest path.", "tokens": [50858, 400, 510, 11, 718, 385, 11, 286, 603, 362, 257, 352, 2903, 281, 291, 264, 31875, 3100, 13, 51058], "temperature": 0.0, "avg_logprob": -0.18976559462370696, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.097882479429245}, {"id": 252, "seek": 92166, "start": 935.54, "end": 938.18, "text": " So why is the shortest path important?", "tokens": [51058, 407, 983, 307, 264, 31875, 3100, 1021, 30, 51190], "temperature": 0.0, "avg_logprob": -0.18976559462370696, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.097882479429245}, {"id": 253, "seek": 92166, "start": 938.18, "end": 942.62, "text": " Imagine you've got, I'm going to have to go chemistry for a moment and abstract it.", "tokens": [51190, 11739, 291, 600, 658, 11, 286, 478, 516, 281, 362, 281, 352, 12558, 337, 257, 1623, 293, 12649, 309, 13, 51412], "temperature": 0.0, "avg_logprob": -0.18976559462370696, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.097882479429245}, {"id": 254, "seek": 92166, "start": 942.62, "end": 949.14, "text": " So imagine you've got an environment, a given environment that you have a budget of atoms,", "tokens": [51412, 407, 3811, 291, 600, 658, 364, 2823, 11, 257, 2212, 2823, 300, 291, 362, 257, 4706, 295, 16871, 11, 51738], "temperature": 0.0, "avg_logprob": -0.18976559462370696, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.097882479429245}, {"id": 255, "seek": 94914, "start": 949.14, "end": 954.58, "text": " you're just flinging together, and the, the objective of those atoms that being flung", "tokens": [50364, 291, 434, 445, 932, 8716, 1214, 11, 293, 264, 11, 264, 10024, 295, 729, 16871, 300, 885, 932, 1063, 50636], "temperature": 0.0, "avg_logprob": -0.1788783222436905, "compression_ratio": 1.956, "no_speech_prob": 0.003702164627611637}, {"id": 256, "seek": 94914, "start": 954.58, "end": 959.9, "text": " together and say molecule A have to make, they have it, they decompose.", "tokens": [50636, 1214, 293, 584, 15582, 316, 362, 281, 652, 11, 436, 362, 309, 11, 436, 22867, 541, 13, 50902], "temperature": 0.0, "avg_logprob": -0.1788783222436905, "compression_ratio": 1.956, "no_speech_prob": 0.003702164627611637}, {"id": 257, "seek": 94914, "start": 959.9, "end": 962.06, "text": " So molecules decompose over time.", "tokens": [50902, 407, 13093, 22867, 541, 670, 565, 13, 51010], "temperature": 0.0, "avg_logprob": -0.1788783222436905, "compression_ratio": 1.956, "no_speech_prob": 0.003702164627611637}, {"id": 258, "seek": 94914, "start": 962.06, "end": 968.3, "text": " So the molecules in this environment, in this magic environment have to not die, but they", "tokens": [51010, 407, 264, 13093, 294, 341, 2823, 11, 294, 341, 5585, 2823, 362, 281, 406, 978, 11, 457, 436, 51322], "temperature": 0.0, "avg_logprob": -0.1788783222436905, "compression_ratio": 1.956, "no_speech_prob": 0.003702164627611637}, {"id": 259, "seek": 94914, "start": 968.3, "end": 969.3, "text": " do die.", "tokens": [51322, 360, 978, 13, 51372], "temperature": 0.0, "avg_logprob": -0.1788783222436905, "compression_ratio": 1.956, "no_speech_prob": 0.003702164627611637}, {"id": 260, "seek": 94914, "start": 969.3, "end": 970.86, "text": " There's a, there's a, they have a half life.", "tokens": [51372, 821, 311, 257, 11, 456, 311, 257, 11, 436, 362, 257, 1922, 993, 13, 51450], "temperature": 0.0, "avg_logprob": -0.1788783222436905, "compression_ratio": 1.956, "no_speech_prob": 0.003702164627611637}, {"id": 261, "seek": 94914, "start": 970.86, "end": 974.22, "text": " So the only way the molecules can get through that environment out the other side, let's", "tokens": [51450, 407, 264, 787, 636, 264, 13093, 393, 483, 807, 300, 2823, 484, 264, 661, 1252, 11, 718, 311, 51618], "temperature": 0.0, "avg_logprob": -0.1788783222436905, "compression_ratio": 1.956, "no_speech_prob": 0.003702164627611637}, {"id": 262, "seek": 94914, "start": 974.22, "end": 978.18, "text": " pretend the environment is a box and go in and out without dying.", "tokens": [51618, 11865, 264, 2823, 307, 257, 2424, 293, 352, 294, 293, 484, 1553, 8639, 13, 51816], "temperature": 0.0, "avg_logprob": -0.1788783222436905, "compression_ratio": 1.956, "no_speech_prob": 0.003702164627611637}, {"id": 263, "seek": 97818, "start": 978.18, "end": 984.54, "text": " And there's a, there's just an infinite supply of atoms coming or a, well, a large supply.", "tokens": [50364, 400, 456, 311, 257, 11, 456, 311, 445, 364, 13785, 5847, 295, 16871, 1348, 420, 257, 11, 731, 11, 257, 2416, 5847, 13, 50682], "temperature": 0.0, "avg_logprob": -0.20293271806504992, "compression_ratio": 1.6355140186915889, "no_speech_prob": 0.01688394695520401}, {"id": 264, "seek": 97818, "start": 984.54, "end": 991.5799999999999, "text": " The molecule gets built, but the molecule that is able to template itself being built", "tokens": [50682, 440, 15582, 2170, 3094, 11, 457, 264, 15582, 300, 307, 1075, 281, 12379, 2564, 885, 3094, 51034], "temperature": 0.0, "avg_logprob": -0.20293271806504992, "compression_ratio": 1.6355140186915889, "no_speech_prob": 0.01688394695520401}, {"id": 265, "seek": 97818, "start": 991.5799999999999, "end": 997.02, "text": " and survives in the environment will, will basically reign supreme.", "tokens": [51034, 293, 46231, 294, 264, 2823, 486, 11, 486, 1936, 20350, 27756, 13, 51306], "temperature": 0.0, "avg_logprob": -0.20293271806504992, "compression_ratio": 1.6355140186915889, "no_speech_prob": 0.01688394695520401}, {"id": 266, "seek": 97818, "start": 997.02, "end": 1002.9799999999999, "text": " Now let's say that that molecule takes 10 steps now, and it, and it's using a finite", "tokens": [51306, 823, 718, 311, 584, 300, 300, 15582, 2516, 1266, 4439, 586, 11, 293, 309, 11, 293, 309, 311, 1228, 257, 19362, 51604], "temperature": 0.0, "avg_logprob": -0.20293271806504992, "compression_ratio": 1.6355140186915889, "no_speech_prob": 0.01688394695520401}, {"id": 267, "seek": 97818, "start": 1002.9799999999999, "end": 1005.02, "text": " set of atoms, right?", "tokens": [51604, 992, 295, 16871, 11, 558, 30, 51706], "temperature": 0.0, "avg_logprob": -0.20293271806504992, "compression_ratio": 1.6355140186915889, "no_speech_prob": 0.01688394695520401}, {"id": 268, "seek": 100502, "start": 1005.02, "end": 1009.98, "text": " Now let's say another molecule, smart ass molecule, we'll call it comes in and can survive", "tokens": [50364, 823, 718, 311, 584, 1071, 15582, 11, 4069, 1256, 15582, 11, 321, 603, 818, 309, 1487, 294, 293, 393, 7867, 50612], "temperature": 0.0, "avg_logprob": -0.16429922921316964, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.0033749183639883995}, {"id": 269, "seek": 100502, "start": 1009.98, "end": 1016.6999999999999, "text": " in that environment and can copy itself, but it only needs five steps.", "tokens": [50612, 294, 300, 2823, 293, 393, 5055, 2564, 11, 457, 309, 787, 2203, 1732, 4439, 13, 50948], "temperature": 0.0, "avg_logprob": -0.16429922921316964, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.0033749183639883995}, {"id": 270, "seek": 100502, "start": 1016.6999999999999, "end": 1020.3, "text": " The molecule that only needs five steps because it's continued, both molecules are being destroyed,", "tokens": [50948, 440, 15582, 300, 787, 2203, 1732, 4439, 570, 309, 311, 7014, 11, 1293, 13093, 366, 885, 8937, 11, 51128], "temperature": 0.0, "avg_logprob": -0.16429922921316964, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.0033749183639883995}, {"id": 271, "seek": 100502, "start": 1020.3, "end": 1023.46, "text": " but they're creating themselves faster, they can be destroyed.", "tokens": [51128, 457, 436, 434, 4084, 2969, 4663, 11, 436, 393, 312, 8937, 13, 51286], "temperature": 0.0, "avg_logprob": -0.16429922921316964, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.0033749183639883995}, {"id": 272, "seek": 100502, "start": 1023.46, "end": 1027.86, "text": " You can see that the shortest path reigns supreme.", "tokens": [51286, 509, 393, 536, 300, 264, 31875, 3100, 20350, 82, 27756, 13, 51506], "temperature": 0.0, "avg_logprob": -0.16429922921316964, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.0033749183639883995}, {"id": 273, "seek": 100502, "start": 1027.86, "end": 1033.06, "text": " So the shortest path tells us something super interesting about the minimal amount of information", "tokens": [51506, 407, 264, 31875, 3100, 5112, 505, 746, 1687, 1880, 466, 264, 13206, 2372, 295, 1589, 51766], "temperature": 0.0, "avg_logprob": -0.16429922921316964, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.0033749183639883995}, {"id": 274, "seek": 103306, "start": 1033.06, "end": 1038.26, "text": " required to propagate that motif in time and space.", "tokens": [50364, 4739, 281, 48256, 300, 39478, 294, 565, 293, 1901, 13, 50624], "temperature": 0.0, "avg_logprob": -0.1596463680267334, "compression_ratio": 1.7621145374449338, "no_speech_prob": 0.05249565839767456}, {"id": 275, "seek": 103306, "start": 1038.26, "end": 1042.1, "text": " And it's just like a kind of, it seems to be like some kind of conservation law.", "tokens": [50624, 400, 309, 311, 445, 411, 257, 733, 295, 11, 309, 2544, 281, 312, 411, 512, 733, 295, 16185, 2101, 13, 50816], "temperature": 0.0, "avg_logprob": -0.1596463680267334, "compression_ratio": 1.7621145374449338, "no_speech_prob": 0.05249565839767456}, {"id": 276, "seek": 103306, "start": 1042.1, "end": 1049.1, "text": " So one of the intuitions you have is the propagation of motifs in time will be done by the things", "tokens": [50816, 407, 472, 295, 264, 16224, 626, 291, 362, 307, 264, 38377, 295, 2184, 18290, 294, 565, 486, 312, 1096, 538, 264, 721, 51166], "temperature": 0.0, "avg_logprob": -0.1596463680267334, "compression_ratio": 1.7621145374449338, "no_speech_prob": 0.05249565839767456}, {"id": 277, "seek": 103306, "start": 1049.1, "end": 1054.54, "text": " that can construct themselves in the shortest path.", "tokens": [51166, 300, 393, 7690, 2969, 294, 264, 31875, 3100, 13, 51438], "temperature": 0.0, "avg_logprob": -0.1596463680267334, "compression_ratio": 1.7621145374449338, "no_speech_prob": 0.05249565839767456}, {"id": 278, "seek": 103306, "start": 1054.54, "end": 1059.58, "text": " So like you can assume that most of the objects in the universe are built in the shortest,", "tokens": [51438, 407, 411, 291, 393, 6552, 300, 881, 295, 264, 6565, 294, 264, 6445, 366, 3094, 294, 264, 31875, 11, 51690], "temperature": 0.0, "avg_logprob": -0.1596463680267334, "compression_ratio": 1.7621145374449338, "no_speech_prob": 0.05249565839767456}, {"id": 279, "seek": 103306, "start": 1059.58, "end": 1063.02, "text": " in the most efficient way.", "tokens": [51690, 294, 264, 881, 7148, 636, 13, 51862], "temperature": 0.0, "avg_logprob": -0.1596463680267334, "compression_ratio": 1.7621145374449338, "no_speech_prob": 0.05249565839767456}, {"id": 280, "seek": 106302, "start": 1063.98, "end": 1065.54, "text": " Big leap I just took there.", "tokens": [50412, 5429, 19438, 286, 445, 1890, 456, 13, 50490], "temperature": 0.0, "avg_logprob": -0.20856254577636718, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.0019865394569933414}, {"id": 281, "seek": 106302, "start": 1065.54, "end": 1068.9, "text": " Yeah, no, yes and no, because there are other things.", "tokens": [50490, 865, 11, 572, 11, 2086, 293, 572, 11, 570, 456, 366, 661, 721, 13, 50658], "temperature": 0.0, "avg_logprob": -0.20856254577636718, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.0019865394569933414}, {"id": 282, "seek": 106302, "start": 1068.9, "end": 1073.3, "text": " So in the limit, yes, because you want to tell the difference between things that have", "tokens": [50658, 407, 294, 264, 4948, 11, 2086, 11, 570, 291, 528, 281, 980, 264, 2649, 1296, 721, 300, 362, 50878], "temperature": 0.0, "avg_logprob": -0.20856254577636718, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.0019865394569933414}, {"id": 283, "seek": 106302, "start": 1073.3, "end": 1081.06, "text": " required a factory to build them and just random processes, but you can find instances", "tokens": [50878, 4739, 257, 9265, 281, 1322, 552, 293, 445, 4974, 7555, 11, 457, 291, 393, 915, 14519, 51266], "temperature": 0.0, "avg_logprob": -0.20856254577636718, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.0019865394569933414}, {"id": 284, "seek": 106302, "start": 1081.06, "end": 1088.1399999999999, "text": " where the shortest path isn't taken for an individual object, an individual function.", "tokens": [51266, 689, 264, 31875, 3100, 1943, 380, 2726, 337, 364, 2609, 2657, 11, 364, 2609, 2445, 13, 51620], "temperature": 0.0, "avg_logprob": -0.20856254577636718, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.0019865394569933414}, {"id": 285, "seek": 106302, "start": 1088.1399999999999, "end": 1091.46, "text": " And people go, ah, that means the shortest path isn't right.", "tokens": [51620, 400, 561, 352, 11, 3716, 11, 300, 1355, 264, 31875, 3100, 1943, 380, 558, 13, 51786], "temperature": 0.0, "avg_logprob": -0.20856254577636718, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.0019865394569933414}, {"id": 286, "seek": 109146, "start": 1091.46, "end": 1097.7, "text": " And then I say, well, I don't know, I think it's right still because, so of course, because", "tokens": [50364, 400, 550, 286, 584, 11, 731, 11, 286, 500, 380, 458, 11, 286, 519, 309, 311, 558, 920, 570, 11, 370, 295, 1164, 11, 570, 50676], "temperature": 0.0, "avg_logprob": -0.1634094655012884, "compression_ratio": 1.7529411764705882, "no_speech_prob": 0.0019864265341311693}, {"id": 287, "seek": 109146, "start": 1097.7, "end": 1100.5, "text": " there are other driving forces, it's not just one molecule.", "tokens": [50676, 456, 366, 661, 4840, 5874, 11, 309, 311, 406, 445, 472, 15582, 13, 50816], "temperature": 0.0, "avg_logprob": -0.1634094655012884, "compression_ratio": 1.7529411764705882, "no_speech_prob": 0.0019864265341311693}, {"id": 288, "seek": 109146, "start": 1100.5, "end": 1105.3, "text": " Now when you start to, now you start to consider two objects, you have a joint assembly space", "tokens": [50816, 823, 562, 291, 722, 281, 11, 586, 291, 722, 281, 1949, 732, 6565, 11, 291, 362, 257, 7225, 12103, 1901, 51056], "temperature": 0.0, "avg_logprob": -0.1634094655012884, "compression_ratio": 1.7529411764705882, "no_speech_prob": 0.0019864265341311693}, {"id": 289, "seek": 109146, "start": 1105.3, "end": 1110.3400000000001, "text": " and it's not, now it's a compromise between not just making A and B in the shortest path.", "tokens": [51056, 293, 309, 311, 406, 11, 586, 309, 311, 257, 18577, 1296, 406, 445, 1455, 316, 293, 363, 294, 264, 31875, 3100, 13, 51308], "temperature": 0.0, "avg_logprob": -0.1634094655012884, "compression_ratio": 1.7529411764705882, "no_speech_prob": 0.0019864265341311693}, {"id": 290, "seek": 109146, "start": 1110.3400000000001, "end": 1115.38, "text": " You want to make A and B in the shortest path, which might mean that A is slightly longer,", "tokens": [51308, 509, 528, 281, 652, 316, 293, 363, 294, 264, 31875, 3100, 11, 597, 1062, 914, 300, 316, 307, 4748, 2854, 11, 51560], "temperature": 0.0, "avg_logprob": -0.1634094655012884, "compression_ratio": 1.7529411764705882, "no_speech_prob": 0.0019864265341311693}, {"id": 291, "seek": 109146, "start": 1115.38, "end": 1116.38, "text": " you have compromise.", "tokens": [51560, 291, 362, 18577, 13, 51610], "temperature": 0.0, "avg_logprob": -0.1634094655012884, "compression_ratio": 1.7529411764705882, "no_speech_prob": 0.0019864265341311693}, {"id": 292, "seek": 111638, "start": 1116.46, "end": 1122.7800000000002, "text": " So when you see slightly more nesting in the construction, when you take a given object,", "tokens": [50368, 407, 562, 291, 536, 4748, 544, 297, 8714, 294, 264, 6435, 11, 562, 291, 747, 257, 2212, 2657, 11, 50684], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 293, "seek": 111638, "start": 1122.7800000000002, "end": 1127.2600000000002, "text": " that can look longer, but that's because the overall function is the object is still trying", "tokens": [50684, 300, 393, 574, 2854, 11, 457, 300, 311, 570, 264, 4787, 2445, 307, 264, 2657, 307, 920, 1382, 50908], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 294, "seek": 111638, "start": 1127.2600000000002, "end": 1128.2600000000002, "text": " to be efficient.", "tokens": [50908, 281, 312, 7148, 13, 50958], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 295, "seek": 111638, "start": 1128.2600000000002, "end": 1128.7800000000002, "text": " Yeah.", "tokens": [50958, 865, 13, 50984], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 296, "seek": 111638, "start": 1128.7800000000002, "end": 1135.5, "text": " And this is still very hand wavy and maybe have no legs to stand on, but we think we're", "tokens": [50984, 400, 341, 307, 920, 588, 1011, 261, 15498, 293, 1310, 362, 572, 5668, 281, 1463, 322, 11, 457, 321, 519, 321, 434, 51320], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 297, "seek": 111638, "start": 1135.5, "end": 1136.5400000000002, "text": " getting somewhere with that.", "tokens": [51320, 1242, 4079, 365, 300, 13, 51372], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 298, "seek": 111638, "start": 1136.5400000000002, "end": 1138.22, "text": " And there's probably some parallelization.", "tokens": [51372, 400, 456, 311, 1391, 512, 8952, 2144, 13, 51456], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 299, "seek": 111638, "start": 1138.7800000000002, "end": 1139.0200000000002, "text": " Yeah.", "tokens": [51484, 865, 13, 51496], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 300, "seek": 111638, "start": 1139.0200000000002, "end": 1139.5, "text": " Right?", "tokens": [51496, 1779, 30, 51520], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 301, "seek": 111638, "start": 1139.5, "end": 1141.42, "text": " So this is all, this is not sequential.", "tokens": [51520, 407, 341, 307, 439, 11, 341, 307, 406, 42881, 13, 51616], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 302, "seek": 111638, "start": 1141.42, "end": 1144.22, "text": " The building is, I guess.", "tokens": [51616, 440, 2390, 307, 11, 286, 2041, 13, 51756], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 303, "seek": 111638, "start": 1144.22, "end": 1144.8600000000001, "text": " No, you're right.", "tokens": [51756, 883, 11, 291, 434, 558, 13, 51788], "temperature": 0.0, "avg_logprob": -0.20034107179132127, "compression_ratio": 1.6487455197132617, "no_speech_prob": 0.0029792501591145992}, {"id": 304, "seek": 114486, "start": 1145.4199999999998, "end": 1149.5, "text": " When you're talking about complex objects, you don't have to work sequentially.", "tokens": [50392, 1133, 291, 434, 1417, 466, 3997, 6565, 11, 291, 500, 380, 362, 281, 589, 5123, 3137, 13, 50596], "temperature": 0.0, "avg_logprob": -0.12091957126651798, "compression_ratio": 1.742537313432836, "no_speech_prob": 0.001500390120781958}, {"id": 305, "seek": 114486, "start": 1149.5, "end": 1150.4599999999998, "text": " You can work in parallel.", "tokens": [50596, 509, 393, 589, 294, 8952, 13, 50644], "temperature": 0.0, "avg_logprob": -0.12091957126651798, "compression_ratio": 1.742537313432836, "no_speech_prob": 0.001500390120781958}, {"id": 306, "seek": 114486, "start": 1150.4599999999998, "end": 1152.06, "text": " You can get your friends together and they can.", "tokens": [50644, 509, 393, 483, 428, 1855, 1214, 293, 436, 393, 13, 50724], "temperature": 0.0, "avg_logprob": -0.12091957126651798, "compression_ratio": 1.742537313432836, "no_speech_prob": 0.001500390120781958}, {"id": 307, "seek": 114486, "start": 1152.06, "end": 1152.3, "text": " Yeah.", "tokens": [50724, 865, 13, 50736], "temperature": 0.0, "avg_logprob": -0.12091957126651798, "compression_ratio": 1.742537313432836, "no_speech_prob": 0.001500390120781958}, {"id": 308, "seek": 114486, "start": 1153.5, "end": 1158.4599999999998, "text": " The thing we're working on right now is how to understand these parallel processes.", "tokens": [50796, 440, 551, 321, 434, 1364, 322, 558, 586, 307, 577, 281, 1223, 613, 8952, 7555, 13, 51044], "temperature": 0.0, "avg_logprob": -0.12091957126651798, "compression_ratio": 1.742537313432836, "no_speech_prob": 0.001500390120781958}, {"id": 309, "seek": 114486, "start": 1158.4599999999998, "end": 1162.3, "text": " Now there's a new thing we've introduced called assembly depth.", "tokens": [51044, 823, 456, 311, 257, 777, 551, 321, 600, 7268, 1219, 12103, 7161, 13, 51236], "temperature": 0.0, "avg_logprob": -0.12091957126651798, "compression_ratio": 1.742537313432836, "no_speech_prob": 0.001500390120781958}, {"id": 310, "seek": 114486, "start": 1163.1, "end": 1169.6599999999999, "text": " And assembly depth can be lower than the assembly index for a molecule when they're", "tokens": [51276, 400, 12103, 7161, 393, 312, 3126, 813, 264, 12103, 8186, 337, 257, 15582, 562, 436, 434, 51604], "temperature": 0.0, "avg_logprob": -0.12091957126651798, "compression_ratio": 1.742537313432836, "no_speech_prob": 0.001500390120781958}, {"id": 311, "seek": 114486, "start": 1169.6599999999999, "end": 1173.5, "text": " cooperating together, because exactly this parallel processing is going on.", "tokens": [51604, 13414, 990, 1214, 11, 570, 2293, 341, 8952, 9007, 307, 516, 322, 13, 51796], "temperature": 0.0, "avg_logprob": -0.12091957126651798, "compression_ratio": 1.742537313432836, "no_speech_prob": 0.001500390120781958}, {"id": 312, "seek": 117350, "start": 1174.3, "end": 1178.3, "text": " And my team have been working this out in the last few weeks because we're looking at", "tokens": [50404, 400, 452, 1469, 362, 668, 1364, 341, 484, 294, 264, 1036, 1326, 3259, 570, 321, 434, 1237, 412, 50604], "temperature": 0.0, "avg_logprob": -0.1447218517924464, "compression_ratio": 1.6710097719869708, "no_speech_prob": 0.003819505451247096}, {"id": 313, "seek": 117350, "start": 1178.3, "end": 1182.22, "text": " what compromises does nature need to make when it's making molecules in a cell?", "tokens": [50604, 437, 11482, 3598, 775, 3687, 643, 281, 652, 562, 309, 311, 1455, 13093, 294, 257, 2815, 30, 50800], "temperature": 0.0, "avg_logprob": -0.1447218517924464, "compression_ratio": 1.6710097719869708, "no_speech_prob": 0.003819505451247096}, {"id": 314, "seek": 117350, "start": 1183.1, "end": 1190.94, "text": " And I wonder if, you know, I may be like, well, I'm always leaping out of my composites,", "tokens": [50844, 400, 286, 2441, 498, 11, 291, 458, 11, 286, 815, 312, 411, 11, 731, 11, 286, 478, 1009, 19438, 278, 484, 295, 452, 10199, 3324, 11, 51236], "temperature": 0.0, "avg_logprob": -0.1447218517924464, "compression_ratio": 1.6710097719869708, "no_speech_prob": 0.003819505451247096}, {"id": 315, "seek": 117350, "start": 1190.94, "end": 1191.9, "text": " but in economics.", "tokens": [51236, 457, 294, 14564, 13, 51284], "temperature": 0.0, "avg_logprob": -0.1447218517924464, "compression_ratio": 1.6710097719869708, "no_speech_prob": 0.003819505451247096}, {"id": 316, "seek": 117350, "start": 1191.9, "end": 1194.3, "text": " I'm just wondering if you could apply this in the economic process.", "tokens": [51284, 286, 478, 445, 6359, 498, 291, 727, 3079, 341, 294, 264, 4836, 1399, 13, 51404], "temperature": 0.0, "avg_logprob": -0.1447218517924464, "compression_ratio": 1.6710097719869708, "no_speech_prob": 0.003819505451247096}, {"id": 317, "seek": 117350, "start": 1194.3, "end": 1198.62, "text": " It seems like capitalism is very good at finding shortest path, you know, every time.", "tokens": [51404, 467, 2544, 411, 19704, 307, 588, 665, 412, 5006, 31875, 3100, 11, 291, 458, 11, 633, 565, 13, 51620], "temperature": 0.0, "avg_logprob": -0.1447218517924464, "compression_ratio": 1.6710097719869708, "no_speech_prob": 0.003819505451247096}, {"id": 318, "seek": 117350, "start": 1198.62, "end": 1201.82, "text": " But there are ludicrous things that happen because actually the cost function has been", "tokens": [51620, 583, 456, 366, 15946, 299, 21189, 721, 300, 1051, 570, 767, 264, 2063, 2445, 575, 668, 51780], "temperature": 0.0, "avg_logprob": -0.1447218517924464, "compression_ratio": 1.6710097719869708, "no_speech_prob": 0.003819505451247096}, {"id": 319, "seek": 120182, "start": 1201.82, "end": 1202.9399999999998, "text": " minimized.", "tokens": [50364, 4464, 1602, 13, 50420], "temperature": 0.0, "avg_logprob": -0.09936874668772627, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0006453359965234995}, {"id": 320, "seek": 120182, "start": 1202.9399999999998, "end": 1207.58, "text": " And so I keep seeing parallels everywhere where there are complex nested systems,", "tokens": [50420, 400, 370, 286, 1066, 2577, 44223, 5315, 689, 456, 366, 3997, 15646, 292, 3652, 11, 50652], "temperature": 0.0, "avg_logprob": -0.09936874668772627, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0006453359965234995}, {"id": 321, "seek": 120182, "start": 1207.58, "end": 1212.1399999999999, "text": " where if you give it enough time and you introduce a bit of heterogeneity,", "tokens": [50652, 689, 498, 291, 976, 309, 1547, 565, 293, 291, 5366, 257, 857, 295, 20789, 23360, 507, 11, 50880], "temperature": 0.0, "avg_logprob": -0.09936874668772627, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0006453359965234995}, {"id": 322, "seek": 120182, "start": 1212.1399999999999, "end": 1214.7, "text": " the system readjusts and finds a new shortest path.", "tokens": [50880, 264, 1185, 1401, 3424, 82, 293, 10704, 257, 777, 31875, 3100, 13, 51008], "temperature": 0.0, "avg_logprob": -0.09936874668772627, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0006453359965234995}, {"id": 323, "seek": 120182, "start": 1214.7, "end": 1217.8999999999999, "text": " But the shortest path isn't fixed on just one molecule now.", "tokens": [51008, 583, 264, 31875, 3100, 1943, 380, 6806, 322, 445, 472, 15582, 586, 13, 51168], "temperature": 0.0, "avg_logprob": -0.09936874668772627, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0006453359965234995}, {"id": 324, "seek": 120182, "start": 1217.8999999999999, "end": 1221.74, "text": " It's in the actual existence of the object over time.", "tokens": [51168, 467, 311, 294, 264, 3539, 9123, 295, 264, 2657, 670, 565, 13, 51360], "temperature": 0.0, "avg_logprob": -0.09936874668772627, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0006453359965234995}, {"id": 325, "seek": 120182, "start": 1221.74, "end": 1225.4199999999998, "text": " And that object could be a city, it could be a cell, it could be a factory.", "tokens": [51360, 400, 300, 2657, 727, 312, 257, 2307, 11, 309, 727, 312, 257, 2815, 11, 309, 727, 312, 257, 9265, 13, 51544], "temperature": 0.0, "avg_logprob": -0.09936874668772627, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0006453359965234995}, {"id": 326, "seek": 120182, "start": 1225.4199999999998, "end": 1229.02, "text": " But I think we're going way beyond molecules and my competence,", "tokens": [51544, 583, 286, 519, 321, 434, 516, 636, 4399, 13093, 293, 452, 39965, 11, 51724], "temperature": 0.0, "avg_logprob": -0.09936874668772627, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0006453359965234995}, {"id": 327, "seek": 122902, "start": 1229.02, "end": 1230.3799999999999, "text": " probably should go back to molecules.", "tokens": [50368, 1391, 820, 352, 646, 281, 13093, 13, 50432], "temperature": 0.0, "avg_logprob": -0.33166966438293455, "compression_ratio": 0.8222222222222222, "no_speech_prob": 0.173359677195549}], "language": "en"}