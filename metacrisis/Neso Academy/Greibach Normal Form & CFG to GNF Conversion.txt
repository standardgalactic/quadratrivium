In the last lecture we have studied about Chomsky normal form and we have also studied
how to convert a given CFG to Chomsky normal form.
So in this lecture we will be studying about another normal form which is known as the
Greback normal form which I see what is this and we will also see how to convert a given
context-free grammar to Greback normal form.
Alright, so let's see what is a Greback normal form.
A context-free grammar is in Greback normal form if the productions are in the following
forms.
A gives B or A gives B, C1, C2 up till Cn where A, C1 till Cn are non-terminals and
B is a terminal symbol.
So if you have a production of this form where A which is a non-terminal symbol gives B which
is a terminal symbol this is in Greback normal form or if you have a production of this form
where a non-terminal symbol A gives a terminal symbol followed by a set of non-terminal symbols
then also it is in Greback normal form.
So if you have productions of these two forms then they are said to be in Greback normal
form and if they are not in this form then they are not in Greback normal form.
So now we shall see the steps that we need to follow in order to convert a given CFG
to its equivalent Greback normal form.
So here we have the steps that we need in order to convert a given CFG to GNF.
So step number one, check if the given CFG has unit productions or null productions and
remove if there are any.
So you have to first check in the given CFG are there any unit productions or null productions.
If you don't know what are these I request you to watch the previous videos where I have
discussed about unit productions and null productions and also we have discussed how
to remove the unit productions and null productions in one of the previous lectures.
So you can watch that and using that technique you have to remove any unit productions or
null productions that are present.
Alright so step number two, check whether the CFG is already in Chomsky normal form and
convert it to Chomsky normal form if it is not.
So you have to check that the given CFG is it already in Chomsky normal form or not and
if you don't know about Chomsky normal form I advise you to watch the previous lecture
where we have discussed about Chomsky normal form and we have also discussed the steps
that we need to follow in order to convert a given context free grammar to Chomsky normal
form.
So in step two we have to check whether the given CFG is already in Chomsky normal form
and if it is not you have to convert it using the technique that we have discussed in the
previous lecture and then step three says change the names of the non-terminal symbols
into sum a of i in ascending order of i.
Now what do we mean by this?
We will see this using an example.
Alright so here we have an example where we have a context free grammar given and the
productions are of this form S gives CA and also BB, B gives small b and also SB, C gives
small b and A gives small a.
So here the capital letters denote the non-terminal symbols and then the small letters they denote
the terminal symbols.
So let us just see step number one we have to check if there are any unit productions
or null productions.
If you see that in these productions there are no unit productions or null productions.
So step one we don't have to do it and step number two says check whether it is already
in Chomsky normal form.
So if you remember the rules that we need to follow in order to check whether a given
context free grammar is in Chomsky normal form and using that if we see we see that
this is already in Chomsky normal form.
So step two also is done.
Now step three says change the names of the non-terminal symbols into some a of i in ascending
order of i.
Now how do we do this?
For doing this we see that we have the non-terminal symbols SC, A, B in these productions and
all this we have to replace it with some a of i and let's see how we can do this.
So here we will replace S with A1 and then C with A2 and then A with A3 and B with A4.
So this is how we will replace the names of these non-terminal symbols using A of i where
i is from 1 to 4 for this particular example.
Now you cannot just randomly give any names to these non-terminal symbols but you have
to follow it in ascending order starting from the very first production.
So it's not that you just see S okay let me call it A of 1 and then here I have B so
let me call it A of 2 it's not like that you have to first see the production the first
production and you have to follow it in the correct order.
So here we have S so I call it A of 1 and then the next one is C I call it A of 2, A
I call it A of 3 and B I call it A of 4 and if you come to the next production it's
B we have already defined what is B and the next one is S as also we have already given
the name and then C and A also we have already given.
So we have to replace the variables like this in ascending order.
Now let's see what will be the equivalent production that we get after we replace these
non-terminal symbols with these names A1, A2, A3 and A4.
So this is what we get A1 gives A2, A3 and A4, A4.
So if you see why did we get this S was A1 that is why I wrote here A1, C was A2 that
is why it's A2 here and A was A3 that is why it's A3 here and both B swear A4 that's
why you got A4, A4 here and the rest of the things also when we replace it this is what
we get.
Now let's see what is the next step.
Step number 4 it says alter the rules so that the non-terminals are in ascending order such
that if the production is of the form ai gives ajx then i should always be less than j and
it should never be greater than or equal to j.
I should never be greater than or equal to j.
So what do we mean by this?
Let us look at this production.
If you are taking this production let's see and try to put it in the form of ai gives
ajx.
So here what is our ai it is A1 and what is our aj it is A2 and you have to just look
at the first variable and the next one that follows it.
You don't have to worry about the things after that.
So here your i is 1 and your j is 2.
So our rule says that i should always be less than j it should always be in ascending order.
So let us see if it is the case here or not.
So here i is 1 and j is 2 i is definitely less than j 1 is less than 2.
So it is following the rule which is mentioned over here and let us see for the next one
A1 gives A4 A4 so you have to just look at A1 and this A4 over here.
So here i is 1 and j is 4 so 1 is less than 4 it is also in ascending order so it is following
the rule that is mentioned in step number 4.
So we are fine with this first production and now let us check for the second production.
Here it says A4 gives B. So what about this one?
So when I already told you about the rules of grid back normal form in the beginning
of this lecture we saw that if a non-terminal symbol directly gives a terminal symbol then
that is already in grid back normal form.
So this part is already in grid back normal form you don't have to worry.
So now we have to look at this part.
So in this part it says A4 gives A1 A4.
Now let us see if it is following step number 4 or not.
So here your i is 4 and j is 1.
So here we see that i is greater than j 4 is greater than 1.
So we already said in step number 4 the rule said that it should never be greater than
or equal to j.
It is not following the rule that is mentioned in step number 4.
So we need to resolve this portion.
Now let's see how we can resolve it.
We have to resolve it by replacing the problematic variable with some other values.
So let's see how we can do that.
So here let me just write down the rule that is causing the problem.
It is A4 gives B A1 A4.
Now if you look at this the problem is caused by this A1 over here.
So what I will do is I will replace this A1 with some other value.
Now what is that some other value with which I can replace A1?
I have to replace it with the value of A1 that is given over here.
So let us replace it and see if it is going to follow the rule or not.
So I will write A4 it gives.
Now this B I will write it as it is and then instead of A1 I will write A2 A3 and A4 A4.
So first let me write this one A2 A3.
So I will write A2 A3 and this A4 which is here I have to write it down as it is A4.
And also it gives A4 A4.
So instead of this A1 I will put A4 A4 A4 A4 and this A4 which is here I will write
it down as it is A4.
Alright so now we have this production.
Now let us see if it is following the rules that was mentioned in step 4 or not.
A4 gives B that is fine.
Now A4 gives A2 A3 A4.
Now let us check here our I is 4 and our J is 2.
Again we see that I which is 4 is greater than J which is 2.
So this is not allowed.
So it is still not following the rule of step number 4.
So what I will do is I will replace the value of A2 because this was the variable that is
causing the problem.
I will replace the value of A2 with some other value in order to make it follow rule number
4.
So what is the value of A2 with which I can replace it?
A2 gives B. Now let me try to replace A2 with B.
So this A4 let me write it A4 it gives B this B as it is and instead of A2 I will write
B now.
B and the rest of the things I will write as it is A3 A4 and this part also I will write
it as it is A4 A4 A4.
Now let us see if it is following our rules or not.
So here we see that A4 gives B okay that is fine and A4 gives B A3 A4.
Now if you remember the rules of grayback normal form if a non-terminal symbol gives
a terminal symbol followed by anything then that is in grayback normal form.
So let me just take you up there once.
So if you see here a CFG is in grayback normal form if it is giving a terminal symbol directly
or if it gives a terminal symbol followed by any other variables then also it is in grayback
normal form.
So we see that this part is in grayback normal form now B and B A3 A4 are already in grayback
normal form.
Now we have to check this part it says A4 gives A4 A4 A4 here our I is 4 and J is also
4.
So here we are getting a condition a situation where I is equal to J so that is also not
allowed in step 4 it says it should never be I is greater than or equal to J.
So here we are getting a condition where I and J are equal so when we get this what
we have to do when we get this kind of condition this kind of condition is known as left recursion.
So our step number 5 is to remove the left recursion.
So there are certain steps that we need to follow in order to remove left recursions
and that we will be discussing in the next lecture.
So I hope this was clear to you so you have to follow steps number 1 2 4 in order to convert
a given CFG to its equivalent grayback normal form and now it is not complete because we
have encountered a left recursion over here and in the next lecture we will be discussing
how to remove the left recursion and after removing the left recursion what we get will
be the CFG that is completely converted to its equivalent grayback normal form.
So thank you for watching this and see you in the next one where we will be discussing
about removal of left recursions.
