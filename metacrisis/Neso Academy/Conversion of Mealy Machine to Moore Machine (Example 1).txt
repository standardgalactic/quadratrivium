In the last lecture, we have studied how to convert Mealy machine to Moore machine and
in this lecture, we will see another example of conversion of Mealy machine to Moore machine.
Okay, so here is our example.
Given below is a Mealy machine that prints one whenever the sequence AA or BB is encountered
in any input binary string from sigma star where sigma equal to AB.
Find the equivalent Moore machine for it.
So we have a Mealy machine given here and we already designed this in one of our previous
lectures and what this Mealy machine does is that it will print one whenever the sequence
AA or BB is encountered in any input binary string.
So we have input binary strings from A and B and whenever this sequence AA or BB is encountered
it will print a one.
So we have this and we have to design the Moore machine for this.
So before we start, let's make clear what are our inputs and outputs.
Here my inputs are A and B and what are our outputs, our outputs are 0 and 1.
So always make sure what are your inputs and outputs before you start.
Okay, now let's try to design the equivalent Moore machine for this and since this is a
Mealy machine we see that the outputs are associated to the transitions.
Now we have to associate all these outputs from the transition to the states in order
to convert it to a Moore machine.
So first of all we start with the starting state.
What is our starting state?
Our starting state or initial state is A. A is my starting state or the initial state.
And let's see, A on getting input small a and on small b, where does it go and what
is the output that it gives?
A on getting input small a, it goes to b and what is the output associated to it?
It is 0.
So what I will do?
I will send A to state B. Okay, I will make a state B here and I will send this A to B
and when does it go?
It goes when it gets the input small a.
And the output that was associated is 0.
So this 0 will be associated to this state B over here now.
So this B gives output 0.
Now A on getting input small b, where does it go?
It goes to state C.
So I will make state C over here.
This is state C and A goes to C.
When does it go to C?
On getting input small b.
And the output associated was 0 and it was going to C.
So I will associate this output 0 to state C over here now.
Okay, so here C as the output 0.
So now let's come to state B. B on getting input small a, where does it go?
It goes to B itself and it gives the output 1.
So if I send B to B itself over here on getting this input small a, I have to associate this
output 1 to B over here.
But I cannot do that.
Why?
Because I already have an output that is 0 associated to this state B over here.
So I cannot do this.
So what I have to do in this case, I have to create another state for B, which I will call
it B1 and let this be B0.
So I will call this state B1 and I will associate the output 1 to it and I will say that B goes
to this B, which gives an output 1 on getting the input small a.
Now let's see what happens to state B when it gets the input small b.
On getting the input small b, B goes to state C and the output associated to C should be
0.
So I can send it to this C over here because this C already has the output 0 associated
to it.
So I will send B to this state C when it gets the input small b.
Now let's come to this state C.
When getting input small a, where does it go?
It goes to B and it is associated to the output 0.
So what I can do, I can send this C to this B over here when it gets the input small a
because output 0 is already associated to this B over here.
And what I want is an output 0.
So I can send this C to this B over here when it gets the input small a.
Now what happens to C when it gets the input small b?
When C gets the input small b, it stays in C itself and should give the output 1.
But I cannot make this C go to C itself on getting this input small b because I have
to associate output 1 to it.
But here I already have an output 0 associated to it.
So in this case what I have to do, I have to create another state for C which I will
call state C1 and let this be C0.
This will be my state C1 and I will associate the output 1 to this.
And I will send this C to this state C over here on getting input small b.
So we see C on getting input small b, it goes to C itself, it's going to C itself and output
associated should be 1 or what associated is 1.
So we have completed for this A, B and C.
Are we done?
No, we are not done.
Why?
Because we created two new states over here B1 and C1 and we did not specify what happens
to B1 and C1 when they get input A and B.
So let's complete this.
So in order to check for this state B1, since this is also a state of B, you have to use
the state B from this millimachine to check for this also.
So B on getting input small a what happens?
It stays in B itself and should give output 1.
So I can make this stay in this B itself on getting input small a.
Why?
Because output associated should be 1 and this 1 is already there in this state B1.
Okay.
And on input small b what happens to B?
On input small b, B goes to C and should have output 0 associated to it.
So do I have a state C with 0 associated to it?
Yes.
I have a state C here with output 0 associated to it over here.
So I have to send this B to this C over here because it has a output 0 associated to it
and when does it go?
On getting the input small b.
Okay so we are done with state B1.
Now let's come to state C1.
So in order to check for state C1 we have to use this state C over here.
So C on getting input small a what happens?
It goes to B and it should give an output 0.
So do we have a B which gives an output 0?
Yes we have it and it is here.
So I will send this state C to this B over here when it gets the input small a.
Now what happens to state C when it gets input small b?
When state C gets the input small b it stays in C itself and should give output 1.
So here I have a C which gives the output 1.
So I can make it stay in this C itself when it gets the input small b and the output should
be 1.
Output is 1 in this state.
So now we have completed the Moore machine for this Milley machine.
So this is the equivalent Moore machine for this.
So if you look at this Moore machine you see that the outputs are associated to the states
which is the property of Moore machine.
So if you look carefully you see that all the states over here they have an output associated
with it but the state a did not get any output and why is that?
That is because in this Milley machine we see that there are no incoming edges to state
a.
Only outgoing edges were there.
That is why the state a did not get any output.
So in order to complete this Moore machine you can give an output to a as well and what
output shall we give?
I will give the output 0.
Let me just give the output 0 to a and why is that?
I don't want to give the output 1 because I want to print the output 1 only when a or
bb sequences encounter that will be only here and here.
So in the starting state itself we are sure that we will never get a sequence a or bb.
So we will give a 0 to this starting state a.
Okay now that completes the Moore machine and now let us take a few examples and check
if this is working.
So let's say we have the string aa itself.
It starts with starting state a and a prints the output 0 and gets the input small a.
On small a it goes to b, b prints the output 0 and the next input is small a again.
We are in state b and when it gets small a it goes to this b, b1 and it prints the output
1.
Okay so we see that here aa was encountered so 1 was printed.
Alright so let's see if we get bb what happens if we get bb we start with starting state
a, a gives the output 0 and when we get the first input b a goes to the state c0 which
prints an output 0 and the next input we get is b again in c0 if we get a b again it goes
to c1 and c1 gives the output 1.
So here we see that the sequence bb was encountered so 1 was printed.
So let's say if we get another sequence like a, b starting with starting state a which
prints 0 and on getting input small a it goes to b0 which prints 0 and we get the next input
b in b0 so when b0 gets input b where does it go it goes to c0 and what does c0 print
c0 prints 0.
So this is the output we get and we see that there was no a, a or bb sequence encountered
in this input it was a, b so there are no 1s printed.
So you can check for even longer strings whenever you encounter the sequence a, a or bb in anywhere
in this string then the output 1 will be printed.
So this is the Mooloo machine that we get from this Mealy machine.
So I hope it was clear to you thank you for watching and see you in the next one.
