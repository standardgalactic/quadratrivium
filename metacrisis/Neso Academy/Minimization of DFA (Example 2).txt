In the previous lecture, I have taught you about minimization of DFA and also we have
seen an example in the previous lecture in which I explained in detail the step-by-step
instructions that you have to follow in order to minimize a DFA.
So in this lecture, we have another example where we have to construct a minimum DFA equivalent
to the DFA described by this.
So here we have a DFA which has 8 states q02, q7 and our task is to design a minimum
DFA equivalent to this.
That means we have to design a DFA that works exactly like this but we want to have a minimum
number of states.
So how do we do this?
We do this by starting off by writing the equivalence, starting from zero equivalence.
Now how do I write the zero equivalence?
Writing zero equivalence is very simple.
Make two sets in which the first set will contain all the non-final states and the second
set will contain all the final states.
So here what are my non-final states?
q0, q1, q3, q4, q5, q6 and q7.
And what are my final states?
I have only one final state here which is q2, this one.
So I put it in another set.
So we are done with zero equivalence and the second one is one equivalence.
Now how do we write the one equivalence?
For writing the one equivalence you have to use this row of zero equivalence and check
if the states in the same set are one equivalent to each other or not.
And how do you do it?
You take two states and you check where do they go in getting inputs, zero and one.
And if they go to the states contained in the same set then they are one equivalent,
otherwise they are not.
Let's see how to do this.
Let me check q0 and q1.
q0 and q1, on getting input zero they go to q1 and q6, q1 and q6 fall in the same set
so it is fine.
And on getting input one where do they go?
They go to q5 and q2, q5 is in this set but q2 is in another set.
So they cannot be one equivalent to each other, q0 and q1 cannot be one equivalent.
So I will make a separate set for q1 over here.
Now let me check q3.
So q3 and q0, this q3 and q0 on getting input zero where do they go?
They go to q1 and q2, q1 is in this set and q2 is in another set.
So it is clear from the first step itself that q0 and q3 are not one equivalent.
Now let me check if q1 and q3 are one equivalent.
q1 and q3 on getting input zero they go to q6 and q2, q6 is in this set, q2 is in another
set.
So q3 and q1 cannot be one equivalent.
So I have to make a separate set for q3 also.
Now let me check q4, q4 let me check it with q0, q0 and q4 on getting input zero they
go to q1 and q7, q1 and q7 fall in the same set so it is fine.
Now on getting input one where do they go?
q0 goes to q5 and q4 goes to q5.
So they are the same state.
So again it is fine and hence we can say that q0 and q4 are one equivalent, q4 are one
equivalent and now let me check for q5.
Now q5 I can check with either q0 or q4 because these two are already one equivalent to each
other.
So if it is one equivalent to either of them it will be equivalent with both of them.
So let me just check q4 and q5.
q4 and q5 on getting input zero they go to q7 and q2.
q7 is in this set, q2 is in another set so they cannot be one equivalent.
So let me check it with q1, q5 and q1.
q1 on getting input zero goes to q6 and q5 goes to q2.
q6 and q2 fall in different sets so they cannot be one equivalent to each other.
So let me check it with q3, q3 and q5.
q3 and q5 on input zero they go to q2, q2, same state, same set fine and on input one
where do they go?
q6, q6 again same state so it is fine.
So we can say that q3 and q5 are one equivalent to each other.
So if you check for q6 and q7 you can find that q6 will be one equivalent to q0, q4
and q7 will be one equivalent with q1.
If you solve this you can just get this and remaining one is q2 so I will put it in another
set q2.
So this will be what you get if you continue to solve it.
Now our next step is the two equivalents.
Now how do I write the two equivalents?
Writing two equivalents you have to use this rows of one equivalents for checking.
So how do I do?
I have to check if the states in the same set are two equivalent to each other.
So let me check for q0 and q4, q0 and q4 on getting input zero they go to q1, q7, q1
and q7 fall in the same set it is fine and on input one where do they go?
They go to q5 and q5 same states so it is fine.
So we can say q0 and q4 are two equivalent to each other, q0 and q4 are two equivalent.
Now let me check for q6 if it is still two equivalent to q4 and q0 so I can just check
it with q4, q4 and q6 on input zero it goes to q7 and this goes to q6, q7 is here but
q6 is here they are in separate sets so I cannot put q6 along with these two anymore.
q6 will form a separate set by itself because it is not two equivalent to q0 or q4.
So in the same way if you check for this you will find that q1 and q7 they are two equivalent
to each other and also q3 and q5 also are two equivalent to each other and q2 will stay
by itself as it is.
So we finish two equivalents and the next step that we have to do is three equivalents.
Three equivalents and how do you do three equivalents?
In order to check for three equivalents you have to use this row of two equivalents and
check if these states in the same set are three equivalent to each other or not.
So let me check for q0 and q4, q0 and q4 on getting input zero they go to q1, q7, q1
and q7 are in the same set it's fine and when you put one way do they go q5 and q5, q5 and
q5 are same states so q0 and q4 are three equivalent to each other.
So that is how you do for three equivalents by checking this row.
So in the same way if you continue you will find that you will get q6 over here then you
will also find that q1 and q7 are three equivalent to each other in the same way you will also
find that q3 and q5 are three equivalent to each other and also q2 will come here as it
is.
And now if you look observe carefully you can see that the row of two equivalents and
three equivalents are the same there is no change.
So when you see that two consecutive steps are not having any change then it is time
to stop the procedure this is your final step you don't have to continue further.
So we can make the new DFA for this and here how many states do we have this is one state
two state three state four state five states so we have five states so this will be the
new five states that we will be having in the minimized version of our DFA.
So here I will draw the new DFA over here but before that let me copy down this original
table over here so that we can refer that to fill up the next table.
So here I have my original DFA which was there in the question and then here I have made
this table for our new minimized DFA.
So my states here are q0, q4 which is here then q6, q1, q7, q3, q5 and q2.
So I have written the states here and we notice that in an original DFA q0 was my initial
state so in this DFA the state that contains q0 that is q0, q4 will be my initial state
or the starting state and here q2 was my final state so here also q2 is my final state.
So let's see where does this states go on getting input 0 and 1 q0 and q4 and getting
input 0 where do they go?
You can just check this by either checking q0 or q4 because both q0 and q4 are here.
So on getting input 0 where does q0 go?
It goes to q1 so it will go to q1.
So what is q1 in my new state?
In my new state q1 is the state q1, q7.
So instead of q1 I will write q1, q7 and on getting input 1 where does it go?
It goes to q5.
And instead of q5 what I have to write is q3, q5.
The state that contains q5 is q3, q5.
Now q6 where does it go?
q6 on getting input 0 it goes to q6 itself.
Here also q6 is my q6 itself and on getting input 1 it goes to q4.
So instead of q4 what I have to write q0, q4 the state that contains q4.
So in the same way if you fill up this table you can see that q1, q7 on getting input 0
it goes to q6 and on getting input 1 it goes to q2 and q3, q5 on getting input 0 it goes
to q2 and on getting input 1 it goes to q6 and q2 on getting input 0 it goes to q0, q4
and on getting input 1 it goes to q2.
So here I have the minimized DFA for this DFA.
So in the original one we had 8 states but here I have only 1, 2, 3, 4, 5 states and
if you check the working you will find that both the workings of this DFS are exactly
the same.
So this is how you construct the minimum DFA.
So I hope this was clear to you.
So see you in the next lecture with another example.
