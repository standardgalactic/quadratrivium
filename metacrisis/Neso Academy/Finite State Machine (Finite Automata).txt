Hello everyone, welcome to the next lecture in theory of computation and in this lecture
we will be studying about finite state machines.
Alright so let's get started.
So finite state machines, it is also known as finite automata and this finite automata
is divided into two broad categories.
The first one being finite automata with output and the second one being finite automata
without output.
And finite automata with output we again have two categories namely moody machine and milley
machine and in finite automata without output we have three categories namely deterministic
finite automata or DFA, non-deterministic finite automata or NFA and epsilon non-deterministic
finite automata or epsilon NFA.
Alright so in this lecture we will be mainly focusing and studying about our deterministic
finite automata or DFA.
Okay, so DFA it stands for deterministic finite automata.
Before we start off with DFA let us remember two important properties of finite state machines
that we should always remember and they are, finite state machines it is the simplest model
of computation and also finite state machines has a very limited memory.
So these are two important points that we should always keep in mind before we study
anything related to finite state machines.
Okay now we can start off with deterministic finite automata or DFA.
Now to make DFA clear let us take a simple diagram that will make the structure of DFA
clear to us.
So this diagram here it shows us the structure of a deterministic finite automata or DFA.
So first when you look at this diagram you may feel confused what are these?
What do we see here?
We see some circles labeled as A, B, C, D, we see some edges, some arrows pointing here
and there and we have seen some labelings like 1, 1, 0, 0, 1, 1 and what are all these?
Okay so I will explain to you what this means so that the structure of this DFA becomes
clear to us.
So first of all the first thing that we need to know are states.
These circles represented by A, B, C and D, these circles are known as states okay A,
B, C, D are states and then we see some edges.
See one edge goes from A to B, another edge goes from B to A and here also we see an edge
going from A to C and another from C to A and here we see one going from C to D and
from D to C, B to D, D to B.
So what are these?
These edges are actually the transitions.
So what does this mean?
This transition means that suppose we are in state A and this edge labeled with 1.
This labeling of edges are known as inputs, these are our inputs.
So what it means is that when I am in state A and if I get input 1, if the input I get
is 1, so my state A goes from A to B alright and in the same way if I am in state A and
if I get input 0 then what happens?
State A goes from A to C okay and let's take one more example.
Suppose I am in state C and I get input 1.
So where do I go?
I go from C to D and in D if I get input say 0 it goes from D to B.
So that is how the transition occurs.
So these labeling of the edges they are our inputs and the circles are our states.
So it shows how the states transits from one state to another on getting certain inputs
okay.
So that was about the states and the inputs.
Now we see that there is something different about state A and state D.
So what are they?
In state A we see an arrow that is coming from nowhere and pointing to A.
So what is this?
This means that A is the starting state or the initial state of this DFA.
Whenever you see an arrow coming from nowhere pointing to a state that shows that that is
the initial state or the starting state.
And if you look at state D there is something different.
What is that?
Every other states have one circle but this state D has two circles.
It has a double circle around it and what does that mean?
Whenever you see a double circle it means that that is the final state or the terminating
state.
So this state D represented by two circles it is the final state of this DFA.
Alright so those were the main things that you need to know about the DFA.
So that makes the structure of DFA clear to us.
Okay so now let us write down the formal definition of this DFA.
So every DFA can be defined using five tuples which are q, sigma, q naught, f and del.
Every DFA can be defined using these five tuples.
Now let us see what are these tuples, what do they mean?
First of all we have q.
q is the set of all states.
The set of all states is known as q and what is sigma?
Sigma is the inputs or inputs is represented by sigma and then the next one is q naught.
What is q naught?
is the start state or it is also known as the initial state and then the next one is
f.
f is a set of final states.
The set of final states is known as f.
So here in this example we had only one final state but we could even have more than one
final states.
So that is why I have written set of final states.
And the last one is del.
So what is del?
Del is a transition function.
It is a transition function that maps from q cross sigma to q.
It is a transition function that maps q cross sigma to q.
Do not worry even if you do not understand this, this will become clear when I take the
example.
I will be showing you in the example.
So now let us try to write down what are the values for these five tuples.
For this example that we have taken here.
For our particular DFA, what are the values for these tuples?
First of all we have q.
So what is q here?
q is a set of all states.
So what are the set of all states?
a, b, c and d.
This is our q and what is our sigma?
Sigma is the inputs.
What are our inputs?
We have inputs here 0 and 1.
0s and 1s are the inputs we use here.
So it is 0 and 1.
So that is sigma and what is the next one?
q0.
q0 is the start state or the initial state.
So I already told you whenever we see an arrow coming from nowhere pointing to a state that
is the start state.
Our start state here is a, a and then the next one is f.
f is the set of final states.
So what is the final state here?
d.
We have only one final state.
Whenever you see a double circle that represents a final state.
So I should probably put it in a bracket because it could be more than one but in this example
it is only one.
So set of final state is d and then the last one del is a transition function from q cross
sigma to q.
Now to demonstrate this let me take a table over here.
I will use this table to explain what is del.
So for that let me have this table where this top part will be my input 0, 1 and I will
have my states in this part a, b, c and d.
Now let's see what does this mean.
So suppose I am in state a and I get input 0.
So what happens?
When I am in state a and I get input 0 it goes to state c.
Right?
a to c.
I am in state a.
If I get input 0 I come to state c.
Alright?
And if I am in state a and if I get input 1 what happens?
It goes to state b.
See over here?
There is input 1 it goes to state b.
b.
Now let's come to state number b.
In b when I get input 0 where does it go?
It goes to state d.
And when I get input 1 where does it go?
From b if I get input 1 it goes to a.
Alright?
Now I am in state c.
Suppose I am in state c and if I get input 0 where does it go?
It goes to state a.
State a.
And if I am in state c and get input 1 if I am in state c and get input 1 it goes to
state d.
Alright?
And if I am in state d and I get input 0 where does it go?
It goes to state b.
And from state d if I get input 1 it goes to state c.
So this is the transition function del.
It maps from q cross sigma to q.
So that is how we write the transition function for the DFA.
So this was the basic structure of a DFA I hope you understood it.
So these are the main things that you should remember and this is the structure of the
DFA and we will take some examples in the following lectures which will make it more
clear to us.
So thank you for watching.
See you in the next lecture.
