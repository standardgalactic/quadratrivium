In the previous lectures, we have been studying about Turing machines and we have seen many
examples of Turing machines and we have also seen how the Turing machines actually work.
Now if you have noticed, so far in all the Turing machines that we have discussed, we
have seen that all those Turing machines, they have just a single tape.
We know that Turing machines, they have a tape and we already know what is a function
of the tape.
We have seen that in all the Turing machines that we have discussed, they are having just
a single tape.
Now in this lecture, we will be introducing a new kind of Turing machine which is called
multi-tape Turing machine, which means this Turing machine has more than one tape and
we will see if this multi-tape Turing machine is more powerful than the single tape Turing
machine or if they are same in their power.
Now if the single tape Turing machine is as powerful as a multi-tape Turing machine,
then we should be able to design an equivalent single tape Turing machine for every multi-tape
Turing machine that we have.
That is what we are going to see basically in this lecture.
So here we have a theorem which says every multi-tape Turing machine has an equivalent
single tape Turing machine.
So every multi-tape Turing machine will have an equivalent single tape Turing machine.
So what do I mean by equivalent?
Equivalent means that this single tape Turing machine will be able to perform the exact
same kind of task or can recognize exactly the same kind of language that is recognized
by the multi-tape Turing machine.
So we are not talking about the speed or the ease of computation in this Turing machine
over here.
The multi-tape Turing machine may be a little bit faster or its programming technique may
be a little more easier than the single tape Turing machine.
But what we are going to talk about is its equivalence.
That means the single tape Turing machine is going to be able to perform the same task
as the multi-tape Turing machine or not.
So that is what we mean by equivalent.
So let's see if we can prove this theorem.
So in order to prove this theorem we need to show that given a multi-tape Turing machine
show how to build a single tape Turing machine.
So if we are given a multi-tape Turing machine which recognizes some kind of language then
we have to show that we can build a single tape Turing machine which can recognize that
same language.
So if we are able to prove this then we can say that the single tape Turing machines and
multi-tape Turing machines are of equivalent power.
Alright so let's see how we can prove this.
So the first step in proving this is that we need to store all tapes on a single tape
and show its data representation.
So what I mean by this is that we know that in multi-tape Turing machines there is going
to be more than one tapes.
But in the single tape Turing machine we have only a single tape.
So now we are trying to convert or construct an equivalent single tape Turing machine
for a given multi-tape Turing machine.
So all the multiple tapes that we have in a multi-tape Turing machine needs to be stored
on a single tape somehow.
That is what we mean by this first point.
This is the first thing that we need to do in order to build this and hence prove our
theorem.
Now let's see what is the second step.
So the second step says each tape has a tape head and we have to show how to store that
info.
Now what we mean by this is that we know that in the tape of a Turing machine it has a tape
head which points to certain cells.
Now we know that in multi-tape Turing machines all the individual tapes will have their respective
tape heads.
Now we have to show that if we convert this multi-tape Turing machine into a single tape
Turing machine then how can we represent those multiple tape heads on the single tape?
We have to show how we can store that information so that we can still have the information
about where the tape head of the individual tapes are pointing to even when it is converted
to a single tape Turing machine.
Now the last step says need to transform a move in the multi-tape Turing machine into
one or more moves in the single tape Turing machine.
So we know that in Turing machines when we take a transition the tape head it moves from
one position to another.
Now in a multi-tape Turing machine we know that since there are multiple tapes the tape
heads will all have different moves.
The first tape head may move to one direction and the second may move in another direction
and the third in another direction and so on and also the tapes will be updated in the
same way.
Now we have to show that if this is all converted to a single tape then those single moves in
every individual tapes how can we represent it in our single tape?
So we have to somehow transform the move in the multi-tape Turing machine into one or
more moves in the single tape Turing machine.
So this is the next step that we need to do.
So if we are able to accomplish all these three steps then we will be able to successfully
convert a multi-tape Turing machine into a single tape Turing machine and hence we
can prove that their powers are equivalent.
So let's take an example and see how we can do this.
So here we have an example of a multi-tape Turing machine.
So as we see this is the computational part of the Turing machine and here we have three
tapes as you see and each of these tapes have their individual tape heads.
For example this is the tape and this is the tape head for this tape and this is another
tape with this as the tape head and this is another tape with this as the tape head.
So we have several tapes and each has its own tape head and here we see that this is
an example of a Turing machine with k equal to three tapes.
So k represents the number of tapes in the Turing machine.
So here k is equal to three because we have three tapes and then let's say that we have
a transition like this from state q to state r.
So when can we take the transition from state q to state r?
When the tape head of the first tape is pointing to the cell which contains the symbol b and
then the next tape head points to 1 and then the next points to y.
So we see that the condition is being satisfied over here.
This tape head is pointing to b and this one is pointing to 1 and this is pointing to y.
So if we have this then what happens?
We can replace the b with an a, this b will be replaced by a and then this 1 will be replaced
by 0, this 1 will be replaced by 0 and then this y will be replaced by x, this y will
be replaced by x and then these are the positions to which the tape heads will move.
So the first tape head will move left, this will move left, next to the left again, this
also will move to the left and this to the right.
So this will move to the right.
So this is an example of a multi-tape Turing machine.
It has three tapes with their respective tape heads and this is the kind of transitions
that it can take.
So we see that a certain task is performed in all the tapes and then the tape heads also
they have a particular direction in which they will be moving.
Now we will see if we can design this same thing using just a single tape.
So here I have designed the single tape Turing machine which is equivalent to the multi-tape
Turing machine which was given above.
Now let's see how this works.
So here we have the computational part as before and then this is a Turing machine with
one tape to simulate the above multi-tape Turing machine, the one which was given above.
And now here we have a single tape.
All those three tapes which were there above, I have converted them into a single tape.
It's a single long tape over here.
Now let's see what I did over here.
So here I have separated the three tapes using hash symbols.
So first we have a hash.
Then the first tape that we had, this one AABAB, I put it over here AABAB and then the
next tape 1011 and then the next one was XYXX.
So what I did, this is the first tape, tape 1 and then I separate it using a hash symbol
so that I know that the next one is going to be from a new tape and 1011 which are same
as above and then again a hash symbol to separate the tapes and then XYXX.
So the above tape, I have put it into a single tape separating them with the hash symbol.
So we have put the symbols into a single tape and then at the end we have the blank symbol
and this is the tape continuing as we know that the tapes are always infinite.
And now let's see the complete steps that we have to follow in order to complete execution
of this.
So the first step that we need to do is add dots to show where the head K is.
Now if you look at the multi-tape Turing machine that we had before, we see that all the tapes,
they have a tape head pointing to a particular cell.
Now we need to represent this in our single tape Turing machine.
We need to keep track of where these individual tape heads were pointing.
Now we see that in this first tape, the tape head is pointing to the third cell B and then
in this tape it is pointing to the fourth cell 1 and on this tape it is pointing to
the second cell Y.
So what we do is in our single tape Turing machine, we add dots to show where the head
K is.
K represents the individual tape heads which was there in the multi-tape Turing machine.
So here what we did, we represent it with a dot.
We put a dot below the symbol on which the tape head was pointing in the multi-tape Turing
machine.
So if you remember the previous diagram, the first tape head of the first tape was pointing
to the third cell B.
So I put a dot here to represent that.
And in the second tape it was pointing at the fourth cell 1.
So I put a dot on the fourth cell 1 over here and then in the third tape it was pointing
to the second cell Y.
So on that Y I put a dot.
So that represents the position of the heads in the multi-tape Turing machine when we
convert it to a single tape Turing machine.
Now you may be thinking, how can we put dots in the tape?
Now if you remember the programming techniques that I taught you in the previous lectures,
in just the previous lecture before this, I talked about a process known as marking.
So using that marking we can put dots or we can give some symbols in order to remember
this.
So this is basically the process of marking.
So using marking you can put dots to represent where are the tape heads.
Alright, now let's see what is the next step.
So the next step is to simulate a transition from state Q, we must scan our tape to see
which symbols are under the K tape heads.
Now I showed you a transition before, this one, transition from Q to R. Now in order
to take these transitions what we have to do is we have to determine or we have to see
which are the symbols under the K tape heads.
So in the multi-tape Turing machine in order to take this transition we checked if B1 and
Y are under our tape heads, B1 and Y and we could easily do it because we had three different
tape heads.
So in our single tape Turing machine how do we do that?
We have to do it by looking at our dots.
We already represented the tape heads using the dots.
So we have to check our dots.
So this second step can be accomplished using the dots.
So once we scan our dots across the tape of this Turing machine we have an idea of where
the tape heads are pointing.
Now let's see what is the next step.
Now the next step says once we determine this and are ready to make the transition we must
scan across the tape again to update the cells and to move the dots.
Now from the previous step we have found out where are the tape heads pointing using the
dots and then we can take the transition and after we take the transition we must scan
across our tape in order to update the symbols as well as our dots.
So here this was the transition that we had to take.
Q to R we have to replace B1 and Y with A0X.
This B1 and Y should be replaced by A0X, A0 and X over here.
So we have to update the symbols and then we have to move our tape heads to the left,
left and right.
That means this will move to the left so this dot has to come here now and this dot also
has to come to the left because the second one also moves to the left and then the last
one moves to the right.
That means this one it moves to the right.
So we have to update our symbols and also the dots which represents the tape heads.
So that is the next step we have to follow.
So basically by doing these three steps we have almost completed the conversion of the
multi-tape durian machine to the single tape durian machine but there is one thing that
is remaining.
Let's see what that is.
So the last thing it says whenever one head moves off the right end we must shift our
tape so that we can insert a blank symbol.
So if we look at our multi-tape durian machine we see that all the tapes they end with a
blank symbol before continuing to infinity.
So we always need to know where the blank symbol is because we have seen many examples
of durian machines and we see that whenever we encounter a blank symbol we used to make
some kind of conclusions.
So we have the blank symbols over here but in this durian machine in our single tape
durian machine we did not have the blank symbol after each tape symbols.
So whenever one head moves off the right end we must shift our tape so we can insert a
blank symbol.
So for example let's say that we have a dot over here that means we have a head here and
then if the transition makes us move to the right if the next dot is going to come to
the right then we need to know that there is a blank symbol over here.
We need to tell the durian machine that a blank symbol has been encountered.
So what we have to do is this entire portion we have to shift one step to the right so
that we can insert a blank symbol over here.
So there is no blank symbol in this tape example that is given here except for this one so
if we encounter a right end of any tape and if we want to move further to the right then
we have to shift the entire thing to the right so that we can have a blank symbol.
So with that we have completed the conversion of a multi-tape durian machine to a single
tape durian machine.
So we have seen that we can convert any multi-tape durian machine to a single tape durian machine
using these steps that we have seen here and by doing so we have proved our theorem we
said that every multi-tape durian machine has an equivalent single tape durian machine.
So when you generally look at durian machines you don't actually see durian machines with
multiple tapes even though they are there and why is that that is because every multi-tape
durian machines can be designed using a single tape durian machine and we see that the multi-tape
durian machine does not give you any additional power or anything it is just the same as the
single tape durian machine.
So since they are equivalent we usually use the single tape durian machines.
So that was about multi-tape durian machines thank you for watching and see you in the
next one.
