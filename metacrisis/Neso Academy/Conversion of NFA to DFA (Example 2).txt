Hello everyone. In this lecture we will be seeing another example of converting an NFA to a DFA.
All right, so let's get started. Okay, so here we have a question. Find the equivalent DFA for
the NFA given by m equal to abc ab del ac where del is given by this. So what is the meaning of this?
This is actually the formal definition or the formal way of representing an NFA. So in the previous
lectures I have already taught you how an NFA is formally defined. So I taught you that NFA is
defined using five tuples 1, 2, 3, 4, 5. Where what does this tuples mean? This tuples means that
this first one abc are the states. We have three states abc and then the second tuple is the inputs
which are a and b and then we have a transition function del and then this a shows that this is
the starting state or the initial state and this c is the final state or the accepting state and here
del the transition function del is defined by this table over here. We have three states abc
a on getting input a goes to both a and b, a on getting input b it goes to c, b on getting a it goes
to a and b on getting input b it goes to b and c on getting input a it goes nowhere. That means
it has no move it goes to phi and c on getting input b goes to states a and b and here a is
initial state that's why I have given this arrow and c is the final state that is why I have given
this circle around this. So before we proceed let us just draw the state diagram for this NFA.
Okay so here I have drawn the state transition diagram for this NFA. We have three states abc
a on getting small a goes to a itself and also it goes to b and a on getting input small b goes
to state c and state b on getting input small a it goes to state a and on getting small b it
stays in b itself and c on getting input a does not go anywhere and c on getting input small b
it goes to state a as well as state b. Now we will convert this to the equivalent DFA and we will
be using the subset construction method that we have discussed in the previous lecture. So I'll
use this table to convert this transition table to the equivalent transition table for DFA. So
what will be the elements in my table I'll have my inputs a and b and what will be the states I
have I'll start with the starting state or initial state which is state a and then let's see a on
getting input a where does it go a on getting input a it goes to two states a and b but in DFA
a state on getting a particular input can go only to one state so we cannot send it to two
states so I will combine a and b and make a new state which I will call ab ab is a single state
all right and then a on getting input small b it goes to state c goes to state c and then what
will be the next state that I have to discuss here let's we have to first check what are the states
that is reachable the only states that are reachable are ab and c so I can start with
either ab or c let me start with ab I'll discuss state ab and how do we do this in order to
know where does ab go on getting input a and b we have to look at this table and look at both
states a and b because we are doing ab here so look at states a and b and perform the union
operations of a and b to get the result here so ab on getting input a where does it go for that
look at this a and b perform the union operation of a and b on getting input small a so unit
operation of a and b will be a b and a so a is common the next thing is b so it will be a b so this
will be a b and when getting input b where will it go perform the union of this union of b and c so
it will be bc capital b c okay now let's see what are the states that are reachable ab and bc
so ab is already discussed the next one is bc let me write for bc bc so
how do we do for bc look at this table and perform the union operation of b and c so on
getting input a union of b and c is a and phi that means just a right just a and then on in
getting input b what happens perform the union operation of b and c on getting input small b
when an operation of b and ab will be ab itself ab okay now what are the states reachable from
here a and ab a is already discussed ab is also already discussed and what is remaining that we
have not discussed we have not discussed state c so let us write for state c
so in state c when state c gets input a it goes nowhere but in a dfa we cannot leave a state like
that we cannot we have to mention where the state will go when it gets a particular input we have
to send it somewhere so in this nfa it goes to phi so phi in dfa is equivalent to a dead state
so i will make a new state here which i will call d where d will be my dead state okay and c on
getting input a b where does it go it goes to both a and b so i cannot send it to both a and b i have
to combine ab and make a new state called ab so we have already made that new state ab here so i'll
send it to ab okay and now is it complete it is not complete why because i have mentioned about a
new state called d here which is the dead state and i have to also write what happens to the dead
state in order to make the dfa complete so let me mention for d state d d on getting input a and b
where does it go we know that dead state in a dead state whenever any input comes it has to stay in
the dead state and it just gets trapped in the dead state so whatever comes to the dead state
has to stay in the dead state so in dead state d whether we get input a or b it stays in the
dead state itself d now my table is complete but here we have mentioned what is the initial
state but we did not mention what is the final state so what would be my final states among
these states so we see that in the nfa c was the final state so in dfa what will be the final state
in nfa since c was the final state i have to make all the states that contains c in this dfa
as final states so i see that here in bc there is c and here there is c so both of these states
should be my final states so i'll put a circle around them around both of them indicating
that both these are the final states okay now we have made the transition table now let us try to
draw the transition diagram for this dfa so let me start with my starting state a
a is my starting state and a on getting input small a it goes to state a b
we will mention state a b here all right a will go to this a b on getting input small a
and a on getting input small b it goes to state c so i'll make another state here called state c
and we have to know that state c is a final state so i have to put two circles around state c okay
a on a on getting what input does it go to state c on getting input small b a on getting input
small b it goes to state c okay now coming to state a b a b on getting input small a it stays in
a b itself stays in a b itself on getting input small a and a b on getting input small b it goes
to state bc so i have to make a new state bc here bc and we have to note that bc is also a final
state so we have to put two circles around it so a b a b goes to bc on getting in a b goes to bc
on getting input small b getting input small b it goes to bc okay now we have finished for a b now
coming to bc bc on getting input small a it goes to a bc on getting input small a should go to
a it is on getting input small a and bc on getting input small b goes to a b bc on getting input
small b it has to go to a b that is on getting input small b okay and we have completed bc
now coming to state c c on getting input a goes to d which is a dead state so i'll make a dead
state over here which i'll call d so c on getting input small a goes to d and c on getting input
small b goes to a b on getting input small b it goes to a b and dead state that is d
on getting input a and b it stays in d itself so whatever it gets whether it is a or b it
stays in b itself so here we have completed the dfa for the nfa that was given using our
subset construction method we have constructed this dfa so i hope this was clear to you and
now if it was clear to you i would like to give you one assignment one task and the assignment will be
try to find out what does this nfa and its equivalent dfa accept so here in this lecture we
have discussed about this nfa and we have designed its equivalent dfa now your task will be to find
out what this nfa and this dfa accepts we did not mention what kind of string so what is this dfa
and nfa doing what is its task what is it actually accepting what kind of strings is it actually
accepting so try to find out what this example that we have discussed accepts and try to leave
your answer in the comment section below so thank you for watching and see you in the next one
