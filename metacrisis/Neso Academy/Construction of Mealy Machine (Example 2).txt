In this lecture, we will be seeing another example of construction of a millimachine.
So here is our task.
Construct a millimachine that gives two's complement of any binary input.
Assume that the last carry bit is neglected.
So our task is to design a millimachine that takes any binary number as the input and it
should give the two's complement of that binary number as the output.
And we assume that the last carry bit is neglected.
So before we start, let us try to understand what is a two's complement.
So we have already discussed one's complement in one of the previous lectures and let's
see what is a two's complement.
Two's complement, in order to get two's complement, it is very simple.
Two's complement is nothing but the one's complement, it is the one's complement of
any number plus one.
This will give you the two's complement of any number.
So let's see some examples.
So for example, we have this binary number one, zero, one, zero, zero.
And what will be the one's complement of this?
One's complement is very simple, just flip the bits.
One becomes zero, zero becomes one.
So here it is zero, one, zero, one, one.
And for getting the two's complement, what do you have to do?
You have to just add one to this.
Now what do you get if you add one to this?
One plus one is zero, carry one and carry one plus this one again gives zero and we
still have one in carry, carry one plus zero gives one and this one zero.
So this is the two's complement, zero, one, one, zero, zero.
Okay.
Let me take another example.
Let's take another example over here.
Let's say one, one, one, zero, zero.
So what is the one's complement of this?
Zero, zero, zero, one, one.
And you add one to this to get the two's complement.
So to get the two's complement, we add one and what do we get?
One plus one is zero and one carry and carry one plus this one gives zero and again one
carry and carry one plus this zero gives one.
And this zero and this zero.
So this is the two's complement of this number.
Let me take one more example.
One, one, one, one.
What is the one's complement?
Zero, zero, zero, zero.
And two's complement will be plus one and what do you get?
One plus zero is one and then zero, zero, zero.
So this is the two's complement.
Now why I took this many examples is that when you look at this two's complement, you
can see a certain pattern that it follows.
Let's see what is that pattern.
If you look at this, when you see that, let's see this example and in this example when
you look carefully, you find that this is the example, this is the question and this
is the two's complement of this question.
So this number, whenever you see a zero here in the beginning, this zero is left as a zero.
And when you see another zero, that zero is also left as a zero.
And when you see this one, this one is also left as one.
And after you see this first one, then whatever bits you see, they are complemented.
This zero here, it becomes a one and this one here, it becomes a zero.
All right.
So we will always start reading from the LSB to the MSB.
This is the LSB, LSB or the least significant bit and this is the most significant bit.
And we will always start reading this way.
Okay.
Now let me take a look at this example.
This is the example.
So whenever you see the first zero, that is left as zero, the second zero, that is also
left as zero.
And then when you see the first one, that is also left as one.
And after this first one that you see, whatever bits you see after this, they are complemented.
One becomes a zero.
This one also becomes a zero.
So you see that whenever you see zeros in the beginning, they are left as zeros.
And the first one that you see is also left as one.
And whatever bits you see after this first one are complemented.
Okay.
Now let us see this example where there are no zeros at all.
It is just one, one, one, one.
So what happens here?
This one is left as one and then the rest of them are complemented.
So the first one that you see is left as one and then the rest of the bits are complemented.
So from this, we can get an idea of how to design our milling machine so as to give the
two's complement of any number as the output.
So how can we do this?
Let's see this.
Let me start with the starting state, which I will call state A. Okay, A is my starting
state and A on getting input zero, let it give the output zero.
Why?
Because whenever we see these zeros in the beginning, we are leaving them as zeros itself.
So we assume that we are always starting from the LSB to MSB.
We are going this way.
We will read it this way.
So when you see the first zeros, we leave it as zeros.
Okay.
And then A on getting the input one, I will send it to another state called state B. Okay.
And A goes to state B on getting input one and what output should it give?
It should give the output as one itself.
Why?
We saw that when we see the first one, it is left as one itself.
So when you see the first one, you give output as one itself and it goes to the next state.
Now we have reached the state B.
Now what happens in state B?
Here we have completed what happens on these zeros and the first one.
Now in state B, whatever we get after this one should be complimented.
So B on getting input zero should give the output one.
That means it is complimenting it.
And in the same way, B on getting input one should give the output zero.
That means it is complimenting it.
Okay.
So now we have completed the milli machine, which gives the two's compliment.
So here we see whenever we get the first zeros, counting from the LSB, we leave it as zeros
and the first one also we leave it as one.
And then after that, whatever you get, it is complimented.
So let us take a few examples and see if this is working.
Let us check this example itself.
Okay.
One, zero, one, zero, zero, one, zero, zero.
So as I told you, we have to always read it from the LSB to the MSB.
That is how we are designing our milli machine.
So let me start from this zero.
So this zero, it starts from the starting state A and A on getting input zero, what happens?
It stays in A itself and gives output as zero.
Okay.
So now let me go this way.
The next one is zero again.
And I am still in state, I am in state A. In state A on getting input zero, what happens?
It stays in state A itself giving the output zero.
Okay.
And now I finished the zero and I come to this one.
And coming to this one, A on getting input one, it goes to state B. Okay.
It goes to state B and on getting input one, A produces the output one.
Okay.
I get this output one.
Now I come to the next one that is zero.
I am in state B. B on getting zero, what happens?
It stays in B itself and on zero, it produces the output one.
Okay.
It produces the output one.
And then I come to the next one, which is this one.
And I am still in state B. B on getting input one, what happens?
It stays in B itself giving output zero, stays in B itself giving output zero.
Now this gives us the two's complement of this number.
Let's see if it is correct.
Here we calculated the two's complement as zero one one zero zero, zero one one zero
zero.
So we are getting the two's complement of the binary input that we provided.
So we have successfully designed the Mealy machine that takes any binary input and gives
the two's complement of that binary input as the output.
You can take these other examples and check.
You will see that it is working fine.
So I hope this example was clear to you.
Thank you for watching and see you in the next one.
