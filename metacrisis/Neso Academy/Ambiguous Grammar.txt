In this lecture we will be studying about ambiguous grammar.
So what do we mean by ambiguous grammar?
A grammar is said to be ambiguous if there exist two or more derivation tree for a string
omega.
That means two or more left derivation trees.
Okay, so in the last lecture we have studied about derivation trees and we saw how we can
draw derivation trees for the strings of a certain grammar.
So let's say that we have a grammar given and there is a string omega that can be generated
from this grammar.
And if this string omega can be derived from two or more left derivation trees then that
grammar is said to be ambiguous.
So when we mean two or more derivation trees we should keep in mind that they should be
both left derivation trees.
It's not that you form one using a left derivation tree and another using a right derivation tree
and that is ambiguous.
No, that is not the case.
It is only when it can be formed using two or more left derivation trees then it is said
to be an ambiguous grammar.
Okay, so now let's take a simple example to understand this in a better way.
So here we have an example.
We have a grammar G which is given like this.
It has S as a non-terminal symbol or the variable and it has terminal symbols A plus B plus
and this multiplication sign.
And we have B as the production rule and S is the start symbol.
And the production rule is given like this.
S gives S plus S and S can also give S into S and it can also give A and it can also give
B.
Now, we want to generate the string A plus A into B. This is a string we want to generate
and let's see in how many ways we can generate this string.
Okay, so let's start with the start symbol which is S.
And I will say that S gives S plus S.
I will start from this production.
S gives S plus S.
Okay, now I need to get A plus A into B. Now this A is what I need to get and I am forming
the left derivation tree for this.
So this is a left derivation tree.
So we have to start from the left most symbol which is S.
So here this S I will replace it with A because we have a production which says S gives A.
So this S will be replaced by an A and the other S let me just write it down as it is.
And now I got this A plus S and now this A let me write it down as it is plus and I have
another S over here and I need A into B. Now for that let me further expand this S using
the production rule which says that S gives S into S.
So this S will be expanded as S into S.
And now I will replace this S by A because we saw that S gives A and I need A in my string.
So this A I will write down as it is and this S I will replace it with A and into S as it
is.
And now this final S I will replace it with B now.
I can do that because the production rule says S can give B.
So this A will be as it is this A will be as it is into this S will be replaced by B.
Okay so now I am getting the string A plus A into B which is a string I wanted to generate.
Okay so this is one way I can generate this string.
Now let's see another way in which we can generate.
I will again start with the start symbol and now I will start with the production which
says S gives S into S this one S into S.
Okay so this is again a left derivation so we should start with the leftmost symbol.
So here this S over here I will replace it with S plus S.
S gives S plus S so this S I will replace it with S plus S and this into S I write it
down as it is.
Okay so this is what we are getting.
Now why am I doing this this is because I want to get this string and we see that there
is a plus symbol in between and we were having into.
So if I do this I can get the symbol plus.
Now I am having S plus S into S.
Now this S over here I will replace it with A because S can give A.
So A plus and this S into S let me just write them as they are and now this S over here
let me replace it with A again A plus A into S and then this final S I will replace it
with B because S can give B.
So A plus A into B.
Now I am getting by string A plus A into B which is the string I wanted to generate.
So we see that this string A plus A into B were generated using two derivation trees.
First I chose the production rule S plus S and I could get the string and even when
I chose the string S into S I could get this string and we have seen that in both the cases
we use the left derivation tree.
So using the left derivation tree we were able to derive this string in two ways.
Thus we can say that this grammar is ambiguous.
So this is the example of an ambiguous grammar and I hope it was clear to you.
So thank you for watching and see you in the next one.
