In this lecture we will be seeing another example of conversion
of regular expression to its equivalent finite automata.
So here we have a regular expression given and we will convert this to its equivalent finite
automata. So since this is a long one what we'll do is we will try to break it down as small parts
and then we will design it in a simple way and then we will keep expanding it till we get the
required finite automata. Alright so here if you see we have one zero and we have a plus symbol
that is or and we have this sequence that follows. So what I will do is for my first step I will treat
this one zero as a single symbol and zero plus one one and zero closure one this whole thing I
will treat it as another symbol. So let us design it in a simple way like that so for that I will
take a state over here which will be my starting state and I will have another state here which
will be my final state. So I will have only two states over here for the beginning and since this
is one symbol this is another symbol and they are separated by a plus. So whenever it is separated by
a plus I already taught you you have to just send them to the next state using just two different
transitions. So this will go to the next state on getting input one zero and then this will also go
to the next state on getting the input zero plus one one zero star one. So since we are treating
it as a single symbol we write it like this. Okay so we have written like this but we cannot just
leave it like this because this is not a proper finite automata we have to further expand this.
So let us expand this part so I will take this initial state that we created and here we see
that this is one zero there is no plus symbol in between them it is one followed by zero
and I already taught you when there is a symbols of this form when the symbols just follow each
other so what you have to do is you have to make separate states for each symbol and make them
proceed. So here I will make one state and this will be the final state which we already had and
here I will send this state to the next state on getting input one this one and then from here I
will send it to this state that is the next state on input zero which is this zero so we have expanded
this and we have created the automata like this now coming to this part what we will do is we will
make states for these symbols as well so first let's look at this part zero or one one so whenever
it is separated by a or what you have to do you have to just make a single state and then send them
both to that state so I'll make a state over here and I will send this to this state on getting input
zero this zero and or one one that means even on getting input one one also it should come to this
state so one one okay so we are done with this part and then we have zero star and one and this
one is of this form that means there is no plus symbol in between them so we have to make two separate
states for them so let me make a state here this state is already there so from this state I will
send it to the next state on getting input zero star and from this state it will go to the final
state or the next state on getting this input one over here okay so we have designed this part also
now it is still not complete because we see that here we have two symbols and here we have
a zero closure we have to expand this further only after that we can get the final result so
let me expand it over here we have our starting state which is this one and this part it will be
the same we have two states over here so this will go to this state and this state will go to
this state on getting input one and a zero all right so let us expand this so here we see that
we have one one so when we have in symbols of this form I told you we have to make two separate
states for the symbols so let me make a separate state over here and this state will come as it is
over here like this and I'll say this will come to this state on getting input one
and it will proceed to the next state on getting the next input one so we have designed for these
two and this zero it will remain the same it has to go to this state which is this one so I will send
this state over here on getting input zero okay so now we are done with this part we have
expanded this and we have got states like this now what we have to do is we have to do this zero
closure now I already told you whenever you have a closure what you have to do is very simple just
send a self loop so I'll send a self loop to this state and I will give it input zero so
this is what we are going to do for zero closure and we are done with that
now after that we have this one following it so it will follow from here going to the
final state so from here we will send it to this final state on getting the input one
now we see that there is only one input symbol associated with each transitions
so we have successfully designed the finite automata for this regular expression
and if you want you can give names for these states that we have made here like we can call it
a d c d and e so this is how you design the finite automata for the given regular expression
by designing it in a simple way and then expanding it further to get the required finite automata for
the given regular expression so I hope this was helpful thank you for watching and see you in the
next one
