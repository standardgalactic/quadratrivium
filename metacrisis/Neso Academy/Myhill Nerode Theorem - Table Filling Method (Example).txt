In the previous lecture, we have studied about minimization of DFA using the table-filling
method also known as the MyHill-Neurode theorem.
So in this lecture, we will be seeing another example where we will try to minimize this
DFA using the table-filling method.
So if you don't know the steps that we have to follow in this method, I request you to
watch the previous video before this, before you proceed in this video in order to understand
the steps.
Okay, so let's get started and let's try to minimize this DFA using the table-filling
method.
So the first step is to draw the table for each pair of states in this DFA.
So let's draw the table for that.
So here I have drawn the table for this DFA and if you don't know why this table looks
like this, watch the previous video to know why we have drawn the table in this manner.
Okay, so now we have to check for the pairs of states in which one of the states is a
final state and the other is not a final state and we have to mark those pairs.
So starting with this, what is this cell?
This cell stands for BA.
So let us check for states B and A.
B and A are both non-final states, so no need to mark it and come to this, this is CA.
C and A are also both non-final states, so no need to mark it and then the next one
is CB.
C and B are both non-final states, so no need to mark.
Come to this.
D, A, D and A, both are non-final states, so no need to mark and come to this, this
is DB, D and B, both are non-final states, no need to mark and DC, DC are both non-final
states, no need to mark and come to this, this is EA, E and A.
E is a final state and A is a non-final state.
So these kind of pairs are the pairs we should mark.
So let me mark this pair EA and then check the next pair EB.
E is a final state and B is a non-final state, so I have to mark EB as well and come to
this, this is EC, E is a final state and C is a non-final state, so I have to mark
this EC and come to this one, this is ED, E is a final state and D is a non-final state,
so I mark ED as well.
So we have completed the first step in our procedure and then coming to the next step,
we have to look at the pairs which are unmarked in our table and for each pair we have to
check where does the state pairs go on particular inputs and check if the pairs that are generated
by that are marked or not and accordingly we have to mark them or keep them unmarked.
So let us check that, so coming to this one, this is the first unmarked pair which is BA,
so let me check for state BA, so let us see where does BA go on getting input 1 and where
does BA go on getting input 1, so BA on input 1 it goes to D and BA on input 1 it goes to
C, so we get this pair DC, now check if DC is marked, DC is not marked, so no need to
do anything, now I have to check for the inputs 1, now I have to check for inputs 0, BA on
input 0 where does it go, it goes to B itself and A on input 0 where does it go, A goes
to B, so we get this pair called BB and we see that there is no cell for BB, there is
no BB in this table, so you don't have to do anything for this.
Now come to the next one with that we have to check the unmarked pair this is CA, C and
A, now let me check, let me first start with 0 in this here, C on getting input 0 where
does it go and A on getting input 0 where does it go, so C on input 0 it goes to B and
A on input 0 it goes to B, again we get the pair called BB which is not there in this
table, so no need to do anything with it, now check for the input 1, C on input 1 where
does it go and A on input 1 where does it go, so C on input 1 it goes to C itself and
A on input 1 also goes to C, so we get a pair called CC which is again not present in this
table, so no need to do like we can leave it, now we have check for CA and the next one
is CB, now let me do it over here, CB on input 0 where does C go and where does B go on input
0, so C on input 0 it goes to B and B on input 0 where does it go it goes to B itself, so
we get a pair called BB which is again not there in this table, so we can leave it and
then let's check for inputs 1, C on input 1 where does it go and B on input 1 where does
it go, so C on input 1 goes to C itself and B on input 1 where does it go, it goes to
D, it goes to D, now we get a pair called CD, now check if CD is marked where is CD this
is CD, CD is not marked so we don't have to do anything, now let us continue the same
procedure let's come to this, this is DA, DA, now as I do this you look at the transition
diagram and try to figure out how it is being done, D on input 0 it goes to B and A on input
0 also it goes to B, so BB we get this pair which is not there in the table so we can
leave it and then D on input 1 it goes to E and A on input 1 it goes to C, we get the
pair called EC, now check if EC is marked EC, yes EC is marked, now since EC is marked
I have to mark this DA, so let us mark this DA, this is DA and we mark it, now let's come
to the next one we should check for DB, now let me check for DB where does D go on getting
input 0 it goes to B and where does B go on getting input 0 it goes to B, so BB is not
a pair in the table so no need to do anything, now let's check for inputs 1, D on input 1
where does it go, it goes to E and where does B go on getting input 1 it goes to D, now
we get a pair called ED, now check if ED is marked ED, yes ED is also marked, now since
ED is marked I have to also mark DB, so let me mark DB this is DB, so it is marked now,
let us come to the next one, the next one is DC, so I will write it here DC or DC D on
getting input 0 it goes to B and C on getting input 0 also goes to B and since BB is not
a pair in our table no need to do anything, now let's check for input 1 D on input 1 it
goes to E and C on input 1 it goes to C itself, so we get this pair EC, now check if EC is
marked EC, yes EC is marked in our table so I also have to mark DC which I checked just
now, so DC is also marked, now I have completed the first iteration for this second step,
so how do we continue, we have to repeat these steps for all these set of unmarked pairs
until we find that no more new markings can be made, so here we still have 3 unmarked
pairs so let us check for them again, the first one being BA, so BA let's see where
do they go on B on getting input 0 it goes to B and A on getting input 0 also it goes
to B we get this pair BB which is not there so no need to do anything and B on getting
input 1 where does it go it goes to D and A on getting input 1 where does it go it goes
to C, now check if DC is marked or not DC DC yes DC is marked, now since we found that
DC is marked I have to mark this BA as well, so let me mark this BA where is BA this one
I mark it over here, now let us continue let us do for this pair which is CA, so let me
write it here CA C on getting input 0 where does it go it goes to B and A on getting input
0 where does it go it goes to B, so BB is the pair we get which does not exist in the
table so no need to do that, now let's check for the next input that is C on input 1 it
goes to C and A on input 1 where does it go it goes to C itself, so the pair we get is
CC, so CC is again not existent in our table so no need to mark this, so we completed CA
now let's come to CB, so write it here CB, so C on getting input 0 where does it go it
goes to B and B on getting input 0 where does it go it goes to B, BB is not a pair in our
tables and no need to do anything and C on getting input 1 where does it go it goes to
C and B on getting input 1 where does it go it goes to D, so we get the pairs CD, now
check if CD is marked where is CD in our table CD means this one DC and CD is the same thing
so this one is marked no since this one is marked I have to mark the pair CB as well,
so let me mark CB, this is CB and it is marked, now we completed the second iteration again
in the second step, now we find that in the table if you look here this is the only unmarked
pair now and this is the only one we need to check in the next step, so let us just check
this step for this pair that is the pair of CA, so let me check it here CA, C on getting
input 0 where does it go it goes to B and A on getting input 0 where does it go it goes
to B and BB is not a pair in our table so no need to do anything, now let's check for
input 1, C on getting input 1 where does it go it goes to C itself and A on getting input
1 also goes to C and we get this pair CC which is not there in the table so no need to do
anything, so we find that we have done all the markings and now no more new markings
can be made, now how much ever you continue this will be the only table you get and the
only unmarked pair is CA, now let us see how we can make the minimized DFA using this,
so what we have to do is we have to combine the unmarked pairs, so we saw that CA was
the unmarked pair, so I can also call it AC, C and AC is the same thing, so A and C I combined
them and I make them as one state and what were the remaining states B, D and E, so these
are the remaining states that I have, so let me copy down our original DFA here so that
we can see how we can minimize it using this new states that we obtained, so here is our
original DFA and then I have to combine the states AC, A and C can be now combined and
made as a one state and then the rest of the states are B, D and E, now let us try to draw
the transition diagram for them, AC is a single state as we got and AC will be the initial
state why because A was the starting state in the original DFA and then we have a state
called B then B, B here and then we have another state D over here and then we have E over
here and E was the final state, so E will remain the final state even in this one and
then how do we make the transitions, we see that A and C both on input 0 it goes to B,
so our new state AC on getting input 0 it will go to B and on getting input 1 A is going
to C and C is also going to C that means on getting input 1 AC will stay in itself so
that is a transition and then the rest of them will remain the same, B goes to B itself
on getting input 0 and B goes to D on getting input 1 and D where does it go, D goes to
B on getting input 0, so we will send D to B on getting input 0 and D goes to E on getting
input 1, so D goes to E on getting input 1 and what is left state E, E on getting input
0 it goes to E on getting 0 where does it go, it goes to B, so let us send E to B on
getting input 0 and on getting input 1 where does E go, E goes to C that means it should
go to AC, so on getting input 1 E goes to AC, so this is the minimized DFA that we have
obtained, so in the original one we had 5 states and here we have 1 2 3 4 states and
the state that we could combine was AC, why, so if you look at the table AC was the pair
that was unmarked, so the unmarked pair is the one that we need to combine and minimize
the DFA, so I hope this example was clear to you, thank you for watching and see you
in the next one.
