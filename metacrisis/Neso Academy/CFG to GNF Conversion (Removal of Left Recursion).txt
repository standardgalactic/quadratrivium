In the last lecture we have studied about Gribach Normal Form and we also saw how to convert a given
CFG to Gribach Normal Form. So as we were converting we have studied four different steps that we had
to follow in order to convert a CFG to GNF and in the fourth step we encountered something known as
a left recursion and I told you that in the next lecture we will be studying about how to remove
the left recursion and after that our CFG to GNF conversion will be complete. So if you have
not watched the previous lecture I request you to watch it before you continue with this one
and if you have watched the previous lecture you must be knowing that this was the production that
we got after following those steps and this production a4 gives b a1 a4 was converted to
this form after following step number four and here we see that a4 is giving a4 a4 a4 this part
is known as a left recursion this a4 is calling itself over here and this part is known as a
left recursion and this is what we need to resolve or remove in order to get the required
gribach normal form. So let's see how we can do it for that we need to follow step number five which
is to remove the left recursion so let's see how we can remove this left recursion so in order to
remove the left recursion we need to introduce a new variable so let me show you how to we introduce
this new variable in order to remove the left recursion so this one this production is the same
thing I have just copied it down as it is now we see that the problematic production is this one
a4 gives a4 a4 a4 so here we are not supposed to have a variable or a non-terminal symbol so this
is the problematic variable so in order to introduce a new variable the production that we will make
for the new variable is like this we will take a new variable and we will make a production to it
in which it will give the variables that follows the problematic variables along with the new variable
so let me show you how to do it so let me call the new variable as z now how I will define the
production for z is that I will take the variables that follow the problematic variable which is this
a4 and I will take these two variables and write it once along with the new variable and once without
the new variable so what we have is a4 a4 this is the one that follows the problematic a4 which
is this one so I will take these two a4 a4 I will write a4 a4 and I will write this z along with it
once and I'll make another production in which it will give just this a4 a4 without this z
a4 a4 without the z so this is a new production that we have so how do you make it let me just tell
you once more just take the variables that follow the problematic one and write it along with the
new variable once and without the new variable once so this is how you make the production for
the new variable that we have introduced now we have to rewrite this a4 using this new variable so
let's see how we can do this this is also very simple what you have to do is you have to take
this a4 and this part you just write it as it is for one time and you write it along with the new
variable one time and this part we can avoid it because in order to avoid this part we are
introducing this new variable so let's see how we can do this we will take this a4 and once I
will write this as it is b b a3 a4 and then the second time I have to write it along with the
new variable z so b along with the new variable z and this part b a3 a4 b a3 a4 along with the z
so this is the new production of a4 that we have so if you look at this this is in gnf or
gribach normal form because this a4 directly gives a terminal symbol or even in the other
productions always we have a terminal symbol in the beginning and all the variables are always
preceded by a terminal symbol so this is the a4 that we have in gnf so this is how we rewrite
a4 using the new variable that we have introduced so this was the grammar that we had now we have
rewritten a4 and now let's see that what is the grammar that we are having okay so this is the
status of our grammar now a1 is added as it is I did not change anything and a4 from this one we
changed it to this one so this is what I have written here this is our new a4 that we have
and we have introduced a new variable called z which is this one so I have just written a4 a4
which is this one first and a4 a4 z which is this one it is the same thing and a2 and a3 also I have
not made any changes it is the same as it is now let us check if this are in gribach normal
form or not let us start from a1 so we see that in a1 it is giving a2 a3 and a4 a4 but we know
that in gnf we are not allowed to have a variable in the beginning we need to have a terminal symbol
so we need to modify our a1 in order to make it into a gribach normal form so let's see how we can
do that so this is our grammar and a1 gives a2 a3 so a2 is causing the problem so I have to
replace a2 with something so that it falls into a gribach normal form so what can I replace a2 with
I can replace a2 with the value b which we have here so let me take a1 it gives instead of a2 I
will write b now b and this a3 I can write as it is so if you look at this this one is now in
gribach normal form and also a4 a4 a1 is giving a4 a4 this is also not in gribach normal form
because we are having a variable in the beginning so what we can do is we have to replace this a4
with some other value and what is the value with which we can replace a4 it is this whole thing
this value of a4 so a4 gives all this production so I have to replace this a4 with all the productions
that a4 gives over here so let me do that starting from b I will write b so I have replaced this a4
with this b and this a4 I have to write it down as it is a4 and it is giving b a3 a4 b a3 a4
and this a4 I have to write it down as it is a4 and it gives bz so bz so what we are doing is
we are replacing this a4 so I have put bz and this a4 I have to write it down as it is
and then we have b a3 a4 z b a3 a4 z and this a4 as it is as it is all right so now we have
this production of a1 and if you check we always have a terminal symbol in the beginning of every
production so this is in gribach normal form and then a4 is already in gribach normal form let me
just write it down as it is without changing anything now let's come to z now if you look at z
z is giving a4 a4 so here also we are having a variable in the beginning which is not
accepted so you have to replace this a4 over here with the value of a4 given in this production
so how do I do that I will write z and instead of this first a4 I am going to replace it with
all these productions of a4 so starting with b so it gives b and this a4 I have to copy it down
as it is a4 and this b a3 a4 b a3 a4 and this a4 I have to copy down a4 then we have bz
bz and a4 I am copying it down a4 and then I have b a3 a4 z b a3 a4 z and this a4 I am
copying it down as it is a4 now I've completed this part now coming to this production if you
see this production also is not in gnf why because z is giving a4 a4 z and a4 is a variable
so we are not allowed to have a variable in the beginning so this a4 also I have to replace it
with all these values of a4 which is there in this production so let me write it in this new
line over here it is actually a continuation of this one so instead of a4 I have to write b
and this a4 z will remain as it is a4 z and b a3 a4 b a3 a4 and this a4 z
we have to be copied down a4 z and this bz bz and a4 z will be copied down
a4 z and then b a3 a4 z b a3 a4 z I have to copy down a4 z a4 z so now it's a long
production that we have for z but if you check you see that in the beginning of every production
we have a terminal symbol so this is in gribeck normal form so we have completed z and a2 and a3
there are no changes they're already in gribeck normal form I can just write it as they are
a2 gives b and a3 gives a so this is our new grammar that we have and if you check it you see
that in all the productions we are having a terminal symbol in the beginning so that was the
property that we had to achieve in order to convert the given cfg into gribeck normal form
so now we have successfully completed our conversion and the grammar that we have now
is successfully converted into its equivalent gribeck normal form so you have to follow all
the steps from one to four which was discussed in the previous lecture and if you are having a
left recursion you have to resolve it using this step that we have discussed in this lecture
so I hope this was clear to you thank you for watching and see you in the next one
