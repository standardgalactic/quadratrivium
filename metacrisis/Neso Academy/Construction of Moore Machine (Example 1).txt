In the last lecture, we have studied how to construct Moore machines and in this lecture
we will be seeing another example of construction of Moore machine.
Okay, so here is our example.
Construct a Moore machine that counts the occurrences of the sequence ABB in any input
strings over AB.
So our task is to design a Moore machine that takes any inputs over AB as the input and
it should count how many times does the sequence ABB occur in the input string.
So how can we do this?
We know that Moore machine should also give outputs.
So how can we design the Moore machine in such a way that from the output that it gives,
we can count the number of times that the sequence ABB occur.
So here we have our inputs as AB and we have the output or delta as let us say zeros and
ones.
Okay, now from this how can we design the Moore machine?
So we can design in such a way that whenever we encounter the sequence ABB, we can print
a one.
We can give the output as one.
So at the end, we can count or we can see how many times does one appear in the output
and we can know that that many times the sequence ABB has occurred in the input string.
Okay, so let's see how we can design it.
In order to design this, let us do it in a simple way.
That is, we will first try to design a DFA that accept all strings that ends with ABB
over AB.
So let me start with my starting state which I will call state A. A will be my starting
state or the initial state and A will go to the next state that is B on getting what
input should I send A to B?
I will send A to B if it gets the input A because I am trying to get the sequence ABB.
Now B will go to the next state which I will call state C. When will it go to state C?
It will go to state C when it gets the input B. Okay, and now we are in state C and C will
go to the next state which I will call state D on getting the input.
What will be the input?
B. So ABB is the sequence I am trying to get.
So ABB.
But this DFA is not complete because we have not mentioned where does these states go on
both the inputs.
In A, I already mentioned where it should go on getting the input small A but I did not
mention what happens if it gets the input small B. If it A gets the input small B, I
will keep it in A itself because I want to get the sequence ABB.
And after coming to B, in B, I already mentioned what happens if it gets small B but what
if it gets a small A?
So I come like this AB and if I get a small A again, then what happens?
I should keep it in B itself because if I get a small A, I will keep it in B itself
because I want to get A then BB.
Until I get BB, I don't want to proceed.
Okay, now coming to state C, what will happen to state C?
On getting input B, it will go to D but what happens if it gets a small A?
So suppose let's say that I came to state C like this AB, I came like this AB and then
in state C, if it gets a B, it will go to D. Okay, and we get the sequence ABB but instead
of a B, suppose I get an A, then what happens?
If it gets an A, then I have to wait for another B and B then only I can get the sequence ABB.
So in C, if I get an A, where should I send it?
I will send it to this state called state B. If it gets the input small A, why?
If it comes to this one, I can get a BB, I could get, I imagine or I assume that I could
get a B and B and come to D, getting the sequence ABB.
Okay, now C is complete, now what about D?
In D, I did not mention what will happen if it gets input small A or small B.
Now let's say we get the input small A. So suppose let's say we came to D like this A,
B, B. I came like this ABB and if I get a small A, what will happen?
I will wait for another B and another B so that I can get this sequence.
So in D, if I get a small A, what will happen?
I should send it to the place from where it can get a B and B again.
So where is that?
That is state B because if I send it to state B, I can get B, B again.
So I will send D to B if it gets the input small A.
Okay, now we mentioned what happens if it gets small A, now what if it gets small B?
Now let's say again we came like this ABB, we got ABB and we get a B again, we get a
B again.
What happens?
Now if I get a B again, then there is no way that our sequence can proceed unless I get
another ABB again.
So I should send it to the place from where it can get another ABB again and where is
that?
That is in state A. If I send it to state A, I can get ABB again.
So I will send this D, let it go to state A over here.
If it gets the input small B, now our DFA is complete.
So in this DFA, when do we know that we got the input ABB, it is in state D. Whenever
you restate D, whether it is from any path, whenever you restate D, it is sure that you
have got the sequence ABB.
Let's see if you come like this A, A, A, B, B.
So at the end you see that there was an ABB.
So whenever you reach the state D, we are sure that we got the sequence ABB.
So at this point, I will give the output as 1.
In D, I will give the output as 1 and in the other states, I will give output as 0.
Now why is that?
Because whenever we get the output 1, we realize that we have got the sequence ABB.
So in D, we give the output as 1.
Now let's take a few examples and check if this is working fine.
Let's say I take the, let me take the example over here.
Let's say that we are checking for the string itself ABB.
Now I start with my starting state which is state A and A, even before it gets any input,
it has an output associated with it which is 0.
So A print 0 in the beginning and on getting this small A, what happens?
A goes to B, A goes to B and what output does B have?
0.
Okay.
And then we get a B again, small B and we are in state B.
In B, if I get a small B, it goes to state C and in state C, what does it print?
It prints a 0 and we are in state C and get another B and in state C, if you get small
B, it goes to state D and in state D, what is the output?
It prints, it prints 1, it prints a 1.
So when we analyze this output, we find that we got a 1 over here and when we get the 1,
we realize that the sequence ABB was encountered.
So here you got the sequence ABB and you printed 1 and how many 1s are there in this?
There is only 1, 1.
So that shows that the sequence ABB was encountered just once or one time.
Now let's take another example, let's say we are getting it 2 times ABB, ABB.
Now what happens?
We start with starting state A and in A, we have the output 0 associated with it and
A on getting small A, where does it go?
It goes to B, printing a 0.
If we get small B, what happens?
It goes to state C, printing a 0 in state C and in state C, if I get another B, it goes
to state D, printing a 1 and in state D again I get A. In state D, if I get A, where does
it go?
It goes to state B and what does state B print?
It prints 0 and in state B, if I get small B, it goes to state C, printing a 0 in state
C and state C on getting small B, it goes to state D, printing a 1.
So for this input, we are getting the output 0, 0, 0, 1, 0, 0, 1 and how many 1s are there?
2.
We got 2 number of 1s.
Why?
Because the sequence ABB, ABB, this was encountered 2 times.
So we are able to count the occurrences of the sequence ABB in any input strings over
AB.
So this is the Moore machine that we have designed for that.
So I hope this was clear to you.
Thank you for watching and see you in the next one.
