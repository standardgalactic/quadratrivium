Hello everyone, welcome to the next lecture in theory of computation and in this lecture
we will be seeing another example of how to figure out what a DFA recognizes. In the previous
examples we have seen and learned how to design particular DFA's and in this lecture we will
be seeing given a DFA how to figure out what it recognizes. Okay, so here we have a DFA.
We have a DFA over here, we have this figure over here and we have to find out or we have
to figure out what this DFA recognizes. So just by looking at this what can we see? We
see that we have a starting state here which is A and then A on getting input 1 it goes
this way and A on getting input 0 it goes this way. So let's find out what kind of strings
does it accept. So first we are in state A and on getting input 1 it goes to state B.
So we get an input 1 and it goes to state B and in state B it could either get input
1 or 0 and if it get input 0 it directly goes to D. On getting 0 it directly goes to
D which is a final state. D has a double circle which shows that it is a final state. So 1,
0 is accepted and also it could come like this. Starting from A it goes to B on getting
input 1 and then in B it could get input 1 again instead of 0 it may get 1. So on getting
1 it stays in B. So let's say it got another 1 it stays in B and let's say it got another
1 again it again stays in B. So it can get any number of 1s and it stays in B. So let's
say it gots a few 1s over here out of this state B and then finally when it gets 0 it
goes to D which is a final state. It goes to the final state. So this one how did we
get? We got this one from this state A right from state A and these 1s it came from this
state B. On running in state B it got all these 1s. So this is from state B and on getting
0 it goes to state D. So this is also accepted. So we found 2 kind of strings that will be
accepted and then is that the end? No we have another part over here. So let's check out
for this part. Here when we start from the starting state A and if it gets input 0 it
goes to state C. So on getting 0 it goes to state C and in C if we get input 1 it goes
to state E right and it reaches the final state. So this is also accepted. Ok so how
can we generalize this or how can we summarize and write down what does this DFA recognize?
So I can say that this DFA it recognizes the string 01 or it recognizes a string which
contains at least 11. What I mean by 11 is at least 1 binary digit 1. At least 1 binary
digit 1 followed by any number of 1s and followed by a 0. So it should have at least
1 binary digit 1 followed by a 0. So this 1 is going to be there for sure and it could
either the next digit could either be a 0 or it could be followed by a series of 1s
and then 0. So this is what is recognized by my DFA. So how can I write this down? So
this is how I can write it down. L equal to a language that accepts the string 01 or a
string of at least 1 binary digit 1 followed by a 0. So if it comes this way it accepts
the string 01 01 or a string of at least 1 binary digit 1 that is this 1 followed by
a 0. So it could be at least this I have written here at least. At least means it could be
1 or more than 1 from here followed by a 0. So this is what is accepted by this DFA.
So far so good. Now let me write down some strings and see what happens when we pass
these strings to this DFA. For example let me take these strings 0 0 1 0 1 0 1 1 1 1
0 0 1 0 1 0 1 1 1 1 1 and 1 1 0 0. Okay let us just try to pass these strings. We know
that these strings are already accepted. Now let us try to pass these strings in this
DFA and let's see what happens. Okay for the first let me start with this 0 0 1 0 0
on getting the I start from my starting state and on getting the first 0 I come to state
C and what is my next input 0 again. This is I am in state C and I get 0. Oops now where
would I go. I know I should if I get a 1 I should go here but if I get a 0 where should
I go I have no more place to go. Is that wrong. Okay let us check for this string 0 1 0 I
get a 0 and I come to state C I get a 1 and I come to state E and then I get another 0
over here when I am in state E and oops again I do not have a place to go. I do not have
a place to go. What about this string 0 1 1 0 1 and when I get another 1 there is no
place to go from here again and what about this 1 1 0 1 1 and here I get another 1 here
alright so far so good and I get 0 next this is 0 next and I come to state D and I get
1 in state D I am in state D and I get 1 and again I do not have a place to go. What does
this mean. Let us check for the last string again 1 1 0 0 1 1 0 and I get another 0 and
from here there is no place to go again. So what is the meaning of this where do I what
is this DFA wrong or where do I send these states to when I get these kind of inputs
actually this DFA is not wrong so what we need to do is we need to complete this by
mentioning something known as a dead state these strings are anyway not going to be accepted
we know that the only strings that are going to be accepted is the one which we wrote here
in this L these are the only strings and these strings over here does not follow this rule
or does not follow this kind of strings so these are not going to be accepted for sure
so when we reach a place a state in a DFA and do not have a place to go that means that
it goes to a state that is known as a dead state so let us complete this DFA and I will
mention a state which I will call x and x is what I call as dead state all right x is
my dead state and I will complete my DFA using this dead states so let us start from here
a I already mentioned if it gets 1 it goes here if it gets 0 it goes here so a is complete
no need to do anything with a and let's come to be be on getting input 0 it goes to D and
on getting input 1 it stays in itself so it is okay for with both 0 and 1 it is complete
but for state D state D does not know where to go even if it gets 0 or 1 so I will send
it to the dead state I will send it to the dead state so whether it gets 0 or 1 it comes
to this dead state all right now let's come here a so they complete and see see on getting
input 1 goes to state E but on getting input 0 it does not have a place to go so we will
send it to the dead state all right on getting input 0 and state E what happens to state
E state E also does not have a place to go even if it gets input 0 or 1 so we will send
state E also to the dead state either 0 or 1 okay now we can check the strings 001 0 right
if it gets 0 it comes to state C and gets another 0 goes to state X and 1 oh our dead
state is also not complete we did not mention what happens if we get 0 or 1 in the dead state
so whatever you get in the dead state 0 or 1 it stays in the dead state 0 1 okay so 001
0 0 and in X we get 1 so it stays in X itself so this dead state is not a terminating state
means it is not a final state so whatever comes in this dead state is also a non accepting
state means those strings will not be accepted now 0 1 0 0 1 0 go to the dead state 0 1 1
0 1 1 go to the dead state 1 1 0 1 1 1 0 1 comes to the dead state 1 1 0 0 1 1 0 0 again
comes to the dead state so X is called our dead state so this is how you complete the DFA so
if you see an example given without a dead state or without when you see that a specific state
does not have a place to go so you should assume that it goes to a dead state so this is how you
complete a DFA and in this example we have studied how to figure out what a DFA recognizes
and we have also figured out a way how to complete a DFA so I hope this example was clear to you
about how to figure out a DFA and how to complete the state using a dead state
