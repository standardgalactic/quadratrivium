In the previous lectures, we have studied about milling machine and we have also seen
examples of how to construct milling machine.
So in this lecture, we will be starting with the construction of Moore machine.
Okay, so here is our task.
Construct a Moore machine that prints A whenever the sequence 01 is encountered in any input
binary string.
So our task is to design a Moore machine in such a way that it takes any binary string
as input and whenever it sees the sequence 01, then it should print an A.
Okay, so we have done the same example for milling machine as well.
So let's see how can we design the Moore machine for this task.
So what is the main difference between a milling machine and a Moore machine?
I've already taught you.
In Moore machine, the output is associated to the states.
In case of milling machine, the outputs were associated with the inputs, but in this, the
outputs are associated with the states.
So we will get it clear when we solve this example.
So here for this example, our sigma or our inputs, it could be zeros and ones and our
output or delta will be a's or b's.
Okay, so let's see how we can design the Moore machine for this.
So just as we started it for milling machine, we will start for Moore machine also.
How?
By first designing the DFA for this and then we will try to convert it to a Moore machine.
So what is the DFA that we should design here?
We should try to design a DFA that will accept all binary strings that will end with 0, 1.
So let's see how we can design the DFA for that.
I will first start with my starting state, which I will call state A. A will be my starting
state or initial state and A will go to the next state, which I will call state B on getting
input.
What input should I give on getting input 0?
Because I am trying to get the sequence 0, 1.
So A will go to B on getting input 0 and then B will go to the next state, which I will
call state C. When will it go to state C on getting the input 1?
Okay, because we are trying to get the sequence 0, 1.
So A goes to B on getting 0 and B goes to C on getting input 1.
Okay, but this is not complete because we did not mention where does these states go
on getting other inputs.
So let us try to complete that.
So A, if it gets input 1, what will happen?
Let it stay in A itself because I want to move to the next state only when I encounter
the sequence 0, 1.
So I have completed for A, A on getting 0 goes to B on getting 1, it stays in itself.
And what happens to B?
On getting input 1, I already said it goes to C. On getting input 0, what will happen?
I will put it in B itself because I do not want to move further.
Okay, now we have completed for B and what about C?
Where should C go on getting input 0 and where should C go on getting input 1?
Okay, let us say that in C we get an input 0.
So let us say we came to C and this way we got a 0 and a 1.
Suppose you got 0, 1 and you came to C and if you get a 0 again, you see that you have
to wait for another 1.
Then only we can get this sequence 0, 1 and in C, if I want to get another 1, where should
I send it?
I should send it to B. So I will send C to B if it gets an input 0, if it gets an input
0.
And then suppose I came to C by getting this 0, 1 and instead of a 0, if I get a 1, 1 happens.
Then I can only move ahead if I get another 0, 1.
I have to wait for another 0, 1.
So in order to get another 0, 1, where should I send C?
I have to send C back to A. Then only I can come and get this sequence 0, 1 again.
So if C gets the input 1, then I will send it to state A. So now our DFA is complete.
So I have mentioned what happens to A, B and C on getting inputs 0 and 1.
Now this is the DFA, but we need to make it a Moore machine.
So as I already taught you, in Moore machine, the output is associated to the states, not
to the inputs as it was for Mealy machine.
So we saw that whenever we reach state C, we are getting the input 0, 1.
We are reaching state C on getting input 0, 1.
And that is the case in which we understand that we have encountered the sequence 0, 1.
And when we encounter the sequence 0, 1, what should we do?
We should print A. So in C, I will give the output 0, 1.
Alright, so whenever the binary string reaches the state C, it knows that it got a 0, 1 and it will print an A.
And in the other cases, I don't care what it is, so I will print a B.
Print a B here.
And here also I'll print a B.
Okay, so we have got this.
Now let us just take a few examples and see if this is working.
Let's say we are going to check for this string 0, 1, 1, 0.
Okay, so we start with the starting state which is state A.
And even before you give an input to this Moore machine, whenever you reach the starting state A,
you see that A already has an output B.
So even before you give the input, this A will print an output B.
Okay, and then we get this 0.
So in state A, if I get 0, what happens?
It goes to B and it goes to B and what does B print?
B prints a B, small b.
And then now I come to this one.
I am in state B.
B on getting input 1 goes to C.
C and what does it print?
C prints an A.
Then I come to this one over here and I am in state C.
C on getting input 1, what happens?
It goes to A.
And what does A print?
A prints small b.
And then the last one is this 0.
I am in state A.
And A on getting 0 goes to B.
And what does B print?
B prints a small b.
Okay, so now we see that for the input 0, 1, 1, 0, we are getting the output B, B, A, B, B.
So we see that here and A was printed.
And when was A printed?
When we encountered the sequence 0, 1.
So when we encountered the sequence 0, 1, A was printed.
So we can take another example.
Let's say we take this example 0, 1, 0, 1.
So we start with the starting state which is state A.
And as I told you, even before you give the input when you start from A,
A already has an output B.
So it prints this B.
So the first input that is 0, A on getting input 0 goes to B.
And B prints a small b.
And next input is 1.
And B on getting input 1 goes to C.
And what does C print?
C prints an A.
And then the next input is 0.
We are in state C.
State C on getting 0, what happens?
It goes to state B.
And B prints a small b.
And then the last input is 1.
And we are in state B.
B on getting input 1 goes to state C.
And what does state C print?
It prints an A.
Okay, so for the input 0, 1, 0, 1, we are getting the output B, B, A, B, A.
So we got 2 A's printed over here.
Why?
Here we encountered the sequence 0, 1.
And for this, this A was printed.
And for another sequence of 0, 1, we printed another A.
So whenever you saw the sequence 0, 1, the output A was printed.
So that is how you design the Moore machine for this task.
So I hope this was clear to you.
This was how to design Moore machine.
We will see more examples in the next lectures.
