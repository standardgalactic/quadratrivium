Till now we have seen finite automata without outputs and from this lecture onwards we will
be learning about finite automata with outputs.
So in all the previous lectures the automatas that we discussed had only inputs associated
with them and there were no outputs.
So in finite automata with outputs we will see that along with inputs there are also
outputs that are given by this automata.
So let's see what they are.
There are two kinds of finite automata with outputs.
One is the Mealy machine, another one is the Moore machine.
So in this lecture we will be trying to define these machines and we will be trying to find
out what is the difference between them.
Alright so let's get started with Mealy machine.
So here we have the Mealy machine.
So Mealy machine is defined using six tuples Q, Sigma, Delta, Del, Lambda and Q naught.
So let's see what these tuples mean.
Q is the finite set of states.
So this is same like our DFA where Q is the set of states that we have and Sigma is the
finite non-empty set of input alphabets.
So this is also same like before where Sigma is the set of input alphabets and Delta is
the set of output alphabets.
Now this is the new thing and something different that we see.
So as I already told you now we are discussing finite automata with outputs.
So Delta defines the set of output alphabets that we have.
And Del is the transition function that maps Q cross Sigma to Q, this is also same like
the DFA that we discussed and Lambda, now this is again something different, Lambda
is the output function that maps Sigma cross Q to Delta.
Now what does this mean?
This means that the output of this millimachine it will be associated or it will be defined
by the state that it is currently present and the input symbol associated with that
state.
So this will become clear to you when we see the example and Q naught is the initial state
or the starting state.
So here we have the example of a millimachine.
So let's see, here we have a as a starting state and we have another state b and a on
getting input 1 it goes to a itself and it produces the output b.
And a on getting input 0 it goes to b and produces this output small a and b on getting
input 1 it stays in b itself and it produces output small a and b on getting input 0 it
goes to a and produces the output small b.
So we see that there are outputs associated with each input and the kind of state they
are present in.
So here we said that the output function is defined by this, so the output is defined
by the input and the current state it is associated to.
So let us look at this example and see this output small b, how is this small b defined
or how do we get this small b?
We get this small b when we are in state a and get the input 1.
So this b is defined by the state a and the input 1 that it receives.
So let us take another example over here, let's see b and let us see this output a that
we get here.
How do we get this output a?
We get this output small a when we are in state b and we get the input 1.
So we see that the output is always associated to the current input that is present in the
current state.
So that is how the output function of a Mealy machine is defined.
Now let us go to the next one that is Moore machine.
So here we have our Moore machine and in Moore machine it is also defined using 6 tuples
q, sigma, delta, del, lambda and q0.
So let us see what these tuples mean, q is the set of states same like before, sigma
is the finite non-empty set of input alphabets so that is also same and delta is also same
like this one the set of output alphabets and del is the transition function that maps
q cross sigma to q again that is same and lambda is the output function that is defined
by q to delta and q0 is the initial state or the starting state.
So we see that the difference between Mealy machine and Moore machine are these output
functions lambda.
So if you look here, here lambda was sigma cross q to delta but here lambda is q to delta.
So what does this mean?
This means that in case of a Moore machine the output is only associated or only dependent
upon the current state.
This will become clear when we take this example.
So look at this example.
Here we have a Moore machine and here we have states a where a is the starting state and
b is another state and here we see that a is associated with the output small a and
b is associated with the output small b.
So a on getting input 1 it goes to a itself and it produces output small a and on getting
input 0 it goes to b and this b produces output small b and b on getting input 0 stays in
itself producing output small b and b on getting input 1 goes to state a producing output small
a.
So here we see that these outputs are dependent only on the states.
It is defined by the states but in this case in case of Mealy machine we see that the outputs
were related or defined by the state as well as the input that we get in that state.
But here it is only dependent on the states.
So this will become more clear when we take an example.
So let us take a simple example.
So suppose in my Mealy machine I am going to pass a example string.
So let my string be 1010 I am going to pass this to my Mealy machine.
So it starts with the starting state a and a on getting input 1 what happens on getting
input 1 a goes to a itself and it produces the output b.
Now we are done with this.
Now come to this one 0 a we are in a now a on getting input 0 it goes to b and as
it goes to b it produces output small a and then now we are in b and the next input we
get is 1 and b on getting input 1 goes to b itself goes to b itself and it produces
output small a and we are done with this.
Now we come to this we get 0 and we are in b and on b when we get 0 it goes to a it goes
to a and it produces output small b.
So b goes to a producing output small b.
So here we get the output b a a b in this Mealy machine.
Okay now let us try the same example 1010 and let us pass it to our Moore machine.
So in Moore machine also it starts with starting symbol a so it starts with the state a and
here one thing you have to notice when you are in a even before you get anything even
before you feed any input to this state when you are in a a itself gives the output small
a so even before you feed the string a gives the output small a okay now we get the first
input symbol 1 so a on getting input symbol 1 it stays in a itself and when in a it produces
output small a and then next is 0 and we are in a where does a go on getting input 0 it
goes to b and when it reaches b b produces output small b okay and then the next input
is 1 and we are in b b on getting input 1 goes to a goes to a and it produces output
small a okay and now we are coming to the last input that is 0 and we are in a a on getting
input 0 goes to b and b produces output small b so we get the output a a b a b so this is
how the mealy machine and Moore machine behave on getting certain input strings now if you
notice here you see that in case of mealy machine when we gave an input string of length 1 2
3 4 it produced an output string of length 1 2 3 4 so that means if the length of your
input symbol is n then the length of your output symbol is also n but in case of Moore
machine the length of our input symbol was 1 2 3 4 and the length of the output string
that is produced was 1 2 3 4 5 so in this case we see that the length if the length
of your input string is n then the length of output string is always n plus 1 okay that
when why is that that is because in the starting state there is always an output associated
with it and that is always printed that is why we have the length of our output string
as n plus 1 where n is the number of strings in the input so I hope that was clear to you
that was about the mealy machine and Moore machine which is the final automata with
outputs so we will be seeing more examples in the next lecture.
