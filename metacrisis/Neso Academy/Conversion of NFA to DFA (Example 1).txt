In the previous lecture we have seen how to convert NFA to DFA and in this
lecture we will be seeing another example of converting an NFA to a DFA.
Alright so let's get started. Okay so here we have an example language L which
is a set of all strings over 01 that ends with 1. So what we have to do is we
have to design the NFA for a language that accepts the set of all strings
over 01 that ends with 1 and after designing the NFA we will convert it
to its equivalent DFA. Okay so let's see how we can do this. So here my input
symbols are 0 and 1. So how can we design the NFA for this? I will first have a
starting state which is state A. A is my starting state and A on getting input
either 0 or 1. It stays in A itself and if A gets the next input that is 1.
Then we send it to the final state which I called state B. That means in the
beginning I don't care what it is let it be 0 or 1 but when the last string is
1 if we get the final string S or the final symbol S1 then it goes to final
state B and in B we don't mention what happens after that because we want it to
come to B and B there. If we mentioned something else in B that means that will
not be the last string. So this is an NFA so I don't mention what happens B goes
nowhere after this because this is an NFA. So this is the NFA. I designed the NFA
for the language which accepts a set of all strings over 01 that ends with 1.
Now let me draw the transition table. The state transition table for this NFA.
So what will be the elements in my state transition table? I'll have my inputs 0
and 1 here and here I'll have my states which are A and B and A on getting
input 0. Where does it go? A on getting input 0 it stays in A itself. It stays in
A itself and A on getting input 1. What happens to A? A on getting input 1. It
stays in A itself and also it goes to B. It has two transitions. So that is why I'm using this
set notation here A comma B. A on getting input 1 goes to both A and B and B on getting
input 0. Where does it go? It goes nowhere. B on getting input 1. Where does it go? It goes nowhere.
So we'll write it as 5. B does not go anywhere. So now we have the state transition diagram for
the NFA. Now let us try to convert it to the equivalent DFA. So for that let us draw the
state transition diagram for the equivalent DFA. Now what we are going to design is the
DFA. So let us try to convert this to its equivalent state transition table for DFA.
For that again I'll have my inputs 0 and 1 and first of all let me start with state A.
Let us make the transition table by looking at this table. A on getting input 0. Where does it go?
It goes to A itself. It goes to A itself and A on getting input 1. Where does it go? A on
getting input 1. It goes to two states A and B. But this is a DFA. In a DFA a state on getting a
particular input it can go only to one state. It cannot go to more than one state. So I cannot
send it to two states A and B. So what I will do here is that I will combine these two states A and
B and I will make them one state and I will call it AB. Alright so AB is not two states but AB
is a single state. So AB it is a single state. Single state. Okay so coming to the next state
the next state in this transition table is state B. But can we directly write state B here? Before
writing that state B directly just look at these two states that you have written and see if state
B is reachable from any of these states. We see that B cannot be reached from here anywhere. We
don't see B anywhere. So the only state that can be reached is A and AB and we have already written
for A. So the next state that we have to discuss is AB not B. Alright should be AB.
So we will discuss about state AB. Now in order to know where does AB go on getting
input 0 and 1 we have to come to this table and we see that this is AB. So you have to look at
both A and B in this table and see where both A and B goes on getting input 0 and 1. So in order
to see where does AB go on getting input 0 you have to perform the union operation of A and B.
We have already discussed union operation in the previous lectures so I hope you remember that.
So in order to see where does AB go on getting input 0 we perform the union of A and B. So
a union of A and B means union of A and phi and union of A and phi is A. It's only A. Alright
and where does AB go on getting input 1? AB on getting input 1 I have to perform the union
operations of A and B on getting input 1. Union operation of AB and phi. Union operation of AB
and phi will be AB. AB. Okay so I have written for AB. Now do I have to write for state B?
If I look here there is no way I can reach state B. The only way I can reach is through AB. So you
don't need to write for this state B. This transition table for this DFA is complete.
Okay so now let us draw the state transition diagram for this DFA that we have designed.
So I have two states A and AB. A which is also my starting state or initial state and then AB.
AB is a single state and also AB will be my final state. AB will be my final state and
A on getting input 0 where does it go? It goes to A itself. A on getting input 0 goes to A itself
and then A on getting input 1 where does it go? It goes to AB. A on getting input 1 it goes to AB
and AB on getting input 0 where does it go? It goes to A. AB on getting input
0 goes to state A and AB on getting input 1 where does it go? It stays in AB itself. AB
on getting input 1 it stays in AB itself. So now we have designed the DFA for this NFA.
Let us check if it is complete. I have mentioned in state A where it goes on getting input 0
and 1. AB also I have mentioned where it goes on getting input 0 and 1. Okay so it is complete
and let us see if it is going to accept the set of all strings over 0 1 that ends with 1.
We see that whenever the last symbol is 1 it comes to the final state and when it is 1 it stays in
the final state and if it is a 0 it goes to state A which is not a final state. So it will
accept all the strings that ends with 1. So this is how you convert the NFA to its equivalent DFA
and the method that we have used here in this example and also in the previous example for
converting NFA to DFA is known as subset construction method. This is known as subset
construction method. So this is the method that we followed in these two examples for
converting this NFA to the equivalent DFA. So I hope this example was clear to you.
Thank you for watching and see you in the next one where we will be discussing another example.
