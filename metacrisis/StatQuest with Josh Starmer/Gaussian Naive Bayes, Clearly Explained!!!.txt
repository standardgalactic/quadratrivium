Beep-boop-boop-boop-boop-boop.
Stat Quest.
Hello, I'm Josh Starmer and welcome to Stat Quest.
Today we're going to talk about Galcian Naive Bays, and it's going to be clearly explained.
Note, this Stat Quest assumes that you are already familiar with the main ideas behind multinomial naive bays.
If not, check out the quest. The link is in the description below.
This Stat Quest also assumes that you are familiar with the log function, the normal or Galcian distribution,
and the difference between probability and likelihood.
If not, check out the quest. The links are in the description below.
Imagine we wanted to predict if someone would love the 1990 movie Troll 2 or not.
So we collected data from people that love Troll 2 and from people that do not love Troll 2.
We measured the amount of popcorn they ate each day, how much soda pop they drank, and how much candy they ate.
The mean for popcorn for the people who love Troll 2 is 24 and the standard deviation is 4
and a Galcian or normal distribution with mean equals 24 and standard deviation equals 4 looks like this.
Likewise, the average amount of popcorn for people who do not love Troll 2 is 4 and the standard deviation is 2
and that corresponds to this Galcian or normal distribution.
Now we calculate the mean and standard deviation for soda pop for people that love Troll 2 and draw the corresponding Galcian distribution.
Then we do the same thing for the people that do not love Troll 2.
Lastly, we draw the Galcian distributions for candy.
Galcian Naive Bays is named after the Galcian distributions that represent the data in the training dataset.
Now someone new shows up and says they eat 20 grams of popcorn and drink 500 milliliters of soda pop and eat 25 grams of candy every day.
Let's use Galcian Naive Bays to decide if they love Troll 2 or not.
The first thing we do is make an initial guess that they love Troll 2.
This guess can be any probability that we want, but a common guess is estimated from the training data.
For example, since 8 of the 16 people in the training data loved Troll 2, the initial guess will be 0.5.
So we'll put that up here so we don't forget.
Likewise, the initial guess for does not love Troll 2 is 0.5.
So let's put that here so we don't forget.
Oh no, it's the dreaded terminology alert.
The initial guesses are called prior probabilities.
Now, the score for loves Troll 2 is
the initial guess that the person loves Troll 2
times the likelihood that they eat 10 grams of popcorn given that they love Troll 2.
Note, the likelihood is the y-axis coordinate on the curve that corresponds to the x-axis coordinate.
And we multiply that by the likelihood that they drink 500 milliliters of soda pop
given that they love Troll 2
times the likelihood that they eat 25 grams of candy given that they love Troll 2.
The initial guess that someone loves Troll 2 is 0.5.
The likelihood for popcorn is 0.06.
The likelihood for soda pop is 0.004.
And the likelihood for candy is
a really, really small number.
Note, when we get really, really small numbers,
it's a good idea to take the log of everything to prevent something called underflow.
The general idea of underflow is
every computer has a limit to how close a number can get to 0
before it can no longer accurately keep track of that number.
When a number gets smaller than that limit,
we run into underflow problems and errors occur.
So we use the log function to avoid underflow.
Note, any log will do, but the natural log, or log base E,
is the most commonly used log in statistics and machine learning.
So we take the log of everything
and the log turns the multiplication
into the sum of the individual logs.
The log base E of 0.5 is
negative 0.69.
The log of 0.06 is
negative 2.8.
The log of 0.004 is
negative 5.5.
And the log of this really, really small number is
negative 115.
Now we just add this up
and we get negative 124.
So the log of the Love's Troll 2 score is
negative 124.
Bam!
Now let's calculate the score for Not Loving Troll 2.
We start with the initial guess that someone does not love Troll 2.
Times the likelihood that they eat 20 grams of popcorn
given that they do not love Troll 2.
Times the likelihood that they drink 500 milliliters of soda pop.
Times the likelihood that they eat 25 grams of candy.
So let's plug in the numbers
and take the log of everything
and that turns the multiplication into the sum of logs.
Now we just do the math
and we get negative 48.
And since the score for Does Not Love Troll 2
is greater than the score for Loves Troll 2
we will classify this person as someone who does not love Troll 2.
Double Bam!
Note, when we look at the raw data
it almost looks like we should have classified this person as someone who loves Troll 2.
After all, they ate a lot more popcorn than the average person who doesn't love Troll 2
and they drank as much soda as the average person who loves Troll 2.
However, the big thing is that they ate a lot more candy than the people who loved Troll 2
and the log of the likelihoods for candy are way different.
And this difference is what made us classify the new person as someone who does not love Troll 2.
In other words, candy can have a much larger say in whether or not someone loves Troll 2
than popcorn and soda pop.
And this means we might only need candy to make classifications.
We can use cross-validation to help us decide which things,
popcorn, soda pop, and or candy, help us make the best classifications.
Shameless Self Promotion
If you don't already know about cross-validation, check out the quest.
The link is in the description below.
Triple Bam!
Oh no, it's another shameless self-promotion.
One awesome way to support StatQuest is to purchase the Galicia Naive Bay's StatQuest Study Guide.
It has everything you need to study for an exam or job interview.
It's seven pages of total awesomeness.
And while you're there, check out the other StatQuest study guides.
There's something for everyone.
Hooray! We've made it to the end of another exciting StatQuest.
If you like this StatQuest and want to see more, please subscribe.
And if you want to support StatQuest, consider contributing to my Patreon campaign,
becoming a channel member, buying one or two of my original songs or a t-shirt or a hoodie,
or just donate. The links are in the description below.
Alright, until next time, quest on!
