My name is Jay, Jay Dixit, and I use Emacs, but I am not a programmer.
I can barely write a line of code to save my life.
I'm a writer and a journalist.
I am mainly a science writer.
I write about psychology.
I used to work for a magazine called Psychology Today.
The other thing I do is I teach writing and storytelling.
And I have a company, New York Writers Intensive, so that's me.
So what I'm going to do today is talk to you about how I use Emacs
and why I use Emacs as a writer, as a researcher, how it helps me.
And the way that I think I can best explain this
is by first telling you guys a story of how I came to Emacs.
Why I like it, how it was appealing to me,
and how I sort of found my way to Emacs in the first place.
So here's my first computer.
I guess this wasn't technically mine.
It was belong to my father's university.
He's a physicist, and he used to travel a lot.
And so when he would go away on trips,
he would go to Switzerland.
They had a big particle accelerator there at CERN.
And he would go and he would do his experiment research projects there.
So he'd be gone for a few weeks at a time.
And this was actually before Gmail or Hotmail or any of those.
He actually created a Unix-based script, I guess,
where we actually logged into his account.
And then it was like a makeshift, like send and receive email.
And so I actually learned to type on one of these things.
And then I used to go, yeah, this is how we connected.
When my father was away, I was going to try to make it play the handshake noise.
But I didn't figure out how to incorporate that into the presentation.
But yeah, it's true.
We actually dialed up on a dial-off telephone and then used the modem muffs.
And then, yeah, I think you guys actually can't, unfortunately.
I think the resolution is not great enough for you guys to see this text.
Here's a...
Read the whole thing from the back.
You can read it?
The resolution is just fine.
Okay.
So yeah.
It's a little bit curved from the shape of the screen.
Right.
Yeah, exactly.
That's the way it was back then, right?
So, yeah, here I am writing to my father while he's away.
And that's actually how I learned to type that and this thing that was also on that
same terminal system, which was called Dungeon on our system.
But I guess maybe better known as Zork, one of the original, or maybe the original text
adventure game.
And then after a while, I had a game called, based on my favorite novel, which is still
my favorite novel, The Hitchhiker's Guide to the Galaxy.
And so I actually had that game as well.
And so I was there, like every day after school, typing and typing.
But I wasn't doing any programming.
So even then, by the time I actually got my first computer that was my own, that wasn't
just a terminal.
Because I had no access to any of the Unix, whatever, when I was using the terminal that
my dad set up.
So this was my first computer, a power book.
And on that, if you could hack around on things like Unix, I wasn't aware.
I never heard of it.
So I was using Microsoft Word.
That's how I was writing my papers.
And I also, when I was studying, I would type up my lecture notes and I would create a big
outline.
I would have the whole semester outline with each class and the topics and then ever increasing
levels of indentation for the hierarchy.
I think that's just how, I think I always kind of thought in outlines that I was kind
of my mode.
So I was using Microsoft Word.
Microsoft Word evolved and it was, you know, it was fine for me for most of that time.
You know, I didn't mind, I don't remember minding it at the time and I didn't know that anything
else was different, was available.
And it wasn't until I, more recently, a few years ago now, decided to write my own book,
to research and write my own nonfiction book, psychology book, about the psychology of the
unconscious mind and how we make decisions and choices about love and sex and dating,
all based on psychology studies.
So that's the book actually, still working on it.
But once I started working on that, I realized I wasn't going to be able to do it in this.
I needed something, I needed a better way to organize it because the hardest, in fact,
still the hardest part of this process of writing this book has been figuring out the
structure of the whole thing and there's like a, there's so much information that's unwieldy
and it's so hard to conceptualize it all in one moment in my mind all at once anyway.
So I needed a way to represent it and just play it and manipulate it and so I started
to look, I realized I needed a different solution.
So I did what I always do, which is I went to do a goal and I was like, okay, how do
I, I have learning tools for writing and I found a different, a few different solutions.
One of them was this tool called Workflowy, which I really love, I still love, something
you may know it, it's just an outliner, hierarchical lists, everything is a list.
There's, I think, yeah, I think you can do, yeah, you can have a little bit of text that's
not, you know, you can add a note to a list, but the main content is always in list form
and, you know, you always just increase the indentation as you go deeper into the concept.
I liked this, but it wasn't very, it's a web-based tool, it wasn't right for writing my book
in. It was a little bit slower and also it lacked, you know, I was always, even though
I grew up on a Mac, I was always a sort of power user where I was doing a lot of keyboard
shortcuts. This didn't have them and I just, it was all mouse, mousey, drag and drop. It
took a long time and I was like, this isn't going to work either to write in this higher
book, 300 pages. So again, I'm Googling and I found another tool, Scrivener. I don't know
if you guys have heard of this, but it's an interesting tool and the way it works is here
on the right pane, you have the text and here you have, you know, like folders and files,
kind of what do you call that, like a Windows Explorer style interface in the left pane
and you can drag and drop to rearrange, you know, if you're like, oh, I want to, this
section here, I want to move it to the beginning of the chapter. You can do that, but again,
it's slow and it's all drag and drop with the mouse and I didn't like that. And also
it's just so, I don't know, it seems hectic to me. It didn't seem, you know, it wasn't
like the kind of, this is also when, you know, distraction free writing environments were
becoming popular and I was like, this is kind of like the opposite. It's just like, it's
all distraction and it's so cluttered visually and I didn't enjoy using it. I always just
felt like it was, you know, I had this problem of overwhelm with thinking about my enormous
book subject and I think, I felt like this wasn't helping. I felt like this was like
making me feel more anxious about how much information there was and trying to wrangle
it all into a coherent outline and hierarchy. So I decided I didn't want that either. And
between Workflowy and Scrivener, I kind of, I was like, I kind of could describe what
I wanted. I knew what I wanted. I was like, if only there were a tool that were kind of
like, you know, halfway between Workflowy and Scrivener and if it did this. And so what
I did to my next step was I realized I needed a better solution. So, you know, my first
line of defense was Google, didn't help me. So I went on to the forums and this headline
by the way says, man, it's an onion, onion headline manager that almost falls into world
of DIY mustard enthusiasts. And it talks about how he starts, you know, he's Googling for
like the best kind of mustard and then he finds this forum about mustard and he starts
posting, you know, he reads all the threads about different kinds of mustard and he starts
posting and becomes an active user. And at a certain moment he's like, what am I doing?
Why? This isn't me. What am I doing? And that's for sure happened to me with a bunch of different
things. Like I could be standing here giving a presentation about different kinds of blenders
and the best blenders for green smoothies. You can also mix soup with them and blend
tech versus Vitamix and all the prices because when I decided to buy a blender, I just because
I did it because that's what I do. I guess I became an expert on it. So I went into the
forums and I posted my post about, this is where it all began. This is my original email
and I'm going to read it to you because I think this is, you know, this is the turning
point for me. First of all, it's on a forum called Outliner Software.com. I was like,
I need an outliner. This is a good place to start. And the subject is outlining the
left pane text in the right. And here's the text of what I wrote. Hey everyone, is there
an app that displays keyboard editable hierarchical structure in the left pane and text editing
slash word processing in the right pane? I'm looking for a Mac or web-based app that will
allow me to create and modify hierarchical structure. I'm so specific, right? It was
like, I was like, I may as well just say I'm like, like dream wish list of all the things
I want. Modify hierarchical structure in the form of multi-level bullet list in the left
pane and do text editing slash word processing in the right pane. I wish I could combine
Workflow and Scrivener into one tool. The good thing about Scrivener, it displays a
hierarchical structure in my document in the left pane with headers, sub-headers, sub-sub-headers,
and displays a text editor slash word processor in the right pane. The problem with Scrivener,
creating new sections, moving sections around, nesting one section beneath another, etc.,
is cumbersome. Every time you want a new level of the hierarchy, you have to choose new text,
like mouse to the menu, name it, and use the trackpad, not the keyboard, to drag it to
where you want, blah, blah, blah, the good thing about Workflow. I want a tool that's
like Workflow, a quick keyboard-based editing and modifying, so I'm just describing exactly
what I want, right? I got a bunch of responses and none of them were very helpful. Here's
this guy who says, I used mori for this sort of thing and I found it well-suited. I don't
know if it's available for the Mac, though. Development has been scarce and erratic in
recent years, but you can try it for free. Somebody else is like, OP, that's me, is asking
about something that's hard to find in modern outlining applications, even harder on Macs,
and he describes what I want, and he's kind of like, yeah, you're not going to find it.
There's something called, I agree with another poster, that tree is a good option to try,
although the notes are in line and not in a separate right-hand pane as the original
poster requests, so no luck there, but then, okay, but then I get this email from somebody
named JB from who says, you can do this in Emacs org mode by using indirect buffer, vertical
split screen, and visibility cycling. Everything is handled via hotkeys. It's available for
Mac. I frequently work in this mode for longer documents. What? This is possible? Oh my God.
I was like, I can't believe that somebody just designed a tool that's exactly what I
want. Little did I know I would have to basically design it myself or I should say, customize
it to make it into what over a period of years, but yeah, so I write back immediately. JB
from Emacs org mode sounds like a great solution. I'm intrigued. It also looks a little complicated,
but, right, understatement of my life, but if it indeed does exactly what I'm describing,
then I'm willing to take on a learning curve. I've downloaded Emacs in org mode. Can you
describe how to set it up to do this or direct me to a resource that will? So he tells me,
so I do, I install it, and this is, I want you guys to hear this email, because this
is me at the beginning, as a non-programmer, a non, you know, I've never used Unix once.
I've just been using Microsoft Word my whole life and Scrivener and Gmail. I say, hey Joseph,
thanks for the tip about Emacs org mode. Oh, so this is later. I've installed it. He
sent me his email address and so now I'm emailing him. So I'm reminding him why I am. Thanks
for the tip about Emacs org mode. It looks a little scary, but I'm ready to try it out.
I'm trying to get started and I've gotten stuck wondering if you can help me. I've
installed Emacs and Ergo Emacs on my Mac. Now I need to install org mode. I didn't, I
really had no idea. I downloaded org mode and I'm trying to install it. The documentation
simply says to install org mode, edit the make file, type make, then make install to
create the PDF and HTML documentation files, type make doc. But where am I supposed to
type these things in terminal? I knew that there was an app on my laptop called terminal.
I was like, in terminal? Do I somehow type them into Emacs itself? Or do I get a prompt
in Emacs so I can type commands? This is, uh, yeah. Yeah, I think that's right. Yeah,
that sounds right. Um, so that was me. Where do I type these things? I don't even know.
I was definitely one of, I was definitely one of these guys at the time. Uh, but you
know, everybody has to start somewhere. So over time I figured it out. Uh, eventually
I got it working. I don't know how well you can see this, but this is me, uh, outlining
my book using org mode. Uh, and I eventually figured out how to do exactly the thing that
I originally described with, uh, two panes with text in the right. And my outline, which
is editable and hierarchical, and I can move around, uh, uh, I can move headings around
in the hierarchy, uh, using just the keyboard. And so I did it. Um, hey.
Yeah.
Uh, wait, wait. Can I ask you a question about that? Yeah. Um, when you were moving around
in the, in the org, is it just showing you different documents or is it actually? No,
this is one big document actually. So those are headings that I have.
That's just pointers to bookmarks or reports. They're actually headings in my, you know,
that are going to be in the book too. They're like, um, yeah. So those are, those are headings
and, you know, this is what, what are these headings?
How does that work for people with bookmarks?
Of org mode? I can, I'll demo, I'll demo org mode in a bit. Um, I'll show you how that
works, but it works exactly as I wanted to. Um, I have that, you know, I'll, I'll, I'll,
in a second, I'll open Emacs and I'll show you guys what I do and how I do it. But, um,
it works for what I wanted to do. One of my tricks too is, uh, is, I don't know if you
guys can see, these are, uh, you don't, you don't call them hashtags. Uh, yeah.
Octophor is right. Of course. Why did I know? All right. Um, I actually comment my writing
this thing, you know, like you guys comment your code and you're like, oh, this is trying
to do this or couldn't figure this out or whatever you say. Here I'm saying, I have a, I have
a phrase and I say, phrase this better. And then here, uh, I had a sentence and I said,
what's a non-psycho to myself, right? All the comments are just to myself. Uh, what's a non-psycho
babble way of saying individual differences. And then I'm going to find out the answer and
then I'll uncomment it when I actually change the text, right? So I still don't really know
what I'm doing. Here's, uh, I like this from XKCD. Uh, he says, this is how I feel all the
time. Um, one person says, keep in mind that I am self-taught. So my code may be a little messy.
That person says, sure, uh, let me see. I'm sure it's fine. And then looks at the code and says,
wow, this is like being in a house built by a child using nothing but a hatchet and a
picture of a house. It's like a salad recipe written by a corporate lawyer using a phone
autocorrect that only knew Excel formulas. It's like someone took a transcript of a couple
arguing at IKEA and made random edits until it compiled without errors. And he says, okay,
I'll read this all guy. So that's me. Most of my code that I have is I don't, because I, I'm now
just starting to learn how to program Emax less. Uh, but up until this point, it's just me
basically either, you know, Googling as I do and copying code snippets that and, you know,
spamming them to see if they do what I want or posting questions on a stack exchange saying
like, Hey, I want to do this. Anybody know how? And then, you know, tricking other people into
writing code for me. Um, so that's where I am with it works. People always answer. Um, and
yeah, it's complicated. I'm sure you guys, oh, I'm sure you guys have seen this at many times.
Uh, here it is. Yeah, the Emax learning curve. I'm still working. Actually, one that I like
better than this is I once saw a blog post, uh, that said it was called, uh, how to learn Emax
in 10 years. Only 10 years. Oh my God, I gotta sign up. Um, so yeah, I'm still, I'm still working
on it. Uh, it's one of the reasons I'm here is to like learn more, but, um, I'm definitely a good
company. Okay. So this is George RR. He doesn't use Emax. George RR Martin who, uh, wrote, writes,
he's not finished, who's writing the Game of Thrones series. He uses, uh, uh, what's it called?
He uses, uh, Wordstar. Uh, where did it go? I had a picture. Yeah, Wordstar. Yeah. Yeah, there's
Wordstar. I kind of, I kind of like to imagine, you know, so I'm not the only writer who doesn't
use Microsoft Word. There's other, you know, there's a time-honored, proud tradition of writers who use
other text-based tools. So here's Wordstar, uh, which is an old DOS text editor, and that's what
George RR Martin uses. Oh, there you go. Yeah, exactly. Yeah. Yeah. I haven't tried it. I don't know.
I'm, I'm, Emax is doing what I wanted to do now, so, so I'm not going to, I'm not going to dive in, but I like
the idea that I'm, I, yeah, I'm kind of like him, you know. Also Arthur C. Clarke used to use, uh,
Wordstar as well. Um, I think he, he might have, there was, there was a thing where he's like, I would like to
thank, uh, without this, I wouldn't have, I don't know if it was a dedication of a book, but he basically,
maybe it was a dedication and he like dedicated a book to Wordstar. Um, and then another person is,
uh, Neil Stevenson, who actually does use Emax. Um, and, uh, he has this quote, I don't know if you guys,
so he's like the, you know, he's the archetypal writer who uses Emax. Uh, his quote is,
uh, the engineer hours that, this is from a larger essay called, uh, in the beginning was the command line.
Uh, the engineer hours that, in the case of Microsoft Word, were devoted to features like mail merge,
and they built it to embed future-like motion pictures in corporate memoranda, were, in the case of Emax,
focused with monogonal intensity on the deceptively simple seeming problem of editing text.
If you are a professional writer, i.e. someone else is getting paid to worry about how your words are formatted
and printed, Emax outshines all other editing software in approximately the same way that the Noonday,
Noonday's son does the stars. It's not just bigger and brighter, it simply makes everything else vanish.
Uh, so he really loves Emax. Um, there's Wordstar and, uh, George, or Martin, and, uh, closing note
for this part of the story. Um, that's George, or Martin, who uses Wordstar, and, uh, just Richard Solman.
Just, just saying, just throwing that out there. I mean, I mean, coincidence? I don't know. I don't know.
Um, okay, so that's how I found my way to Emax and what I was looking for. Um, so I guess now what I'll do
is I'll fire up, um, our favorite, uh, text editor and get a window and show you guys a little bit.
Um, and I'll make this part interactive so you guys should, you know, I didn't, this is, I didn't plan much for this part.
Uh, I figured you guys could just ask me what, what, uh, you want to know. So first of all, um, that presentation you just saw,
it was written in, uh, Emax. This is something called Org, uh, Org HTML slideshow.
And so, um, yes, you see this is the, this is Org and, uh, you can put in images.
A lot of these are just images. Um, it's a pretty cool tool.
For me, for me, this is an alternative, I guess, not to make myself word, but to PowerPoint, you know, instead of having to,
I mean, how annoying is it to, to like paste an image in and then have to like drag it to the right place and then resize it with the
resizing thing? I don't want to do any of that. I want, can I just like paste a URL with one keystroke?
Maybe you want a computer to do boring work like that for you.
Exactly. Exactly. So that's why I use Emax. So yeah, there's, uh, my presentation. Uh, you know, you guys didn't see this,
but some of these actually had, uh, um, notes, um, which only occurred on my screen. It's kind of cool.
Um, so that's how I do presentations. Oh, here's an article that I wrote about, uh, something called Downtown Project.
Um, details don't matter, but you can see, okay, uh, here's, here I'm kind of like outlining and writing stuff.
Uh, extra is like a little, that's kind of like a place where I put in notes that, uh, I've cut. Actually, I have a tool,
Patrick, I showed Patrick this before. I have a tool called, uh, a lot of times I'll find text that I'm like,
I know this should, this isn't go here. I don't, this is probably just should be deleted, but I don't know.
I definitely wanted to lead it necessarily and I don't want to have to rely on version control to go back and find it if I need it later.
So I could just delete it and, or what I can do and then it'd be lost forever.
Or I was a tool called Palimpsest mode where with one keystroke, it gets sent to the very bottom of the file.
So that's how I, that's what those, um, headers called extra are.
They're just, uh, I sent unneeded text, unwanted text to the bottom and then it's not in the article itself.
Um, yeah, this is me outlining and so to answer your question from before about, you know, moving headers,
I can just like take one of these and just move it around, just with the keyboard.
So if I want this section to be getting, it can go there, um, easily.
Let's see, I can, uh, in fact, I wanted those numbers in, yeah, I added those numbers at the, this is actually done.
So as a very final step when I was exporting to work is I have to file and then I can set where I added those numbers,
like as part of the text to show, to show them that I wanted the numbers to be in the, you know, I could have done that with automatic,
you know, numbering here, but then I didn't want to bother to be like no export for all the others.
And so I just thought it would be just, but yeah, I'm sure that we automated too.
But, uh, yeah, here's, um, I'll show you how I export because this is important.
Okay. So this, uh, is the presentation.
I actually just gets exported to HTML and that's what we saw.
The presentation there was in Chrome.
Um, here's a business plan that I wrote for my, uh, for my, uh, company that where I teach writing, we teach writing and storytelling.
Um, so this is again in work mode.
And if I wanted to comment something I could, um, this should be expanded, whatever I want to say.
Um, and then I can export either to HTML, here it is, wrong window.
Actually, let me just try doing it again with that window focused.
Okay. Export.
I added a little, uh, JavaScript and stuff that I didn't write that I found, uh, to do a table of contents.
Yeah, exactly. My savior.
Uh, so here it is, uh, in HTML.
And I can also, this is the cool part too, is I can go back to my, um, same source and I can export through, uh, latex, LaTeX.
LaTeX. LaTeX.
LaTeX is okay, so.
Trojan.
That could just fit.
But LaTeX can be pronounced LaTeX or LaTeX.
Yeah.
According to Leslie Lin.
Uh, I don't, I don't write, I don't, uh, I don't know how to hack LaTeX.
Um, I actually just hired somebody on, uh, you know, Fiverr.com where you can hire people for $5 to do a template for me in LaTeX.
This is taking a long time to process. I can probably just, oh, there it is.
Can you see that? Yeah.
Um, so there's my business plan and it comes with a total table of contents and appendix and headers.
And I designed, I designed this and I told him exactly what I wanted in the, basically, I designed it in HTML and CSS.
And I was like, do this in LaTeX.
And so he did.
Um, so yeah, actually I, this exports from the same source.
Um, and then obviously, uh, there's so many other things that I can do.
I don't even know where to start, but you know, I could do, I could search in, I could search across files, which I could not do in Microsoft Word.
Um, I could search and replace across files.
Microsoft Word's just search and replace interfaces horrible.
Um, it's all, the focus always goes to the wrong place.
And you have to mouse to a different window and like, you know, type to the, you know, move the cursor to the front of the line.
And then it just takes a long to do anything.
And then it's only, uh, it's only for that one file.
And, uh, you also can't, uh, if you have different, you know, it always defaults to print preview mode or print layout mode.
And I don't want that.
I just want draft mode, like just text.
Like what Emacs is, right?
But you can't, there's no global setting for always open in draft mode.
You can't do it.
You have to, every time you open a file, Microsoft Word, Doc X, whatever, you have to go mouse over and like choose draft mode instead.
It's just got to be such a pain that I didn't want to do that anymore.
Deal with it anymore.
Um, so Emacs does what I want.
I can, yeah, if I want to, I can easily do my little split window thing and yeah, I can, uh, yeah, I can do, I can make this.
Uh, what is it?
Clone window, indirect buffer, other window.
So now these are independent.
So this one gets, uh, expanded.
This one stays the same.
Or I think I can actually just, uh, what's it called, uh, zero in and make it so that this is my whole, like, buffer is displaying only this subtree.
Uh, so that's helpful too.
Or I can widen, widen.
If you stuck around the right-hand side, does it reflect it in the left-hand side as well?
Uh, yeah, it does get reflected.
Yeah, because it, because it has to.
It's the same file, so.
It's the same file being, there you go.
So I just moved products and services, I don't know if you saw that.
I moved products and services to before executive summary or, you know, here, this will be a more obvious example.
I'll take the appendix and I'll move it to the beginning.
So now, when I, there you go.
My appendix is the first thing.
Uh, so that's easy.
Um, and then I can, you know, I can search and replace, uh, reg, regex, regexps.
Um, and I can, regex?
Yeah.
Is it regex or regexp?
Regex.
It's regexp.
Yeah.
Either one.
Yeah.
That I knew.
Yeah.
Yeah.
Say regex.
Regex?
Okay.
Some people say programming JavaScript.
Okay.
So, so, so I, I'm a, uh, I'm not, I'm not a sophisticated user in port mode.
Um, but I've used it to write a few, uh, presentations for export behavior.
Yeah.
When I, when I use it, uh, like top level heading is asterisk space, you know, did whatever the.
Yeah.
I'm using something called org bullets mode, which is just a little bit cleaner because,
uh, I figured the easiest way, or I figured the easiest way to display all these was with
indentation and coloring.
Um, you know, I can, I can move this in or, you know, these are different heading levels.
Um, but, and why do I have, you know, I didn't like Scrivener because it had all that clutter.
Um, so why do I want extra, like what's the utility of displaying the bullets?
But I could if I wanted to.
Okay.
Right.
So, for you, like, what is, what are the most important tools that you have to add to that
problem?
Like, you're right.
Like, things that you even have in the org mode or like just, like different centers that
you've had to get a code or just.
Yeah.
I mean, I do so many things in Emacs that is, again, it's hard to know where it's at.
I do email, um, I compose email.
I just got, uh, this is not much mode, but I finally got working.
Um, so, you know, a lot of it, I mean, I would say actually the, one of the most important
things is, uh, you know, just customizing, uh, key bindings so that I'm unbelievably fast
moving around, um, the, the screen.
Uh, and so that when I remember, I do have to work in Microsoft Word, I'm like, why is
everything so slow?
I can't get to where I want to go because, you know, as you guys all know, you get the
muscle memory in your fingers.
So just being able to move around text is probably the biggest thing that I have customized
those key bindings to work for me and to be consistent with using a Mac and some things
that I was used to and, um, things like that.
Um, yeah, let's see.
What else?
No, not at all.
Everything customized heavily.
Um, yeah.
So, I mean, so those, that export, I mean, when I export HTML, all of that is getting customized
through a bunch of stuff.
Um, oh, here's one, uh, I can Google from within, uh, Emacs.
You guys have seen the, yeah.
What?
Good new goal.
Yeah.
I think I mentioned that to you last time.
Yeah, exactly.
So you guys have all seen, you know, you can just choose a, you can, you can Google something
and then it opens in Chrome.
You can Google something from within Emacs and it opens in Chrome.
But what if I don't want to leave, uh, Emacs at all?
I can just Google something and, uh, get it displayed in org mode.
A lot of times I don't need to actually, you know, surf around and read a million things.
I can just, uh, you know, I just might need the first sentence of the top hit or something
and it tells me what I need to know.
Let's see, what else can I show you?
Um, I do a lot of, uh, I do a lot of, uh, Abrev mode stuff.
So this is something that I've been working on.
So like the, um, big thing about this is, can you guys see what I'm doing?
I typed K space, the IG, TG space, AB space, TI, H space, S space, N space.
And so, uh, you know, it gets really fast.
You can't do that in Microsoft Word.
Um, I just kept on adding, you know, I started out with, I think this is my first, uh, Abrev abbreviation.
Or I was like, why am I typing the long word?
You know, I know what I'm going to say, um, development, DVT, right?
Um, because there's no time I ever need to type BC and have it stay as BC.
So from now on, BC means because I just kept on adding abbreviations.
And now I just have probably hundreds of them.
Can you find them or something?
Yeah.
Wait, how many are there?
Um, how do I define abbreviations in Emacs?
I have a file here where not all of these are mine.
Some of these are auto correct, uh, corrections that I imported from a bunch of lists.
But, um, you know, a lot of them are.
So here, GA expands to game.
GA by itself, it expands to go.
FY expands to funny.
FX to, for example.
I don't know what the number of the N means.
Yes.
Uh, the number at the end refers to how many times it's been invoked.
How many times it's been used.
So, um, so the words, uh, G for go, 291.
But if I find like the, um, there's 9712 times,
I didn't have to type the word the because it got abbreviated.
Um, so, yeah, I do have carpal tunnel syndrome.
That's part of why I justify this insane system of abbreviating everything.
Um, it's called a breath.
A breath mode.
Yeah.
Yeah.
Yeah.
Oh, cool.
Great.
Um, yeah, I haven't found a, okay, collaborate yet.
I mean, what I usually just do is, um, is I export to HTML and I copy face and I put
it in an email.
Yeah, I just, yeah.
I usually don't, I don't have a situation where I have an ongoing collaboration with
somebody.
If I did that, I'd probably use Dropbox and make them, you know, read the org mode source
or something.
But usually I just send somebody something, they send it back, I edit it, I send it again.
And when I do that, I usually just paste it in email.
It's the easiest thing.
So I work in org mode and then I paste something into a Gmail window.
Or I just use my, um, e-max email to do that automatically.
There's a org, uh, org MIME HTML where it takes, you know, your org subtree and automatically
generates, uh, um, an HTML email and sends it.
Yeah.
That's kind of cool.
For, uh, aggregation, uh, what happens if there's something you actually want to type?
Like that is an aggregation.
Is there, is there a keystroke or a macro that you can do?
If, if I want to type something like BC without expanding?
Yeah.
Yeah.
I can just type, uh, I bound, uh, um, alt, alt space or I guess I should say, uh, meta
space to insert space but don't expand.
So, yeah.
Yeah.
Yeah.
I, uh, I do use GitHub.
Um, again, I don't really know what I'm doing, but, and it's just, but it's, but I figure
it doesn't really matter that much because it's just me, you know, I don't have collaborators
that I'm collaborating with.
Um, it's just me, but here's my book and I have, um, there.
And you can consolidate it a lot.
Um, deleted stuff, insulting proposals, simplified directory structure.
Did some good work on this day, 12 days ago.
Cool.
Good.
I didn't do a farm.
I was like, I'm ready to trade.
Wow.
I cracked the structure.
That was a good day.
Um, but yeah, here I am.
Just, it's all just me.
I don't, it's, I don't mean anything complicated.
So I'm just doing, uh, you know, I'm treating Git like a way to just do a snapshot whenever
I, but then also instead of having to, what I do, what I used to do, you know, like,
what I do, what I used to do, which is save a file and have it called, uh, article underscore
V1 article underscore V1 hyphen draft article V1 draft hyphen shorter hyphen hyphen cut
a lot, you know, instead of having to do that and make this way.
Now I can just, as I go and there's stuff that I don't want.
Um, and I don't, unless I don't even want to send it to the end of the file using palimpsest
mode, I can just delete it knowing that it's all here and I'll make a notation that I deleted
stuff, like deleting unnecessary stuff.
And then, you know, I can go back and find that stuff.
If I was more, some, a friend of mine just told me that I could be more sophisticated
and actually use a tag, like, uh, like a Git tag delete so that I would then know whenever
I delete a bunch of stuff.
Um, so yeah, I do use Git and also if things dropped, uh, backed up to my dropbox and I,
you know, do external hard drop backups.
So what do other writers think of your workflow?
Have they tried to adopt or at least e-maps?
Are they interested?
You know, I don't really know.
Um, random people in coffee shops always say, oh my God, what are you doing?
Are you coding or sometimes, you know, one time I tweeted a, uh, let's see, I tweeted
a photo of me here.
Yeah.
Um, I was saying, I was like, I stayed up one night writing.
And so this was me using org mode and working on my book.
And I tweeted it, the photo and, uh, you know, uh, one writer friend of mine said,
what is that?
That looks like, that looks like coding her husband works for Google.
Um, so she, you know, there's, they were, I guess they're shopped, but I haven't really,
I mean, I haven't had an opportunity to, nobody has really asked me in detail to take them
through the workflow and how it works.
I think you guys are interested in it and regular writers who are fine with Microsoft
products.
It looks like you upgrade your panel set to one of the three panels.
There's not five.
Five panels.
And I see a five.
Yeah.
So I've got a laptop and then external display sitting above it.
Yeah.
So you're not in Emacs Evangelist and you're not telling writers, oh man, this workflow
or this program is the best.
I want to give you a quick competitive advantage.
Well, I, I thought the content was competitive advantage.
I've spent, you know, I spent so many hours every week, you know, Googling stuff, hacking
E-list, Emacs list code and trying to get things working and then debugging.
Since I don't know what I'm doing, debugging things that don't work that I don't, you
know, I wouldn't recommend it to somebody who's, if they're fine with it.
And you know, there are other tools for writers where I wouldn't recommend to anybody use
Microsoft Word, but there's a tool called NB ALT.
Do people know that?
Um, I could maybe even fire that up.
I think I probably have it on here.
This is a great tool for a writer.
This is, yeah.
Okay.
Yeah.
So what this is, is, um, this is Markdown and, uh, I have a bunch of, yeah.
So if I type a B then it narrows, wait, type a B it narrows and I type a BR.
So here it's, um, yeah, and it narrows.
It's, uh, what do you call it?
Incremental search.
And so it's a really fast way to search one, uh, directory for all your text files.
Or if I say, um, if I search for something that doesn't exist, then I can just search
for it and then I can start, uh, writing it and then it gets created as a new text file
in that directory.
So it's super fast, easy way for writers to be back up a bunch of files and find whatever
they want quickly.
It's Markdown, you know, Markdown is good support for a lot of things too.
It's not as powerful as any of this stuff, but most writers probably don't need it.
But this is a good way to, you know, solve the problem of finding things across files
and all those problems that I mentioned in the beginning.
You can use Pandoc to export from this to PDF.
Other than that, has there been any other way to organize your random notes that don't
know where to fit the answers to the normal?
It was like using additional philosophy for that?
No, I'm not, I don't use this.
Um, I was just saying, if, if I was going to recommend, if somebody, if somebody said
to me, if a writer said to me, hey, I'm not a tech person, but I, Microsoft Word is too
slow, what should I do?
I would probably say use MVAlt.
I wouldn't say, uh, go onto this life path of, of learning how to use Emacs because
realistically, I know that it, you know, it would take so much time and it would take
over their life and I don't know if I could want to be responsible for another writer's
loss of productivity in that, in that way.
How do you explore organizing search for notes and ideas?
How do I, how do I organize in search?
Um, I use, uh, yeah, great question.
Um, I use, um, so within a, within an org mode buffer, obviously I can just, uh, you
know, search with eye search.
Um, there's also a Helm swoop, so that if I type org, um, Helm swoop will do, um,
it'll show me all of the occurrences of a string within my current buffer and I can
also, and there's all, there's different commands.
I think this might, the one that I just invoked might be just this buffer or maybe it's all,
all open buffers.
Yeah.
So it shows me all occurrences and all, uh, open buffers of my string.
Or if I want to go further than that, I can, uh, use, I think this is, it's either
RGREP or, um, here, or it's, uh, I'm going to replace it with, uh, AG, AG.
You guys probably know, know all of these things as like the UNIX tools that they are.
I'm just kind of like, yeah.
So this is Helm AG.
So I use Helm and this is, um, searching for everything within that directory and obviously
I can specify the direct, you know.
By default Helm search, uh, which I have been to a single keystroke, which is to search
within the directory that the current file is in, but obviously, you know, worst case
I can go to, um, RGREP and specify exactly what I want to search for, um, and where.
Right.
So, or maybe we're just asking to check.
Does he know about RGREP?
Um, so, yeah.
Oh, that's because I'm beginning to check together, like, you know, say, yes, because I
want to, like, write a full project.
Yeah.
I have a thousand volunteers and specialists in my head, but I, when I talk to someone about
them, they're going to give a full project in Canada right at the end.
Yeah.
So I'm not sure that they're organizing them, and I just don't know if he, uh, will do
that, because maybe it's still going to be okay.
I'm just going to get in contact with one of my-
Oh, yeah.
I'm going to show you guys another thing, which is, you know, it's called Big Fish.
No, maybe it's not.
Fish.
There's a fish mode.
What's that?
No.
Um, there's a movie called Something Fish.
Who knows what that is?
No.
It's a Burt movie.
Yes.
Big Fish.
It is called Big Fish?
It's called Big Fish.
Uh, I had a file called that.
It is called Big Fish.
Why didn't it come up with spotlight?
Here.
Um, so, uh, right.
So, text mode.
So, if I type a screenplay, this is pretty cool.
This is something- okay, here's a regular- here's a screenplay.
This is the actual screenplay to, uh, that movie, Big Fish.
Um, it's just text, but there's a mode, a Emacs mode called Fountain Mode, where it
takes that and it formats it automatically as a screenplay.
And unlike other screenwriting tools where I would have to, you know, highlight this
and then go to a menu and say, okay, this is character.
And then this is dialogue, right, with the menu, which is how other screenwriting tools
still are, or maybe there's keys for us to do it, but you have to specify it manually.
This just parses it because it's a text and it's a very predictable structure.
It parses it and then it converts it all into, uh, you know, screenplay format.
Um, yeah.
Yeah, it's just text.
I could actually- so here, it says, another patch in sympathetically, then adjusts his
tie.
I mean, if I wanted to, uh, I could edit- I could edit the actual screenplay of Big
Fish and say, whether that's an unsympathetic play, and then adjusts his, uh, you know,
hair.
No, the Big Fish is a different screenplay.
Yeah.
Yeah.
It would have been so much better.
Oh my God.
Well, so-
Fountain is the mode.
Fountain is the mode.
And in fact, fountain is a format that is available for- for example, it's available
for, um, you know, other text editors that do markdown also.
Uh, so you can use fountain to parse text from lots of different sources, not just
Emacs, but yeah.
Emacs has- the same way Emacs has a markdown mode, it has a fountain mode.
I post Linux on a friend in the right screenplay session, you post that.
Yeah.
Um, I found something that I mentioned to a few people here recently, um, called poetry
mode.
Um, poetry mode, um, which is kind of cool because, yeah, this is a home with syllables.
You see what it's doing on the left?
It's counting the syllables, which if you- it's actually really useful because, uh,
you're either counting on your fingers or you have something like this.
So that's kind of cool.
Um, and then there's also a way to- this is called, uh, it's not in, uh, it's like kind
of retired, but it's called poetry mode.
Um, he emailed the guy and he said that he gave up on it, but, uh, and he said that
it was astronomically more complex to calculate syllables than he was anticipating and he
spent all the time just calculating, figuring out the syllable counter and then he was
like, okay, I need to stop working on this.
Um, but I can also use this as a function in poetry mode, which I have not, uh, down
to a keystroke, which is rhyme poetry word, which takes the word at point, and rhyme is
it.
Um, yeah, you know, it would be more helpful, actually, if there were a way-
Ken there, is this read in, uh, in this village, or where he's at?
Ice in the air.
Ice in the air.
Um, St. Clair, St. Clair.
Billionaire, there's one.
I thought it would be cool to actually keep this pane open and just automatically, uh,
rhyme, rhyme, whatever word is at the end of a line we were talking.
Uh, there's actually, yeah, so that's poetry mode.
I won't get into that, but yeah, there's poetry mode.
So, I don't know, I do everything in Emacs and I'm all, there's something that I want
to do that is not working, then, uh, I Google and try to find a mode to do it, or maybe
I try to convince some of you guys to write it.
Um, do you take advantage of things like word capture mode?
Word capture, yeah.
Uh, here, word capture, uh, command, sorry, control C, C, select a capture template, and
then I can, uh, you know, I have different, this, these are different files.
You guys are seeing the inner workings of my brain at this moment.
Uh, these are different files, I can choose one.
Here's a captive buffer, and it just, this is just a simple one where I can, you know,
today I do, um, and then, you know, I can, I can write text and then I can hit a keystroke,
uh, command, uh, control C, control C, and then it captures it and puts that file away.
Uh, and then if I open that file, it has all of these ones that are categorized.
My diary entries, essentially.
Yeah, I have been getting crashes recently, which I can't figure out, and, you know,
actual Emax crashes where there's no backtrace because, because all I see is the finder
and where do you Emax go, yeah.
Uh, so I, I recently added that, yeah.
Why did you choose regular Emax over Aqua Max?
I started with Aqua Max, yeah.
And then at a certain point, it became, at a certain point when I started doing a lot of
customizing and taking code, uh, from, or asking, you know, taking code from places I found online
or asking people to help me with things, every time I asked a question on, on Stack Exchange
and said, okay, I'm using Aqua Max and I'm trying to do this, it's not working, how do I do it?
They would always get mad at me and be like, well, why are you using Aqua Max in the first place?
You should be using the new Emax.
And so, uh, eventually I switched.
Um, but I definitely already, um, implemented all the functionality that Aqua Max has, uh,
into new Emax that didn't come with.
Like, um, yeah.
Like Aqua Max has some smart functions where, like, if you are, uh, you know,
um, cutting and pasting text or deleting by word, it doesn't leave extra,
it doesn't leave extra spaces.
Can you Emax by default does?
So I created something where it fixes the space and, uh, there's a, there's an Emax command
called just one space.
So kill word and then run just one space and then twist the space.
Things like that.
Aqua Max has a lot of great things.
I don't have anything against it, but it just became easier to use the one that everybody else was using.
Do you use big-time corrections?
No, I don't, I don't do that.
I, um, the way that I've been keeping track of, well, actually, okay, that's a good question.
How do I keep track of references?
I have a little, I think, I, this is through Abra, Abra mode.
I can type, no, um, oh, I might have, I might have deleted it.
Oh, I recently, there it is.
Okay.
A footnote.
So I can, I can add a footnote and then when I, yeah, I don't know.
And then when I export, that becomes a footnote, right?
So that's what I've been doing, just adding footnotes as I go.
And then I have a bibliographical essay where I actually write in prose.
The section about made preferences comes from a paper by whatever, you know, and I have that in prose and I,
because I'm not writing a, you know, a thesis where it needs to be in a certain format,
figure the easiest way is just to write notes.
That's what people do these days, is write notes saying where you found different stuff.
Okay, but this paper is not going to some database to look up the reference.
Oh, no, it's not at all. No.
Type A and N.
That's right.
Yeah.
What are two minor questions?
Oh, sorry, actually, I'll hold you right there.
But as a follow-up to that question, you know, because of course, you know,
keeping track of citations is important.
If I get something online, for instance, I have a tool that will, or not a tool,
but just a function that will, that will, okay, that didn't work.
That was not a very good example because it just says Google,
because what if I, you know, what if I Googled something there?
And the beginning was the command line.
And so from here, if I'm on this page, this is Neil Stevenson's essay,
and let's say I'm copying a sentence from it,
first of all, I can, I can, yeah, I can do this.
You can say I can have block quotes, and I can put in block quote,
and then here I have source, and I have a keystroke that runs something called
org-mac-link-grabber or something like that,
and then this is actually now an org-link with the URL,
and the title of the page, like it's inserted automatically,
and I forgot the keystroke, but I have a function that actually pastes,
creates the block quote, pastes, and then types source,
and then grabs the URL automatically.
So that can be handy too.
I have so many things like this.
Every time, yeah.
I feel like, I feel like I can relate to you guys in this way,
which is that every time I do anything that's remotely tedious,
I'm like, I've got to be able to automate this,
and then I spend 10 times as long trying to find a solution
to make it happen automatically.
So I have so many things like this.
Oh yeah, you had a question. Sorry, coming back to you.
That has two little things.
First, your title of the window is music,
and I wonder if you can comment on that.
I should probably have changed that before I gave you this revision.
I just found, you know, oh yeah, okay.
This is because I switched from,
so where do you get your Emacs if you use a Mac?
I was getting it from a website called EmacsforMacOSX.com,
and I was downloading that,
and then I was reading online, people were saying,
well you know what's much better than that,
is this like railway cat Emacs,
because it has better font rendering, blah, blah, blah,
and it has the ability to, you can swipe things.
So I can swipe from, what do you call these frames?
Frame into frame, just by swiping, look at that.
And there's, you know, oh, I can also, I guess,
what's this called, I can pinch to,
I can pinch to shrink the text,
and I can, what's the opposite of pinch, I don't know.
I can do this, I can do this, to zoom.
So it has these, and also the fonts do look better,
because it has like some kind of, you know,
RGA graphics, graphics, something,
so they were like, oh, I switched them.
So then I did, and then I found that,
unlike new Emacs, where the title of my file,
in the old days, when I used new Emacs,
my file, document.txt, would go up here.
But that didn't happen with the railway cat Emacs,
instead, it just said Emacs at the top,
which is useless, why do I need that?
And I have different files open at different times,
so I Googled it, and there was a thing that said
to set the name of your file, what's it called,
the title of the window, title bar,
just modify this function,
and modify this variable, I should say,
like setqueue, variable, whatever it was, to this,
and here's the wildcard thing,
there's probably words for all of these,
for the actual file name,
and if you want to insert other string, you can.
So then I was just playing around with it,
and right now it says, hey bro, just fyi,
this file is called document.txt,
or something like that, where document.txt is just the title.
All right, I was just having fun with myself.
Yeah.
Yeah, I do have it online.
Oh, another thing that I use, by the way,
is I, this is called buffer stack,
this is so, yeah, this is so much time,
because instead of having to use Microsoft Word,
and like, oh, I want to open this file,
I can just page through them using,
I have it bound to command right, command left,
so these are all my relevant buffers,
and then things that are, you know,
compile windows, or, you know,
okay, I could actually see all, yeah, these things,
org agendas, scratch, messages, shell command output,
PDF output, I have those set to not be tracked by buffer stack,
so that when I'm paging through,
I only see the ones that are interesting to me, right?
That's useful.
I have a recent files thing that,
this is Helmode recent F open files,
so that's useful, just my most recent files.
I have, yeah, I'm remembering all these things.
I have bound to command backslash,
it opens the last file that was open in one keystroke,
so it can, you know, if I launch,
if I close the file,
I can also close the file, command F,
and if I'm like, oh, I need that, actually,
I can open it again.
So, big fish, kill buffer, closes,
or I can open it again in one keystroke.
That's useful.
I have projectile I'm starting to use,
which is, yeah, within this project,
all of the files, and then I can narrow that, right?
So that's useful.
And then somebody asked me something.
You have this online?
You want to see my e-max, right?
Yes, so I do, I do have it online.
I also have more than one.
I split it into two files originally
when I was using Aquamax, so these want,
this is shared, which is shared between
GNU e-max and Aquamax,
and then I have another one called
GNU e-max startup, which is just GNU e-max.
Although I don't use Aquamax anymore,
so I could consolidate them,
but then I started splitting it up again.
I have cosmetics here,
which is things like different fonts
and color themes and things like that.
And, oh yeah, the other thing is, as you can see,
I have my .e-max, I have my config files in org mode, right?
So these are headings,
and actually, here's a better one,
because I have headings and subheadings.
So that's really interesting to me,
because like org mode is,
like you can do executable synthesis,
but this is a really good way to coordinate.
Yeah, so these are.
For you, that's fascinating.
It's really cool.
I isolated, I did a thing
so that I could have both a kill ring
and a paste and like OS 10 paste.
So if I copy text from the web,
I can paste that,
but that's different from if I kill something,
so I can still copy and paste the same text from the web,
but if I want to paste it,
then I can paste separately from the kill ring.
So those are separate,
so I actually have two,
which actually comes in really handy.
Yeah, I should probably undo all that.
Yeah, I'm good.
Any other questions?
Yeah, just lock it.
I can share my GitHub repository
with my config files,
and then you guys can look at them
if you're interested,
and you can fix and clean up the code
because I don't know how to do it.
Thank you guys.
Thank you.
