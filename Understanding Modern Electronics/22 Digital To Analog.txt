Well, here we are in the midst of a series of lectures about digital electronics.
But we still live in an analog world.
And so our next two lectures are going to deal with the necessity of converting between
the digital electronics world and the analog world we live in.
How do we do those conversions?
And why do we need to do them at all?
Well, we do them largely these days because electronics is just increasingly digital.
It's easier to process digital information.
It's easier to store digital information.
Digital information gives us more bandwidth.
We can deal with more information at once.
Digital information is error-free, at least in terms of what the digital part does.
It may not be error-free in terms of what's coming into it.
So digital is better in many ways.
And increasingly, as you'll see in the final lecture, we actually use little miniature computers
to do almost all of our digital processing.
So we need to convert signals from the analog world into digital.
Sound, light intensity, electrical voltages, all kinds of things need to be, speed, temperature,
all kinds of things we want to convert to digital.
So how do we do that?
Well, the next two lectures, we'll deal with that question.
And we'll start here with digital to analog conversion, although that's not what we
need to do first to get into electronics from the analog world.
We wanted to do that because that one's easier, and we will be then doing analog to digital
in the next lecture, and that's going to be very sophisticated electronics, combining
a whole lot of what we've already done.
So let me begin with some examples and then pose the problem that digital to analog conversion
imposes on us.
So let's begin by thinking about a phone call.
What happens when you make a phone call on your cell phone?
Well, the first thing that happens is you talk and analog sound comes out of your mouth
in the form of vibrations of the air due to the vocal cords vibrating and sound resonating
in your vocal tract and so on.
And that's picked up by the microphone in your phone, and that goes through an amplifier,
an analog amplifier, like the sorts of amplifiers we dealt with much earlier in the course.
But the next thing after the amplifier is an analog to digital converter.
The analog to digital converter converts the sound intensities into a series of digital
numbers that represent those sound intensities.
It's got to do it pretty fast, as we'll talk about in the next lecture.
That then goes to a device called a modulator, which basically takes those ones and zeros
and uses them to alter in some way, turning on and off, or more likely altering slightly
the frequency of a radio frequency signal that's produced by a tiny little radio transmitter
inside your phone, and then that goes into your phone's antenna, which is also built
into the phone, and goes out over the airwaves and gets to a cell tower.
So that's the speaking end of things.
The cell tower picks up the signal, it cleans it up if need be, does some things to it,
and rebroadcasts it, by the way, using filters to distinguish it from other nearby frequencies
of other phone calls coming in, and it broadcasts it out to the recipient of your phone call.
And the recipient of your phone call has a radio receiver in her phone, and that radio
receiver picks up the radio signal, it goes through a demodulator, which extracts the
stream of ones and zeros that represents the digital information.
That goes through a digital to analog converter, the subject of this lecture, also called a
DAC, D-A-C, D-A converter, DAC, and I'll use the word DAC quite frequently.
The output of the DAC is an analog signal, a continuously varying voltage, that goes
into an amplifier, and goes into a speaker or headphones, and that produces output analog
sound.
So that's the anatomy of a phone call.
And a modern phone call, almost all phones these days, use this conversion to digital,
and so we have to convert the analog sound into digital, do various things to get it
out on a radio wave, pull it back down as a radio wave, demodulate it, and get it back
into analog, and then send it out through a loud speaker.
So that's the anatomy of a phone call.
What about music?
Well, music is similar.
Somebody sings into a microphone.
Analog sound comes out of their mouth, vibrations of the sound waves go through the air, go
into the microphone, that's amplified into an analog to digital converter.
In the old days, that might have been recorded to magnetic tape or burned directly to some
kind of device, but nowadays there's an analog to digital converter, and that analog to digital
converter does the same thing it does in the phone.
It converts that to a stream of ones and zeros that represent the intensity, or a stream
of binary digits, binary numbers that represent the intensity of that sound over time.
And nowadays that might be put on a server, namely some kind of long term storage device
of the type that we discussed in the lecture on computer memory.
And maybe that server is owned by an online store, and you connect to the online store,
and those bits come out to you over the internet.
By the way, they go through parallel to serial conversion because the internet deals with
data in a serial fashion.
It comes over the internet into your device, your mp3 player, your phone, whatever you
store your music on.
It's stored in flash memory after undergoing a serial to parallel conversion.
When you want to play your music, the flash memory dumps its contents sequentially, representing
the intensities of sound at different times into a digital to analog converter.
That goes into an amplifier, like we talked about in early lectures, an analog amplifier,
and that comes out your loudspeaker and makes the analog sound that you can hear.
So two examples where analog to digital and digital to analog conversion are essential.
And so we're going to abstract away from these now and talk in the rest of this lecture about
how we do the process of D to A conversion.
How do we make a DAC?
How do we make a digital to analog converter?
So here's the problem we face, the digital representation of a quantity, a time-varying
sound intensity, a time-varying temperature, a time-varying voltage, whatever it is, is
a sequence of binary numbers.
Here for example, I've shown a sequence of four-bit binary numbers which can distinguish
16 possible levels.
A CD, for example, has 16 bits in each of its numbers, so it records a 16-bit number
and it does so at the rate of about 44,000 times every second.
I'll talk more about that criterion in the next lecture.
So this is a very simplified D to A converter that's only going to convert with the precision
of 16 possible different levels, which is what you get out of four bits because there
are 16 different numbers from 0, 0, 0, 0 to 1, 1, 1, 1 from 0 to 15 that are representable
by a four-bit binary number.
We need to convert this into a continuously-varying analog voltage.
Now we've got a little bit of a problem because we know the sound intensity at this time and
we know it at a later time, but we don't know it right in between.
The more rapidly we sampled that sound, the more rapidly we converted analog information
to digital, the more accurately we know what was going on, but there's always gaps.
So we have to assume that those gaps fill in kind of continuously.
So we want to turn that string of digital numbers you see at the top into this roughly
sinusoidal-looking waveform we see at the bottom, a time-varying, continuously-varying voltage.
And I've picked those numbers so they roughly represent the levels on that curve.
You can see the 0, 0, 0, 0, which is the lowest number we've got, the lowest number possible
in four-bit binary, is right at the bottom of the curve and so on.
So how do we do that?
How do we make that conversion?
Well here's what we do.
One of the easiest ways to do it is to use what are called weighted currents.
And with weighted currents, we take each bit in the binary number and we use it to produce
a current.
And then we weight those currents by the significance of the bit.
The one's bit is the least significant.
It carries the least weight.
If you have a dollar and 27 cents, the seven is less significant than the two, and the
two is less significant than the one.
The hundreds is the most significant digit, and the seven is the least significant digit
in the decimal number 127.
Similarly, in a binary number, the one's bit is the least significant bit, sometimes
called the LSB, and whatever maximum number of bits you have, that's the most significant.
In the example I just gave you, the eighth's bit was the most significant bit.
So here's how we're going to do it.
We're going to weight the currents by the significance of the bit.
So a one at the one's bit is going to produce only 1 eighth the current of a one at the
eighth's bit.
Then we're going to take those currents, one for each bit, weighted by the significance
of that bit, which in binary means a factor of two between each one.
We're going to sum those currents and we're going to convert it to a voltage.
And the result is going to be an analog voltage corresponding to the binary number, the four
bit binary number that we fed into this device.
Well, how are we going to implement that?
Well, if you're thinking how do we make different currents flow for the same voltage, well resistors.
So we're going to implement this with precision weighted resistors.
We're not going to just grab random resistors off the shelf.
We're going to buy real expensive, very high precision resistors that have very accurate
values and we're going to use those to weight the currents that come from our device.
So let's go over to our big screen and look at an implementation of what's called a weighted
resistor DAC because it's going to use weighted resistors to weight the currents and that will
produce the analog output we're looking for.
So here's a very simple example of a weighted resistor DAC.
It's sort of a useless one right now because it dumps all its currents to ground, but bear
with me, we'll change that.
So in this particular DAC, I've got the eighth's bit going to ground through a 2.5 kilo ohm
resistor.
I've got the fourth's bit going to ground through a resistor that's twice as big and that means
a 1 at the fourth's bit will produce half the current of a 1 at the eighth's bit.
That's the weighting.
The two's bit goes through a 10,000 ohm resistor to ground and the one's bit through a 20,000
ohm resistor.
20,000 is, let's see, it's twice 10,000, it's 4 times 5,000 and it's 8 times 2.5,000.
And so these are weighted according to the significance of these bits in the binary scheme
of things.
Now it's crucially important that these resistors all see ground at the bottom ends.
If there were more resistance here, then the current flowing in the 20 ohm resistor and
the voltage at the bottom of the 20 kilo ohm resistor would be influenced by any other
currents coming along.
Because it's really crucial that they all dump to ground and that's why I've drawn them
all connected together, yes, but more importantly, all connected to ground.
There's another issue I want to bring up right away because in the circuits I'm going to
show you, I don't obey this rule.
You really need to be careful.
If you want a zero at one of these inputs, you really got to have exactly zero volts.
And if you want to make it be a one, you've got to have it be exactly a particular voltage
like, for example, five volts in a standard logic scheme.
I'm not going to do that in the circuits I build.
I'm going to use the outputs of commercial counting chips and other devices.
One time I'll use switches connected to five volts and then we'll be doing this accurately.
Normally, if you build a DAC, you would feed it with numbers that were precisely zero volts
or say five volts.
You wouldn't connect it directly to the output of a TTL integrated circuit whose zero level
could be anywhere between zero and point eight volts and whose one level is typically around
3.5 to five volts but could be even lower.
So don't do what I'm going to do.
You really have to put some extra circuitry in that carefully switch in exactly zero and
exactly five volts.
So the DAC I build you and show you won't be quite as accurate as it could be.
So here's our weighted resistor DAC and let's see what happens for several cases.
Let's consider the case where the digital input is a four-bit number N, that stands
for the four-bit number.
Zero corresponds to zero volts and one in this case is going to correspond to five volts
and I'm going to assume I've got a nice way of getting in accurately, either zero or five
volts coming in.
So let me start with an example.
There's zero one, zero one, no eights, one four, no twos, one one, that's four and one
is five so that's five base ten.
So let's see what comes out of this DAC or let's see what currents are generated in that
case.
So let's think about what happens when we put five volts across a five kilo ohm resistor.
Five volts here, zero volts here because it's at ground.
Well we know how to do that.
It's Ohm's law.
I four, the current in the bit four resistor is V five volts over five kilo ohms.
That's exactly one milliamp.
So that's the current that comes flowing through the four's bit resistor and that current continues
on its merry way to ground.
No current in the twos bit resistor, no current in the eights bit resistor because there are
zero volts at the top and zero volts at the bottom so there's no currents there.
But we do have five volts at the top of the ones bit.
That one means five volts.
That's the logic level.
Well five volts across twenty kilo ohms is five twentieth or one fourth of a milliamp
so we have point two five milliamps.
Now remember these currents don't know about each other.
They simply join in this wire all those electrons folding along electrons going the opposite
way but we won't worry about that.
And so those two currents merge and we have a total current of one point two five milliamps
flowing in this weighted resistor DAC.
Great.
Well that's what happens when we put in five, the number five.
Let's put in a different number.
Let's put in the number ten, decimal number ten.
One eight, no fours, one two, no ones.
That's one eight, that's eight plus one two, that's two, add them up you get ten.
So that's the binary representation of the decimal number ten and let's see what happens.
Well you put five volts across only two and a half kilo ohms you get twice as much current
as we did last time when we put it across five kilo ohms you get two milliamps flowing.
And you put five volts across ten kilo ohms, five tenths you get a half a milliamp flowing.
Remember how nicely it works out when you're using kilo ohms and volts the currents come
out automatically in milliamps you don't need to worry about factors of thousands and stuff.
So there we have two milliamps and those two currents happily flow to ground they don't
know about each other they simply combine to make a total current of two point five milliamps
flowing to ground.
Let's do one more, let's put the binary number four in corresponding to decimal number four
base ten.
Well we've got no eights, one four, no twos, no ones, that's the number four, zero one
zero zero is the number four expressed as a four bit binary.
So what happens here?
Well no current in any of the resistors except the four's bit resistor and that current is
again five volts over five kilo ohms which is one milliamp so we get a total current
of just one milliamp.
So we've looked at three cases here and let's just tabulate them.
Input number is four, number we got one milliamp, input number is five we got one point two
five milliamps, input number was ten we got twice what we got with five namely two point
five milliamps and if you look at that the current is one fourth of the digital input
number one, number n, four gives us one, five gives us a quarter of five or one point two
five, ten gives us a quarter of ten or two point five milliamps.
So this is a D to A converter that produces an output which is one fourth of its input
in current but we can't do anything with that current yet.
So now we want to take our weighted resistor DAC, same thing I've just drawn it a little
further over to the left here so we can add some more circuitry.
Remember it was crucial that we dumped everything into ground so these currents wouldn't interfere
with each other and we have this recognition that the total current in milliamps is n over
four.
Well this doesn't do us much good the currents are just all being lost to ground we could
put an ammeter here or something but that would be kind of a little bit clunky.
Let's take a circuit that we know about from earlier on when we were dealing with operational
amplifiers let's take a current to voltage converter.
Remember how this works?
We've got a virtual ground here so the resistors are all happy they think they're seeing ground
it's not really ground it's held at ground voltage by the feedback, the magic of feedback
in this operational amplifier.
Furthermore I put a four kilo ohm resistor here that means if I send one milliamp in
we will get a four volt drop across that resistor so one milliamp will give us four volts actually
minus four volts at the output.
There's a current to voltage converter back from lecture 13 and v out is minus i in the
current that's flowing in times our feedback in that case the current that was coming in
was n over four the binary number coming in divided by four and we're multiplying by
four kilo ohms and so that's minus n so the output voltage of this thing in volts is equal
to the binary number.
We didn't have to have that equality it's just nice for this purpose but you could obviously
scale it by any amount you want put an eight kilo ohm resistor I'd still get the scaling
right and if you don't like that negative let's just do one more thing let's put a unity
gain inverter on the end of it to ours the same remember this circuit it produces a gain
of feedback resistor divided by input resistor with a minus sign and so we flip that minus
sign and the output in volts is equal to the digital input number n.
That is a four bit weighted resistor DAC and now I'd like to show you what a weighted resistor
DAC actually looks like and how it works so let's go over to our demo table and talk
about what we have here so here I have a circuit which consists of four resistors you can see
four resistors right there those are my weighted resistors the 2.5 to 20 kilo ohm resistors
this black chip the integrated circuit is a 747 it's a dual 741 2 741 op amps in the
same package the resistors are the feedback resistor and the for the first one to make
it a current to voltage converter and the two resistors that make the inverter at the
end and the output of that I'm connecting over to here by this long wire over to here
and we're going to feed it later into the oscilloscope but right now we're feeding it
into an analog voltmeter and I really wanted to use my old fashioned analog voltmeter here
because what's the point of doing a digital analog conversion and then hooking up a digital
voltmeter to it and converting it all back to digital again so to be pure we've got this
old fashioned analog voltmeter now where are those resistors connected those resistors
currently are connected to four switches so the right most switch right most from your
point of view represents the ones bit the twos bit the fours bit it's the eight bit and they're
all currently off and that means we have zero volts coming into the inputs of all those
resistors in the weighted resistor deck and indeed the voltage is zero and if I turn the
lowest significant the least significant bit on turn on the one bit you'll see I get a
voltage that's on the order of one volt now remember it's not going to be perfect and
partly that's because I've adjusted it also to work with integrated circuit outputs approximately
but it'll be sort of approximate there's one there's two I get about two volts a little bit
more bring on the ones bit also I get a little bit over three volts drop it down to four and
drop drop the other two off and go up to the fours bit on more five six seven and it keeps
going up I can't go up all the way to the highest to having all switches on on the level on the
scale of that voltmeter but you see an output voltage that is proportional to the binary number
represented by the positions of those switches so we do indeed have a d to a converter and there's
a very simple demonstration of that d to a converter using an analog voltmeter now before
we move away from this simple circuit let me pause and reconfigure it a little bit to show you
some neat things you can do with simply a DAC okay well here we are we have the same DAC exactly
I haven't done anything to the DAC I've connected its output it was actually connected before to
the oscilloscope but I've now got the oscilloscope set to record that output I've still got the input
going to the light so you can see what binary number is coming in I've still got the output also
coming to the voltmeter the analog voltmeter the only difference is the input the binary inputs
to the DAC the four bits of input are now connected to the output of a counter the same counter I
introduced in the previous lecture this is the 74 190 decade counter so it counts 0 to 9 so it puts
in the binary digits 0 to 9 and if you watch the voltmeter you can see it jumping up in steady
increments and again it's not perfect that's partly because my resistors aren't perfectly weighted
it's also because the outputs of the counter are not required to be exactly 0 and 5 volts but
somewhere between 0 and 0.8 or about 3 and and 5 so we don't have quite nice even steps like we
should and again if we did more sophisticated circuitry and use some kind of digital or some
kind of electronic switching maybe MOSFET transistors to switch between 0 and 5 volts depending on
whether the output was a logic 1 or logic 0 the output of the counter things would work better but
that's a nice idea so you can see that happening everything is looking pretty much like it did
before except that the counter is now counting with a clock generated by the square wave generator
in this proto board here and so that is causing the count to continually advance causing the binary
numbers to change and if you watch that there we are at 0 1 2 3 4 5 6 7 8 9 and so on back to 0 so
that's working the analog meter is following that let me now turn up the frequency by a factor of
about a hundred and we get this beautiful pattern on the oscilloscope this nice staircase that tells
you immediately it's an up counter we're counting up we start out at 0 and each of these steps
represents an increase in the binary number at the output of the counter by 1 and correspondingly
the DAC produces an output which voltage which increases correspondingly now notice even though
it's a digital to analog converter it's not able to produce a continuous range of analog outputs
because it's only a 4-bit DAC it only has 16 possible states and in fact since it's driven by
this counter it has only about only 10 possible states right now we're having a little triggering
issue with the oscilloscope and so it's that's why and so we're jumping around a bit but there
it is you can see that nice beautiful staircase by the way we had a down counter what would you see
you'd see the same thing but going down and that gives you an idea for how you can make a
waveform generator of arbitrary waveform how do you do that you put some arbitrary set of binary
numbers into a memory and then you dump the memory sequentially to a DAC and the output is what is
an analog voltage corresponding to those binary numbers coming in for example the greeting you
record on your phone when you're not there hi this is me what is that well that's ultimately stored
in a memory in your phone and that number is that those set of numbers are dumped to a DAC in the
phone and that turns that into an analog voltage which runs the goes to the other runs the loud
speaker and that's your out of office greeting or out of your not home greeting so you can make
arbitrary waveform generators by dumping digital memory into a DAC now having said all that let's
talk a little bit more about digital to analog conversion before we wrap up because weighted
resistor DACs are not only not necessarily the DACs that are always used they're also not the
best DACs and here's why one reason is it's very hard to match precisely resistors that have very
different values so getting a 20 kilo ohm resistor and a 2.5 kilo ohm resistor and getting those two
numbers right is very difficult furthermore the more bits you want to convert the more the wider
the range of resistors so a better DAC is called the R2R ladder DAC and I'm not going to analyze it
on in all its detail but I'm going to convince you that it works this is a device that uses only two
different resistor values much easier to match here's what it looks like its analog output is
going to be a voltage rather than a current and there it is and we're going to see how it works
and because this device is a linear circuit all the components have currents and voltages that
are linearly related mathematically all we need to do is determine how it works for two values
and then we'll know it works linearly for all other values so let's consider what happens if we
connect 0 0 0 0 into this DAC and I've shown that by grounding with upside down ground symbols the
upper resistors well we got 0 everywhere and the output better be 0 and so the output I'm going to
claim is n over 16 in volts and indeed in this case it's 0 over 16 which is 0 and so that works so
we've confirmed one case 0 at the input let's look at another case let's put in the number 8
we'll put a 1 on the 8 spit 0 on the 4 0 on the 2 0 on the 1 and let's see what happens and here
we have a lot of fun with parallel and series resistors which you'll remember from early
lectures if you look at the right most two resistors you can flip the upper one around and
they are in fact in parallel and I've given you the formula there but remember that two
resistors of equal resistance in parallel give you half the resistance okay so now we have two
2r resistors in parallel that constitutes a resistance r it's in series with another resistance r
that gives us another 2r now we're back to that same configuration again with two 2r resistors
to ground so they're in parallel so that gives us a resistance r to ground that's in series with
another resistance r gives us 2r and now what we've got is two 2r resistors one connected to plus
the supply voltage one connected to ground that's a voltage divider with a division by 2 and so the
output in that case has got to be half the input and half the input is 1 half or 8 over 16 and so
we confirm that for this particular input this DAC also works and because it's linear it will then
work for any other combination and you can go through that complicated analysis if you'd like for
any other combination so a 2r 2r ladder is a better DAC and you can actually buy very precision
laser trimmed circuits with the resistors all built into them that are basically r 2r ladders to
use in building DACs but don't do that don't build a DAC you go out these days and you buy a simple
DAC now let me wrap up with one last example of a DAC before we do that let's look at what we would
do to our DAC to get the voltage out of it if we tried to draw current out of that DAC we would
change the currents through those resistors and that would change the DAC's operation so instead
we put a voltage follower from our lectures on analog circuits operational amplifiers in particular
just to allow the output to draw no current and so let's look now at one other kind of DAC and
there are many other kinds but here's what's actually probably in your smartphone in your MP3
player in your CD player it's a DAC called the Delta Sigma DAC and I'm not going to describe it in all
its gory detail but I am going to look at it here's what it has it has a digital input corresponding
to some number n some number of bits it's got a thing called a modulator and the modulator is a
circuit that looks at that digital number and produces another digital thing called a bit stream
which is a stream of bits which could be ones or zeros and what it does is make the relative
proportion of ones to zeros proportional to the value of the input number so I still have one
zero one zero on off on off coming out that's not analog but then I pass it through a low pass filter
a resistor capacitor network that we talked about very early in the course and that smooths out those
variations and produces an analog output voltage that is basically the average of all those bits
and the more bits are one the bigger that analog voltage so here for example the input number is
one zero zero base two that's four base ten and in this particular DAC which is going to go up to
eight it's a three-bit DAC the bit stream is going to have half the bits one and half the bit zero
and so the analog output is going to be on average half of whatever the voltage level is at the ones
let's call it V two and a half volts if it were five volts if the input is one zero zero one then
the bit stream has only one high level in it and when we low pass filter it we get only one eighth
of the whatever the voltage is and if the bit stream has one zero one which is five and decimal we
have five eighths of the bits are high and we get an output which is five eighths of the voltage
well that doesn't describe all its detail but that is how in fact the DAX in most common everyday
devices work and there are DAX in almost all the devices you have that produce analog outputs
because they're processing electronics digitally okay well now you can receive that phone call
because we understand at least the receiving end the D to A conversion in the next lecture we got
I get to the other end the analog to digital if you want to know more about DAX build one simulate
the four-bit weighted resistor DAC that I described in this lecture including both op amps and if
you want to test it I give you three possible ways to test it you could apply individually all 16
different combinations of binary inputs a bit tedious and you could run a DC simulation for each
combination and see what you get at the output you can do that you could connect the DAC inputs to
the outputs of the counter if you did the previous lectures project and made a counter well that
simulated counter could drive your DAC and you could look at the analog output and you or you
could simulate your counter with four different clocks or square wave generators running at
different frequencies to act like the output of a counter and I'll let you figure out how to do
that if you're working with circuit lab you can actually connect your DAC to digital circuits if
you're working with do circuits you may or may not be able to at the moment I'm recording this do
circuits doesn't have that capability but option three will still work and do circuits may have
that capability by the time you're doing this project
lecture 22 dealt with digitaled analog conversion so for your project I'd like you to build or
simulate the 4-bit weighted resistor d to a converter described in the lecture and include
the two op amps to give us a nice clean positive voltage output analog voltage output and then
test it and use one of the following options the really brute force option is to apply all 16
different combinations of binary inputs and run a DC simulation for each combination that
wouldn't be fun but you could do that you could connect your DAC inputs to the outputs of the
counter you simulated in lecture 21's project you can do that now in circuit lab you may not
may or may not be able to do it in do circuits at the time I'm recording this do circuits can't
mix analog and digital so that won't work in do circuits but what you could do in either one is to
simulate a counter with four clocks or square wave generators they're running at different
frequencies so they simulate the 16 possible bit patterns of a four-bit binary input so we'll
look at a few of these I'm not going to go through all 16 combinations but let's begin with a look
at the simulation in circuit lab taking that option number one where we're going to try all 16
different combinations except I'm not going to bother to do that I'm simply going to try one of
the possible combinations it's the binary number 0 1 0 1 that's no h 1 4 no 2s 1 1 so 4 and 1 is 5
I'm running it through the two op amps as I described in the lecture and I'm doing a DC simulation
and I've got a voltmeter at the output and lo and behold that voltmeter reads 4.991 volts which
is close enough to 5 that this has successfully converted the binary input number 5 to 5 volts
and you can build the circuit and you can fiddle with changing those ones and zeros at the input
and you'll see that it works but rather than doing that let's go to a more sophisticated way of
handling this and looking at the output of our counter so let me bring in the counter circuit
so here we are in circuit lab I've simply copied the 3-bit synchronous counter from the earlier
lecture and I coupled it into the DAC I've put dotted lines around them so you can see the two
of them and let's simulate this thing and we're going to look at the output of the DAC so here
we go we're going to run a time domain simulation run it and there's the output of the DAC it's
that beautiful scare staircase as the counter counts up and the DAC converts each successive
count into an analog voltage this is what we saw in the oscilloscope also a beautiful example of
how the DAC converts each of the 16 possible combinations actually it's not 16 in this case
it's 8 because we've got a 3-bit counter not a 4-bit counter if we had a 4-bit counter we could
do it with 16 okay that's in circuit lab let's look at the same thing in do circuits now do
circuits is again complicated because it has separate analog and digital parts and this is an
analog circuit if by the time you're doing this do circuits has merged those two you'll be able to
connect your counter to the DAC but for now we're going to do something slightly different what I've
done here is to simulate the clock or the count of a counter with four clocks that are running at
different frequencies the voltage labeled v8 is a square wave that is running at 1 eighth the
frequency of v1 and the other two at intermediate frequencies and so I'm going to run the simulation
because this is an analog circuit I can't use that beautiful display so I can't show you the
binary input as a number but I'm going to run the time domain analysis here we go takes a little
while it's a complicated circuit and there we are and we get the same beautiful staircase we happen
to get a down counting staircase and that is because the way I set up the four clocks and the way
the flip-flops trigger is such that we happen to go through the sequence going downward this one
does have 16 possible combinations because I trick I clocked all four bits and so we see six a
staircase of 16 possible cases so our D to a converter works and it works with a counter at
the input and that's a good thing because we're going to use that for the final project
